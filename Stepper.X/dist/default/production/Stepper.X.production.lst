

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Mon Mar 02 11:33:49 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 2.10
    12                           ; Generated 31/07/2019 GMT
    13                           ; 
    14                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F887 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  0008                     	;# 
    54  0009                     	;# 
    55  000A                     	;# 
    56  000B                     	;# 
    57  000C                     	;# 
    58  000D                     	;# 
    59  000E                     	;# 
    60  000E                     	;# 
    61  000F                     	;# 
    62  0010                     	;# 
    63  0011                     	;# 
    64  0012                     	;# 
    65  0013                     	;# 
    66  0014                     	;# 
    67  0015                     	;# 
    68  0015                     	;# 
    69  0016                     	;# 
    70  0017                     	;# 
    71  0018                     	;# 
    72  0019                     	;# 
    73  001A                     	;# 
    74  001B                     	;# 
    75  001B                     	;# 
    76  001C                     	;# 
    77  001D                     	;# 
    78  001E                     	;# 
    79  001F                     	;# 
    80  0081                     	;# 
    81  0085                     	;# 
    82  0086                     	;# 
    83  0087                     	;# 
    84  0088                     	;# 
    85  0089                     	;# 
    86  008C                     	;# 
    87  008D                     	;# 
    88  008E                     	;# 
    89  008F                     	;# 
    90  0090                     	;# 
    91  0091                     	;# 
    92  0092                     	;# 
    93  0093                     	;# 
    94  0093                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0095                     	;# 
    98  0096                     	;# 
    99  0097                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009A                     	;# 
   103  009B                     	;# 
   104  009C                     	;# 
   105  009D                     	;# 
   106  009E                     	;# 
   107  009F                     	;# 
   108  0105                     	;# 
   109  0107                     	;# 
   110  0108                     	;# 
   111  0109                     	;# 
   112  010C                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  0185                     	;# 
   118  0187                     	;# 
   119  0188                     	;# 
   120  0189                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  008F                     	;# 
   168  0090                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0093                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0095                     	;# 
   176  0096                     	;# 
   177  0097                     	;# 
   178  0098                     	;# 
   179  0099                     	;# 
   180  009A                     	;# 
   181  009B                     	;# 
   182  009C                     	;# 
   183  009D                     	;# 
   184  009E                     	;# 
   185  009F                     	;# 
   186  0105                     	;# 
   187  0107                     	;# 
   188  0108                     	;# 
   189  0109                     	;# 
   190  010C                     	;# 
   191  010C                     	;# 
   192  010D                     	;# 
   193  010E                     	;# 
   194  010F                     	;# 
   195  0185                     	;# 
   196  0187                     	;# 
   197  0188                     	;# 
   198  0189                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  0000                     	;# 
   202  0001                     	;# 
   203  0002                     	;# 
   204  0003                     	;# 
   205  0004                     	;# 
   206  0005                     	;# 
   207  0006                     	;# 
   208  0007                     	;# 
   209  0008                     	;# 
   210  0009                     	;# 
   211  000A                     	;# 
   212  000B                     	;# 
   213  000C                     	;# 
   214  000D                     	;# 
   215  000E                     	;# 
   216  000E                     	;# 
   217  000F                     	;# 
   218  0010                     	;# 
   219  0011                     	;# 
   220  0012                     	;# 
   221  0013                     	;# 
   222  0014                     	;# 
   223  0015                     	;# 
   224  0015                     	;# 
   225  0016                     	;# 
   226  0017                     	;# 
   227  0018                     	;# 
   228  0019                     	;# 
   229  001A                     	;# 
   230  001B                     	;# 
   231  001B                     	;# 
   232  001C                     	;# 
   233  001D                     	;# 
   234  001E                     	;# 
   235  001F                     	;# 
   236  0081                     	;# 
   237  0085                     	;# 
   238  0086                     	;# 
   239  0087                     	;# 
   240  0088                     	;# 
   241  0089                     	;# 
   242  008C                     	;# 
   243  008D                     	;# 
   244  008E                     	;# 
   245  008F                     	;# 
   246  0090                     	;# 
   247  0091                     	;# 
   248  0092                     	;# 
   249  0093                     	;# 
   250  0093                     	;# 
   251  0093                     	;# 
   252  0094                     	;# 
   253  0095                     	;# 
   254  0096                     	;# 
   255  0097                     	;# 
   256  0098                     	;# 
   257  0099                     	;# 
   258  009A                     	;# 
   259  009B                     	;# 
   260  009C                     	;# 
   261  009D                     	;# 
   262  009E                     	;# 
   263  009F                     	;# 
   264  0105                     	;# 
   265  0107                     	;# 
   266  0108                     	;# 
   267  0109                     	;# 
   268  010C                     	;# 
   269  010C                     	;# 
   270  010D                     	;# 
   271  010E                     	;# 
   272  010F                     	;# 
   273  0185                     	;# 
   274  0187                     	;# 
   275  0188                     	;# 
   276  0189                     	;# 
   277  018C                     	;# 
   278  018D                     	;# 
   279  0006                     _PORTB	set	6
   280  0030                     _RB0	set	48
   281  0033                     _RB3	set	51
   282  0032                     _RB2	set	50
   283  0031                     _RB1	set	49
   284  0086                     _TRISB	set	134
   285  008F                     _OSCCONbits	set	143
   286                           
   287                           ; #config settings
   288  0000                     
   289                           	psect	cinit
   290  07FC                     start_initialization:	
   291  07FC                     __initialization:	
   292  07FC                     end_of_initialization:	
   293                           ;End of C runtime variable initialization code
   294                           
   295  07FC                     __end_of__initialization:	
   296  07FC  0183               	clrf	3
   297  07FD  120A  118A  2F3A   	ljmp	_main	;jump to C main() function
   298                           
   299                           	psect	cstackCOMMON
   300  0070                     __pcstackCOMMON:	
   301  0070                     ?_setup:	
   302  0070                     ??_setup:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_wave_drive:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?_main:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     wave_drive@steps:	
   312                           ; 1 bytes @ 0x0
   313                           
   314                           
   315                           ; 2 bytes @ 0x0
   316  0070                     	ds	2
   317  0072                     ??_wave_drive:	
   318                           
   319                           ; 1 bytes @ 0x2
   320  0072                     	ds	1
   321  0073                     wave_drive@i:	
   322                           
   323                           ; 2 bytes @ 0x3
   324  0073                     	ds	2
   325  0075                     wave_drive@direction:	
   326                           
   327                           ; 1 bytes @ 0x5
   328  0075                     	ds	1
   329  0076                     wave_drive@count:	
   330                           
   331                           ; 2 bytes @ 0x6
   332  0076                     	ds	2
   333  0078                     ??_main:	
   334                           
   335                           ; 1 bytes @ 0x8
   336  0078                     	ds	2
   337                           
   338                           	psect	maintext
   339  073A                     __pmaintext:	
   340 ;;
   341 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   342 ;;
   343 ;; *************** function _main *****************
   344 ;; Defined at:
   345 ;;		line 38 in file "mainStepper.c"
   346 ;; Parameters:    Size  Location     Type
   347 ;;		None
   348 ;; Auto vars:     Size  Location     Type
   349 ;;		None
   350 ;; Return value:  Size  Location     Type
   351 ;;                  1    wreg      void 
   352 ;; Registers used:
   353 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   354 ;; Tracked objects:
   355 ;;		On entry : B00/0
   356 ;;		On exit  : 0/0
   357 ;;		Unchanged: 0/0
   358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   359 ;;      Params:         0       0       0       0       0
   360 ;;      Locals:         0       0       0       0       0
   361 ;;      Temps:          2       0       0       0       0
   362 ;;      Totals:         2       0       0       0       0
   363 ;;Total ram usage:        2 bytes
   364 ;; Hardware stack levels required when called:    1
   365 ;; This function calls:
   366 ;;		_setup
   367 ;;		_wave_drive
   368 ;; This function is called by:
   369 ;;		Startup code after reset
   370 ;; This function uses a non-reentrant model
   371 ;;
   372                           
   373                           
   374                           ;psect for function _main
   375  073A                     _main:	
   376  073A                     l789:	
   377                           ;incstack = 0
   378                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   379                           
   380                           
   381                           ;mainStepper.c: 39:     setup();
   382  073A  120A  118A  272F  120A  118A  	fcall	_setup
   383  073F                     l791:	
   384                           
   385                           ;mainStepper.c: 41:         wave_drive (1, 2048);
   386  073F  3000               	movlw	0
   387  0740  00F0               	movwf	wave_drive@steps
   388  0741  3008               	movlw	8
   389  0742  00F1               	movwf	wave_drive@steps+1
   390  0743  3001               	movlw	1
   391  0744  120A  118A  2755  120A  118A  	fcall	_wave_drive
   392  0749                     l793:	
   393                           
   394                           ;mainStepper.c: 42:         _delay((unsigned long)((1000)*(500000/4000.0)));
   395  0749  30A3               	movlw	163
   396  074A  00F9               	movwf	??_main+1
   397  074B  3055               	movlw	85
   398  074C  00F8               	movwf	??_main
   399  074D                     u77:	
   400  074D  0BF8               	decfsz	??_main,f
   401  074E  2F4D               	goto	u77
   402  074F  0BF9               	decfsz	??_main+1,f
   403  0750  2F4D               	goto	u77
   404  0751  2F3F               	goto	l791
   405  0752  120A  118A  2800   	ljmp	start
   406  0755                     __end_of_main:	
   407                           
   408                           	psect	text1
   409  0755                     __ptext1:	
   410 ;; *************** function _wave_drive *****************
   411 ;; Defined at:
   412 ;;		line 6 in file "Stepper.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;  direction       1    wreg     unsigned char 
   415 ;;  steps           2    0[COMMON] int 
   416 ;; Auto vars:     Size  Location     Type
   417 ;;  direction       1    5[COMMON] unsigned char 
   418 ;;  i               2    3[COMMON] int 
   419 ;;  count           2    6[COMMON] int 
   420 ;; Return value:  Size  Location     Type
   421 ;;                  1    wreg      void 
   422 ;; Registers used:
   423 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   424 ;; Tracked objects:
   425 ;;		On entry : 0/0
   426 ;;		On exit  : 0/0
   427 ;;		Unchanged: 0/0
   428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   429 ;;      Params:         2       0       0       0       0
   430 ;;      Locals:         5       0       0       0       0
   431 ;;      Temps:          1       0       0       0       0
   432 ;;      Totals:         8       0       0       0       0
   433 ;;Total ram usage:        8 bytes
   434 ;; Hardware stack levels used:    1
   435 ;; This function calls:
   436 ;;		Nothing
   437 ;; This function is called by:
   438 ;;		_main
   439 ;; This function uses a non-reentrant model
   440 ;;
   441                           
   442                           
   443                           ;psect for function _wave_drive
   444  0755                     _wave_drive:	
   445                           
   446                           ;incstack = 0
   447                           ; Regs used in _wave_drive: [wreg-fsr0h+status,2+status,0]
   448                           ;wave_drive@direction stored from wreg
   449  0755  00F5               	movwf	wave_drive@direction
   450  0756                     l743:	
   451                           
   452                           ;Stepper.c: 7:     int count = 0;
   453  0756  01F6               	clrf	wave_drive@count
   454  0757  01F7               	clrf	wave_drive@count+1
   455                           
   456                           ;Stepper.c: 8:     for (int i = 0; i <= steps; i++){
   457  0758  01F3               	clrf	wave_drive@i
   458  0759  01F4               	clrf	wave_drive@i+1
   459  075A  2FED               	goto	l36
   460  075B                     l745:	
   461                           
   462                           ;Stepper.c: 9:         if (direction == 1){
   463  075B  0375               	decf	wave_drive@direction,w
   464  075C  1D03               	btfss	3,2
   465  075D  2F5F               	goto	u41
   466  075E  2F60               	goto	u40
   467  075F                     u41:	
   468  075F  2FA0               	goto	l763
   469  0760                     u40:	
   470  0760  2F8D               	goto	l761
   471  0761                     l40:	
   472                           ;Stepper.c: 11:                 case 0:
   473                           
   474                           
   475                           ;Stepper.c: 12:                     RB1 = 0;
   476  0761  1283               	bcf	3,5	;RP0=0, select bank0
   477  0762  1303               	bcf	3,6	;RP1=0, select bank0
   478  0763  1086               	bcf	6,1	;volatile
   479                           
   480                           ;Stepper.c: 13:                     RB2 = 0;
   481  0764  1106               	bcf	6,2	;volatile
   482                           
   483                           ;Stepper.c: 14:                     RB3 = 0;
   484  0765  1186               	bcf	6,3	;volatile
   485                           
   486                           ;Stepper.c: 15:                     RB0 = 1;
   487  0766  1406               	bsf	6,0	;volatile
   488  0767                     l749:	
   489                           
   490                           ;Stepper.c: 16:                     _delay((unsigned long)((2)*(500000/4000.0)));
   491  0767  3053               	movlw	83
   492  0768  00F2               	movwf	??_wave_drive
   493  0769                     u87:	
   494  0769  0BF2               	decfsz	??_wave_drive,f
   495  076A  2F69               	goto	u87
   496                           
   497                           ;Stepper.c: 17:                     count += 1;
   498  076B  3001               	movlw	1
   499  076C  07F6               	addwf	wave_drive@count,f
   500  076D  1803               	skipnc
   501  076E  0AF7               	incf	wave_drive@count+1,f
   502  076F  3000               	movlw	0
   503  0770  07F7               	addwf	wave_drive@count+1,f
   504                           
   505                           ;Stepper.c: 18:                     break;
   506  0771  2FA0               	goto	l763
   507  0772                     l42:	
   508                           ;Stepper.c: 19:                 case 1:
   509                           
   510                           
   511                           ;Stepper.c: 20:                     RB0 = 0;
   512  0772  1283               	bcf	3,5	;RP0=0, select bank0
   513  0773  1303               	bcf	3,6	;RP1=0, select bank0
   514  0774  1006               	bcf	6,0	;volatile
   515                           
   516                           ;Stepper.c: 21:                     RB2 = 0;
   517  0775  1106               	bcf	6,2	;volatile
   518                           
   519                           ;Stepper.c: 22:                     RB3 = 0;
   520  0776  1186               	bcf	6,3	;volatile
   521                           
   522                           ;Stepper.c: 23:                     RB1 = 1;
   523  0777  1486               	bsf	6,1	;volatile
   524  0778  2F67               	goto	l749
   525  0779                     l43:	
   526                           ;Stepper.c: 27:                 case 2:
   527                           
   528                           
   529                           ;Stepper.c: 28:                     RB0 = 0;
   530  0779  1283               	bcf	3,5	;RP0=0, select bank0
   531  077A  1303               	bcf	3,6	;RP1=0, select bank0
   532  077B  1006               	bcf	6,0	;volatile
   533                           
   534                           ;Stepper.c: 29:                     RB1 = 0;
   535  077C  1086               	bcf	6,1	;volatile
   536                           
   537                           ;Stepper.c: 30:                     RB3 = 0;
   538  077D  1186               	bcf	6,3	;volatile
   539                           
   540                           ;Stepper.c: 31:                     RB2 = 1;
   541  077E  1506               	bsf	6,2	;volatile
   542  077F  2F67               	goto	l749
   543  0780                     l44:	
   544                           ;Stepper.c: 35:                 case 3:
   545                           
   546                           
   547                           ;Stepper.c: 36:                     RB0 = 0;
   548  0780  1283               	bcf	3,5	;RP0=0, select bank0
   549  0781  1303               	bcf	3,6	;RP1=0, select bank0
   550  0782  1006               	bcf	6,0	;volatile
   551                           
   552                           ;Stepper.c: 37:                     RB1 = 0;
   553  0783  1086               	bcf	6,1	;volatile
   554                           
   555                           ;Stepper.c: 38:                     RB2 = 0;
   556  0784  1106               	bcf	6,2	;volatile
   557                           
   558                           ;Stepper.c: 39:                     RB3 = 1;
   559  0785  1586               	bsf	6,3	;volatile
   560  0786                     l755:	
   561                           
   562                           ;Stepper.c: 40:                     _delay((unsigned long)((2)*(500000/4000.0)));
   563  0786  3053               	movlw	83
   564  0787  00F2               	movwf	??_wave_drive
   565  0788                     u97:	
   566  0788  0BF2               	decfsz	??_wave_drive,f
   567  0789  2F88               	goto	u97
   568  078A                     l757:	
   569                           
   570                           ;Stepper.c: 41:                     count = 0;
   571  078A  01F6               	clrf	wave_drive@count
   572  078B  01F7               	clrf	wave_drive@count+1
   573                           
   574                           ;Stepper.c: 42:                     break;
   575  078C  2FA0               	goto	l763
   576  078D                     l761:	
   577                           
   578                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   579                           ; Switch size 1, requested type "simple"
   580                           ; Number of cases is 1, Range of values is 0 to 0
   581                           ; switch strategies available:
   582                           ; Name         Instructions Cycles
   583                           ; simple_byte            4     3 (average)
   584                           ; direct_byte           11     8 (fixed)
   585                           ; jumptable            260     6 (fixed)
   586                           ;	Chosen strategy is simple_byte
   587  078D  0877               	movf	wave_drive@count+1,w
   588  078E  3A00               	xorlw	0	; case 0
   589  078F  1903               	skipnz
   590  0790  2F92               	goto	l835
   591  0791  2FA0               	goto	l763
   592  0792                     l835:	
   593                           
   594                           ; Switch size 1, requested type "simple"
   595                           ; Number of cases is 4, Range of values is 0 to 3
   596                           ; switch strategies available:
   597                           ; Name         Instructions Cycles
   598                           ; simple_byte           13     7 (average)
   599                           ; direct_byte           20     8 (fixed)
   600                           ; jumptable            260     6 (fixed)
   601                           ;	Chosen strategy is simple_byte
   602  0792  0876               	movf	wave_drive@count,w
   603  0793  3A00               	xorlw	0	; case 0
   604  0794  1903               	skipnz
   605  0795  2F61               	goto	l40
   606  0796  3A01               	xorlw	1	; case 1
   607  0797  1903               	skipnz
   608  0798  2F72               	goto	l42
   609  0799  3A03               	xorlw	3	; case 2
   610  079A  1903               	skipnz
   611  079B  2F79               	goto	l43
   612  079C  3A01               	xorlw	1	; case 3
   613  079D  1903               	skipnz
   614  079E  2F80               	goto	l44
   615  079F  2FA0               	goto	l763
   616  07A0                     l763:	
   617                           
   618                           ;Stepper.c: 45:         if (direction == 0){
   619  07A0  0875               	movf	wave_drive@direction,w
   620  07A1  1D03               	btfss	3,2
   621  07A2  2FA4               	goto	u51
   622  07A3  2FA5               	goto	u50
   623  07A4                     u51:	
   624  07A4  2FE7               	goto	l779
   625  07A5                     u50:	
   626  07A5  2FD4               	goto	l777
   627  07A6                     l47:	
   628                           ;Stepper.c: 47:                 case 0:
   629                           
   630                           
   631                           ;Stepper.c: 48:                     RB1 = 0;
   632  07A6  1283               	bcf	3,5	;RP0=0, select bank0
   633  07A7  1303               	bcf	3,6	;RP1=0, select bank0
   634  07A8  1086               	bcf	6,1	;volatile
   635                           
   636                           ;Stepper.c: 49:                     RB2 = 0;
   637  07A9  1106               	bcf	6,2	;volatile
   638                           
   639                           ;Stepper.c: 50:                     RB0 = 0;
   640  07AA  1006               	bcf	6,0	;volatile
   641                           
   642                           ;Stepper.c: 51:                     RB3 = 1;
   643  07AB  1586               	bsf	6,3	;volatile
   644  07AC                     l767:	
   645                           
   646                           ;Stepper.c: 52:                     _delay((unsigned long)((2)*(500000/4000.0)));
   647  07AC  3053               	movlw	83
   648  07AD  00F2               	movwf	??_wave_drive
   649  07AE                     u107:	
   650  07AE  0BF2               	decfsz	??_wave_drive,f
   651  07AF  2FAE               	goto	u107
   652                           
   653                           ;Stepper.c: 53:                     count += 1;
   654  07B0  3001               	movlw	1
   655  07B1  07F6               	addwf	wave_drive@count,f
   656  07B2  1803               	skipnc
   657  07B3  0AF7               	incf	wave_drive@count+1,f
   658  07B4  3000               	movlw	0
   659  07B5  07F7               	addwf	wave_drive@count+1,f
   660                           
   661                           ;Stepper.c: 54:                     break;
   662  07B6  2FE7               	goto	l779
   663  07B7                     l49:	
   664                           ;Stepper.c: 55:                 case 1:
   665                           
   666                           
   667                           ;Stepper.c: 56:                     RB0 = 0;
   668  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   669  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   670  07B9  1006               	bcf	6,0	;volatile
   671                           
   672                           ;Stepper.c: 57:                     RB1 = 0;
   673  07BA  1086               	bcf	6,1	;volatile
   674                           
   675                           ;Stepper.c: 58:                     RB3 = 0;
   676  07BB  1186               	bcf	6,3	;volatile
   677                           
   678                           ;Stepper.c: 59:                     RB2 = 1;
   679  07BC  1506               	bsf	6,2	;volatile
   680  07BD  2FAC               	goto	l767
   681  07BE                     l50:	
   682                           ;Stepper.c: 63:                 case 2:
   683                           
   684                           
   685                           ;Stepper.c: 64:                     RB0 = 0;
   686  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   687  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   688  07C0  1006               	bcf	6,0	;volatile
   689                           
   690                           ;Stepper.c: 65:                     RB2 = 0;
   691  07C1  1106               	bcf	6,2	;volatile
   692                           
   693                           ;Stepper.c: 66:                     RB3 = 0;
   694  07C2  1186               	bcf	6,3	;volatile
   695                           
   696                           ;Stepper.c: 67:                     RB1 = 1;
   697  07C3  1486               	bsf	6,1	;volatile
   698  07C4  2FAC               	goto	l767
   699  07C5                     l51:	
   700                           ;Stepper.c: 71:                 case 3:
   701                           
   702                           
   703                           ;Stepper.c: 72:                     RB3 = 0;
   704  07C5  1283               	bcf	3,5	;RP0=0, select bank0
   705  07C6  1303               	bcf	3,6	;RP1=0, select bank0
   706  07C7  1186               	bcf	6,3	;volatile
   707                           
   708                           ;Stepper.c: 73:                     RB1 = 0;
   709  07C8  1086               	bcf	6,1	;volatile
   710                           
   711                           ;Stepper.c: 74:                     RB2 = 0;
   712  07C9  1106               	bcf	6,2	;volatile
   713                           
   714                           ;Stepper.c: 75:                     RB0 = 1;
   715  07CA  1406               	bsf	6,0	;volatile
   716  07CB                     l773:	
   717                           
   718                           ;Stepper.c: 76:                     _delay((unsigned long)((2)*(500000/4000.0)));
   719  07CB  3053               	movlw	83
   720  07CC  00F2               	movwf	??_wave_drive
   721  07CD                     u117:	
   722  07CD  0BF2               	decfsz	??_wave_drive,f
   723  07CE  2FCD               	goto	u117
   724                           
   725                           ;Stepper.c: 77:                     count = 1;
   726  07CF  3001               	movlw	1
   727  07D0  00F6               	movwf	wave_drive@count
   728  07D1  3000               	movlw	0
   729  07D2  00F7               	movwf	wave_drive@count+1
   730                           
   731                           ;Stepper.c: 78:                     break;
   732  07D3  2FE7               	goto	l779
   733  07D4                     l777:	
   734                           
   735                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   736                           ; Switch size 1, requested type "simple"
   737                           ; Number of cases is 1, Range of values is 0 to 0
   738                           ; switch strategies available:
   739                           ; Name         Instructions Cycles
   740                           ; simple_byte            4     3 (average)
   741                           ; direct_byte           11     8 (fixed)
   742                           ; jumptable            260     6 (fixed)
   743                           ;	Chosen strategy is simple_byte
   744  07D4  0877               	movf	wave_drive@count+1,w
   745  07D5  3A00               	xorlw	0	; case 0
   746  07D6  1903               	skipnz
   747  07D7  2FD9               	goto	l837
   748  07D8  2FE7               	goto	l779
   749  07D9                     l837:	
   750                           
   751                           ; Switch size 1, requested type "simple"
   752                           ; Number of cases is 4, Range of values is 0 to 3
   753                           ; switch strategies available:
   754                           ; Name         Instructions Cycles
   755                           ; simple_byte           13     7 (average)
   756                           ; direct_byte           20     8 (fixed)
   757                           ; jumptable            260     6 (fixed)
   758                           ;	Chosen strategy is simple_byte
   759  07D9  0876               	movf	wave_drive@count,w
   760  07DA  3A00               	xorlw	0	; case 0
   761  07DB  1903               	skipnz
   762  07DC  2FA6               	goto	l47
   763  07DD  3A01               	xorlw	1	; case 1
   764  07DE  1903               	skipnz
   765  07DF  2FB7               	goto	l49
   766  07E0  3A03               	xorlw	3	; case 2
   767  07E1  1903               	skipnz
   768  07E2  2FBE               	goto	l50
   769  07E3  3A01               	xorlw	1	; case 3
   770  07E4  1903               	skipnz
   771  07E5  2FC5               	goto	l51
   772  07E6  2FE7               	goto	l779
   773  07E7                     l779:	
   774                           
   775                           ;Stepper.c: 81:     }
   776  07E7  3001               	movlw	1
   777  07E8  07F3               	addwf	wave_drive@i,f
   778  07E9  1803               	skipnc
   779  07EA  0AF4               	incf	wave_drive@i+1,f
   780  07EB  3000               	movlw	0
   781  07EC  07F4               	addwf	wave_drive@i+1,f
   782  07ED                     l36:	
   783  07ED  0871               	movf	wave_drive@steps+1,w
   784  07EE  3A80               	xorlw	128
   785  07EF  00F2               	movwf	??_wave_drive
   786  07F0  0874               	movf	wave_drive@i+1,w
   787  07F1  3A80               	xorlw	128
   788  07F2  0272               	subwf	??_wave_drive,w
   789  07F3  1D03               	skipz
   790  07F4  2FF7               	goto	u65
   791  07F5  0873               	movf	wave_drive@i,w
   792  07F6  0270               	subwf	wave_drive@steps,w
   793  07F7                     u65:	
   794  07F7  1803               	skipnc
   795  07F8  2FFA               	goto	u61
   796  07F9  2FFB               	goto	u60
   797  07FA                     u61:	
   798  07FA  2F5B               	goto	l745
   799  07FB                     u60:	
   800  07FB                     l53:	
   801  07FB  0008               	return
   802  07FC                     __end_of_wave_drive:	
   803                           
   804                           	psect	text2
   805  072F                     __ptext2:	
   806 ;; *************** function _setup *****************
   807 ;; Defined at:
   808 ;;		line 47 in file "mainStepper.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0
   824 ;;      Temps:          0       0       0       0       0
   825 ;;      Totals:         0       0       0       0       0
   826 ;;Total ram usage:        0 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; This function calls:
   829 ;;		Nothing
   830 ;; This function is called by:
   831 ;;		_main
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           
   835                           
   836                           ;psect for function _setup
   837  072F                     _setup:	
   838  072F                     l645:	
   839                           ;incstack = 0
   840                           ; Regs used in _setup: [wreg+status,2+status,0]
   841                           
   842                           
   843                           ;mainStepper.c: 49:     OSCCONbits.IRCF = 3;
   844  072F  1683               	bsf	3,5	;RP0=1, select bank1
   845  0730  1303               	bcf	3,6	;RP1=0, select bank1
   846  0731  080F               	movf	15,w	;volatile
   847  0732  398F               	andlw	-113
   848  0733  3830               	iorlw	48
   849  0734  008F               	movwf	15	;volatile
   850  0735                     l647:	
   851                           
   852                           ;mainStepper.c: 52:     TRISB = 0;
   853  0735  0186               	clrf	6	;volatile
   854  0736                     l649:	
   855                           
   856                           ;mainStepper.c: 53:     PORTB = 0;
   857  0736  1283               	bcf	3,5	;RP0=0, select bank0
   858  0737  1303               	bcf	3,6	;RP1=0, select bank0
   859  0738  0186               	clrf	6	;volatile
   860  0739                     l23:	
   861  0739  0008               	return
   862  073A                     __end_of_setup:	
   863  007E                     btemp	set	126	;btemp
   864  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_wave_drive

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     219
                                              8 COMMON     2     2      0
                              _setup
                         _wave_drive
 ---------------------------------------------------------------------------------
 (1) _wave_drive                                           8     6      2     219
                                              0 COMMON     8     6      2
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _wave_drive

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Mon Mar 02 11:33:49 2020

             __CFG_CP$OFF 0000                        l23 0739                        l40 0761  
                      l50 07BE                        l42 0772                        l51 07C5  
                      l43 0779                        l44 0780                        l36 07ED  
                      l53 07FB                        l47 07A6                        l49 07B7  
                      u40 0760                        u41 075F                        u50 07A5  
                      u51 07A4                        u60 07FB                        u61 07FA  
                      u65 07F7                        u77 074D                        u87 0769  
                      u97 0788       wave_drive@direction 0075                       l645 072F  
                     l647 0735                       l743 0756                       l649 0736  
                     l761 078D                       l745 075B                       l835 0792  
                     l755 0786                       l763 07A0                       l837 07D9  
                     l773 07CB                       l757 078A                       l749 0767  
                     l767 07AC                       l791 073F                       l777 07D4  
                     l793 0749                       l779 07E7                       l789 073A  
                     _RB0 0030                       _RB1 0031                       _RB2 0032  
                     _RB3 0033                       u107 07AE                       u117 07CD  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 073A                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _PORTB 0006                     _TRISB 0086            __CFG_FCMEN$OFF 0000  
                   _setup 072F            __CFG_BOREN$OFF 0000                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07FC  
            __end_of_main 0755                    ??_main 0078                    ?_setup 0070  
          __CFG_PWRTE$OFF 0000   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 073A                   ??_setup 0070           wave_drive@count 0076  
         wave_drive@steps 0070                __pmaintext 073A                   __ptext1 0755  
                 __ptext2 072F      end_of_initialization 07FC                _wave_drive 0755  
             wave_drive@i 0073       start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000  
             ?_wave_drive 0070                 ___latbits 0002            __size_of_setup 000B  
     __size_of_wave_drive 00A7         __CFG_BOR4V$BOR40V 0000             __size_of_main 001B  
            ??_wave_drive 0072        __end_of_wave_drive 07FC                _OSCCONbits 008F  
