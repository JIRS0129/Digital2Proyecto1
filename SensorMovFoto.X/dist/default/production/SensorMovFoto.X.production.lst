

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Mar 07 10:39:34 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     	FNCALL	_main,_ADC
   556                           	FNCALL	_main,_LeerADC
   557                           	FNCALL	_main,_inicio
   558                           	FNCALL	_main,_setup
   559                           	FNCALL	_setup,_I2C_Slave_Init
   560                           	FNCALL	_LeerADC,___flge
   561                           	FNCALL	_LeerADC,___xxtofl
   562                           	FNROOT	_main
   563                           	FNCALL	_isr,___awmod
   564                           	FNCALL	_isr,___fltol
   565                           	FNCALL	intlevel1,_isr
   566                           	global	intlevel1
   567                           	FNROOT	intlevel1
   568                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   569                           global __pidataBANK0
   570                           __pidataBANK0:
   571  0452                     	file	"./HeaderSensorMovFoto.h"
   572                           	line	39
   573                           
   574                           ;initializer for _ADCcomp2
   575                           	retlw	0Fh
   576  0452  340F               	line	38
   577                           
   578                           ;initializer for _ADCcomp1
   579                           	retlw	0F0h
   580  0453  34F0               	global	_counter
   581                           	global	_SendSignal
   582                           	global	_select
   583                           	global	_ValorADC
   584                           	global	_Signal
   585                           	global	_z
   586                           	global	_varADC
   587                           	global	_Signal2
   588                           	global	_VarMOV
   589                           psect	nvBANK0,class=BANK0,space=1,noexec
   590                           global __pnvBANK0
   591                           __pnvBANK0:
   592  0061                     _VarMOV:
   593  0061                            ds      1
   594  0061                     
   595                           	global	_PORTBbits
   596                           _PORTBbits	set	0x6
   597  0006                     	global	_SSPCONbits
   598                           _SSPCONbits	set	0x14
   599  0014                     	global	_PORTD
   600                           _PORTD	set	0x8
   601  0008                     	global	_PORTC
   602                           _PORTC	set	0x7
   603  0007                     	global	_PORTB
   604                           _PORTB	set	0x6
   605  0006                     	global	_PORTA
   606                           _PORTA	set	0x5
   607  0005                     	global	_SSPBUF
   608                           _SSPBUF	set	0x13
   609  0013                     	global	_SSPCON
   610                           _SSPCON	set	0x14
   611  0014                     	global	_ADRESH
   612                           _ADRESH	set	0x1E
   613  001E                     	global	_ADCON0bits
   614                           _ADCON0bits	set	0x1F
   615  001F                     	global	_ADCON0
   616                           _ADCON0	set	0x1F
   617  001F                     	global	_PIR1bits
   618                           _PIR1bits	set	0xC
   619  000C                     	global	_INTCONbits
   620                           _INTCONbits	set	0xB
   621  000B                     	global	_SSPIF
   622                           _SSPIF	set	0x63
   623  0063                     	global	_PEIE
   624                           _PEIE	set	0x5E
   625  005E                     	global	_GIE
   626                           _GIE	set	0x5F
   627  005F                     	global	_SSPSTATbits
   628                           _SSPSTATbits	set	0x94
   629  0094                     	global	_TRISD
   630                           _TRISD	set	0x88
   631  0088                     	global	_TRISC
   632                           _TRISC	set	0x87
   633  0087                     	global	_TRISB
   634                           _TRISB	set	0x86
   635  0086                     	global	_TRISA
   636                           _TRISA	set	0x85
   637  0085                     	global	_SSPCON2bits
   638                           _SSPCON2bits	set	0x91
   639  0091                     	global	_TRISCbits
   640                           _TRISCbits	set	0x87
   641  0087                     	global	_SSPSTAT
   642                           _SSPSTAT	set	0x94
   643  0094                     	global	_SSPADD
   644                           _SSPADD	set	0x93
   645  0093                     	global	_SSPCON2
   646                           _SSPCON2	set	0x91
   647  0091                     	global	_ADCON1bits
   648                           _ADCON1bits	set	0x9F
   649  009F                     	global	_PIE1bits
   650                           _PIE1bits	set	0x8C
   651  008C                     	global	_BF
   652                           _BF	set	0x4A0
   653  04A0                     	global	_SSPIE
   654                           _SSPIE	set	0x463
   655  0463                     	global	_TRISC4
   656                           _TRISC4	set	0x43C
   657  043C                     	global	_TRISC3
   658                           _TRISC3	set	0x43B
   659  043B                     	global	_ANSELH
   660                           _ANSELH	set	0x189
   661  0189                     	global	_ANSEL
   662                           _ANSEL	set	0x188
   663  0188                     ; #config settings
   664                           global __CFG_FOSC$INTRC_NOCLKOUT
   665                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   666  0000                     global __CFG_WDTE$OFF
   667                           __CFG_WDTE$OFF equ 0x0
   668  0000                     global __CFG_PWRTE$OFF
   669                           __CFG_PWRTE$OFF equ 0x0
   670  0000                     global __CFG_MCLRE$OFF
   671                           __CFG_MCLRE$OFF equ 0x0
   672  0000                     global __CFG_CP$OFF
   673                           __CFG_CP$OFF equ 0x0
   674  0000                     global __CFG_CPD$OFF
   675                           __CFG_CPD$OFF equ 0x0
   676  0000                     global __CFG_BOREN$OFF
   677                           __CFG_BOREN$OFF equ 0x0
   678  0000                     global __CFG_IESO$OFF
   679                           __CFG_IESO$OFF equ 0x0
   680  0000                     global __CFG_FCMEN$OFF
   681                           __CFG_FCMEN$OFF equ 0x0
   682  0000                     global __CFG_LVP$OFF
   683                           __CFG_LVP$OFF equ 0x0
   684  0000                     global __CFG_BOR4V$BOR40V
   685                           __CFG_BOR4V$BOR40V equ 0x0
   686  0000                     global __CFG_WRT$OFF
   687                           __CFG_WRT$OFF equ 0x0
   688  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\sdho."
   689                           	line	#
   690                           psect cinit,class=CODE,delta=2
   691                           global start_initialization
   692                           start_initialization:
   693  0011                     
   694                           global __initialization
   695                           __initialization:
   696  0011                     psect	bssCOMMON,class=COMMON,space=1,noexec
   697                           global __pbssCOMMON
   698                           __pbssCOMMON:
   699  007B                     _counter:
   700  007B                            ds      1
   701  007B                     
   702                           _SendSignal:
   703  007C                            ds      1
   704  007C                     
   705                           _select:
   706  007D                            ds      1
   707  007D                     
   708                           psect	bssBANK0,class=BANK0,space=1,noexec
   709                           global __pbssBANK0
   710                           __pbssBANK0:
   711  0020                     _ValorADC:
   712  0020                            ds      4
   713  0020                     
   714                           _adc4:
   715  0024                            ds      4
   716  0024                     
   717                           _adc3:
   718  0028                            ds      4
   719  0028                     
   720                           _adc2:
   721  002C                            ds      4
   722  002C                     
   723                           _adc1:
   724  0030                            ds      4
   725  0030                     
   726                           _adc6:
   727  0034                            ds      2
   728  0034                     
   729                           _adc5:
   730  0036                            ds      2
   731  0036                     
   732                           _Signal:
   733  0038                            ds      1
   734  0038                     
   735                           _z:
   736  0039                            ds      1
   737  0039                     
   738                           _multiplex:
   739  003A                            ds      1
   740  003A                     
   741                           _varADC:
   742  003B                            ds      1
   743  003B                     
   744                           _Signal2:
   745  003C                            ds      1
   746  003C                     
   747                           _decimal2:
   748  003D                            ds      1
   749  003D                     
   750                           _decimal1:
   751  003E                            ds      1
   752  003E                     
   753                           _voltajeunidad:
   754  003F                            ds      1
   755  003F                     
   756                           _contador:
   757  0040                            ds      1
   758  0040                     
   759                           _timer:
   760  0041                            ds      1
   761  0041                     
   762                           _multi2:
   763  0042                            ds      1
   764  0042                     
   765                           _multi1:
   766  0043                            ds      1
   767  0043                     
   768                           _mostrar:
   769  0044                            ds      1
   770  0044                     
   771                           _debounce:
   772  0045                            ds      1
   773  0045                     
   774                           psect	dataBANK0,class=BANK0,space=1,noexec
   775                           global __pdataBANK0
   776                           __pdataBANK0:
   777  005F                     	file	"./HeaderSensorMovFoto.h"
   778                           	line	39
   779                           _ADCcomp2:
   780  005F                            ds      1
   781  005F                     
   782                           psect	dataBANK0
   783                           	file	"./HeaderSensorMovFoto.h"
   784                           	line	38
   785                           _ADCcomp1:
   786  0060                            ds      1
   787  0060                     
   788                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\sdho."
   789                           	line	#
   790                           ; Initialize objects allocated to BANK0
   791                           	global __pidataBANK0
   792                           psect cinit,class=CODE,delta=2,merge=1
   793                           	fcall	__pidataBANK0+0		;fetch initializer
   794  0011  120A  118A  2452  120A  118A  	movwf	__pdataBANK0+0&07fh		
   795  0016  00DF               	fcall	__pidataBANK0+1		;fetch initializer
   796  0017  120A  118A  2453  120A  118A  	movwf	__pdataBANK0+1&07fh		
   797  001C  00E0               	line	#
   798                           psect clrtext,class=CODE,delta=2
   799                           global clear_ram0
   800                           ;	Called with FSR containing the base address, and
   801                           ;	W with the last address+1
   802                           clear_ram0:
   803  044A                     	clrwdt			;clear the watchdog before getting into this loop
   804  044A  0064               clrloop0:
   805  044B                     	clrf	indf		;clear RAM location pointed to by FSR
   806  044B  0180               	incf	fsr,f		;increment pointer
   807  044C  0A84               	xorwf	fsr,w		;XOR with final address
   808  044D  0604               	btfsc	status,2	;have we reached the end yet?
   809  044E  1903               	retlw	0		;all done for this memory range, return
   810  044F  3400               	xorwf	fsr,w		;XOR again to restore value
   811  0450  0604               	goto	clrloop0		;do the next byte
   812  0451  2C4B               
   813                           ; Clear objects allocated to BANK0
   814                           psect cinit,class=CODE,delta=2,merge=1
   815                           	bcf	status, 7	;select IRP bank0
   816  001D  1383               	movlw	low(__pbssBANK0)
   817  001E  3020               	movwf	fsr
   818  001F  0084               	movlw	low((__pbssBANK0)+026h)
   819  0020  3046               	fcall	clear_ram0
   820  0021  120A  118A  244A  120A  118A  ; Clear objects allocated to COMMON
   821                           psect cinit,class=CODE,delta=2,merge=1
   822                           	clrf	((__pbssCOMMON)+0)&07Fh
   823  0026  01FB               	clrf	((__pbssCOMMON)+1)&07Fh
   824  0027  01FC               	clrf	((__pbssCOMMON)+2)&07Fh
   825  0028  01FD               psect cinit,class=CODE,delta=2,merge=1
   826                           global end_of_initialization,__end_of__initialization
   827                           
   828                           ;End of C runtime variable initialization code
   829                           
   830                           end_of_initialization:
   831  0029                     __end_of__initialization:
   832  0029                     clrf status
   833  0029  0183               ljmp _main	;jump to C main() function
   834  002A  120A  118A  2BA4   psect	cstackCOMMON,class=COMMON,space=1,noexec
   835                           global __pcstackCOMMON
   836                           __pcstackCOMMON:
   837  0070                     ?_ADC:	; 1 bytes @ 0x0
   838  0070                     ?_LeerADC:	; 1 bytes @ 0x0
   839  0070                     ?_I2C_Slave_Init:	; 1 bytes @ 0x0
   840  0070                     ?_inicio:	; 1 bytes @ 0x0
   841  0070                     ?_setup:	; 1 bytes @ 0x0
   842  0070                     ?_isr:	; 1 bytes @ 0x0
   843  0070                     ?_main:	; 1 bytes @ 0x0
   844  0070                     	global	?___awmod
   845                           ?___awmod:	; 2 bytes @ 0x0
   846  0070                     	global	?___fltol
   847                           ?___fltol:	; 4 bytes @ 0x0
   848  0070                     	global	___awmod@divisor
   849                           ___awmod@divisor:	; 2 bytes @ 0x0
   850  0070                     	global	___fltol@f1
   851                           ___fltol@f1:	; 4 bytes @ 0x0
   852  0070                     	ds	2
   853  0070                     	global	___awmod@dividend
   854                           ___awmod@dividend:	; 2 bytes @ 0x2
   855  0072                     	ds	2
   856  0072                     ??___awmod:	; 1 bytes @ 0x4
   857  0074                     ??___fltol:	; 1 bytes @ 0x4
   858  0074                     	ds	1
   859  0074                     	global	___awmod@counter
   860                           ___awmod@counter:	; 1 bytes @ 0x5
   861  0075                     	ds	1
   862  0075                     	global	___awmod@sign
   863                           ___awmod@sign:	; 1 bytes @ 0x6
   864  0076                     	ds	3
   865  0076                     	global	___fltol@sign1
   866                           ___fltol@sign1:	; 1 bytes @ 0x9
   867  0079                     	ds	1
   868  0079                     	global	___fltol@exp1
   869                           ___fltol@exp1:	; 1 bytes @ 0xA
   870  007A                     	ds	1
   871  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
   872                           global __pcstackBANK0
   873                           __pcstackBANK0:
   874  0046                     ??_isr:	; 1 bytes @ 0x0
   875  0046                     	ds	5
   876  0046                     ?___flge:	; 1 bit 
   877  004B                     ??_ADC:	; 1 bytes @ 0x5
   878  004B                     ??_I2C_Slave_Init:	; 1 bytes @ 0x5
   879  004B                     ??_inicio:	; 1 bytes @ 0x5
   880  004B                     	global	?___xxtofl
   881                           ?___xxtofl:	; 4 bytes @ 0x5
   882  004B                     	global	I2C_Slave_Init@address
   883                           I2C_Slave_Init@address:	; 1 bytes @ 0x5
   884  004B                     	global	___flge@ff1
   885                           ___flge@ff1:	; 4 bytes @ 0x5
   886  004B                     	global	___xxtofl@val
   887                           ___xxtofl@val:	; 4 bytes @ 0x5
   888  004B                     	ds	1
   889  004B                     ??_setup:	; 1 bytes @ 0x6
   890  004C                     	ds	3
   891  004C                     ??___xxtofl:	; 1 bytes @ 0x9
   892  004F                     	global	___flge@ff2
   893                           ___flge@ff2:	; 4 bytes @ 0x9
   894  004F                     	ds	4
   895  004F                     ??___flge:	; 1 bytes @ 0xD
   896  0053                     	global	___xxtofl@sign
   897                           ___xxtofl@sign:	; 1 bytes @ 0xD
   898  0053                     	ds	1
   899  0053                     	global	___xxtofl@exp
   900                           ___xxtofl@exp:	; 1 bytes @ 0xE
   901  0054                     	ds	1
   902  0054                     	global	___xxtofl@arg
   903                           ___xxtofl@arg:	; 4 bytes @ 0xF
   904  0055                     	ds	6
   905  0055                     ??_LeerADC:	; 1 bytes @ 0x15
   906  005B                     	ds	4
   907  005B                     ??_main:	; 1 bytes @ 0x19
   908  005F                     ;!
   909                           ;!Data Sizes:
   910                           ;!    Strings     0
   911                           ;!    Constant    0
   912                           ;!    Data        2
   913                           ;!    BSS         41
   914                           ;!    Persistent  1
   915                           ;!    Stack       0
   916                           ;!
   917                           ;!Auto Spaces:
   918                           ;!    Space          Size  Autos    Used
   919                           ;!    COMMON           14     11      14
   920                           ;!    BANK0            80     25      66
   921                           ;!    BANK1            80      0       0
   922                           ;!    BANK3            96      0       0
   923                           ;!    BANK2            96      0       0
   924                           
   925                           ;!
   926                           ;!Pointer List with Targets:
   927                           ;!
   928                           ;!    None.
   929                           
   930                           
   931                           ;!
   932                           ;!Critical Paths under _main in COMMON
   933                           ;!
   934                           ;!    None.
   935                           ;!
   936                           ;!Critical Paths under _isr in COMMON
   937                           ;!
   938                           ;!    _isr->___fltol
   939                           ;!
   940                           ;!Critical Paths under _main in BANK0
   941                           ;!
   942                           ;!    _main->_LeerADC
   943                           ;!    _setup->_I2C_Slave_Init
   944                           ;!    _LeerADC->___flge
   945                           ;!
   946                           ;!Critical Paths under _isr in BANK0
   947                           ;!
   948                           ;!    None.
   949                           ;!
   950                           ;!Critical Paths under _main in BANK1
   951                           ;!
   952                           ;!    None.
   953                           ;!
   954                           ;!Critical Paths under _isr in BANK1
   955                           ;!
   956                           ;!    None.
   957                           ;!
   958                           ;!Critical Paths under _main in BANK3
   959                           ;!
   960                           ;!    None.
   961                           ;!
   962                           ;!Critical Paths under _isr in BANK3
   963                           ;!
   964                           ;!    None.
   965                           ;!
   966                           ;!Critical Paths under _main in BANK2
   967                           ;!
   968                           ;!    None.
   969                           ;!
   970                           ;!Critical Paths under _isr in BANK2
   971                           ;!
   972                           ;!    None.
   973                           
   974 ;;
   975 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   976 ;;
   977                           
   978                           ;!
   979                           ;!Call Graph Tables:
   980                           ;!
   981                           ;! ---------------------------------------------------------------------------------
   982                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   983                           ;! ---------------------------------------------------------------------------------
   984                           ;! (0) _main                                                 0     0      0     754
   985                           ;!                                _ADC
   986                           ;!                            _LeerADC
   987                           ;!                             _inicio
   988                           ;!                              _setup
   989                           ;! ---------------------------------------------------------------------------------
   990                           ;! (1) _setup                                                0     0      0      22
   991                           ;!                     _I2C_Slave_Init
   992                           ;! ---------------------------------------------------------------------------------
   993                           ;! (2) _I2C_Slave_Init                                       1     1      0      22
   994                           ;!                                              5 BANK0      1     1      0
   995                           ;! ---------------------------------------------------------------------------------
   996                           ;! (1) _inicio                                               0     0      0       0
   997                           ;! ---------------------------------------------------------------------------------
   998                           ;! (1) _LeerADC                                              4     4      0     732
   999                           ;!                                             21 BANK0      4     4      0
  1000                           ;!                             ___flge
  1001                           ;!                           ___xxtofl
  1002                           ;! ---------------------------------------------------------------------------------
  1003                           ;! (2) ___xxtofl                                            14    10      4     398
  1004                           ;!                                              5 BANK0     14    10      4
  1005                           ;! ---------------------------------------------------------------------------------
  1006                           ;! (2) ___flge                                              16     8      8     334
  1007                           ;!                                              5 BANK0     16     8      8
  1008                           ;! ---------------------------------------------------------------------------------
  1009                           ;! (1) _ADC                                                  0     0      0       0
  1010                           ;! ---------------------------------------------------------------------------------
  1011                           ;! Estimated maximum stack depth 2
  1012                           ;! ---------------------------------------------------------------------------------
  1013                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1014                           ;! ---------------------------------------------------------------------------------
  1015                           ;! (3) _isr                                                  5     5      0     753
  1016                           ;!                                              0 BANK0      5     5      0
  1017                           ;!                            ___awmod
  1018                           ;!                            ___fltol
  1019                           ;! ---------------------------------------------------------------------------------
  1020                           ;! (4) ___fltol                                             11     7      4     305
  1021                           ;!                                              0 COMMON    11     7      4
  1022                           ;! ---------------------------------------------------------------------------------
  1023                           ;! (4) ___awmod                                              7     3      4     448
  1024                           ;!                                              0 COMMON     7     3      4
  1025                           ;! ---------------------------------------------------------------------------------
  1026                           ;! Estimated maximum stack depth 4
  1027                           ;! ---------------------------------------------------------------------------------
  1028                           ;!
  1029                           ;! Call Graph Graphs:
  1030                           ;!
  1031                           ;! _main (ROOT)
  1032                           ;!   _ADC
  1033                           ;!   _LeerADC
  1034                           ;!     ___flge
  1035                           ;!     ___xxtofl
  1036                           ;!   _inicio
  1037                           ;!   _setup
  1038                           ;!     _I2C_Slave_Init
  1039                           ;!
  1040                           ;! _isr (ROOT)
  1041                           ;!   ___awmod
  1042                           ;!   ___fltol
  1043                           ;!
  1044                           
  1045                           ;! Address spaces:
  1046                           
  1047                           ;!Name               Size   Autos  Total    Cost      Usage
  1048                           ;!BANK3               60      0       0       9        0.0%
  1049                           ;!BITBANK3            60      0       0       8        0.0%
  1050                           ;!SFR3                 0      0       0       4        0.0%
  1051                           ;!BITSFR3              0      0       0       4        0.0%
  1052                           ;!BANK2               60      0       0      11        0.0%
  1053                           ;!BITBANK2            60      0       0      10        0.0%
  1054                           ;!SFR2                 0      0       0       5        0.0%
  1055                           ;!BITSFR2              0      0       0       5        0.0%
  1056                           ;!BANK1               50      0       0       7        0.0%
  1057                           ;!BITBANK1            50      0       0       6        0.0%
  1058                           ;!SFR1                 0      0       0       2        0.0%
  1059                           ;!BITSFR1              0      0       0       2        0.0%
  1060                           ;!BANK0               50     19      42       5       82.5%
  1061                           ;!BITBANK0            50      0       0       4        0.0%
  1062                           ;!SFR0                 0      0       0       1        0.0%
  1063                           ;!BITSFR0              0      0       0       1        0.0%
  1064                           ;!COMMON               E      B       E       1      100.0%
  1065                           ;!BITCOMMON            E      0       0       0        0.0%
  1066                           ;!CODE                 0      0       0       0        0.0%
  1067                           ;!DATA                 0      0      50      12        0.0%
  1068                           ;!ABS                  0      0      50       3        0.0%
  1069                           ;!NULL                 0      0       0       0        0.0%
  1070                           ;!STACK                0      0       0       2        0.0%
  1071                           ;!EEDATA             100      0       0       0        0.0%
  1072                           
  1073                           	global	_main
  1074                           
  1075 ;; *************** function _main *****************
  1076 ;; Defined at:
  1077 ;;		line 111 in file "MainSensorMovFoto.c"
  1078 ;; Parameters:    Size  Location     Type
  1079 ;;		None
  1080 ;; Auto vars:     Size  Location     Type
  1081 ;;		None
  1082 ;; Return value:  Size  Location     Type
  1083 ;;                  1    wreg      void 
  1084 ;; Registers used:
  1085 ;;		wreg, status,2, status,0, pclath, cstack
  1086 ;; Tracked objects:
  1087 ;;		On entry : B00/0
  1088 ;;		On exit  : 0/0
  1089 ;;		Unchanged: 0/0
  1090 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1091 ;;      Params:         0       0       0       0       0
  1092 ;;      Locals:         0       0       0       0       0
  1093 ;;      Temps:          0       0       0       0       0
  1094 ;;      Totals:         0       0       0       0       0
  1095 ;;Total ram usage:        0 bytes
  1096 ;; Hardware stack levels required when called:    4
  1097 ;; This function calls:
  1098 ;;		_ADC
  1099 ;;		_LeerADC
  1100 ;;		_inicio
  1101 ;;		_setup
  1102 ;; This function is called by:
  1103 ;;		Startup code after reset
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1107                           	file	"MainSensorMovFoto.c"
  1108                           	line	111
  1109                           global __pmaintext
  1110                           __pmaintext:	;psect for function _main
  1111  03A4                     psect	maintext
  1112                           	file	"MainSensorMovFoto.c"
  1113                           	line	111
  1114                           	global	__size_of_main
  1115                           	__size_of_main	equ	__end_of_main-_main
  1116  0047                     	
  1117                           _main:	
  1118  03A4                     ;incstack = 0
  1119                           	opt	stack 4
  1120                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1121                           	line	112
  1122                           	
  1123                           l1415:	
  1124  03A4                     ;MainSensorMovFoto.c: 112:     inicio();
  1125                           	fcall	_inicio
  1126  03A4  120A  118A  23EB  120A  118A  	line	113
  1127                           ;MainSensorMovFoto.c: 113:     setup();
  1128                           	fcall	_setup
  1129  03A9  120A  118A  242A  120A  118A  	line	114
  1130                           ;MainSensorMovFoto.c: 114:     ADC();
  1131                           	fcall	_ADC
  1132  03AE  120A  118A  243A  120A  118A  	goto	l1417
  1133  03B3  2BB4               	line	115
  1134                           ;MainSensorMovFoto.c: 115:     while (1){
  1135                           	
  1136                           l254:	
  1137  03B4                     	line	117
  1138                           	
  1139                           l1417:	
  1140  03B4                     ;MainSensorMovFoto.c: 117:         VarMOV = PORTBbits.RB0;
  1141                           	movlw	0
  1142  03B4  3000               	bcf	status, 5	;RP0=0, select bank0
  1143  03B5  1283               	bcf	status, 6	;RP1=0, select bank0
  1144  03B6  1303               	btfsc	(6),0	;volatile
  1145  03B7  1806               	movlw	1
  1146  03B8  3001               	movwf	(_VarMOV)
  1147  03B9  00E1               	line	118
  1148                           	
  1149                           l1419:	
  1150  03BA                     ;MainSensorMovFoto.c: 118:         if (VarMOV == 1){
  1151                           		decf	((_VarMOV)),w
  1152  03BA  0361               	btfss	status,2
  1153  03BB  1D03               	goto	u1211
  1154  03BC  2BBE               	goto	u1210
  1155  03BD  2BBF               u1211:
  1156  03BE                     	goto	l1423
  1157  03BE  2BC2               u1210:
  1158  03BF                     	line	119
  1159                           	
  1160                           l1421:	
  1161  03BF                     ;MainSensorMovFoto.c: 119:             Signal = 1;
  1162                           	clrf	(_Signal)
  1163  03BF  01B8               	incf	(_Signal),f
  1164  03C0  0AB8               	line	120
  1165                           ;MainSensorMovFoto.c: 120:         }else{
  1166                           	goto	l1425
  1167  03C1  2BC4               	
  1168                           l255:	
  1169  03C2                     	line	121
  1170                           	
  1171                           l1423:	
  1172  03C2                     ;MainSensorMovFoto.c: 121:             Signal = 0;
  1173                           	clrf	(_Signal)
  1174  03C2  01B8               	goto	l1425
  1175  03C3  2BC4               	line	122
  1176                           ;MainSensorMovFoto.c: 122:         }
  1177                           	
  1178                           l256:	
  1179  03C4                     	line	123
  1180                           	
  1181                           l1425:	
  1182  03C4                     ;MainSensorMovFoto.c: 123:         if (varADC == 1){
  1183                           		decf	((_varADC)),w
  1184  03C4  033B               	btfss	status,2
  1185  03C5  1D03               	goto	u1221
  1186  03C6  2BC8               	goto	u1220
  1187  03C7  2BC9               u1221:
  1188  03C8                     	goto	l1433
  1189  03C8  2BD3               u1220:
  1190  03C9                     	line	124
  1191                           	
  1192                           l1427:	
  1193  03C9                     ;MainSensorMovFoto.c: 124:             LeerADC();
  1194                           	fcall	_LeerADC
  1195  03C9  120A  118A  235C  120A  118A  	line	125
  1196                           	
  1197                           l1429:	
  1198  03CE                     ;MainSensorMovFoto.c: 125:             ADCON0bits.GO_DONE = 1;
  1199                           	bcf	status, 5	;RP0=0, select bank0
  1200  03CE  1283               	bcf	status, 6	;RP1=0, select bank0
  1201  03CF  1303               	bsf	(31),1	;volatile
  1202  03D0  149F               	line	126
  1203                           	
  1204                           l1431:	
  1205  03D1                     ;MainSensorMovFoto.c: 126:             varADC = 0;
  1206                           	clrf	(_varADC)
  1207  03D1  01BB               	goto	l1433
  1208  03D2  2BD3               	line	127
  1209                           ;MainSensorMovFoto.c: 127:         }
  1210                           	
  1211                           l257:	
  1212  03D3                     	line	128
  1213                           	
  1214                           l1433:	
  1215  03D3                     ;MainSensorMovFoto.c: 128:         if (ADCON0bits.GO_DONE == 0){
  1216                           	btfsc	(31),1	;volatile
  1217  03D3  189F               	goto	u1231
  1218  03D4  2BD6               	goto	u1230
  1219  03D5  2BD7               u1231:
  1220  03D6                     	goto	l1437
  1221  03D6  2BD9               u1230:
  1222  03D7                     	line	129
  1223                           	
  1224                           l1435:	
  1225  03D7                     ;MainSensorMovFoto.c: 129:             ADCON0bits.GO_DONE = 1;
  1226                           	bsf	(31),1	;volatile
  1227  03D7  149F               	goto	l1437
  1228  03D8  2BD9               	line	130
  1229                           ;MainSensorMovFoto.c: 130:         }
  1230                           	
  1231                           l258:	
  1232  03D9                     	line	131
  1233                           	
  1234                           l1437:	
  1235  03D9                     ;MainSensorMovFoto.c: 131:         if (Signal && Signal2){
  1236                           	movf	((_Signal)),w
  1237  03D9  0838               	btfsc	status,2
  1238  03DA  1903               	goto	u1241
  1239  03DB  2BDD               	goto	u1240
  1240  03DC  2BDE               u1241:
  1241  03DD                     	goto	l1417
  1242  03DD  2BB4               u1240:
  1243  03DE                     	
  1244                           l1439:	
  1245  03DE                     	movf	((_Signal2)),w
  1246  03DE  083C               	btfsc	status,2
  1247  03DF  1903               	goto	u1251
  1248  03E0  2BE2               	goto	u1250
  1249  03E1  2BE3               u1251:
  1250  03E2                     	goto	l1417
  1251  03E2  2BB4               u1250:
  1252  03E3                     	line	132
  1253                           	
  1254                           l1441:	
  1255  03E3                     ;MainSensorMovFoto.c: 132:             SendSignal = 1;
  1256                           	clrf	(_SendSignal)
  1257  03E3  01FC               	incf	(_SendSignal),f
  1258  03E4  0AFC               	goto	l1417
  1259  03E5  2BB4               	line	133
  1260                           ;MainSensorMovFoto.c: 133:         }
  1261                           	
  1262                           l259:	
  1263  03E6                     	goto	l1417
  1264  03E6  2BB4               	line	134
  1265                           ;MainSensorMovFoto.c: 134:     }
  1266                           	
  1267                           l260:	
  1268  03E7                     	goto	l1417
  1269  03E7  2BB4               	
  1270                           l261:	
  1271  03E8                     	line	136
  1272                           ;MainSensorMovFoto.c: 135:     return;
  1273                           	
  1274                           l262:	
  1275  03E8                     	global	start
  1276                           	ljmp	start
  1277  03E8  120A  118A  280E   	opt stack 0
  1278                           GLOBAL	__end_of_main
  1279                           	__end_of_main:
  1280  03EB                     	signat	_main,89
  1281                           	global	_setup
  1282                           
  1283 ;; *************** function _setup *****************
  1284 ;; Defined at:
  1285 ;;		line 59 in file "MainSensorMovFoto.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;                  1    wreg      void 
  1292 ;; Registers used:
  1293 ;;		wreg, status,2, status,0, pclath, cstack
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1299 ;;      Params:         0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0
  1301 ;;      Temps:          0       0       0       0       0
  1302 ;;      Totals:         0       0       0       0       0
  1303 ;;Total ram usage:        0 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; Hardware stack levels required when called:    3
  1306 ;; This function calls:
  1307 ;;		_I2C_Slave_Init
  1308 ;; This function is called by:
  1309 ;;		_main
  1310 ;; This function uses a non-reentrant model
  1311 ;;
  1312                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1313                           	line	59
  1314                           global __ptext1
  1315                           __ptext1:	;psect for function _setup
  1316  042A                     psect	text1
  1317                           	file	"MainSensorMovFoto.c"
  1318                           	line	59
  1319                           	global	__size_of_setup
  1320                           	__size_of_setup	equ	__end_of_setup-_setup
  1321  0010                     	
  1322                           _setup:	
  1323  042A                     ;incstack = 0
  1324                           	opt	stack 4
  1325                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1326                           	line	60
  1327                           	
  1328                           l1289:	
  1329  042A                     ;MainSensorMovFoto.c: 60:     ANSELH = 0;
  1330                           	bsf	status, 5	;RP0=1, select bank3
  1331  042A  1683               	bsf	status, 6	;RP1=1, select bank3
  1332  042B  1703               	clrf	(393)^0180h	;volatile
  1333  042C  0189               	line	61
  1334                           ;MainSensorMovFoto.c: 61:     TRISD = 0;
  1335                           	bsf	status, 5	;RP0=1, select bank1
  1336  042D  1683               	bcf	status, 6	;RP1=0, select bank1
  1337  042E  1303               	clrf	(136)^080h	;volatile
  1338  042F  0188               	line	62
  1339                           ;MainSensorMovFoto.c: 62:     PORTD = 0;
  1340                           	bcf	status, 5	;RP0=0, select bank0
  1341  0430  1283               	bcf	status, 6	;RP1=0, select bank0
  1342  0431  1303               	clrf	(8)	;volatile
  1343  0432  0188               	line	63
  1344                           	
  1345                           l1291:	
  1346  0433                     ;MainSensorMovFoto.c: 63:     I2C_Slave_Init(0x60);
  1347                           	movlw	low(060h)
  1348  0433  3060               	fcall	_I2C_Slave_Init
  1349  0434  120A  118A  240E  120A  118A  	line	64
  1350                           	
  1351                           l226:	
  1352  0439                     	return
  1353  0439  0008               	opt stack 0
  1354                           GLOBAL	__end_of_setup
  1355                           	__end_of_setup:
  1356  043A                     	signat	_setup,89
  1357                           	global	_I2C_Slave_Init
  1358                           
  1359 ;; *************** function _I2C_Slave_Init *****************
  1360 ;; Defined at:
  1361 ;;		line 121 in file "LibSensorMovFoto.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  address         1    wreg     unsigned char 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;  address         1    5[BANK0 ] unsigned char 
  1366 ;; Return value:  Size  Location     Type
  1367 ;;                  1    wreg      void 
  1368 ;; Registers used:
  1369 ;;		wreg
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1375 ;;      Params:         0       0       0       0       0
  1376 ;;      Locals:         0       1       0       0       0
  1377 ;;      Temps:          0       0       0       0       0
  1378 ;;      Totals:         0       1       0       0       0
  1379 ;;Total ram usage:        1 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    2
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_setup
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1389                           	file	"LibSensorMovFoto.c"
  1390                           	line	121
  1391                           global __ptext2
  1392                           __ptext2:	;psect for function _I2C_Slave_Init
  1393  040E                     psect	text2
  1394                           	file	"LibSensorMovFoto.c"
  1395                           	line	121
  1396                           	global	__size_of_I2C_Slave_Init
  1397                           	__size_of_I2C_Slave_Init	equ	__end_of_I2C_Slave_Init-_I2C_Slave_Init
  1398  001C                     	
  1399                           _I2C_Slave_Init:	
  1400  040E                     ;incstack = 0
  1401                           	opt	stack 4
  1402                           ; Regs used in _I2C_Slave_Init: [wreg]
  1403                           ;I2C_Slave_Init@address stored from wreg
  1404                           	bcf	status, 5	;RP0=0, select bank0
  1405  040E  1283               	bcf	status, 6	;RP1=0, select bank0
  1406  040F  1303               	movwf	(I2C_Slave_Init@address)
  1407  0410  00CB               	line	122
  1408                           	
  1409                           l1175:	
  1410  0411                     ;LibSensorMovFoto.c: 122:     SSPADD = address;
  1411                           	movf	(I2C_Slave_Init@address),w
  1412  0411  084B               	bsf	status, 5	;RP0=1, select bank1
  1413  0412  1683               	bcf	status, 6	;RP1=0, select bank1
  1414  0413  1303               	movwf	(147)^080h	;volatile
  1415  0414  0093               	line	123
  1416                           ;LibSensorMovFoto.c: 123:     SSPCON = 0x36;
  1417                           	movlw	low(036h)
  1418  0415  3036               	bcf	status, 5	;RP0=0, select bank0
  1419  0416  1283               	bcf	status, 6	;RP1=0, select bank0
  1420  0417  1303               	movwf	(20)	;volatile
  1421  0418  0094               	line	124
  1422                           ;LibSensorMovFoto.c: 124:     SSPSTAT = 0x80;
  1423                           	movlw	low(080h)
  1424  0419  3080               	bsf	status, 5	;RP0=1, select bank1
  1425  041A  1683               	bcf	status, 6	;RP1=0, select bank1
  1426  041B  1303               	movwf	(148)^080h	;volatile
  1427  041C  0094               	line	125
  1428                           ;LibSensorMovFoto.c: 125:     SSPCON2 = 0x01;
  1429                           	movlw	low(01h)
  1430  041D  3001               	movwf	(145)^080h	;volatile
  1431  041E  0091               	line	126
  1432                           	
  1433                           l1177:	
  1434  041F                     ;LibSensorMovFoto.c: 126:     TRISC3 = 1;
  1435                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  1436  041F  1587               	line	127
  1437                           	
  1438                           l1179:	
  1439  0420                     ;LibSensorMovFoto.c: 127:     TRISC4 = 1;
  1440                           	bsf	(1084/8)^080h,(1084)&7	;volatile
  1441  0420  1607               	line	128
  1442                           	
  1443                           l1181:	
  1444  0421                     ;LibSensorMovFoto.c: 128:     GIE = 1;
  1445                           	bsf	(95/8),(95)&7	;volatile
  1446  0421  178B               	line	129
  1447                           	
  1448                           l1183:	
  1449  0422                     ;LibSensorMovFoto.c: 129:     PEIE = 1;
  1450                           	bsf	(94/8),(94)&7	;volatile
  1451  0422  170B               	line	130
  1452                           	
  1453                           l1185:	
  1454  0423                     ;LibSensorMovFoto.c: 130:     SSPIF = 0;
  1455                           	bcf	status, 5	;RP0=0, select bank0
  1456  0423  1283               	bcf	status, 6	;RP1=0, select bank0
  1457  0424  1303               	bcf	(99/8),(99)&7	;volatile
  1458  0425  118C               	line	131
  1459                           	
  1460                           l1187:	
  1461  0426                     ;LibSensorMovFoto.c: 131:     SSPIE = 1;
  1462                           	bsf	status, 5	;RP0=1, select bank1
  1463  0426  1683               	bcf	status, 6	;RP1=0, select bank1
  1464  0427  1303               	bsf	(1123/8)^080h,(1123)&7	;volatile
  1465  0428  158C               	line	132
  1466                           	
  1467                           l124:	
  1468  0429                     	return
  1469  0429  0008               	opt stack 0
  1470                           GLOBAL	__end_of_I2C_Slave_Init
  1471                           	__end_of_I2C_Slave_Init:
  1472  042A                     	signat	_I2C_Slave_Init,4217
  1473                           	global	_inicio
  1474                           
  1475 ;; *************** function _inicio *****************
  1476 ;; Defined at:
  1477 ;;		line 42 in file "MainSensorMovFoto.c"
  1478 ;; Parameters:    Size  Location     Type
  1479 ;;		None
  1480 ;; Auto vars:     Size  Location     Type
  1481 ;;		None
  1482 ;; Return value:  Size  Location     Type
  1483 ;;                  1    wreg      void 
  1484 ;; Registers used:
  1485 ;;		wreg, status,2
  1486 ;; Tracked objects:
  1487 ;;		On entry : 0/0
  1488 ;;		On exit  : 0/0
  1489 ;;		Unchanged: 0/0
  1490 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1491 ;;      Params:         0       0       0       0       0
  1492 ;;      Locals:         0       0       0       0       0
  1493 ;;      Temps:          0       0       0       0       0
  1494 ;;      Totals:         0       0       0       0       0
  1495 ;;Total ram usage:        0 bytes
  1496 ;; Hardware stack levels used:    1
  1497 ;; Hardware stack levels required when called:    2
  1498 ;; This function calls:
  1499 ;;		Nothing
  1500 ;; This function is called by:
  1501 ;;		_main
  1502 ;; This function uses a non-reentrant model
  1503 ;;
  1504                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1505                           	file	"MainSensorMovFoto.c"
  1506                           	line	42
  1507                           global __ptext3
  1508                           __ptext3:	;psect for function _inicio
  1509  03EB                     psect	text3
  1510                           	file	"MainSensorMovFoto.c"
  1511                           	line	42
  1512                           	global	__size_of_inicio
  1513                           	__size_of_inicio	equ	__end_of_inicio-_inicio
  1514  0023                     	
  1515                           _inicio:	
  1516  03EB                     ;incstack = 0
  1517                           	opt	stack 5
  1518                           ; Regs used in _inicio: [wreg+status,2]
  1519                           	line	44
  1520                           	
  1521                           l1279:	
  1522  03EB                     ;MainSensorMovFoto.c: 44:     TRISA = 0b00000011;
  1523                           	movlw	low(03h)
  1524  03EB  3003               	bsf	status, 5	;RP0=1, select bank1
  1525  03EC  1683               	bcf	status, 6	;RP1=0, select bank1
  1526  03ED  1303               	movwf	(133)^080h	;volatile
  1527  03EE  0085               	line	45
  1528                           ;MainSensorMovFoto.c: 45:     ANSEL = 0b00000011;
  1529                           	movlw	low(03h)
  1530  03EF  3003               	bsf	status, 5	;RP0=1, select bank3
  1531  03F0  1683               	bsf	status, 6	;RP1=1, select bank3
  1532  03F1  1703               	movwf	(392)^0180h	;volatile
  1533  03F2  0088               	line	46
  1534                           	
  1535                           l1281:	
  1536  03F3                     ;MainSensorMovFoto.c: 46:     PORTA = 0;
  1537                           	bcf	status, 5	;RP0=0, select bank0
  1538  03F3  1283               	bcf	status, 6	;RP1=0, select bank0
  1539  03F4  1303               	clrf	(5)	;volatile
  1540  03F5  0185               	line	48
  1541                           	
  1542                           l1283:	
  1543  03F6                     ;MainSensorMovFoto.c: 48:     ANSELH = 0;
  1544                           	bsf	status, 5	;RP0=1, select bank3
  1545  03F6  1683               	bsf	status, 6	;RP1=1, select bank3
  1546  03F7  1703               	clrf	(393)^0180h	;volatile
  1547  03F8  0189               	line	49
  1548                           ;MainSensorMovFoto.c: 49:     TRISB = 0b00000001;
  1549                           	movlw	low(01h)
  1550  03F9  3001               	bsf	status, 5	;RP0=1, select bank1
  1551  03FA  1683               	bcf	status, 6	;RP1=0, select bank1
  1552  03FB  1303               	movwf	(134)^080h	;volatile
  1553  03FC  0086               	line	50
  1554                           	
  1555                           l1285:	
  1556  03FD                     ;MainSensorMovFoto.c: 50:     PORTB = 0b00000000;
  1557                           	bcf	status, 5	;RP0=0, select bank0
  1558  03FD  1283               	bcf	status, 6	;RP1=0, select bank0
  1559  03FE  1303               	clrf	(6)	;volatile
  1560  03FF  0186               	line	52
  1561                           	
  1562                           l1287:	
  1563  0400                     ;MainSensorMovFoto.c: 52:     TRISC = 0b11111111;
  1564                           	movlw	low(0FFh)
  1565  0400  30FF               	bsf	status, 5	;RP0=1, select bank1
  1566  0401  1683               	bcf	status, 6	;RP1=0, select bank1
  1567  0402  1303               	movwf	(135)^080h	;volatile
  1568  0403  0087               	line	53
  1569                           ;MainSensorMovFoto.c: 53:     PORTC = 0;
  1570                           	bcf	status, 5	;RP0=0, select bank0
  1571  0404  1283               	bcf	status, 6	;RP1=0, select bank0
  1572  0405  1303               	clrf	(7)	;volatile
  1573  0406  0187               	line	55
  1574                           ;MainSensorMovFoto.c: 55:     TRISD = 0;
  1575                           	bsf	status, 5	;RP0=1, select bank1
  1576  0407  1683               	bcf	status, 6	;RP1=0, select bank1
  1577  0408  1303               	clrf	(136)^080h	;volatile
  1578  0409  0188               	line	56
  1579                           ;MainSensorMovFoto.c: 56:     PORTD = 0;
  1580                           	bcf	status, 5	;RP0=0, select bank0
  1581  040A  1283               	bcf	status, 6	;RP1=0, select bank0
  1582  040B  1303               	clrf	(8)	;volatile
  1583  040C  0188               	line	57
  1584                           	
  1585                           l223:	
  1586  040D                     	return
  1587  040D  0008               	opt stack 0
  1588                           GLOBAL	__end_of_inicio
  1589                           	__end_of_inicio:
  1590  040E                     	signat	_inicio,89
  1591                           	global	_LeerADC
  1592                           
  1593 ;; *************** function _LeerADC *****************
  1594 ;; Defined at:
  1595 ;;		line 38 in file "LibSensorMovFoto.c"
  1596 ;; Parameters:    Size  Location     Type
  1597 ;;		None
  1598 ;; Auto vars:     Size  Location     Type
  1599 ;;		None
  1600 ;; Return value:  Size  Location     Type
  1601 ;;                  1    wreg      void 
  1602 ;; Registers used:
  1603 ;;		wreg, status,2, status,0, pclath, cstack
  1604 ;; Tracked objects:
  1605 ;;		On entry : 0/0
  1606 ;;		On exit  : 0/0
  1607 ;;		Unchanged: 0/0
  1608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1609 ;;      Params:         0       0       0       0       0
  1610 ;;      Locals:         0       0       0       0       0
  1611 ;;      Temps:          0       4       0       0       0
  1612 ;;      Totals:         0       4       0       0       0
  1613 ;;Total ram usage:        4 bytes
  1614 ;; Hardware stack levels used:    1
  1615 ;; Hardware stack levels required when called:    3
  1616 ;; This function calls:
  1617 ;;		___flge
  1618 ;;		___xxtofl
  1619 ;; This function is called by:
  1620 ;;		_main
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1624                           	file	"LibSensorMovFoto.c"
  1625                           	line	38
  1626                           global __ptext4
  1627                           __ptext4:	;psect for function _LeerADC
  1628  035C                     psect	text4
  1629                           	file	"LibSensorMovFoto.c"
  1630                           	line	38
  1631                           	global	__size_of_LeerADC
  1632                           	__size_of_LeerADC	equ	__end_of_LeerADC-_LeerADC
  1633  0048                     	
  1634                           _LeerADC:	
  1635  035C                     ;incstack = 0
  1636                           	opt	stack 4
  1637                           ; Regs used in _LeerADC: [wreg+status,2+status,0+pclath+cstack]
  1638                           	line	40
  1639                           	
  1640                           l1269:	
  1641  035C                     ;LibSensorMovFoto.c: 40:     if (ADCON0bits.GO_DONE == 0){
  1642                           	bcf	status, 5	;RP0=0, select bank0
  1643  035C  1283               	bcf	status, 6	;RP1=0, select bank0
  1644  035D  1303               	btfsc	(31),1	;volatile
  1645  035E  189F               	goto	u881
  1646  035F  2B61               	goto	u880
  1647  0360  2B62               u881:
  1648  0361                     	goto	l95
  1649  0361  2BA3               u880:
  1650  0362                     	line	41
  1651                           	
  1652                           l1271:	
  1653  0362                     ;LibSensorMovFoto.c: 41:         ValorADC = ADRESH;
  1654                           	movf	(30),w	;volatile
  1655  0362  081E               	movwf	(??_LeerADC+0)+0
  1656  0363  00DB               	clrf	(??_LeerADC+0)+0+1
  1657  0364  01DC               	clrf	(??_LeerADC+0)+0+2
  1658  0365  01DD               	clrf	(??_LeerADC+0)+0+3
  1659  0366  01DE               	movf	3+(??_LeerADC+0)+0,w
  1660  0367  085E               	movwf	(___xxtofl@val+3)
  1661  0368  00CE               	movf	2+(??_LeerADC+0)+0,w
  1662  0369  085D               	movwf	(___xxtofl@val+2)
  1663  036A  00CD               	movf	1+(??_LeerADC+0)+0,w
  1664  036B  085C               	movwf	(___xxtofl@val+1)
  1665  036C  00CC               	movf	0+(??_LeerADC+0)+0,w
  1666  036D  085B               	movwf	(___xxtofl@val)
  1667  036E  00CB               
  1668                           	movlw	low(0)
  1669  036F  3000               	fcall	___xxtofl
  1670  0370  120A  118A  202D  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1671  0375  1283               	bcf	status, 6	;RP1=0, select bank0
  1672  0376  1303               	movf	(3+(?___xxtofl)),w
  1673  0377  084E               	movwf	(_ValorADC+3)
  1674  0378  00A3               	movf	(2+(?___xxtofl)),w
  1675  0379  084D               	movwf	(_ValorADC+2)
  1676  037A  00A2               	movf	(1+(?___xxtofl)),w
  1677  037B  084C               	movwf	(_ValorADC+1)
  1678  037C  00A1               	movf	(0+(?___xxtofl)),w
  1679  037D  084B               	movwf	(_ValorADC)
  1680  037E  00A0               
  1681                           	line	42
  1682                           ;LibSensorMovFoto.c: 42:         if (ValorADC <= 51){
  1683                           	movlw	0x42
  1684  037F  3042               	movwf	(___flge@ff1+3)
  1685  0380  00CE               	movlw	0x4c
  1686  0381  304C               	movwf	(___flge@ff1+2)
  1687  0382  00CD               	movlw	0x0
  1688  0383  3000               	movwf	(___flge@ff1+1)
  1689  0384  00CC               	movlw	0x0
  1690  0385  3000               	movwf	(___flge@ff1)
  1691  0386  00CB               
  1692                           	movf	(_ValorADC+3),w
  1693  0387  0823               	movwf	(___flge@ff2+3)
  1694  0388  00D2               	movf	(_ValorADC+2),w
  1695  0389  0822               	movwf	(___flge@ff2+2)
  1696  038A  00D1               	movf	(_ValorADC+1),w
  1697  038B  0821               	movwf	(___flge@ff2+1)
  1698  038C  00D0               	movf	(_ValorADC),w
  1699  038D  0820               	movwf	(___flge@ff2)
  1700  038E  00CF               
  1701                           	fcall	___flge
  1702  038F  120A  118A  20F1  120A  118A  	btfss	status,0
  1703  0394  1C03               	goto	u891
  1704  0395  2B97               	goto	u890
  1705  0396  2B98               u891:
  1706  0397                     	goto	l1275
  1707  0397  2B9D               u890:
  1708  0398                     	line	43
  1709                           	
  1710                           l1273:	
  1711  0398                     ;LibSensorMovFoto.c: 43:             Signal2 = 1;
  1712                           	bcf	status, 5	;RP0=0, select bank0
  1713  0398  1283               	bcf	status, 6	;RP1=0, select bank0
  1714  0399  1303               	clrf	(_Signal2)
  1715  039A  01BC               	incf	(_Signal2),f
  1716  039B  0ABC               	line	44
  1717                           ;LibSensorMovFoto.c: 44:         }else{
  1718                           	goto	l1277
  1719  039C  2BA1               	
  1720                           l93:	
  1721  039D                     	line	45
  1722                           	
  1723                           l1275:	
  1724  039D                     ;LibSensorMovFoto.c: 45:             Signal2 = 0;
  1725                           	bcf	status, 5	;RP0=0, select bank0
  1726  039D  1283               	bcf	status, 6	;RP1=0, select bank0
  1727  039E  1303               	clrf	(_Signal2)
  1728  039F  01BC               	goto	l1277
  1729  03A0  2BA1               	line	46
  1730                           ;LibSensorMovFoto.c: 46:         }
  1731                           	
  1732                           l94:	
  1733  03A1                     	line	47
  1734                           	
  1735                           l1277:	
  1736  03A1                     ;LibSensorMovFoto.c: 47:         ADCON0bits.GO_DONE = 1;
  1737                           	bsf	(31),1	;volatile
  1738  03A1  149F               	goto	l95
  1739  03A2  2BA3               	line	48
  1740                           ;LibSensorMovFoto.c: 48:     }
  1741                           	
  1742                           l92:	
  1743  03A3                     	line	49
  1744                           	
  1745                           l95:	
  1746  03A3                     	return
  1747  03A3  0008               	opt stack 0
  1748                           GLOBAL	__end_of_LeerADC
  1749                           	__end_of_LeerADC:
  1750  03A4                     	signat	_LeerADC,89
  1751                           	global	___xxtofl
  1752                           
  1753 ;; *************** function ___xxtofl *****************
  1754 ;; Defined at:
  1755 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  1756 ;; Parameters:    Size  Location     Type
  1757 ;;  sign            1    wreg     unsigned char 
  1758 ;;  val             4    5[BANK0 ] long 
  1759 ;; Auto vars:     Size  Location     Type
  1760 ;;  sign            1   13[BANK0 ] unsigned char 
  1761 ;;  arg             4   15[BANK0 ] unsigned long 
  1762 ;;  exp             1   14[BANK0 ] unsigned char 
  1763 ;; Return value:  Size  Location     Type
  1764 ;;                  4    5[BANK0 ] unsigned char 
  1765 ;; Registers used:
  1766 ;;		wreg, status,2, status,0
  1767 ;; Tracked objects:
  1768 ;;		On entry : 0/0
  1769 ;;		On exit  : 0/0
  1770 ;;		Unchanged: 0/0
  1771 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1772 ;;      Params:         0       4       0       0       0
  1773 ;;      Locals:         0       6       0       0       0
  1774 ;;      Temps:          0       4       0       0       0
  1775 ;;      Totals:         0      14       0       0       0
  1776 ;;Total ram usage:       14 bytes
  1777 ;; Hardware stack levels used:    1
  1778 ;; Hardware stack levels required when called:    2
  1779 ;; This function calls:
  1780 ;;		Nothing
  1781 ;; This function is called by:
  1782 ;;		_LeerADC
  1783 ;; This function uses a non-reentrant model
  1784 ;;
  1785                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  1786                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  1787                           	line	10
  1788                           global __ptext5
  1789                           __ptext5:	;psect for function ___xxtofl
  1790  002D                     psect	text5
  1791                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  1792                           	line	10
  1793                           	global	__size_of___xxtofl
  1794                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  1795  00C4                     	
  1796                           ___xxtofl:	
  1797  002D                     ;incstack = 0
  1798                           	opt	stack 4
  1799                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1800                           ;___xxtofl@sign stored from wreg
  1801                           	bcf	status, 5	;RP0=0, select bank0
  1802  002D  1283               	bcf	status, 6	;RP1=0, select bank0
  1803  002E  1303               	movwf	(___xxtofl@sign)
  1804  002F  00D3               	line	15
  1805                           	
  1806                           l1215:	
  1807  0030                     	movf	((___xxtofl@sign)),w
  1808  0030  0853               	btfsc	status,2
  1809  0031  1903               	goto	u741
  1810  0032  2834               	goto	u740
  1811  0033  2835               u741:
  1812  0034                     	goto	l1221
  1813  0034  2849               u740:
  1814  0035                     	
  1815                           l1217:	
  1816  0035                     	btfss	(___xxtofl@val+3),7
  1817  0035  1FCE               	goto	u751
  1818  0036  2838               	goto	u750
  1819  0037  2839               u751:
  1820  0038                     	goto	l1221
  1821  0038  2849               u750:
  1822  0039                     	line	16
  1823                           	
  1824                           l1219:	
  1825  0039                     	comf	(___xxtofl@val)+0,w
  1826  0039  094B               	movwf	(___xxtofl@arg)
  1827  003A  00D5               	comf	(___xxtofl@val)+1,w
  1828  003B  094C               	movwf	(___xxtofl@arg+1)
  1829  003C  00D6               	comf	(___xxtofl@val)+2,w
  1830  003D  094D               	movwf	(___xxtofl@arg+2)
  1831  003E  00D7               	comf	(___xxtofl@val)+3,w
  1832  003F  094E               	movwf	(___xxtofl@arg+3)
  1833  0040  00D8               	incf	(___xxtofl@arg),f
  1834  0041  0AD5               	skipnz
  1835  0042  1903               	incf	(___xxtofl@arg+1),f
  1836  0043  0AD6               	skipnz
  1837  0044  1903               	incf	(___xxtofl@arg+2),f
  1838  0045  0AD7               	skipnz
  1839  0046  1903               	incf	(___xxtofl@arg+3),f
  1840  0047  0AD8               	line	17
  1841                           	goto	l756
  1842  0048  2851               	line	18
  1843                           	
  1844                           l755:	
  1845  0049                     	line	19
  1846                           	
  1847                           l1221:	
  1848  0049                     	movf	(___xxtofl@val+3),w
  1849  0049  084E               	movwf	(___xxtofl@arg+3)
  1850  004A  00D8               	movf	(___xxtofl@val+2),w
  1851  004B  084D               	movwf	(___xxtofl@arg+2)
  1852  004C  00D7               	movf	(___xxtofl@val+1),w
  1853  004D  084C               	movwf	(___xxtofl@arg+1)
  1854  004E  00D6               	movf	(___xxtofl@val),w
  1855  004F  084B               	movwf	(___xxtofl@arg)
  1856  0050  00D5               
  1857                           	line	20
  1858                           	
  1859                           l756:	
  1860  0051                     	line	21
  1861                           	movf	(___xxtofl@val+3),w
  1862  0051  084E               	iorwf	(___xxtofl@val+2),w
  1863  0052  044D               	iorwf	(___xxtofl@val+1),w
  1864  0053  044C               	iorwf	(___xxtofl@val),w
  1865  0054  044B               	skipz
  1866  0055  1D03               	goto	u761
  1867  0056  2858               	goto	u760
  1868  0057  2859               u761:
  1869  0058                     	goto	l1227
  1870  0058  2863               u760:
  1871  0059                     	line	22
  1872                           	
  1873                           l1223:	
  1874  0059                     	movlw	0x0
  1875  0059  3000               	movwf	(?___xxtofl+3)
  1876  005A  00CE               	movlw	0x0
  1877  005B  3000               	movwf	(?___xxtofl+2)
  1878  005C  00CD               	movlw	0x0
  1879  005D  3000               	movwf	(?___xxtofl+1)
  1880  005E  00CC               	movlw	0x0
  1881  005F  3000               	movwf	(?___xxtofl)
  1882  0060  00CB               
  1883                           	goto	l758
  1884  0061  28F0               	
  1885                           l1225:	
  1886  0062                     	goto	l758
  1887  0062  28F0               	
  1888                           l757:	
  1889  0063                     	line	23
  1890                           	
  1891                           l1227:	
  1892  0063                     	movlw	low(096h)
  1893  0063  3096               	movwf	(??___xxtofl+0)+0
  1894  0064  00CF               	movf	(??___xxtofl+0)+0,w
  1895  0065  084F               	movwf	(___xxtofl@exp)
  1896  0066  00D4               	line	24
  1897                           	goto	l1231
  1898  0067  2876               	
  1899                           l760:	
  1900  0068                     	line	25
  1901                           	
  1902                           l1229:	
  1903  0068                     	movlw	low(01h)
  1904  0068  3001               	movwf	(??___xxtofl+0)+0
  1905  0069  00CF               	movf	(??___xxtofl+0)+0,w
  1906  006A  084F               	addwf	(___xxtofl@exp),f
  1907  006B  07D4               	line	26
  1908                           	movlw	01h
  1909  006C  3001               u775:
  1910  006D                     	clrc
  1911  006D  1003               	rrf	(___xxtofl@arg+3),f
  1912  006E  0CD8               	rrf	(___xxtofl@arg+2),f
  1913  006F  0CD7               	rrf	(___xxtofl@arg+1),f
  1914  0070  0CD6               	rrf	(___xxtofl@arg),f
  1915  0071  0CD5               	addlw	-1
  1916  0072  3EFF               	skipz
  1917  0073  1D03               	goto	u775
  1918  0074  286D               
  1919                           	goto	l1231
  1920  0075  2876               	line	27
  1921                           	
  1922                           l759:	
  1923  0076                     	line	24
  1924                           	
  1925                           l1231:	
  1926  0076                     	movlw	high highword(0FE000000h)
  1927  0076  30FE               	andwf	(___xxtofl@arg+3),w
  1928  0077  0558               	btfss	status,2
  1929  0078  1D03               	goto	u781
  1930  0079  287B               	goto	u780
  1931  007A  287C               u781:
  1932  007B                     	goto	l1229
  1933  007B  2868               u780:
  1934  007C                     	goto	l762
  1935  007C  2899               	
  1936                           l761:	
  1937  007D                     	line	28
  1938                           	goto	l762
  1939  007D  2899               	
  1940                           l763:	
  1941  007E                     	line	29
  1942                           	
  1943                           l1233:	
  1944  007E                     	movlw	low(01h)
  1945  007E  3001               	movwf	(??___xxtofl+0)+0
  1946  007F  00CF               	movf	(??___xxtofl+0)+0,w
  1947  0080  084F               	addwf	(___xxtofl@exp),f
  1948  0081  07D4               	line	30
  1949                           	
  1950                           l1235:	
  1951  0082                     	movlw	01h
  1952  0082  3001               	addwf	(___xxtofl@arg),f
  1953  0083  07D5               	movlw	0
  1954  0084  3000               	skipnc
  1955  0085  1803               movlw 1
  1956  0086  3001               	addwf	(___xxtofl@arg+1),f
  1957  0087  07D6               	movlw	0
  1958  0088  3000               	skipnc
  1959  0089  1803               movlw 1
  1960  008A  3001               	addwf	(___xxtofl@arg+2),f
  1961  008B  07D7               	movlw	0
  1962  008C  3000               	skipnc
  1963  008D  1803               movlw 1
  1964  008E  3001               	addwf	(___xxtofl@arg+3),f
  1965  008F  07D8               	line	31
  1966                           	
  1967                           l1237:	
  1968  0090                     	movlw	01h
  1969  0090  3001               u795:
  1970  0091                     	clrc
  1971  0091  1003               	rrf	(___xxtofl@arg+3),f
  1972  0092  0CD8               	rrf	(___xxtofl@arg+2),f
  1973  0093  0CD7               	rrf	(___xxtofl@arg+1),f
  1974  0094  0CD6               	rrf	(___xxtofl@arg),f
  1975  0095  0CD5               	addlw	-1
  1976  0096  3EFF               	skipz
  1977  0097  1D03               	goto	u795
  1978  0098  2891               
  1979                           	line	32
  1980                           	
  1981                           l762:	
  1982  0099                     	line	28
  1983                           	movlw	high highword(0FF000000h)
  1984  0099  30FF               	andwf	(___xxtofl@arg+3),w
  1985  009A  0558               	btfss	status,2
  1986  009B  1D03               	goto	u801
  1987  009C  289E               	goto	u800
  1988  009D  289F               u801:
  1989  009E                     	goto	l1233
  1990  009E  287E               u800:
  1991  009F                     	goto	l1241
  1992  009F  28AD               	
  1993                           l764:	
  1994  00A0                     	line	33
  1995                           	goto	l1241
  1996  00A0  28AD               	
  1997                           l766:	
  1998  00A1                     	line	34
  1999                           	
  2000                           l1239:	
  2001  00A1                     	movlw	01h
  2002  00A1  3001               	subwf	(___xxtofl@exp),f
  2003  00A2  02D4               	line	35
  2004                           	movlw	01h
  2005  00A3  3001               	movwf	(??___xxtofl+0)+0
  2006  00A4  00CF               u815:
  2007  00A5                     	clrc
  2008  00A5  1003               	rlf	(___xxtofl@arg),f
  2009  00A6  0DD5               	rlf	(___xxtofl@arg+1),f
  2010  00A7  0DD6               	rlf	(___xxtofl@arg+2),f
  2011  00A8  0DD7               	rlf	(___xxtofl@arg+3),f
  2012  00A9  0DD8               	decfsz	(??___xxtofl+0)+0
  2013  00AA  0BCF               	goto	u815
  2014  00AB  28A5               	goto	l1241
  2015  00AC  28AD               	line	36
  2016                           	
  2017                           l765:	
  2018  00AD                     	line	33
  2019                           	
  2020                           l1241:	
  2021  00AD                     	btfsc	(___xxtofl@arg+2),(23)&7
  2022  00AD  1BD7               	goto	u821
  2023  00AE  28B0               	goto	u820
  2024  00AF  28B1               u821:
  2025  00B0                     	goto	l769
  2026  00B0  28B8               u820:
  2027  00B1                     	
  2028                           l1243:	
  2029  00B1                     	movlw	low(02h)
  2030  00B1  3002               	subwf	(___xxtofl@exp),w
  2031  00B2  0254               	skipnc
  2032  00B3  1803               	goto	u831
  2033  00B4  28B6               	goto	u830
  2034  00B5  28B7               u831:
  2035  00B6                     	goto	l1239
  2036  00B6  28A1               u830:
  2037  00B7                     	goto	l769
  2038  00B7  28B8               	
  2039                           l768:	
  2040  00B8                     	
  2041                           l769:	
  2042  00B8                     	line	37
  2043                           	btfsc	(___xxtofl@exp),(0)&7
  2044  00B8  1854               	goto	u841
  2045  00B9  28BB               	goto	u840
  2046  00BA  28BC               u841:
  2047  00BB                     	goto	l770
  2048  00BB  28C4               u840:
  2049  00BC                     	line	38
  2050                           	
  2051                           l1245:	
  2052  00BC                     	movlw	0FFh
  2053  00BC  30FF               	andwf	(___xxtofl@arg),f
  2054  00BD  05D5               	movlw	0FFh
  2055  00BE  30FF               	andwf	(___xxtofl@arg+1),f
  2056  00BF  05D6               	movlw	07Fh
  2057  00C0  307F               	andwf	(___xxtofl@arg+2),f
  2058  00C1  05D7               	movlw	0FFh
  2059  00C2  30FF               	andwf	(___xxtofl@arg+3),f
  2060  00C3  05D8               	
  2061                           l770:	
  2062  00C4                     	line	39
  2063                           	clrc
  2064  00C4  1003               	rrf	(___xxtofl@exp),f
  2065  00C5  0CD4               
  2066                           	line	40
  2067                           	
  2068                           l1247:	
  2069  00C6                     	movf	(___xxtofl@exp),w
  2070  00C6  0854               	movwf	(??___xxtofl+0)+0
  2071  00C7  00CF               	clrf	(??___xxtofl+0)+0+1
  2072  00C8  01D0               	clrf	(??___xxtofl+0)+0+2
  2073  00C9  01D1               	clrf	(??___xxtofl+0)+0+3
  2074  00CA  01D2               	movlw	018h
  2075  00CB  3018               u855:
  2076  00CC                     	clrc
  2077  00CC  1003               	rlf	(??___xxtofl+0)+0,f
  2078  00CD  0DCF               	rlf	(??___xxtofl+0)+1,f
  2079  00CE  0DD0               	rlf	(??___xxtofl+0)+2,f
  2080  00CF  0DD1               	rlf	(??___xxtofl+0)+3,f
  2081  00D0  0DD2               u850:
  2082  00D1                     	addlw	-1
  2083  00D1  3EFF               	skipz
  2084  00D2  1D03               	goto	u855
  2085  00D3  28CC               	movf	0+(??___xxtofl+0)+0,w
  2086  00D4  084F               	iorwf	(___xxtofl@arg),f
  2087  00D5  04D5               	movf	1+(??___xxtofl+0)+0,w
  2088  00D6  0850               	iorwf	(___xxtofl@arg+1),f
  2089  00D7  04D6               	movf	2+(??___xxtofl+0)+0,w
  2090  00D8  0851               	iorwf	(___xxtofl@arg+2),f
  2091  00D9  04D7               	movf	3+(??___xxtofl+0)+0,w
  2092  00DA  0852               	iorwf	(___xxtofl@arg+3),f
  2093  00DB  04D8               	line	41
  2094                           	
  2095                           l1249:	
  2096  00DC                     	movf	((___xxtofl@sign)),w
  2097  00DC  0853               	btfsc	status,2
  2098  00DD  1903               	goto	u861
  2099  00DE  28E0               	goto	u860
  2100  00DF  28E1               u861:
  2101  00E0                     	goto	l1255
  2102  00E0  28E7               u860:
  2103  00E1                     	
  2104                           l1251:	
  2105  00E1                     	btfss	(___xxtofl@val+3),7
  2106  00E1  1FCE               	goto	u871
  2107  00E2  28E4               	goto	u870
  2108  00E3  28E5               u871:
  2109  00E4                     	goto	l1255
  2110  00E4  28E7               u870:
  2111  00E5                     	line	42
  2112                           	
  2113                           l1253:	
  2114  00E5                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  2115  00E5  17D8               	goto	l1255
  2116  00E6  28E7               	
  2117                           l771:	
  2118  00E7                     	line	43
  2119                           	
  2120                           l1255:	
  2121  00E7                     	movf	(___xxtofl@arg+3),w
  2122  00E7  0858               	movwf	(?___xxtofl+3)
  2123  00E8  00CE               	movf	(___xxtofl@arg+2),w
  2124  00E9  0857               	movwf	(?___xxtofl+2)
  2125  00EA  00CD               	movf	(___xxtofl@arg+1),w
  2126  00EB  0856               	movwf	(?___xxtofl+1)
  2127  00EC  00CC               	movf	(___xxtofl@arg),w
  2128  00ED  0855               	movwf	(?___xxtofl)
  2129  00EE  00CB               
  2130                           	goto	l758
  2131  00EF  28F0               	
  2132                           l1257:	
  2133  00F0                     	line	44
  2134                           	
  2135                           l758:	
  2136  00F0                     	return
  2137  00F0  0008               	opt stack 0
  2138                           GLOBAL	__end_of___xxtofl
  2139                           	__end_of___xxtofl:
  2140  00F1                     	signat	___xxtofl,8316
  2141                           	global	___flge
  2142                           
  2143 ;; *************** function ___flge *****************
  2144 ;; Defined at:
  2145 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  ff1             4    5[BANK0 ] unsigned char 
  2148 ;;  ff2             4    9[BANK0 ] unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;		None               void
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2160 ;;      Params:         0       8       0       0       0
  2161 ;;      Locals:         0       0       0       0       0
  2162 ;;      Temps:          0       8       0       0       0
  2163 ;;      Totals:         0      16       0       0       0
  2164 ;;Total ram usage:       16 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; Hardware stack levels required when called:    2
  2167 ;; This function calls:
  2168 ;;		Nothing
  2169 ;; This function is called by:
  2170 ;;		_LeerADC
  2171 ;; This function uses a non-reentrant model
  2172 ;;
  2173                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  2174                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
  2175                           	line	4
  2176                           global __ptext6
  2177                           __ptext6:	;psect for function ___flge
  2178  00F1                     psect	text6
  2179                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
  2180                           	line	4
  2181                           	global	__size_of___flge
  2182                           	__size_of___flge	equ	__end_of___flge-___flge
  2183  00C3                     	
  2184                           ___flge:	
  2185  00F1                     ;incstack = 0
  2186                           	opt	stack 4
  2187                           ; Regs used in ___flge: [wreg+status,2+status,0]
  2188                           	line	7
  2189                           	
  2190                           l1189:	
  2191  00F1                     	movlw	0
  2192  00F1  3000               	bcf	status, 5	;RP0=0, select bank0
  2193  00F2  1283               	bcf	status, 6	;RP1=0, select bank0
  2194  00F3  1303               	andwf	(___flge@ff1),w
  2195  00F4  054B               	movwf	(??___flge+0)+0
  2196  00F5  00D3               	movlw	0
  2197  00F6  3000               	andwf	(___flge@ff1+1),w
  2198  00F7  054C               	movwf	((??___flge+0)+0+1)
  2199  00F8  00D4               	movlw	080h
  2200  00F9  3080               	andwf	(___flge@ff1+2),w
  2201  00FA  054D               	movwf	((??___flge+0)+0+2)
  2202  00FB  00D5               	movlw	07Fh
  2203  00FC  307F               	andwf	(___flge@ff1+3),w
  2204  00FD  054E               	movwf	((??___flge+0)+0+3)
  2205  00FE  00D6               	movf	3+(??___flge+0)+0,w
  2206  00FF  0856               	iorwf	2+(??___flge+0)+0,w
  2207  0100  0455               	iorwf	1+(??___flge+0)+0,w
  2208  0101  0454               	iorwf	0+(??___flge+0)+0,w
  2209  0102  0453               	skipz
  2210  0103  1D03               	goto	u671
  2211  0104  2906               	goto	u670
  2212  0105  2907               u671:
  2213  0106                     	goto	l522
  2214  0106  290F               u670:
  2215  0107                     	line	8
  2216                           	
  2217                           l1191:	
  2218  0107                     	movlw	high highword(0)
  2219  0107  3000               	movwf	(___flge@ff1+3)
  2220  0108  00CE               	movlw	low highword(0)
  2221  0109  3000               	movwf	(___flge@ff1+2)
  2222  010A  00CD               	movlw	high(0)
  2223  010B  3000               	movwf	(___flge@ff1+1)
  2224  010C  00CC               	movlw	low(0)
  2225  010D  3000               	movwf	(___flge@ff1)
  2226  010E  00CB               
  2227                           	
  2228                           l522:	
  2229  010F                     	line	9
  2230                           	movlw	0
  2231  010F  3000               	andwf	(___flge@ff2),w
  2232  0110  054F               	movwf	(??___flge+0)+0
  2233  0111  00D3               	movlw	0
  2234  0112  3000               	andwf	(___flge@ff2+1),w
  2235  0113  0550               	movwf	((??___flge+0)+0+1)
  2236  0114  00D4               	movlw	080h
  2237  0115  3080               	andwf	(___flge@ff2+2),w
  2238  0116  0551               	movwf	((??___flge+0)+0+2)
  2239  0117  00D5               	movlw	07Fh
  2240  0118  307F               	andwf	(___flge@ff2+3),w
  2241  0119  0552               	movwf	((??___flge+0)+0+3)
  2242  011A  00D6               	movf	3+(??___flge+0)+0,w
  2243  011B  0856               	iorwf	2+(??___flge+0)+0,w
  2244  011C  0455               	iorwf	1+(??___flge+0)+0,w
  2245  011D  0454               	iorwf	0+(??___flge+0)+0,w
  2246  011E  0453               	skipz
  2247  011F  1D03               	goto	u681
  2248  0120  2922               	goto	u680
  2249  0121  2923               u681:
  2250  0122                     	goto	l1195
  2251  0122  292C               u680:
  2252  0123                     	line	10
  2253                           	
  2254                           l1193:	
  2255  0123                     	movlw	high highword(0)
  2256  0123  3000               	movwf	(___flge@ff2+3)
  2257  0124  00D2               	movlw	low highword(0)
  2258  0125  3000               	movwf	(___flge@ff2+2)
  2259  0126  00D1               	movlw	high(0)
  2260  0127  3000               	movwf	(___flge@ff2+1)
  2261  0128  00D0               	movlw	low(0)
  2262  0129  3000               	movwf	(___flge@ff2)
  2263  012A  00CF               
  2264                           	goto	l1195
  2265  012B  292C               	
  2266                           l523:	
  2267  012C                     	line	12
  2268                           	
  2269                           l1195:	
  2270  012C                     	btfss	(___flge@ff1+3),(31)&7
  2271  012C  1FCE               	goto	u691
  2272  012D  292F               	goto	u690
  2273  012E  2930               u691:
  2274  012F                     	goto	l1199
  2275  012F  2962               u690:
  2276  0130                     	line	13
  2277                           	
  2278                           l1197:	
  2279  0130                     	movlw	0
  2280  0130  3000               	movwf	((??___flge+0)+0)
  2281  0131  00D3               	movlw	0
  2282  0132  3000               	movwf	((??___flge+0)+0+1)
  2283  0133  00D4               	movlw	0
  2284  0134  3000               	movwf	((??___flge+0)+0+2)
  2285  0135  00D5               	movlw	080h
  2286  0136  3080               	movwf	((??___flge+0)+0+3)
  2287  0137  00D6               	comf	(___flge@ff1),w
  2288  0138  094B               	movwf	(??___flge+4)+0
  2289  0139  00D7               	comf	(___flge@ff1+1),w
  2290  013A  094C               	movwf	((??___flge+4)+0+1)
  2291  013B  00D8               	comf	(___flge@ff1+2),w
  2292  013C  094D               	movwf	((??___flge+4)+0+2)
  2293  013D  00D9               	comf	(___flge@ff1+3),w
  2294  013E  094E               	movwf	((??___flge+4)+0+3)
  2295  013F  00DA               	incf	(??___flge+4)+0,f
  2296  0140  0AD7               	skipnz
  2297  0141  1903               	incf	((??___flge+4)+0+1),f
  2298  0142  0AD8               	skipnz
  2299  0143  1903               	incf	((??___flge+4)+0+2),f
  2300  0144  0AD9               	skipnz
  2301  0145  1903               	incf	((??___flge+4)+0+3),f
  2302  0146  0ADA               	movf	0+(??___flge+4)+0,w
  2303  0147  0857               	addwf	(??___flge+0)+0,f
  2304  0148  07D3               	movf	1+(??___flge+4)+0,w
  2305  0149  0858               	skipnc
  2306  014A  1803               	incfsz	1+(??___flge+4)+0,w
  2307  014B  0F58               	goto	u700
  2308  014C  294E               	goto	u701
  2309  014D  294F               u700:
  2310  014E                     	addwf	(??___flge+0)+1,f
  2311  014E  07D4               u701:
  2312  014F                     	movf	2+(??___flge+4)+0,w
  2313  014F  0859               	skipnc
  2314  0150  1803               	incfsz	2+(??___flge+4)+0,w
  2315  0151  0F59               	goto	u702
  2316  0152  2954               	goto	u703
  2317  0153  2955               u702:
  2318  0154                     	addwf	(??___flge+0)+2,f
  2319  0154  07D5               u703:
  2320  0155                     	movf	3+(??___flge+4)+0,w
  2321  0155  085A               	skipnc
  2322  0156  1803               	incf	3+(??___flge+4)+0,w
  2323  0157  0A5A               	addwf	(??___flge+0)+3,f
  2324  0158  07D6               	movf	3+(??___flge+0)+0,w
  2325  0159  0856               	movwf	(___flge@ff1+3)
  2326  015A  00CE               	movf	2+(??___flge+0)+0,w
  2327  015B  0855               	movwf	(___flge@ff1+2)
  2328  015C  00CD               	movf	1+(??___flge+0)+0,w
  2329  015D  0854               	movwf	(___flge@ff1+1)
  2330  015E  00CC               	movf	0+(??___flge+0)+0,w
  2331  015F  0853               	movwf	(___flge@ff1)
  2332  0160  00CB               
  2333                           	goto	l1199
  2334  0161  2962               	
  2335                           l524:	
  2336  0162                     	line	14
  2337                           	
  2338                           l1199:	
  2339  0162                     	btfss	(___flge@ff2+3),(31)&7
  2340  0162  1FD2               	goto	u711
  2341  0163  2965               	goto	u710
  2342  0164  2966               u711:
  2343  0165                     	goto	l1203
  2344  0165  2998               u710:
  2345  0166                     	line	15
  2346                           	
  2347                           l1201:	
  2348  0166                     	movlw	0
  2349  0166  3000               	movwf	((??___flge+0)+0)
  2350  0167  00D3               	movlw	0
  2351  0168  3000               	movwf	((??___flge+0)+0+1)
  2352  0169  00D4               	movlw	0
  2353  016A  3000               	movwf	((??___flge+0)+0+2)
  2354  016B  00D5               	movlw	080h
  2355  016C  3080               	movwf	((??___flge+0)+0+3)
  2356  016D  00D6               	comf	(___flge@ff2),w
  2357  016E  094F               	movwf	(??___flge+4)+0
  2358  016F  00D7               	comf	(___flge@ff2+1),w
  2359  0170  0950               	movwf	((??___flge+4)+0+1)
  2360  0171  00D8               	comf	(___flge@ff2+2),w
  2361  0172  0951               	movwf	((??___flge+4)+0+2)
  2362  0173  00D9               	comf	(___flge@ff2+3),w
  2363  0174  0952               	movwf	((??___flge+4)+0+3)
  2364  0175  00DA               	incf	(??___flge+4)+0,f
  2365  0176  0AD7               	skipnz
  2366  0177  1903               	incf	((??___flge+4)+0+1),f
  2367  0178  0AD8               	skipnz
  2368  0179  1903               	incf	((??___flge+4)+0+2),f
  2369  017A  0AD9               	skipnz
  2370  017B  1903               	incf	((??___flge+4)+0+3),f
  2371  017C  0ADA               	movf	0+(??___flge+4)+0,w
  2372  017D  0857               	addwf	(??___flge+0)+0,f
  2373  017E  07D3               	movf	1+(??___flge+4)+0,w
  2374  017F  0858               	skipnc
  2375  0180  1803               	incfsz	1+(??___flge+4)+0,w
  2376  0181  0F58               	goto	u720
  2377  0182  2984               	goto	u721
  2378  0183  2985               u720:
  2379  0184                     	addwf	(??___flge+0)+1,f
  2380  0184  07D4               u721:
  2381  0185                     	movf	2+(??___flge+4)+0,w
  2382  0185  0859               	skipnc
  2383  0186  1803               	incfsz	2+(??___flge+4)+0,w
  2384  0187  0F59               	goto	u722
  2385  0188  298A               	goto	u723
  2386  0189  298B               u722:
  2387  018A                     	addwf	(??___flge+0)+2,f
  2388  018A  07D5               u723:
  2389  018B                     	movf	3+(??___flge+4)+0,w
  2390  018B  085A               	skipnc
  2391  018C  1803               	incf	3+(??___flge+4)+0,w
  2392  018D  0A5A               	addwf	(??___flge+0)+3,f
  2393  018E  07D6               	movf	3+(??___flge+0)+0,w
  2394  018F  0856               	movwf	(___flge@ff2+3)
  2395  0190  00D2               	movf	2+(??___flge+0)+0,w
  2396  0191  0855               	movwf	(___flge@ff2+2)
  2397  0192  00D1               	movf	1+(??___flge+0)+0,w
  2398  0193  0854               	movwf	(___flge@ff2+1)
  2399  0194  00D0               	movf	0+(??___flge+0)+0,w
  2400  0195  0853               	movwf	(___flge@ff2)
  2401  0196  00CF               
  2402                           	goto	l1203
  2403  0197  2998               	
  2404                           l525:	
  2405  0198                     	line	16
  2406                           	
  2407                           l1203:	
  2408  0198                     	movlw	080h
  2409  0198  3080               	xorwf	(___flge@ff1+3),f
  2410  0199  06CE               	line	17
  2411                           	
  2412                           l1205:	
  2413  019A                     	movlw	080h
  2414  019A  3080               	xorwf	(___flge@ff2+3),f
  2415  019B  06D2               	line	18
  2416                           	
  2417                           l1207:	
  2418  019C                     	movf	(___flge@ff2+3),w
  2419  019C  0852               	subwf	(___flge@ff1+3),w
  2420  019D  024E               	skipz
  2421  019E  1D03               	goto	u735
  2422  019F  29AA               	movf	(___flge@ff2+2),w
  2423  01A0  0851               	subwf	(___flge@ff1+2),w
  2424  01A1  024D               	skipz
  2425  01A2  1D03               	goto	u735
  2426  01A3  29AA               	movf	(___flge@ff2+1),w
  2427  01A4  0850               	subwf	(___flge@ff1+1),w
  2428  01A5  024C               	skipz
  2429  01A6  1D03               	goto	u735
  2430  01A7  29AA               	movf	(___flge@ff2),w
  2431  01A8  084F               	subwf	(___flge@ff1),w
  2432  01A9  024B               u735:
  2433  01AA                     	skipnc
  2434  01AA  1803               	goto	u731
  2435  01AB  29AD               	goto	u730
  2436  01AC  29AE               u731:
  2437  01AD                     	goto	l1211
  2438  01AD  29B0               u730:
  2439  01AE                     	
  2440                           l1209:	
  2441  01AE                     	clrc
  2442  01AE  1003               	
  2443                           	goto	l526
  2444  01AF  29B3               	
  2445                           l1171:	
  2446  01B0                     	
  2447                           l1211:	
  2448  01B0                     	setc
  2449  01B0  1403               	
  2450                           	goto	l526
  2451  01B1  29B3               	
  2452                           l1173:	
  2453  01B2                     	goto	l526
  2454  01B2  29B3               	
  2455                           l1213:	
  2456  01B3                     	line	19
  2457                           	
  2458                           l526:	
  2459  01B3                     	return
  2460  01B3  0008               	opt stack 0
  2461                           GLOBAL	__end_of___flge
  2462                           	__end_of___flge:
  2463  01B4                     	signat	___flge,8312
  2464                           	global	_ADC
  2465                           
  2466 ;; *************** function _ADC *****************
  2467 ;; Defined at:
  2468 ;;		line 14 in file "LibSensorMovFoto.c"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		wreg
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2482 ;;      Params:         0       0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0
  2485 ;;      Totals:         0       0       0       0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    2
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2496                           	file	"LibSensorMovFoto.c"
  2497                           	line	14
  2498                           global __ptext7
  2499                           __ptext7:	;psect for function _ADC
  2500  043A                     psect	text7
  2501                           	file	"LibSensorMovFoto.c"
  2502                           	line	14
  2503                           	global	__size_of_ADC
  2504                           	__size_of_ADC	equ	__end_of_ADC-_ADC
  2505  0010                     	
  2506                           _ADC:	
  2507  043A                     ;incstack = 0
  2508                           	opt	stack 5
  2509                           ; Regs used in _ADC: [wreg]
  2510                           	line	16
  2511                           	
  2512                           l1259:	
  2513  043A                     ;LibSensorMovFoto.c: 16:     INTCONbits.GIE = 1;
  2514                           	bsf	(11),7	;volatile
  2515  043A  178B               	line	17
  2516                           ;LibSensorMovFoto.c: 17:     INTCONbits.PEIE = 1;
  2517                           	bsf	(11),6	;volatile
  2518  043B  170B               	line	18
  2519                           ;LibSensorMovFoto.c: 18:     PIE1bits.ADIE = 1;
  2520                           	bsf	status, 5	;RP0=1, select bank1
  2521  043C  1683               	bcf	status, 6	;RP1=0, select bank1
  2522  043D  1303               	bsf	(140)^080h,6	;volatile
  2523  043E  170C               	line	19
  2524                           ;LibSensorMovFoto.c: 19:     PIR1bits.ADIF = 0;
  2525                           	bcf	status, 5	;RP0=0, select bank0
  2526  043F  1283               	bcf	status, 6	;RP1=0, select bank0
  2527  0440  1303               	bcf	(12),6	;volatile
  2528  0441  130C               	line	20
  2529                           	
  2530                           l1261:	
  2531  0442                     ;LibSensorMovFoto.c: 20:     ADCON0 = 0b10000001;
  2532                           	movlw	low(081h)
  2533  0442  3081               	movwf	(31)	;volatile
  2534  0443  009F               	line	21
  2535                           	
  2536                           l1263:	
  2537  0444                     ;LibSensorMovFoto.c: 21:     ADCON1bits.ADFM = 0;
  2538                           	bsf	status, 5	;RP0=1, select bank1
  2539  0444  1683               	bcf	status, 6	;RP1=0, select bank1
  2540  0445  1303               	bcf	(159)^080h,7	;volatile
  2541  0446  139F               	line	22
  2542                           	
  2543                           l1265:	
  2544  0447                     ;LibSensorMovFoto.c: 22:     ADCON1bits.VCFG1 = 0;
  2545                           	bcf	(159)^080h,5	;volatile
  2546  0447  129F               	line	23
  2547                           	
  2548                           l1267:	
  2549  0448                     ;LibSensorMovFoto.c: 23:     ADCON1bits.VCFG0 = 0;
  2550                           	bcf	(159)^080h,4	;volatile
  2551  0448  121F               	line	24
  2552                           	
  2553                           l83:	
  2554  0449                     	return
  2555  0449  0008               	opt stack 0
  2556                           GLOBAL	__end_of_ADC
  2557                           	__end_of_ADC:
  2558  044A                     	signat	_ADC,89
  2559                           	global	_isr
  2560                           
  2561 ;; *************** function _isr *****************
  2562 ;; Defined at:
  2563 ;;		line 67 in file "MainSensorMovFoto.c"
  2564 ;; Parameters:    Size  Location     Type
  2565 ;;		None
  2566 ;; Auto vars:     Size  Location     Type
  2567 ;;		None
  2568 ;; Return value:  Size  Location     Type
  2569 ;;                  1    wreg      void 
  2570 ;; Registers used:
  2571 ;;		wreg, status,2, status,0, pclath, cstack
  2572 ;; Tracked objects:
  2573 ;;		On entry : 0/0
  2574 ;;		On exit  : 0/0
  2575 ;;		Unchanged: 0/0
  2576 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2577 ;;      Params:         0       0       0       0       0
  2578 ;;      Locals:         0       0       0       0       0
  2579 ;;      Temps:          0       5       0       0       0
  2580 ;;      Totals:         0       5       0       0       0
  2581 ;;Total ram usage:        5 bytes
  2582 ;; Hardware stack levels used:    1
  2583 ;; Hardware stack levels required when called:    1
  2584 ;; This function calls:
  2585 ;;		___awmod
  2586 ;;		___fltol
  2587 ;; This function is called by:
  2588 ;;		Interrupt level 1
  2589 ;; This function uses a non-reentrant model
  2590 ;;
  2591                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2592                           	file	"MainSensorMovFoto.c"
  2593                           	line	67
  2594                           global __ptext8
  2595                           __ptext8:	;psect for function _isr
  2596  01B4                     psect	text8
  2597                           	file	"MainSensorMovFoto.c"
  2598                           	line	67
  2599                           	global	__size_of_isr
  2600                           	__size_of_isr	equ	__end_of_isr-_isr
  2601  00AB                     	
  2602                           _isr:	
  2603  01B4                     ;incstack = 0
  2604                           	opt	stack 4
  2605                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2606                           psect	intentry,class=CODE,delta=2
  2607                           global __pintentry
  2608                           __pintentry:
  2609  0004                     global interrupt_function
  2610                           interrupt_function:
  2611  0004                     	global saved_w
  2612                           	saved_w	set	btemp+0
  2613  007E                     	movwf	saved_w
  2614  0004  00FE               	swapf	status,w
  2615  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  2616  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  2617  0007  1303               	movwf	(??_isr+3)
  2618  0008  00C9               	movf	pclath,w
  2619  0009  080A               	movwf	(??_isr+4)
  2620  000A  00CA               	ljmp	_isr
  2621  000B  120A  118A  29B4   psect	text8
  2622                           	line	69
  2623                           	
  2624                           i1l1367:	
  2625  01B4                     ;MainSensorMovFoto.c: 69:     if (ADCON0bits.GO_DONE == 0){
  2626                           	btfsc	(31),1	;volatile
  2627  01B4  189F               	goto	u109_21
  2628  01B5  29B7               	goto	u109_20
  2629  01B6  29B8               u109_21:
  2630  01B7                     	goto	i1l231
  2631  01B7  29BB               u109_20:
  2632  01B8                     	line	70
  2633                           	
  2634                           i1l1369:	
  2635  01B8                     ;MainSensorMovFoto.c: 70:         varADC = 1;
  2636                           	clrf	(_varADC)
  2637  01B8  01BB               	incf	(_varADC),f
  2638  01B9  0ABB               	line	71
  2639                           ;MainSensorMovFoto.c: 71:         PIR1bits.ADIF = 0;
  2640                           	bcf	(12),6	;volatile
  2641  01BA  130C               	line	72
  2642                           ;MainSensorMovFoto.c: 72:     }
  2643                           	
  2644                           i1l231:	
  2645  01BB                     	line	73
  2646                           ;MainSensorMovFoto.c: 73:     if(PIR1bits.SSPIF == 1){
  2647                           	btfss	(12),3	;volatile
  2648  01BB  1D8C               	goto	u110_21
  2649  01BC  29BE               	goto	u110_20
  2650  01BD  29BF               u110_21:
  2651  01BE                     	goto	i1l249
  2652  01BE  2A58               u110_20:
  2653  01BF                     	line	74
  2654                           	
  2655                           i1l1371:	
  2656  01BF                     ;MainSensorMovFoto.c: 74:         SSPCONbits.CKP = 0;
  2657                           	bcf	(20),4	;volatile
  2658  01BF  1214               	line	75
  2659                           ;MainSensorMovFoto.c: 75:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  2660                           	btfsc	(20),6	;volatile
  2661  01C0  1B14               	goto	u111_21
  2662  01C1  29C3               	goto	u111_20
  2663  01C2  29C4               u111_21:
  2664  01C3                     	goto	i1l1375
  2665  01C3  29C9               u111_20:
  2666  01C4                     	
  2667                           i1l1373:	
  2668  01C4                     	btfss	(20),7	;volatile
  2669  01C4  1F94               	goto	u112_21
  2670  01C5  29C7               	goto	u112_20
  2671  01C6  29C8               u112_21:
  2672  01C7                     	goto	i1l1383
  2673  01C7  29D1               u112_20:
  2674  01C8                     	goto	i1l1375
  2675  01C8  29C9               	
  2676                           i1l235:	
  2677  01C9                     	line	76
  2678                           	
  2679                           i1l1375:	
  2680  01C9                     ;MainSensorMovFoto.c: 76:             z = SSPBUF;
  2681                           	movf	(19),w	;volatile
  2682  01C9  0813               	movwf	(??_isr+0)+0
  2683  01CA  00C6               	movf	(??_isr+0)+0,w
  2684  01CB  0846               	movwf	(_z)
  2685  01CC  00B9               	line	77
  2686                           	
  2687                           i1l1377:	
  2688  01CD                     ;MainSensorMovFoto.c: 77:             SSPCONbits.SSPOV = 0;
  2689                           	bcf	(20),6	;volatile
  2690  01CD  1314               	line	78
  2691                           	
  2692                           i1l1379:	
  2693  01CE                     ;MainSensorMovFoto.c: 78:             SSPCONbits.WCOL = 0;
  2694                           	bcf	(20),7	;volatile
  2695  01CE  1394               	line	79
  2696                           	
  2697                           i1l1381:	
  2698  01CF                     ;MainSensorMovFoto.c: 79:             SSPCONbits.CKP = 1;
  2699                           	bsf	(20),4	;volatile
  2700  01CF  1614               	goto	i1l1383
  2701  01D0  29D1               	line	80
  2702                           ;MainSensorMovFoto.c: 80:         }
  2703                           	
  2704                           i1l233:	
  2705  01D1                     	line	81
  2706                           	
  2707                           i1l1383:	
  2708  01D1                     ;MainSensorMovFoto.c: 81:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  2709                           	bsf	status, 5	;RP0=1, select bank1
  2710  01D1  1683               	bcf	status, 6	;RP1=0, select bank1
  2711  01D2  1303               	btfsc	(148)^080h,5	;volatile
  2712  01D3  1A94               	goto	u113_21
  2713  01D4  29D6               	goto	u113_20
  2714  01D5  29D7               u113_21:
  2715  01D6                     	goto	i1l236
  2716  01D6  29F7               u113_20:
  2717  01D7                     	
  2718                           i1l1385:	
  2719  01D7                     	btfsc	(148)^080h,2	;volatile
  2720  01D7  1914               	goto	u114_21
  2721  01D8  29DA               	goto	u114_20
  2722  01D9  29DB               u114_21:
  2723  01DA                     	goto	i1l236
  2724  01DA  29F7               u114_20:
  2725  01DB                     	line	83
  2726                           	
  2727                           i1l1387:	
  2728  01DB                     ;MainSensorMovFoto.c: 83:             z = SSPBUF;
  2729                           	bcf	status, 5	;RP0=0, select bank0
  2730  01DB  1283               	bcf	status, 6	;RP1=0, select bank0
  2731  01DC  1303               	movf	(19),w	;volatile
  2732  01DD  0813               	movwf	(??_isr+0)+0
  2733  01DE  00C6               	movf	(??_isr+0)+0,w
  2734  01DF  0846               	movwf	(_z)
  2735  01E0  00B9               	line	85
  2736                           	
  2737                           i1l1389:	
  2738  01E1                     ;MainSensorMovFoto.c: 85:             PIR1bits.SSPIF = 0;
  2739                           	bcf	(12),3	;volatile
  2740  01E1  118C               	line	86
  2741                           	
  2742                           i1l1391:	
  2743  01E2                     ;MainSensorMovFoto.c: 86:             SSPCONbits.CKP = 1;
  2744                           	bsf	(20),4	;volatile
  2745  01E2  1614               	line	87
  2746                           ;MainSensorMovFoto.c: 87:             while(!SSPSTATbits.BF);
  2747                           	goto	i1l237
  2748  01E3  29E4               	
  2749                           i1l238:	
  2750  01E4                     	
  2751                           i1l237:	
  2752  01E4                     	bsf	status, 5	;RP0=1, select bank1
  2753  01E4  1683               	bcf	status, 6	;RP1=0, select bank1
  2754  01E5  1303               	btfss	(148)^080h,0	;volatile
  2755  01E6  1C14               	goto	u115_21
  2756  01E7  29E9               	goto	u115_20
  2757  01E8  29EA               u115_21:
  2758  01E9                     	goto	i1l237
  2759  01E9  29E4               u115_20:
  2760  01EA                     	goto	i1l1393
  2761  01EA  29EB               	
  2762                           i1l239:	
  2763  01EB                     	line	88
  2764                           	
  2765                           i1l1393:	
  2766  01EB                     ;MainSensorMovFoto.c: 88:             PORTD = SSPBUF;
  2767                           	bcf	status, 5	;RP0=0, select bank0
  2768  01EB  1283               	bcf	status, 6	;RP1=0, select bank0
  2769  01EC  1303               	movf	(19),w	;volatile
  2770  01ED  0813               	movwf	(8)	;volatile
  2771  01EE  0088               	line	89
  2772                           ;MainSensorMovFoto.c: 89:             _delay((unsigned long)((250)*(4000000/4000000.0)))
                                 ;
  2773                           	opt asmopt_push
  2774                           opt asmopt_off
  2775                           	movlw	82
  2776  01EF  3052               	bcf	status, 5	;RP0=0, select bank0
  2777  01F0  1283               	bcf	status, 6	;RP1=0, select bank0
  2778  01F1  1303               movwf	((??_isr+0)+0),f
  2779  01F2  00C6               	u126_27:
  2780  01F3                     decfsz	(??_isr+0)+0,f
  2781  01F3  0BC6               	goto	u126_27
  2782  01F4  29F3               	nop
  2783  01F5  0000               opt asmopt_pop
  2784                           
  2785                           	line	90
  2786                           ;MainSensorMovFoto.c: 90:         }
  2787                           	goto	i1l240
  2788  01F6  2A54               	line	91
  2789                           ;MainSensorMovFoto.c: 91:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  2790                           	
  2791                           i1l236:	
  2792  01F7                     	btfsc	(148)^080h,5	;volatile
  2793  01F7  1A94               	goto	u116_21
  2794  01F8  29FA               	goto	u116_20
  2795  01F9  29FB               u116_21:
  2796  01FA                     	goto	i1l240
  2797  01FA  2A54               u116_20:
  2798  01FB                     	
  2799                           i1l1395:	
  2800  01FB                     	btfss	(148)^080h,2	;volatile
  2801  01FB  1D14               	goto	u117_21
  2802  01FC  29FE               	goto	u117_20
  2803  01FD  29FF               u117_21:
  2804  01FE                     	goto	i1l240
  2805  01FE  2A54               u117_20:
  2806  01FF                     	line	92
  2807                           	
  2808                           i1l1397:	
  2809  01FF                     ;MainSensorMovFoto.c: 92:             z = SSPBUF;
  2810                           	bcf	status, 5	;RP0=0, select bank0
  2811  01FF  1283               	bcf	status, 6	;RP1=0, select bank0
  2812  0200  1303               	movf	(19),w	;volatile
  2813  0201  0813               	movwf	(??_isr+0)+0
  2814  0202  00C6               	movf	(??_isr+0)+0,w
  2815  0203  0846               	movwf	(_z)
  2816  0204  00B9               	line	93
  2817                           	
  2818                           i1l1399:	
  2819  0205                     ;MainSensorMovFoto.c: 93:             BF = 0;
  2820                           	bsf	status, 5	;RP0=1, select bank1
  2821  0205  1683               	bcf	status, 6	;RP1=0, select bank1
  2822  0206  1303               	bcf	(1184/8)^080h,(1184)&7	;volatile
  2823  0207  1014               	line	94
  2824                           	
  2825                           i1l1401:	
  2826  0208                     ;MainSensorMovFoto.c: 94:             select = counter%3;
  2827                           	movlw	03h
  2828  0208  3003               	movwf	(___awmod@divisor)
  2829  0209  00F0               	movlw	0
  2830  020A  3000               	movwf	((___awmod@divisor))+1
  2831  020B  00F1               	movf	(_counter),w
  2832  020C  087B               	bcf	status, 5	;RP0=0, select bank0
  2833  020D  1283               	bcf	status, 6	;RP1=0, select bank0
  2834  020E  1303               	movwf	(??_isr+0)+0
  2835  020F  00C6               	clrf	(??_isr+0)+0+1
  2836  0210  01C7               	movf	0+(??_isr+0)+0,w
  2837  0211  0846               	movwf	(___awmod@dividend)
  2838  0212  00F2               	movf	1+(??_isr+0)+0,w
  2839  0213  0847               	movwf	(___awmod@dividend+1)
  2840  0214  00F3               	fcall	___awmod
  2841  0215  120A  118A  22F9  120A  118A  	movf	(0+(?___awmod)),w
  2842  021A  0870               	bcf	status, 5	;RP0=0, select bank0
  2843  021B  1283               	bcf	status, 6	;RP1=0, select bank0
  2844  021C  1303               	movwf	(??_isr+2)+0
  2845  021D  00C8               	movf	(??_isr+2)+0,w
  2846  021E  0848               	movwf	(_select)
  2847  021F  00FD               	line	95
  2848                           	
  2849                           i1l1403:	
  2850  0220                     ;MainSensorMovFoto.c: 95:             if(select == 0){
  2851                           	movf	((_select)),w
  2852  0220  087D               	btfss	status,2
  2853  0221  1D03               	goto	u118_21
  2854  0222  2A24               	goto	u118_20
  2855  0223  2A25               u118_21:
  2856  0224                     	goto	i1l1407
  2857  0224  2A28               u118_20:
  2858  0225                     	line	96
  2859                           	
  2860                           i1l1405:	
  2861  0225                     ;MainSensorMovFoto.c: 96:                 SSPBUF = SendSignal;
  2862                           	movf	(_SendSignal),w
  2863  0225  087C               	movwf	(19)	;volatile
  2864  0226  0093               	line	97
  2865                           ;MainSensorMovFoto.c: 97:             }else if(select == 1){
  2866                           	goto	i1l1413
  2867  0227  2A43               	
  2868                           i1l242:	
  2869  0228                     	
  2870                           i1l1407:	
  2871  0228                     		decf	((_select)),w
  2872  0228  037D               	btfss	status,2
  2873  0229  1D03               	goto	u119_21
  2874  022A  2A2C               	goto	u119_20
  2875  022B  2A2D               u119_21:
  2876  022C                     	goto	i1l1411
  2877  022C  2A3F               u119_20:
  2878  022D                     	line	98
  2879                           	
  2880                           i1l1409:	
  2881  022D                     ;MainSensorMovFoto.c: 98:                 SSPBUF = ValorADC;
  2882                           	movf	(_ValorADC+3),w
  2883  022D  0823               	movwf	(___fltol@f1+3)
  2884  022E  00F3               	movf	(_ValorADC+2),w
  2885  022F  0822               	movwf	(___fltol@f1+2)
  2886  0230  00F2               	movf	(_ValorADC+1),w
  2887  0231  0821               	movwf	(___fltol@f1+1)
  2888  0232  00F1               	movf	(_ValorADC),w
  2889  0233  0820               	movwf	(___fltol@f1)
  2890  0234  00F0               
  2891                           	fcall	___fltol
  2892  0235  120A  118A  225F  120A  118A  	movf	(0+(?___fltol)),w
  2893  023A  0870               	bcf	status, 5	;RP0=0, select bank0
  2894  023B  1283               	bcf	status, 6	;RP1=0, select bank0
  2895  023C  1303               	movwf	(19)	;volatile
  2896  023D  0093               	line	99
  2897                           ;MainSensorMovFoto.c: 99:             }else{
  2898                           	goto	i1l1413
  2899  023E  2A43               	
  2900                           i1l244:	
  2901  023F                     	line	100
  2902                           	
  2903                           i1l1411:	
  2904  023F                     ;MainSensorMovFoto.c: 100:                 SSPBUF = VarMOV;
  2905                           	movf	(_VarMOV),w
  2906  023F  0861               	movwf	(19)	;volatile
  2907  0240  0093               	goto	i1l1413
  2908  0241  2A43               	line	101
  2909                           ;MainSensorMovFoto.c: 101:             }
  2910                           	
  2911                           i1l245:	
  2912  0242                     	goto	i1l1413
  2913  0242  2A43               	
  2914                           i1l243:	
  2915  0243                     	line	102
  2916                           	
  2917                           i1l1413:	
  2918  0243                     ;MainSensorMovFoto.c: 102:             SSPCONbits.CKP = 1;
  2919                           	bsf	(20),4	;volatile
  2920  0243  1614               	line	103
  2921                           ;MainSensorMovFoto.c: 103:             _delay((unsigned long)((250)*(4000000/4000000.0))
                                 );
  2922                           	opt asmopt_push
  2923                           opt asmopt_off
  2924                           	movlw	82
  2925  0244  3052               	bcf	status, 5	;RP0=0, select bank0
  2926  0245  1283               	bcf	status, 6	;RP1=0, select bank0
  2927  0246  1303               movwf	((??_isr+0)+0),f
  2928  0247  00C6               	u127_27:
  2929  0248                     decfsz	(??_isr+0)+0,f
  2930  0248  0BC6               	goto	u127_27
  2931  0249  2A48               	nop
  2932  024A  0000               opt asmopt_pop
  2933                           
  2934                           	line	104
  2935                           ;MainSensorMovFoto.c: 104:             while(SSPSTATbits.BF);
  2936                           	goto	i1l246
  2937  024B  2A4C               	
  2938                           i1l247:	
  2939  024C                     	
  2940                           i1l246:	
  2941  024C                     	bsf	status, 5	;RP0=1, select bank1
  2942  024C  1683               	bcf	status, 6	;RP1=0, select bank1
  2943  024D  1303               	btfsc	(148)^080h,0	;volatile
  2944  024E  1814               	goto	u120_21
  2945  024F  2A51               	goto	u120_20
  2946  0250  2A52               u120_21:
  2947  0251                     	goto	i1l246
  2948  0251  2A4C               u120_20:
  2949  0252                     	goto	i1l240
  2950  0252  2A54               	
  2951                           i1l248:	
  2952  0253                     	goto	i1l240
  2953  0253  2A54               	line	105
  2954                           ;MainSensorMovFoto.c: 105:         }
  2955                           	
  2956                           i1l241:	
  2957  0254                     	
  2958                           i1l240:	
  2959  0254                     	line	106
  2960                           ;MainSensorMovFoto.c: 106:         PIR1bits.SSPIF = 0;
  2961                           	bcf	status, 5	;RP0=0, select bank0
  2962  0254  1283               	bcf	status, 6	;RP1=0, select bank0
  2963  0255  1303               	bcf	(12),3	;volatile
  2964  0256  118C               	goto	i1l249
  2965  0257  2A58               	line	107
  2966                           ;MainSensorMovFoto.c: 107:     }
  2967                           	
  2968                           i1l232:	
  2969  0258                     	line	108
  2970                           	
  2971                           i1l249:	
  2972  0258                     	movf	(??_isr+4),w
  2973  0258  084A               	movwf	pclath
  2974  0259  008A               	swapf	(??_isr+3)^00h,w
  2975  025A  0E49               	movwf	status
  2976  025B  0083               	swapf	saved_w,f
  2977  025C  0EFE               	swapf	saved_w,w
  2978  025D  0E7E               	retfie
  2979  025E  0009               	opt stack 0
  2980                           GLOBAL	__end_of_isr
  2981                           	__end_of_isr:
  2982  025F                     	signat	_isr,89
  2983                           	global	___fltol
  2984                           
  2985 ;; *************** function ___fltol *****************
  2986 ;; Defined at:
  2987 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;  f1              4    0[COMMON] void 
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;  exp1            1   10[COMMON] unsigned char 
  2992 ;;  sign1           1    9[COMMON] unsigned char 
  2993 ;; Return value:  Size  Location     Type
  2994 ;;                  4    0[COMMON] long 
  2995 ;; Registers used:
  2996 ;;		wreg, status,2, status,0
  2997 ;; Tracked objects:
  2998 ;;		On entry : 0/0
  2999 ;;		On exit  : 0/0
  3000 ;;		Unchanged: 0/0
  3001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3002 ;;      Params:         4       0       0       0       0
  3003 ;;      Locals:         2       0       0       0       0
  3004 ;;      Temps:          5       0       0       0       0
  3005 ;;      Totals:        11       0       0       0       0
  3006 ;;Total ram usage:       11 bytes
  3007 ;; Hardware stack levels used:    1
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_isr
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           psect	text9,local,class=CODE,delta=2,merge=1,group=1
  3015                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  3016                           	line	43
  3017                           global __ptext9
  3018                           __ptext9:	;psect for function ___fltol
  3019  025F                     psect	text9
  3020                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  3021                           	line	43
  3022                           	global	__size_of___fltol
  3023                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  3024  009A                     	
  3025                           ___fltol:	
  3026  025F                     ;incstack = 0
  3027                           	opt	stack 4
  3028                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3029                           	line	47
  3030                           	
  3031                           i1l1331:	
  3032  025F                     	movf	(___fltol@f1),w
  3033  025F  0870               	movwf	(??___fltol+0)+0
  3034  0260  00F4               	movf	(___fltol@f1+1),w
  3035  0261  0871               	movwf	((??___fltol+0)+0+1)
  3036  0262  00F5               	movf	(___fltol@f1+2),w
  3037  0263  0872               	movwf	((??___fltol+0)+0+2)
  3038  0264  00F6               	movf	(___fltol@f1+3),w
  3039  0265  0873               	movwf	((??___fltol+0)+0+3)
  3040  0266  00F7               	clrc
  3041  0267  1003               	rlf	(??___fltol+0)+2,w
  3042  0268  0D76               	rlf	(??___fltol+0)+3,w
  3043  0269  0D77               	movwf	(??___fltol+4)+0
  3044  026A  00F8               	movf	(??___fltol+4)+0,w
  3045  026B  0878               	movwf	(___fltol@exp1)
  3046  026C  00FA               	movf	(((___fltol@exp1))),w
  3047  026D  087A               	btfss	status,2
  3048  026E  1D03               	goto	u99_21
  3049  026F  2A71               	goto	u99_20
  3050  0270  2A72               u99_21:
  3051  0271                     	goto	i1l1337
  3052  0271  2A7C               u99_20:
  3053  0272                     	line	48
  3054                           	
  3055                           i1l1333:	
  3056  0272                     	movlw	high highword(0)
  3057  0272  3000               	movwf	(?___fltol+3)
  3058  0273  00F3               	movlw	low highword(0)
  3059  0274  3000               	movwf	(?___fltol+2)
  3060  0275  00F2               	movlw	high(0)
  3061  0276  3000               	movwf	(?___fltol+1)
  3062  0277  00F1               	movlw	low(0)
  3063  0278  3000               	movwf	(?___fltol)
  3064  0279  00F0               
  3065                           	goto	i1l534
  3066  027A  2AF8               	
  3067                           i1l1335:	
  3068  027B                     	goto	i1l534
  3069  027B  2AF8               	
  3070                           i1l533:	
  3071  027C                     	line	49
  3072                           	
  3073                           i1l1337:	
  3074  027C                     	movf	(___fltol@f1),w
  3075  027C  0870               	movwf	(??___fltol+0)+0
  3076  027D  00F4               	movf	(___fltol@f1+1),w
  3077  027E  0871               	movwf	((??___fltol+0)+0+1)
  3078  027F  00F5               	movf	(___fltol@f1+2),w
  3079  0280  0872               	movwf	((??___fltol+0)+0+2)
  3080  0281  00F6               	movf	(___fltol@f1+3),w
  3081  0282  0873               	movwf	((??___fltol+0)+0+3)
  3082  0283  00F7               	movlw	01Fh
  3083  0284  301F               u100_25:
  3084  0285                     	clrc
  3085  0285  1003               	rrf	(??___fltol+0)+3,f
  3086  0286  0CF7               	rrf	(??___fltol+0)+2,f
  3087  0287  0CF6               	rrf	(??___fltol+0)+1,f
  3088  0288  0CF5               	rrf	(??___fltol+0)+0,f
  3089  0289  0CF4               u100_20:
  3090  028A                     	addlw	-1
  3091  028A  3EFF               	skipz
  3092  028B  1D03               	goto	u100_25
  3093  028C  2A85               	movf	0+(??___fltol+0)+0,w
  3094  028D  0874               	movwf	(??___fltol+4)+0
  3095  028E  00F8               	movf	(??___fltol+4)+0,w
  3096  028F  0878               	movwf	(___fltol@sign1)
  3097  0290  00F9               	line	50
  3098                           	
  3099                           i1l1339:	
  3100  0291                     	bsf	(___fltol@f1)+(23/8),(23)&7
  3101  0291  17F2               	line	51
  3102                           	
  3103                           i1l1341:	
  3104  0292                     	movlw	0FFh
  3105  0292  30FF               	andwf	(___fltol@f1),f
  3106  0293  05F0               	movlw	0FFh
  3107  0294  30FF               	andwf	(___fltol@f1+1),f
  3108  0295  05F1               	movlw	0FFh
  3109  0296  30FF               	andwf	(___fltol@f1+2),f
  3110  0297  05F2               	movlw	0
  3111  0298  3000               	andwf	(___fltol@f1+3),f
  3112  0299  05F3               	line	52
  3113                           	
  3114                           i1l1343:	
  3115  029A                     	movlw	096h
  3116  029A  3096               	subwf	(___fltol@exp1),f
  3117  029B  02FA               	line	53
  3118                           	
  3119                           i1l1345:	
  3120  029C                     	btfss	(___fltol@exp1),7
  3121  029C  1FFA               	goto	u101_21
  3122  029D  2A9F               	goto	u101_20
  3123  029E  2AA0               u101_21:
  3124  029F                     	goto	i1l1355
  3125  029F  2AC5               u101_20:
  3126  02A0                     	line	54
  3127                           	
  3128                           i1l1347:	
  3129  02A0                     	movf	(___fltol@exp1),w
  3130  02A0  087A               	xorlw	80h
  3131  02A1  3A80               	addlw	-((-23)^80h)
  3132  02A2  3E97               	skipnc
  3133  02A3  1803               	goto	u102_21
  3134  02A4  2AA6               	goto	u102_20
  3135  02A5  2AA7               u102_21:
  3136  02A6                     	goto	i1l1353
  3137  02A6  2AB2               u102_20:
  3138  02A7                     	line	55
  3139                           	
  3140                           i1l1349:	
  3141  02A7                     	movlw	high highword(0)
  3142  02A7  3000               	movwf	(?___fltol+3)
  3143  02A8  00F3               	movlw	low highword(0)
  3144  02A9  3000               	movwf	(?___fltol+2)
  3145  02AA  00F2               	movlw	high(0)
  3146  02AB  3000               	movwf	(?___fltol+1)
  3147  02AC  00F1               	movlw	low(0)
  3148  02AD  3000               	movwf	(?___fltol)
  3149  02AE  00F0               
  3150                           	goto	i1l534
  3151  02AF  2AF8               	
  3152                           i1l1351:	
  3153  02B0                     	goto	i1l534
  3154  02B0  2AF8               	
  3155                           i1l536:	
  3156  02B1                     	goto	i1l1353
  3157  02B1  2AB2               	line	56
  3158                           	
  3159                           i1l537:	
  3160  02B2                     	line	57
  3161                           	
  3162                           i1l1353:	
  3163  02B2                     	movlw	01h
  3164  02B2  3001               u103_25:
  3165  02B3                     	clrc
  3166  02B3  1003               	rrf	(___fltol@f1+3),f
  3167  02B4  0CF3               	rrf	(___fltol@f1+2),f
  3168  02B5  0CF2               	rrf	(___fltol@f1+1),f
  3169  02B6  0CF1               	rrf	(___fltol@f1),f
  3170  02B7  0CF0               	addlw	-1
  3171  02B8  3EFF               	skipz
  3172  02B9  1D03               	goto	u103_25
  3173  02BA  2AB3               
  3174                           	line	58
  3175                           	movlw	low(01h)
  3176  02BB  3001               	movwf	(??___fltol+0)+0
  3177  02BC  00F4               	movf	(??___fltol+0)+0,w
  3178  02BD  0874               	addwf	(___fltol@exp1),f
  3179  02BE  07FA               	btfss	status,2
  3180  02BF  1D03               	goto	u104_21
  3181  02C0  2AC2               	goto	u104_20
  3182  02C1  2AC3               u104_21:
  3183  02C2                     	goto	i1l1353
  3184  02C2  2AB2               u104_20:
  3185  02C3                     	goto	i1l1363
  3186  02C3  2AE8               	
  3187                           i1l538:	
  3188  02C4                     	line	59
  3189                           	goto	i1l1363
  3190  02C4  2AE8               	
  3191                           i1l535:	
  3192  02C5                     	line	60
  3193                           	
  3194                           i1l1355:	
  3195  02C5                     	movlw	low(020h)
  3196  02C5  3020               	subwf	(___fltol@exp1),w
  3197  02C6  027A               	skipc
  3198  02C7  1C03               	goto	u105_21
  3199  02C8  2ACA               	goto	u105_20
  3200  02C9  2ACB               u105_21:
  3201  02CA                     	goto	i1l541
  3202  02CA  2AE1               u105_20:
  3203  02CB                     	line	61
  3204                           	
  3205                           i1l1357:	
  3206  02CB                     	movlw	high highword(0)
  3207  02CB  3000               	movwf	(?___fltol+3)
  3208  02CC  00F3               	movlw	low highword(0)
  3209  02CD  3000               	movwf	(?___fltol+2)
  3210  02CE  00F2               	movlw	high(0)
  3211  02CF  3000               	movwf	(?___fltol+1)
  3212  02D0  00F1               	movlw	low(0)
  3213  02D1  3000               	movwf	(?___fltol)
  3214  02D2  00F0               
  3215                           	goto	i1l534
  3216  02D3  2AF8               	
  3217                           i1l1359:	
  3218  02D4                     	goto	i1l534
  3219  02D4  2AF8               	
  3220                           i1l540:	
  3221  02D5                     	line	62
  3222                           	goto	i1l541
  3223  02D5  2AE1               	
  3224                           i1l542:	
  3225  02D6                     	line	63
  3226                           	
  3227                           i1l1361:	
  3228  02D6                     	movlw	01h
  3229  02D6  3001               	movwf	(??___fltol+0)+0
  3230  02D7  00F4               u106_25:
  3231  02D8                     	clrc
  3232  02D8  1003               	rlf	(___fltol@f1),f
  3233  02D9  0DF0               	rlf	(___fltol@f1+1),f
  3234  02DA  0DF1               	rlf	(___fltol@f1+2),f
  3235  02DB  0DF2               	rlf	(___fltol@f1+3),f
  3236  02DC  0DF3               	decfsz	(??___fltol+0)+0
  3237  02DD  0BF4               	goto	u106_25
  3238  02DE  2AD8               	line	64
  3239                           	movlw	01h
  3240  02DF  3001               	subwf	(___fltol@exp1),f
  3241  02E0  02FA               	line	65
  3242                           	
  3243                           i1l541:	
  3244  02E1                     	line	62
  3245                           	movf	((___fltol@exp1)),w
  3246  02E1  087A               	btfss	status,2
  3247  02E2  1D03               	goto	u107_21
  3248  02E3  2AE5               	goto	u107_20
  3249  02E4  2AE6               u107_21:
  3250  02E5                     	goto	i1l1361
  3251  02E5  2AD6               u107_20:
  3252  02E6                     	goto	i1l1363
  3253  02E6  2AE8               	
  3254                           i1l543:	
  3255  02E7                     	goto	i1l1363
  3256  02E7  2AE8               	line	66
  3257                           	
  3258                           i1l539:	
  3259  02E8                     	line	67
  3260                           	
  3261                           i1l1363:	
  3262  02E8                     	movf	((___fltol@sign1)),w
  3263  02E8  0879               	btfsc	status,2
  3264  02E9  1903               	goto	u108_21
  3265  02EA  2AEC               	goto	u108_20
  3266  02EB  2AED               u108_21:
  3267  02EC                     	goto	i1l544
  3268  02EC  2AF8               u108_20:
  3269  02ED                     	line	68
  3270                           	
  3271                           i1l1365:	
  3272  02ED                     	comf	(___fltol@f1),f
  3273  02ED  09F0               	comf	(___fltol@f1+1),f
  3274  02EE  09F1               	comf	(___fltol@f1+2),f
  3275  02EF  09F2               	comf	(___fltol@f1+3),f
  3276  02F0  09F3               	incf	(___fltol@f1),f
  3277  02F1  0AF0               	skipnz
  3278  02F2  1903               	incf	(___fltol@f1+1),f
  3279  02F3  0AF1               	skipnz
  3280  02F4  1903               	incf	(___fltol@f1+2),f
  3281  02F5  0AF2               	skipnz
  3282  02F6  1903               	incf	(___fltol@f1+3),f
  3283  02F7  0AF3               	
  3284                           i1l544:	
  3285  02F8                     	line	69
  3286                           	line	70
  3287                           	
  3288                           i1l534:	
  3289  02F8                     	return
  3290  02F8  0008               	opt stack 0
  3291                           GLOBAL	__end_of___fltol
  3292                           	__end_of___fltol:
  3293  02F9                     	signat	___fltol,4220
  3294                           	global	___awmod
  3295                           
  3296 ;; *************** function ___awmod *****************
  3297 ;; Defined at:
  3298 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  divisor         2    0[COMMON] int 
  3301 ;;  dividend        2    2[COMMON] int 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  sign            1    6[COMMON] unsigned char 
  3304 ;;  counter         1    5[COMMON] unsigned char 
  3305 ;; Return value:  Size  Location     Type
  3306 ;;                  2    0[COMMON] int 
  3307 ;; Registers used:
  3308 ;;		wreg, status,2, status,0
  3309 ;; Tracked objects:
  3310 ;;		On entry : 0/0
  3311 ;;		On exit  : 0/0
  3312 ;;		Unchanged: 0/0
  3313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3314 ;;      Params:         4       0       0       0       0
  3315 ;;      Locals:         2       0       0       0       0
  3316 ;;      Temps:          1       0       0       0       0
  3317 ;;      Totals:         7       0       0       0       0
  3318 ;;Total ram usage:        7 bytes
  3319 ;; Hardware stack levels used:    1
  3320 ;; This function calls:
  3321 ;;		Nothing
  3322 ;; This function is called by:
  3323 ;;		_isr
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  3327                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3328                           	line	5
  3329                           global __ptext10
  3330                           __ptext10:	;psect for function ___awmod
  3331  02F9                     psect	text10
  3332                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3333                           	line	5
  3334                           	global	__size_of___awmod
  3335                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3336  0063                     	
  3337                           ___awmod:	
  3338  02F9                     ;incstack = 0
  3339                           	opt	stack 4
  3340                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3341                           	line	12
  3342                           	
  3343                           i1l1293:	
  3344  02F9                     	clrf	(___awmod@sign)
  3345  02F9  01F6               	line	13
  3346                           	
  3347                           i1l1295:	
  3348  02FA                     	btfss	(___awmod@dividend+1),7
  3349  02FA  1FF3               	goto	u90_21
  3350  02FB  2AFD               	goto	u90_20
  3351  02FC  2AFE               u90_21:
  3352  02FD                     	goto	i1l1301
  3353  02FD  2B06               u90_20:
  3354  02FE                     	line	14
  3355                           	
  3356                           i1l1297:	
  3357  02FE                     	comf	(___awmod@dividend),f
  3358  02FE  09F2               	comf	(___awmod@dividend+1),f
  3359  02FF  09F3               	incf	(___awmod@dividend),f
  3360  0300  0AF2               	skipnz
  3361  0301  1903               	incf	(___awmod@dividend+1),f
  3362  0302  0AF3               	line	15
  3363                           	
  3364                           i1l1299:	
  3365  0303                     	clrf	(___awmod@sign)
  3366  0303  01F6               	incf	(___awmod@sign),f
  3367  0304  0AF6               	goto	i1l1301
  3368  0305  2B06               	line	16
  3369                           	
  3370                           i1l504:	
  3371  0306                     	line	17
  3372                           	
  3373                           i1l1301:	
  3374  0306                     	btfss	(___awmod@divisor+1),7
  3375  0306  1FF1               	goto	u91_21
  3376  0307  2B09               	goto	u91_20
  3377  0308  2B0A               u91_21:
  3378  0309                     	goto	i1l1305
  3379  0309  2B10               u91_20:
  3380  030A                     	line	18
  3381                           	
  3382                           i1l1303:	
  3383  030A                     	comf	(___awmod@divisor),f
  3384  030A  09F0               	comf	(___awmod@divisor+1),f
  3385  030B  09F1               	incf	(___awmod@divisor),f
  3386  030C  0AF0               	skipnz
  3387  030D  1903               	incf	(___awmod@divisor+1),f
  3388  030E  0AF1               	goto	i1l1305
  3389  030F  2B10               	
  3390                           i1l505:	
  3391  0310                     	line	19
  3392                           	
  3393                           i1l1305:	
  3394  0310                     	movf	((___awmod@divisor)),w
  3395  0310  0870               iorwf	((___awmod@divisor+1)),w
  3396  0311  0471               	btfsc	status,2
  3397  0312  1903               	goto	u92_21
  3398  0313  2B15               	goto	u92_20
  3399  0314  2B16               u92_21:
  3400  0315                     	goto	i1l1323
  3401  0315  2B4B               u92_20:
  3402  0316                     	line	20
  3403                           	
  3404                           i1l1307:	
  3405  0316                     	clrf	(___awmod@counter)
  3406  0316  01F5               	incf	(___awmod@counter),f
  3407  0317  0AF5               	line	21
  3408                           	goto	i1l1313
  3409  0318  2B25               	
  3410                           i1l508:	
  3411  0319                     	line	22
  3412                           	
  3413                           i1l1309:	
  3414  0319                     	movlw	01h
  3415  0319  3001               	
  3416                           u93_25:
  3417  031A                     	clrc
  3418  031A  1003               	rlf	(___awmod@divisor),f
  3419  031B  0DF0               	rlf	(___awmod@divisor+1),f
  3420  031C  0DF1               	addlw	-1
  3421  031D  3EFF               	skipz
  3422  031E  1D03               	goto	u93_25
  3423  031F  2B1A               	line	23
  3424                           	
  3425                           i1l1311:	
  3426  0320                     	movlw	low(01h)
  3427  0320  3001               	movwf	(??___awmod+0)+0
  3428  0321  00F4               	movf	(??___awmod+0)+0,w
  3429  0322  0874               	addwf	(___awmod@counter),f
  3430  0323  07F5               	goto	i1l1313
  3431  0324  2B25               	line	24
  3432                           	
  3433                           i1l507:	
  3434  0325                     	line	21
  3435                           	
  3436                           i1l1313:	
  3437  0325                     	btfss	(___awmod@divisor+1),(15)&7
  3438  0325  1FF1               	goto	u94_21
  3439  0326  2B28               	goto	u94_20
  3440  0327  2B29               u94_21:
  3441  0328                     	goto	i1l1309
  3442  0328  2B19               u94_20:
  3443  0329                     	goto	i1l1315
  3444  0329  2B2B               	
  3445                           i1l509:	
  3446  032A                     	goto	i1l1315
  3447  032A  2B2B               	line	25
  3448                           	
  3449                           i1l510:	
  3450  032B                     	line	26
  3451                           	
  3452                           i1l1315:	
  3453  032B                     	movf	(___awmod@divisor+1),w
  3454  032B  0871               	subwf	(___awmod@dividend+1),w
  3455  032C  0273               	skipz
  3456  032D  1D03               	goto	u95_25
  3457  032E  2B31               	movf	(___awmod@divisor),w
  3458  032F  0870               	subwf	(___awmod@dividend),w
  3459  0330  0272               u95_25:
  3460  0331                     	skipc
  3461  0331  1C03               	goto	u95_21
  3462  0332  2B34               	goto	u95_20
  3463  0333  2B35               u95_21:
  3464  0334                     	goto	i1l1319
  3465  0334  2B3C               u95_20:
  3466  0335                     	line	27
  3467                           	
  3468                           i1l1317:	
  3469  0335                     	movf	(___awmod@divisor),w
  3470  0335  0870               	subwf	(___awmod@dividend),f
  3471  0336  02F2               	movf	(___awmod@divisor+1),w
  3472  0337  0871               	skipc
  3473  0338  1C03               	decf	(___awmod@dividend+1),f
  3474  0339  03F3               	subwf	(___awmod@dividend+1),f
  3475  033A  02F3               	goto	i1l1319
  3476  033B  2B3C               	
  3477                           i1l511:	
  3478  033C                     	line	28
  3479                           	
  3480                           i1l1319:	
  3481  033C                     	movlw	01h
  3482  033C  3001               	
  3483                           u96_25:
  3484  033D                     	clrc
  3485  033D  1003               	rrf	(___awmod@divisor+1),f
  3486  033E  0CF1               	rrf	(___awmod@divisor),f
  3487  033F  0CF0               	addlw	-1
  3488  0340  3EFF               	skipz
  3489  0341  1D03               	goto	u96_25
  3490  0342  2B3D               	line	29
  3491                           	
  3492                           i1l1321:	
  3493  0343                     	movlw	01h
  3494  0343  3001               	subwf	(___awmod@counter),f
  3495  0344  02F5               	btfss	status,2
  3496  0345  1D03               	goto	u97_21
  3497  0346  2B48               	goto	u97_20
  3498  0347  2B49               u97_21:
  3499  0348                     	goto	i1l1315
  3500  0348  2B2B               u97_20:
  3501  0349                     	goto	i1l1323
  3502  0349  2B4B               	
  3503                           i1l512:	
  3504  034A                     	goto	i1l1323
  3505  034A  2B4B               	line	30
  3506                           	
  3507                           i1l506:	
  3508  034B                     	line	31
  3509                           	
  3510                           i1l1323:	
  3511  034B                     	movf	((___awmod@sign)),w
  3512  034B  0876               	btfsc	status,2
  3513  034C  1903               	goto	u98_21
  3514  034D  2B4F               	goto	u98_20
  3515  034E  2B50               u98_21:
  3516  034F                     	goto	i1l1327
  3517  034F  2B56               u98_20:
  3518  0350                     	line	32
  3519                           	
  3520                           i1l1325:	
  3521  0350                     	comf	(___awmod@dividend),f
  3522  0350  09F2               	comf	(___awmod@dividend+1),f
  3523  0351  09F3               	incf	(___awmod@dividend),f
  3524  0352  0AF2               	skipnz
  3525  0353  1903               	incf	(___awmod@dividend+1),f
  3526  0354  0AF3               	goto	i1l1327
  3527  0355  2B56               	
  3528                           i1l513:	
  3529  0356                     	line	33
  3530                           	
  3531                           i1l1327:	
  3532  0356                     	movf	(___awmod@dividend+1),w
  3533  0356  0873               	movwf	(?___awmod+1)
  3534  0357  00F1               	movf	(___awmod@dividend),w
  3535  0358  0872               	movwf	(?___awmod)
  3536  0359  00F0               	goto	i1l514
  3537  035A  2B5B               	
  3538                           i1l1329:	
  3539  035B                     	line	34
  3540                           	
  3541                           i1l514:	
  3542  035B                     	return
  3543  035B  0008               	opt stack 0
  3544                           GLOBAL	__end_of___awmod
  3545                           	__end_of___awmod:
  3546  035C                     	signat	___awmod,8314
  3547                           global	___latbits
  3548                           ___latbits	equ	2
  3549  0002                     	global	btemp
  3550                           	btemp set 07Eh
  3551  007E                     
  3552                           	DABS	1,126,2	;btemp
  3553                           	global	wtemp0
  3554                           	wtemp0 set btemp+0
  3555  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         41
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     25      66
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___fltol

Critical Paths under _main in BANK0

    _main->_LeerADC
    _setup->_I2C_Slave_Init
    _LeerADC->___flge

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     754
                                _ADC
                            _LeerADC
                             _inicio
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicio                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LeerADC                                              4     4      0     732
                                             21 BANK0      4     4      0
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              5 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              16     8      8     334
                                              5 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     753
                                              0 BANK0      5     5      0
                            ___awmod
                            ___fltol
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     305
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _LeerADC
     ___flge
     ___xxtofl
   _inicio
   _setup
     _I2C_Slave_Init

 _isr (ROOT)
   ___awmod
   ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      42       5       82.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      50      12        0.0%
ABS                  0      0      50       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Mar 07 10:39:34 2020

                       _z 0039               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l83 0449                        l92 03A3  
                      l93 039D                        l94 03A1                        l95 03A3  
                      fsr 0004                       l124 0429                       l223 040D  
                     l226 0439                       l260 03E7                       l261 03E8  
                     l262 03E8                       l254 03B4                       l255 03C2  
                     _ADC 043A                       l256 03C4                       l257 03D3  
                     l522 010F                       l258 03D9                       l523 012C  
                     l259 03E6                       l524 0162                       l525 0198  
                     l526 01B3                       l760 0068                       l761 007D  
                     l770 00C4                       l762 0099                       l771 00E7  
                     l763 007E                       l755 0049                       l764 00A0  
                     l756 0051                       l765 00AD                       l757 0063  
                     l766 00A1                       l758 00F0                       l759 0076  
                     l768 00B8                       l769 00B8                       _GIE 005F  
            __CFG_CPD$OFF 0000                       u700 014E                       u701 014F  
                     u710 0166                       u702 0154                       u711 0165  
                     u703 0155                       u720 0184                       u800 009F  
                     u721 0185                       u801 009E                       u730 01AE  
                     u722 018A                       u731 01AD                       u723 018B  
                     u820 00B1                       u740 0035                       u821 00B0  
                     u741 0034                       u670 0107                       u830 00B7  
                     u750 0039                       u735 01AA                       u671 0106  
                     u831 00B6                       u815 00A5                       u751 0038  
                     u680 0123                       u840 00BC                       u760 0059  
                     u681 0122                       u841 00BB                       u761 0058  
                     u690 0130                       u850 00D1                       u691 012F  
                     u860 00E1                       u780 007C                       u861 00E0  
                     u781 007B                       u870 00E5                       u871 00E4  
                     u855 00CC                       u775 006D                       u880 0362  
                     u881 0361                       u890 0398                       u795 0091  
                     u891 0397                       _isr 01B4                       indf 0000  
            ___awmod@sign 0076                      ?_ADC 0070              __CFG_LVP$OFF 0000  
            ___fltol@exp1 007A                      l1201 0166                      l1211 01B0  
                    l1203 0198                      l1213 01B3                      l1205 019A  
                    l1221 0049                      l1207 019C                      l1231 0076  
                    l1223 0059                      l1215 0030                      l1209 01AE  
                    l1241 00AD                      l1233 007E                      l1225 0062  
                    l1217 0035                      l1171 01B0                      l1251 00E1  
                    l1243 00B1                      l1235 0082                      l1227 0063  
                    l1219 0039                      l1261 0442                      l1173 01B2  
                    l1253 00E5                      l1245 00BC                      l1237 0090  
                    l1229 0068                      l1181 0421                      l1421 03BF  
                    l1263 0444                      l1191 0107                      l1255 00E7  
                    l1247 00C6                      l1239 00A1                      l1271 0362  
                    l1183 0422                      l1175 0411                      l1431 03D1  
                    l1423 03C2                      l1415 03A4                      l1265 0447  
                    l1193 0123                      l1257 00F0                      l1249 00DC  
                    l1273 0398                      l1281 03F3                      l1185 0423  
                    l1177 041F                      l1441 03E3                      l1433 03D3  
                    l1425 03C4                      l1417 03B4                      l1267 0448  
                    l1259 043A                      l1195 012C                      l1275 039D  
                    l1283 03F6                      l1187 0426                      l1179 0420  
                    l1291 0433                      l1435 03D7                      l1427 03C9  
                    l1419 03BA                      l1197 0130                      l1189 00F1  
                    l1277 03A1                      l1269 035C                      l1285 03FD  
                    l1437 03D9                      l1429 03CE                      l1199 0162  
                    l1287 0400                      l1279 03EB                      l1439 03DE  
                    l1289 042A                      ?_isr 0070                      u1210 03BF  
                    u1211 03BE                      u1220 03C9                      u1221 03C8  
                    u1230 03D7                      u1231 03D6                      u1240 03DE  
                    u1241 03DD                      u1250 03E3                      u1251 03E2  
                    _PEIE 005E              __CFG_WRT$OFF 0000                      _adc1 0030  
                    _adc2 002C                      _adc3 0028                      _adc4 0024  
                    _adc5 0036                      _adc6 0034                      _main 03A4  
                    btemp 007E                      start 000E             __CFG_IESO$OFF 0000  
         __end_of_LeerADC 03A4                     ??_ADC 004B                     ??_isr 0046  
           ___fltol@sign1 0079                     ?_main 0070             __CFG_WDTE$OFF 0000  
         __end_of___awmod 035C           __end_of___fltol 02F9                     _ANSEL 0188  
                   i1l231 01BB                     i1l232 0258                     i1l240 0254  
                   i1l241 0254                     i1l233 01D1                     i1l242 0228  
                   i1l243 0243                     i1l235 01C9                     i1l244 023F  
                   i1l236 01F7                     i1l245 0242                     i1l237 01E4  
                   i1l510 032B                     i1l246 024C                     i1l238 01E4  
                   i1l511 033C                     i1l247 024C                     i1l239 01EB  
                   i1l512 034A                     i1l504 0306                     i1l248 0253  
                   i1l513 0356                     i1l505 0310                     i1l249 0258  
                   i1l514 035B                     i1l506 034B                     i1l507 0325  
                   i1l508 0319                     i1l540 02D5                     i1l509 032A  
                   i1l541 02E1                     i1l533 027C                     i1l542 02D6  
                   i1l534 02F8                     i1l543 02E7                     i1l535 02C5  
                   i1l544 02F8                     i1l536 02B1                     i1l537 02B2  
                   i1l538 02C4                     i1l539 02E8                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _SSPIE 0463                     u90_20 02FE  
                   _SSPIF 0063                     u90_21 02FD                     u91_20 030A  
                   u91_21 0309                     u92_20 0316                     u92_21 0315  
                   u93_25 031A                     u94_20 0329                     u94_21 0328  
                   u95_20 0335                     u95_21 0334                     u95_25 0331  
                   u96_25 033D                     u97_20 0349                     u97_21 0348  
                   u98_20 0350                     u98_21 034F                     u99_20 0272  
                   u99_21 0271            __CFG_FCMEN$OFF 0000                     _timer 0041  
                   _setup 042A            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 0011              __end_of_main 03EB                    ??_main 005F  
                  _ADCON0 001F                    _ADRESH 001E                    ?_setup 0070  
              _SendSignal 007C                    _ANSELH 0189                    u100_20 028A  
                  u100_25 0285                    u101_20 02A0                    u101_21 029F  
                  u102_20 02A7                    u110_20 01BF                    u102_21 02A6  
                  u110_21 01BE                    i1l1301 0306                    i1l1311 0320  
                  i1l1303 030A                    u111_20 01C4                    i1l1321 0343  
                  i1l1313 0325                    i1l1305 0310                    i1l1401 0208  
                  u111_21 01C3                    i1l1315 032B                    i1l1307 0316  
                  i1l1323 034B                    i1l1331 025F                    i1l1411 023F  
                  i1l1403 0220                    i1l1325 0350                    i1l1317 0335  
                  i1l1309 0319                    u103_25 02B3                    i1l1341 0292  
                  i1l1333 0272                    i1l1413 0243                    i1l1405 0225  
                  i1l1327 0356                    i1l1319 033C                    i1l1351 02B0  
                  i1l1343 029A                    i1l1335 027B                    i1l1407 0228  
                  u104_20 02C3                    u120_20 0252                    u112_20 01C8  
                  i1l1329 035B                    i1l1361 02D6                    u104_21 02C2  
                  i1l1353 02B2                    i1l1345 029C                    i1l1337 027C  
                  u120_21 0251                    i1l1409 022D                    u112_21 01C7  
                  i1l1363 02E8                    i1l1347 02A0                    i1l1355 02C5  
                  i1l1339 0291                    i1l1371 01BF                    i1l1293 02F9  
                  i1l1365 02ED                    i1l1357 02CB                    i1l1349 02A7  
                  i1l1381 01CF                    i1l1373 01C4                    i1l1295 02FA  
                  i1l1359 02D4                    i1l1391 01E2                    i1l1383 01D1  
                  i1l1375 01C9                    i1l1367 01B4                    u105_20 02CB  
                  u113_20 01D7                    i1l1297 02FE                    u105_21 02CA  
                  i1l1393 01EB                    i1l1385 01D7                    u113_21 01D6  
                  i1l1377 01CD                    i1l1369 01B8                    i1l1299 0303  
                  i1l1395 01FB                    i1l1387 01DB                    i1l1379 01CE  
                  i1l1397 01FF                    i1l1389 01E1                    i1l1399 0205  
                  u114_20 01DB                    u114_21 01DA                    u106_25 02D8  
                  u107_20 02E6                    u115_20 01EA                    u107_21 02E5  
                  u115_21 01E9                    u108_20 02ED                    u116_20 01FB  
                  u108_21 02EC                    u116_21 01FA                    u117_20 01FF  
                  u109_20 01B8                    u117_21 01FE                    u109_21 01B7  
                  u118_20 0225                    u118_21 0224                    u126_27 01F3  
                  u119_20 022D                    u119_21 022C                    u127_27 0248  
               ??_LeerADC 005B                    _SSPADD 0093                    _TRISC3 043B  
                  _TRISC4 043C                    _SSPCON 0014                    _SSPBUF 0013  
        __end_of___xxtofl 00F1            __CFG_PWRTE$OFF 0000                    _VarMOV 0061  
                  _Signal 0038                    ___flge 00F1                 ??___awmod 0074  
               ??___fltol 0074                    _inicio 03EB                    _varADC 003B  
         ___awmod@divisor 0070                    _select 007D                    _multi1 0043  
                  _multi2 0042           ___awmod@counter 0075                    saved_w 007E  
              ___flge@ff1 004B                ___flge@ff2 004F              ___xxtofl@arg 0055  
            ___xxtofl@exp 0054              ___xxtofl@val 004B   __end_of__initialization 0029  
              ___fltol@f1 0070            __pcstackCOMMON 0070              __pidataBANK0 0452  
 __size_of_I2C_Slave_Init 001C             __end_of_setup 043A             _voltajeunidad 003F  
                 ??_setup 004C     I2C_Slave_Init@address 004B                __pbssBANK0 0020  
              __pmaintext 03A4                   ?___flge 004B                __pintentry 0004  
                 ?_inicio 0070                 ?___xxtofl 004B                   _SSPCON2 0091  
                 _SSPSTAT 0094                   _LeerADC 035C                   _Signal2 003C  
         __size_of___flge 00C3                   ___awmod 02F9                   ___fltol 025F  
         __size_of_inicio 0023                   __ptext1 042A                   __ptext2 040E  
                 __ptext3 03EB                   __ptext4 035C                   __ptext5 002D  
                 __ptext6 00F1                   __ptext7 043A                   __ptext8 01B4  
                 __ptext9 025F              __size_of_ADC 0010                   _counter 007B  
            __size_of_isr 00AB                ??___xxtofl 004F          ___awmod@dividend 0072  
                 _mostrar 0044                   clrloop0 044B      end_of_initialization 0029  
          _I2C_Slave_Init 040E                 _PORTBbits 0006             ___xxtofl@sign 0053  
               _TRISCbits 0087    __end_of_I2C_Slave_Init 042A            __end_of___flge 01B4  
          __end_of_inicio 040E       start_initialization 0011               __end_of_ADC 044A  
             __end_of_isr 025F  __CFG_FOSC$INTRC_NOCLKOUT 0000           ?_I2C_Slave_Init 0070  
                ??___flge 0053               __pdataBANK0 005F                  ??_inicio 004B  
             __pbssCOMMON 007B                 ___latbits 0002             __pcstackBANK0 0046  
       __size_of___xxtofl 00C4                  ?_LeerADC 0070                 __pnvBANK0 0061  
                ?___awmod 0070                  ?___fltol 0070                  _ADCcomp1 0060  
                _ADCcomp2 005F            __size_of_setup 0010         interrupt_function 0004  
               clear_ram0 044A                  _PIE1bits 008C                  _PIR1bits 000C  
               _multiplex 003A                _ADCON0bits 001F                _ADCON1bits 009F  
        __size_of_LeerADC 0048                  _ValorADC 0020          __size_of___awmod 0063  
        __size_of___fltol 009A                  _decimal1 003E                  _decimal2 003D  
                ___xxtofl 002D                  _debounce 0045                  __ptext10 02F9  
       __CFG_BOR4V$BOR40V 0000                  _contador 0040          ??_I2C_Slave_Init 004B  
           __size_of_main 0047                _INTCONbits 000B                  intlevel1 0000  
             _SSPCON2bits 0091                _SSPCONbits 0014  
