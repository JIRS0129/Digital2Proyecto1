

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Mar 10 16:05:50 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     	FNCALL	_main,_setup
   556                           	FNCALL	_setup,_spiInit
   557                           	FNROOT	_main
   558                           	FNCALL	_isr,_spiRead
   559                           	FNCALL	_isr,_spiWrite
   560                           	FNCALL	_spiRead,_spiReceiveWait
   561                           	FNCALL	intlevel1,_isr
   562                           	global	intlevel1
   563                           	FNROOT	intlevel1
   564                           	global	_dataIn
   565                           	global	_PIR1bits
   566                           _PIR1bits	set	0xC
   567  000C                     	global	_INTCONbits
   568                           _INTCONbits	set	0xB
   569  000B                     	global	_PORTE
   570                           _PORTE	set	0x9
   571  0009                     	global	_PORTD
   572                           _PORTD	set	0x8
   573  0008                     	global	_PORTC
   574                           _PORTC	set	0x7
   575  0007                     	global	_PORTB
   576                           _PORTB	set	0x6
   577  0006                     	global	_PORTA
   578                           _PORTA	set	0x5
   579  0005                     	global	_PORTAbits
   580                           _PORTAbits	set	0x5
   581  0005                     	global	_SSPBUF
   582                           _SSPBUF	set	0x13
   583  0013                     	global	_SSPCON
   584                           _SSPCON	set	0x14
   585  0014                     	global	_SSPIF
   586                           _SSPIF	set	0x63
   587  0063                     	global	_PIE1bits
   588                           _PIE1bits	set	0x8C
   589  008C                     	global	_TRISE
   590                           _TRISE	set	0x89
   591  0089                     	global	_TRISD
   592                           _TRISD	set	0x88
   593  0088                     	global	_TRISCbits
   594                           _TRISCbits	set	0x87
   595  0087                     	global	_TRISC
   596                           _TRISC	set	0x87
   597  0087                     	global	_TRISB
   598                           _TRISB	set	0x86
   599  0086                     	global	_TRISA
   600                           _TRISA	set	0x85
   601  0085                     	global	_SSPSTATbits
   602                           _SSPSTATbits	set	0x94
   603  0094                     	global	_SSPSTAT
   604                           _SSPSTAT	set	0x94
   605  0094                     	global	_TRISC3
   606                           _TRISC3	set	0x43B
   607  043B                     	global	_TRISC5
   608                           _TRISC5	set	0x43D
   609  043D                     ; #config settings
   610                           global __CFG_FOSC$INTRC_NOCLKOUT
   611                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   612  0000                     global __CFG_WDTE$OFF
   613                           __CFG_WDTE$OFF equ 0x0
   614  0000                     global __CFG_PWRTE$OFF
   615                           __CFG_PWRTE$OFF equ 0x0
   616  0000                     global __CFG_MCLRE$OFF
   617                           __CFG_MCLRE$OFF equ 0x0
   618  0000                     global __CFG_CP$OFF
   619                           __CFG_CP$OFF equ 0x0
   620  0000                     global __CFG_CPD$OFF
   621                           __CFG_CPD$OFF equ 0x0
   622  0000                     global __CFG_BOREN$OFF
   623                           __CFG_BOREN$OFF equ 0x0
   624  0000                     global __CFG_IESO$OFF
   625                           __CFG_IESO$OFF equ 0x0
   626  0000                     global __CFG_FCMEN$OFF
   627                           __CFG_FCMEN$OFF equ 0x0
   628  0000                     global __CFG_LVP$OFF
   629                           __CFG_LVP$OFF equ 0x0
   630  0000                     global __CFG_BOR4V$BOR40V
   631                           __CFG_BOR4V$BOR40V equ 0x0
   632  0000                     global __CFG_WRT$OFF
   633                           __CFG_WRT$OFF equ 0x0
   634  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\se80."
   635                           	line	#
   636                           psect cinit,class=CODE,delta=2
   637                           global start_initialization
   638                           start_initialization:
   639  000F                     
   640                           global __initialization
   641                           __initialization:
   642  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   643                           global __pbssCOMMON
   644                           __pbssCOMMON:
   645  0078                     _dataIn:
   646  0078                            ds      1
   647  0078                     
   648                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\se80."
   649                           	line	#
   650                           ; Clear objects allocated to COMMON
   651                           psect cinit,class=CODE,delta=2,merge=1
   652                           	clrf	((__pbssCOMMON)+0)&07Fh
   653  000F  01F8               psect cinit,class=CODE,delta=2,merge=1
   654                           global end_of_initialization,__end_of__initialization
   655                           
   656                           ;End of C runtime variable initialization code
   657                           
   658                           end_of_initialization:
   659  0010                     __end_of__initialization:
   660  0010                     clrf status
   661  0010  0183               ljmp _main	;jump to C main() function
   662  0011  120A  118A  2891   psect	cstackCOMMON,class=COMMON,space=1,noexec
   663                           global __pcstackCOMMON
   664                           __pcstackCOMMON:
   665  0070                     ?_setup:	; 1 bytes @ 0x0
   666  0070                     ?_spiReceiveWait:	; 1 bytes @ 0x0
   667  0070                     ??_spiReceiveWait:	; 1 bytes @ 0x0
   668  0070                     ?_spiWrite:	; 1 bytes @ 0x0
   669  0070                     ??_spiWrite:	; 1 bytes @ 0x0
   670  0070                     ?_spiRead:	; 1 bytes @ 0x0
   671  0070                     ??_spiRead:	; 1 bytes @ 0x0
   672  0070                     ?_isr:	; 1 bytes @ 0x0
   673  0070                     ?_main:	; 1 bytes @ 0x0
   674  0070                     	global	spiWrite@dat
   675                           spiWrite@dat:	; 1 bytes @ 0x0
   676  0070                     	ds	1
   677  0070                     ??_isr:	; 1 bytes @ 0x1
   678  0071                     	ds	3
   679  0071                     ?_spiInit:	; 1 bytes @ 0x4
   680  0074                     	global	spiInit@sDataSample
   681                           spiInit@sDataSample:	; 1 bytes @ 0x4
   682  0074                     	ds	1
   683  0074                     	global	spiInit@sClockIdle
   684                           spiInit@sClockIdle:	; 1 bytes @ 0x5
   685  0075                     	ds	1
   686  0075                     	global	spiInit@sTransmitEdge
   687                           spiInit@sTransmitEdge:	; 1 bytes @ 0x6
   688  0076                     	ds	1
   689  0076                     ??_spiInit:	; 1 bytes @ 0x7
   690  0077                     	global	spiInit@sType
   691                           spiInit@sType:	; 1 bytes @ 0x7
   692  0077                     	ds	1
   693  0077                     ??_main:	; 1 bytes @ 0x8
   694  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
   695                           global __pcstackBANK0
   696                           __pcstackBANK0:
   697  0020                     ??_setup:	; 1 bytes @ 0x0
   698  0020                     	ds	2
   699  0020                     ;!
   700                           ;!Data Sizes:
   701                           ;!    Strings     0
   702                           ;!    Constant    0
   703                           ;!    Data        0
   704                           ;!    BSS         1
   705                           ;!    Persistent  0
   706                           ;!    Stack       0
   707                           ;!
   708                           ;!Auto Spaces:
   709                           ;!    Space          Size  Autos    Used
   710                           ;!    COMMON           14      8       9
   711                           ;!    BANK0            80      2       2
   712                           ;!    BANK1            80      0       0
   713                           ;!    BANK3            96      0       0
   714                           ;!    BANK2            96      0       0
   715                           
   716                           ;!
   717                           ;!Pointer List with Targets:
   718                           ;!
   719                           ;!    None.
   720                           
   721                           
   722                           ;!
   723                           ;!Critical Paths under _main in COMMON
   724                           ;!
   725                           ;!    _setup->_spiInit
   726                           ;!
   727                           ;!Critical Paths under _isr in COMMON
   728                           ;!
   729                           ;!    _isr->_spiWrite
   730                           ;!
   731                           ;!Critical Paths under _main in BANK0
   732                           ;!
   733                           ;!    _main->_setup
   734                           ;!
   735                           ;!Critical Paths under _isr in BANK0
   736                           ;!
   737                           ;!    None.
   738                           ;!
   739                           ;!Critical Paths under _main in BANK1
   740                           ;!
   741                           ;!    None.
   742                           ;!
   743                           ;!Critical Paths under _isr in BANK1
   744                           ;!
   745                           ;!    None.
   746                           ;!
   747                           ;!Critical Paths under _main in BANK3
   748                           ;!
   749                           ;!    None.
   750                           ;!
   751                           ;!Critical Paths under _isr in BANK3
   752                           ;!
   753                           ;!    None.
   754                           ;!
   755                           ;!Critical Paths under _main in BANK2
   756                           ;!
   757                           ;!    None.
   758                           ;!
   759                           ;!Critical Paths under _isr in BANK2
   760                           ;!
   761                           ;!    None.
   762                           
   763 ;;
   764 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   765 ;;
   766                           
   767                           ;!
   768                           ;!Call Graph Tables:
   769                           ;!
   770                           ;! ---------------------------------------------------------------------------------
   771                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   772                           ;! ---------------------------------------------------------------------------------
   773                           ;! (0) _main                                                 0     0      0     360
   774                           ;!                              _setup
   775                           ;! ---------------------------------------------------------------------------------
   776                           ;! (1) _setup                                                2     2      0     360
   777                           ;!                                              0 BANK0      2     2      0
   778                           ;!                            _spiInit
   779                           ;! ---------------------------------------------------------------------------------
   780                           ;! (2) _spiInit                                              4     1      3     360
   781                           ;!                                              4 COMMON     4     1      3
   782                           ;! ---------------------------------------------------------------------------------
   783                           ;! Estimated maximum stack depth 2
   784                           ;! ---------------------------------------------------------------------------------
   785                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   786                           ;! ---------------------------------------------------------------------------------
   787                           ;! (3) _isr                                                  3     3      0      15
   788                           ;!                                              1 COMMON     3     3      0
   789                           ;!                            _spiRead
   790                           ;!                           _spiWrite
   791                           ;! ---------------------------------------------------------------------------------
   792                           ;! (4) _spiWrite                                             1     1      0      15
   793                           ;!                                              0 COMMON     1     1      0
   794                           ;! ---------------------------------------------------------------------------------
   795                           ;! (4) _spiRead                                              0     0      0       0
   796                           ;!                     _spiReceiveWait
   797                           ;! ---------------------------------------------------------------------------------
   798                           ;! (5) _spiReceiveWait                                       0     0      0       0
   799                           ;! ---------------------------------------------------------------------------------
   800                           ;! Estimated maximum stack depth 5
   801                           ;! ---------------------------------------------------------------------------------
   802                           ;!
   803                           ;! Call Graph Graphs:
   804                           ;!
   805                           ;! _main (ROOT)
   806                           ;!   _setup
   807                           ;!     _spiInit
   808                           ;!
   809                           ;! _isr (ROOT)
   810                           ;!   _spiRead
   811                           ;!     _spiReceiveWait
   812                           ;!   _spiWrite
   813                           ;!
   814                           
   815                           ;! Address spaces:
   816                           
   817                           ;!Name               Size   Autos  Total    Cost      Usage
   818                           ;!BITCOMMON            E      0       0       0        0.0%
   819                           ;!EEDATA             100      0       0       0        0.0%
   820                           ;!NULL                 0      0       0       0        0.0%
   821                           ;!CODE                 0      0       0       0        0.0%
   822                           ;!COMMON               E      8       9       1       64.3%
   823                           ;!BITSFR0              0      0       0       1        0.0%
   824                           ;!SFR0                 0      0       0       1        0.0%
   825                           ;!BITSFR1              0      0       0       2        0.0%
   826                           ;!SFR1                 0      0       0       2        0.0%
   827                           ;!STACK                0      0       0       2        0.0%
   828                           ;!ABS                  0      0       B       3        0.0%
   829                           ;!BITBANK0            50      0       0       4        0.0%
   830                           ;!BITSFR3              0      0       0       4        0.0%
   831                           ;!SFR3                 0      0       0       4        0.0%
   832                           ;!BANK0               50      2       2       5        2.5%
   833                           ;!BITSFR2              0      0       0       5        0.0%
   834                           ;!SFR2                 0      0       0       5        0.0%
   835                           ;!BITBANK1            50      0       0       6        0.0%
   836                           ;!BANK1               50      0       0       7        0.0%
   837                           ;!BITBANK3            60      0       0       8        0.0%
   838                           ;!BANK3               60      0       0       9        0.0%
   839                           ;!BITBANK2            60      0       0      10        0.0%
   840                           ;!BANK2               60      0       0      11        0.0%
   841                           ;!DATA                 0      0       B      12        0.0%
   842                           
   843                           	global	_main
   844                           
   845 ;; *************** function _main *****************
   846 ;; Defined at:
   847 ;;		line 60 in file "main.c"
   848 ;; Parameters:    Size  Location     Type
   849 ;;		None
   850 ;; Auto vars:     Size  Location     Type
   851 ;;		None
   852 ;; Return value:  Size  Location     Type
   853 ;;                  1    wreg      void 
   854 ;; Registers used:
   855 ;;		wreg, status,2, status,0, pclath, cstack
   856 ;; Tracked objects:
   857 ;;		On entry : B00/0
   858 ;;		On exit  : 0/0
   859 ;;		Unchanged: 0/0
   860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   861 ;;      Params:         0       0       0       0       0
   862 ;;      Locals:         0       0       0       0       0
   863 ;;      Temps:          0       0       0       0       0
   864 ;;      Totals:         0       0       0       0       0
   865 ;;Total ram usage:        0 bytes
   866 ;; Hardware stack levels required when called:    5
   867 ;; This function calls:
   868 ;;		_setup
   869 ;; This function is called by:
   870 ;;		Startup code after reset
   871 ;; This function uses a non-reentrant model
   872 ;;
   873                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   874                           	file	"main.c"
   875                           	line	60
   876                           global __pmaintext
   877                           __pmaintext:	;psect for function _main
   878  0091                     psect	maintext
   879                           	file	"main.c"
   880                           	line	60
   881                           	global	__size_of_main
   882                           	__size_of_main	equ	__end_of_main-_main
   883  0009                     	
   884                           _main:	
   885  0091                     ;incstack = 0
   886                           	opt	stack 3
   887                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   888                           	line	61
   889                           	
   890                           l773:	
   891  0091                     ;main.c: 61:     setup();
   892                           	fcall	_setup
   893  0091  120A  118A  2046  120A  118A  	line	65
   894                           ;main.c: 65:     while(1){
   895                           	
   896                           l90:	
   897  0096                     	line	68
   898                           ;main.c: 68:     }
   899                           	
   900                           l91:	
   901  0096                     	goto	l90
   902  0096  2896               	
   903                           l92:	
   904  0097                     	line	70
   905                           ;main.c: 69:     return;
   906                           	
   907                           l93:	
   908  0097                     	global	start
   909                           	ljmp	start
   910  0097  120A  118A  280C   	opt stack 0
   911                           GLOBAL	__end_of_main
   912                           	__end_of_main:
   913  009A                     	signat	_main,89
   914                           	global	_setup
   915                           
   916 ;; *************** function _setup *****************
   917 ;; Defined at:
   918 ;;		line 74 in file "main.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;		None
   921 ;; Auto vars:     Size  Location     Type
   922 ;;		None
   923 ;; Return value:  Size  Location     Type
   924 ;;                  1    wreg      void 
   925 ;; Registers used:
   926 ;;		wreg, status,2, status,0, pclath, cstack
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         0       0       0       0       0
   934 ;;      Temps:          0       2       0       0       0
   935 ;;      Totals:         0       2       0       0       0
   936 ;;Total ram usage:        2 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    4
   939 ;; This function calls:
   940 ;;		_spiInit
   941 ;; This function is called by:
   942 ;;		_main
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   946                           	line	74
   947                           global __ptext1
   948                           __ptext1:	;psect for function _setup
   949  0046                     psect	text1
   950                           	file	"main.c"
   951                           	line	74
   952                           	global	__size_of_setup
   953                           	__size_of_setup	equ	__end_of_setup-_setup
   954  002A                     	
   955                           _setup:	
   956  0046                     ;incstack = 0
   957                           	opt	stack 3
   958                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   959                           	line	75
   960                           	
   961                           l757:	
   962  0046                     ;main.c: 75:     PORTA = 0;
   963                           	bcf	status, 5	;RP0=0, select bank0
   964  0046  1283               	bcf	status, 6	;RP1=0, select bank0
   965  0047  1303               	clrf	(5)	;volatile
   966  0048  0185               	line	76
   967                           ;main.c: 76:     PORTB = 0;
   968                           	clrf	(6)	;volatile
   969  0049  0186               	line	77
   970                           ;main.c: 77:     PORTC = 0;
   971                           	clrf	(7)	;volatile
   972  004A  0187               	line	78
   973                           ;main.c: 78:     PORTD = 0;
   974                           	clrf	(8)	;volatile
   975  004B  0188               	line	79
   976                           ;main.c: 79:     PORTE = 0;
   977                           	clrf	(9)	;volatile
   978  004C  0189               	line	80
   979                           ;main.c: 80:     TRISA = 0;
   980                           	bsf	status, 5	;RP0=1, select bank1
   981  004D  1683               	bcf	status, 6	;RP1=0, select bank1
   982  004E  1303               	clrf	(133)^080h	;volatile
   983  004F  0185               	line	81
   984                           ;main.c: 81:     TRISB = 0;
   985                           	clrf	(134)^080h	;volatile
   986  0050  0186               	line	82
   987                           ;main.c: 82:     TRISC = 0;
   988                           	clrf	(135)^080h	;volatile
   989  0051  0187               	line	83
   990                           	
   991                           l759:	
   992  0052                     ;main.c: 83:     TRISCbits.TRISC5 = 0;
   993                           	bcf	(135)^080h,5	;volatile
   994  0052  1287               	line	84
   995                           	
   996                           l761:	
   997  0053                     ;main.c: 84:     TRISCbits.TRISC4 = 1;
   998                           	bsf	(135)^080h,4	;volatile
   999  0053  1607               	line	85
  1000                           ;main.c: 85:     TRISD = 0;
  1001                           	clrf	(136)^080h	;volatile
  1002  0054  0188               	line	86
  1003                           ;main.c: 86:     TRISE = 0;
  1004                           	clrf	(137)^080h	;volatile
  1005  0055  0189               	line	88
  1006                           	
  1007                           l763:	
  1008  0056                     ;main.c: 88:     INTCONbits.GIE = 1;
  1009                           	bsf	(11),7	;volatile
  1010  0056  178B               	line	89
  1011                           	
  1012                           l765:	
  1013  0057                     ;main.c: 89:     INTCONbits.PEIE = 1;
  1014                           	bsf	(11),6	;volatile
  1015  0057  170B               	line	90
  1016                           	
  1017                           l767:	
  1018  0058                     ;main.c: 90:     PIR1bits.SSPIF = 0;
  1019                           	bcf	status, 5	;RP0=0, select bank0
  1020  0058  1283               	bcf	status, 6	;RP1=0, select bank0
  1021  0059  1303               	bcf	(12),3	;volatile
  1022  005A  118C               	line	91
  1023                           	
  1024                           l769:	
  1025  005B                     ;main.c: 91:     PIE1bits.SSPIE = 1;
  1026                           	bsf	status, 5	;RP0=1, select bank1
  1027  005B  1683               	bcf	status, 6	;RP1=0, select bank1
  1028  005C  1303               	bsf	(140)^080h,3	;volatile
  1029  005D  158C               	line	93
  1030                           	
  1031                           l771:	
  1032  005E                     ;main.c: 93:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HIGH, 
                                 SPI_ACTIVE_2_IDLE);
  1033                           	clrf	(spiInit@sDataSample)
  1034  005E  01F4               	movlw	low(010h)
  1035  005F  3010               	bcf	status, 5	;RP0=0, select bank0
  1036  0060  1283               	bcf	status, 6	;RP1=0, select bank0
  1037  0061  1303               	movwf	(??_setup+0)+0
  1038  0062  00A0               	movf	(??_setup+0)+0,w
  1039  0063  0820               	movwf	(spiInit@sClockIdle)
  1040  0064  00F5               	movlw	low(040h)
  1041  0065  3040               	movwf	(??_setup+1)+0
  1042  0066  00A1               	movf	(??_setup+1)+0,w
  1043  0067  0821               	movwf	(spiInit@sTransmitEdge)
  1044  0068  00F6               	movlw	low(025h)
  1045  0069  3025               	fcall	_spiInit
  1046  006A  120A  118A  2070  120A  118A  	line	95
  1047                           	
  1048                           l96:	
  1049  006F                     	return
  1050  006F  0008               	opt stack 0
  1051                           GLOBAL	__end_of_setup
  1052                           	__end_of_setup:
  1053  0070                     	signat	_setup,89
  1054                           	global	_spiInit
  1055                           
  1056 ;; *************** function _spiInit *****************
  1057 ;; Defined at:
  1058 ;;		line 12 in file "SPI.c"
  1059 ;; Parameters:    Size  Location     Type
  1060 ;;  sType           1    wreg     enum E1264
  1061 ;;  sDataSample     1    4[COMMON] enum E1272
  1062 ;;  sClockIdle      1    5[COMMON] enum E1276
  1063 ;;  sTransmitEdg    1    6[COMMON] enum E1280
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  sType           1    7[COMMON] enum E1264
  1066 ;; Return value:  Size  Location     Type
  1067 ;;                  1    wreg      void 
  1068 ;; Registers used:
  1069 ;;		wreg, status,2, status,0
  1070 ;; Tracked objects:
  1071 ;;		On entry : 0/0
  1072 ;;		On exit  : 0/0
  1073 ;;		Unchanged: 0/0
  1074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1075 ;;      Params:         3       0       0       0       0
  1076 ;;      Locals:         1       0       0       0       0
  1077 ;;      Temps:          0       0       0       0       0
  1078 ;;      Totals:         4       0       0       0       0
  1079 ;;Total ram usage:        4 bytes
  1080 ;; Hardware stack levels used:    1
  1081 ;; Hardware stack levels required when called:    3
  1082 ;; This function calls:
  1083 ;;		Nothing
  1084 ;; This function is called by:
  1085 ;;		_setup
  1086 ;; This function uses a non-reentrant model
  1087 ;;
  1088                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1089                           	file	"SPI.c"
  1090                           	line	12
  1091                           global __ptext2
  1092                           __ptext2:	;psect for function _spiInit
  1093  0070                     psect	text2
  1094                           	file	"SPI.c"
  1095                           	line	12
  1096                           	global	__size_of_spiInit
  1097                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  1098  0016                     	
  1099                           _spiInit:	
  1100  0070                     ;incstack = 0
  1101                           	opt	stack 3
  1102                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1103                           ;spiInit@sType stored from wreg
  1104                           	movwf	(spiInit@sType)
  1105  0070  00F7               	line	14
  1106                           	
  1107                           l729:	
  1108  0071                     ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
                                 ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1109                           	bsf	status, 5	;RP0=1, select bank1
  1110  0071  1683               	bcf	status, 6	;RP1=0, select bank1
  1111  0072  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  1112  0073  1287               	line	15
  1113                           ;SPI.c: 15:     if(sType & 0b00000100)
  1114                           	btfss	(spiInit@sType),(2)&7
  1115  0074  1D77               	goto	u61
  1116  0075  2877               	goto	u60
  1117  0076  2878               u61:
  1118  0077                     	goto	l735
  1119  0077  287C               u60:
  1120  0078                     	line	17
  1121                           	
  1122                           l731:	
  1123  0078                     ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1124                           	movf	(spiInit@sTransmitEdge),w
  1125  0078  0876               	movwf	(148)^080h	;volatile
  1126  0079  0094               	line	18
  1127                           	
  1128                           l733:	
  1129  007A                     ;SPI.c: 18:         TRISC3 = 1;
  1130                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  1131  007A  1587               	line	19
  1132                           ;SPI.c: 19:     }
  1133                           	goto	l18
  1134  007B  2880               	line	20
  1135                           ;SPI.c: 20:     else
  1136                           	
  1137                           l17:	
  1138  007C                     	line	22
  1139                           	
  1140                           l735:	
  1141  007C                     ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1142                           	movf	(spiInit@sDataSample),w
  1143  007C  0874               	iorwf	(spiInit@sTransmitEdge),w
  1144  007D  0476               	movwf	(148)^080h	;volatile
  1145  007E  0094               	line	23
  1146                           	
  1147                           l737:	
  1148  007F                     ;SPI.c: 23:         TRISC3 = 0;
  1149                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  1150  007F  1187               	line	24
  1151                           ;SPI.c: 24:     }
  1152                           	
  1153                           l18:	
  1154  0080                     	line	26
  1155                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1156                           	movf	(spiInit@sType),w
  1157  0080  0877               	iorwf	(spiInit@sClockIdle),w
  1158  0081  0475               	bcf	status, 5	;RP0=0, select bank0
  1159  0082  1283               	bcf	status, 6	;RP1=0, select bank0
  1160  0083  1303               	movwf	(20)	;volatile
  1161  0084  0094               	line	27
  1162                           	
  1163                           l19:	
  1164  0085                     	return
  1165  0085  0008               	opt stack 0
  1166                           GLOBAL	__end_of_spiInit
  1167                           	__end_of_spiInit:
  1168  0086                     	signat	_spiInit,16505
  1169                           	global	_isr
  1170                           
  1171 ;; *************** function _isr *****************
  1172 ;; Defined at:
  1173 ;;		line 44 in file "main.c"
  1174 ;; Parameters:    Size  Location     Type
  1175 ;;		None
  1176 ;; Auto vars:     Size  Location     Type
  1177 ;;		None
  1178 ;; Return value:  Size  Location     Type
  1179 ;;                  1    wreg      void 
  1180 ;; Registers used:
  1181 ;;		wreg, status,2, status,0, pclath, cstack
  1182 ;; Tracked objects:
  1183 ;;		On entry : 0/0
  1184 ;;		On exit  : 0/0
  1185 ;;		Unchanged: 0/0
  1186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1187 ;;      Params:         0       0       0       0       0
  1188 ;;      Locals:         0       0       0       0       0
  1189 ;;      Temps:          3       0       0       0       0
  1190 ;;      Totals:         3       0       0       0       0
  1191 ;;Total ram usage:        3 bytes
  1192 ;; Hardware stack levels used:    1
  1193 ;; Hardware stack levels required when called:    2
  1194 ;; This function calls:
  1195 ;;		_spiRead
  1196 ;;		_spiWrite
  1197 ;; This function is called by:
  1198 ;;		Interrupt level 1
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1202                           	file	"main.c"
  1203                           	line	44
  1204                           global __ptext3
  1205                           __ptext3:	;psect for function _isr
  1206  0014                     psect	text3
  1207                           	file	"main.c"
  1208                           	line	44
  1209                           	global	__size_of_isr
  1210                           	__size_of_isr	equ	__end_of_isr-_isr
  1211  0032                     	
  1212                           _isr:	
  1213  0014                     ;incstack = 0
  1214                           	opt	stack 3
  1215                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1216                           psect	intentry,class=CODE,delta=2
  1217                           global __pintentry
  1218                           __pintentry:
  1219  0004                     global interrupt_function
  1220                           interrupt_function:
  1221  0004                     	global saved_w
  1222                           	saved_w	set	btemp+0
  1223  007E                     	movwf	saved_w
  1224  0004  00FE               	swapf	status,w
  1225  0005  0E03               	movwf	(??_isr+1)
  1226  0006  00F2               	movf	pclath,w
  1227  0007  080A               	movwf	(??_isr+2)
  1228  0008  00F3               	ljmp	_isr
  1229  0009  120A  118A  2814   psect	text3
  1230                           	line	46
  1231                           	
  1232                           i1l713:	
  1233  0014                     ;main.c: 46:     if(SSPIF == 1){
  1234                           	bcf	status, 5	;RP0=0, select bank0
  1235  0014  1283               	bcf	status, 6	;RP1=0, select bank0
  1236  0015  1303               	btfss	(99/8),(99)&7	;volatile
  1237  0016  1D8C               	goto	u3_21
  1238  0017  2819               	goto	u3_20
  1239  0018  281A               u3_21:
  1240  0019                     	goto	i1l85
  1241  0019  283F               u3_20:
  1242  001A                     	line	48
  1243                           	
  1244                           i1l715:	
  1245  001A                     ;main.c: 48:         dataIn = spiRead();
  1246                           	fcall	_spiRead
  1247  001A  120A  118A  2086  120A  118A  	movwf	(??_isr+0)+0
  1248  001F  00F1               	movf	(??_isr+0)+0,w
  1249  0020  0871               	movwf	(_dataIn)
  1250  0021  00F8               	line	49
  1251                           	
  1252                           i1l717:	
  1253  0022                     ;main.c: 49:         if(dataIn == 0){
  1254                           	movf	((_dataIn)),w
  1255  0022  0878               	btfss	status,2
  1256  0023  1D03               	goto	u4_21
  1257  0024  2826               	goto	u4_20
  1258  0025  2827               u4_21:
  1259  0026                     	goto	i1l721
  1260  0026  282E               u4_20:
  1261  0027                     	line	50
  1262                           	
  1263                           i1l719:	
  1264  0027                     ;main.c: 50:             spiWrite(86);
  1265                           	movlw	low(056h)
  1266  0027  3056               	fcall	_spiWrite
  1267  0028  120A  118A  20A3  120A  118A  	line	51
  1268                           ;main.c: 51:         }else if(dataIn == 1){
  1269                           	goto	i1l725
  1270  002D  283B               	
  1271                           i1l82:	
  1272  002E                     	
  1273                           i1l721:	
  1274  002E                     		decf	((_dataIn)),w
  1275  002E  0378               	btfss	status,2
  1276  002F  1D03               	goto	u5_21
  1277  0030  2832               	goto	u5_20
  1278  0031  2833               u5_21:
  1279  0032                     	goto	i1l725
  1280  0032  283B               u5_20:
  1281  0033                     	line	52
  1282                           	
  1283                           i1l723:	
  1284  0033                     ;main.c: 52:             spiWrite(68);
  1285                           	movlw	low(044h)
  1286  0033  3044               	fcall	_spiWrite
  1287  0034  120A  118A  20A3  120A  118A  	goto	i1l725
  1288  0039  283B               	line	53
  1289                           ;main.c: 53:         }
  1290                           	
  1291                           i1l84:	
  1292  003A                     	goto	i1l725
  1293  003A  283B               	
  1294                           i1l83:	
  1295  003B                     	line	54
  1296                           	
  1297                           i1l725:	
  1298  003B                     ;main.c: 54:         SSPIF = 0;
  1299                           	bcf	status, 5	;RP0=0, select bank0
  1300  003B  1283               	bcf	status, 6	;RP1=0, select bank0
  1301  003C  1303               	bcf	(99/8),(99)&7	;volatile
  1302  003D  118C               	goto	i1l85
  1303  003E  283F               	line	55
  1304                           ;main.c: 55:     }
  1305                           	
  1306                           i1l81:	
  1307  003F                     	line	56
  1308                           	
  1309                           i1l85:	
  1310  003F                     	movf	(??_isr+2),w
  1311  003F  0873               	movwf	pclath
  1312  0040  008A               	swapf	(??_isr+1)^0FFFFFF80h,w
  1313  0041  0E72               	movwf	status
  1314  0042  0083               	swapf	saved_w,f
  1315  0043  0EFE               	swapf	saved_w,w
  1316  0044  0E7E               	retfie
  1317  0045  0009               	opt stack 0
  1318                           GLOBAL	__end_of_isr
  1319                           	__end_of_isr:
  1320  0046                     	signat	_isr,89
  1321                           	global	_spiWrite
  1322                           
  1323 ;; *************** function _spiWrite *****************
  1324 ;; Defined at:
  1325 ;;		line 34 in file "SPI.c"
  1326 ;; Parameters:    Size  Location     Type
  1327 ;;  dat             1    wreg     unsigned char 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  dat             1    0[COMMON] unsigned char 
  1330 ;; Return value:  Size  Location     Type
  1331 ;;                  1    wreg      void 
  1332 ;; Registers used:
  1333 ;;		wreg
  1334 ;; Tracked objects:
  1335 ;;		On entry : 0/0
  1336 ;;		On exit  : 0/0
  1337 ;;		Unchanged: 0/0
  1338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1339 ;;      Params:         0       0       0       0       0
  1340 ;;      Locals:         1       0       0       0       0
  1341 ;;      Temps:          0       0       0       0       0
  1342 ;;      Totals:         1       0       0       0       0
  1343 ;;Total ram usage:        1 bytes
  1344 ;; Hardware stack levels used:    1
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_isr
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1352                           	file	"SPI.c"
  1353                           	line	34
  1354                           global __ptext4
  1355                           __ptext4:	;psect for function _spiWrite
  1356  00A3                     psect	text4
  1357                           	file	"SPI.c"
  1358                           	line	34
  1359                           	global	__size_of_spiWrite
  1360                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  1361  0006                     	
  1362                           _spiWrite:	
  1363  00A3                     ;incstack = 0
  1364                           	opt	stack 4
  1365                           ; Regs used in _spiWrite: [wreg]
  1366                           ;spiWrite@dat stored from wreg
  1367                           	movwf	(spiWrite@dat)
  1368  00A3  00F0               	line	36
  1369                           	
  1370                           i1l681:	
  1371  00A4                     ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1372                           	movf	(spiWrite@dat),w
  1373  00A4  0870               	bcf	status, 5	;RP0=0, select bank0
  1374  00A5  1283               	bcf	status, 6	;RP1=0, select bank0
  1375  00A6  1303               	movwf	(19)	;volatile
  1376  00A7  0093               	line	37
  1377                           	
  1378                           i1l28:	
  1379  00A8                     	return
  1380  00A8  0008               	opt stack 0
  1381                           GLOBAL	__end_of_spiWrite
  1382                           	__end_of_spiWrite:
  1383  00A9                     	signat	_spiWrite,4217
  1384                           	global	_spiRead
  1385                           
  1386 ;; *************** function _spiRead *****************
  1387 ;; Defined at:
  1388 ;;		line 47 in file "SPI.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      unsigned char 
  1395 ;; Registers used:
  1396 ;;		wreg, status,2, status,0, pclath, cstack
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0
  1405 ;;      Totals:         0       0       0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    1
  1409 ;; This function calls:
  1410 ;;		_spiReceiveWait
  1411 ;; This function is called by:
  1412 ;;		_isr
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1416                           	line	47
  1417                           global __ptext5
  1418                           __ptext5:	;psect for function _spiRead
  1419  0086                     psect	text5
  1420                           	file	"SPI.c"
  1421                           	line	47
  1422                           	global	__size_of_spiRead
  1423                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  1424  000B                     	
  1425                           _spiRead:	
  1426  0086                     ;incstack = 0
  1427                           	opt	stack 3
  1428                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1429                           	line	49
  1430                           	
  1431                           i1l683:	
  1432  0086                     ;SPI.c: 49:     spiReceiveWait();
  1433                           	fcall	_spiReceiveWait
  1434  0086  120A  118A  209A  120A  118A  	line	50
  1435                           	
  1436                           i1l685:	
  1437  008B                     ;SPI.c: 50:     PORTAbits.RA7 = 1;
  1438                           	bcf	status, 5	;RP0=0, select bank0
  1439  008B  1283               	bcf	status, 6	;RP1=0, select bank0
  1440  008C  1303               	bsf	(5),7	;volatile
  1441  008D  1785               	line	51
  1442                           	
  1443                           i1l687:	
  1444  008E                     ;SPI.c: 51:     return(SSPBUF);
  1445                           	movf	(19),w	;volatile
  1446  008E  0813               	goto	i1l36
  1447  008F  2890               	
  1448                           i1l689:	
  1449  0090                     	line	52
  1450                           	
  1451                           i1l36:	
  1452  0090                     	return
  1453  0090  0008               	opt stack 0
  1454                           GLOBAL	__end_of_spiRead
  1455                           	__end_of_spiRead:
  1456  0091                     	signat	_spiRead,89
  1457                           	global	_spiReceiveWait
  1458                           
  1459 ;; *************** function _spiReceiveWait *****************
  1460 ;; Defined at:
  1461 ;;		line 29 in file "SPI.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		None
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1475 ;;      Params:         0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels used:    1
  1481 ;; This function calls:
  1482 ;;		Nothing
  1483 ;; This function is called by:
  1484 ;;		_spiRead
  1485 ;; This function uses a non-reentrant model
  1486 ;;
  1487                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  1488                           	line	29
  1489                           global __ptext6
  1490                           __ptext6:	;psect for function _spiReceiveWait
  1491  009A                     psect	text6
  1492                           	file	"SPI.c"
  1493                           	line	29
  1494                           	global	__size_of_spiReceiveWait
  1495                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  1496  0009                     	
  1497                           _spiReceiveWait:	
  1498  009A                     ;incstack = 0
  1499                           	opt	stack 3
  1500                           ; Regs used in _spiReceiveWait: []
  1501                           	line	31
  1502                           	
  1503                           i1l679:	
  1504  009A                     ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1505                           	goto	i1l22
  1506  009A  289B               	
  1507                           i1l23:	
  1508  009B                     	
  1509                           i1l22:	
  1510  009B                     	bsf	status, 5	;RP0=1, select bank1
  1511  009B  1683               	bcf	status, 6	;RP1=0, select bank1
  1512  009C  1303               	btfss	(148)^080h,0	;volatile
  1513  009D  1C14               	goto	u2_21
  1514  009E  28A0               	goto	u2_20
  1515  009F  28A1               u2_21:
  1516  00A0                     	goto	i1l22
  1517  00A0  289B               u2_20:
  1518  00A1                     	goto	i1l25
  1519  00A1  28A2               	
  1520                           i1l24:	
  1521  00A2                     	line	32
  1522                           	
  1523                           i1l25:	
  1524  00A2                     	return
  1525  00A2  0008               	opt stack 0
  1526                           GLOBAL	__end_of_spiReceiveWait
  1527                           	__end_of_spiReceiveWait:
  1528  00A3                     	signat	_spiReceiveWait,89
  1529                           global	___latbits
  1530                           ___latbits	equ	2
  1531  0002                     	global	btemp
  1532                           	btemp set 07Eh
  1533  007E                     
  1534                           	DABS	1,126,2	;btemp
  1535                           	global	wtemp0
  1536                           	wtemp0 set btemp+0
  1537  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       9
    BANK0            80      2       2
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_setup

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     360
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     360
                                              0 BANK0      2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              4 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      2       2       5        2.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Mar 10 16:05:50 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l17 007C  
                      l18 0080                        l19 0085                        l90 0096  
                      l91 0096                        l92 0097                        l93 0097  
                      l96 006F                        u60 0078                        u61 0077  
                     l731 0078                       l733 007A                       l735 007C  
                     l737 007F                       l729 0071                       l761 0053  
                     l771 005E                       l763 0056                       l765 0057  
                     l757 0046                       l773 0091                       l767 0058  
                     l759 0052                       l769 005B              __CFG_CPD$OFF 0000  
                     _isr 0014              __CFG_LVP$OFF 0000                      ?_isr 0070  
                    i1l22 009B                      i1l23 009B                      i1l24 00A2  
                    i1l25 00A2                      i1l36 0090                      i1l28 00A8  
                    i1l81 003F                      i1l82 002E                      i1l83 003B  
                    i1l84 003A                      i1l85 003F                      u2_20 00A1  
                    u2_21 00A0                      u3_20 001A                      u3_21 0019  
                    u4_20 0027                      u4_21 0026                      u5_20 0033  
                    u5_21 0032              __CFG_WRT$OFF 0000                      _main 0091  
                    btemp 007E                      start 000C             __CFG_IESO$OFF 0000  
                   ??_isr 0071                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   i1l721 002E                     i1l713 0014                     i1l723 0033  
                   i1l715 001A                     i1l725 003B                     i1l717 0022  
                   i1l719 0027                     i1l681 00A4                     i1l683 0086  
                   i1l685 008B                     i1l679 009A                     i1l687 008E  
                   i1l689 0090                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     _SSPIF 0063  
          __CFG_FCMEN$OFF 0000                     _setup 0046            __CFG_BOREN$OFF 0000  
                   pclath 000A           __end_of_spiInit 0086           __end_of_spiRead 0091  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 000F              __end_of_main 009A                    ??_main 0078  
                  ?_setup 0070                    _TRISC3 043B                    _TRISC5 043D  
                  _SSPCON 0014                    _SSPBUF 0013            __CFG_PWRTE$OFF 0000  
                  _dataIn 0078                    saved_w 007E          __end_of_spiWrite 00A9  
               ??_spiInit 0077                 ??_spiRead 0070   __end_of__initialization 0010  
          __pcstackCOMMON 0070             __end_of_setup 0070                   ??_setup 0020  
              __pmaintext 0091                __pintentry 0004   __size_of_spiReceiveWait 0009  
                 _SSPSTAT 0094                 ?_spiWrite 0070                   __ptext1 0046  
                 __ptext2 0070                   __ptext3 0014                   __ptext4 00A3  
                 __ptext5 0086                   __ptext6 009A              __size_of_isr 0032  
                 _spiInit 0070                   _spiRead 0086      end_of_initialization 0010  
              ??_spiWrite 0070                 _PORTAbits 0005                 _TRISCbits 0087  
             spiWrite@dat 0070            _spiReceiveWait 009A       start_initialization 000F  
             __end_of_isr 0046  __CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 00A3  
             __pbssCOMMON 0078                 ___latbits 0002             __pcstackBANK0 0020  
         ?_spiReceiveWait 0070         __size_of_spiWrite 0006                  ?_spiInit 0074  
                ?_spiRead 0070            __size_of_setup 002A      spiInit@sTransmitEdge 0076  
       interrupt_function 0004                  _PIE1bits 008C        spiInit@sDataSample 0074  
                _PIR1bits 000C          __size_of_spiInit 0016          __size_of_spiRead 000B  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0009                  _spiWrite 00A3  
            spiInit@sType 0077         spiInit@sClockIdle 0075                _INTCONbits 000B  
                intlevel1 0000          ??_spiReceiveWait 0070  
