

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Mar 11 11:31:05 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_initUSART
   712                           	FNCALL	_main,_sendUSART
   713                           	FNCALL	_main,_setup
   714                           	FNCALL	_setup,_spiInit
   715                           	FNROOT	_main
   716                           	FNCALL	_ISR,_spiRead
   717                           	FNCALL	_ISR,_spiWrite
   718                           	FNCALL	_spiRead,_spiReceiveWait
   719                           	FNCALL	intlevel1,_ISR
   720                           	global	intlevel1
   721                           	FNROOT	intlevel1
   722                           	global	_ventilador
   723                           	global	_signal
   724                           	global	_dataInSPI
   725                           	global	_current
   726                           	global	_bandera
   727                           	global	_alarm
   728                           	global	_mov
   729                           	global	_luz
   730                           	global	_temp
   731                           	global	_hall
   732                           	global	_garage
   733                           	global	_PORTE
   734                           _PORTE	set	0x9
   735  0009                     	global	_PORTD
   736                           _PORTD	set	0x8
   737  0008                     	global	_PORTC
   738                           _PORTC	set	0x7
   739  0007                     	global	_PORTB
   740                           _PORTB	set	0x6
   741  0006                     	global	_PORTA
   742                           _PORTA	set	0x5
   743  0005                     	global	_RCREG
   744                           _RCREG	set	0x1A
   745  001A                     	global	_TXREG
   746                           _TXREG	set	0x19
   747  0019                     	global	_INTCONbits
   748                           _INTCONbits	set	0xB
   749  000B                     	global	_PIR1bits
   750                           _PIR1bits	set	0xC
   751  000C                     	global	_RCSTAbits
   752                           _RCSTAbits	set	0x18
   753  0018                     	global	_SSPBUF
   754                           _SSPBUF	set	0x13
   755  0013                     	global	_SSPCON
   756                           _SSPCON	set	0x14
   757  0014                     	global	_SSPIF
   758                           _SSPIF	set	0x63
   759  0063                     	global	_TRISE
   760                           _TRISE	set	0x89
   761  0089                     	global	_TRISD
   762                           _TRISD	set	0x88
   763  0088                     	global	_TRISC
   764                           _TRISC	set	0x87
   765  0087                     	global	_TRISB
   766                           _TRISB	set	0x86
   767  0086                     	global	_TRISA
   768                           _TRISA	set	0x85
   769  0085                     	global	_SPBRGH
   770                           _SPBRGH	set	0x9A
   771  009A                     	global	_SPBRG
   772                           _SPBRG	set	0x99
   773  0099                     	global	_TXSTAbits
   774                           _TXSTAbits	set	0x98
   775  0098                     	global	_PIE1bits
   776                           _PIE1bits	set	0x8C
   777  008C                     	global	_TRISCbits
   778                           _TRISCbits	set	0x87
   779  0087                     	global	_SSPSTATbits
   780                           _SSPSTATbits	set	0x94
   781  0094                     	global	_SSPSTAT
   782                           _SSPSTAT	set	0x94
   783  0094                     	global	_TRISC3
   784                           _TRISC3	set	0x43B
   785  043B                     	global	_TRISC5
   786                           _TRISC5	set	0x43D
   787  043D                     	global	_BAUDCTLbits
   788                           _BAUDCTLbits	set	0x187
   789  0187                     ; #config settings
   790                           global __CFG_FOSC$INTRC_NOCLKOUT
   791                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   792  0000                     global __CFG_WDTE$OFF
   793                           __CFG_WDTE$OFF equ 0x0
   794  0000                     global __CFG_PWRTE$OFF
   795                           __CFG_PWRTE$OFF equ 0x0
   796  0000                     global __CFG_MCLRE$OFF
   797                           __CFG_MCLRE$OFF equ 0x0
   798  0000                     global __CFG_CP$OFF
   799                           __CFG_CP$OFF equ 0x0
   800  0000                     global __CFG_CPD$OFF
   801                           __CFG_CPD$OFF equ 0x0
   802  0000                     global __CFG_BOREN$OFF
   803                           __CFG_BOREN$OFF equ 0x0
   804  0000                     global __CFG_IESO$OFF
   805                           __CFG_IESO$OFF equ 0x0
   806  0000                     global __CFG_FCMEN$OFF
   807                           __CFG_FCMEN$OFF equ 0x0
   808  0000                     global __CFG_LVP$OFF
   809                           __CFG_LVP$OFF equ 0x0
   810  0000                     global __CFG_BOR4V$BOR40V
   811                           __CFG_BOR4V$BOR40V equ 0x0
   812  0000                     global __CFG_WRT$OFF
   813                           __CFG_WRT$OFF equ 0x0
   814  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\s74k."
   815                           	line	#
   816                           psect cinit,class=CODE,delta=2
   817                           global start_initialization
   818                           start_initialization:
   819  000F                     
   820                           global __initialization
   821                           __initialization:
   822  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   823                           global __pbssCOMMON
   824                           __pbssCOMMON:
   825  0076                     _ventilador:
   826  0076                            ds      1
   827  0076                     
   828                           _signal:
   829  0077                            ds      1
   830  0077                     
   831                           _dataInSPI:
   832  0078                            ds      1
   833  0078                     
   834                           _current:
   835  0079                            ds      1
   836  0079                     
   837                           psect	bssBANK0,class=BANK0,space=1,noexec
   838                           global __pbssBANK0
   839                           __pbssBANK0:
   840  0020                     _sensorF2:
   841  0020                            ds      4
   842  0020                     
   843                           _sensorF1:
   844  0024                            ds      4
   845  0024                     
   846                           _float2:
   847  0028                            ds      4
   848  0028                     
   849                           _float1:
   850  002C                            ds      4
   851  002C                     
   852                           _bandera:
   853  0030                            ds      1
   854  0030                     
   855                           _alarm:
   856  0031                            ds      1
   857  0031                     
   858                           _mov:
   859  0032                            ds      1
   860  0032                     
   861                           _luz:
   862  0033                            ds      1
   863  0033                     
   864                           _temp:
   865  0034                            ds      1
   866  0034                     
   867                           _hall:
   868  0035                            ds      1
   869  0035                     
   870                           _garage:
   871  0036                            ds      1
   872  0036                     
   873                           _dec2:
   874  0037                            ds      1
   875  0037                     
   876                           _dec1:
   877  0038                            ds      1
   878  0038                     
   879                           _entero2:
   880  0039                            ds      1
   881  0039                     
   882                           _entero1:
   883  003A                            ds      1
   884  003A                     
   885                           _sensor2:
   886  003B                            ds      1
   887  003B                     
   888                           _sensor1:
   889  003C                            ds      1
   890  003C                     
   891                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\s74k."
   892                           	line	#
   893                           psect clrtext,class=CODE,delta=2
   894                           global clear_ram0
   895                           ;	Called with FSR containing the base address, and
   896                           ;	W with the last address+1
   897                           clear_ram0:
   898  0253                     	clrwdt			;clear the watchdog before getting into this loop
   899  0253  0064               clrloop0:
   900  0254                     	clrf	indf		;clear RAM location pointed to by FSR
   901  0254  0180               	incf	fsr,f		;increment pointer
   902  0255  0A84               	xorwf	fsr,w		;XOR with final address
   903  0256  0604               	btfsc	status,2	;have we reached the end yet?
   904  0257  1903               	retlw	0		;all done for this memory range, return
   905  0258  3400               	xorwf	fsr,w		;XOR again to restore value
   906  0259  0604               	goto	clrloop0		;do the next byte
   907  025A  2A54               
   908                           ; Clear objects allocated to COMMON
   909                           psect cinit,class=CODE,delta=2,merge=1
   910                           	clrf	((__pbssCOMMON)+0)&07Fh
   911  000F  01F6               	clrf	((__pbssCOMMON)+1)&07Fh
   912  0010  01F7               	clrf	((__pbssCOMMON)+2)&07Fh
   913  0011  01F8               	clrf	((__pbssCOMMON)+3)&07Fh
   914  0012  01F9               ; Clear objects allocated to BANK0
   915                           psect cinit,class=CODE,delta=2,merge=1
   916                           	bcf	status, 7	;select IRP bank0
   917  0013  1383               	movlw	low(__pbssBANK0)
   918  0014  3020               	movwf	fsr
   919  0015  0084               	movlw	low((__pbssBANK0)+01Dh)
   920  0016  303D               	fcall	clear_ram0
   921  0017  120A  118A  2253  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   922                           global end_of_initialization,__end_of__initialization
   923                           
   924                           ;End of C runtime variable initialization code
   925                           
   926                           end_of_initialization:
   927  001C                     __end_of__initialization:
   928  001C                     clrf status
   929  001C  0183               ljmp _main	;jump to C main() function
   930  001D  120A  118A  29AC   psect	cstackCOMMON,class=COMMON,space=1,noexec
   931                           global __pcstackCOMMON
   932                           __pcstackCOMMON:
   933  0070                     ?_setup:	; 1 bytes @ 0x0
   934  0070                     ?_spiReceiveWait:	; 1 bytes @ 0x0
   935  0070                     ??_spiReceiveWait:	; 1 bytes @ 0x0
   936  0070                     ?_spiWrite:	; 1 bytes @ 0x0
   937  0070                     ??_spiWrite:	; 1 bytes @ 0x0
   938  0070                     ?_spiRead:	; 1 bytes @ 0x0
   939  0070                     ??_spiRead:	; 1 bytes @ 0x0
   940  0070                     ?_sendUSART:	; 1 bytes @ 0x0
   941  0070                     ?_ISR:	; 1 bytes @ 0x0
   942  0070                     ?_main:	; 1 bytes @ 0x0
   943  0070                     	global	spiWrite@dat
   944                           spiWrite@dat:	; 1 bytes @ 0x0
   945  0070                     	ds	1
   946  0070                     ??_ISR:	; 1 bytes @ 0x1
   947  0071                     	ds	3
   948  0071                     ??_spiInit:	; 1 bytes @ 0x4
   949  0074                     ??_initUSART:	; 1 bytes @ 0x4
   950  0074                     ??_sendUSART:	; 1 bytes @ 0x4
   951  0074                     	global	spiInit@sType
   952                           spiInit@sType:	; 1 bytes @ 0x4
   953  0074                     	ds	1
   954  0074                     	global	sendUSART@data
   955                           sendUSART@data:	; 1 bytes @ 0x5
   956  0075                     	ds	1
   957  0075                     psect	cstackBANK0,class=BANK0,space=1,noexec
   958                           global __pcstackBANK0
   959                           __pcstackBANK0:
   960  003D                     ?_spiInit:	; 1 bytes @ 0x0
   961  003D                     ?_initUSART:	; 1 bytes @ 0x0
   962  003D                     	global	spiInit@sDataSample
   963                           spiInit@sDataSample:	; 1 bytes @ 0x0
   964  003D                     	global	initUSART@baudrate
   965                           initUSART@baudrate:	; 2 bytes @ 0x0
   966  003D                     	ds	1
   967  003D                     	global	spiInit@sClockIdle
   968                           spiInit@sClockIdle:	; 1 bytes @ 0x1
   969  003E                     	ds	1
   970  003E                     	global	spiInit@sTransmitEdge
   971                           spiInit@sTransmitEdge:	; 1 bytes @ 0x2
   972  003F                     	global	initUSART@txint
   973                           initUSART@txint:	; 1 bytes @ 0x2
   974  003F                     	ds	1
   975  003F                     ??_setup:	; 1 bytes @ 0x3
   976  0040                     	global	initUSART@rcint
   977                           initUSART@rcint:	; 1 bytes @ 0x3
   978  0040                     	ds	1
   979  0040                     	global	initUSART@syncrono
   980                           initUSART@syncrono:	; 1 bytes @ 0x4
   981  0041                     	ds	1
   982  0041                     ??_main:	; 1 bytes @ 0x5
   983  0042                     	ds	2
   984  0042                     ;!
   985                           ;!Data Sizes:
   986                           ;!    Strings     0
   987                           ;!    Constant    0
   988                           ;!    Data        0
   989                           ;!    BSS         33
   990                           ;!    Persistent  0
   991                           ;!    Stack       0
   992                           ;!
   993                           ;!Auto Spaces:
   994                           ;!    Space          Size  Autos    Used
   995                           ;!    COMMON           14      6      10
   996                           ;!    BANK0            80      7      36
   997                           ;!    BANK1            80      0       0
   998                           ;!    BANK3            96      0       0
   999                           ;!    BANK2            96      0       0
  1000                           
  1001                           ;!
  1002                           ;!Pointer List with Targets:
  1003                           ;!
  1004                           ;!    None.
  1005                           
  1006                           
  1007                           ;!
  1008                           ;!Critical Paths under _main in COMMON
  1009                           ;!
  1010                           ;!    _main->_sendUSART
  1011                           ;!    _setup->_spiInit
  1012                           ;!
  1013                           ;!Critical Paths under _ISR in COMMON
  1014                           ;!
  1015                           ;!    _ISR->_spiWrite
  1016                           ;!
  1017                           ;!Critical Paths under _main in BANK0
  1018                           ;!
  1019                           ;!    _main->_initUSART
  1020                           ;!    _main->_setup
  1021                           ;!    _setup->_spiInit
  1022                           ;!
  1023                           ;!Critical Paths under _ISR in BANK0
  1024                           ;!
  1025                           ;!    None.
  1026                           ;!
  1027                           ;!Critical Paths under _main in BANK1
  1028                           ;!
  1029                           ;!    None.
  1030                           ;!
  1031                           ;!Critical Paths under _ISR in BANK1
  1032                           ;!
  1033                           ;!    None.
  1034                           ;!
  1035                           ;!Critical Paths under _main in BANK3
  1036                           ;!
  1037                           ;!    None.
  1038                           ;!
  1039                           ;!Critical Paths under _ISR in BANK3
  1040                           ;!
  1041                           ;!    None.
  1042                           ;!
  1043                           ;!Critical Paths under _main in BANK2
  1044                           ;!
  1045                           ;!    None.
  1046                           ;!
  1047                           ;!Critical Paths under _ISR in BANK2
  1048                           ;!
  1049                           ;!    None.
  1050                           
  1051 ;;
  1052 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1053 ;;
  1054                           
  1055                           ;!
  1056                           ;!Call Graph Tables:
  1057                           ;!
  1058                           ;! ---------------------------------------------------------------------------------
  1059                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1060                           ;! ---------------------------------------------------------------------------------
  1061                           ;! (0) _main                                                 2     2      0    1117
  1062                           ;!                                              5 BANK0      2     2      0
  1063                           ;!                          _initUSART
  1064                           ;!                          _sendUSART
  1065                           ;!                              _setup
  1066                           ;! ---------------------------------------------------------------------------------
  1067                           ;! (1) _setup                                                2     2      0     456
  1068                           ;!                                              3 BANK0      2     2      0
  1069                           ;!                            _spiInit
  1070                           ;! ---------------------------------------------------------------------------------
  1071                           ;! (2) _spiInit                                              4     1      3     456
  1072                           ;!                                              4 COMMON     1     1      0
  1073                           ;!                                              0 BANK0      3     0      3
  1074                           ;! ---------------------------------------------------------------------------------
  1075                           ;! (1) _sendUSART                                            2     2      0      22
  1076                           ;!                                              4 COMMON     2     2      0
  1077                           ;! ---------------------------------------------------------------------------------
  1078                           ;! (1) _initUSART                                            5     0      5     639
  1079                           ;!                                              0 BANK0      5     0      5
  1080                           ;! ---------------------------------------------------------------------------------
  1081                           ;! Estimated maximum stack depth 2
  1082                           ;! ---------------------------------------------------------------------------------
  1083                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1084                           ;! ---------------------------------------------------------------------------------
  1085                           ;! (3) _ISR                                                  3     3      0      22
  1086                           ;!                                              1 COMMON     3     3      0
  1087                           ;!                            _spiRead
  1088                           ;!                           _spiWrite
  1089                           ;! ---------------------------------------------------------------------------------
  1090                           ;! (4) _spiWrite                                             1     1      0      22
  1091                           ;!                                              0 COMMON     1     1      0
  1092                           ;! ---------------------------------------------------------------------------------
  1093                           ;! (4) _spiRead                                              0     0      0       0
  1094                           ;!                     _spiReceiveWait
  1095                           ;! ---------------------------------------------------------------------------------
  1096                           ;! (5) _spiReceiveWait                                       0     0      0       0
  1097                           ;! ---------------------------------------------------------------------------------
  1098                           ;! Estimated maximum stack depth 5
  1099                           ;! ---------------------------------------------------------------------------------
  1100                           ;!
  1101                           ;! Call Graph Graphs:
  1102                           ;!
  1103                           ;! _main (ROOT)
  1104                           ;!   _initUSART
  1105                           ;!   _sendUSART
  1106                           ;!   _setup
  1107                           ;!     _spiInit
  1108                           ;!
  1109                           ;! _ISR (ROOT)
  1110                           ;!   _spiRead
  1111                           ;!     _spiReceiveWait
  1112                           ;!   _spiWrite
  1113                           ;!
  1114                           
  1115                           ;! Address spaces:
  1116                           
  1117                           ;!Name               Size   Autos  Total    Cost      Usage
  1118                           ;!BITCOMMON            E      0       0       0        0.0%
  1119                           ;!EEDATA             100      0       0       0        0.0%
  1120                           ;!NULL                 0      0       0       0        0.0%
  1121                           ;!CODE                 0      0       0       0        0.0%
  1122                           ;!COMMON               E      6       A       1       71.4%
  1123                           ;!BITSFR0              0      0       0       1        0.0%
  1124                           ;!SFR0                 0      0       0       1        0.0%
  1125                           ;!BITSFR1              0      0       0       2        0.0%
  1126                           ;!SFR1                 0      0       0       2        0.0%
  1127                           ;!STACK                0      0       0       2        0.0%
  1128                           ;!ABS                  0      0      2E       3        0.0%
  1129                           ;!BITBANK0            50      0       0       4        0.0%
  1130                           ;!BITSFR3              0      0       0       4        0.0%
  1131                           ;!SFR3                 0      0       0       4        0.0%
  1132                           ;!BANK0               50      7      24       5       45.0%
  1133                           ;!BITSFR2              0      0       0       5        0.0%
  1134                           ;!SFR2                 0      0       0       5        0.0%
  1135                           ;!BITBANK1            50      0       0       6        0.0%
  1136                           ;!BANK1               50      0       0       7        0.0%
  1137                           ;!BITBANK3            60      0       0       8        0.0%
  1138                           ;!BANK3               60      0       0       9        0.0%
  1139                           ;!BITBANK2            60      0       0      10        0.0%
  1140                           ;!BANK2               60      0       0      11        0.0%
  1141                           ;!DATA                 0      0      2E      12        0.0%
  1142                           
  1143                           	global	_main
  1144                           
  1145 ;; *************** function _main *****************
  1146 ;; Defined at:
  1147 ;;		line 107 in file "mainT.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;                  1    wreg      void 
  1154 ;; Registers used:
  1155 ;;		wreg, status,2, status,0, pclath, cstack
  1156 ;; Tracked objects:
  1157 ;;		On entry : B00/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0
  1163 ;;      Temps:          0       2       0       0       0
  1164 ;;      Totals:         0       2       0       0       0
  1165 ;;Total ram usage:        2 bytes
  1166 ;; Hardware stack levels required when called:    5
  1167 ;; This function calls:
  1168 ;;		_initUSART
  1169 ;;		_sendUSART
  1170 ;;		_setup
  1171 ;; This function is called by:
  1172 ;;		Startup code after reset
  1173 ;; This function uses a non-reentrant model
  1174 ;;
  1175                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1176                           	file	"mainT.c"
  1177                           	line	107
  1178                           global __pmaintext
  1179                           __pmaintext:	;psect for function _main
  1180  01AC                     psect	maintext
  1181                           	file	"mainT.c"
  1182                           	line	107
  1183                           	global	__size_of_main
  1184                           	__size_of_main	equ	__end_of_main-_main
  1185  0037                     	
  1186                           _main:	
  1187  01AC                     ;incstack = 0
  1188                           	opt	stack 3
  1189                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1190                           	line	108
  1191                           	
  1192                           l1196:	
  1193  01AC                     ;mainT.c: 108:     setup();
  1194                           	fcall	_setup
  1195  01AC  120A  118A  21E3  120A  118A  	line	109
  1196                           ;mainT.c: 109:     initUSART(9600, 1, 1, 0);
  1197                           	movlw	080h
  1198  01B1  3080               	bcf	status, 5	;RP0=0, select bank0
  1199  01B2  1283               	bcf	status, 6	;RP1=0, select bank0
  1200  01B3  1303               	movwf	(initUSART@baudrate)
  1201  01B4  00BD               	movlw	025h
  1202  01B5  3025               	movwf	((initUSART@baudrate))+1
  1203  01B6  00BE               	clrf	(initUSART@txint)
  1204  01B7  01BF               	incf	(initUSART@txint),f
  1205  01B8  0ABF               	clrf	(initUSART@rcint)
  1206  01B9  01C0               	incf	(initUSART@rcint),f
  1207  01BA  0AC0               	clrf	(initUSART@syncrono)
  1208  01BB  01C1               	fcall	_initUSART
  1209  01BC  120A  118A  211E  120A  118A  	goto	l1198
  1210  01C1  29C2               	line	113
  1211                           ;mainT.c: 113:     while(1){
  1212                           	
  1213                           l208:	
  1214  01C2                     	line	115
  1215                           	
  1216                           l1198:	
  1217  01C2                     ;mainT.c: 115:         if(bandera == 0){
  1218                           	bcf	status, 5	;RP0=0, select bank0
  1219  01C2  1283               	bcf	status, 6	;RP1=0, select bank0
  1220  01C3  1303               	movf	((_bandera)),w
  1221  01C4  0830               	btfss	status,2
  1222  01C5  1D03               	goto	u701
  1223  01C6  29C8               	goto	u700
  1224  01C7  29C9               u701:
  1225  01C8                     	goto	l1204
  1226  01C8  29D4               u700:
  1227  01C9                     	line	116
  1228                           	
  1229                           l1200:	
  1230  01C9                     ;mainT.c: 116:             sendUSART(current);
  1231                           	movf	(_current),w
  1232  01C9  0879               	fcall	_sendUSART
  1233  01CA  120A  118A  222B  120A  118A  	line	117
  1234                           	
  1235                           l1202:	
  1236  01CF                     ;mainT.c: 117:             bandera = 1;
  1237                           	bcf	status, 5	;RP0=0, select bank0
  1238  01CF  1283               	bcf	status, 6	;RP1=0, select bank0
  1239  01D0  1303               	clrf	(_bandera)
  1240  01D1  01B0               	incf	(_bandera),f
  1241  01D2  0AB0               	goto	l1204
  1242  01D3  29D4               	line	118
  1243                           ;mainT.c: 118:         }
  1244                           	
  1245                           l209:	
  1246  01D4                     	line	120
  1247                           	
  1248                           l1204:	
  1249  01D4                     ;mainT.c: 120:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1250                           	opt asmopt_push
  1251                           opt asmopt_off
  1252                           movlw	13
  1253  01D4  300D               	bcf	status, 5	;RP0=0, select bank0
  1254  01D5  1283               	bcf	status, 6	;RP1=0, select bank0
  1255  01D6  1303               movwf	((??_main+0)+0+1),f
  1256  01D7  00C3               	movlw	251
  1257  01D8  30FB               movwf	((??_main+0)+0),f
  1258  01D9  00C2               	u717:
  1259  01DA                     decfsz	((??_main+0)+0),f
  1260  01DA  0BC2               	goto	u717
  1261  01DB  29DA               	decfsz	((??_main+0)+0+1),f
  1262  01DC  0BC3               	goto	u717
  1263  01DD  29DA               opt asmopt_pop
  1264                           
  1265                           	goto	l1198
  1266  01DE  29C2               	line	121
  1267                           ;mainT.c: 121:     }
  1268                           	
  1269                           l210:	
  1270  01DF                     	goto	l1198
  1271  01DF  29C2               	
  1272                           l211:	
  1273  01E0                     	line	123
  1274                           ;mainT.c: 122:     return;
  1275                           	
  1276                           l212:	
  1277  01E0                     	global	start
  1278                           	ljmp	start
  1279  01E0  120A  118A  280C   	opt stack 0
  1280                           GLOBAL	__end_of_main
  1281                           	__end_of_main:
  1282  01E3                     	signat	_main,89
  1283                           	global	_setup
  1284                           
  1285 ;; *************** function _setup *****************
  1286 ;; Defined at:
  1287 ;;		line 127 in file "mainT.c"
  1288 ;; Parameters:    Size  Location     Type
  1289 ;;		None
  1290 ;; Auto vars:     Size  Location     Type
  1291 ;;		None
  1292 ;; Return value:  Size  Location     Type
  1293 ;;                  1    wreg      void 
  1294 ;; Registers used:
  1295 ;;		wreg, status,2, status,0, pclath, cstack
  1296 ;; Tracked objects:
  1297 ;;		On entry : 0/0
  1298 ;;		On exit  : 0/0
  1299 ;;		Unchanged: 0/0
  1300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1301 ;;      Params:         0       0       0       0       0
  1302 ;;      Locals:         0       0       0       0       0
  1303 ;;      Temps:          0       2       0       0       0
  1304 ;;      Totals:         0       2       0       0       0
  1305 ;;Total ram usage:        2 bytes
  1306 ;; Hardware stack levels used:    1
  1307 ;; Hardware stack levels required when called:    4
  1308 ;; This function calls:
  1309 ;;		_spiInit
  1310 ;; This function is called by:
  1311 ;;		_main
  1312 ;; This function uses a non-reentrant model
  1313 ;;
  1314                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1315                           	line	127
  1316                           global __ptext1
  1317                           __ptext1:	;psect for function _setup
  1318  01E3                     psect	text1
  1319                           	file	"mainT.c"
  1320                           	line	127
  1321                           	global	__size_of_setup
  1322                           	__size_of_setup	equ	__end_of_setup-_setup
  1323  002A                     	
  1324                           _setup:	
  1325  01E3                     ;incstack = 0
  1326                           	opt	stack 3
  1327                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1328                           	line	128
  1329                           	
  1330                           l1180:	
  1331  01E3                     ;mainT.c: 128:     PORTA = 0;
  1332                           	bcf	status, 5	;RP0=0, select bank0
  1333  01E3  1283               	bcf	status, 6	;RP1=0, select bank0
  1334  01E4  1303               	clrf	(5)	;volatile
  1335  01E5  0185               	line	129
  1336                           ;mainT.c: 129:     PORTB = 0;
  1337                           	clrf	(6)	;volatile
  1338  01E6  0186               	line	130
  1339                           ;mainT.c: 130:     PORTC = 0;
  1340                           	clrf	(7)	;volatile
  1341  01E7  0187               	line	131
  1342                           ;mainT.c: 131:     PORTD = 0;
  1343                           	clrf	(8)	;volatile
  1344  01E8  0188               	line	132
  1345                           ;mainT.c: 132:     PORTE = 0;
  1346                           	clrf	(9)	;volatile
  1347  01E9  0189               	line	133
  1348                           ;mainT.c: 133:     TRISA = 0;
  1349                           	bsf	status, 5	;RP0=1, select bank1
  1350  01EA  1683               	bcf	status, 6	;RP1=0, select bank1
  1351  01EB  1303               	clrf	(133)^080h	;volatile
  1352  01EC  0185               	line	134
  1353                           ;mainT.c: 134:     TRISB = 0;
  1354                           	clrf	(134)^080h	;volatile
  1355  01ED  0186               	line	135
  1356                           ;mainT.c: 135:     TRISC = 0;
  1357                           	clrf	(135)^080h	;volatile
  1358  01EE  0187               	line	136
  1359                           	
  1360                           l1182:	
  1361  01EF                     ;mainT.c: 136:     TRISCbits.TRISC5 = 0;
  1362                           	bcf	(135)^080h,5	;volatile
  1363  01EF  1287               	line	137
  1364                           	
  1365                           l1184:	
  1366  01F0                     ;mainT.c: 137:     TRISCbits.TRISC4 = 1;
  1367                           	bsf	(135)^080h,4	;volatile
  1368  01F0  1607               	line	138
  1369                           ;mainT.c: 138:     TRISD = 0;
  1370                           	clrf	(136)^080h	;volatile
  1371  01F1  0188               	line	139
  1372                           ;mainT.c: 139:     TRISE = 0;
  1373                           	clrf	(137)^080h	;volatile
  1374  01F2  0189               	line	141
  1375                           	
  1376                           l1186:	
  1377  01F3                     ;mainT.c: 141:     INTCONbits.GIE = 1;
  1378                           	bsf	(11),7	;volatile
  1379  01F3  178B               	line	142
  1380                           	
  1381                           l1188:	
  1382  01F4                     ;mainT.c: 142:     INTCONbits.PEIE = 1;
  1383                           	bsf	(11),6	;volatile
  1384  01F4  170B               	line	143
  1385                           	
  1386                           l1190:	
  1387  01F5                     ;mainT.c: 143:     PIR1bits.SSPIF = 0;
  1388                           	bcf	status, 5	;RP0=0, select bank0
  1389  01F5  1283               	bcf	status, 6	;RP1=0, select bank0
  1390  01F6  1303               	bcf	(12),3	;volatile
  1391  01F7  118C               	line	144
  1392                           	
  1393                           l1192:	
  1394  01F8                     ;mainT.c: 144:     PIE1bits.SSPIE = 1;
  1395                           	bsf	status, 5	;RP0=1, select bank1
  1396  01F8  1683               	bcf	status, 6	;RP1=0, select bank1
  1397  01F9  1303               	bsf	(140)^080h,3	;volatile
  1398  01FA  158C               	line	146
  1399                           	
  1400                           l1194:	
  1401  01FB                     ;mainT.c: 146:     spiInit(SPI_SLAVE_SS_DIS, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_HIGH
                                 , SPI_ACTIVE_2_IDLE);
  1402                           	bcf	status, 5	;RP0=0, select bank0
  1403  01FB  1283               	bcf	status, 6	;RP1=0, select bank0
  1404  01FC  1303               	clrf	(spiInit@sDataSample)
  1405  01FD  01BD               	movlw	low(010h)
  1406  01FE  3010               	movwf	(??_setup+0)+0
  1407  01FF  00C0               	movf	(??_setup+0)+0,w
  1408  0200  0840               	movwf	(spiInit@sClockIdle)
  1409  0201  00BE               	movlw	low(040h)
  1410  0202  3040               	movwf	(??_setup+1)+0
  1411  0203  00C1               	movf	(??_setup+1)+0,w
  1412  0204  0841               	movwf	(spiInit@sTransmitEdge)
  1413  0205  00BF               	movlw	low(025h)
  1414  0206  3025               	fcall	_spiInit
  1415  0207  120A  118A  220D  120A  118A  	line	148
  1416                           	
  1417                           l215:	
  1418  020C                     	return
  1419  020C  0008               	opt stack 0
  1420                           GLOBAL	__end_of_setup
  1421                           	__end_of_setup:
  1422  020D                     	signat	_setup,89
  1423                           	global	_spiInit
  1424                           
  1425 ;; *************** function _spiInit *****************
  1426 ;; Defined at:
  1427 ;;		line 12 in file "SPI.c"
  1428 ;; Parameters:    Size  Location     Type
  1429 ;;  sType           1    wreg     enum E1264
  1430 ;;  sDataSample     1    0[BANK0 ] enum E1272
  1431 ;;  sClockIdle      1    1[BANK0 ] enum E1276
  1432 ;;  sTransmitEdg    1    2[BANK0 ] enum E1280
  1433 ;; Auto vars:     Size  Location     Type
  1434 ;;  sType           1    4[COMMON] enum E1264
  1435 ;; Return value:  Size  Location     Type
  1436 ;;                  1    wreg      void 
  1437 ;; Registers used:
  1438 ;;		wreg, status,2, status,0
  1439 ;; Tracked objects:
  1440 ;;		On entry : 0/0
  1441 ;;		On exit  : 0/0
  1442 ;;		Unchanged: 0/0
  1443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1444 ;;      Params:         0       3       0       0       0
  1445 ;;      Locals:         1       0       0       0       0
  1446 ;;      Temps:          0       0       0       0       0
  1447 ;;      Totals:         1       3       0       0       0
  1448 ;;Total ram usage:        4 bytes
  1449 ;; Hardware stack levels used:    1
  1450 ;; Hardware stack levels required when called:    3
  1451 ;; This function calls:
  1452 ;;		Nothing
  1453 ;; This function is called by:
  1454 ;;		_setup
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1458                           	file	"SPI.c"
  1459                           	line	12
  1460                           global __ptext2
  1461                           __ptext2:	;psect for function _spiInit
  1462  020D                     psect	text2
  1463                           	file	"SPI.c"
  1464                           	line	12
  1465                           	global	__size_of_spiInit
  1466                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  1467  001E                     	
  1468                           _spiInit:	
  1469  020D                     ;incstack = 0
  1470                           	opt	stack 3
  1471                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1472                           ;spiInit@sType stored from wreg
  1473                           	movwf	(spiInit@sType)
  1474  020D  00F4               	line	14
  1475                           	
  1476                           l1130:	
  1477  020E                     ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
                                 ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1478                           	bsf	status, 5	;RP0=1, select bank1
  1479  020E  1683               	bcf	status, 6	;RP1=0, select bank1
  1480  020F  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  1481  0210  1287               	line	15
  1482                           ;SPI.c: 15:     if(sType & 0b00000100)
  1483                           	btfss	(spiInit@sType),(2)&7
  1484  0211  1D74               	goto	u611
  1485  0212  2A14               	goto	u610
  1486  0213  2A15               u611:
  1487  0214                     	goto	l1136
  1488  0214  2A1D               u610:
  1489  0215                     	line	17
  1490                           	
  1491                           l1132:	
  1492  0215                     ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1493                           	bcf	status, 5	;RP0=0, select bank0
  1494  0215  1283               	bcf	status, 6	;RP1=0, select bank0
  1495  0216  1303               	movf	(spiInit@sTransmitEdge),w
  1496  0217  083F               	bsf	status, 5	;RP0=1, select bank1
  1497  0218  1683               	bcf	status, 6	;RP1=0, select bank1
  1498  0219  1303               	movwf	(148)^080h	;volatile
  1499  021A  0094               	line	18
  1500                           	
  1501                           l1134:	
  1502  021B                     ;SPI.c: 18:         TRISC3 = 1;
  1503                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  1504  021B  1587               	line	19
  1505                           ;SPI.c: 19:     }
  1506                           	goto	l16
  1507  021C  2A25               	line	20
  1508                           ;SPI.c: 20:     else
  1509                           	
  1510                           l15:	
  1511  021D                     	line	22
  1512                           	
  1513                           l1136:	
  1514  021D                     ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1515                           	bcf	status, 5	;RP0=0, select bank0
  1516  021D  1283               	bcf	status, 6	;RP1=0, select bank0
  1517  021E  1303               	movf	(spiInit@sDataSample),w
  1518  021F  083D               	iorwf	(spiInit@sTransmitEdge),w
  1519  0220  043F               	bsf	status, 5	;RP0=1, select bank1
  1520  0221  1683               	bcf	status, 6	;RP1=0, select bank1
  1521  0222  1303               	movwf	(148)^080h	;volatile
  1522  0223  0094               	line	23
  1523                           	
  1524                           l1138:	
  1525  0224                     ;SPI.c: 23:         TRISC3 = 0;
  1526                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  1527  0224  1187               	line	24
  1528                           ;SPI.c: 24:     }
  1529                           	
  1530                           l16:	
  1531  0225                     	line	26
  1532                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1533                           	movf	(spiInit@sType),w
  1534  0225  0874               	bcf	status, 5	;RP0=0, select bank0
  1535  0226  1283               	bcf	status, 6	;RP1=0, select bank0
  1536  0227  1303               	iorwf	(spiInit@sClockIdle),w
  1537  0228  043E               	movwf	(20)	;volatile
  1538  0229  0094               	line	27
  1539                           	
  1540                           l17:	
  1541  022A                     	return
  1542  022A  0008               	opt stack 0
  1543                           GLOBAL	__end_of_spiInit
  1544                           	__end_of_spiInit:
  1545  022B                     	signat	_spiInit,16505
  1546                           	global	_sendUSART
  1547                           
  1548 ;; *************** function _sendUSART *****************
  1549 ;; Defined at:
  1550 ;;		line 43 in file "USART.c"
  1551 ;; Parameters:    Size  Location     Type
  1552 ;;  data            1    wreg     unsigned char 
  1553 ;; Auto vars:     Size  Location     Type
  1554 ;;  data            1    5[COMMON] unsigned char 
  1555 ;; Return value:  Size  Location     Type
  1556 ;;                  1    wreg      void 
  1557 ;; Registers used:
  1558 ;;		wreg
  1559 ;; Tracked objects:
  1560 ;;		On entry : 0/0
  1561 ;;		On exit  : 0/0
  1562 ;;		Unchanged: 0/0
  1563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1564 ;;      Params:         0       0       0       0       0
  1565 ;;      Locals:         1       0       0       0       0
  1566 ;;      Temps:          1       0       0       0       0
  1567 ;;      Totals:         2       0       0       0       0
  1568 ;;Total ram usage:        2 bytes
  1569 ;; Hardware stack levels used:    1
  1570 ;; Hardware stack levels required when called:    3
  1571 ;; This function calls:
  1572 ;;		Nothing
  1573 ;; This function is called by:
  1574 ;;		_main
  1575 ;; This function uses a non-reentrant model
  1576 ;;
  1577                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1578                           	file	"USART.c"
  1579                           	line	43
  1580                           global __ptext3
  1581                           __ptext3:	;psect for function _sendUSART
  1582  022B                     psect	text3
  1583                           	file	"USART.c"
  1584                           	line	43
  1585                           	global	__size_of_sendUSART
  1586                           	__size_of_sendUSART	equ	__end_of_sendUSART-_sendUSART
  1587  0015                     	
  1588                           _sendUSART:	
  1589  022B                     ;incstack = 0
  1590                           	opt	stack 4
  1591                           ; Regs used in _sendUSART: [wreg]
  1592                           ;sendUSART@data stored from wreg
  1593                           	movwf	(sendUSART@data)
  1594  022B  00F5               	line	44
  1595                           	
  1596                           l1022:	
  1597  022C                     ;USART.c: 44:     while (TXSTAbits.TRMT == 0){}
  1598                           	goto	l75
  1599  022C  2A2D               	
  1600                           l76:	
  1601  022D                     	
  1602                           l75:	
  1603  022D                     	bsf	status, 5	;RP0=1, select bank1
  1604  022D  1683               	bcf	status, 6	;RP1=0, select bank1
  1605  022E  1303               	btfss	(152)^080h,1	;volatile
  1606  022F  1C98               	goto	u411
  1607  0230  2A32               	goto	u410
  1608  0231  2A33               u411:
  1609  0232                     	goto	l75
  1610  0232  2A2D               u410:
  1611  0233                     	goto	l1024
  1612  0233  2A34               	
  1613                           l77:	
  1614  0234                     	line	45
  1615                           	
  1616                           l1024:	
  1617  0234                     ;USART.c: 45:     TXREG = data;
  1618                           	movf	(sendUSART@data),w
  1619  0234  0875               	bcf	status, 5	;RP0=0, select bank0
  1620  0235  1283               	bcf	status, 6	;RP1=0, select bank0
  1621  0236  1303               	movwf	(25)	;volatile
  1622  0237  0099               	line	46
  1623                           ;USART.c: 46:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1624                           	opt asmopt_push
  1625                           opt asmopt_off
  1626                           	movlw	199
  1627  0238  30C7               movwf	((??_sendUSART+0)+0),f
  1628  0239  00F4               	u727:
  1629  023A                     	nop2
  1630  023A  2A3B               decfsz	(??_sendUSART+0)+0,f
  1631  023B  0BF4               	goto	u727
  1632  023C  2A3A               	nop2
  1633  023D  2A3E               	nop2
  1634  023E  2A3F               opt asmopt_pop
  1635                           
  1636                           	line	47
  1637                           	
  1638                           l78:	
  1639  023F                     	return
  1640  023F  0008               	opt stack 0
  1641                           GLOBAL	__end_of_sendUSART
  1642                           	__end_of_sendUSART:
  1643  0240                     	signat	_sendUSART,4217
  1644                           	global	_initUSART
  1645                           
  1646 ;; *************** function _initUSART *****************
  1647 ;; Defined at:
  1648 ;;		line 5 in file "USART.c"
  1649 ;; Parameters:    Size  Location     Type
  1650 ;;  baudrate        2    0[BANK0 ] unsigned int 
  1651 ;;  txint           1    2[BANK0 ] unsigned char 
  1652 ;;  rcint           1    3[BANK0 ] unsigned char 
  1653 ;;  syncrono        1    4[BANK0 ] unsigned char 
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, status,2, status,0
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1665 ;;      Params:         0       5       0       0       0
  1666 ;;      Locals:         0       0       0       0       0
  1667 ;;      Temps:          0       0       0       0       0
  1668 ;;      Totals:         0       5       0       0       0
  1669 ;;Total ram usage:        5 bytes
  1670 ;; Hardware stack levels used:    1
  1671 ;; Hardware stack levels required when called:    3
  1672 ;; This function calls:
  1673 ;;		Nothing
  1674 ;; This function is called by:
  1675 ;;		_main
  1676 ;; This function uses a non-reentrant model
  1677 ;;
  1678                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1679                           	line	5
  1680                           global __ptext4
  1681                           __ptext4:	;psect for function _initUSART
  1682  011E                     psect	text4
  1683                           	file	"USART.c"
  1684                           	line	5
  1685                           	global	__size_of_initUSART
  1686                           	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  1687  008E                     	
  1688                           _initUSART:	
  1689  011E                     ;incstack = 0
  1690                           	opt	stack 4
  1691                           ; Regs used in _initUSART: [wreg+status,2+status,0]
  1692                           	line	6
  1693                           	
  1694                           l1140:	
  1695  011E                     ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  1696                           	bsf	status, 5	;RP0=1, select bank1
  1697  011E  1683               	bcf	status, 6	;RP1=0, select bank1
  1698  011F  1303               	bsf	(135)^080h,7	;volatile
  1699  0120  1787               	line	8
  1700                           ;USART.c: 8:     PIE1bits.RCIE = 0;
  1701                           	bcf	(140)^080h,5	;volatile
  1702  0121  128C               	line	10
  1703                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  1704                           	bcf	status, 5	;RP0=0, select bank0
  1705  0122  1283               	bcf	status, 6	;RP1=0, select bank0
  1706  0123  1303               	bsf	(24),7	;volatile
  1707  0124  1798               	line	11
  1708                           	
  1709                           l1142:	
  1710  0125                     ;USART.c: 11:     TXSTAbits.SYNC = syncrono;
  1711                           	rrf	(initUSART@syncrono),w
  1712  0125  0C41               	bsf	status, 5	;RP0=1, select bank1
  1713  0126  1683               	bcf	status, 6	;RP1=0, select bank1
  1714  0127  1303               	skipc
  1715  0128  1C03               	bcf	(152)^080h,4	;volatile
  1716  0129  1218               	skipnc
  1717  012A  1803               	bsf	(152)^080h,4	;volatile
  1718  012B  1618               	line	13
  1719                           	
  1720                           l1144:	
  1721  012C                     ;USART.c: 13:     if(rcint){
  1722                           	bcf	status, 5	;RP0=0, select bank0
  1723  012C  1283               	bcf	status, 6	;RP1=0, select bank0
  1724  012D  1303               	movf	((initUSART@rcint)),w
  1725  012E  0840               	btfsc	status,2
  1726  012F  1903               	goto	u621
  1727  0130  2932               	goto	u620
  1728  0131  2933               u621:
  1729  0132                     	goto	l1148
  1730  0132  293B               u620:
  1731  0133                     	line	14
  1732                           	
  1733                           l1146:	
  1734  0133                     ;USART.c: 14:         RCSTAbits.CREN = 1;
  1735                           	bsf	(24),4	;volatile
  1736  0133  1618               	line	15
  1737                           ;USART.c: 15:         PIE1bits.RCIE = 1;
  1738                           	bsf	status, 5	;RP0=1, select bank1
  1739  0134  1683               	bcf	status, 6	;RP1=0, select bank1
  1740  0135  1303               	bsf	(140)^080h,5	;volatile
  1741  0136  168C               	line	16
  1742                           ;USART.c: 16:         PIR1bits.RCIF = 0;
  1743                           	bcf	status, 5	;RP0=0, select bank0
  1744  0137  1283               	bcf	status, 6	;RP1=0, select bank0
  1745  0138  1303               	bcf	(12),5	;volatile
  1746  0139  128C               	goto	l1148
  1747  013A  293B               	line	17
  1748                           ;USART.c: 17:     }
  1749                           	
  1750                           l59:	
  1751  013B                     	line	18
  1752                           	
  1753                           l1148:	
  1754  013B                     ;USART.c: 18:     if(txint){
  1755                           	movf	((initUSART@txint)),w
  1756  013B  083F               	btfsc	status,2
  1757  013C  1903               	goto	u631
  1758  013D  293F               	goto	u630
  1759  013E  2940               u631:
  1760  013F                     	goto	l60
  1761  013F  2943               u630:
  1762  0140                     	line	19
  1763                           	
  1764                           l1150:	
  1765  0140                     ;USART.c: 19:         TXSTAbits.TXEN = 1;
  1766                           	bsf	status, 5	;RP0=1, select bank1
  1767  0140  1683               	bcf	status, 6	;RP1=0, select bank1
  1768  0141  1303               	bsf	(152)^080h,5	;volatile
  1769  0142  1698               	line	20
  1770                           ;USART.c: 20:     }
  1771                           	
  1772                           l60:	
  1773  0143                     	line	22
  1774                           ;USART.c: 22:     BAUDCTLbits.BRG16 = 1;
  1775                           	bsf	status, 5	;RP0=1, select bank3
  1776  0143  1683               	bsf	status, 6	;RP1=1, select bank3
  1777  0144  1703               	bsf	(391)^0180h,3	;volatile
  1778  0145  1587               	line	23
  1779                           ;USART.c: 23:     TXSTAbits.BRGH = 0;
  1780                           	bsf	status, 5	;RP0=1, select bank1
  1781  0146  1683               	bcf	status, 6	;RP1=0, select bank1
  1782  0147  1303               	bcf	(152)^080h,2	;volatile
  1783  0148  1118               	line	25
  1784                           	
  1785                           l1152:	
  1786  0149                     ;USART.c: 25:     if(baudrate == 300){
  1787                           		movlw	44
  1788  0149  302C               	bcf	status, 5	;RP0=0, select bank0
  1789  014A  1283               	bcf	status, 6	;RP1=0, select bank0
  1790  014B  1303               	xorwf	((initUSART@baudrate)),w
  1791  014C  063D               	skipz
  1792  014D  1D03               	goto	u641
  1793  014E  2953               	decf	((initUSART@baudrate+1)),w
  1794  014F  033E               	btfss	status,2
  1795  0150  1D03               	goto	u641
  1796  0151  2953               	goto	u640
  1797  0152  2954               u641:
  1798  0153                     	goto	l1156
  1799  0153  295B               u640:
  1800  0154                     	line	26
  1801                           	
  1802                           l1154:	
  1803  0154                     ;USART.c: 26:         SPBRG = 0x40;
  1804                           	movlw	low(040h)
  1805  0154  3040               	bsf	status, 5	;RP0=1, select bank1
  1806  0155  1683               	bcf	status, 6	;RP1=0, select bank1
  1807  0156  1303               	movwf	(153)^080h	;volatile
  1808  0157  0099               	line	27
  1809                           ;USART.c: 27:         SPBRGH = 0x03;
  1810                           	movlw	low(03h)
  1811  0158  3003               	movwf	(154)^080h	;volatile
  1812  0159  009A               	line	28
  1813                           ;USART.c: 28:     } else if (baudrate == 1200){
  1814                           	goto	l1176
  1815  015A  29A9               	
  1816                           l61:	
  1817  015B                     	
  1818                           l1156:	
  1819  015B                     		movlw	176
  1820  015B  30B0               	bcf	status, 5	;RP0=0, select bank0
  1821  015C  1283               	xorwf	((initUSART@baudrate)),w
  1822  015D  063D               	movlw	4
  1823  015E  3004               	skipnz
  1824  015F  1903               	xorwf	((initUSART@baudrate+1)),w
  1825  0160  063E               	btfss	status,2
  1826  0161  1D03               	goto	u651
  1827  0162  2964               	goto	u650
  1828  0163  2965               u651:
  1829  0164                     	goto	l1160
  1830  0164  296A               u650:
  1831  0165                     	line	29
  1832                           	
  1833                           l1158:	
  1834  0165                     ;USART.c: 29:         SPBRG = 207;
  1835                           	movlw	low(0CFh)
  1836  0165  30CF               	bsf	status, 5	;RP0=1, select bank1
  1837  0166  1683               	bcf	status, 6	;RP1=0, select bank1
  1838  0167  1303               	movwf	(153)^080h	;volatile
  1839  0168  0099               	line	30
  1840                           ;USART.c: 30:     } else if (baudrate == 2400){
  1841                           	goto	l1176
  1842  0169  29A9               	
  1843                           l63:	
  1844  016A                     	
  1845                           l1160:	
  1846  016A                     		movlw	96
  1847  016A  3060               	bcf	status, 5	;RP0=0, select bank0
  1848  016B  1283               	xorwf	((initUSART@baudrate)),w
  1849  016C  063D               	movlw	9
  1850  016D  3009               	skipnz
  1851  016E  1903               	xorwf	((initUSART@baudrate+1)),w
  1852  016F  063E               	btfss	status,2
  1853  0170  1D03               	goto	u661
  1854  0171  2973               	goto	u660
  1855  0172  2974               u661:
  1856  0173                     	goto	l1164
  1857  0173  2979               u660:
  1858  0174                     	line	31
  1859                           	
  1860                           l1162:	
  1861  0174                     ;USART.c: 31:         SPBRG = 103;
  1862                           	movlw	low(067h)
  1863  0174  3067               	bsf	status, 5	;RP0=1, select bank1
  1864  0175  1683               	bcf	status, 6	;RP1=0, select bank1
  1865  0176  1303               	movwf	(153)^080h	;volatile
  1866  0177  0099               	line	32
  1867                           ;USART.c: 32:     } else if (baudrate == 9600){
  1868                           	goto	l1176
  1869  0178  29A9               	
  1870                           l65:	
  1871  0179                     	
  1872                           l1164:	
  1873  0179                     		movlw	128
  1874  0179  3080               	bcf	status, 5	;RP0=0, select bank0
  1875  017A  1283               	xorwf	((initUSART@baudrate)),w
  1876  017B  063D               	movlw	37
  1877  017C  3025               	skipnz
  1878  017D  1903               	xorwf	((initUSART@baudrate+1)),w
  1879  017E  063E               	btfss	status,2
  1880  017F  1D03               	goto	u671
  1881  0180  2982               	goto	u670
  1882  0181  2983               u671:
  1883  0182                     	goto	l1168
  1884  0182  2988               u670:
  1885  0183                     	line	33
  1886                           	
  1887                           l1166:	
  1888  0183                     ;USART.c: 33:         SPBRG = 25;
  1889                           	movlw	low(019h)
  1890  0183  3019               	bsf	status, 5	;RP0=1, select bank1
  1891  0184  1683               	bcf	status, 6	;RP1=0, select bank1
  1892  0185  1303               	movwf	(153)^080h	;volatile
  1893  0186  0099               	line	34
  1894                           ;USART.c: 34:     } else if (baudrate == 10417){
  1895                           	goto	l1176
  1896  0187  29A9               	
  1897                           l67:	
  1898  0188                     	
  1899                           l1168:	
  1900  0188                     		movlw	177
  1901  0188  30B1               	bcf	status, 5	;RP0=0, select bank0
  1902  0189  1283               	xorwf	((initUSART@baudrate)),w
  1903  018A  063D               	movlw	40
  1904  018B  3028               	skipnz
  1905  018C  1903               	xorwf	((initUSART@baudrate+1)),w
  1906  018D  063E               	btfss	status,2
  1907  018E  1D03               	goto	u681
  1908  018F  2991               	goto	u680
  1909  0190  2992               u681:
  1910  0191                     	goto	l1172
  1911  0191  2997               u680:
  1912  0192                     	line	35
  1913                           	
  1914                           l1170:	
  1915  0192                     ;USART.c: 35:         SPBRG = 23;
  1916                           	movlw	low(017h)
  1917  0192  3017               	bsf	status, 5	;RP0=1, select bank1
  1918  0193  1683               	bcf	status, 6	;RP1=0, select bank1
  1919  0194  1303               	movwf	(153)^080h	;volatile
  1920  0195  0099               	line	36
  1921                           ;USART.c: 36:     } else if (baudrate == 19200){
  1922                           	goto	l1176
  1923  0196  29A9               	
  1924                           l69:	
  1925  0197                     	
  1926                           l1172:	
  1927  0197                     		movlw	75
  1928  0197  304B               	bcf	status, 5	;RP0=0, select bank0
  1929  0198  1283               	xorwf	((initUSART@baudrate+1)),w
  1930  0199  063E               iorwf	((initUSART@baudrate)),w
  1931  019A  043D               	btfss	status,2
  1932  019B  1D03               	goto	u691
  1933  019C  299E               	goto	u690
  1934  019D  299F               u691:
  1935  019E                     	goto	l1176
  1936  019E  29A9               u690:
  1937  019F                     	line	37
  1938                           	
  1939                           l1174:	
  1940  019F                     ;USART.c: 37:         SPBRG = 12;
  1941                           	movlw	low(0Ch)
  1942  019F  300C               	bsf	status, 5	;RP0=1, select bank1
  1943  01A0  1683               	bcf	status, 6	;RP1=0, select bank1
  1944  01A1  1303               	movwf	(153)^080h	;volatile
  1945  01A2  0099               	goto	l1176
  1946  01A3  29A9               	line	38
  1947                           ;USART.c: 38:     }
  1948                           	
  1949                           l71:	
  1950  01A4                     	goto	l1176
  1951  01A4  29A9               	
  1952                           l70:	
  1953  01A5                     	goto	l1176
  1954  01A5  29A9               	
  1955                           l68:	
  1956  01A6                     	goto	l1176
  1957  01A6  29A9               	
  1958                           l66:	
  1959  01A7                     	goto	l1176
  1960  01A7  29A9               	
  1961                           l64:	
  1962  01A8                     	goto	l1176
  1963  01A8  29A9               	
  1964                           l62:	
  1965  01A9                     	line	39
  1966                           	
  1967                           l1176:	
  1968  01A9                     ;USART.c: 39:     INTCONbits.PEIE = 1;
  1969                           	bsf	(11),6	;volatile
  1970  01A9  170B               	line	40
  1971                           	
  1972                           l1178:	
  1973  01AA                     ;USART.c: 40:     INTCONbits.GIE = 1;
  1974                           	bsf	(11),7	;volatile
  1975  01AA  178B               	line	41
  1976                           	
  1977                           l72:	
  1978  01AB                     	return
  1979  01AB  0008               	opt stack 0
  1980                           GLOBAL	__end_of_initUSART
  1981                           	__end_of_initUSART:
  1982  01AC                     	signat	_initUSART,16505
  1983                           	global	_ISR
  1984                           
  1985 ;; *************** function _ISR *****************
  1986 ;; Defined at:
  1987 ;;		line 56 in file "mainT.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0
  2003 ;;      Temps:          3       0       0       0       0
  2004 ;;      Totals:         3       0       0       0       0
  2005 ;;Total ram usage:        3 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    2
  2008 ;; This function calls:
  2009 ;;		_spiRead
  2010 ;;		_spiWrite
  2011 ;; This function is called by:
  2012 ;;		Interrupt level 1
  2013 ;; This function uses a non-reentrant model
  2014 ;;
  2015                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  2016                           	file	"mainT.c"
  2017                           	line	56
  2018                           global __ptext5
  2019                           __ptext5:	;psect for function _ISR
  2020  0020                     psect	text5
  2021                           	file	"mainT.c"
  2022                           	line	56
  2023                           	global	__size_of_ISR
  2024                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  2025  00FE                     	
  2026                           _ISR:	
  2027  0020                     ;incstack = 0
  2028                           	opt	stack 3
  2029                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
  2030                           psect	intentry,class=CODE,delta=2
  2031                           global __pintentry
  2032                           __pintentry:
  2033  0004                     global interrupt_function
  2034                           interrupt_function:
  2035  0004                     	global saved_w
  2036                           	saved_w	set	btemp+0
  2037  007E                     	movwf	saved_w
  2038  0004  00FE               	swapf	status,w
  2039  0005  0E03               	movwf	(??_ISR+1)
  2040  0006  00F2               	movf	pclath,w
  2041  0007  080A               	movwf	(??_ISR+2)
  2042  0008  00F3               	ljmp	_ISR
  2043  0009  120A  118A  2820   psect	text5
  2044                           	line	57
  2045                           	
  2046                           i1l1042:	
  2047  0020                     ;mainT.c: 57:     if(PIR1bits.RCIF == 1){
  2048                           	bcf	status, 5	;RP0=0, select bank0
  2049  0020  1283               	bcf	status, 6	;RP1=0, select bank0
  2050  0021  1303               	btfss	(12),5	;volatile
  2051  0022  1E8C               	goto	u42_21
  2052  0023  2825               	goto	u42_20
  2053  0024  2826               u42_21:
  2054  0025                     	goto	i1l1082
  2055  0025  288E               u42_20:
  2056  0026                     	line	59
  2057                           	
  2058                           i1l1044:	
  2059  0026                     ;mainT.c: 59:         if(current == 0){
  2060                           	movf	((_current)),w
  2061  0026  0879               	btfss	status,2
  2062  0027  1D03               	goto	u43_21
  2063  0028  282A               	goto	u43_20
  2064  0029  282B               u43_21:
  2065  002A                     	goto	i1l1048
  2066  002A  2830               u43_20:
  2067  002B                     	line	60
  2068                           	
  2069                           i1l1046:	
  2070  002B                     ;mainT.c: 60:             signal = RCREG;
  2071                           	movf	(26),w	;volatile
  2072  002B  081A               	movwf	(??_ISR+0)+0
  2073  002C  00F1               	movf	(??_ISR+0)+0,w
  2074  002D  0871               	movwf	(_signal)
  2075  002E  00F7               	line	61
  2076                           ;mainT.c: 61:         }else if(current == 1){
  2077                           	goto	i1l1076
  2078  002F  2883               	
  2079                           i1l172:	
  2080  0030                     	
  2081                           i1l1048:	
  2082  0030                     		decf	((_current)),w
  2083  0030  0379               	btfss	status,2
  2084  0031  1D03               	goto	u44_21
  2085  0032  2834               	goto	u44_20
  2086  0033  2835               u44_21:
  2087  0034                     	goto	i1l1052
  2088  0034  283A               u44_20:
  2089  0035                     	line	62
  2090                           	
  2091                           i1l1050:	
  2092  0035                     ;mainT.c: 62:             ventilador = RCREG;
  2093                           	movf	(26),w	;volatile
  2094  0035  081A               	movwf	(??_ISR+0)+0
  2095  0036  00F1               	movf	(??_ISR+0)+0,w
  2096  0037  0871               	movwf	(_ventilador)
  2097  0038  00F6               	line	63
  2098                           ;mainT.c: 63:         }else if(current == 2){
  2099                           	goto	i1l1076
  2100  0039  2883               	
  2101                           i1l174:	
  2102  003A                     	
  2103                           i1l1052:	
  2104  003A                     		movlw	2
  2105  003A  3002               	xorwf	((_current)),w
  2106  003B  0679               	btfss	status,2
  2107  003C  1D03               	goto	u45_21
  2108  003D  283F               	goto	u45_20
  2109  003E  2840               u45_21:
  2110  003F                     	goto	i1l1056
  2111  003F  2845               u45_20:
  2112  0040                     	line	64
  2113                           	
  2114                           i1l1054:	
  2115  0040                     ;mainT.c: 64:             garage = RCREG;
  2116                           	movf	(26),w	;volatile
  2117  0040  081A               	movwf	(??_ISR+0)+0
  2118  0041  00F1               	movf	(??_ISR+0)+0,w
  2119  0042  0871               	movwf	(_garage)
  2120  0043  00B6               	line	65
  2121                           ;mainT.c: 65:         }else if(current == 3){
  2122                           	goto	i1l1076
  2123  0044  2883               	
  2124                           i1l176:	
  2125  0045                     	
  2126                           i1l1056:	
  2127  0045                     		movlw	3
  2128  0045  3003               	xorwf	((_current)),w
  2129  0046  0679               	btfss	status,2
  2130  0047  1D03               	goto	u46_21
  2131  0048  284A               	goto	u46_20
  2132  0049  284B               u46_21:
  2133  004A                     	goto	i1l1060
  2134  004A  2850               u46_20:
  2135  004B                     	line	66
  2136                           	
  2137                           i1l1058:	
  2138  004B                     ;mainT.c: 66:             hall = RCREG;
  2139                           	movf	(26),w	;volatile
  2140  004B  081A               	movwf	(??_ISR+0)+0
  2141  004C  00F1               	movf	(??_ISR+0)+0,w
  2142  004D  0871               	movwf	(_hall)
  2143  004E  00B5               	line	67
  2144                           ;mainT.c: 67:         }else if(current == 4){
  2145                           	goto	i1l1076
  2146  004F  2883               	
  2147                           i1l178:	
  2148  0050                     	
  2149                           i1l1060:	
  2150  0050                     		movlw	4
  2151  0050  3004               	xorwf	((_current)),w
  2152  0051  0679               	btfss	status,2
  2153  0052  1D03               	goto	u47_21
  2154  0053  2855               	goto	u47_20
  2155  0054  2856               u47_21:
  2156  0055                     	goto	i1l1064
  2157  0055  285B               u47_20:
  2158  0056                     	line	68
  2159                           	
  2160                           i1l1062:	
  2161  0056                     ;mainT.c: 68:             temp = RCREG;
  2162                           	movf	(26),w	;volatile
  2163  0056  081A               	movwf	(??_ISR+0)+0
  2164  0057  00F1               	movf	(??_ISR+0)+0,w
  2165  0058  0871               	movwf	(_temp)
  2166  0059  00B4               	line	69
  2167                           ;mainT.c: 69:         }else if(current == 5){
  2168                           	goto	i1l1076
  2169  005A  2883               	
  2170                           i1l180:	
  2171  005B                     	
  2172                           i1l1064:	
  2173  005B                     		movlw	5
  2174  005B  3005               	xorwf	((_current)),w
  2175  005C  0679               	btfss	status,2
  2176  005D  1D03               	goto	u48_21
  2177  005E  2860               	goto	u48_20
  2178  005F  2861               u48_21:
  2179  0060                     	goto	i1l1068
  2180  0060  2866               u48_20:
  2181  0061                     	line	70
  2182                           	
  2183                           i1l1066:	
  2184  0061                     ;mainT.c: 70:             luz = RCREG;
  2185                           	movf	(26),w	;volatile
  2186  0061  081A               	movwf	(??_ISR+0)+0
  2187  0062  00F1               	movf	(??_ISR+0)+0,w
  2188  0063  0871               	movwf	(_luz)
  2189  0064  00B3               	line	71
  2190                           ;mainT.c: 71:         }else if(current == 6){
  2191                           	goto	i1l1076
  2192  0065  2883               	
  2193                           i1l182:	
  2194  0066                     	
  2195                           i1l1068:	
  2196  0066                     		movlw	6
  2197  0066  3006               	xorwf	((_current)),w
  2198  0067  0679               	btfss	status,2
  2199  0068  1D03               	goto	u49_21
  2200  0069  286B               	goto	u49_20
  2201  006A  286C               u49_21:
  2202  006B                     	goto	i1l1072
  2203  006B  2871               u49_20:
  2204  006C                     	line	72
  2205                           	
  2206                           i1l1070:	
  2207  006C                     ;mainT.c: 72:             mov = RCREG;
  2208                           	movf	(26),w	;volatile
  2209  006C  081A               	movwf	(??_ISR+0)+0
  2210  006D  00F1               	movf	(??_ISR+0)+0,w
  2211  006E  0871               	movwf	(_mov)
  2212  006F  00B2               	line	73
  2213                           ;mainT.c: 73:         }else if(current == 7){
  2214                           	goto	i1l1076
  2215  0070  2883               	
  2216                           i1l184:	
  2217  0071                     	
  2218                           i1l1072:	
  2219  0071                     		movlw	7
  2220  0071  3007               	xorwf	((_current)),w
  2221  0072  0679               	btfss	status,2
  2222  0073  1D03               	goto	u50_21
  2223  0074  2876               	goto	u50_20
  2224  0075  2877               u50_21:
  2225  0076                     	goto	i1l1076
  2226  0076  2883               u50_20:
  2227  0077                     	line	74
  2228                           	
  2229                           i1l1074:	
  2230  0077                     ;mainT.c: 74:             alarm = RCREG;
  2231                           	movf	(26),w	;volatile
  2232  0077  081A               	movwf	(??_ISR+0)+0
  2233  0078  00F1               	movf	(??_ISR+0)+0,w
  2234  0079  0871               	movwf	(_alarm)
  2235  007A  00B1               	goto	i1l1076
  2236  007B  2883               	line	75
  2237                           ;mainT.c: 75:         }
  2238                           	
  2239                           i1l186:	
  2240  007C                     	goto	i1l1076
  2241  007C  2883               	
  2242                           i1l185:	
  2243  007D                     	goto	i1l1076
  2244  007D  2883               	
  2245                           i1l183:	
  2246  007E                     	goto	i1l1076
  2247  007E  2883               	
  2248                           i1l181:	
  2249  007F                     	goto	i1l1076
  2250  007F  2883               	
  2251                           i1l179:	
  2252  0080                     	goto	i1l1076
  2253  0080  2883               	
  2254                           i1l177:	
  2255  0081                     	goto	i1l1076
  2256  0081  2883               	
  2257                           i1l175:	
  2258  0082                     	goto	i1l1076
  2259  0082  2883               	
  2260                           i1l173:	
  2261  0083                     	line	76
  2262                           	
  2263                           i1l1076:	
  2264  0083                     ;mainT.c: 76:         current++;
  2265                           	movlw	low(01h)
  2266  0083  3001               	movwf	(??_ISR+0)+0
  2267  0084  00F1               	movf	(??_ISR+0)+0,w
  2268  0085  0871               	addwf	(_current),f
  2269  0086  07F9               	line	77
  2270                           	
  2271                           i1l1078:	
  2272  0087                     ;mainT.c: 77:         current = current%8;
  2273                           	movf	(_current),w
  2274  0087  0879               	andlw	07h
  2275  0088  3907               	movwf	(??_ISR+0)+0
  2276  0089  00F1               	movf	(??_ISR+0)+0,w
  2277  008A  0871               	movwf	(_current)
  2278  008B  00F9               	line	78
  2279                           	
  2280                           i1l1080:	
  2281  008C                     ;mainT.c: 78:         bandera = 0;
  2282                           	clrf	(_bandera)
  2283  008C  01B0               	goto	i1l1082
  2284  008D  288E               	line	79
  2285                           ;mainT.c: 79:     }
  2286                           	
  2287                           i1l171:	
  2288  008E                     	line	80
  2289                           	
  2290                           i1l1082:	
  2291  008E                     ;mainT.c: 80:     if(SSPIF == 1){
  2292                           	btfss	(99/8),(99)&7	;volatile
  2293  008E  1D8C               	goto	u51_21
  2294  008F  2891               	goto	u51_20
  2295  0090  2892               u51_21:
  2296  0091                     	goto	i1l203
  2297  0091  2917               u51_20:
  2298  0092                     	line	82
  2299                           	
  2300                           i1l1084:	
  2301  0092                     ;mainT.c: 82:         dataInSPI = spiRead();
  2302                           	fcall	_spiRead
  2303  0092  120A  118A  2240  120A  118A  	movwf	(??_ISR+0)+0
  2304  0097  00F1               	movf	(??_ISR+0)+0,w
  2305  0098  0871               	movwf	(_dataInSPI)
  2306  0099  00F8               	line	83
  2307                           	
  2308                           i1l1086:	
  2309  009A                     ;mainT.c: 83:         if(dataInSPI == 0){
  2310                           	movf	((_dataInSPI)),w
  2311  009A  0878               	btfss	status,2
  2312  009B  1D03               	goto	u52_21
  2313  009C  289E               	goto	u52_20
  2314  009D  289F               u52_21:
  2315  009E                     	goto	i1l1090
  2316  009E  28A6               u52_20:
  2317  009F                     	line	84
  2318                           	
  2319                           i1l1088:	
  2320  009F                     ;mainT.c: 84:             spiWrite(signal);
  2321                           	movf	(_signal),w
  2322  009F  0877               	fcall	_spiWrite
  2323  00A0  120A  118A  225B  120A  118A  	line	85
  2324                           ;mainT.c: 85:         }else if(dataInSPI == 1){
  2325                           	goto	i1l1118
  2326  00A5  2913               	
  2327                           i1l188:	
  2328  00A6                     	
  2329                           i1l1090:	
  2330  00A6                     		decf	((_dataInSPI)),w
  2331  00A6  0378               	btfss	status,2
  2332  00A7  1D03               	goto	u53_21
  2333  00A8  28AA               	goto	u53_20
  2334  00A9  28AB               u53_21:
  2335  00AA                     	goto	i1l1094
  2336  00AA  28B2               u53_20:
  2337  00AB                     	line	86
  2338                           	
  2339                           i1l1092:	
  2340  00AB                     ;mainT.c: 86:             spiWrite(ventilador);
  2341                           	movf	(_ventilador),w
  2342  00AB  0876               	fcall	_spiWrite
  2343  00AC  120A  118A  225B  120A  118A  	line	87
  2344                           ;mainT.c: 87:         }else if(dataInSPI == 2){
  2345                           	goto	i1l1118
  2346  00B1  2913               	
  2347                           i1l190:	
  2348  00B2                     	
  2349                           i1l1094:	
  2350  00B2                     		movlw	2
  2351  00B2  3002               	xorwf	((_dataInSPI)),w
  2352  00B3  0678               	btfss	status,2
  2353  00B4  1D03               	goto	u54_21
  2354  00B5  28B7               	goto	u54_20
  2355  00B6  28B8               u54_21:
  2356  00B7                     	goto	i1l1098
  2357  00B7  28C1               u54_20:
  2358  00B8                     	line	88
  2359                           	
  2360                           i1l1096:	
  2361  00B8                     ;mainT.c: 88:             spiWrite(garage);
  2362                           	bcf	status, 5	;RP0=0, select bank0
  2363  00B8  1283               	bcf	status, 6	;RP1=0, select bank0
  2364  00B9  1303               	movf	(_garage),w
  2365  00BA  0836               	fcall	_spiWrite
  2366  00BB  120A  118A  225B  120A  118A  	line	89
  2367                           ;mainT.c: 89:         }else if(dataInSPI == 3){
  2368                           	goto	i1l1118
  2369  00C0  2913               	
  2370                           i1l192:	
  2371  00C1                     	
  2372                           i1l1098:	
  2373  00C1                     		movlw	3
  2374  00C1  3003               	xorwf	((_dataInSPI)),w
  2375  00C2  0678               	btfss	status,2
  2376  00C3  1D03               	goto	u55_21
  2377  00C4  28C6               	goto	u55_20
  2378  00C5  28C7               u55_21:
  2379  00C6                     	goto	i1l1102
  2380  00C6  28D0               u55_20:
  2381  00C7                     	line	90
  2382                           	
  2383                           i1l1100:	
  2384  00C7                     ;mainT.c: 90:             spiWrite(hall);
  2385                           	bcf	status, 5	;RP0=0, select bank0
  2386  00C7  1283               	bcf	status, 6	;RP1=0, select bank0
  2387  00C8  1303               	movf	(_hall),w
  2388  00C9  0835               	fcall	_spiWrite
  2389  00CA  120A  118A  225B  120A  118A  	line	91
  2390                           ;mainT.c: 91:         }else if(dataInSPI == 4){
  2391                           	goto	i1l1118
  2392  00CF  2913               	
  2393                           i1l194:	
  2394  00D0                     	
  2395                           i1l1102:	
  2396  00D0                     		movlw	4
  2397  00D0  3004               	xorwf	((_dataInSPI)),w
  2398  00D1  0678               	btfss	status,2
  2399  00D2  1D03               	goto	u56_21
  2400  00D3  28D5               	goto	u56_20
  2401  00D4  28D6               u56_21:
  2402  00D5                     	goto	i1l1106
  2403  00D5  28DF               u56_20:
  2404  00D6                     	line	92
  2405                           	
  2406                           i1l1104:	
  2407  00D6                     ;mainT.c: 92:             spiWrite(temp);
  2408                           	bcf	status, 5	;RP0=0, select bank0
  2409  00D6  1283               	bcf	status, 6	;RP1=0, select bank0
  2410  00D7  1303               	movf	(_temp),w
  2411  00D8  0834               	fcall	_spiWrite
  2412  00D9  120A  118A  225B  120A  118A  	line	93
  2413                           ;mainT.c: 93:         }else if(dataInSPI == 5){
  2414                           	goto	i1l1118
  2415  00DE  2913               	
  2416                           i1l196:	
  2417  00DF                     	
  2418                           i1l1106:	
  2419  00DF                     		movlw	5
  2420  00DF  3005               	xorwf	((_dataInSPI)),w
  2421  00E0  0678               	btfss	status,2
  2422  00E1  1D03               	goto	u57_21
  2423  00E2  28E4               	goto	u57_20
  2424  00E3  28E5               u57_21:
  2425  00E4                     	goto	i1l1110
  2426  00E4  28EE               u57_20:
  2427  00E5                     	line	94
  2428                           	
  2429                           i1l1108:	
  2430  00E5                     ;mainT.c: 94:             spiWrite(luz);
  2431                           	bcf	status, 5	;RP0=0, select bank0
  2432  00E5  1283               	bcf	status, 6	;RP1=0, select bank0
  2433  00E6  1303               	movf	(_luz),w
  2434  00E7  0833               	fcall	_spiWrite
  2435  00E8  120A  118A  225B  120A  118A  	line	95
  2436                           ;mainT.c: 95:         }else if(dataInSPI == 6){
  2437                           	goto	i1l1118
  2438  00ED  2913               	
  2439                           i1l198:	
  2440  00EE                     	
  2441                           i1l1110:	
  2442  00EE                     		movlw	6
  2443  00EE  3006               	xorwf	((_dataInSPI)),w
  2444  00EF  0678               	btfss	status,2
  2445  00F0  1D03               	goto	u58_21
  2446  00F1  28F3               	goto	u58_20
  2447  00F2  28F4               u58_21:
  2448  00F3                     	goto	i1l1114
  2449  00F3  28FD               u58_20:
  2450  00F4                     	line	96
  2451                           	
  2452                           i1l1112:	
  2453  00F4                     ;mainT.c: 96:             spiWrite(mov);
  2454                           	bcf	status, 5	;RP0=0, select bank0
  2455  00F4  1283               	bcf	status, 6	;RP1=0, select bank0
  2456  00F5  1303               	movf	(_mov),w
  2457  00F6  0832               	fcall	_spiWrite
  2458  00F7  120A  118A  225B  120A  118A  	line	97
  2459                           ;mainT.c: 97:         }else if(dataInSPI == 7){
  2460                           	goto	i1l1118
  2461  00FC  2913               	
  2462                           i1l200:	
  2463  00FD                     	
  2464                           i1l1114:	
  2465  00FD                     		movlw	7
  2466  00FD  3007               	xorwf	((_dataInSPI)),w
  2467  00FE  0678               	btfss	status,2
  2468  00FF  1D03               	goto	u59_21
  2469  0100  2902               	goto	u59_20
  2470  0101  2903               u59_21:
  2471  0102                     	goto	i1l1118
  2472  0102  2913               u59_20:
  2473  0103                     	line	98
  2474                           	
  2475                           i1l1116:	
  2476  0103                     ;mainT.c: 98:             spiWrite(alarm);
  2477                           	bcf	status, 5	;RP0=0, select bank0
  2478  0103  1283               	bcf	status, 6	;RP1=0, select bank0
  2479  0104  1303               	movf	(_alarm),w
  2480  0105  0831               	fcall	_spiWrite
  2481  0106  120A  118A  225B  120A  118A  	goto	i1l1118
  2482  010B  2913               	line	99
  2483                           ;mainT.c: 99:         }
  2484                           	
  2485                           i1l202:	
  2486  010C                     	goto	i1l1118
  2487  010C  2913               	
  2488                           i1l201:	
  2489  010D                     	goto	i1l1118
  2490  010D  2913               	
  2491                           i1l199:	
  2492  010E                     	goto	i1l1118
  2493  010E  2913               	
  2494                           i1l197:	
  2495  010F                     	goto	i1l1118
  2496  010F  2913               	
  2497                           i1l195:	
  2498  0110                     	goto	i1l1118
  2499  0110  2913               	
  2500                           i1l193:	
  2501  0111                     	goto	i1l1118
  2502  0111  2913               	
  2503                           i1l191:	
  2504  0112                     	goto	i1l1118
  2505  0112  2913               	
  2506                           i1l189:	
  2507  0113                     	line	100
  2508                           	
  2509                           i1l1118:	
  2510  0113                     ;mainT.c: 100:         SSPIF = 0;
  2511                           	bcf	status, 5	;RP0=0, select bank0
  2512  0113  1283               	bcf	status, 6	;RP1=0, select bank0
  2513  0114  1303               	bcf	(99/8),(99)&7	;volatile
  2514  0115  118C               	goto	i1l203
  2515  0116  2917               	line	101
  2516                           ;mainT.c: 101:     }
  2517                           	
  2518                           i1l187:	
  2519  0117                     	line	102
  2520                           	
  2521                           i1l203:	
  2522  0117                     	movf	(??_ISR+2),w
  2523  0117  0873               	movwf	pclath
  2524  0118  008A               	swapf	(??_ISR+1)^0FFFFFF80h,w
  2525  0119  0E72               	movwf	status
  2526  011A  0083               	swapf	saved_w,f
  2527  011B  0EFE               	swapf	saved_w,w
  2528  011C  0E7E               	retfie
  2529  011D  0009               	opt stack 0
  2530                           GLOBAL	__end_of_ISR
  2531                           	__end_of_ISR:
  2532  011E                     	signat	_ISR,89
  2533                           	global	_spiWrite
  2534                           
  2535 ;; *************** function _spiWrite *****************
  2536 ;; Defined at:
  2537 ;;		line 34 in file "SPI.c"
  2538 ;; Parameters:    Size  Location     Type
  2539 ;;  dat             1    wreg     unsigned char 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  dat             1    0[COMMON] unsigned char 
  2542 ;; Return value:  Size  Location     Type
  2543 ;;                  1    wreg      void 
  2544 ;; Registers used:
  2545 ;;		wreg
  2546 ;; Tracked objects:
  2547 ;;		On entry : 0/0
  2548 ;;		On exit  : 0/0
  2549 ;;		Unchanged: 0/0
  2550 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2551 ;;      Params:         0       0       0       0       0
  2552 ;;      Locals:         1       0       0       0       0
  2553 ;;      Temps:          0       0       0       0       0
  2554 ;;      Totals:         1       0       0       0       0
  2555 ;;Total ram usage:        1 bytes
  2556 ;; Hardware stack levels used:    1
  2557 ;; This function calls:
  2558 ;;		Nothing
  2559 ;; This function is called by:
  2560 ;;		_ISR
  2561 ;; This function uses a non-reentrant model
  2562 ;;
  2563                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  2564                           	file	"SPI.c"
  2565                           	line	34
  2566                           global __ptext6
  2567                           __ptext6:	;psect for function _spiWrite
  2568  025B                     psect	text6
  2569                           	file	"SPI.c"
  2570                           	line	34
  2571                           	global	__size_of_spiWrite
  2572                           	__size_of_spiWrite	equ	__end_of_spiWrite-_spiWrite
  2573  0006                     	
  2574                           _spiWrite:	
  2575  025B                     ;incstack = 0
  2576                           	opt	stack 4
  2577                           ; Regs used in _spiWrite: [wreg]
  2578                           ;spiWrite@dat stored from wreg
  2579                           	movwf	(spiWrite@dat)
  2580  025B  00F0               	line	36
  2581                           	
  2582                           i1l974:	
  2583  025C                     ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  2584                           	movf	(spiWrite@dat),w
  2585  025C  0870               	bcf	status, 5	;RP0=0, select bank0
  2586  025D  1283               	bcf	status, 6	;RP1=0, select bank0
  2587  025E  1303               	movwf	(19)	;volatile
  2588  025F  0093               	line	37
  2589                           	
  2590                           i1l26:	
  2591  0260                     	return
  2592  0260  0008               	opt stack 0
  2593                           GLOBAL	__end_of_spiWrite
  2594                           	__end_of_spiWrite:
  2595  0261                     	signat	_spiWrite,4217
  2596                           	global	_spiRead
  2597                           
  2598 ;; *************** function _spiRead *****************
  2599 ;; Defined at:
  2600 ;;		line 47 in file "SPI.c"
  2601 ;; Parameters:    Size  Location     Type
  2602 ;;		None
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;		None
  2605 ;; Return value:  Size  Location     Type
  2606 ;;                  1    wreg      unsigned char 
  2607 ;; Registers used:
  2608 ;;		wreg, status,2, status,0, pclath, cstack
  2609 ;; Tracked objects:
  2610 ;;		On entry : 0/0
  2611 ;;		On exit  : 0/0
  2612 ;;		Unchanged: 0/0
  2613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2614 ;;      Params:         0       0       0       0       0
  2615 ;;      Locals:         0       0       0       0       0
  2616 ;;      Temps:          0       0       0       0       0
  2617 ;;      Totals:         0       0       0       0       0
  2618 ;;Total ram usage:        0 bytes
  2619 ;; Hardware stack levels used:    1
  2620 ;; Hardware stack levels required when called:    1
  2621 ;; This function calls:
  2622 ;;		_spiReceiveWait
  2623 ;; This function is called by:
  2624 ;;		_ISR
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2628                           	line	47
  2629                           global __ptext7
  2630                           __ptext7:	;psect for function _spiRead
  2631  0240                     psect	text7
  2632                           	file	"SPI.c"
  2633                           	line	47
  2634                           	global	__size_of_spiRead
  2635                           	__size_of_spiRead	equ	__end_of_spiRead-_spiRead
  2636  000A                     	
  2637                           _spiRead:	
  2638  0240                     ;incstack = 0
  2639                           	opt	stack 3
  2640                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  2641                           	line	49
  2642                           	
  2643                           i1l976:	
  2644  0240                     ;SPI.c: 49:     spiReceiveWait();
  2645                           	fcall	_spiReceiveWait
  2646  0240  120A  118A  224A  120A  118A  	line	50
  2647                           	
  2648                           i1l978:	
  2649  0245                     ;SPI.c: 50:     return(SSPBUF);
  2650                           	bcf	status, 5	;RP0=0, select bank0
  2651  0245  1283               	bcf	status, 6	;RP1=0, select bank0
  2652  0246  1303               	movf	(19),w	;volatile
  2653  0247  0813               	goto	i1l34
  2654  0248  2A49               	
  2655                           i1l980:	
  2656  0249                     	line	51
  2657                           	
  2658                           i1l34:	
  2659  0249                     	return
  2660  0249  0008               	opt stack 0
  2661                           GLOBAL	__end_of_spiRead
  2662                           	__end_of_spiRead:
  2663  024A                     	signat	_spiRead,89
  2664                           	global	_spiReceiveWait
  2665                           
  2666 ;; *************** function _spiReceiveWait *****************
  2667 ;; Defined at:
  2668 ;;		line 29 in file "SPI.c"
  2669 ;; Parameters:    Size  Location     Type
  2670 ;;		None
  2671 ;; Auto vars:     Size  Location     Type
  2672 ;;		None
  2673 ;; Return value:  Size  Location     Type
  2674 ;;                  1    wreg      void 
  2675 ;; Registers used:
  2676 ;;		None
  2677 ;; Tracked objects:
  2678 ;;		On entry : 0/0
  2679 ;;		On exit  : 0/0
  2680 ;;		Unchanged: 0/0
  2681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2682 ;;      Params:         0       0       0       0       0
  2683 ;;      Locals:         0       0       0       0       0
  2684 ;;      Temps:          0       0       0       0       0
  2685 ;;      Totals:         0       0       0       0       0
  2686 ;;Total ram usage:        0 bytes
  2687 ;; Hardware stack levels used:    1
  2688 ;; This function calls:
  2689 ;;		Nothing
  2690 ;; This function is called by:
  2691 ;;		_spiRead
  2692 ;; This function uses a non-reentrant model
  2693 ;;
  2694                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2695                           	line	29
  2696                           global __ptext8
  2697                           __ptext8:	;psect for function _spiReceiveWait
  2698  024A                     psect	text8
  2699                           	file	"SPI.c"
  2700                           	line	29
  2701                           	global	__size_of_spiReceiveWait
  2702                           	__size_of_spiReceiveWait	equ	__end_of_spiReceiveWait-_spiReceiveWait
  2703  0009                     	
  2704                           _spiReceiveWait:	
  2705  024A                     ;incstack = 0
  2706                           	opt	stack 3
  2707                           ; Regs used in _spiReceiveWait: []
  2708                           	line	31
  2709                           	
  2710                           i1l972:	
  2711  024A                     ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  2712                           	goto	i1l20
  2713  024A  2A4B               	
  2714                           i1l21:	
  2715  024B                     	
  2716                           i1l20:	
  2717  024B                     	bsf	status, 5	;RP0=1, select bank1
  2718  024B  1683               	bcf	status, 6	;RP1=0, select bank1
  2719  024C  1303               	btfss	(148)^080h,0	;volatile
  2720  024D  1C14               	goto	u32_21
  2721  024E  2A50               	goto	u32_20
  2722  024F  2A51               u32_21:
  2723  0250                     	goto	i1l20
  2724  0250  2A4B               u32_20:
  2725  0251                     	goto	i1l23
  2726  0251  2A52               	
  2727                           i1l22:	
  2728  0252                     	line	32
  2729                           	
  2730                           i1l23:	
  2731  0252                     	return
  2732  0252  0008               	opt stack 0
  2733                           GLOBAL	__end_of_spiReceiveWait
  2734                           	__end_of_spiReceiveWait:
  2735  0253                     	signat	_spiReceiveWait,89
  2736                           global	___latbits
  2737                           ___latbits	equ	2
  2738  0002                     	global	btemp
  2739                           	btemp set 07Eh
  2740  007E                     
  2741                           	DABS	1,126,2	;btemp
  2742                           	global	wtemp0
  2743                           	wtemp0 set btemp+0
  2744  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      7      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_sendUSART
    _setup->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_initUSART
    _main->_setup
    _setup->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1117
                                              5 BANK0      2     2      0
                          _initUSART
                          _sendUSART
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                2     2      0     456
                                              3 BANK0      2     2      0
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     1     1      0
                                              0 BANK0      3     0      3
 ---------------------------------------------------------------------------------
 (1) _sendUSART                                            2     2      0      22
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            5     0      5     639
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0      22
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUSART
   _sendUSART
   _setup
     _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7      24       5       45.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Mar 11 11:31:05 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l15 021D  
                      l16 0225                        l17 022A                        l60 0143  
                      l61 015B                        l62 01A9                        l70 01A5  
                      l71 01A4                        l63 016A                        l72 01AB  
                      l64 01A8                        l65 0179                        l66 01A7  
                      l67 0188                        l59 013B                        l75 022D  
                      l68 01A6                        l76 022D                        l69 0197  
                      l77 0234                        l78 023F                        fsr 0004  
                     l210 01DF                       l211 01E0                       l212 01E0  
                     l215 020C                       l208 01C2                       l209 01D4  
                     u410 0233                       u411 0232                       u610 0215  
            __CFG_CPD$OFF 0000                       u611 0214                       u620 0133  
                     u700 01C9                       _ISR 0020                       u621 0132  
                     u701 01C8                       u630 0140                       u631 013F  
                     u640 0154                       u641 0153                       u650 0165  
                     u651 0164                       u660 0174                       u661 0173  
                     u717 01DA                       u670 0183                       u671 0182  
                     u727 023A                       u680 0192                       u681 0191  
                     u690 019F                       u691 019E                       _mov 0032  
                     _luz 0033                       indf 0000              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      l1022 022C                      l1024 0234  
                    l1200 01C9                      l1130 020E                      l1202 01CF  
                    l1140 011E                      l1132 0215                      l1204 01D4  
                    l1150 0140                      l1142 0125                      l1134 021B  
                    l1160 016A                      l1152 0149                      l1144 012C  
                    l1136 021D                      l1170 0192                      l1162 0174  
                    l1154 0154                      l1146 0133                      l1138 0224  
                    l1172 0197                      l1164 0179                      l1156 015B  
                    l1148 013B                      l1180 01E3                      l1174 019F  
                    l1166 0183                      l1158 0165                      l1190 01F5  
                    l1182 01EF                      l1168 0188                      l1176 01A9  
                    l1192 01F8                      l1184 01F0                      l1178 01AA  
                    l1194 01FB                      l1186 01F3                      l1188 01F4  
                    l1196 01AC                      l1198 01C2                      i1l20 024B  
                    i1l21 024B                      i1l22 0252                      i1l23 0252  
                    i1l34 0249                      i1l26 0260              __CFG_WRT$OFF 0000  
                    _dec1 0038                      _dec2 0037                      _hall 0035  
                    _main 01AC                      _temp 0034                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0071  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     i1l200 00FD  
                   i1l201 010D                     i1l202 010C                     i1l203 0117  
                   i1l171 008E                     i1l180 005B                     i1l172 0030  
                   i1l173 0083                     i1l181 007F                     i1l190 00B2  
                   i1l182 0066                     i1l174 003A                     i1l191 0112  
                   i1l175 0082                     i1l183 007E                     i1l192 00C1  
                   i1l184 0071                     i1l176 0045                     i1l193 0111  
                   i1l177 0081                     i1l185 007D                     i1l194 00D0  
                   i1l186 007C                     i1l178 0050                     i1l187 0117  
                   i1l195 0110                     i1l179 0080                     i1l196 00DF  
                   i1l188 00A6                     i1l189 0113                     i1l197 010F  
                   i1l198 00EE                     i1l199 010E                     i1l972 024A  
                   i1l980 0249                     i1l974 025C                     i1l976 0240  
                   i1l978 0245                     _RCREG 001A                     u32_20 0251  
                   u32_21 0250                     u50_20 0077                     u42_20 0026  
                   u50_21 0076                     u42_21 0025                     _SPBRG 0099  
                   u51_20 0092                     u43_20 002B                     u51_21 0091  
                   u43_21 002A                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _PORTE 0009  
                   u52_20 009F                     u44_20 0035                     u52_21 009E  
                   u44_21 0034                     u53_20 00AB                     u45_20 0040  
                   u53_21 00AA                     u45_21 003F                     u54_20 00B8  
                   u46_20 004B                     u54_21 00B7                     u46_21 004A  
                   u55_20 00C7                     u47_20 0056                     u55_21 00C6  
                   u47_21 0055                     u56_20 00D6                     u48_20 0061  
                   u56_21 00D5                     u48_21 0060                     u57_20 00E5  
                   u49_20 006C                     u57_21 00E4                     u49_21 006B  
                   _TRISA 0085                     _TRISB 0086                     _TRISC 0087  
                   _TRISD 0088                     _TRISE 0089                     u58_20 00F4  
                   _SSPIF 0063                     u58_21 00F3                     u59_20 0103  
                   u59_21 0102                     _TXREG 0019            __CFG_FCMEN$OFF 0000  
       initUSART@baudrate 003D                     _alarm 0031                     _setup 01E3  
          __CFG_BOREN$OFF 0000                     pclath 000A           __end_of_spiInit 022B  
         __end_of_spiRead 024A                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 01E3  
          initUSART@rcint 0040            initUSART@txint 003F                    ??_main 0042  
       initUSART@syncrono 0041                    ?_setup 0070                    i1l1100 00C7  
                  i1l1110 00EE                    i1l1102 00D0                    i1l1112 00F4  
                  i1l1104 00D6                    i1l1114 00FD                    i1l1106 00DF  
                  i1l1050 0035                    i1l1042 0020                    i1l1116 0103  
                  i1l1108 00E5                    i1l1060 0050                    i1l1052 003A  
                  i1l1044 0026                    i1l1118 0113                    i1l1070 006C  
                  i1l1062 0056                    i1l1054 0040                    i1l1046 002B  
                  i1l1080 008C                    i1l1072 0071                    i1l1064 005B  
                  i1l1056 0045                    i1l1048 0030                    i1l1090 00A6  
                  i1l1074 0077                    i1l1066 0061                    i1l1058 004B  
                  i1l1082 008E                    i1l1092 00AB                    i1l1084 0092  
                  i1l1068 0066                    i1l1076 0083                    i1l1094 00B2  
                  i1l1086 009A                    i1l1078 0087                    i1l1096 00B8  
                  i1l1088 009F                    i1l1098 00C1                    _SPBRGH 009A  
                  _TRISC3 043B                    _TRISC5 043D                    _SSPCON 0014  
                  _SSPBUF 0013            __CFG_PWRTE$OFF 0000                    _garage 0036  
                  _float1 002C                    _float2 0028             sendUSART@data 0075  
                  _signal 0077                    saved_w 007E          __end_of_spiWrite 0261  
               ??_spiInit 0074                 ??_spiRead 0070   __end_of__initialization 001C  
          __pcstackCOMMON 0070             __end_of_setup 020D                   ??_setup 0040  
              __pbssBANK0 0020        __size_of_initUSART 008E                __pmaintext 01AC  
      __size_of_sendUSART 0015                __pintentry 0004   __size_of_spiReceiveWait 0009  
                 _SSPSTAT 0094                 ?_spiWrite 0070                   _bandera 0030  
       __end_of_initUSART 01AC                   __ptext1 01E3                   __ptext2 020D  
                 __ptext3 022B                   __ptext4 011E                   __ptext5 0020  
                 __ptext6 025B                   __ptext7 0240                   __ptext8 024A  
            __size_of_ISR 00FE                   _entero1 003A                   _entero2 0039  
                 _current 0079                   _spiInit 020D                   _spiRead 0240  
                 _sensor1 003C                   _sensor2 003B         __end_of_sendUSART 0240  
                 clrloop0 0254      end_of_initialization 001C                 _RCSTAbits 0018  
              ??_spiWrite 0070                 _TRISCbits 0087                _ventilador 0076  
             spiWrite@dat 0070                 _TXSTAbits 0098            _spiReceiveWait 024A  
             _BAUDCTLbits 0187       start_initialization 000F               __end_of_ISR 011E  
__CFG_FOSC$INTRC_NOCLKOUT 0000    __end_of_spiReceiveWait 0253               __pbssCOMMON 0076  
               ___latbits 0002             __pcstackBANK0 003D                 _dataInSPI 0078  
         ?_spiReceiveWait 0070         __size_of_spiWrite 0006                 _initUSART 011E  
                ?_spiInit 003D                  ?_spiRead 0070            __size_of_setup 002A  
    spiInit@sTransmitEdge 003F                 _sendUSART 022B         interrupt_function 0004  
               clear_ram0 0253                  _PIE1bits 008C        spiInit@sDataSample 003D  
                _PIR1bits 000C                ?_initUSART 003D                ?_sendUSART 0070  
        __size_of_spiInit 001E          __size_of_spiRead 000A         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0037                  _sensorF1 0024                  _sensorF2 0020  
                _spiWrite 025B              spiInit@sType 0074         spiInit@sClockIdle 003E  
              _INTCONbits 000B               ??_initUSART 0074                  intlevel1 0000  
             ??_sendUSART 0074          ??_spiReceiveWait 0070  
