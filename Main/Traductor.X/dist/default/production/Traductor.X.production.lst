

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Mar 09 16:41:11 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_initUSART
   712                           	FNCALL	_main,_sendUSART
   713                           	FNCALL	_main,_setup
   714                           	FNCALL	_setup,_spiInit
   715                           	FNROOT	_main
   716                           	FNCALL	intlevel1,_ISR
   717                           	global	intlevel1
   718                           	FNROOT	intlevel1
   719                           	global	_bandera
   720                           	global	_current
   721                           	global	_alarm
   722                           	global	_mov
   723                           	global	_luz
   724                           	global	_temp
   725                           	global	_hall
   726                           	global	_garage
   727                           	global	_ventilador
   728                           	global	_signal
   729                           	global	_PORTCbits
   730                           _PORTCbits	set	0x7
   731  0007                     	global	_PORTD
   732                           _PORTD	set	0x8
   733  0008                     	global	_PORTB
   734                           _PORTB	set	0x6
   735  0006                     	global	_RCREG
   736                           _RCREG	set	0x1A
   737  001A                     	global	_TXREG
   738                           _TXREG	set	0x19
   739  0019                     	global	_INTCONbits
   740                           _INTCONbits	set	0xB
   741  000B                     	global	_PIR1bits
   742                           _PIR1bits	set	0xC
   743  000C                     	global	_RCSTAbits
   744                           _RCSTAbits	set	0x18
   745  0018                     	global	_SSPBUF
   746                           _SSPBUF	set	0x13
   747  0013                     	global	_SSPCON
   748                           _SSPCON	set	0x14
   749  0014                     	global	_TRISD
   750                           _TRISD	set	0x88
   751  0088                     	global	_TRISB
   752                           _TRISB	set	0x86
   753  0086                     	global	_TRISA
   754                           _TRISA	set	0x85
   755  0085                     	global	_SPBRGH
   756                           _SPBRGH	set	0x9A
   757  009A                     	global	_SPBRG
   758                           _SPBRG	set	0x99
   759  0099                     	global	_TXSTAbits
   760                           _TXSTAbits	set	0x98
   761  0098                     	global	_PIE1bits
   762                           _PIE1bits	set	0x8C
   763  008C                     	global	_TRISCbits
   764                           _TRISCbits	set	0x87
   765  0087                     	global	_SSPSTATbits
   766                           _SSPSTATbits	set	0x94
   767  0094                     	global	_SSPSTAT
   768                           _SSPSTAT	set	0x94
   769  0094                     	global	_TRISC2
   770                           _TRISC2	set	0x43A
   771  043A                     	global	_TRISC3
   772                           _TRISC3	set	0x43B
   773  043B                     	global	_TRISC5
   774                           _TRISC5	set	0x43D
   775  043D                     	global	_ANSELH
   776                           _ANSELH	set	0x189
   777  0189                     	global	_ANSEL
   778                           _ANSEL	set	0x188
   779  0188                     	global	_BAUDCTLbits
   780                           _BAUDCTLbits	set	0x187
   781  0187                     ; #config settings
   782                           global __CFG_FOSC$INTRC_NOCLKOUT
   783                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   784  0000                     global __CFG_WDTE$OFF
   785                           __CFG_WDTE$OFF equ 0x0
   786  0000                     global __CFG_PWRTE$OFF
   787                           __CFG_PWRTE$OFF equ 0x0
   788  0000                     global __CFG_MCLRE$OFF
   789                           __CFG_MCLRE$OFF equ 0x0
   790  0000                     global __CFG_CP$OFF
   791                           __CFG_CP$OFF equ 0x0
   792  0000                     global __CFG_CPD$OFF
   793                           __CFG_CPD$OFF equ 0x0
   794  0000                     global __CFG_BOREN$OFF
   795                           __CFG_BOREN$OFF equ 0x0
   796  0000                     global __CFG_IESO$OFF
   797                           __CFG_IESO$OFF equ 0x0
   798  0000                     global __CFG_FCMEN$OFF
   799                           __CFG_FCMEN$OFF equ 0x0
   800  0000                     global __CFG_LVP$OFF
   801                           __CFG_LVP$OFF equ 0x0
   802  0000                     global __CFG_BOR4V$BOR40V
   803                           __CFG_BOR4V$BOR40V equ 0x0
   804  0000                     global __CFG_WRT$OFF
   805                           __CFG_WRT$OFF equ 0x0
   806  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\semo."
   807                           	line	#
   808                           psect cinit,class=CODE,delta=2
   809                           global start_initialization
   810                           start_initialization:
   811  000F                     
   812                           global __initialization
   813                           __initialization:
   814  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
   815                           global __pbssCOMMON
   816                           __pbssCOMMON:
   817  0077                     _bandera:
   818  0077                            ds      1
   819  0077                     
   820                           _current:
   821  0078                            ds      1
   822  0078                     
   823                           _sensor2:
   824  0079                            ds      1
   825  0079                     
   826                           _sensor1:
   827  007A                            ds      1
   828  007A                     
   829                           psect	bssBANK0,class=BANK0,space=1,noexec
   830                           global __pbssBANK0
   831                           __pbssBANK0:
   832  0020                     _sensorF2:
   833  0020                            ds      4
   834  0020                     
   835                           _sensorF1:
   836  0024                            ds      4
   837  0024                     
   838                           _float2:
   839  0028                            ds      4
   840  0028                     
   841                           _float1:
   842  002C                            ds      4
   843  002C                     
   844                           _alarm:
   845  0030                            ds      1
   846  0030                     
   847                           _mov:
   848  0031                            ds      1
   849  0031                     
   850                           _luz:
   851  0032                            ds      1
   852  0032                     
   853                           _temp:
   854  0033                            ds      1
   855  0033                     
   856                           _hall:
   857  0034                            ds      1
   858  0034                     
   859                           _garage:
   860  0035                            ds      1
   861  0035                     
   862                           _ventilador:
   863  0036                            ds      1
   864  0036                     
   865                           _signal:
   866  0037                            ds      1
   867  0037                     
   868                           _dec2:
   869  0038                            ds      1
   870  0038                     
   871                           _dec1:
   872  0039                            ds      1
   873  0039                     
   874                           _entero2:
   875  003A                            ds      1
   876  003A                     
   877                           _entero1:
   878  003B                            ds      1
   879  003B                     
   880                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\semo."
   881                           	line	#
   882                           psect clrtext,class=CODE,delta=2
   883                           global clear_ram0
   884                           ;	Called with FSR containing the base address, and
   885                           ;	W with the last address+1
   886                           clear_ram0:
   887  019D                     	clrwdt			;clear the watchdog before getting into this loop
   888  019D  0064               clrloop0:
   889  019E                     	clrf	indf		;clear RAM location pointed to by FSR
   890  019E  0180               	incf	fsr,f		;increment pointer
   891  019F  0A84               	xorwf	fsr,w		;XOR with final address
   892  01A0  0604               	btfsc	status,2	;have we reached the end yet?
   893  01A1  1903               	retlw	0		;all done for this memory range, return
   894  01A2  3400               	xorwf	fsr,w		;XOR again to restore value
   895  01A3  0604               	goto	clrloop0		;do the next byte
   896  01A4  299E               
   897                           ; Clear objects allocated to COMMON
   898                           psect cinit,class=CODE,delta=2,merge=1
   899                           	clrf	((__pbssCOMMON)+0)&07Fh
   900  000F  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   901  0010  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   902  0011  01F9               	clrf	((__pbssCOMMON)+3)&07Fh
   903  0012  01FA               ; Clear objects allocated to BANK0
   904                           psect cinit,class=CODE,delta=2,merge=1
   905                           	bcf	status, 7	;select IRP bank0
   906  0013  1383               	movlw	low(__pbssBANK0)
   907  0014  3020               	movwf	fsr
   908  0015  0084               	movlw	low((__pbssBANK0)+01Ch)
   909  0016  303C               	fcall	clear_ram0
   910  0017  120A  118A  219D  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   911                           global end_of_initialization,__end_of__initialization
   912                           
   913                           ;End of C runtime variable initialization code
   914                           
   915                           end_of_initialization:
   916  001C                     __end_of__initialization:
   917  001C                     clrf status
   918  001C  0183               ljmp _main	;jump to C main() function
   919  001D  120A  118A  2923   psect	cstackCOMMON,class=COMMON,space=1,noexec
   920                           global __pcstackCOMMON
   921                           __pcstackCOMMON:
   922  0070                     ?_setup:	; 1 bytes @ 0x0
   923  0070                     ?_sendUSART:	; 1 bytes @ 0x0
   924  0070                     ?_ISR:	; 1 bytes @ 0x0
   925  0070                     ??_ISR:	; 1 bytes @ 0x0
   926  0070                     ?_main:	; 1 bytes @ 0x0
   927  0070                     	ds	3
   928  0070                     ?_spiInit:	; 1 bytes @ 0x3
   929  0073                     ??_initUSART:	; 1 bytes @ 0x3
   930  0073                     ??_sendUSART:	; 1 bytes @ 0x3
   931  0073                     	global	spiInit@sDataSample
   932                           spiInit@sDataSample:	; 1 bytes @ 0x3
   933  0073                     	ds	1
   934  0073                     	global	spiInit@sClockIdle
   935                           spiInit@sClockIdle:	; 1 bytes @ 0x4
   936  0074                     	global	sendUSART@data
   937                           sendUSART@data:	; 1 bytes @ 0x4
   938  0074                     	ds	1
   939  0074                     	global	spiInit@sTransmitEdge
   940                           spiInit@sTransmitEdge:	; 1 bytes @ 0x5
   941  0075                     	ds	1
   942  0075                     ??_spiInit:	; 1 bytes @ 0x6
   943  0076                     	global	spiInit@sType
   944                           spiInit@sType:	; 1 bytes @ 0x6
   945  0076                     	ds	1
   946  0076                     ??_setup:	; 1 bytes @ 0x7
   947  0077                     psect	cstackBANK0,class=BANK0,space=1,noexec
   948                           global __pcstackBANK0
   949                           __pcstackBANK0:
   950  003C                     ?_initUSART:	; 1 bytes @ 0x0
   951  003C                     	global	initUSART@baudrate
   952                           initUSART@baudrate:	; 2 bytes @ 0x0
   953  003C                     	ds	2
   954  003C                     	global	initUSART@txint
   955                           initUSART@txint:	; 1 bytes @ 0x2
   956  003E                     	ds	1
   957  003E                     	global	initUSART@rcint
   958                           initUSART@rcint:	; 1 bytes @ 0x3
   959  003F                     	ds	1
   960  003F                     	global	initUSART@syncrono
   961                           initUSART@syncrono:	; 1 bytes @ 0x4
   962  0040                     	ds	1
   963  0040                     ??_main:	; 1 bytes @ 0x5
   964  0041                     	ds	2
   965  0041                     ;!
   966                           ;!Data Sizes:
   967                           ;!    Strings     0
   968                           ;!    Constant    0
   969                           ;!    Data        0
   970                           ;!    BSS         32
   971                           ;!    Persistent  0
   972                           ;!    Stack       0
   973                           ;!
   974                           ;!Auto Spaces:
   975                           ;!    Space          Size  Autos    Used
   976                           ;!    COMMON           14      7      11
   977                           ;!    BANK0            80      7      35
   978                           ;!    BANK1            80      0       0
   979                           ;!    BANK3            96      0       0
   980                           ;!    BANK2            96      0       0
   981                           
   982                           ;!
   983                           ;!Pointer List with Targets:
   984                           ;!
   985                           ;!    None.
   986                           
   987                           
   988                           ;!
   989                           ;!Critical Paths under _main in COMMON
   990                           ;!
   991                           ;!    _setup->_spiInit
   992                           ;!
   993                           ;!Critical Paths under _ISR in COMMON
   994                           ;!
   995                           ;!    None.
   996                           ;!
   997                           ;!Critical Paths under _main in BANK0
   998                           ;!
   999                           ;!    _main->_initUSART
  1000                           ;!
  1001                           ;!Critical Paths under _ISR in BANK0
  1002                           ;!
  1003                           ;!    None.
  1004                           ;!
  1005                           ;!Critical Paths under _main in BANK1
  1006                           ;!
  1007                           ;!    None.
  1008                           ;!
  1009                           ;!Critical Paths under _ISR in BANK1
  1010                           ;!
  1011                           ;!    None.
  1012                           ;!
  1013                           ;!Critical Paths under _main in BANK3
  1014                           ;!
  1015                           ;!    None.
  1016                           ;!
  1017                           ;!Critical Paths under _ISR in BANK3
  1018                           ;!
  1019                           ;!    None.
  1020                           ;!
  1021                           ;!Critical Paths under _main in BANK2
  1022                           ;!
  1023                           ;!    None.
  1024                           ;!
  1025                           ;!Critical Paths under _ISR in BANK2
  1026                           ;!
  1027                           ;!    None.
  1028                           
  1029 ;;
  1030 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1031 ;;
  1032                           
  1033                           ;!
  1034                           ;!Call Graph Tables:
  1035                           ;!
  1036                           ;! ---------------------------------------------------------------------------------
  1037                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1038                           ;! ---------------------------------------------------------------------------------
  1039                           ;! (0) _main                                                 2     2      0    1014
  1040                           ;!                                              5 BANK0      2     2      0
  1041                           ;!                          _initUSART
  1042                           ;!                          _sendUSART
  1043                           ;!                              _setup
  1044                           ;! ---------------------------------------------------------------------------------
  1045                           ;! (1) _setup                                                0     0      0     360
  1046                           ;!                            _spiInit
  1047                           ;! ---------------------------------------------------------------------------------
  1048                           ;! (2) _spiInit                                              4     1      3     360
  1049                           ;!                                              3 COMMON     4     1      3
  1050                           ;! ---------------------------------------------------------------------------------
  1051                           ;! (1) _sendUSART                                            2     2      0      15
  1052                           ;!                                              3 COMMON     2     2      0
  1053                           ;! ---------------------------------------------------------------------------------
  1054                           ;! (1) _initUSART                                            5     0      5     639
  1055                           ;!                                              0 BANK0      5     0      5
  1056                           ;! ---------------------------------------------------------------------------------
  1057                           ;! Estimated maximum stack depth 2
  1058                           ;! ---------------------------------------------------------------------------------
  1059                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1060                           ;! ---------------------------------------------------------------------------------
  1061                           ;! (3) _ISR                                                  3     3      0       0
  1062                           ;!                                              0 COMMON     3     3      0
  1063                           ;! ---------------------------------------------------------------------------------
  1064                           ;! Estimated maximum stack depth 3
  1065                           ;! ---------------------------------------------------------------------------------
  1066                           ;!
  1067                           ;! Call Graph Graphs:
  1068                           ;!
  1069                           ;! _main (ROOT)
  1070                           ;!   _initUSART
  1071                           ;!   _sendUSART
  1072                           ;!   _setup
  1073                           ;!     _spiInit
  1074                           ;!
  1075                           ;! _ISR (ROOT)
  1076                           ;!
  1077                           
  1078                           ;! Address spaces:
  1079                           
  1080                           ;!Name               Size   Autos  Total    Cost      Usage
  1081                           ;!BITCOMMON            E      0       0       0        0.0%
  1082                           ;!EEDATA             100      0       0       0        0.0%
  1083                           ;!NULL                 0      0       0       0        0.0%
  1084                           ;!CODE                 0      0       0       0        0.0%
  1085                           ;!COMMON               E      7       B       1       78.6%
  1086                           ;!BITSFR0              0      0       0       1        0.0%
  1087                           ;!SFR0                 0      0       0       1        0.0%
  1088                           ;!BITSFR1              0      0       0       2        0.0%
  1089                           ;!SFR1                 0      0       0       2        0.0%
  1090                           ;!STACK                0      0       0       2        0.0%
  1091                           ;!ABS                  0      0      2E       3        0.0%
  1092                           ;!BITBANK0            50      0       0       4        0.0%
  1093                           ;!BITSFR3              0      0       0       4        0.0%
  1094                           ;!SFR3                 0      0       0       4        0.0%
  1095                           ;!BANK0               50      7      23       5       43.8%
  1096                           ;!BITSFR2              0      0       0       5        0.0%
  1097                           ;!SFR2                 0      0       0       5        0.0%
  1098                           ;!BITBANK1            50      0       0       6        0.0%
  1099                           ;!BANK1               50      0       0       7        0.0%
  1100                           ;!BITBANK3            60      0       0       8        0.0%
  1101                           ;!BANK3               60      0       0       9        0.0%
  1102                           ;!BITBANK2            60      0       0      10        0.0%
  1103                           ;!BANK2               60      0       0      11        0.0%
  1104                           ;!DATA                 0      0      2E      12        0.0%
  1105                           
  1106                           	global	_main
  1107                           
  1108 ;; *************** function _main *****************
  1109 ;; Defined at:
  1110 ;;		line 85 in file "mainT.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;		None
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;		None
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      void 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, pclath, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : B00/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1124 ;;      Params:         0       0       0       0       0
  1125 ;;      Locals:         0       0       0       0       0
  1126 ;;      Temps:          0       2       0       0       0
  1127 ;;      Totals:         0       2       0       0       0
  1128 ;;Total ram usage:        2 bytes
  1129 ;; Hardware stack levels required when called:    3
  1130 ;; This function calls:
  1131 ;;		_initUSART
  1132 ;;		_sendUSART
  1133 ;;		_setup
  1134 ;; This function is called by:
  1135 ;;		Startup code after reset
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1139                           	file	"mainT.c"
  1140                           	line	85
  1141                           global __pmaintext
  1142                           __pmaintext:	;psect for function _main
  1143  0123                     psect	maintext
  1144                           	file	"mainT.c"
  1145                           	line	85
  1146                           	global	__size_of_main
  1147                           	__size_of_main	equ	__end_of_main-_main
  1148  0033                     	
  1149                           _main:	
  1150  0123                     ;incstack = 0
  1151                           	opt	stack 5
  1152                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1153                           	line	86
  1154                           	
  1155                           l1062:	
  1156  0123                     ;mainT.c: 86:     setup();
  1157                           	fcall	_setup
  1158  0123  120A  118A  2156  120A  118A  	line	87
  1159                           ;mainT.c: 87:     initUSART(9600, 1, 1, 0);
  1160                           	movlw	080h
  1161  0128  3080               	bcf	status, 5	;RP0=0, select bank0
  1162  0129  1283               	bcf	status, 6	;RP1=0, select bank0
  1163  012A  1303               	movwf	(initUSART@baudrate)
  1164  012B  00BC               	movlw	025h
  1165  012C  3025               	movwf	((initUSART@baudrate))+1
  1166  012D  00BD               	clrf	(initUSART@txint)
  1167  012E  01BE               	incf	(initUSART@txint),f
  1168  012F  0ABE               	clrf	(initUSART@rcint)
  1169  0130  01BF               	incf	(initUSART@rcint),f
  1170  0131  0ABF               	clrf	(initUSART@syncrono)
  1171  0132  01C0               	fcall	_initUSART
  1172  0133  120A  118A  2020  120A  118A  	goto	l1064
  1173  0138  2939               	line	91
  1174                           ;mainT.c: 91:     while(1){
  1175                           	
  1176                           l178:	
  1177  0139                     	line	93
  1178                           	
  1179                           l1064:	
  1180  0139                     ;mainT.c: 93:         if(bandera == 0){
  1181                           	movf	((_bandera)),w
  1182  0139  0877               	btfss	status,2
  1183  013A  1D03               	goto	u491
  1184  013B  293D               	goto	u490
  1185  013C  293E               u491:
  1186  013D                     	goto	l1070
  1187  013D  2947               u490:
  1188  013E                     	line	94
  1189                           	
  1190                           l1066:	
  1191  013E                     ;mainT.c: 94:             sendUSART(current);
  1192                           	movf	(_current),w
  1193  013E  0878               	fcall	_sendUSART
  1194  013F  120A  118A  2188  120A  118A  	line	95
  1195                           	
  1196                           l1068:	
  1197  0144                     ;mainT.c: 95:             bandera = 1;
  1198                           	clrf	(_bandera)
  1199  0144  01F7               	incf	(_bandera),f
  1200  0145  0AF7               	goto	l1070
  1201  0146  2947               	line	96
  1202                           ;mainT.c: 96:         }
  1203                           	
  1204                           l179:	
  1205  0147                     	line	108
  1206                           	
  1207                           l1070:	
  1208  0147                     ;mainT.c: 108:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1209                           	opt asmopt_push
  1210                           opt asmopt_off
  1211                           movlw	13
  1212  0147  300D               	bcf	status, 5	;RP0=0, select bank0
  1213  0148  1283               	bcf	status, 6	;RP1=0, select bank0
  1214  0149  1303               movwf	((??_main+0)+0+1),f
  1215  014A  00C2               	movlw	251
  1216  014B  30FB               movwf	((??_main+0)+0),f
  1217  014C  00C1               	u507:
  1218  014D                     decfsz	((??_main+0)+0),f
  1219  014D  0BC1               	goto	u507
  1220  014E  294D               	decfsz	((??_main+0)+0+1),f
  1221  014F  0BC2               	goto	u507
  1222  0150  294D               opt asmopt_pop
  1223                           
  1224                           	goto	l1064
  1225  0151  2939               	line	109
  1226                           ;mainT.c: 109:     }
  1227                           	
  1228                           l180:	
  1229  0152                     	goto	l1064
  1230  0152  2939               	
  1231                           l181:	
  1232  0153                     	line	111
  1233                           ;mainT.c: 110:     return;
  1234                           	
  1235                           l182:	
  1236  0153                     	global	start
  1237                           	ljmp	start
  1238  0153  120A  118A  280C   	opt stack 0
  1239                           GLOBAL	__end_of_main
  1240                           	__end_of_main:
  1241  0156                     	signat	_main,89
  1242                           	global	_setup
  1243                           
  1244 ;; *************** function _setup *****************
  1245 ;; Defined at:
  1246 ;;		line 115 in file "mainT.c"
  1247 ;; Parameters:    Size  Location     Type
  1248 ;;		None
  1249 ;; Auto vars:     Size  Location     Type
  1250 ;;		None
  1251 ;; Return value:  Size  Location     Type
  1252 ;;                  1    wreg      void 
  1253 ;; Registers used:
  1254 ;;		wreg, status,2, status,0, pclath, cstack
  1255 ;; Tracked objects:
  1256 ;;		On entry : 0/0
  1257 ;;		On exit  : 0/0
  1258 ;;		Unchanged: 0/0
  1259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1260 ;;      Params:         0       0       0       0       0
  1261 ;;      Locals:         0       0       0       0       0
  1262 ;;      Temps:          0       0       0       0       0
  1263 ;;      Totals:         0       0       0       0       0
  1264 ;;Total ram usage:        0 bytes
  1265 ;; Hardware stack levels used:    1
  1266 ;; Hardware stack levels required when called:    2
  1267 ;; This function calls:
  1268 ;;		_spiInit
  1269 ;; This function is called by:
  1270 ;;		_main
  1271 ;; This function uses a non-reentrant model
  1272 ;;
  1273                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1274                           	line	115
  1275                           global __ptext1
  1276                           __ptext1:	;psect for function _setup
  1277  0156                     psect	text1
  1278                           	file	"mainT.c"
  1279                           	line	115
  1280                           	global	__size_of_setup
  1281                           	__size_of_setup	equ	__end_of_setup-_setup
  1282  001C                     	
  1283                           _setup:	
  1284  0156                     ;incstack = 0
  1285                           	opt	stack 5
  1286                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1287                           	line	116
  1288                           	
  1289                           l950:	
  1290  0156                     ;mainT.c: 116:     ANSEL = 0;
  1291                           	bsf	status, 5	;RP0=1, select bank3
  1292  0156  1683               	bsf	status, 6	;RP1=1, select bank3
  1293  0157  1703               	clrf	(392)^0180h	;volatile
  1294  0158  0188               	line	117
  1295                           ;mainT.c: 117:     ANSELH = 0;
  1296                           	clrf	(393)^0180h	;volatile
  1297  0159  0189               	line	118
  1298                           	
  1299                           l952:	
  1300  015A                     ;mainT.c: 118:     TRISC2 = 0;
  1301                           	bsf	status, 5	;RP0=1, select bank1
  1302  015A  1683               	bcf	status, 6	;RP1=0, select bank1
  1303  015B  1303               	bcf	(1082/8)^080h,(1082)&7	;volatile
  1304  015C  1107               	line	119
  1305                           	
  1306                           l954:	
  1307  015D                     ;mainT.c: 119:     TRISCbits.TRISC5 = 0;
  1308                           	bcf	(135)^080h,5	;volatile
  1309  015D  1287               	line	120
  1310                           	
  1311                           l956:	
  1312  015E                     ;mainT.c: 120:     TRISCbits.TRISC4 = 1;
  1313                           	bsf	(135)^080h,4	;volatile
  1314  015E  1607               	line	121
  1315                           	
  1316                           l958:	
  1317  015F                     ;mainT.c: 121:     TRISA = 0b10000000;
  1318                           	movlw	low(080h)
  1319  015F  3080               	movwf	(133)^080h	;volatile
  1320  0160  0085               	line	122
  1321                           	
  1322                           l960:	
  1323  0161                     ;mainT.c: 122:     TRISB = 0;
  1324                           	clrf	(134)^080h	;volatile
  1325  0161  0186               	line	123
  1326                           	
  1327                           l962:	
  1328  0162                     ;mainT.c: 123:     TRISD = 0;
  1329                           	clrf	(136)^080h	;volatile
  1330  0162  0188               	line	124
  1331                           	
  1332                           l964:	
  1333  0163                     ;mainT.c: 124:     PORTB = 0;
  1334                           	bcf	status, 5	;RP0=0, select bank0
  1335  0163  1283               	bcf	status, 6	;RP1=0, select bank0
  1336  0164  1303               	clrf	(6)	;volatile
  1337  0165  0186               	line	125
  1338                           	
  1339                           l966:	
  1340  0166                     ;mainT.c: 125:     PORTD = 0;
  1341                           	clrf	(8)	;volatile
  1342  0166  0188               	line	126
  1343                           	
  1344                           l968:	
  1345  0167                     ;mainT.c: 126:     PORTCbits.RC2 = 1;
  1346                           	bsf	(7),2	;volatile
  1347  0167  1507               	line	127
  1348                           	
  1349                           l970:	
  1350  0168                     ;mainT.c: 127:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_L
                                 OW, SPI_IDLE_2_ACTIVE);
  1351                           	clrf	(spiInit@sDataSample)
  1352  0168  01F3               	clrf	(spiInit@sClockIdle)
  1353  0169  01F4               	clrf	(spiInit@sTransmitEdge)
  1354  016A  01F5               	movlw	low(020h)
  1355  016B  3020               	fcall	_spiInit
  1356  016C  120A  118A  2172  120A  118A  	line	129
  1357                           	
  1358                           l185:	
  1359  0171                     	return
  1360  0171  0008               	opt stack 0
  1361                           GLOBAL	__end_of_setup
  1362                           	__end_of_setup:
  1363  0172                     	signat	_setup,89
  1364                           	global	_spiInit
  1365                           
  1366 ;; *************** function _spiInit *****************
  1367 ;; Defined at:
  1368 ;;		line 12 in file "SPI.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  sType           1    wreg     enum E1264
  1371 ;;  sDataSample     1    3[COMMON] enum E1272
  1372 ;;  sClockIdle      1    4[COMMON] enum E1276
  1373 ;;  sTransmitEdg    1    5[COMMON] enum E1280
  1374 ;; Auto vars:     Size  Location     Type
  1375 ;;  sType           1    6[COMMON] enum E1264
  1376 ;; Return value:  Size  Location     Type
  1377 ;;                  1    wreg      void 
  1378 ;; Registers used:
  1379 ;;		wreg, status,2, status,0
  1380 ;; Tracked objects:
  1381 ;;		On entry : 0/0
  1382 ;;		On exit  : 0/0
  1383 ;;		Unchanged: 0/0
  1384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1385 ;;      Params:         3       0       0       0       0
  1386 ;;      Locals:         1       0       0       0       0
  1387 ;;      Temps:          0       0       0       0       0
  1388 ;;      Totals:         4       0       0       0       0
  1389 ;;Total ram usage:        4 bytes
  1390 ;; Hardware stack levels used:    1
  1391 ;; Hardware stack levels required when called:    1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_setup
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1399                           	file	"SPI.c"
  1400                           	line	12
  1401                           global __ptext2
  1402                           __ptext2:	;psect for function _spiInit
  1403  0172                     psect	text2
  1404                           	file	"SPI.c"
  1405                           	line	12
  1406                           	global	__size_of_spiInit
  1407                           	__size_of_spiInit	equ	__end_of_spiInit-_spiInit
  1408  0016                     	
  1409                           _spiInit:	
  1410  0172                     ;incstack = 0
  1411                           	opt	stack 5
  1412                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1413                           ;spiInit@sType stored from wreg
  1414                           	movwf	(spiInit@sType)
  1415  0172  00F6               	line	14
  1416                           	
  1417                           l900:	
  1418  0173                     ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
                                 ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  1419                           	bsf	status, 5	;RP0=1, select bank1
  1420  0173  1683               	bcf	status, 6	;RP1=0, select bank1
  1421  0174  1303               	bcf	(1085/8)^080h,(1085)&7	;volatile
  1422  0175  1287               	line	15
  1423                           ;SPI.c: 15:     if(sType & 0b00000100)
  1424                           	btfss	(spiInit@sType),(2)&7
  1425  0176  1D76               	goto	u221
  1426  0177  2979               	goto	u220
  1427  0178  297A               u221:
  1428  0179                     	goto	l906
  1429  0179  297E               u220:
  1430  017A                     	line	17
  1431                           	
  1432                           l902:	
  1433  017A                     ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  1434                           	movf	(spiInit@sTransmitEdge),w
  1435  017A  0875               	movwf	(148)^080h	;volatile
  1436  017B  0094               	line	18
  1437                           	
  1438                           l904:	
  1439  017C                     ;SPI.c: 18:         TRISC3 = 1;
  1440                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  1441  017C  1587               	line	19
  1442                           ;SPI.c: 19:     }
  1443                           	goto	l16
  1444  017D  2982               	line	20
  1445                           ;SPI.c: 20:     else
  1446                           	
  1447                           l15:	
  1448  017E                     	line	22
  1449                           	
  1450                           l906:	
  1451  017E                     ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  1452                           	movf	(spiInit@sDataSample),w
  1453  017E  0873               	iorwf	(spiInit@sTransmitEdge),w
  1454  017F  0475               	movwf	(148)^080h	;volatile
  1455  0180  0094               	line	23
  1456                           	
  1457                           l908:	
  1458  0181                     ;SPI.c: 23:         TRISC3 = 0;
  1459                           	bcf	(1083/8)^080h,(1083)&7	;volatile
  1460  0181  1187               	line	24
  1461                           ;SPI.c: 24:     }
  1462                           	
  1463                           l16:	
  1464  0182                     	line	26
  1465                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  1466                           	movf	(spiInit@sType),w
  1467  0182  0876               	iorwf	(spiInit@sClockIdle),w
  1468  0183  0474               	bcf	status, 5	;RP0=0, select bank0
  1469  0184  1283               	bcf	status, 6	;RP1=0, select bank0
  1470  0185  1303               	movwf	(20)	;volatile
  1471  0186  0094               	line	27
  1472                           	
  1473                           l17:	
  1474  0187                     	return
  1475  0187  0008               	opt stack 0
  1476                           GLOBAL	__end_of_spiInit
  1477                           	__end_of_spiInit:
  1478  0188                     	signat	_spiInit,16505
  1479                           	global	_sendUSART
  1480                           
  1481 ;; *************** function _sendUSART *****************
  1482 ;; Defined at:
  1483 ;;		line 43 in file "USART.c"
  1484 ;; Parameters:    Size  Location     Type
  1485 ;;  data            1    wreg     unsigned char 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  data            1    4[COMMON] unsigned char 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  1    wreg      void 
  1490 ;; Registers used:
  1491 ;;		wreg
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1497 ;;      Params:         0       0       0       0       0
  1498 ;;      Locals:         1       0       0       0       0
  1499 ;;      Temps:          1       0       0       0       0
  1500 ;;      Totals:         2       0       0       0       0
  1501 ;;Total ram usage:        2 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    1
  1504 ;; This function calls:
  1505 ;;		Nothing
  1506 ;; This function is called by:
  1507 ;;		_main
  1508 ;; This function uses a non-reentrant model
  1509 ;;
  1510                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1511                           	file	"USART.c"
  1512                           	line	43
  1513                           global __ptext3
  1514                           __ptext3:	;psect for function _sendUSART
  1515  0188                     psect	text3
  1516                           	file	"USART.c"
  1517                           	line	43
  1518                           	global	__size_of_sendUSART
  1519                           	__size_of_sendUSART	equ	__end_of_sendUSART-_sendUSART
  1520  0015                     	
  1521                           _sendUSART:	
  1522  0188                     ;incstack = 0
  1523                           	opt	stack 6
  1524                           ; Regs used in _sendUSART: [wreg]
  1525                           ;sendUSART@data stored from wreg
  1526                           	movwf	(sendUSART@data)
  1527  0188  00F4               	line	44
  1528                           	
  1529                           l810:	
  1530  0189                     ;USART.c: 44:     while (TXSTAbits.TRMT == 0){}
  1531                           	goto	l75
  1532  0189  298A               	
  1533                           l76:	
  1534  018A                     	
  1535                           l75:	
  1536  018A                     	bsf	status, 5	;RP0=1, select bank1
  1537  018A  1683               	bcf	status, 6	;RP1=0, select bank1
  1538  018B  1303               	btfss	(152)^080h,1	;volatile
  1539  018C  1C98               	goto	u111
  1540  018D  298F               	goto	u110
  1541  018E  2990               u111:
  1542  018F                     	goto	l75
  1543  018F  298A               u110:
  1544  0190                     	goto	l812
  1545  0190  2991               	
  1546                           l77:	
  1547  0191                     	line	45
  1548                           	
  1549                           l812:	
  1550  0191                     ;USART.c: 45:     TXREG = data;
  1551                           	movf	(sendUSART@data),w
  1552  0191  0874               	bcf	status, 5	;RP0=0, select bank0
  1553  0192  1283               	bcf	status, 6	;RP1=0, select bank0
  1554  0193  1303               	movwf	(25)	;volatile
  1555  0194  0099               	line	46
  1556                           ;USART.c: 46:     _delay((unsigned long)((1)*(4000000/4000.0)));
  1557                           	opt asmopt_push
  1558                           opt asmopt_off
  1559                           	movlw	199
  1560  0195  30C7               movwf	((??_sendUSART+0)+0),f
  1561  0196  00F3               	u517:
  1562  0197                     	nop2
  1563  0197  2998               decfsz	(??_sendUSART+0)+0,f
  1564  0198  0BF3               	goto	u517
  1565  0199  2997               	nop2
  1566  019A  299B               	nop2
  1567  019B  299C               opt asmopt_pop
  1568                           
  1569                           	line	47
  1570                           	
  1571                           l78:	
  1572  019C                     	return
  1573  019C  0008               	opt stack 0
  1574                           GLOBAL	__end_of_sendUSART
  1575                           	__end_of_sendUSART:
  1576  019D                     	signat	_sendUSART,4217
  1577                           	global	_initUSART
  1578                           
  1579 ;; *************** function _initUSART *****************
  1580 ;; Defined at:
  1581 ;;		line 5 in file "USART.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  baudrate        2    0[BANK0 ] unsigned int 
  1584 ;;  txint           1    2[BANK0 ] unsigned char 
  1585 ;;  rcint           1    3[BANK0 ] unsigned char 
  1586 ;;  syncrono        1    4[BANK0 ] unsigned char 
  1587 ;; Auto vars:     Size  Location     Type
  1588 ;;		None
  1589 ;; Return value:  Size  Location     Type
  1590 ;;                  1    wreg      void 
  1591 ;; Registers used:
  1592 ;;		wreg, status,2, status,0
  1593 ;; Tracked objects:
  1594 ;;		On entry : 0/0
  1595 ;;		On exit  : 0/0
  1596 ;;		Unchanged: 0/0
  1597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1598 ;;      Params:         0       5       0       0       0
  1599 ;;      Locals:         0       0       0       0       0
  1600 ;;      Temps:          0       0       0       0       0
  1601 ;;      Totals:         0       5       0       0       0
  1602 ;;Total ram usage:        5 bytes
  1603 ;; Hardware stack levels used:    1
  1604 ;; Hardware stack levels required when called:    1
  1605 ;; This function calls:
  1606 ;;		Nothing
  1607 ;; This function is called by:
  1608 ;;		_main
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1612                           	line	5
  1613                           global __ptext4
  1614                           __ptext4:	;psect for function _initUSART
  1615  0020                     psect	text4
  1616                           	file	"USART.c"
  1617                           	line	5
  1618                           	global	__size_of_initUSART
  1619                           	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  1620  008E                     	
  1621                           _initUSART:	
  1622  0020                     ;incstack = 0
  1623                           	opt	stack 6
  1624                           ; Regs used in _initUSART: [wreg+status,2+status,0]
  1625                           	line	6
  1626                           	
  1627                           l1022:	
  1628  0020                     ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  1629                           	bsf	status, 5	;RP0=1, select bank1
  1630  0020  1683               	bcf	status, 6	;RP1=0, select bank1
  1631  0021  1303               	bsf	(135)^080h,7	;volatile
  1632  0022  1787               	line	8
  1633                           ;USART.c: 8:     PIE1bits.RCIE = 0;
  1634                           	bcf	(140)^080h,5	;volatile
  1635  0023  128C               	line	10
  1636                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  1637                           	bcf	status, 5	;RP0=0, select bank0
  1638  0024  1283               	bcf	status, 6	;RP1=0, select bank0
  1639  0025  1303               	bsf	(24),7	;volatile
  1640  0026  1798               	line	11
  1641                           	
  1642                           l1024:	
  1643  0027                     ;USART.c: 11:     TXSTAbits.SYNC = syncrono;
  1644                           	rrf	(initUSART@syncrono),w
  1645  0027  0C40               	bsf	status, 5	;RP0=1, select bank1
  1646  0028  1683               	bcf	status, 6	;RP1=0, select bank1
  1647  0029  1303               	skipc
  1648  002A  1C03               	bcf	(152)^080h,4	;volatile
  1649  002B  1218               	skipnc
  1650  002C  1803               	bsf	(152)^080h,4	;volatile
  1651  002D  1618               	line	13
  1652                           	
  1653                           l1026:	
  1654  002E                     ;USART.c: 13:     if(rcint){
  1655                           	bcf	status, 5	;RP0=0, select bank0
  1656  002E  1283               	bcf	status, 6	;RP1=0, select bank0
  1657  002F  1303               	movf	((initUSART@rcint)),w
  1658  0030  083F               	btfsc	status,2
  1659  0031  1903               	goto	u411
  1660  0032  2834               	goto	u410
  1661  0033  2835               u411:
  1662  0034                     	goto	l1030
  1663  0034  283D               u410:
  1664  0035                     	line	14
  1665                           	
  1666                           l1028:	
  1667  0035                     ;USART.c: 14:         RCSTAbits.CREN = 1;
  1668                           	bsf	(24),4	;volatile
  1669  0035  1618               	line	15
  1670                           ;USART.c: 15:         PIE1bits.RCIE = 1;
  1671                           	bsf	status, 5	;RP0=1, select bank1
  1672  0036  1683               	bcf	status, 6	;RP1=0, select bank1
  1673  0037  1303               	bsf	(140)^080h,5	;volatile
  1674  0038  168C               	line	16
  1675                           ;USART.c: 16:         PIR1bits.RCIF = 0;
  1676                           	bcf	status, 5	;RP0=0, select bank0
  1677  0039  1283               	bcf	status, 6	;RP1=0, select bank0
  1678  003A  1303               	bcf	(12),5	;volatile
  1679  003B  128C               	goto	l1030
  1680  003C  283D               	line	17
  1681                           ;USART.c: 17:     }
  1682                           	
  1683                           l59:	
  1684  003D                     	line	18
  1685                           	
  1686                           l1030:	
  1687  003D                     ;USART.c: 18:     if(txint){
  1688                           	movf	((initUSART@txint)),w
  1689  003D  083E               	btfsc	status,2
  1690  003E  1903               	goto	u421
  1691  003F  2841               	goto	u420
  1692  0040  2842               u421:
  1693  0041                     	goto	l60
  1694  0041  2845               u420:
  1695  0042                     	line	19
  1696                           	
  1697                           l1032:	
  1698  0042                     ;USART.c: 19:         TXSTAbits.TXEN = 1;
  1699                           	bsf	status, 5	;RP0=1, select bank1
  1700  0042  1683               	bcf	status, 6	;RP1=0, select bank1
  1701  0043  1303               	bsf	(152)^080h,5	;volatile
  1702  0044  1698               	line	20
  1703                           ;USART.c: 20:     }
  1704                           	
  1705                           l60:	
  1706  0045                     	line	22
  1707                           ;USART.c: 22:     BAUDCTLbits.BRG16 = 1;
  1708                           	bsf	status, 5	;RP0=1, select bank3
  1709  0045  1683               	bsf	status, 6	;RP1=1, select bank3
  1710  0046  1703               	bsf	(391)^0180h,3	;volatile
  1711  0047  1587               	line	23
  1712                           ;USART.c: 23:     TXSTAbits.BRGH = 0;
  1713                           	bsf	status, 5	;RP0=1, select bank1
  1714  0048  1683               	bcf	status, 6	;RP1=0, select bank1
  1715  0049  1303               	bcf	(152)^080h,2	;volatile
  1716  004A  1118               	line	25
  1717                           	
  1718                           l1034:	
  1719  004B                     ;USART.c: 25:     if(baudrate == 300){
  1720                           		movlw	44
  1721  004B  302C               	bcf	status, 5	;RP0=0, select bank0
  1722  004C  1283               	bcf	status, 6	;RP1=0, select bank0
  1723  004D  1303               	xorwf	((initUSART@baudrate)),w
  1724  004E  063C               	skipz
  1725  004F  1D03               	goto	u431
  1726  0050  2855               	decf	((initUSART@baudrate+1)),w
  1727  0051  033D               	btfss	status,2
  1728  0052  1D03               	goto	u431
  1729  0053  2855               	goto	u430
  1730  0054  2856               u431:
  1731  0055                     	goto	l1038
  1732  0055  285D               u430:
  1733  0056                     	line	26
  1734                           	
  1735                           l1036:	
  1736  0056                     ;USART.c: 26:         SPBRG = 0x40;
  1737                           	movlw	low(040h)
  1738  0056  3040               	bsf	status, 5	;RP0=1, select bank1
  1739  0057  1683               	bcf	status, 6	;RP1=0, select bank1
  1740  0058  1303               	movwf	(153)^080h	;volatile
  1741  0059  0099               	line	27
  1742                           ;USART.c: 27:         SPBRGH = 0x03;
  1743                           	movlw	low(03h)
  1744  005A  3003               	movwf	(154)^080h	;volatile
  1745  005B  009A               	line	28
  1746                           ;USART.c: 28:     } else if (baudrate == 1200){
  1747                           	goto	l1058
  1748  005C  28AB               	
  1749                           l61:	
  1750  005D                     	
  1751                           l1038:	
  1752  005D                     		movlw	176
  1753  005D  30B0               	bcf	status, 5	;RP0=0, select bank0
  1754  005E  1283               	xorwf	((initUSART@baudrate)),w
  1755  005F  063C               	movlw	4
  1756  0060  3004               	skipnz
  1757  0061  1903               	xorwf	((initUSART@baudrate+1)),w
  1758  0062  063D               	btfss	status,2
  1759  0063  1D03               	goto	u441
  1760  0064  2866               	goto	u440
  1761  0065  2867               u441:
  1762  0066                     	goto	l1042
  1763  0066  286C               u440:
  1764  0067                     	line	29
  1765                           	
  1766                           l1040:	
  1767  0067                     ;USART.c: 29:         SPBRG = 207;
  1768                           	movlw	low(0CFh)
  1769  0067  30CF               	bsf	status, 5	;RP0=1, select bank1
  1770  0068  1683               	bcf	status, 6	;RP1=0, select bank1
  1771  0069  1303               	movwf	(153)^080h	;volatile
  1772  006A  0099               	line	30
  1773                           ;USART.c: 30:     } else if (baudrate == 2400){
  1774                           	goto	l1058
  1775  006B  28AB               	
  1776                           l63:	
  1777  006C                     	
  1778                           l1042:	
  1779  006C                     		movlw	96
  1780  006C  3060               	bcf	status, 5	;RP0=0, select bank0
  1781  006D  1283               	xorwf	((initUSART@baudrate)),w
  1782  006E  063C               	movlw	9
  1783  006F  3009               	skipnz
  1784  0070  1903               	xorwf	((initUSART@baudrate+1)),w
  1785  0071  063D               	btfss	status,2
  1786  0072  1D03               	goto	u451
  1787  0073  2875               	goto	u450
  1788  0074  2876               u451:
  1789  0075                     	goto	l1046
  1790  0075  287B               u450:
  1791  0076                     	line	31
  1792                           	
  1793                           l1044:	
  1794  0076                     ;USART.c: 31:         SPBRG = 103;
  1795                           	movlw	low(067h)
  1796  0076  3067               	bsf	status, 5	;RP0=1, select bank1
  1797  0077  1683               	bcf	status, 6	;RP1=0, select bank1
  1798  0078  1303               	movwf	(153)^080h	;volatile
  1799  0079  0099               	line	32
  1800                           ;USART.c: 32:     } else if (baudrate == 9600){
  1801                           	goto	l1058
  1802  007A  28AB               	
  1803                           l65:	
  1804  007B                     	
  1805                           l1046:	
  1806  007B                     		movlw	128
  1807  007B  3080               	bcf	status, 5	;RP0=0, select bank0
  1808  007C  1283               	xorwf	((initUSART@baudrate)),w
  1809  007D  063C               	movlw	37
  1810  007E  3025               	skipnz
  1811  007F  1903               	xorwf	((initUSART@baudrate+1)),w
  1812  0080  063D               	btfss	status,2
  1813  0081  1D03               	goto	u461
  1814  0082  2884               	goto	u460
  1815  0083  2885               u461:
  1816  0084                     	goto	l1050
  1817  0084  288A               u460:
  1818  0085                     	line	33
  1819                           	
  1820                           l1048:	
  1821  0085                     ;USART.c: 33:         SPBRG = 25;
  1822                           	movlw	low(019h)
  1823  0085  3019               	bsf	status, 5	;RP0=1, select bank1
  1824  0086  1683               	bcf	status, 6	;RP1=0, select bank1
  1825  0087  1303               	movwf	(153)^080h	;volatile
  1826  0088  0099               	line	34
  1827                           ;USART.c: 34:     } else if (baudrate == 10417){
  1828                           	goto	l1058
  1829  0089  28AB               	
  1830                           l67:	
  1831  008A                     	
  1832                           l1050:	
  1833  008A                     		movlw	177
  1834  008A  30B1               	bcf	status, 5	;RP0=0, select bank0
  1835  008B  1283               	xorwf	((initUSART@baudrate)),w
  1836  008C  063C               	movlw	40
  1837  008D  3028               	skipnz
  1838  008E  1903               	xorwf	((initUSART@baudrate+1)),w
  1839  008F  063D               	btfss	status,2
  1840  0090  1D03               	goto	u471
  1841  0091  2893               	goto	u470
  1842  0092  2894               u471:
  1843  0093                     	goto	l1054
  1844  0093  2899               u470:
  1845  0094                     	line	35
  1846                           	
  1847                           l1052:	
  1848  0094                     ;USART.c: 35:         SPBRG = 23;
  1849                           	movlw	low(017h)
  1850  0094  3017               	bsf	status, 5	;RP0=1, select bank1
  1851  0095  1683               	bcf	status, 6	;RP1=0, select bank1
  1852  0096  1303               	movwf	(153)^080h	;volatile
  1853  0097  0099               	line	36
  1854                           ;USART.c: 36:     } else if (baudrate == 19200){
  1855                           	goto	l1058
  1856  0098  28AB               	
  1857                           l69:	
  1858  0099                     	
  1859                           l1054:	
  1860  0099                     		movlw	75
  1861  0099  304B               	bcf	status, 5	;RP0=0, select bank0
  1862  009A  1283               	xorwf	((initUSART@baudrate+1)),w
  1863  009B  063D               iorwf	((initUSART@baudrate)),w
  1864  009C  043C               	btfss	status,2
  1865  009D  1D03               	goto	u481
  1866  009E  28A0               	goto	u480
  1867  009F  28A1               u481:
  1868  00A0                     	goto	l1058
  1869  00A0  28AB               u480:
  1870  00A1                     	line	37
  1871                           	
  1872                           l1056:	
  1873  00A1                     ;USART.c: 37:         SPBRG = 12;
  1874                           	movlw	low(0Ch)
  1875  00A1  300C               	bsf	status, 5	;RP0=1, select bank1
  1876  00A2  1683               	bcf	status, 6	;RP1=0, select bank1
  1877  00A3  1303               	movwf	(153)^080h	;volatile
  1878  00A4  0099               	goto	l1058
  1879  00A5  28AB               	line	38
  1880                           ;USART.c: 38:     }
  1881                           	
  1882                           l71:	
  1883  00A6                     	goto	l1058
  1884  00A6  28AB               	
  1885                           l70:	
  1886  00A7                     	goto	l1058
  1887  00A7  28AB               	
  1888                           l68:	
  1889  00A8                     	goto	l1058
  1890  00A8  28AB               	
  1891                           l66:	
  1892  00A9                     	goto	l1058
  1893  00A9  28AB               	
  1894                           l64:	
  1895  00AA                     	goto	l1058
  1896  00AA  28AB               	
  1897                           l62:	
  1898  00AB                     	line	39
  1899                           	
  1900                           l1058:	
  1901  00AB                     ;USART.c: 39:     INTCONbits.PEIE = 1;
  1902                           	bsf	(11),6	;volatile
  1903  00AB  170B               	line	40
  1904                           	
  1905                           l1060:	
  1906  00AC                     ;USART.c: 40:     INTCONbits.GIE = 1;
  1907                           	bsf	(11),7	;volatile
  1908  00AC  178B               	line	41
  1909                           	
  1910                           l72:	
  1911  00AD                     	return
  1912  00AD  0008               	opt stack 0
  1913                           GLOBAL	__end_of_initUSART
  1914                           	__end_of_initUSART:
  1915  00AE                     	signat	_initUSART,16505
  1916                           	global	_ISR
  1917                           
  1918 ;; *************** function _ISR *****************
  1919 ;; Defined at:
  1920 ;;		line 56 in file "mainT.c"
  1921 ;; Parameters:    Size  Location     Type
  1922 ;;		None
  1923 ;; Auto vars:     Size  Location     Type
  1924 ;;		None
  1925 ;; Return value:  Size  Location     Type
  1926 ;;                  1    wreg      void 
  1927 ;; Registers used:
  1928 ;;		wreg, status,2, status,0
  1929 ;; Tracked objects:
  1930 ;;		On entry : 0/0
  1931 ;;		On exit  : 0/0
  1932 ;;		Unchanged: 0/0
  1933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1934 ;;      Params:         0       0       0       0       0
  1935 ;;      Locals:         0       0       0       0       0
  1936 ;;      Temps:          3       0       0       0       0
  1937 ;;      Totals:         3       0       0       0       0
  1938 ;;Total ram usage:        3 bytes
  1939 ;; Hardware stack levels used:    1
  1940 ;; This function calls:
  1941 ;;		Nothing
  1942 ;; This function is called by:
  1943 ;;		Interrupt level 1
  1944 ;; This function uses a non-reentrant model
  1945 ;;
  1946                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  1947                           	file	"mainT.c"
  1948                           	line	56
  1949                           global __ptext5
  1950                           __ptext5:	;psect for function _ISR
  1951  00AE                     psect	text5
  1952                           	file	"mainT.c"
  1953                           	line	56
  1954                           	global	__size_of_ISR
  1955                           	__size_of_ISR	equ	__end_of_ISR-_ISR
  1956  0075                     	
  1957                           _ISR:	
  1958  00AE                     ;incstack = 0
  1959                           	opt	stack 5
  1960                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1961                           psect	intentry,class=CODE,delta=2
  1962                           global __pintentry
  1963                           __pintentry:
  1964  0004                     global interrupt_function
  1965                           interrupt_function:
  1966  0004                     	global saved_w
  1967                           	saved_w	set	btemp+0
  1968  007E                     	movwf	saved_w
  1969  0004  00FE               	swapf	status,w
  1970  0005  0E03               	movwf	(??_ISR+1)
  1971  0006  00F1               	movf	pclath,w
  1972  0007  080A               	movwf	(??_ISR+2)
  1973  0008  00F2               	ljmp	_ISR
  1974  0009  120A  118A  28AE   psect	text5
  1975                           	line	57
  1976                           	
  1977                           i1l972:	
  1978  00AE                     ;mainT.c: 57:     if(PIR1bits.RCIF == 1){
  1979                           	bcf	status, 5	;RP0=0, select bank0
  1980  00AE  1283               	bcf	status, 6	;RP1=0, select bank0
  1981  00AF  1303               	btfss	(12),5	;volatile
  1982  00B0  1E8C               	goto	u31_21
  1983  00B1  28B3               	goto	u31_20
  1984  00B2  28B4               u31_21:
  1985  00B3                     	goto	i1l173
  1986  00B3  291C               u31_20:
  1987  00B4                     	line	59
  1988                           	
  1989                           i1l974:	
  1990  00B4                     ;mainT.c: 59:         if(current == 0){
  1991                           	movf	((_current)),w
  1992  00B4  0878               	btfss	status,2
  1993  00B5  1D03               	goto	u32_21
  1994  00B6  28B8               	goto	u32_20
  1995  00B7  28B9               u32_21:
  1996  00B8                     	goto	i1l978
  1997  00B8  28BE               u32_20:
  1998  00B9                     	line	60
  1999                           	
  2000                           i1l976:	
  2001  00B9                     ;mainT.c: 60:             signal = RCREG;
  2002                           	movf	(26),w	;volatile
  2003  00B9  081A               	movwf	(??_ISR+0)+0
  2004  00BA  00F0               	movf	(??_ISR+0)+0,w
  2005  00BB  0870               	movwf	(_signal)
  2006  00BC  00B7               	line	61
  2007                           ;mainT.c: 61:         }else if(current == 1){
  2008                           	goto	i1l1006
  2009  00BD  2911               	
  2010                           i1l158:	
  2011  00BE                     	
  2012                           i1l978:	
  2013  00BE                     		decf	((_current)),w
  2014  00BE  0378               	btfss	status,2
  2015  00BF  1D03               	goto	u33_21
  2016  00C0  28C2               	goto	u33_20
  2017  00C1  28C3               u33_21:
  2018  00C2                     	goto	i1l982
  2019  00C2  28C8               u33_20:
  2020  00C3                     	line	62
  2021                           	
  2022                           i1l980:	
  2023  00C3                     ;mainT.c: 62:             ventilador = RCREG;
  2024                           	movf	(26),w	;volatile
  2025  00C3  081A               	movwf	(??_ISR+0)+0
  2026  00C4  00F0               	movf	(??_ISR+0)+0,w
  2027  00C5  0870               	movwf	(_ventilador)
  2028  00C6  00B6               	line	63
  2029                           ;mainT.c: 63:         }else if(current == 2){
  2030                           	goto	i1l1006
  2031  00C7  2911               	
  2032                           i1l160:	
  2033  00C8                     	
  2034                           i1l982:	
  2035  00C8                     		movlw	2
  2036  00C8  3002               	xorwf	((_current)),w
  2037  00C9  0678               	btfss	status,2
  2038  00CA  1D03               	goto	u34_21
  2039  00CB  28CD               	goto	u34_20
  2040  00CC  28CE               u34_21:
  2041  00CD                     	goto	i1l986
  2042  00CD  28D3               u34_20:
  2043  00CE                     	line	64
  2044                           	
  2045                           i1l984:	
  2046  00CE                     ;mainT.c: 64:             garage = RCREG;
  2047                           	movf	(26),w	;volatile
  2048  00CE  081A               	movwf	(??_ISR+0)+0
  2049  00CF  00F0               	movf	(??_ISR+0)+0,w
  2050  00D0  0870               	movwf	(_garage)
  2051  00D1  00B5               	line	65
  2052                           ;mainT.c: 65:         }else if(current == 3){
  2053                           	goto	i1l1006
  2054  00D2  2911               	
  2055                           i1l162:	
  2056  00D3                     	
  2057                           i1l986:	
  2058  00D3                     		movlw	3
  2059  00D3  3003               	xorwf	((_current)),w
  2060  00D4  0678               	btfss	status,2
  2061  00D5  1D03               	goto	u35_21
  2062  00D6  28D8               	goto	u35_20
  2063  00D7  28D9               u35_21:
  2064  00D8                     	goto	i1l990
  2065  00D8  28DE               u35_20:
  2066  00D9                     	line	66
  2067                           	
  2068                           i1l988:	
  2069  00D9                     ;mainT.c: 66:             hall = RCREG;
  2070                           	movf	(26),w	;volatile
  2071  00D9  081A               	movwf	(??_ISR+0)+0
  2072  00DA  00F0               	movf	(??_ISR+0)+0,w
  2073  00DB  0870               	movwf	(_hall)
  2074  00DC  00B4               	line	67
  2075                           ;mainT.c: 67:         }else if(current == 4){
  2076                           	goto	i1l1006
  2077  00DD  2911               	
  2078                           i1l164:	
  2079  00DE                     	
  2080                           i1l990:	
  2081  00DE                     		movlw	4
  2082  00DE  3004               	xorwf	((_current)),w
  2083  00DF  0678               	btfss	status,2
  2084  00E0  1D03               	goto	u36_21
  2085  00E1  28E3               	goto	u36_20
  2086  00E2  28E4               u36_21:
  2087  00E3                     	goto	i1l994
  2088  00E3  28E9               u36_20:
  2089  00E4                     	line	68
  2090                           	
  2091                           i1l992:	
  2092  00E4                     ;mainT.c: 68:             temp = RCREG;
  2093                           	movf	(26),w	;volatile
  2094  00E4  081A               	movwf	(??_ISR+0)+0
  2095  00E5  00F0               	movf	(??_ISR+0)+0,w
  2096  00E6  0870               	movwf	(_temp)
  2097  00E7  00B3               	line	69
  2098                           ;mainT.c: 69:         }else if(current == 5){
  2099                           	goto	i1l1006
  2100  00E8  2911               	
  2101                           i1l166:	
  2102  00E9                     	
  2103                           i1l994:	
  2104  00E9                     		movlw	5
  2105  00E9  3005               	xorwf	((_current)),w
  2106  00EA  0678               	btfss	status,2
  2107  00EB  1D03               	goto	u37_21
  2108  00EC  28EE               	goto	u37_20
  2109  00ED  28EF               u37_21:
  2110  00EE                     	goto	i1l998
  2111  00EE  28F4               u37_20:
  2112  00EF                     	line	70
  2113                           	
  2114                           i1l996:	
  2115  00EF                     ;mainT.c: 70:             luz = RCREG;
  2116                           	movf	(26),w	;volatile
  2117  00EF  081A               	movwf	(??_ISR+0)+0
  2118  00F0  00F0               	movf	(??_ISR+0)+0,w
  2119  00F1  0870               	movwf	(_luz)
  2120  00F2  00B2               	line	71
  2121                           ;mainT.c: 71:         }else if(current == 6){
  2122                           	goto	i1l1006
  2123  00F3  2911               	
  2124                           i1l168:	
  2125  00F4                     	
  2126                           i1l998:	
  2127  00F4                     		movlw	6
  2128  00F4  3006               	xorwf	((_current)),w
  2129  00F5  0678               	btfss	status,2
  2130  00F6  1D03               	goto	u38_21
  2131  00F7  28F9               	goto	u38_20
  2132  00F8  28FA               u38_21:
  2133  00F9                     	goto	i1l1002
  2134  00F9  28FF               u38_20:
  2135  00FA                     	line	72
  2136                           	
  2137                           i1l1000:	
  2138  00FA                     ;mainT.c: 72:             mov = RCREG;
  2139                           	movf	(26),w	;volatile
  2140  00FA  081A               	movwf	(??_ISR+0)+0
  2141  00FB  00F0               	movf	(??_ISR+0)+0,w
  2142  00FC  0870               	movwf	(_mov)
  2143  00FD  00B1               	line	73
  2144                           ;mainT.c: 73:         }else if(current == 7){
  2145                           	goto	i1l1006
  2146  00FE  2911               	
  2147                           i1l170:	
  2148  00FF                     	
  2149                           i1l1002:	
  2150  00FF                     		movlw	7
  2151  00FF  3007               	xorwf	((_current)),w
  2152  0100  0678               	btfss	status,2
  2153  0101  1D03               	goto	u39_21
  2154  0102  2904               	goto	u39_20
  2155  0103  2905               u39_21:
  2156  0104                     	goto	i1l1006
  2157  0104  2911               u39_20:
  2158  0105                     	line	74
  2159                           	
  2160                           i1l1004:	
  2161  0105                     ;mainT.c: 74:             alarm = RCREG;
  2162                           	movf	(26),w	;volatile
  2163  0105  081A               	movwf	(??_ISR+0)+0
  2164  0106  00F0               	movf	(??_ISR+0)+0,w
  2165  0107  0870               	movwf	(_alarm)
  2166  0108  00B0               	goto	i1l1006
  2167  0109  2911               	line	75
  2168                           ;mainT.c: 75:         }
  2169                           	
  2170                           i1l172:	
  2171  010A                     	goto	i1l1006
  2172  010A  2911               	
  2173                           i1l171:	
  2174  010B                     	goto	i1l1006
  2175  010B  2911               	
  2176                           i1l169:	
  2177  010C                     	goto	i1l1006
  2178  010C  2911               	
  2179                           i1l167:	
  2180  010D                     	goto	i1l1006
  2181  010D  2911               	
  2182                           i1l165:	
  2183  010E                     	goto	i1l1006
  2184  010E  2911               	
  2185                           i1l163:	
  2186  010F                     	goto	i1l1006
  2187  010F  2911               	
  2188                           i1l161:	
  2189  0110                     	goto	i1l1006
  2190  0110  2911               	
  2191                           i1l159:	
  2192  0111                     	line	76
  2193                           	
  2194                           i1l1006:	
  2195  0111                     ;mainT.c: 76:         current++;
  2196                           	movlw	low(01h)
  2197  0111  3001               	movwf	(??_ISR+0)+0
  2198  0112  00F0               	movf	(??_ISR+0)+0,w
  2199  0113  0870               	addwf	(_current),f
  2200  0114  07F8               	line	77
  2201                           	
  2202                           i1l1008:	
  2203  0115                     ;mainT.c: 77:         current = current%8;
  2204                           	movf	(_current),w
  2205  0115  0878               	andlw	07h
  2206  0116  3907               	movwf	(??_ISR+0)+0
  2207  0117  00F0               	movf	(??_ISR+0)+0,w
  2208  0118  0870               	movwf	(_current)
  2209  0119  00F8               	line	78
  2210                           	
  2211                           i1l1010:	
  2212  011A                     ;mainT.c: 78:         bandera = 0;
  2213                           	clrf	(_bandera)
  2214  011A  01F7               	goto	i1l173
  2215  011B  291C               	line	79
  2216                           ;mainT.c: 79:     }
  2217                           	
  2218                           i1l157:	
  2219  011C                     	line	80
  2220                           	
  2221                           i1l173:	
  2222  011C                     	movf	(??_ISR+2),w
  2223  011C  0872               	movwf	pclath
  2224  011D  008A               	swapf	(??_ISR+1)^0FFFFFF80h,w
  2225  011E  0E71               	movwf	status
  2226  011F  0083               	swapf	saved_w,f
  2227  0120  0EFE               	swapf	saved_w,w
  2228  0121  0E7E               	retfie
  2229  0122  0009               	opt stack 0
  2230                           GLOBAL	__end_of_ISR
  2231                           	__end_of_ISR:
  2232  0123                     	signat	_ISR,89
  2233                           global	___latbits
  2234                           ___latbits	equ	2
  2235  0002                     	global	btemp
  2236                           	btemp set 07Eh
  2237  007E                     
  2238                           	DABS	1,126,2	;btemp
  2239                           	global	wtemp0
  2240                           	wtemp0 set btemp+0
  2241  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      11
    BANK0            80      7      35
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_initUSART

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    1014
                                              5 BANK0      2     2      0
                          _initUSART
                          _sendUSART
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     360
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              3 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _sendUSART                                            2     2      0      15
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _initUSART                                            5     0      5     639
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initUSART
   _sendUSART
   _setup
     _spiInit

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7      23       5       43.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2E      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Mar 09 16:41:11 2020

             __CFG_CP$OFF 0000               _SSPSTATbits 0094                        l15 017E  
                      l16 0182                        l17 0187                        l60 0045  
                      l61 005D                        l62 00AB                        l70 00A7  
                      l71 00A6                        l63 006C                        l72 00AD  
                      l64 00AA                        l65 007B                        l66 00A9  
                      l67 008A                        l59 003D                        l75 018A  
                      l68 00A8                        l76 018A                        l69 0099  
                      l77 0191                        l78 019C                        fsr 0004  
                     l180 0152                       l181 0153                       l182 0153  
                     l185 0171                       l178 0139                       l179 0147  
                     l810 0189                       l812 0191                       l900 0173  
                     l902 017A                       l904 017C                       l906 017E  
                     l908 0181                       l950 0156                       l960 0161  
                     l952 015A                       l970 0168                       l962 0162  
                     l954 015D                       l964 0163                       l956 015E  
                     l966 0166                       l958 015F                       l968 0167  
                     u110 0190                       u111 018F                       u220 017A  
                     u221 0179                       u410 0035                       u411 0034  
                     u420 0042                       u421 0041                       u430 0056  
                     u431 0055                       u440 0067                       u441 0066  
                     u450 0076              __CFG_CPD$OFF 0000                       u451 0075  
                     u507 014D                       u460 0085                       _ISR 00AE  
                     u461 0084                       u517 0197                       u470 0094  
                     u471 0093                       u480 00A1                       u481 00A0  
                     u490 013E                       u491 013D                       _mov 0031  
                     _luz 0032                       indf 0000              __CFG_LVP$OFF 0000  
                    ?_ISR 0070                      l1030 003D                      l1022 0020  
                    l1040 0067                      l1032 0042                      l1024 0027  
                    l1050 008A                      l1042 006C                      l1034 004B  
                    l1026 002E                      l1060 00AC                      l1052 0094  
                    l1044 0076                      l1036 0056                      l1028 0035  
                    l1054 0099                      l1046 007B                      l1038 005D  
                    l1070 0147                      l1062 0123                      l1056 00A1  
                    l1048 0085                      l1064 0139                      l1058 00AB  
                    l1066 013E                      l1068 0144              __CFG_WRT$OFF 0000  
                    _dec1 0039                      _dec2 0038                      _hall 0034  
                    _main 0123                      _temp 0033                      btemp 007E  
                    start 000C             __CFG_IESO$OFF 0000                     ??_ISR 0070  
                   ?_main 0070             __CFG_WDTE$OFF 0000                     _ANSEL 0188  
                   i1l160 00C8                     i1l161 0110                     i1l170 00FF  
                   i1l162 00D3                     i1l163 010F                     i1l171 010B  
                   i1l172 010A                     i1l164 00DE                     i1l157 011C  
                   i1l165 010E                     i1l173 011C                     i1l166 00E9  
                   i1l158 00BE                     i1l159 0111                     i1l167 010D  
                   i1l168 00F4                     i1l169 010C                     i1l980 00C3  
                   i1l972 00AE                     i1l990 00DE                     i1l982 00C8  
                   i1l974 00B4                     i1l992 00E4                     i1l984 00CE  
                   i1l976 00B9                     i1l994 00E9                     i1l986 00D3  
                   i1l978 00BE                     i1l996 00EF                     i1l988 00D9  
                   i1l998 00F4                     _RCREG 001A                     u31_20 00B4  
                   u31_21 00B3                     u32_20 00B9                     u32_21 00B8  
                   u33_20 00C3                     u33_21 00C2                     u34_20 00CE  
                   u34_21 00CD                     _SPBRG 0099                     u35_20 00D9  
                   u35_21 00D8                     _PORTB 0006                     _PORTD 0008  
                   u36_20 00E4                     u36_21 00E3                     u37_20 00EF  
                   u37_21 00EE                     u38_20 00FA                     u38_21 00F9  
                   u39_20 0105                     u39_21 0104                     _TRISA 0085  
                   _TRISB 0086                     _TRISD 0088                     _TXREG 0019  
          __CFG_FCMEN$OFF 0000         initUSART@baudrate 003C                     _alarm 0030  
                   _setup 0156            __CFG_BOREN$OFF 0000                     pclath 000A  
         __end_of_spiInit 0188                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 000F              __end_of_main 0156  
          initUSART@rcint 003F            initUSART@txint 003E                    ??_main 0041  
       initUSART@syncrono 0040                    ?_setup 0070                    _ANSELH 0189  
                  i1l1000 00FA                    i1l1010 011A                    i1l1002 00FF  
                  i1l1004 0105                    i1l1006 0111                    i1l1008 0115  
                  _SPBRGH 009A                    _TRISC2 043A                    _TRISC3 043B  
                  _TRISC5 043D                    _SSPCON 0014                    _SSPBUF 0013  
          __CFG_PWRTE$OFF 0000                    _garage 0035                    _float1 002C  
                  _float2 0028             sendUSART@data 0074                    _signal 0037  
                  saved_w 007E                 ??_spiInit 0076   __end_of__initialization 001C  
          __pcstackCOMMON 0070             __end_of_setup 0172                   ??_setup 0077  
              __pbssBANK0 0020        __size_of_initUSART 008E                __pmaintext 0123  
      __size_of_sendUSART 0015                __pintentry 0004                   _SSPSTAT 0094  
                 _bandera 0077         __end_of_initUSART 00AE                   __ptext1 0156  
                 __ptext2 0172                   __ptext3 0188                   __ptext4 0020  
                 __ptext5 00AE              __size_of_ISR 0075                   _entero1 003B  
                 _entero2 003A                   _current 0078                   _spiInit 0172  
                 _sensor1 007A                   _sensor2 0079         __end_of_sendUSART 019D  
                 clrloop0 019E      end_of_initialization 001C                 _RCSTAbits 0018  
               _PORTCbits 0007                 _TRISCbits 0087                _ventilador 0036  
               _TXSTAbits 0098               _BAUDCTLbits 0187       start_initialization 000F  
             __end_of_ISR 0123  __CFG_FOSC$INTRC_NOCLKOUT 0000               __pbssCOMMON 0077  
               ___latbits 0002             __pcstackBANK0 003C                 _initUSART 0020  
                ?_spiInit 0073            __size_of_setup 001C      spiInit@sTransmitEdge 0075  
               _sendUSART 0188         interrupt_function 0004                 clear_ram0 019D  
                _PIE1bits 008C        spiInit@sDataSample 0073                  _PIR1bits 000C  
              ?_initUSART 003C                ?_sendUSART 0070          __size_of_spiInit 0016  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0033                  _sensorF1 0024  
                _sensorF2 0020              spiInit@sType 0076         spiInit@sClockIdle 0074  
              _INTCONbits 000B               ??_initUSART 0073                  intlevel1 0000  
             ??_sendUSART 0073  
