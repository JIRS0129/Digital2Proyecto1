

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Mar 07 10:59:49 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     	FNCALL	_main,_ADC
   556                           	FNCALL	_main,_LeerADC
   557                           	FNCALL	_main,_inicio
   558                           	FNCALL	_main,_setup
   559                           	FNCALL	_setup,_I2C_Slave_Init
   560                           	FNCALL	_LeerADC,___flge
   561                           	FNCALL	_LeerADC,___xxtofl
   562                           	FNROOT	_main
   563                           	FNCALL	_isr,___awmod
   564                           	FNCALL	_isr,___fltol
   565                           	FNCALL	intlevel1,_isr
   566                           	global	intlevel1
   567                           	FNROOT	intlevel1
   568                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
   569                           global __pidataBANK0
   570                           __pidataBANK0:
   571  044E                     	file	"./LibSensorMovFoto.h"
   572                           	line	39
   573                           
   574                           ;initializer for _ADCcomp2
   575                           	retlw	0Fh
   576  044E  340F               	line	38
   577                           
   578                           ;initializer for _ADCcomp1
   579                           	retlw	0F0h
   580  044F  34F0               	global	_counter
   581                           	global	_SendSignal
   582                           	global	_select
   583                           	global	_ValorADC
   584                           	global	_Signal
   585                           	global	_z
   586                           	global	_varADC
   587                           	global	_Signal2
   588                           	global	_VarMOV
   589                           psect	nvBANK0,class=BANK0,space=1,noexec
   590                           global __pnvBANK0
   591                           __pnvBANK0:
   592  0062                     _VarMOV:
   593  0062                            ds      1
   594  0062                     
   595                           	global	_PORTBbits
   596                           _PORTBbits	set	0x6
   597  0006                     	global	_SSPCONbits
   598                           _SSPCONbits	set	0x14
   599  0014                     	global	_PORTD
   600                           _PORTD	set	0x8
   601  0008                     	global	_PORTC
   602                           _PORTC	set	0x7
   603  0007                     	global	_PORTB
   604                           _PORTB	set	0x6
   605  0006                     	global	_PORTA
   606                           _PORTA	set	0x5
   607  0005                     	global	_SSPBUF
   608                           _SSPBUF	set	0x13
   609  0013                     	global	_SSPCON
   610                           _SSPCON	set	0x14
   611  0014                     	global	_ADRESH
   612                           _ADRESH	set	0x1E
   613  001E                     	global	_ADCON0bits
   614                           _ADCON0bits	set	0x1F
   615  001F                     	global	_ADCON0
   616                           _ADCON0	set	0x1F
   617  001F                     	global	_PIR1bits
   618                           _PIR1bits	set	0xC
   619  000C                     	global	_INTCONbits
   620                           _INTCONbits	set	0xB
   621  000B                     	global	_SSPIF
   622                           _SSPIF	set	0x63
   623  0063                     	global	_PEIE
   624                           _PEIE	set	0x5E
   625  005E                     	global	_GIE
   626                           _GIE	set	0x5F
   627  005F                     	global	_SSPSTATbits
   628                           _SSPSTATbits	set	0x94
   629  0094                     	global	_TRISD
   630                           _TRISD	set	0x88
   631  0088                     	global	_TRISC
   632                           _TRISC	set	0x87
   633  0087                     	global	_TRISB
   634                           _TRISB	set	0x86
   635  0086                     	global	_TRISA
   636                           _TRISA	set	0x85
   637  0085                     	global	_SSPCON2bits
   638                           _SSPCON2bits	set	0x91
   639  0091                     	global	_TRISCbits
   640                           _TRISCbits	set	0x87
   641  0087                     	global	_SSPSTAT
   642                           _SSPSTAT	set	0x94
   643  0094                     	global	_SSPADD
   644                           _SSPADD	set	0x93
   645  0093                     	global	_SSPCON2
   646                           _SSPCON2	set	0x91
   647  0091                     	global	_ADCON1bits
   648                           _ADCON1bits	set	0x9F
   649  009F                     	global	_PIE1bits
   650                           _PIE1bits	set	0x8C
   651  008C                     	global	_BF
   652                           _BF	set	0x4A0
   653  04A0                     	global	_SSPIE
   654                           _SSPIE	set	0x463
   655  0463                     	global	_TRISC4
   656                           _TRISC4	set	0x43C
   657  043C                     	global	_TRISC3
   658                           _TRISC3	set	0x43B
   659  043B                     	global	_ANSELH
   660                           _ANSELH	set	0x189
   661  0189                     	global	_ANSEL
   662                           _ANSEL	set	0x188
   663  0188                     ; #config settings
   664                           global __CFG_FOSC$INTRC_NOCLKOUT
   665                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   666  0000                     global __CFG_WDTE$OFF
   667                           __CFG_WDTE$OFF equ 0x0
   668  0000                     global __CFG_PWRTE$OFF
   669                           __CFG_PWRTE$OFF equ 0x0
   670  0000                     global __CFG_MCLRE$OFF
   671                           __CFG_MCLRE$OFF equ 0x0
   672  0000                     global __CFG_CP$OFF
   673                           __CFG_CP$OFF equ 0x0
   674  0000                     global __CFG_CPD$OFF
   675                           __CFG_CPD$OFF equ 0x0
   676  0000                     global __CFG_BOREN$OFF
   677                           __CFG_BOREN$OFF equ 0x0
   678  0000                     global __CFG_IESO$OFF
   679                           __CFG_IESO$OFF equ 0x0
   680  0000                     global __CFG_FCMEN$OFF
   681                           __CFG_FCMEN$OFF equ 0x0
   682  0000                     global __CFG_LVP$OFF
   683                           __CFG_LVP$OFF equ 0x0
   684  0000                     global __CFG_BOR4V$BOR40V
   685                           __CFG_BOR4V$BOR40V equ 0x0
   686  0000                     global __CFG_WRT$OFF
   687                           __CFG_WRT$OFF equ 0x0
   688  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\s98k."
   689                           	line	#
   690                           psect cinit,class=CODE,delta=2
   691                           global start_initialization
   692                           start_initialization:
   693  0011                     
   694                           global __initialization
   695                           __initialization:
   696  0011                     psect	bssCOMMON,class=COMMON,space=1,noexec
   697                           global __pbssCOMMON
   698                           __pbssCOMMON:
   699  007B                     _counter:
   700  007B                            ds      1
   701  007B                     
   702                           _SendSignal:
   703  007C                            ds      1
   704  007C                     
   705                           _select:
   706  007D                            ds      1
   707  007D                     
   708                           psect	bssBANK0,class=BANK0,space=1,noexec
   709                           global __pbssBANK0
   710                           __pbssBANK0:
   711  0020                     _ValorADC:
   712  0020                            ds      4
   713  0020                     
   714                           _adc4:
   715  0024                            ds      4
   716  0024                     
   717                           _adc3:
   718  0028                            ds      4
   719  0028                     
   720                           _adc2:
   721  002C                            ds      4
   722  002C                     
   723                           _adc1:
   724  0030                            ds      4
   725  0030                     
   726                           _adc6:
   727  0034                            ds      2
   728  0034                     
   729                           _adc5:
   730  0036                            ds      2
   731  0036                     
   732                           _Signal:
   733  0038                            ds      1
   734  0038                     
   735                           _z:
   736  0039                            ds      1
   737  0039                     
   738                           _multiplex:
   739  003A                            ds      1
   740  003A                     
   741                           _varADC:
   742  003B                            ds      1
   743  003B                     
   744                           _Signal2:
   745  003C                            ds      1
   746  003C                     
   747                           _decimal2:
   748  003D                            ds      1
   749  003D                     
   750                           _decimal1:
   751  003E                            ds      1
   752  003E                     
   753                           _voltajeunidad:
   754  003F                            ds      1
   755  003F                     
   756                           _contador:
   757  0040                            ds      1
   758  0040                     
   759                           _timer:
   760  0041                            ds      1
   761  0041                     
   762                           _multi2:
   763  0042                            ds      1
   764  0042                     
   765                           _multi1:
   766  0043                            ds      1
   767  0043                     
   768                           _mostrar:
   769  0044                            ds      1
   770  0044                     
   771                           _debounce:
   772  0045                            ds      1
   773  0045                     
   774                           psect	dataBANK0,class=BANK0,space=1,noexec
   775                           global __pdataBANK0
   776                           __pdataBANK0:
   777  0060                     	file	"./LibSensorMovFoto.h"
   778                           	line	39
   779                           _ADCcomp2:
   780  0060                            ds      1
   781  0060                     
   782                           psect	dataBANK0
   783                           	file	"./LibSensorMovFoto.h"
   784                           	line	38
   785                           _ADCcomp1:
   786  0061                            ds      1
   787  0061                     
   788                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\s98k."
   789                           	line	#
   790                           ; Initialize objects allocated to BANK0
   791                           	global __pidataBANK0
   792                           psect cinit,class=CODE,delta=2,merge=1
   793                           	fcall	__pidataBANK0+0		;fetch initializer
   794  0011  120A  118A  244E  120A  118A  	movwf	__pdataBANK0+0&07fh		
   795  0016  00E0               	fcall	__pidataBANK0+1		;fetch initializer
   796  0017  120A  118A  244F  120A  118A  	movwf	__pdataBANK0+1&07fh		
   797  001C  00E1               	line	#
   798                           psect clrtext,class=CODE,delta=2
   799                           global clear_ram0
   800                           ;	Called with FSR containing the base address, and
   801                           ;	W with the last address+1
   802                           clear_ram0:
   803  0446                     	clrwdt			;clear the watchdog before getting into this loop
   804  0446  0064               clrloop0:
   805  0447                     	clrf	indf		;clear RAM location pointed to by FSR
   806  0447  0180               	incf	fsr,f		;increment pointer
   807  0448  0A84               	xorwf	fsr,w		;XOR with final address
   808  0449  0604               	btfsc	status,2	;have we reached the end yet?
   809  044A  1903               	retlw	0		;all done for this memory range, return
   810  044B  3400               	xorwf	fsr,w		;XOR again to restore value
   811  044C  0604               	goto	clrloop0		;do the next byte
   812  044D  2C47               
   813                           ; Clear objects allocated to BANK0
   814                           psect cinit,class=CODE,delta=2,merge=1
   815                           	bcf	status, 7	;select IRP bank0
   816  001D  1383               	movlw	low(__pbssBANK0)
   817  001E  3020               	movwf	fsr
   818  001F  0084               	movlw	low((__pbssBANK0)+026h)
   819  0020  3046               	fcall	clear_ram0
   820  0021  120A  118A  2446  120A  118A  ; Clear objects allocated to COMMON
   821                           psect cinit,class=CODE,delta=2,merge=1
   822                           	clrf	((__pbssCOMMON)+0)&07Fh
   823  0026  01FB               	clrf	((__pbssCOMMON)+1)&07Fh
   824  0027  01FC               	clrf	((__pbssCOMMON)+2)&07Fh
   825  0028  01FD               psect cinit,class=CODE,delta=2,merge=1
   826                           global end_of_initialization,__end_of__initialization
   827                           
   828                           ;End of C runtime variable initialization code
   829                           
   830                           end_of_initialization:
   831  0029                     __end_of__initialization:
   832  0029                     clrf status
   833  0029  0183               ljmp _main	;jump to C main() function
   834  002A  120A  118A  2BA8   psect	cstackCOMMON,class=COMMON,space=1,noexec
   835                           global __pcstackCOMMON
   836                           __pcstackCOMMON:
   837  0070                     ?_ADC:	; 1 bytes @ 0x0
   838  0070                     ?_LeerADC:	; 1 bytes @ 0x0
   839  0070                     ?_I2C_Slave_Init:	; 1 bytes @ 0x0
   840  0070                     ?_inicio:	; 1 bytes @ 0x0
   841  0070                     ?_setup:	; 1 bytes @ 0x0
   842  0070                     ?_isr:	; 1 bytes @ 0x0
   843  0070                     ?_main:	; 1 bytes @ 0x0
   844  0070                     	global	?___awmod
   845                           ?___awmod:	; 2 bytes @ 0x0
   846  0070                     	global	?___fltol
   847                           ?___fltol:	; 4 bytes @ 0x0
   848  0070                     	global	___awmod@divisor
   849                           ___awmod@divisor:	; 2 bytes @ 0x0
   850  0070                     	global	___fltol@f1
   851                           ___fltol@f1:	; 4 bytes @ 0x0
   852  0070                     	ds	2
   853  0070                     	global	___awmod@dividend
   854                           ___awmod@dividend:	; 2 bytes @ 0x2
   855  0072                     	ds	2
   856  0072                     ??___awmod:	; 1 bytes @ 0x4
   857  0074                     ??___fltol:	; 1 bytes @ 0x4
   858  0074                     	ds	1
   859  0074                     	global	___awmod@counter
   860                           ___awmod@counter:	; 1 bytes @ 0x5
   861  0075                     	ds	1
   862  0075                     	global	___awmod@sign
   863                           ___awmod@sign:	; 1 bytes @ 0x6
   864  0076                     	ds	3
   865  0076                     	global	___fltol@sign1
   866                           ___fltol@sign1:	; 1 bytes @ 0x9
   867  0079                     	ds	1
   868  0079                     	global	___fltol@exp1
   869                           ___fltol@exp1:	; 1 bytes @ 0xA
   870  007A                     	ds	1
   871  007A                     psect	cstackBANK0,class=BANK0,space=1,noexec
   872                           global __pcstackBANK0
   873                           __pcstackBANK0:
   874  0046                     ??_isr:	; 1 bytes @ 0x0
   875  0046                     	ds	5
   876  0046                     ?___flge:	; 1 bit 
   877  004B                     ??_ADC:	; 1 bytes @ 0x5
   878  004B                     ??_I2C_Slave_Init:	; 1 bytes @ 0x5
   879  004B                     ??_inicio:	; 1 bytes @ 0x5
   880  004B                     	global	?___xxtofl
   881                           ?___xxtofl:	; 4 bytes @ 0x5
   882  004B                     	global	I2C_Slave_Init@address
   883                           I2C_Slave_Init@address:	; 1 bytes @ 0x5
   884  004B                     	global	___flge@ff1
   885                           ___flge@ff1:	; 4 bytes @ 0x5
   886  004B                     	global	___xxtofl@val
   887                           ___xxtofl@val:	; 4 bytes @ 0x5
   888  004B                     	ds	1
   889  004B                     ??_setup:	; 1 bytes @ 0x6
   890  004C                     	ds	3
   891  004C                     ??___xxtofl:	; 1 bytes @ 0x9
   892  004F                     	global	___flge@ff2
   893                           ___flge@ff2:	; 4 bytes @ 0x9
   894  004F                     	ds	4
   895  004F                     ??___flge:	; 1 bytes @ 0xD
   896  0053                     	global	___xxtofl@sign
   897                           ___xxtofl@sign:	; 1 bytes @ 0xD
   898  0053                     	ds	1
   899  0053                     	global	___xxtofl@exp
   900                           ___xxtofl@exp:	; 1 bytes @ 0xE
   901  0054                     	ds	1
   902  0054                     	global	___xxtofl@arg
   903                           ___xxtofl@arg:	; 4 bytes @ 0xF
   904  0055                     	ds	6
   905  0055                     ??_LeerADC:	; 1 bytes @ 0x15
   906  005B                     	ds	4
   907  005B                     ??_main:	; 1 bytes @ 0x19
   908  005F                     	ds	1
   909  005F                     ;!
   910                           ;!Data Sizes:
   911                           ;!    Strings     0
   912                           ;!    Constant    0
   913                           ;!    Data        2
   914                           ;!    BSS         41
   915                           ;!    Persistent  1
   916                           ;!    Stack       0
   917                           ;!
   918                           ;!Auto Spaces:
   919                           ;!    Space          Size  Autos    Used
   920                           ;!    COMMON           14     11      14
   921                           ;!    BANK0            80     26      67
   922                           ;!    BANK1            80      0       0
   923                           ;!    BANK3            96      0       0
   924                           ;!    BANK2            96      0       0
   925                           
   926                           ;!
   927                           ;!Pointer List with Targets:
   928                           ;!
   929                           ;!    None.
   930                           
   931                           
   932                           ;!
   933                           ;!Critical Paths under _main in COMMON
   934                           ;!
   935                           ;!    None.
   936                           ;!
   937                           ;!Critical Paths under _isr in COMMON
   938                           ;!
   939                           ;!    _isr->___fltol
   940                           ;!
   941                           ;!Critical Paths under _main in BANK0
   942                           ;!
   943                           ;!    _main->_LeerADC
   944                           ;!    _setup->_I2C_Slave_Init
   945                           ;!    _LeerADC->___flge
   946                           ;!
   947                           ;!Critical Paths under _isr in BANK0
   948                           ;!
   949                           ;!    None.
   950                           ;!
   951                           ;!Critical Paths under _main in BANK1
   952                           ;!
   953                           ;!    None.
   954                           ;!
   955                           ;!Critical Paths under _isr in BANK1
   956                           ;!
   957                           ;!    None.
   958                           ;!
   959                           ;!Critical Paths under _main in BANK3
   960                           ;!
   961                           ;!    None.
   962                           ;!
   963                           ;!Critical Paths under _isr in BANK3
   964                           ;!
   965                           ;!    None.
   966                           ;!
   967                           ;!Critical Paths under _main in BANK2
   968                           ;!
   969                           ;!    None.
   970                           ;!
   971                           ;!Critical Paths under _isr in BANK2
   972                           ;!
   973                           ;!    None.
   974                           
   975 ;;
   976 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   977 ;;
   978                           
   979                           ;!
   980                           ;!Call Graph Tables:
   981                           ;!
   982                           ;! ---------------------------------------------------------------------------------
   983                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   984                           ;! ---------------------------------------------------------------------------------
   985                           ;! (0) _main                                                 1     1      0     754
   986                           ;!                                             25 BANK0      1     1      0
   987                           ;!                                _ADC
   988                           ;!                            _LeerADC
   989                           ;!                             _inicio
   990                           ;!                              _setup
   991                           ;! ---------------------------------------------------------------------------------
   992                           ;! (1) _setup                                                0     0      0      22
   993                           ;!                     _I2C_Slave_Init
   994                           ;! ---------------------------------------------------------------------------------
   995                           ;! (2) _I2C_Slave_Init                                       1     1      0      22
   996                           ;!                                              5 BANK0      1     1      0
   997                           ;! ---------------------------------------------------------------------------------
   998                           ;! (1) _inicio                                               0     0      0       0
   999                           ;! ---------------------------------------------------------------------------------
  1000                           ;! (1) _LeerADC                                              4     4      0     732
  1001                           ;!                                             21 BANK0      4     4      0
  1002                           ;!                             ___flge
  1003                           ;!                           ___xxtofl
  1004                           ;! ---------------------------------------------------------------------------------
  1005                           ;! (2) ___xxtofl                                            14    10      4     398
  1006                           ;!                                              5 BANK0     14    10      4
  1007                           ;! ---------------------------------------------------------------------------------
  1008                           ;! (2) ___flge                                              16     8      8     334
  1009                           ;!                                              5 BANK0     16     8      8
  1010                           ;! ---------------------------------------------------------------------------------
  1011                           ;! (1) _ADC                                                  0     0      0       0
  1012                           ;! ---------------------------------------------------------------------------------
  1013                           ;! Estimated maximum stack depth 2
  1014                           ;! ---------------------------------------------------------------------------------
  1015                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1016                           ;! ---------------------------------------------------------------------------------
  1017                           ;! (3) _isr                                                  5     5      0     753
  1018                           ;!                                              0 BANK0      5     5      0
  1019                           ;!                            ___awmod
  1020                           ;!                            ___fltol
  1021                           ;! ---------------------------------------------------------------------------------
  1022                           ;! (4) ___fltol                                             11     7      4     305
  1023                           ;!                                              0 COMMON    11     7      4
  1024                           ;! ---------------------------------------------------------------------------------
  1025                           ;! (4) ___awmod                                              7     3      4     448
  1026                           ;!                                              0 COMMON     7     3      4
  1027                           ;! ---------------------------------------------------------------------------------
  1028                           ;! Estimated maximum stack depth 4
  1029                           ;! ---------------------------------------------------------------------------------
  1030                           ;!
  1031                           ;! Call Graph Graphs:
  1032                           ;!
  1033                           ;! _main (ROOT)
  1034                           ;!   _ADC
  1035                           ;!   _LeerADC
  1036                           ;!     ___flge
  1037                           ;!     ___xxtofl
  1038                           ;!   _inicio
  1039                           ;!   _setup
  1040                           ;!     _I2C_Slave_Init
  1041                           ;!
  1042                           ;! _isr (ROOT)
  1043                           ;!   ___awmod
  1044                           ;!   ___fltol
  1045                           ;!
  1046                           
  1047                           ;! Address spaces:
  1048                           
  1049                           ;!Name               Size   Autos  Total    Cost      Usage
  1050                           ;!BANK3               60      0       0       9        0.0%
  1051                           ;!BITBANK3            60      0       0       8        0.0%
  1052                           ;!SFR3                 0      0       0       4        0.0%
  1053                           ;!BITSFR3              0      0       0       4        0.0%
  1054                           ;!BANK2               60      0       0      11        0.0%
  1055                           ;!BITBANK2            60      0       0      10        0.0%
  1056                           ;!SFR2                 0      0       0       5        0.0%
  1057                           ;!BITSFR2              0      0       0       5        0.0%
  1058                           ;!BANK1               50      0       0       7        0.0%
  1059                           ;!BITBANK1            50      0       0       6        0.0%
  1060                           ;!SFR1                 0      0       0       2        0.0%
  1061                           ;!BITSFR1              0      0       0       2        0.0%
  1062                           ;!BANK0               50     1A      43       5       83.8%
  1063                           ;!BITBANK0            50      0       0       4        0.0%
  1064                           ;!SFR0                 0      0       0       1        0.0%
  1065                           ;!BITSFR0              0      0       0       1        0.0%
  1066                           ;!COMMON               E      B       E       1      100.0%
  1067                           ;!BITCOMMON            E      0       0       0        0.0%
  1068                           ;!CODE                 0      0       0       0        0.0%
  1069                           ;!DATA                 0      0      51      12        0.0%
  1070                           ;!ABS                  0      0      51       3        0.0%
  1071                           ;!NULL                 0      0       0       0        0.0%
  1072                           ;!STACK                0      0       0       2        0.0%
  1073                           ;!EEDATA             100      0       0       0        0.0%
  1074                           
  1075                           	global	_main
  1076                           
  1077 ;; *************** function _main *****************
  1078 ;; Defined at:
  1079 ;;		line 112 in file "mainS2.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		wreg, status,2, status,0, pclath, cstack
  1088 ;; Tracked objects:
  1089 ;;		On entry : B00/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       1       0       0       0
  1096 ;;      Totals:         0       1       0       0       0
  1097 ;;Total ram usage:        1 bytes
  1098 ;; Hardware stack levels required when called:    4
  1099 ;; This function calls:
  1100 ;;		_ADC
  1101 ;;		_LeerADC
  1102 ;;		_inicio
  1103 ;;		_setup
  1104 ;; This function is called by:
  1105 ;;		Startup code after reset
  1106 ;; This function uses a non-reentrant model
  1107 ;;
  1108                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1109                           	file	"mainS2.c"
  1110                           	line	112
  1111                           global __pmaintext
  1112                           __pmaintext:	;psect for function _main
  1113  03A8                     psect	maintext
  1114                           	file	"mainS2.c"
  1115                           	line	112
  1116                           	global	__size_of_main
  1117                           	__size_of_main	equ	__end_of_main-_main
  1118  003F                     	
  1119                           _main:	
  1120  03A8                     ;incstack = 0
  1121                           	opt	stack 4
  1122                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  1123                           	line	113
  1124                           	
  1125                           l1418:	
  1126  03A8                     ;mainS2.c: 113:     inicio();
  1127                           	fcall	_inicio
  1128  03A8  120A  118A  23E7  120A  118A  	line	114
  1129                           ;mainS2.c: 114:     setup();
  1130                           	fcall	_setup
  1131  03AD  120A  118A  2426  120A  118A  	line	115
  1132                           ;mainS2.c: 115:     ADC();
  1133                           	fcall	_ADC
  1134  03B2  120A  118A  2436  120A  118A  	goto	l1420
  1135  03B7  2BB8               	line	116
  1136                           ;mainS2.c: 116:     while (1){
  1137                           	
  1138                           l254:	
  1139  03B8                     	line	118
  1140                           	
  1141                           l1420:	
  1142  03B8                     ;mainS2.c: 118:         VarMOV = PORTBbits.RB0;
  1143                           	movlw	0
  1144  03B8  3000               	bcf	status, 5	;RP0=0, select bank0
  1145  03B9  1283               	bcf	status, 6	;RP1=0, select bank0
  1146  03BA  1303               	btfsc	(6),0	;volatile
  1147  03BB  1806               	movlw	1
  1148  03BC  3001               	movwf	(_VarMOV)
  1149  03BD  00E2               	line	119
  1150                           	
  1151                           l1422:	
  1152  03BE                     ;mainS2.c: 119:         if (VarMOV == 1){
  1153                           		decf	((_VarMOV)),w
  1154  03BE  0362               	btfss	status,2
  1155  03BF  1D03               	goto	u1191
  1156  03C0  2BC2               	goto	u1190
  1157  03C1  2BC3               u1191:
  1158  03C2                     	goto	l1426
  1159  03C2  2BC6               u1190:
  1160  03C3                     	line	120
  1161                           	
  1162                           l1424:	
  1163  03C3                     ;mainS2.c: 120:             Signal = 1;
  1164                           	clrf	(_Signal)
  1165  03C3  01B8               	incf	(_Signal),f
  1166  03C4  0AB8               	line	121
  1167                           ;mainS2.c: 121:         }else{
  1168                           	goto	l1428
  1169  03C5  2BC8               	
  1170                           l255:	
  1171  03C6                     	line	122
  1172                           	
  1173                           l1426:	
  1174  03C6                     ;mainS2.c: 122:             Signal = 0;
  1175                           	clrf	(_Signal)
  1176  03C6  01B8               	goto	l1428
  1177  03C7  2BC8               	line	123
  1178                           ;mainS2.c: 123:         }
  1179                           	
  1180                           l256:	
  1181  03C8                     	line	124
  1182                           	
  1183                           l1428:	
  1184  03C8                     ;mainS2.c: 124:         if (varADC == 1){
  1185                           		decf	((_varADC)),w
  1186  03C8  033B               	btfss	status,2
  1187  03C9  1D03               	goto	u1201
  1188  03CA  2BCC               	goto	u1200
  1189  03CB  2BCD               u1201:
  1190  03CC                     	goto	l1436
  1191  03CC  2BD7               u1200:
  1192  03CD                     	line	125
  1193                           	
  1194                           l1430:	
  1195  03CD                     ;mainS2.c: 125:             LeerADC();
  1196                           	fcall	_LeerADC
  1197  03CD  120A  118A  2360  120A  118A  	line	126
  1198                           	
  1199                           l1432:	
  1200  03D2                     ;mainS2.c: 126:             ADCON0bits.GO_DONE = 1;
  1201                           	bcf	status, 5	;RP0=0, select bank0
  1202  03D2  1283               	bcf	status, 6	;RP1=0, select bank0
  1203  03D3  1303               	bsf	(31),1	;volatile
  1204  03D4  149F               	line	127
  1205                           	
  1206                           l1434:	
  1207  03D5                     ;mainS2.c: 127:             varADC = 0;
  1208                           	clrf	(_varADC)
  1209  03D5  01BB               	goto	l1436
  1210  03D6  2BD7               	line	128
  1211                           ;mainS2.c: 128:         }
  1212                           	
  1213                           l257:	
  1214  03D7                     	line	129
  1215                           	
  1216                           l1436:	
  1217  03D7                     ;mainS2.c: 129:         if (ADCON0bits.GO_DONE == 0){
  1218                           	btfsc	(31),1	;volatile
  1219  03D7  189F               	goto	u1211
  1220  03D8  2BDA               	goto	u1210
  1221  03D9  2BDB               u1211:
  1222  03DA                     	goto	l1440
  1223  03DA  2BDD               u1210:
  1224  03DB                     	line	130
  1225                           	
  1226                           l1438:	
  1227  03DB                     ;mainS2.c: 130:             ADCON0bits.GO_DONE = 1;
  1228                           	bsf	(31),1	;volatile
  1229  03DB  149F               	goto	l1440
  1230  03DC  2BDD               	line	131
  1231                           ;mainS2.c: 131:         }
  1232                           	
  1233                           l258:	
  1234  03DD                     	line	133
  1235                           	
  1236                           l1440:	
  1237  03DD                     ;mainS2.c: 133:         SendSignal = Signal & Signal2;
  1238                           	movf	(_Signal),w
  1239  03DD  0838               	andwf	(_Signal2),w
  1240  03DE  053C               	movwf	(??_main+0)+0
  1241  03DF  00DF               	movf	(??_main+0)+0,w
  1242  03E0  085F               	movwf	(_SendSignal)
  1243  03E1  00FC               	goto	l1420
  1244  03E2  2BB8               	line	134
  1245                           ;mainS2.c: 134:     }
  1246                           	
  1247                           l259:	
  1248  03E3                     	goto	l1420
  1249  03E3  2BB8               	
  1250                           l260:	
  1251  03E4                     	line	136
  1252                           ;mainS2.c: 135:     return;
  1253                           	
  1254                           l261:	
  1255  03E4                     	global	start
  1256                           	ljmp	start
  1257  03E4  120A  118A  280E   	opt stack 0
  1258                           GLOBAL	__end_of_main
  1259                           	__end_of_main:
  1260  03E7                     	signat	_main,89
  1261                           	global	_setup
  1262                           
  1263 ;; *************** function _setup *****************
  1264 ;; Defined at:
  1265 ;;		line 59 in file "mainS2.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;		None
  1268 ;; Auto vars:     Size  Location     Type
  1269 ;;		None
  1270 ;; Return value:  Size  Location     Type
  1271 ;;                  1    wreg      void 
  1272 ;; Registers used:
  1273 ;;		wreg, status,2, status,0, pclath, cstack
  1274 ;; Tracked objects:
  1275 ;;		On entry : 0/0
  1276 ;;		On exit  : 0/0
  1277 ;;		Unchanged: 0/0
  1278 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1279 ;;      Params:         0       0       0       0       0
  1280 ;;      Locals:         0       0       0       0       0
  1281 ;;      Temps:          0       0       0       0       0
  1282 ;;      Totals:         0       0       0       0       0
  1283 ;;Total ram usage:        0 bytes
  1284 ;; Hardware stack levels used:    1
  1285 ;; Hardware stack levels required when called:    3
  1286 ;; This function calls:
  1287 ;;		_I2C_Slave_Init
  1288 ;; This function is called by:
  1289 ;;		_main
  1290 ;; This function uses a non-reentrant model
  1291 ;;
  1292                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1293                           	line	59
  1294                           global __ptext1
  1295                           __ptext1:	;psect for function _setup
  1296  0426                     psect	text1
  1297                           	file	"mainS2.c"
  1298                           	line	59
  1299                           	global	__size_of_setup
  1300                           	__size_of_setup	equ	__end_of_setup-_setup
  1301  0010                     	
  1302                           _setup:	
  1303  0426                     ;incstack = 0
  1304                           	opt	stack 4
  1305                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  1306                           	line	60
  1307                           	
  1308                           l1288:	
  1309  0426                     ;mainS2.c: 60:     ANSELH = 0;
  1310                           	bsf	status, 5	;RP0=1, select bank3
  1311  0426  1683               	bsf	status, 6	;RP1=1, select bank3
  1312  0427  1703               	clrf	(393)^0180h	;volatile
  1313  0428  0189               	line	61
  1314                           ;mainS2.c: 61:     TRISD = 0;
  1315                           	bsf	status, 5	;RP0=1, select bank1
  1316  0429  1683               	bcf	status, 6	;RP1=0, select bank1
  1317  042A  1303               	clrf	(136)^080h	;volatile
  1318  042B  0188               	line	62
  1319                           ;mainS2.c: 62:     PORTD = 0;
  1320                           	bcf	status, 5	;RP0=0, select bank0
  1321  042C  1283               	bcf	status, 6	;RP1=0, select bank0
  1322  042D  1303               	clrf	(8)	;volatile
  1323  042E  0188               	line	63
  1324                           	
  1325                           l1290:	
  1326  042F                     ;mainS2.c: 63:     I2C_Slave_Init(0x60);
  1327                           	movlw	low(060h)
  1328  042F  3060               	fcall	_I2C_Slave_Init
  1329  0430  120A  118A  240A  120A  118A  	line	64
  1330                           	
  1331                           l226:	
  1332  0435                     	return
  1333  0435  0008               	opt stack 0
  1334                           GLOBAL	__end_of_setup
  1335                           	__end_of_setup:
  1336  0436                     	signat	_setup,89
  1337                           	global	_I2C_Slave_Init
  1338                           
  1339 ;; *************** function _I2C_Slave_Init *****************
  1340 ;; Defined at:
  1341 ;;		line 121 in file "LibSensorMovFoto.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  address         1    wreg     unsigned char 
  1344 ;; Auto vars:     Size  Location     Type
  1345 ;;  address         1    5[BANK0 ] unsigned char 
  1346 ;; Return value:  Size  Location     Type
  1347 ;;                  1    wreg      void 
  1348 ;; Registers used:
  1349 ;;		wreg
  1350 ;; Tracked objects:
  1351 ;;		On entry : 0/0
  1352 ;;		On exit  : 0/0
  1353 ;;		Unchanged: 0/0
  1354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1355 ;;      Params:         0       0       0       0       0
  1356 ;;      Locals:         0       1       0       0       0
  1357 ;;      Temps:          0       0       0       0       0
  1358 ;;      Totals:         0       1       0       0       0
  1359 ;;Total ram usage:        1 bytes
  1360 ;; Hardware stack levels used:    1
  1361 ;; Hardware stack levels required when called:    2
  1362 ;; This function calls:
  1363 ;;		Nothing
  1364 ;; This function is called by:
  1365 ;;		_setup
  1366 ;; This function uses a non-reentrant model
  1367 ;;
  1368                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  1369                           	file	"LibSensorMovFoto.c"
  1370                           	line	121
  1371                           global __ptext2
  1372                           __ptext2:	;psect for function _I2C_Slave_Init
  1373  040A                     psect	text2
  1374                           	file	"LibSensorMovFoto.c"
  1375                           	line	121
  1376                           	global	__size_of_I2C_Slave_Init
  1377                           	__size_of_I2C_Slave_Init	equ	__end_of_I2C_Slave_Init-_I2C_Slave_Init
  1378  001C                     	
  1379                           _I2C_Slave_Init:	
  1380  040A                     ;incstack = 0
  1381                           	opt	stack 4
  1382                           ; Regs used in _I2C_Slave_Init: [wreg]
  1383                           ;I2C_Slave_Init@address stored from wreg
  1384                           	bcf	status, 5	;RP0=0, select bank0
  1385  040A  1283               	bcf	status, 6	;RP1=0, select bank0
  1386  040B  1303               	movwf	(I2C_Slave_Init@address)
  1387  040C  00CB               	line	122
  1388                           	
  1389                           l1174:	
  1390  040D                     ;LibSensorMovFoto.c: 122:     SSPADD = address;
  1391                           	movf	(I2C_Slave_Init@address),w
  1392  040D  084B               	bsf	status, 5	;RP0=1, select bank1
  1393  040E  1683               	bcf	status, 6	;RP1=0, select bank1
  1394  040F  1303               	movwf	(147)^080h	;volatile
  1395  0410  0093               	line	123
  1396                           ;LibSensorMovFoto.c: 123:     SSPCON = 0x36;
  1397                           	movlw	low(036h)
  1398  0411  3036               	bcf	status, 5	;RP0=0, select bank0
  1399  0412  1283               	bcf	status, 6	;RP1=0, select bank0
  1400  0413  1303               	movwf	(20)	;volatile
  1401  0414  0094               	line	124
  1402                           ;LibSensorMovFoto.c: 124:     SSPSTAT = 0x80;
  1403                           	movlw	low(080h)
  1404  0415  3080               	bsf	status, 5	;RP0=1, select bank1
  1405  0416  1683               	bcf	status, 6	;RP1=0, select bank1
  1406  0417  1303               	movwf	(148)^080h	;volatile
  1407  0418  0094               	line	125
  1408                           ;LibSensorMovFoto.c: 125:     SSPCON2 = 0x01;
  1409                           	movlw	low(01h)
  1410  0419  3001               	movwf	(145)^080h	;volatile
  1411  041A  0091               	line	126
  1412                           	
  1413                           l1176:	
  1414  041B                     ;LibSensorMovFoto.c: 126:     TRISC3 = 1;
  1415                           	bsf	(1083/8)^080h,(1083)&7	;volatile
  1416  041B  1587               	line	127
  1417                           	
  1418                           l1178:	
  1419  041C                     ;LibSensorMovFoto.c: 127:     TRISC4 = 1;
  1420                           	bsf	(1084/8)^080h,(1084)&7	;volatile
  1421  041C  1607               	line	128
  1422                           	
  1423                           l1180:	
  1424  041D                     ;LibSensorMovFoto.c: 128:     GIE = 1;
  1425                           	bsf	(95/8),(95)&7	;volatile
  1426  041D  178B               	line	129
  1427                           	
  1428                           l1182:	
  1429  041E                     ;LibSensorMovFoto.c: 129:     PEIE = 1;
  1430                           	bsf	(94/8),(94)&7	;volatile
  1431  041E  170B               	line	130
  1432                           	
  1433                           l1184:	
  1434  041F                     ;LibSensorMovFoto.c: 130:     SSPIF = 0;
  1435                           	bcf	status, 5	;RP0=0, select bank0
  1436  041F  1283               	bcf	status, 6	;RP1=0, select bank0
  1437  0420  1303               	bcf	(99/8),(99)&7	;volatile
  1438  0421  118C               	line	131
  1439                           	
  1440                           l1186:	
  1441  0422                     ;LibSensorMovFoto.c: 131:     SSPIE = 1;
  1442                           	bsf	status, 5	;RP0=1, select bank1
  1443  0422  1683               	bcf	status, 6	;RP1=0, select bank1
  1444  0423  1303               	bsf	(1123/8)^080h,(1123)&7	;volatile
  1445  0424  158C               	line	132
  1446                           	
  1447                           l124:	
  1448  0425                     	return
  1449  0425  0008               	opt stack 0
  1450                           GLOBAL	__end_of_I2C_Slave_Init
  1451                           	__end_of_I2C_Slave_Init:
  1452  0426                     	signat	_I2C_Slave_Init,4217
  1453                           	global	_inicio
  1454                           
  1455 ;; *************** function _inicio *****************
  1456 ;; Defined at:
  1457 ;;		line 42 in file "mainS2.c"
  1458 ;; Parameters:    Size  Location     Type
  1459 ;;		None
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;		None
  1462 ;; Return value:  Size  Location     Type
  1463 ;;                  1    wreg      void 
  1464 ;; Registers used:
  1465 ;;		wreg, status,2
  1466 ;; Tracked objects:
  1467 ;;		On entry : 0/0
  1468 ;;		On exit  : 0/0
  1469 ;;		Unchanged: 0/0
  1470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1471 ;;      Params:         0       0       0       0       0
  1472 ;;      Locals:         0       0       0       0       0
  1473 ;;      Temps:          0       0       0       0       0
  1474 ;;      Totals:         0       0       0       0       0
  1475 ;;Total ram usage:        0 bytes
  1476 ;; Hardware stack levels used:    1
  1477 ;; Hardware stack levels required when called:    2
  1478 ;; This function calls:
  1479 ;;		Nothing
  1480 ;; This function is called by:
  1481 ;;		_main
  1482 ;; This function uses a non-reentrant model
  1483 ;;
  1484                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  1485                           	file	"mainS2.c"
  1486                           	line	42
  1487                           global __ptext3
  1488                           __ptext3:	;psect for function _inicio
  1489  03E7                     psect	text3
  1490                           	file	"mainS2.c"
  1491                           	line	42
  1492                           	global	__size_of_inicio
  1493                           	__size_of_inicio	equ	__end_of_inicio-_inicio
  1494  0023                     	
  1495                           _inicio:	
  1496  03E7                     ;incstack = 0
  1497                           	opt	stack 5
  1498                           ; Regs used in _inicio: [wreg+status,2]
  1499                           	line	44
  1500                           	
  1501                           l1278:	
  1502  03E7                     ;mainS2.c: 44:     TRISA = 0b00000011;
  1503                           	movlw	low(03h)
  1504  03E7  3003               	bsf	status, 5	;RP0=1, select bank1
  1505  03E8  1683               	bcf	status, 6	;RP1=0, select bank1
  1506  03E9  1303               	movwf	(133)^080h	;volatile
  1507  03EA  0085               	line	45
  1508                           ;mainS2.c: 45:     ANSEL = 0b00000011;
  1509                           	movlw	low(03h)
  1510  03EB  3003               	bsf	status, 5	;RP0=1, select bank3
  1511  03EC  1683               	bsf	status, 6	;RP1=1, select bank3
  1512  03ED  1703               	movwf	(392)^0180h	;volatile
  1513  03EE  0088               	line	46
  1514                           	
  1515                           l1280:	
  1516  03EF                     ;mainS2.c: 46:     PORTA = 0;
  1517                           	bcf	status, 5	;RP0=0, select bank0
  1518  03EF  1283               	bcf	status, 6	;RP1=0, select bank0
  1519  03F0  1303               	clrf	(5)	;volatile
  1520  03F1  0185               	line	48
  1521                           	
  1522                           l1282:	
  1523  03F2                     ;mainS2.c: 48:     ANSELH = 0;
  1524                           	bsf	status, 5	;RP0=1, select bank3
  1525  03F2  1683               	bsf	status, 6	;RP1=1, select bank3
  1526  03F3  1703               	clrf	(393)^0180h	;volatile
  1527  03F4  0189               	line	49
  1528                           ;mainS2.c: 49:     TRISB = 0b00000001;
  1529                           	movlw	low(01h)
  1530  03F5  3001               	bsf	status, 5	;RP0=1, select bank1
  1531  03F6  1683               	bcf	status, 6	;RP1=0, select bank1
  1532  03F7  1303               	movwf	(134)^080h	;volatile
  1533  03F8  0086               	line	50
  1534                           	
  1535                           l1284:	
  1536  03F9                     ;mainS2.c: 50:     PORTB = 0b00000000;
  1537                           	bcf	status, 5	;RP0=0, select bank0
  1538  03F9  1283               	bcf	status, 6	;RP1=0, select bank0
  1539  03FA  1303               	clrf	(6)	;volatile
  1540  03FB  0186               	line	52
  1541                           	
  1542                           l1286:	
  1543  03FC                     ;mainS2.c: 52:     TRISC = 0b11111111;
  1544                           	movlw	low(0FFh)
  1545  03FC  30FF               	bsf	status, 5	;RP0=1, select bank1
  1546  03FD  1683               	bcf	status, 6	;RP1=0, select bank1
  1547  03FE  1303               	movwf	(135)^080h	;volatile
  1548  03FF  0087               	line	53
  1549                           ;mainS2.c: 53:     PORTC = 0;
  1550                           	bcf	status, 5	;RP0=0, select bank0
  1551  0400  1283               	bcf	status, 6	;RP1=0, select bank0
  1552  0401  1303               	clrf	(7)	;volatile
  1553  0402  0187               	line	55
  1554                           ;mainS2.c: 55:     TRISD = 0;
  1555                           	bsf	status, 5	;RP0=1, select bank1
  1556  0403  1683               	bcf	status, 6	;RP1=0, select bank1
  1557  0404  1303               	clrf	(136)^080h	;volatile
  1558  0405  0188               	line	56
  1559                           ;mainS2.c: 56:     PORTD = 0;
  1560                           	bcf	status, 5	;RP0=0, select bank0
  1561  0406  1283               	bcf	status, 6	;RP1=0, select bank0
  1562  0407  1303               	clrf	(8)	;volatile
  1563  0408  0188               	line	57
  1564                           	
  1565                           l223:	
  1566  0409                     	return
  1567  0409  0008               	opt stack 0
  1568                           GLOBAL	__end_of_inicio
  1569                           	__end_of_inicio:
  1570  040A                     	signat	_inicio,89
  1571                           	global	_LeerADC
  1572                           
  1573 ;; *************** function _LeerADC *****************
  1574 ;; Defined at:
  1575 ;;		line 38 in file "LibSensorMovFoto.c"
  1576 ;; Parameters:    Size  Location     Type
  1577 ;;		None
  1578 ;; Auto vars:     Size  Location     Type
  1579 ;;		None
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, status,2, status,0, pclath, cstack
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1589 ;;      Params:         0       0       0       0       0
  1590 ;;      Locals:         0       0       0       0       0
  1591 ;;      Temps:          0       4       0       0       0
  1592 ;;      Totals:         0       4       0       0       0
  1593 ;;Total ram usage:        4 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    3
  1596 ;; This function calls:
  1597 ;;		___flge
  1598 ;;		___xxtofl
  1599 ;; This function is called by:
  1600 ;;		_main
  1601 ;; This function uses a non-reentrant model
  1602 ;;
  1603                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  1604                           	file	"LibSensorMovFoto.c"
  1605                           	line	38
  1606                           global __ptext4
  1607                           __ptext4:	;psect for function _LeerADC
  1608  0360                     psect	text4
  1609                           	file	"LibSensorMovFoto.c"
  1610                           	line	38
  1611                           	global	__size_of_LeerADC
  1612                           	__size_of_LeerADC	equ	__end_of_LeerADC-_LeerADC
  1613  0048                     	
  1614                           _LeerADC:	
  1615  0360                     ;incstack = 0
  1616                           	opt	stack 4
  1617                           ; Regs used in _LeerADC: [wreg+status,2+status,0+pclath+cstack]
  1618                           	line	40
  1619                           	
  1620                           l1268:	
  1621  0360                     ;LibSensorMovFoto.c: 40:     if (ADCON0bits.GO_DONE == 0){
  1622                           	bcf	status, 5	;RP0=0, select bank0
  1623  0360  1283               	bcf	status, 6	;RP1=0, select bank0
  1624  0361  1303               	btfsc	(31),1	;volatile
  1625  0362  189F               	goto	u861
  1626  0363  2B65               	goto	u860
  1627  0364  2B66               u861:
  1628  0365                     	goto	l95
  1629  0365  2BA7               u860:
  1630  0366                     	line	41
  1631                           	
  1632                           l1270:	
  1633  0366                     ;LibSensorMovFoto.c: 41:         ValorADC = ADRESH;
  1634                           	movf	(30),w	;volatile
  1635  0366  081E               	movwf	(??_LeerADC+0)+0
  1636  0367  00DB               	clrf	(??_LeerADC+0)+0+1
  1637  0368  01DC               	clrf	(??_LeerADC+0)+0+2
  1638  0369  01DD               	clrf	(??_LeerADC+0)+0+3
  1639  036A  01DE               	movf	3+(??_LeerADC+0)+0,w
  1640  036B  085E               	movwf	(___xxtofl@val+3)
  1641  036C  00CE               	movf	2+(??_LeerADC+0)+0,w
  1642  036D  085D               	movwf	(___xxtofl@val+2)
  1643  036E  00CD               	movf	1+(??_LeerADC+0)+0,w
  1644  036F  085C               	movwf	(___xxtofl@val+1)
  1645  0370  00CC               	movf	0+(??_LeerADC+0)+0,w
  1646  0371  085B               	movwf	(___xxtofl@val)
  1647  0372  00CB               
  1648                           	movlw	low(0)
  1649  0373  3000               	fcall	___xxtofl
  1650  0374  120A  118A  202D  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1651  0379  1283               	bcf	status, 6	;RP1=0, select bank0
  1652  037A  1303               	movf	(3+(?___xxtofl)),w
  1653  037B  084E               	movwf	(_ValorADC+3)
  1654  037C  00A3               	movf	(2+(?___xxtofl)),w
  1655  037D  084D               	movwf	(_ValorADC+2)
  1656  037E  00A2               	movf	(1+(?___xxtofl)),w
  1657  037F  084C               	movwf	(_ValorADC+1)
  1658  0380  00A1               	movf	(0+(?___xxtofl)),w
  1659  0381  084B               	movwf	(_ValorADC)
  1660  0382  00A0               
  1661                           	line	42
  1662                           ;LibSensorMovFoto.c: 42:         if (ValorADC <= 51){
  1663                           	movlw	0x42
  1664  0383  3042               	movwf	(___flge@ff1+3)
  1665  0384  00CE               	movlw	0x4c
  1666  0385  304C               	movwf	(___flge@ff1+2)
  1667  0386  00CD               	movlw	0x0
  1668  0387  3000               	movwf	(___flge@ff1+1)
  1669  0388  00CC               	movlw	0x0
  1670  0389  3000               	movwf	(___flge@ff1)
  1671  038A  00CB               
  1672                           	movf	(_ValorADC+3),w
  1673  038B  0823               	movwf	(___flge@ff2+3)
  1674  038C  00D2               	movf	(_ValorADC+2),w
  1675  038D  0822               	movwf	(___flge@ff2+2)
  1676  038E  00D1               	movf	(_ValorADC+1),w
  1677  038F  0821               	movwf	(___flge@ff2+1)
  1678  0390  00D0               	movf	(_ValorADC),w
  1679  0391  0820               	movwf	(___flge@ff2)
  1680  0392  00CF               
  1681                           	fcall	___flge
  1682  0393  120A  118A  20F1  120A  118A  	btfss	status,0
  1683  0398  1C03               	goto	u871
  1684  0399  2B9B               	goto	u870
  1685  039A  2B9C               u871:
  1686  039B                     	goto	l1274
  1687  039B  2BA1               u870:
  1688  039C                     	line	43
  1689                           	
  1690                           l1272:	
  1691  039C                     ;LibSensorMovFoto.c: 43:             Signal2 = 1;
  1692                           	bcf	status, 5	;RP0=0, select bank0
  1693  039C  1283               	bcf	status, 6	;RP1=0, select bank0
  1694  039D  1303               	clrf	(_Signal2)
  1695  039E  01BC               	incf	(_Signal2),f
  1696  039F  0ABC               	line	44
  1697                           ;LibSensorMovFoto.c: 44:         }else{
  1698                           	goto	l1276
  1699  03A0  2BA5               	
  1700                           l93:	
  1701  03A1                     	line	45
  1702                           	
  1703                           l1274:	
  1704  03A1                     ;LibSensorMovFoto.c: 45:             Signal2 = 0;
  1705                           	bcf	status, 5	;RP0=0, select bank0
  1706  03A1  1283               	bcf	status, 6	;RP1=0, select bank0
  1707  03A2  1303               	clrf	(_Signal2)
  1708  03A3  01BC               	goto	l1276
  1709  03A4  2BA5               	line	46
  1710                           ;LibSensorMovFoto.c: 46:         }
  1711                           	
  1712                           l94:	
  1713  03A5                     	line	47
  1714                           	
  1715                           l1276:	
  1716  03A5                     ;LibSensorMovFoto.c: 47:         ADCON0bits.GO_DONE = 1;
  1717                           	bsf	(31),1	;volatile
  1718  03A5  149F               	goto	l95
  1719  03A6  2BA7               	line	48
  1720                           ;LibSensorMovFoto.c: 48:     }
  1721                           	
  1722                           l92:	
  1723  03A7                     	line	49
  1724                           	
  1725                           l95:	
  1726  03A7                     	return
  1727  03A7  0008               	opt stack 0
  1728                           GLOBAL	__end_of_LeerADC
  1729                           	__end_of_LeerADC:
  1730  03A8                     	signat	_LeerADC,89
  1731                           	global	___xxtofl
  1732                           
  1733 ;; *************** function ___xxtofl *****************
  1734 ;; Defined at:
  1735 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  sign            1    wreg     unsigned char 
  1738 ;;  val             4    5[BANK0 ] long 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  sign            1   13[BANK0 ] unsigned char 
  1741 ;;  arg             4   15[BANK0 ] unsigned long 
  1742 ;;  exp             1   14[BANK0 ] unsigned char 
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  4    5[BANK0 ] unsigned char 
  1745 ;; Registers used:
  1746 ;;		wreg, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1752 ;;      Params:         0       4       0       0       0
  1753 ;;      Locals:         0       6       0       0       0
  1754 ;;      Temps:          0       4       0       0       0
  1755 ;;      Totals:         0      14       0       0       0
  1756 ;;Total ram usage:       14 bytes
  1757 ;; Hardware stack levels used:    1
  1758 ;; Hardware stack levels required when called:    2
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_LeerADC
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  1766                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  1767                           	line	10
  1768                           global __ptext5
  1769                           __ptext5:	;psect for function ___xxtofl
  1770  002D                     psect	text5
  1771                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  1772                           	line	10
  1773                           	global	__size_of___xxtofl
  1774                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  1775  00C4                     	
  1776                           ___xxtofl:	
  1777  002D                     ;incstack = 0
  1778                           	opt	stack 4
  1779                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  1780                           ;___xxtofl@sign stored from wreg
  1781                           	bcf	status, 5	;RP0=0, select bank0
  1782  002D  1283               	bcf	status, 6	;RP1=0, select bank0
  1783  002E  1303               	movwf	(___xxtofl@sign)
  1784  002F  00D3               	line	15
  1785                           	
  1786                           l1214:	
  1787  0030                     	movf	((___xxtofl@sign)),w
  1788  0030  0853               	btfsc	status,2
  1789  0031  1903               	goto	u721
  1790  0032  2834               	goto	u720
  1791  0033  2835               u721:
  1792  0034                     	goto	l1220
  1793  0034  2849               u720:
  1794  0035                     	
  1795                           l1216:	
  1796  0035                     	btfss	(___xxtofl@val+3),7
  1797  0035  1FCE               	goto	u731
  1798  0036  2838               	goto	u730
  1799  0037  2839               u731:
  1800  0038                     	goto	l1220
  1801  0038  2849               u730:
  1802  0039                     	line	16
  1803                           	
  1804                           l1218:	
  1805  0039                     	comf	(___xxtofl@val)+0,w
  1806  0039  094B               	movwf	(___xxtofl@arg)
  1807  003A  00D5               	comf	(___xxtofl@val)+1,w
  1808  003B  094C               	movwf	(___xxtofl@arg+1)
  1809  003C  00D6               	comf	(___xxtofl@val)+2,w
  1810  003D  094D               	movwf	(___xxtofl@arg+2)
  1811  003E  00D7               	comf	(___xxtofl@val)+3,w
  1812  003F  094E               	movwf	(___xxtofl@arg+3)
  1813  0040  00D8               	incf	(___xxtofl@arg),f
  1814  0041  0AD5               	skipnz
  1815  0042  1903               	incf	(___xxtofl@arg+1),f
  1816  0043  0AD6               	skipnz
  1817  0044  1903               	incf	(___xxtofl@arg+2),f
  1818  0045  0AD7               	skipnz
  1819  0046  1903               	incf	(___xxtofl@arg+3),f
  1820  0047  0AD8               	line	17
  1821                           	goto	l755
  1822  0048  2851               	line	18
  1823                           	
  1824                           l754:	
  1825  0049                     	line	19
  1826                           	
  1827                           l1220:	
  1828  0049                     	movf	(___xxtofl@val+3),w
  1829  0049  084E               	movwf	(___xxtofl@arg+3)
  1830  004A  00D8               	movf	(___xxtofl@val+2),w
  1831  004B  084D               	movwf	(___xxtofl@arg+2)
  1832  004C  00D7               	movf	(___xxtofl@val+1),w
  1833  004D  084C               	movwf	(___xxtofl@arg+1)
  1834  004E  00D6               	movf	(___xxtofl@val),w
  1835  004F  084B               	movwf	(___xxtofl@arg)
  1836  0050  00D5               
  1837                           	line	20
  1838                           	
  1839                           l755:	
  1840  0051                     	line	21
  1841                           	movf	(___xxtofl@val+3),w
  1842  0051  084E               	iorwf	(___xxtofl@val+2),w
  1843  0052  044D               	iorwf	(___xxtofl@val+1),w
  1844  0053  044C               	iorwf	(___xxtofl@val),w
  1845  0054  044B               	skipz
  1846  0055  1D03               	goto	u741
  1847  0056  2858               	goto	u740
  1848  0057  2859               u741:
  1849  0058                     	goto	l1226
  1850  0058  2863               u740:
  1851  0059                     	line	22
  1852                           	
  1853                           l1222:	
  1854  0059                     	movlw	0x0
  1855  0059  3000               	movwf	(?___xxtofl+3)
  1856  005A  00CE               	movlw	0x0
  1857  005B  3000               	movwf	(?___xxtofl+2)
  1858  005C  00CD               	movlw	0x0
  1859  005D  3000               	movwf	(?___xxtofl+1)
  1860  005E  00CC               	movlw	0x0
  1861  005F  3000               	movwf	(?___xxtofl)
  1862  0060  00CB               
  1863                           	goto	l757
  1864  0061  28F0               	
  1865                           l1224:	
  1866  0062                     	goto	l757
  1867  0062  28F0               	
  1868                           l756:	
  1869  0063                     	line	23
  1870                           	
  1871                           l1226:	
  1872  0063                     	movlw	low(096h)
  1873  0063  3096               	movwf	(??___xxtofl+0)+0
  1874  0064  00CF               	movf	(??___xxtofl+0)+0,w
  1875  0065  084F               	movwf	(___xxtofl@exp)
  1876  0066  00D4               	line	24
  1877                           	goto	l1230
  1878  0067  2876               	
  1879                           l759:	
  1880  0068                     	line	25
  1881                           	
  1882                           l1228:	
  1883  0068                     	movlw	low(01h)
  1884  0068  3001               	movwf	(??___xxtofl+0)+0
  1885  0069  00CF               	movf	(??___xxtofl+0)+0,w
  1886  006A  084F               	addwf	(___xxtofl@exp),f
  1887  006B  07D4               	line	26
  1888                           	movlw	01h
  1889  006C  3001               u755:
  1890  006D                     	clrc
  1891  006D  1003               	rrf	(___xxtofl@arg+3),f
  1892  006E  0CD8               	rrf	(___xxtofl@arg+2),f
  1893  006F  0CD7               	rrf	(___xxtofl@arg+1),f
  1894  0070  0CD6               	rrf	(___xxtofl@arg),f
  1895  0071  0CD5               	addlw	-1
  1896  0072  3EFF               	skipz
  1897  0073  1D03               	goto	u755
  1898  0074  286D               
  1899                           	goto	l1230
  1900  0075  2876               	line	27
  1901                           	
  1902                           l758:	
  1903  0076                     	line	24
  1904                           	
  1905                           l1230:	
  1906  0076                     	movlw	high highword(0FE000000h)
  1907  0076  30FE               	andwf	(___xxtofl@arg+3),w
  1908  0077  0558               	btfss	status,2
  1909  0078  1D03               	goto	u761
  1910  0079  287B               	goto	u760
  1911  007A  287C               u761:
  1912  007B                     	goto	l1228
  1913  007B  2868               u760:
  1914  007C                     	goto	l761
  1915  007C  2899               	
  1916                           l760:	
  1917  007D                     	line	28
  1918                           	goto	l761
  1919  007D  2899               	
  1920                           l762:	
  1921  007E                     	line	29
  1922                           	
  1923                           l1232:	
  1924  007E                     	movlw	low(01h)
  1925  007E  3001               	movwf	(??___xxtofl+0)+0
  1926  007F  00CF               	movf	(??___xxtofl+0)+0,w
  1927  0080  084F               	addwf	(___xxtofl@exp),f
  1928  0081  07D4               	line	30
  1929                           	
  1930                           l1234:	
  1931  0082                     	movlw	01h
  1932  0082  3001               	addwf	(___xxtofl@arg),f
  1933  0083  07D5               	movlw	0
  1934  0084  3000               	skipnc
  1935  0085  1803               movlw 1
  1936  0086  3001               	addwf	(___xxtofl@arg+1),f
  1937  0087  07D6               	movlw	0
  1938  0088  3000               	skipnc
  1939  0089  1803               movlw 1
  1940  008A  3001               	addwf	(___xxtofl@arg+2),f
  1941  008B  07D7               	movlw	0
  1942  008C  3000               	skipnc
  1943  008D  1803               movlw 1
  1944  008E  3001               	addwf	(___xxtofl@arg+3),f
  1945  008F  07D8               	line	31
  1946                           	
  1947                           l1236:	
  1948  0090                     	movlw	01h
  1949  0090  3001               u775:
  1950  0091                     	clrc
  1951  0091  1003               	rrf	(___xxtofl@arg+3),f
  1952  0092  0CD8               	rrf	(___xxtofl@arg+2),f
  1953  0093  0CD7               	rrf	(___xxtofl@arg+1),f
  1954  0094  0CD6               	rrf	(___xxtofl@arg),f
  1955  0095  0CD5               	addlw	-1
  1956  0096  3EFF               	skipz
  1957  0097  1D03               	goto	u775
  1958  0098  2891               
  1959                           	line	32
  1960                           	
  1961                           l761:	
  1962  0099                     	line	28
  1963                           	movlw	high highword(0FF000000h)
  1964  0099  30FF               	andwf	(___xxtofl@arg+3),w
  1965  009A  0558               	btfss	status,2
  1966  009B  1D03               	goto	u781
  1967  009C  289E               	goto	u780
  1968  009D  289F               u781:
  1969  009E                     	goto	l1232
  1970  009E  287E               u780:
  1971  009F                     	goto	l1240
  1972  009F  28AD               	
  1973                           l763:	
  1974  00A0                     	line	33
  1975                           	goto	l1240
  1976  00A0  28AD               	
  1977                           l765:	
  1978  00A1                     	line	34
  1979                           	
  1980                           l1238:	
  1981  00A1                     	movlw	01h
  1982  00A1  3001               	subwf	(___xxtofl@exp),f
  1983  00A2  02D4               	line	35
  1984                           	movlw	01h
  1985  00A3  3001               	movwf	(??___xxtofl+0)+0
  1986  00A4  00CF               u795:
  1987  00A5                     	clrc
  1988  00A5  1003               	rlf	(___xxtofl@arg),f
  1989  00A6  0DD5               	rlf	(___xxtofl@arg+1),f
  1990  00A7  0DD6               	rlf	(___xxtofl@arg+2),f
  1991  00A8  0DD7               	rlf	(___xxtofl@arg+3),f
  1992  00A9  0DD8               	decfsz	(??___xxtofl+0)+0
  1993  00AA  0BCF               	goto	u795
  1994  00AB  28A5               	goto	l1240
  1995  00AC  28AD               	line	36
  1996                           	
  1997                           l764:	
  1998  00AD                     	line	33
  1999                           	
  2000                           l1240:	
  2001  00AD                     	btfsc	(___xxtofl@arg+2),(23)&7
  2002  00AD  1BD7               	goto	u801
  2003  00AE  28B0               	goto	u800
  2004  00AF  28B1               u801:
  2005  00B0                     	goto	l768
  2006  00B0  28B8               u800:
  2007  00B1                     	
  2008                           l1242:	
  2009  00B1                     	movlw	low(02h)
  2010  00B1  3002               	subwf	(___xxtofl@exp),w
  2011  00B2  0254               	skipnc
  2012  00B3  1803               	goto	u811
  2013  00B4  28B6               	goto	u810
  2014  00B5  28B7               u811:
  2015  00B6                     	goto	l1238
  2016  00B6  28A1               u810:
  2017  00B7                     	goto	l768
  2018  00B7  28B8               	
  2019                           l767:	
  2020  00B8                     	
  2021                           l768:	
  2022  00B8                     	line	37
  2023                           	btfsc	(___xxtofl@exp),(0)&7
  2024  00B8  1854               	goto	u821
  2025  00B9  28BB               	goto	u820
  2026  00BA  28BC               u821:
  2027  00BB                     	goto	l769
  2028  00BB  28C4               u820:
  2029  00BC                     	line	38
  2030                           	
  2031                           l1244:	
  2032  00BC                     	movlw	0FFh
  2033  00BC  30FF               	andwf	(___xxtofl@arg),f
  2034  00BD  05D5               	movlw	0FFh
  2035  00BE  30FF               	andwf	(___xxtofl@arg+1),f
  2036  00BF  05D6               	movlw	07Fh
  2037  00C0  307F               	andwf	(___xxtofl@arg+2),f
  2038  00C1  05D7               	movlw	0FFh
  2039  00C2  30FF               	andwf	(___xxtofl@arg+3),f
  2040  00C3  05D8               	
  2041                           l769:	
  2042  00C4                     	line	39
  2043                           	clrc
  2044  00C4  1003               	rrf	(___xxtofl@exp),f
  2045  00C5  0CD4               
  2046                           	line	40
  2047                           	
  2048                           l1246:	
  2049  00C6                     	movf	(___xxtofl@exp),w
  2050  00C6  0854               	movwf	(??___xxtofl+0)+0
  2051  00C7  00CF               	clrf	(??___xxtofl+0)+0+1
  2052  00C8  01D0               	clrf	(??___xxtofl+0)+0+2
  2053  00C9  01D1               	clrf	(??___xxtofl+0)+0+3
  2054  00CA  01D2               	movlw	018h
  2055  00CB  3018               u835:
  2056  00CC                     	clrc
  2057  00CC  1003               	rlf	(??___xxtofl+0)+0,f
  2058  00CD  0DCF               	rlf	(??___xxtofl+0)+1,f
  2059  00CE  0DD0               	rlf	(??___xxtofl+0)+2,f
  2060  00CF  0DD1               	rlf	(??___xxtofl+0)+3,f
  2061  00D0  0DD2               u830:
  2062  00D1                     	addlw	-1
  2063  00D1  3EFF               	skipz
  2064  00D2  1D03               	goto	u835
  2065  00D3  28CC               	movf	0+(??___xxtofl+0)+0,w
  2066  00D4  084F               	iorwf	(___xxtofl@arg),f
  2067  00D5  04D5               	movf	1+(??___xxtofl+0)+0,w
  2068  00D6  0850               	iorwf	(___xxtofl@arg+1),f
  2069  00D7  04D6               	movf	2+(??___xxtofl+0)+0,w
  2070  00D8  0851               	iorwf	(___xxtofl@arg+2),f
  2071  00D9  04D7               	movf	3+(??___xxtofl+0)+0,w
  2072  00DA  0852               	iorwf	(___xxtofl@arg+3),f
  2073  00DB  04D8               	line	41
  2074                           	
  2075                           l1248:	
  2076  00DC                     	movf	((___xxtofl@sign)),w
  2077  00DC  0853               	btfsc	status,2
  2078  00DD  1903               	goto	u841
  2079  00DE  28E0               	goto	u840
  2080  00DF  28E1               u841:
  2081  00E0                     	goto	l1254
  2082  00E0  28E7               u840:
  2083  00E1                     	
  2084                           l1250:	
  2085  00E1                     	btfss	(___xxtofl@val+3),7
  2086  00E1  1FCE               	goto	u851
  2087  00E2  28E4               	goto	u850
  2088  00E3  28E5               u851:
  2089  00E4                     	goto	l1254
  2090  00E4  28E7               u850:
  2091  00E5                     	line	42
  2092                           	
  2093                           l1252:	
  2094  00E5                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  2095  00E5  17D8               	goto	l1254
  2096  00E6  28E7               	
  2097                           l770:	
  2098  00E7                     	line	43
  2099                           	
  2100                           l1254:	
  2101  00E7                     	movf	(___xxtofl@arg+3),w
  2102  00E7  0858               	movwf	(?___xxtofl+3)
  2103  00E8  00CE               	movf	(___xxtofl@arg+2),w
  2104  00E9  0857               	movwf	(?___xxtofl+2)
  2105  00EA  00CD               	movf	(___xxtofl@arg+1),w
  2106  00EB  0856               	movwf	(?___xxtofl+1)
  2107  00EC  00CC               	movf	(___xxtofl@arg),w
  2108  00ED  0855               	movwf	(?___xxtofl)
  2109  00EE  00CB               
  2110                           	goto	l757
  2111  00EF  28F0               	
  2112                           l1256:	
  2113  00F0                     	line	44
  2114                           	
  2115                           l757:	
  2116  00F0                     	return
  2117  00F0  0008               	opt stack 0
  2118                           GLOBAL	__end_of___xxtofl
  2119                           	__end_of___xxtofl:
  2120  00F1                     	signat	___xxtofl,8316
  2121                           	global	___flge
  2122                           
  2123 ;; *************** function ___flge *****************
  2124 ;; Defined at:
  2125 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  ff1             4    5[BANK0 ] unsigned char 
  2128 ;;  ff2             4    9[BANK0 ] unsigned char 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;		None
  2131 ;; Return value:  Size  Location     Type
  2132 ;;		None               void
  2133 ;; Registers used:
  2134 ;;		wreg, status,2, status,0
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2140 ;;      Params:         0       8       0       0       0
  2141 ;;      Locals:         0       0       0       0       0
  2142 ;;      Temps:          0       8       0       0       0
  2143 ;;      Totals:         0      16       0       0       0
  2144 ;;Total ram usage:       16 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    2
  2147 ;; This function calls:
  2148 ;;		Nothing
  2149 ;; This function is called by:
  2150 ;;		_LeerADC
  2151 ;; This function uses a non-reentrant model
  2152 ;;
  2153                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  2154                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
  2155                           	line	4
  2156                           global __ptext6
  2157                           __ptext6:	;psect for function ___flge
  2158  00F1                     psect	text6
  2159                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flge.c"
  2160                           	line	4
  2161                           	global	__size_of___flge
  2162                           	__size_of___flge	equ	__end_of___flge-___flge
  2163  00C3                     	
  2164                           ___flge:	
  2165  00F1                     ;incstack = 0
  2166                           	opt	stack 4
  2167                           ; Regs used in ___flge: [wreg+status,2+status,0]
  2168                           	line	7
  2169                           	
  2170                           l1188:	
  2171  00F1                     	movlw	0
  2172  00F1  3000               	bcf	status, 5	;RP0=0, select bank0
  2173  00F2  1283               	bcf	status, 6	;RP1=0, select bank0
  2174  00F3  1303               	andwf	(___flge@ff1),w
  2175  00F4  054B               	movwf	(??___flge+0)+0
  2176  00F5  00D3               	movlw	0
  2177  00F6  3000               	andwf	(___flge@ff1+1),w
  2178  00F7  054C               	movwf	((??___flge+0)+0+1)
  2179  00F8  00D4               	movlw	080h
  2180  00F9  3080               	andwf	(___flge@ff1+2),w
  2181  00FA  054D               	movwf	((??___flge+0)+0+2)
  2182  00FB  00D5               	movlw	07Fh
  2183  00FC  307F               	andwf	(___flge@ff1+3),w
  2184  00FD  054E               	movwf	((??___flge+0)+0+3)
  2185  00FE  00D6               	movf	3+(??___flge+0)+0,w
  2186  00FF  0856               	iorwf	2+(??___flge+0)+0,w
  2187  0100  0455               	iorwf	1+(??___flge+0)+0,w
  2188  0101  0454               	iorwf	0+(??___flge+0)+0,w
  2189  0102  0453               	skipz
  2190  0103  1D03               	goto	u651
  2191  0104  2906               	goto	u650
  2192  0105  2907               u651:
  2193  0106                     	goto	l521
  2194  0106  290F               u650:
  2195  0107                     	line	8
  2196                           	
  2197                           l1190:	
  2198  0107                     	movlw	high highword(0)
  2199  0107  3000               	movwf	(___flge@ff1+3)
  2200  0108  00CE               	movlw	low highword(0)
  2201  0109  3000               	movwf	(___flge@ff1+2)
  2202  010A  00CD               	movlw	high(0)
  2203  010B  3000               	movwf	(___flge@ff1+1)
  2204  010C  00CC               	movlw	low(0)
  2205  010D  3000               	movwf	(___flge@ff1)
  2206  010E  00CB               
  2207                           	
  2208                           l521:	
  2209  010F                     	line	9
  2210                           	movlw	0
  2211  010F  3000               	andwf	(___flge@ff2),w
  2212  0110  054F               	movwf	(??___flge+0)+0
  2213  0111  00D3               	movlw	0
  2214  0112  3000               	andwf	(___flge@ff2+1),w
  2215  0113  0550               	movwf	((??___flge+0)+0+1)
  2216  0114  00D4               	movlw	080h
  2217  0115  3080               	andwf	(___flge@ff2+2),w
  2218  0116  0551               	movwf	((??___flge+0)+0+2)
  2219  0117  00D5               	movlw	07Fh
  2220  0118  307F               	andwf	(___flge@ff2+3),w
  2221  0119  0552               	movwf	((??___flge+0)+0+3)
  2222  011A  00D6               	movf	3+(??___flge+0)+0,w
  2223  011B  0856               	iorwf	2+(??___flge+0)+0,w
  2224  011C  0455               	iorwf	1+(??___flge+0)+0,w
  2225  011D  0454               	iorwf	0+(??___flge+0)+0,w
  2226  011E  0453               	skipz
  2227  011F  1D03               	goto	u661
  2228  0120  2922               	goto	u660
  2229  0121  2923               u661:
  2230  0122                     	goto	l1194
  2231  0122  292C               u660:
  2232  0123                     	line	10
  2233                           	
  2234                           l1192:	
  2235  0123                     	movlw	high highword(0)
  2236  0123  3000               	movwf	(___flge@ff2+3)
  2237  0124  00D2               	movlw	low highword(0)
  2238  0125  3000               	movwf	(___flge@ff2+2)
  2239  0126  00D1               	movlw	high(0)
  2240  0127  3000               	movwf	(___flge@ff2+1)
  2241  0128  00D0               	movlw	low(0)
  2242  0129  3000               	movwf	(___flge@ff2)
  2243  012A  00CF               
  2244                           	goto	l1194
  2245  012B  292C               	
  2246                           l522:	
  2247  012C                     	line	12
  2248                           	
  2249                           l1194:	
  2250  012C                     	btfss	(___flge@ff1+3),(31)&7
  2251  012C  1FCE               	goto	u671
  2252  012D  292F               	goto	u670
  2253  012E  2930               u671:
  2254  012F                     	goto	l1198
  2255  012F  2962               u670:
  2256  0130                     	line	13
  2257                           	
  2258                           l1196:	
  2259  0130                     	movlw	0
  2260  0130  3000               	movwf	((??___flge+0)+0)
  2261  0131  00D3               	movlw	0
  2262  0132  3000               	movwf	((??___flge+0)+0+1)
  2263  0133  00D4               	movlw	0
  2264  0134  3000               	movwf	((??___flge+0)+0+2)
  2265  0135  00D5               	movlw	080h
  2266  0136  3080               	movwf	((??___flge+0)+0+3)
  2267  0137  00D6               	comf	(___flge@ff1),w
  2268  0138  094B               	movwf	(??___flge+4)+0
  2269  0139  00D7               	comf	(___flge@ff1+1),w
  2270  013A  094C               	movwf	((??___flge+4)+0+1)
  2271  013B  00D8               	comf	(___flge@ff1+2),w
  2272  013C  094D               	movwf	((??___flge+4)+0+2)
  2273  013D  00D9               	comf	(___flge@ff1+3),w
  2274  013E  094E               	movwf	((??___flge+4)+0+3)
  2275  013F  00DA               	incf	(??___flge+4)+0,f
  2276  0140  0AD7               	skipnz
  2277  0141  1903               	incf	((??___flge+4)+0+1),f
  2278  0142  0AD8               	skipnz
  2279  0143  1903               	incf	((??___flge+4)+0+2),f
  2280  0144  0AD9               	skipnz
  2281  0145  1903               	incf	((??___flge+4)+0+3),f
  2282  0146  0ADA               	movf	0+(??___flge+4)+0,w
  2283  0147  0857               	addwf	(??___flge+0)+0,f
  2284  0148  07D3               	movf	1+(??___flge+4)+0,w
  2285  0149  0858               	skipnc
  2286  014A  1803               	incfsz	1+(??___flge+4)+0,w
  2287  014B  0F58               	goto	u680
  2288  014C  294E               	goto	u681
  2289  014D  294F               u680:
  2290  014E                     	addwf	(??___flge+0)+1,f
  2291  014E  07D4               u681:
  2292  014F                     	movf	2+(??___flge+4)+0,w
  2293  014F  0859               	skipnc
  2294  0150  1803               	incfsz	2+(??___flge+4)+0,w
  2295  0151  0F59               	goto	u682
  2296  0152  2954               	goto	u683
  2297  0153  2955               u682:
  2298  0154                     	addwf	(??___flge+0)+2,f
  2299  0154  07D5               u683:
  2300  0155                     	movf	3+(??___flge+4)+0,w
  2301  0155  085A               	skipnc
  2302  0156  1803               	incf	3+(??___flge+4)+0,w
  2303  0157  0A5A               	addwf	(??___flge+0)+3,f
  2304  0158  07D6               	movf	3+(??___flge+0)+0,w
  2305  0159  0856               	movwf	(___flge@ff1+3)
  2306  015A  00CE               	movf	2+(??___flge+0)+0,w
  2307  015B  0855               	movwf	(___flge@ff1+2)
  2308  015C  00CD               	movf	1+(??___flge+0)+0,w
  2309  015D  0854               	movwf	(___flge@ff1+1)
  2310  015E  00CC               	movf	0+(??___flge+0)+0,w
  2311  015F  0853               	movwf	(___flge@ff1)
  2312  0160  00CB               
  2313                           	goto	l1198
  2314  0161  2962               	
  2315                           l523:	
  2316  0162                     	line	14
  2317                           	
  2318                           l1198:	
  2319  0162                     	btfss	(___flge@ff2+3),(31)&7
  2320  0162  1FD2               	goto	u691
  2321  0163  2965               	goto	u690
  2322  0164  2966               u691:
  2323  0165                     	goto	l1202
  2324  0165  2998               u690:
  2325  0166                     	line	15
  2326                           	
  2327                           l1200:	
  2328  0166                     	movlw	0
  2329  0166  3000               	movwf	((??___flge+0)+0)
  2330  0167  00D3               	movlw	0
  2331  0168  3000               	movwf	((??___flge+0)+0+1)
  2332  0169  00D4               	movlw	0
  2333  016A  3000               	movwf	((??___flge+0)+0+2)
  2334  016B  00D5               	movlw	080h
  2335  016C  3080               	movwf	((??___flge+0)+0+3)
  2336  016D  00D6               	comf	(___flge@ff2),w
  2337  016E  094F               	movwf	(??___flge+4)+0
  2338  016F  00D7               	comf	(___flge@ff2+1),w
  2339  0170  0950               	movwf	((??___flge+4)+0+1)
  2340  0171  00D8               	comf	(___flge@ff2+2),w
  2341  0172  0951               	movwf	((??___flge+4)+0+2)
  2342  0173  00D9               	comf	(___flge@ff2+3),w
  2343  0174  0952               	movwf	((??___flge+4)+0+3)
  2344  0175  00DA               	incf	(??___flge+4)+0,f
  2345  0176  0AD7               	skipnz
  2346  0177  1903               	incf	((??___flge+4)+0+1),f
  2347  0178  0AD8               	skipnz
  2348  0179  1903               	incf	((??___flge+4)+0+2),f
  2349  017A  0AD9               	skipnz
  2350  017B  1903               	incf	((??___flge+4)+0+3),f
  2351  017C  0ADA               	movf	0+(??___flge+4)+0,w
  2352  017D  0857               	addwf	(??___flge+0)+0,f
  2353  017E  07D3               	movf	1+(??___flge+4)+0,w
  2354  017F  0858               	skipnc
  2355  0180  1803               	incfsz	1+(??___flge+4)+0,w
  2356  0181  0F58               	goto	u700
  2357  0182  2984               	goto	u701
  2358  0183  2985               u700:
  2359  0184                     	addwf	(??___flge+0)+1,f
  2360  0184  07D4               u701:
  2361  0185                     	movf	2+(??___flge+4)+0,w
  2362  0185  0859               	skipnc
  2363  0186  1803               	incfsz	2+(??___flge+4)+0,w
  2364  0187  0F59               	goto	u702
  2365  0188  298A               	goto	u703
  2366  0189  298B               u702:
  2367  018A                     	addwf	(??___flge+0)+2,f
  2368  018A  07D5               u703:
  2369  018B                     	movf	3+(??___flge+4)+0,w
  2370  018B  085A               	skipnc
  2371  018C  1803               	incf	3+(??___flge+4)+0,w
  2372  018D  0A5A               	addwf	(??___flge+0)+3,f
  2373  018E  07D6               	movf	3+(??___flge+0)+0,w
  2374  018F  0856               	movwf	(___flge@ff2+3)
  2375  0190  00D2               	movf	2+(??___flge+0)+0,w
  2376  0191  0855               	movwf	(___flge@ff2+2)
  2377  0192  00D1               	movf	1+(??___flge+0)+0,w
  2378  0193  0854               	movwf	(___flge@ff2+1)
  2379  0194  00D0               	movf	0+(??___flge+0)+0,w
  2380  0195  0853               	movwf	(___flge@ff2)
  2381  0196  00CF               
  2382                           	goto	l1202
  2383  0197  2998               	
  2384                           l524:	
  2385  0198                     	line	16
  2386                           	
  2387                           l1202:	
  2388  0198                     	movlw	080h
  2389  0198  3080               	xorwf	(___flge@ff1+3),f
  2390  0199  06CE               	line	17
  2391                           	
  2392                           l1204:	
  2393  019A                     	movlw	080h
  2394  019A  3080               	xorwf	(___flge@ff2+3),f
  2395  019B  06D2               	line	18
  2396                           	
  2397                           l1206:	
  2398  019C                     	movf	(___flge@ff2+3),w
  2399  019C  0852               	subwf	(___flge@ff1+3),w
  2400  019D  024E               	skipz
  2401  019E  1D03               	goto	u715
  2402  019F  29AA               	movf	(___flge@ff2+2),w
  2403  01A0  0851               	subwf	(___flge@ff1+2),w
  2404  01A1  024D               	skipz
  2405  01A2  1D03               	goto	u715
  2406  01A3  29AA               	movf	(___flge@ff2+1),w
  2407  01A4  0850               	subwf	(___flge@ff1+1),w
  2408  01A5  024C               	skipz
  2409  01A6  1D03               	goto	u715
  2410  01A7  29AA               	movf	(___flge@ff2),w
  2411  01A8  084F               	subwf	(___flge@ff1),w
  2412  01A9  024B               u715:
  2413  01AA                     	skipnc
  2414  01AA  1803               	goto	u711
  2415  01AB  29AD               	goto	u710
  2416  01AC  29AE               u711:
  2417  01AD                     	goto	l1210
  2418  01AD  29B0               u710:
  2419  01AE                     	
  2420                           l1208:	
  2421  01AE                     	clrc
  2422  01AE  1003               	
  2423                           	goto	l525
  2424  01AF  29B3               	
  2425                           l1170:	
  2426  01B0                     	
  2427                           l1210:	
  2428  01B0                     	setc
  2429  01B0  1403               	
  2430                           	goto	l525
  2431  01B1  29B3               	
  2432                           l1172:	
  2433  01B2                     	goto	l525
  2434  01B2  29B3               	
  2435                           l1212:	
  2436  01B3                     	line	19
  2437                           	
  2438                           l525:	
  2439  01B3                     	return
  2440  01B3  0008               	opt stack 0
  2441                           GLOBAL	__end_of___flge
  2442                           	__end_of___flge:
  2443  01B4                     	signat	___flge,8312
  2444                           	global	_ADC
  2445                           
  2446 ;; *************** function _ADC *****************
  2447 ;; Defined at:
  2448 ;;		line 14 in file "LibSensorMovFoto.c"
  2449 ;; Parameters:    Size  Location     Type
  2450 ;;		None
  2451 ;; Auto vars:     Size  Location     Type
  2452 ;;		None
  2453 ;; Return value:  Size  Location     Type
  2454 ;;                  1    wreg      void 
  2455 ;; Registers used:
  2456 ;;		wreg
  2457 ;; Tracked objects:
  2458 ;;		On entry : 0/0
  2459 ;;		On exit  : 0/0
  2460 ;;		Unchanged: 0/0
  2461 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2462 ;;      Params:         0       0       0       0       0
  2463 ;;      Locals:         0       0       0       0       0
  2464 ;;      Temps:          0       0       0       0       0
  2465 ;;      Totals:         0       0       0       0       0
  2466 ;;Total ram usage:        0 bytes
  2467 ;; Hardware stack levels used:    1
  2468 ;; Hardware stack levels required when called:    2
  2469 ;; This function calls:
  2470 ;;		Nothing
  2471 ;; This function is called by:
  2472 ;;		_main
  2473 ;; This function uses a non-reentrant model
  2474 ;;
  2475                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  2476                           	file	"LibSensorMovFoto.c"
  2477                           	line	14
  2478                           global __ptext7
  2479                           __ptext7:	;psect for function _ADC
  2480  0436                     psect	text7
  2481                           	file	"LibSensorMovFoto.c"
  2482                           	line	14
  2483                           	global	__size_of_ADC
  2484                           	__size_of_ADC	equ	__end_of_ADC-_ADC
  2485  0010                     	
  2486                           _ADC:	
  2487  0436                     ;incstack = 0
  2488                           	opt	stack 5
  2489                           ; Regs used in _ADC: [wreg]
  2490                           	line	16
  2491                           	
  2492                           l1258:	
  2493  0436                     ;LibSensorMovFoto.c: 16:     INTCONbits.GIE = 1;
  2494                           	bsf	(11),7	;volatile
  2495  0436  178B               	line	17
  2496                           ;LibSensorMovFoto.c: 17:     INTCONbits.PEIE = 1;
  2497                           	bsf	(11),6	;volatile
  2498  0437  170B               	line	18
  2499                           ;LibSensorMovFoto.c: 18:     PIE1bits.ADIE = 1;
  2500                           	bsf	status, 5	;RP0=1, select bank1
  2501  0438  1683               	bcf	status, 6	;RP1=0, select bank1
  2502  0439  1303               	bsf	(140)^080h,6	;volatile
  2503  043A  170C               	line	19
  2504                           ;LibSensorMovFoto.c: 19:     PIR1bits.ADIF = 0;
  2505                           	bcf	status, 5	;RP0=0, select bank0
  2506  043B  1283               	bcf	status, 6	;RP1=0, select bank0
  2507  043C  1303               	bcf	(12),6	;volatile
  2508  043D  130C               	line	20
  2509                           	
  2510                           l1260:	
  2511  043E                     ;LibSensorMovFoto.c: 20:     ADCON0 = 0b10000001;
  2512                           	movlw	low(081h)
  2513  043E  3081               	movwf	(31)	;volatile
  2514  043F  009F               	line	21
  2515                           	
  2516                           l1262:	
  2517  0440                     ;LibSensorMovFoto.c: 21:     ADCON1bits.ADFM = 0;
  2518                           	bsf	status, 5	;RP0=1, select bank1
  2519  0440  1683               	bcf	status, 6	;RP1=0, select bank1
  2520  0441  1303               	bcf	(159)^080h,7	;volatile
  2521  0442  139F               	line	22
  2522                           	
  2523                           l1264:	
  2524  0443                     ;LibSensorMovFoto.c: 22:     ADCON1bits.VCFG1 = 0;
  2525                           	bcf	(159)^080h,5	;volatile
  2526  0443  129F               	line	23
  2527                           	
  2528                           l1266:	
  2529  0444                     ;LibSensorMovFoto.c: 23:     ADCON1bits.VCFG0 = 0;
  2530                           	bcf	(159)^080h,4	;volatile
  2531  0444  121F               	line	24
  2532                           	
  2533                           l83:	
  2534  0445                     	return
  2535  0445  0008               	opt stack 0
  2536                           GLOBAL	__end_of_ADC
  2537                           	__end_of_ADC:
  2538  0446                     	signat	_ADC,89
  2539                           	global	_isr
  2540                           
  2541 ;; *************** function _isr *****************
  2542 ;; Defined at:
  2543 ;;		line 67 in file "mainS2.c"
  2544 ;; Parameters:    Size  Location     Type
  2545 ;;		None
  2546 ;; Auto vars:     Size  Location     Type
  2547 ;;		None
  2548 ;; Return value:  Size  Location     Type
  2549 ;;                  1    wreg      void 
  2550 ;; Registers used:
  2551 ;;		wreg, status,2, status,0, pclath, cstack
  2552 ;; Tracked objects:
  2553 ;;		On entry : 0/0
  2554 ;;		On exit  : 0/0
  2555 ;;		Unchanged: 0/0
  2556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2557 ;;      Params:         0       0       0       0       0
  2558 ;;      Locals:         0       0       0       0       0
  2559 ;;      Temps:          0       5       0       0       0
  2560 ;;      Totals:         0       5       0       0       0
  2561 ;;Total ram usage:        5 bytes
  2562 ;; Hardware stack levels used:    1
  2563 ;; Hardware stack levels required when called:    1
  2564 ;; This function calls:
  2565 ;;		___awmod
  2566 ;;		___fltol
  2567 ;; This function is called by:
  2568 ;;		Interrupt level 1
  2569 ;; This function uses a non-reentrant model
  2570 ;;
  2571                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  2572                           	file	"mainS2.c"
  2573                           	line	67
  2574                           global __ptext8
  2575                           __ptext8:	;psect for function _isr
  2576  01B4                     psect	text8
  2577                           	file	"mainS2.c"
  2578                           	line	67
  2579                           	global	__size_of_isr
  2580                           	__size_of_isr	equ	__end_of_isr-_isr
  2581  00AF                     	
  2582                           _isr:	
  2583  01B4                     ;incstack = 0
  2584                           	opt	stack 4
  2585                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  2586                           psect	intentry,class=CODE,delta=2
  2587                           global __pintentry
  2588                           __pintentry:
  2589  0004                     global interrupt_function
  2590                           interrupt_function:
  2591  0004                     	global saved_w
  2592                           	saved_w	set	btemp+0
  2593  007E                     	movwf	saved_w
  2594  0004  00FE               	swapf	status,w
  2595  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
  2596  0006  1283               	bcf	status, 6	;RP1=0, select bank0
  2597  0007  1303               	movwf	(??_isr+3)
  2598  0008  00C9               	movf	pclath,w
  2599  0009  080A               	movwf	(??_isr+4)
  2600  000A  00CA               	ljmp	_isr
  2601  000B  120A  118A  29B4   psect	text8
  2602                           	line	69
  2603                           	
  2604                           i1l1366:	
  2605  01B4                     ;mainS2.c: 69:     if (ADCON0bits.GO_DONE == 0){
  2606                           	btfsc	(31),1	;volatile
  2607  01B4  189F               	goto	u107_21
  2608  01B5  29B7               	goto	u107_20
  2609  01B6  29B8               u107_21:
  2610  01B7                     	goto	i1l231
  2611  01B7  29BB               u107_20:
  2612  01B8                     	line	70
  2613                           	
  2614                           i1l1368:	
  2615  01B8                     ;mainS2.c: 70:         varADC = 1;
  2616                           	clrf	(_varADC)
  2617  01B8  01BB               	incf	(_varADC),f
  2618  01B9  0ABB               	line	71
  2619                           ;mainS2.c: 71:         PIR1bits.ADIF = 0;
  2620                           	bcf	(12),6	;volatile
  2621  01BA  130C               	line	72
  2622                           ;mainS2.c: 72:     }
  2623                           	
  2624                           i1l231:	
  2625  01BB                     	line	73
  2626                           ;mainS2.c: 73:     if(PIR1bits.SSPIF == 1){
  2627                           	btfss	(12),3	;volatile
  2628  01BB  1D8C               	goto	u108_21
  2629  01BC  29BE               	goto	u108_20
  2630  01BD  29BF               u108_21:
  2631  01BE                     	goto	i1l249
  2632  01BE  2A5C               u108_20:
  2633  01BF                     	line	74
  2634                           	
  2635                           i1l1370:	
  2636  01BF                     ;mainS2.c: 74:         SSPCONbits.CKP = 0;
  2637                           	bcf	(20),4	;volatile
  2638  01BF  1214               	line	75
  2639                           ;mainS2.c: 75:         if ((SSPCONbits.SSPOV) || (SSPCONbits.WCOL)){
  2640                           	btfsc	(20),6	;volatile
  2641  01C0  1B14               	goto	u109_21
  2642  01C1  29C3               	goto	u109_20
  2643  01C2  29C4               u109_21:
  2644  01C3                     	goto	i1l1374
  2645  01C3  29C9               u109_20:
  2646  01C4                     	
  2647                           i1l1372:	
  2648  01C4                     	btfss	(20),7	;volatile
  2649  01C4  1F94               	goto	u110_21
  2650  01C5  29C7               	goto	u110_20
  2651  01C6  29C8               u110_21:
  2652  01C7                     	goto	i1l1382
  2653  01C7  29D1               u110_20:
  2654  01C8                     	goto	i1l1374
  2655  01C8  29C9               	
  2656                           i1l235:	
  2657  01C9                     	line	76
  2658                           	
  2659                           i1l1374:	
  2660  01C9                     ;mainS2.c: 76:             z = SSPBUF;
  2661                           	movf	(19),w	;volatile
  2662  01C9  0813               	movwf	(??_isr+0)+0
  2663  01CA  00C6               	movf	(??_isr+0)+0,w
  2664  01CB  0846               	movwf	(_z)
  2665  01CC  00B9               	line	77
  2666                           	
  2667                           i1l1376:	
  2668  01CD                     ;mainS2.c: 77:             SSPCONbits.SSPOV = 0;
  2669                           	bcf	(20),6	;volatile
  2670  01CD  1314               	line	78
  2671                           	
  2672                           i1l1378:	
  2673  01CE                     ;mainS2.c: 78:             SSPCONbits.WCOL = 0;
  2674                           	bcf	(20),7	;volatile
  2675  01CE  1394               	line	79
  2676                           	
  2677                           i1l1380:	
  2678  01CF                     ;mainS2.c: 79:             SSPCONbits.CKP = 1;
  2679                           	bsf	(20),4	;volatile
  2680  01CF  1614               	goto	i1l1382
  2681  01D0  29D1               	line	80
  2682                           ;mainS2.c: 80:         }
  2683                           	
  2684                           i1l233:	
  2685  01D1                     	line	81
  2686                           	
  2687                           i1l1382:	
  2688  01D1                     ;mainS2.c: 81:         if(!SSPSTATbits.D_nA && !SSPSTATbits.R_nW) {
  2689                           	bsf	status, 5	;RP0=1, select bank1
  2690  01D1  1683               	bcf	status, 6	;RP1=0, select bank1
  2691  01D2  1303               	btfsc	(148)^080h,5	;volatile
  2692  01D3  1A94               	goto	u111_21
  2693  01D4  29D6               	goto	u111_20
  2694  01D5  29D7               u111_21:
  2695  01D6                     	goto	i1l236
  2696  01D6  29F7               u111_20:
  2697  01D7                     	
  2698                           i1l1384:	
  2699  01D7                     	btfsc	(148)^080h,2	;volatile
  2700  01D7  1914               	goto	u112_21
  2701  01D8  29DA               	goto	u112_20
  2702  01D9  29DB               u112_21:
  2703  01DA                     	goto	i1l236
  2704  01DA  29F7               u112_20:
  2705  01DB                     	line	83
  2706                           	
  2707                           i1l1386:	
  2708  01DB                     ;mainS2.c: 83:             z = SSPBUF;
  2709                           	bcf	status, 5	;RP0=0, select bank0
  2710  01DB  1283               	bcf	status, 6	;RP1=0, select bank0
  2711  01DC  1303               	movf	(19),w	;volatile
  2712  01DD  0813               	movwf	(??_isr+0)+0
  2713  01DE  00C6               	movf	(??_isr+0)+0,w
  2714  01DF  0846               	movwf	(_z)
  2715  01E0  00B9               	line	85
  2716                           	
  2717                           i1l1388:	
  2718  01E1                     ;mainS2.c: 85:             PIR1bits.SSPIF = 0;
  2719                           	bcf	(12),3	;volatile
  2720  01E1  118C               	line	86
  2721                           	
  2722                           i1l1390:	
  2723  01E2                     ;mainS2.c: 86:             SSPCONbits.CKP = 1;
  2724                           	bsf	(20),4	;volatile
  2725  01E2  1614               	line	87
  2726                           ;mainS2.c: 87:             while(!SSPSTATbits.BF);
  2727                           	goto	i1l237
  2728  01E3  29E4               	
  2729                           i1l238:	
  2730  01E4                     	
  2731                           i1l237:	
  2732  01E4                     	bsf	status, 5	;RP0=1, select bank1
  2733  01E4  1683               	bcf	status, 6	;RP1=0, select bank1
  2734  01E5  1303               	btfss	(148)^080h,0	;volatile
  2735  01E6  1C14               	goto	u113_21
  2736  01E7  29E9               	goto	u113_20
  2737  01E8  29EA               u113_21:
  2738  01E9                     	goto	i1l237
  2739  01E9  29E4               u113_20:
  2740  01EA                     	goto	i1l1392
  2741  01EA  29EB               	
  2742                           i1l239:	
  2743  01EB                     	line	88
  2744                           	
  2745                           i1l1392:	
  2746  01EB                     ;mainS2.c: 88:             PORTD = SSPBUF;
  2747                           	bcf	status, 5	;RP0=0, select bank0
  2748  01EB  1283               	bcf	status, 6	;RP1=0, select bank0
  2749  01EC  1303               	movf	(19),w	;volatile
  2750  01ED  0813               	movwf	(8)	;volatile
  2751  01EE  0088               	line	89
  2752                           ;mainS2.c: 89:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  2753                           	opt asmopt_push
  2754                           opt asmopt_off
  2755                           	movlw	82
  2756  01EF  3052               	bcf	status, 5	;RP0=0, select bank0
  2757  01F0  1283               	bcf	status, 6	;RP1=0, select bank0
  2758  01F1  1303               movwf	((??_isr+0)+0),f
  2759  01F2  00C6               	u122_27:
  2760  01F3                     decfsz	(??_isr+0)+0,f
  2761  01F3  0BC6               	goto	u122_27
  2762  01F4  29F3               	nop
  2763  01F5  0000               opt asmopt_pop
  2764                           
  2765                           	line	90
  2766                           ;mainS2.c: 90:         }
  2767                           	goto	i1l240
  2768  01F6  2A58               	line	91
  2769                           ;mainS2.c: 91:         else if(!SSPSTATbits.D_nA && SSPSTATbits.R_nW){
  2770                           	
  2771                           i1l236:	
  2772  01F7                     	btfsc	(148)^080h,5	;volatile
  2773  01F7  1A94               	goto	u114_21
  2774  01F8  29FA               	goto	u114_20
  2775  01F9  29FB               u114_21:
  2776  01FA                     	goto	i1l240
  2777  01FA  2A58               u114_20:
  2778  01FB                     	
  2779                           i1l1394:	
  2780  01FB                     	btfss	(148)^080h,2	;volatile
  2781  01FB  1D14               	goto	u115_21
  2782  01FC  29FE               	goto	u115_20
  2783  01FD  29FF               u115_21:
  2784  01FE                     	goto	i1l240
  2785  01FE  2A58               u115_20:
  2786  01FF                     	line	92
  2787                           	
  2788                           i1l1396:	
  2789  01FF                     ;mainS2.c: 92:             z = SSPBUF;
  2790                           	bcf	status, 5	;RP0=0, select bank0
  2791  01FF  1283               	bcf	status, 6	;RP1=0, select bank0
  2792  0200  1303               	movf	(19),w	;volatile
  2793  0201  0813               	movwf	(??_isr+0)+0
  2794  0202  00C6               	movf	(??_isr+0)+0,w
  2795  0203  0846               	movwf	(_z)
  2796  0204  00B9               	line	93
  2797                           	
  2798                           i1l1398:	
  2799  0205                     ;mainS2.c: 93:             BF = 0;
  2800                           	bsf	status, 5	;RP0=1, select bank1
  2801  0205  1683               	bcf	status, 6	;RP1=0, select bank1
  2802  0206  1303               	bcf	(1184/8)^080h,(1184)&7	;volatile
  2803  0207  1014               	line	94
  2804                           	
  2805                           i1l1400:	
  2806  0208                     ;mainS2.c: 94:             select = counter%3;
  2807                           	movlw	03h
  2808  0208  3003               	movwf	(___awmod@divisor)
  2809  0209  00F0               	movlw	0
  2810  020A  3000               	movwf	((___awmod@divisor))+1
  2811  020B  00F1               	movf	(_counter),w
  2812  020C  087B               	bcf	status, 5	;RP0=0, select bank0
  2813  020D  1283               	bcf	status, 6	;RP1=0, select bank0
  2814  020E  1303               	movwf	(??_isr+0)+0
  2815  020F  00C6               	clrf	(??_isr+0)+0+1
  2816  0210  01C7               	movf	0+(??_isr+0)+0,w
  2817  0211  0846               	movwf	(___awmod@dividend)
  2818  0212  00F2               	movf	1+(??_isr+0)+0,w
  2819  0213  0847               	movwf	(___awmod@dividend+1)
  2820  0214  00F3               	fcall	___awmod
  2821  0215  120A  118A  22FD  120A  118A  	movf	(0+(?___awmod)),w
  2822  021A  0870               	bcf	status, 5	;RP0=0, select bank0
  2823  021B  1283               	bcf	status, 6	;RP1=0, select bank0
  2824  021C  1303               	movwf	(??_isr+2)+0
  2825  021D  00C8               	movf	(??_isr+2)+0,w
  2826  021E  0848               	movwf	(_select)
  2827  021F  00FD               	line	95
  2828                           	
  2829                           i1l1402:	
  2830  0220                     ;mainS2.c: 95:             if(select == 0){
  2831                           	movf	((_select)),w
  2832  0220  087D               	btfss	status,2
  2833  0221  1D03               	goto	u116_21
  2834  0222  2A24               	goto	u116_20
  2835  0223  2A25               u116_21:
  2836  0224                     	goto	i1l1406
  2837  0224  2A28               u116_20:
  2838  0225                     	line	96
  2839                           	
  2840                           i1l1404:	
  2841  0225                     ;mainS2.c: 96:                 SSPBUF = SendSignal;
  2842                           	movf	(_SendSignal),w
  2843  0225  087C               	movwf	(19)	;volatile
  2844  0226  0093               	line	97
  2845                           ;mainS2.c: 97:             }else if(select == 1){
  2846                           	goto	i1l1412
  2847  0227  2A43               	
  2848                           i1l242:	
  2849  0228                     	
  2850                           i1l1406:	
  2851  0228                     		decf	((_select)),w
  2852  0228  037D               	btfss	status,2
  2853  0229  1D03               	goto	u117_21
  2854  022A  2A2C               	goto	u117_20
  2855  022B  2A2D               u117_21:
  2856  022C                     	goto	i1l1410
  2857  022C  2A3F               u117_20:
  2858  022D                     	line	98
  2859                           	
  2860                           i1l1408:	
  2861  022D                     ;mainS2.c: 98:                 SSPBUF = ValorADC;
  2862                           	movf	(_ValorADC+3),w
  2863  022D  0823               	movwf	(___fltol@f1+3)
  2864  022E  00F3               	movf	(_ValorADC+2),w
  2865  022F  0822               	movwf	(___fltol@f1+2)
  2866  0230  00F2               	movf	(_ValorADC+1),w
  2867  0231  0821               	movwf	(___fltol@f1+1)
  2868  0232  00F1               	movf	(_ValorADC),w
  2869  0233  0820               	movwf	(___fltol@f1)
  2870  0234  00F0               
  2871                           	fcall	___fltol
  2872  0235  120A  118A  2263  120A  118A  	movf	(0+(?___fltol)),w
  2873  023A  0870               	bcf	status, 5	;RP0=0, select bank0
  2874  023B  1283               	bcf	status, 6	;RP1=0, select bank0
  2875  023C  1303               	movwf	(19)	;volatile
  2876  023D  0093               	line	99
  2877                           ;mainS2.c: 99:             }else{
  2878                           	goto	i1l1412
  2879  023E  2A43               	
  2880                           i1l244:	
  2881  023F                     	line	100
  2882                           	
  2883                           i1l1410:	
  2884  023F                     ;mainS2.c: 100:                 SSPBUF = VarMOV;
  2885                           	movf	(_VarMOV),w
  2886  023F  0862               	movwf	(19)	;volatile
  2887  0240  0093               	goto	i1l1412
  2888  0241  2A43               	line	101
  2889                           ;mainS2.c: 101:             }
  2890                           	
  2891                           i1l245:	
  2892  0242                     	goto	i1l1412
  2893  0242  2A43               	
  2894                           i1l243:	
  2895  0243                     	line	102
  2896                           	
  2897                           i1l1412:	
  2898  0243                     ;mainS2.c: 102:             counter++;
  2899                           	movlw	low(01h)
  2900  0243  3001               	movwf	(??_isr+0)+0
  2901  0244  00C6               	movf	(??_isr+0)+0,w
  2902  0245  0846               	addwf	(_counter),f
  2903  0246  07FB               	line	103
  2904                           	
  2905                           i1l1414:	
  2906  0247                     ;mainS2.c: 103:             SSPCONbits.CKP = 1;
  2907                           	bsf	(20),4	;volatile
  2908  0247  1614               	line	104
  2909                           	
  2910                           i1l1416:	
  2911  0248                     ;mainS2.c: 104:             _delay((unsigned long)((250)*(4000000/4000000.0)));
  2912                           	opt asmopt_push
  2913                           opt asmopt_off
  2914                           	movlw	82
  2915  0248  3052               	bcf	status, 5	;RP0=0, select bank0
  2916  0249  1283               	bcf	status, 6	;RP1=0, select bank0
  2917  024A  1303               movwf	((??_isr+0)+0),f
  2918  024B  00C6               	u123_27:
  2919  024C                     decfsz	(??_isr+0)+0,f
  2920  024C  0BC6               	goto	u123_27
  2921  024D  2A4C               	nop
  2922  024E  0000               opt asmopt_pop
  2923                           
  2924                           	line	105
  2925                           ;mainS2.c: 105:             while(SSPSTATbits.BF);
  2926                           	goto	i1l246
  2927  024F  2A50               	
  2928                           i1l247:	
  2929  0250                     	
  2930                           i1l246:	
  2931  0250                     	bsf	status, 5	;RP0=1, select bank1
  2932  0250  1683               	bcf	status, 6	;RP1=0, select bank1
  2933  0251  1303               	btfsc	(148)^080h,0	;volatile
  2934  0252  1814               	goto	u118_21
  2935  0253  2A55               	goto	u118_20
  2936  0254  2A56               u118_21:
  2937  0255                     	goto	i1l246
  2938  0255  2A50               u118_20:
  2939  0256                     	goto	i1l240
  2940  0256  2A58               	
  2941                           i1l248:	
  2942  0257                     	goto	i1l240
  2943  0257  2A58               	line	106
  2944                           ;mainS2.c: 106:         }
  2945                           	
  2946                           i1l241:	
  2947  0258                     	
  2948                           i1l240:	
  2949  0258                     	line	107
  2950                           ;mainS2.c: 107:         PIR1bits.SSPIF = 0;
  2951                           	bcf	status, 5	;RP0=0, select bank0
  2952  0258  1283               	bcf	status, 6	;RP1=0, select bank0
  2953  0259  1303               	bcf	(12),3	;volatile
  2954  025A  118C               	goto	i1l249
  2955  025B  2A5C               	line	108
  2956                           ;mainS2.c: 108:     }
  2957                           	
  2958                           i1l232:	
  2959  025C                     	line	109
  2960                           	
  2961                           i1l249:	
  2962  025C                     	movf	(??_isr+4),w
  2963  025C  084A               	movwf	pclath
  2964  025D  008A               	swapf	(??_isr+3)^00h,w
  2965  025E  0E49               	movwf	status
  2966  025F  0083               	swapf	saved_w,f
  2967  0260  0EFE               	swapf	saved_w,w
  2968  0261  0E7E               	retfie
  2969  0262  0009               	opt stack 0
  2970                           GLOBAL	__end_of_isr
  2971                           	__end_of_isr:
  2972  0263                     	signat	_isr,89
  2973                           	global	___fltol
  2974                           
  2975 ;; *************** function ___fltol *****************
  2976 ;; Defined at:
  2977 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  2978 ;; Parameters:    Size  Location     Type
  2979 ;;  f1              4    0[COMMON] void 
  2980 ;; Auto vars:     Size  Location     Type
  2981 ;;  exp1            1   10[COMMON] unsigned char 
  2982 ;;  sign1           1    9[COMMON] unsigned char 
  2983 ;; Return value:  Size  Location     Type
  2984 ;;                  4    0[COMMON] long 
  2985 ;; Registers used:
  2986 ;;		wreg, status,2, status,0
  2987 ;; Tracked objects:
  2988 ;;		On entry : 0/0
  2989 ;;		On exit  : 0/0
  2990 ;;		Unchanged: 0/0
  2991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2992 ;;      Params:         4       0       0       0       0
  2993 ;;      Locals:         2       0       0       0       0
  2994 ;;      Temps:          5       0       0       0       0
  2995 ;;      Totals:        11       0       0       0       0
  2996 ;;Total ram usage:       11 bytes
  2997 ;; Hardware stack levels used:    1
  2998 ;; This function calls:
  2999 ;;		Nothing
  3000 ;; This function is called by:
  3001 ;;		_isr
  3002 ;; This function uses a non-reentrant model
  3003 ;;
  3004                           psect	text9,local,class=CODE,delta=2,merge=1,group=1
  3005                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  3006                           	line	43
  3007                           global __ptext9
  3008                           __ptext9:	;psect for function ___fltol
  3009  0263                     psect	text9
  3010                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  3011                           	line	43
  3012                           	global	__size_of___fltol
  3013                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  3014  009A                     	
  3015                           ___fltol:	
  3016  0263                     ;incstack = 0
  3017                           	opt	stack 4
  3018                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  3019                           	line	47
  3020                           	
  3021                           i1l1330:	
  3022  0263                     	movf	(___fltol@f1),w
  3023  0263  0870               	movwf	(??___fltol+0)+0
  3024  0264  00F4               	movf	(___fltol@f1+1),w
  3025  0265  0871               	movwf	((??___fltol+0)+0+1)
  3026  0266  00F5               	movf	(___fltol@f1+2),w
  3027  0267  0872               	movwf	((??___fltol+0)+0+2)
  3028  0268  00F6               	movf	(___fltol@f1+3),w
  3029  0269  0873               	movwf	((??___fltol+0)+0+3)
  3030  026A  00F7               	clrc
  3031  026B  1003               	rlf	(??___fltol+0)+2,w
  3032  026C  0D76               	rlf	(??___fltol+0)+3,w
  3033  026D  0D77               	movwf	(??___fltol+4)+0
  3034  026E  00F8               	movf	(??___fltol+4)+0,w
  3035  026F  0878               	movwf	(___fltol@exp1)
  3036  0270  00FA               	movf	(((___fltol@exp1))),w
  3037  0271  087A               	btfss	status,2
  3038  0272  1D03               	goto	u97_21
  3039  0273  2A75               	goto	u97_20
  3040  0274  2A76               u97_21:
  3041  0275                     	goto	i1l1336
  3042  0275  2A80               u97_20:
  3043  0276                     	line	48
  3044                           	
  3045                           i1l1332:	
  3046  0276                     	movlw	high highword(0)
  3047  0276  3000               	movwf	(?___fltol+3)
  3048  0277  00F3               	movlw	low highword(0)
  3049  0278  3000               	movwf	(?___fltol+2)
  3050  0279  00F2               	movlw	high(0)
  3051  027A  3000               	movwf	(?___fltol+1)
  3052  027B  00F1               	movlw	low(0)
  3053  027C  3000               	movwf	(?___fltol)
  3054  027D  00F0               
  3055                           	goto	i1l533
  3056  027E  2AFC               	
  3057                           i1l1334:	
  3058  027F                     	goto	i1l533
  3059  027F  2AFC               	
  3060                           i1l532:	
  3061  0280                     	line	49
  3062                           	
  3063                           i1l1336:	
  3064  0280                     	movf	(___fltol@f1),w
  3065  0280  0870               	movwf	(??___fltol+0)+0
  3066  0281  00F4               	movf	(___fltol@f1+1),w
  3067  0282  0871               	movwf	((??___fltol+0)+0+1)
  3068  0283  00F5               	movf	(___fltol@f1+2),w
  3069  0284  0872               	movwf	((??___fltol+0)+0+2)
  3070  0285  00F6               	movf	(___fltol@f1+3),w
  3071  0286  0873               	movwf	((??___fltol+0)+0+3)
  3072  0287  00F7               	movlw	01Fh
  3073  0288  301F               u98_25:
  3074  0289                     	clrc
  3075  0289  1003               	rrf	(??___fltol+0)+3,f
  3076  028A  0CF7               	rrf	(??___fltol+0)+2,f
  3077  028B  0CF6               	rrf	(??___fltol+0)+1,f
  3078  028C  0CF5               	rrf	(??___fltol+0)+0,f
  3079  028D  0CF4               u98_20:
  3080  028E                     	addlw	-1
  3081  028E  3EFF               	skipz
  3082  028F  1D03               	goto	u98_25
  3083  0290  2A89               	movf	0+(??___fltol+0)+0,w
  3084  0291  0874               	movwf	(??___fltol+4)+0
  3085  0292  00F8               	movf	(??___fltol+4)+0,w
  3086  0293  0878               	movwf	(___fltol@sign1)
  3087  0294  00F9               	line	50
  3088                           	
  3089                           i1l1338:	
  3090  0295                     	bsf	(___fltol@f1)+(23/8),(23)&7
  3091  0295  17F2               	line	51
  3092                           	
  3093                           i1l1340:	
  3094  0296                     	movlw	0FFh
  3095  0296  30FF               	andwf	(___fltol@f1),f
  3096  0297  05F0               	movlw	0FFh
  3097  0298  30FF               	andwf	(___fltol@f1+1),f
  3098  0299  05F1               	movlw	0FFh
  3099  029A  30FF               	andwf	(___fltol@f1+2),f
  3100  029B  05F2               	movlw	0
  3101  029C  3000               	andwf	(___fltol@f1+3),f
  3102  029D  05F3               	line	52
  3103                           	
  3104                           i1l1342:	
  3105  029E                     	movlw	096h
  3106  029E  3096               	subwf	(___fltol@exp1),f
  3107  029F  02FA               	line	53
  3108                           	
  3109                           i1l1344:	
  3110  02A0                     	btfss	(___fltol@exp1),7
  3111  02A0  1FFA               	goto	u99_21
  3112  02A1  2AA3               	goto	u99_20
  3113  02A2  2AA4               u99_21:
  3114  02A3                     	goto	i1l1354
  3115  02A3  2AC9               u99_20:
  3116  02A4                     	line	54
  3117                           	
  3118                           i1l1346:	
  3119  02A4                     	movf	(___fltol@exp1),w
  3120  02A4  087A               	xorlw	80h
  3121  02A5  3A80               	addlw	-((-23)^80h)
  3122  02A6  3E97               	skipnc
  3123  02A7  1803               	goto	u100_21
  3124  02A8  2AAA               	goto	u100_20
  3125  02A9  2AAB               u100_21:
  3126  02AA                     	goto	i1l1352
  3127  02AA  2AB6               u100_20:
  3128  02AB                     	line	55
  3129                           	
  3130                           i1l1348:	
  3131  02AB                     	movlw	high highword(0)
  3132  02AB  3000               	movwf	(?___fltol+3)
  3133  02AC  00F3               	movlw	low highword(0)
  3134  02AD  3000               	movwf	(?___fltol+2)
  3135  02AE  00F2               	movlw	high(0)
  3136  02AF  3000               	movwf	(?___fltol+1)
  3137  02B0  00F1               	movlw	low(0)
  3138  02B1  3000               	movwf	(?___fltol)
  3139  02B2  00F0               
  3140                           	goto	i1l533
  3141  02B3  2AFC               	
  3142                           i1l1350:	
  3143  02B4                     	goto	i1l533
  3144  02B4  2AFC               	
  3145                           i1l535:	
  3146  02B5                     	goto	i1l1352
  3147  02B5  2AB6               	line	56
  3148                           	
  3149                           i1l536:	
  3150  02B6                     	line	57
  3151                           	
  3152                           i1l1352:	
  3153  02B6                     	movlw	01h
  3154  02B6  3001               u101_25:
  3155  02B7                     	clrc
  3156  02B7  1003               	rrf	(___fltol@f1+3),f
  3157  02B8  0CF3               	rrf	(___fltol@f1+2),f
  3158  02B9  0CF2               	rrf	(___fltol@f1+1),f
  3159  02BA  0CF1               	rrf	(___fltol@f1),f
  3160  02BB  0CF0               	addlw	-1
  3161  02BC  3EFF               	skipz
  3162  02BD  1D03               	goto	u101_25
  3163  02BE  2AB7               
  3164                           	line	58
  3165                           	movlw	low(01h)
  3166  02BF  3001               	movwf	(??___fltol+0)+0
  3167  02C0  00F4               	movf	(??___fltol+0)+0,w
  3168  02C1  0874               	addwf	(___fltol@exp1),f
  3169  02C2  07FA               	btfss	status,2
  3170  02C3  1D03               	goto	u102_21
  3171  02C4  2AC6               	goto	u102_20
  3172  02C5  2AC7               u102_21:
  3173  02C6                     	goto	i1l1352
  3174  02C6  2AB6               u102_20:
  3175  02C7                     	goto	i1l1362
  3176  02C7  2AEC               	
  3177                           i1l537:	
  3178  02C8                     	line	59
  3179                           	goto	i1l1362
  3180  02C8  2AEC               	
  3181                           i1l534:	
  3182  02C9                     	line	60
  3183                           	
  3184                           i1l1354:	
  3185  02C9                     	movlw	low(020h)
  3186  02C9  3020               	subwf	(___fltol@exp1),w
  3187  02CA  027A               	skipc
  3188  02CB  1C03               	goto	u103_21
  3189  02CC  2ACE               	goto	u103_20
  3190  02CD  2ACF               u103_21:
  3191  02CE                     	goto	i1l540
  3192  02CE  2AE5               u103_20:
  3193  02CF                     	line	61
  3194                           	
  3195                           i1l1356:	
  3196  02CF                     	movlw	high highword(0)
  3197  02CF  3000               	movwf	(?___fltol+3)
  3198  02D0  00F3               	movlw	low highword(0)
  3199  02D1  3000               	movwf	(?___fltol+2)
  3200  02D2  00F2               	movlw	high(0)
  3201  02D3  3000               	movwf	(?___fltol+1)
  3202  02D4  00F1               	movlw	low(0)
  3203  02D5  3000               	movwf	(?___fltol)
  3204  02D6  00F0               
  3205                           	goto	i1l533
  3206  02D7  2AFC               	
  3207                           i1l1358:	
  3208  02D8                     	goto	i1l533
  3209  02D8  2AFC               	
  3210                           i1l539:	
  3211  02D9                     	line	62
  3212                           	goto	i1l540
  3213  02D9  2AE5               	
  3214                           i1l541:	
  3215  02DA                     	line	63
  3216                           	
  3217                           i1l1360:	
  3218  02DA                     	movlw	01h
  3219  02DA  3001               	movwf	(??___fltol+0)+0
  3220  02DB  00F4               u104_25:
  3221  02DC                     	clrc
  3222  02DC  1003               	rlf	(___fltol@f1),f
  3223  02DD  0DF0               	rlf	(___fltol@f1+1),f
  3224  02DE  0DF1               	rlf	(___fltol@f1+2),f
  3225  02DF  0DF2               	rlf	(___fltol@f1+3),f
  3226  02E0  0DF3               	decfsz	(??___fltol+0)+0
  3227  02E1  0BF4               	goto	u104_25
  3228  02E2  2ADC               	line	64
  3229                           	movlw	01h
  3230  02E3  3001               	subwf	(___fltol@exp1),f
  3231  02E4  02FA               	line	65
  3232                           	
  3233                           i1l540:	
  3234  02E5                     	line	62
  3235                           	movf	((___fltol@exp1)),w
  3236  02E5  087A               	btfss	status,2
  3237  02E6  1D03               	goto	u105_21
  3238  02E7  2AE9               	goto	u105_20
  3239  02E8  2AEA               u105_21:
  3240  02E9                     	goto	i1l1360
  3241  02E9  2ADA               u105_20:
  3242  02EA                     	goto	i1l1362
  3243  02EA  2AEC               	
  3244                           i1l542:	
  3245  02EB                     	goto	i1l1362
  3246  02EB  2AEC               	line	66
  3247                           	
  3248                           i1l538:	
  3249  02EC                     	line	67
  3250                           	
  3251                           i1l1362:	
  3252  02EC                     	movf	((___fltol@sign1)),w
  3253  02EC  0879               	btfsc	status,2
  3254  02ED  1903               	goto	u106_21
  3255  02EE  2AF0               	goto	u106_20
  3256  02EF  2AF1               u106_21:
  3257  02F0                     	goto	i1l543
  3258  02F0  2AFC               u106_20:
  3259  02F1                     	line	68
  3260                           	
  3261                           i1l1364:	
  3262  02F1                     	comf	(___fltol@f1),f
  3263  02F1  09F0               	comf	(___fltol@f1+1),f
  3264  02F2  09F1               	comf	(___fltol@f1+2),f
  3265  02F3  09F2               	comf	(___fltol@f1+3),f
  3266  02F4  09F3               	incf	(___fltol@f1),f
  3267  02F5  0AF0               	skipnz
  3268  02F6  1903               	incf	(___fltol@f1+1),f
  3269  02F7  0AF1               	skipnz
  3270  02F8  1903               	incf	(___fltol@f1+2),f
  3271  02F9  0AF2               	skipnz
  3272  02FA  1903               	incf	(___fltol@f1+3),f
  3273  02FB  0AF3               	
  3274                           i1l543:	
  3275  02FC                     	line	69
  3276                           	line	70
  3277                           	
  3278                           i1l533:	
  3279  02FC                     	return
  3280  02FC  0008               	opt stack 0
  3281                           GLOBAL	__end_of___fltol
  3282                           	__end_of___fltol:
  3283  02FD                     	signat	___fltol,4220
  3284                           	global	___awmod
  3285                           
  3286 ;; *************** function ___awmod *****************
  3287 ;; Defined at:
  3288 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3289 ;; Parameters:    Size  Location     Type
  3290 ;;  divisor         2    0[COMMON] int 
  3291 ;;  dividend        2    2[COMMON] int 
  3292 ;; Auto vars:     Size  Location     Type
  3293 ;;  sign            1    6[COMMON] unsigned char 
  3294 ;;  counter         1    5[COMMON] unsigned char 
  3295 ;; Return value:  Size  Location     Type
  3296 ;;                  2    0[COMMON] int 
  3297 ;; Registers used:
  3298 ;;		wreg, status,2, status,0
  3299 ;; Tracked objects:
  3300 ;;		On entry : 0/0
  3301 ;;		On exit  : 0/0
  3302 ;;		Unchanged: 0/0
  3303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3304 ;;      Params:         4       0       0       0       0
  3305 ;;      Locals:         2       0       0       0       0
  3306 ;;      Temps:          1       0       0       0       0
  3307 ;;      Totals:         7       0       0       0       0
  3308 ;;Total ram usage:        7 bytes
  3309 ;; Hardware stack levels used:    1
  3310 ;; This function calls:
  3311 ;;		Nothing
  3312 ;; This function is called by:
  3313 ;;		_isr
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           psect	text10,local,class=CODE,delta=2,merge=1,group=1
  3317                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3318                           	line	5
  3319                           global __ptext10
  3320                           __ptext10:	;psect for function ___awmod
  3321  02FD                     psect	text10
  3322                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  3323                           	line	5
  3324                           	global	__size_of___awmod
  3325                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  3326  0063                     	
  3327                           ___awmod:	
  3328  02FD                     ;incstack = 0
  3329                           	opt	stack 4
  3330                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3331                           	line	12
  3332                           	
  3333                           i1l1292:	
  3334  02FD                     	clrf	(___awmod@sign)
  3335  02FD  01F6               	line	13
  3336                           	
  3337                           i1l1294:	
  3338  02FE                     	btfss	(___awmod@dividend+1),7
  3339  02FE  1FF3               	goto	u88_21
  3340  02FF  2B01               	goto	u88_20
  3341  0300  2B02               u88_21:
  3342  0301                     	goto	i1l1300
  3343  0301  2B0A               u88_20:
  3344  0302                     	line	14
  3345                           	
  3346                           i1l1296:	
  3347  0302                     	comf	(___awmod@dividend),f
  3348  0302  09F2               	comf	(___awmod@dividend+1),f
  3349  0303  09F3               	incf	(___awmod@dividend),f
  3350  0304  0AF2               	skipnz
  3351  0305  1903               	incf	(___awmod@dividend+1),f
  3352  0306  0AF3               	line	15
  3353                           	
  3354                           i1l1298:	
  3355  0307                     	clrf	(___awmod@sign)
  3356  0307  01F6               	incf	(___awmod@sign),f
  3357  0308  0AF6               	goto	i1l1300
  3358  0309  2B0A               	line	16
  3359                           	
  3360                           i1l503:	
  3361  030A                     	line	17
  3362                           	
  3363                           i1l1300:	
  3364  030A                     	btfss	(___awmod@divisor+1),7
  3365  030A  1FF1               	goto	u89_21
  3366  030B  2B0D               	goto	u89_20
  3367  030C  2B0E               u89_21:
  3368  030D                     	goto	i1l1304
  3369  030D  2B14               u89_20:
  3370  030E                     	line	18
  3371                           	
  3372                           i1l1302:	
  3373  030E                     	comf	(___awmod@divisor),f
  3374  030E  09F0               	comf	(___awmod@divisor+1),f
  3375  030F  09F1               	incf	(___awmod@divisor),f
  3376  0310  0AF0               	skipnz
  3377  0311  1903               	incf	(___awmod@divisor+1),f
  3378  0312  0AF1               	goto	i1l1304
  3379  0313  2B14               	
  3380                           i1l504:	
  3381  0314                     	line	19
  3382                           	
  3383                           i1l1304:	
  3384  0314                     	movf	((___awmod@divisor)),w
  3385  0314  0870               iorwf	((___awmod@divisor+1)),w
  3386  0315  0471               	btfsc	status,2
  3387  0316  1903               	goto	u90_21
  3388  0317  2B19               	goto	u90_20
  3389  0318  2B1A               u90_21:
  3390  0319                     	goto	i1l1322
  3391  0319  2B4F               u90_20:
  3392  031A                     	line	20
  3393                           	
  3394                           i1l1306:	
  3395  031A                     	clrf	(___awmod@counter)
  3396  031A  01F5               	incf	(___awmod@counter),f
  3397  031B  0AF5               	line	21
  3398                           	goto	i1l1312
  3399  031C  2B29               	
  3400                           i1l507:	
  3401  031D                     	line	22
  3402                           	
  3403                           i1l1308:	
  3404  031D                     	movlw	01h
  3405  031D  3001               	
  3406                           u91_25:
  3407  031E                     	clrc
  3408  031E  1003               	rlf	(___awmod@divisor),f
  3409  031F  0DF0               	rlf	(___awmod@divisor+1),f
  3410  0320  0DF1               	addlw	-1
  3411  0321  3EFF               	skipz
  3412  0322  1D03               	goto	u91_25
  3413  0323  2B1E               	line	23
  3414                           	
  3415                           i1l1310:	
  3416  0324                     	movlw	low(01h)
  3417  0324  3001               	movwf	(??___awmod+0)+0
  3418  0325  00F4               	movf	(??___awmod+0)+0,w
  3419  0326  0874               	addwf	(___awmod@counter),f
  3420  0327  07F5               	goto	i1l1312
  3421  0328  2B29               	line	24
  3422                           	
  3423                           i1l506:	
  3424  0329                     	line	21
  3425                           	
  3426                           i1l1312:	
  3427  0329                     	btfss	(___awmod@divisor+1),(15)&7
  3428  0329  1FF1               	goto	u92_21
  3429  032A  2B2C               	goto	u92_20
  3430  032B  2B2D               u92_21:
  3431  032C                     	goto	i1l1308
  3432  032C  2B1D               u92_20:
  3433  032D                     	goto	i1l1314
  3434  032D  2B2F               	
  3435                           i1l508:	
  3436  032E                     	goto	i1l1314
  3437  032E  2B2F               	line	25
  3438                           	
  3439                           i1l509:	
  3440  032F                     	line	26
  3441                           	
  3442                           i1l1314:	
  3443  032F                     	movf	(___awmod@divisor+1),w
  3444  032F  0871               	subwf	(___awmod@dividend+1),w
  3445  0330  0273               	skipz
  3446  0331  1D03               	goto	u93_25
  3447  0332  2B35               	movf	(___awmod@divisor),w
  3448  0333  0870               	subwf	(___awmod@dividend),w
  3449  0334  0272               u93_25:
  3450  0335                     	skipc
  3451  0335  1C03               	goto	u93_21
  3452  0336  2B38               	goto	u93_20
  3453  0337  2B39               u93_21:
  3454  0338                     	goto	i1l1318
  3455  0338  2B40               u93_20:
  3456  0339                     	line	27
  3457                           	
  3458                           i1l1316:	
  3459  0339                     	movf	(___awmod@divisor),w
  3460  0339  0870               	subwf	(___awmod@dividend),f
  3461  033A  02F2               	movf	(___awmod@divisor+1),w
  3462  033B  0871               	skipc
  3463  033C  1C03               	decf	(___awmod@dividend+1),f
  3464  033D  03F3               	subwf	(___awmod@dividend+1),f
  3465  033E  02F3               	goto	i1l1318
  3466  033F  2B40               	
  3467                           i1l510:	
  3468  0340                     	line	28
  3469                           	
  3470                           i1l1318:	
  3471  0340                     	movlw	01h
  3472  0340  3001               	
  3473                           u94_25:
  3474  0341                     	clrc
  3475  0341  1003               	rrf	(___awmod@divisor+1),f
  3476  0342  0CF1               	rrf	(___awmod@divisor),f
  3477  0343  0CF0               	addlw	-1
  3478  0344  3EFF               	skipz
  3479  0345  1D03               	goto	u94_25
  3480  0346  2B41               	line	29
  3481                           	
  3482                           i1l1320:	
  3483  0347                     	movlw	01h
  3484  0347  3001               	subwf	(___awmod@counter),f
  3485  0348  02F5               	btfss	status,2
  3486  0349  1D03               	goto	u95_21
  3487  034A  2B4C               	goto	u95_20
  3488  034B  2B4D               u95_21:
  3489  034C                     	goto	i1l1314
  3490  034C  2B2F               u95_20:
  3491  034D                     	goto	i1l1322
  3492  034D  2B4F               	
  3493                           i1l511:	
  3494  034E                     	goto	i1l1322
  3495  034E  2B4F               	line	30
  3496                           	
  3497                           i1l505:	
  3498  034F                     	line	31
  3499                           	
  3500                           i1l1322:	
  3501  034F                     	movf	((___awmod@sign)),w
  3502  034F  0876               	btfsc	status,2
  3503  0350  1903               	goto	u96_21
  3504  0351  2B53               	goto	u96_20
  3505  0352  2B54               u96_21:
  3506  0353                     	goto	i1l1326
  3507  0353  2B5A               u96_20:
  3508  0354                     	line	32
  3509                           	
  3510                           i1l1324:	
  3511  0354                     	comf	(___awmod@dividend),f
  3512  0354  09F2               	comf	(___awmod@dividend+1),f
  3513  0355  09F3               	incf	(___awmod@dividend),f
  3514  0356  0AF2               	skipnz
  3515  0357  1903               	incf	(___awmod@dividend+1),f
  3516  0358  0AF3               	goto	i1l1326
  3517  0359  2B5A               	
  3518                           i1l512:	
  3519  035A                     	line	33
  3520                           	
  3521                           i1l1326:	
  3522  035A                     	movf	(___awmod@dividend+1),w
  3523  035A  0873               	movwf	(?___awmod+1)
  3524  035B  00F1               	movf	(___awmod@dividend),w
  3525  035C  0872               	movwf	(?___awmod)
  3526  035D  00F0               	goto	i1l513
  3527  035E  2B5F               	
  3528                           i1l1328:	
  3529  035F                     	line	34
  3530                           	
  3531                           i1l513:	
  3532  035F                     	return
  3533  035F  0008               	opt stack 0
  3534                           GLOBAL	__end_of___awmod
  3535                           	__end_of___awmod:
  3536  0360                     	signat	___awmod,8314
  3537                           global	___latbits
  3538                           ___latbits	equ	2
  3539  0002                     	global	btemp
  3540                           	btemp set 07Eh
  3541  007E                     
  3542                           	DABS	1,126,2	;btemp
  3543                           	global	wtemp0
  3544                           	wtemp0 set btemp+0
  3545  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        2
    BSS         41
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      14
    BANK0            80     26      67
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___fltol

Critical Paths under _main in BANK0

    _main->_LeerADC
    _setup->_I2C_Slave_Init
    _LeerADC->___flge

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0     754
                                             25 BANK0      1     1      0
                                _ADC
                            _LeerADC
                             _inicio
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0      22
                     _I2C_Slave_Init
 ---------------------------------------------------------------------------------
 (2) _I2C_Slave_Init                                       1     1      0      22
                                              5 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _inicio                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LeerADC                                              4     4      0     732
                                             21 BANK0      4     4      0
                             ___flge
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     398
                                              5 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              16     8      8     334
                                              5 BANK0     16     8      8
 ---------------------------------------------------------------------------------
 (1) _ADC                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  5     5      0     753
                                              0 BANK0      5     5      0
                            ___awmod
                            ___fltol
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             11     7      4     305
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _ADC
   _LeerADC
     ___flge
     ___xxtofl
   _inicio
   _setup
     _I2C_Slave_Init

 _isr (ROOT)
   ___awmod
   ___fltol

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     1A      43       5       83.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      B       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      51      12        0.0%
ABS                  0      0      51       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Mar 07 10:59:49 2020

                       _z 0039               __CFG_CP$OFF 0000               _SSPSTATbits 0094  
                      _BF 04A0                        l83 0445                        l92 03A7  
                      l93 03A1                        l94 03A5                        l95 03A7  
                      fsr 0004                       l124 0425                       l223 0409  
                     l226 0435                       l260 03E4                       l261 03E4  
                     l254 03B8                       l255 03C6                       _ADC 0436  
                     l256 03C8                       l521 010F                       l257 03D7  
                     l522 012C                       l258 03DD                       l523 0162  
                     l259 03E3                       l524 0198                       l525 01B3  
                     l760 007D                       l761 0099                       l770 00E7  
                     l762 007E                       l754 0049                       l763 00A0  
                     l755 0051                       l764 00AD                       l756 0063  
                     l765 00A1                       l757 00F0                       l758 0076  
                     l767 00B8                       l759 0068                       l768 00B8  
                     l769 00C4                       _GIE 005F              __CFG_CPD$OFF 0000  
                     u700 0184                       u701 0185                       u710 01AE  
                     u702 018A                       u711 01AD                       u703 018B  
                     u800 00B1                       u720 0035                       u801 00B0  
                     u721 0034                       u650 0107                       u810 00B7  
                     u730 0039                       u715 01AA                       u651 0106  
                     u811 00B6                       u731 0038                       u660 0123  
                     u820 00BC                       u740 0059                       u661 0122  
                     u821 00BB                       u741 0058                       u670 0130  
                     u830 00D1                       u671 012F                       u680 014E  
                     u840 00E1                       u760 007C                       u681 014F  
                     u841 00E0                       u761 007B                       u690 0166  
                     u682 0154                       u850 00E5                       u691 0165  
                     u683 0155                       u851 00E4                       u835 00CC  
                     u755 006D                       u780 009F                       u860 0366  
                     u781 009E                       u861 0365                       u870 039C  
                     u775 0091                       u871 039B                       u795 00A5  
                     _isr 01B4                       indf 0000              ___awmod@sign 0076  
                    ?_ADC 0070              __CFG_LVP$OFF 0000              ___fltol@exp1 007A  
                    l1200 0166                      l1210 01B0                      l1202 0198  
                    l1212 01B3                      l1204 019A                      l1220 0049  
                    l1206 019C                      l1230 0076                      l1222 0059  
                    l1214 0030                      l1208 01AE                      l1240 00AD  
                    l1232 007E                      l1224 0062                      l1216 0035  
                    l1170 01B0                      l1250 00E1                      l1242 00B1  
                    l1234 0082                      l1226 0063                      l1218 0039  
                    l1260 043E                      l1172 01B2                      l1252 00E5  
                    l1244 00BC                      l1236 0090                      l1228 0068  
                    l1180 041D                      l1420 03B8                      l1262 0440  
                    l1190 0107                      l1254 00E7                      l1246 00C6  
                    l1238 00A1                      l1270 0366                      l1182 041E  
                    l1174 040D                      l1430 03CD                      l1422 03BE  
                    l1264 0443                      l1192 0123                      l1256 00F0  
                    l1248 00DC                      l1272 039C                      l1280 03EF  
                    l1184 041F                      l1176 041B                      l1440 03DD  
                    l1432 03D2                      l1424 03C3                      l1266 0444  
                    l1258 0436                      l1194 012C                      l1274 03A1  
                    l1282 03F2                      l1186 0422                      l1178 041C  
                    l1290 042F                      l1434 03D5                      l1426 03C6  
                    l1418 03A8                      l1196 0130                      l1188 00F1  
                    l1276 03A5                      l1268 0360                      l1284 03F9  
                    l1436 03D7                      l1428 03C8                      l1198 0162  
                    l1286 03FC                      l1278 03E7                      l1438 03DB  
                    l1288 0426                      ?_isr 0070                      u1200 03CD  
                    u1201 03CC                      u1210 03DB                      u1211 03DA  
                    u1190 03C3                      u1191 03C2                      _PEIE 005E  
            __CFG_WRT$OFF 0000                      _adc1 0030                      _adc2 002C  
                    _adc3 0028                      _adc4 0024                      _adc5 0036  
                    _adc6 0034                      _main 03A8                      btemp 007E  
                    start 000E             __CFG_IESO$OFF 0000           __end_of_LeerADC 03A8  
                   ??_ADC 004B                     ??_isr 0046             ___fltol@sign1 0079  
                   ?_main 0070             __CFG_WDTE$OFF 0000           __end_of___awmod 0360  
         __end_of___fltol 02FD                     _ANSEL 0188                     i1l231 01BB  
                   i1l232 025C                     i1l240 0258                     i1l241 0258  
                   i1l233 01D1                     i1l242 0228                     i1l243 0243  
                   i1l235 01C9                     i1l244 023F                     i1l236 01F7  
                   i1l245 0242                     i1l237 01E4                     i1l510 0340  
                   i1l246 0250                     i1l238 01E4                     i1l511 034E  
                   i1l503 030A                     i1l247 0250                     i1l239 01EB  
                   i1l512 035A                     i1l504 0314                     i1l248 0257  
                   i1l513 035F                     i1l505 034F                     i1l249 025C  
                   i1l506 0329                     i1l507 031D                     i1l508 032E  
                   i1l540 02E5                     i1l532 0280                     i1l509 032F  
                   i1l541 02DA                     i1l533 02FC                     i1l542 02EB  
                   i1l534 02C9                     i1l543 02FC                     i1l535 02B5  
                   i1l536 02B6                     i1l537 02C8                     i1l538 02EC  
                   i1l539 02D9                     _PORTA 0005                     _PORTB 0006  
                   _PORTC 0007                     _PORTD 0008                     _TRISA 0085  
                   _TRISB 0086                     _TRISC 0087                     _TRISD 0088  
                   _SSPIE 0463                     u90_20 031A                     _SSPIF 0063  
                   u90_21 0319                     u91_25 031E                     u92_20 032D  
                   u92_21 032C                     u93_20 0339                     u93_21 0338  
                   u93_25 0335                     u94_25 0341                     u95_20 034D  
                   u95_21 034C                     u96_20 0354                     u88_20 0302  
                   u96_21 0353                     u88_21 0301                     u89_20 030E  
                   u97_20 0276                     u89_21 030D                     u97_21 0275  
                   u98_20 028E                     u98_25 0289                     u99_20 02A4  
                   u99_21 02A3            __CFG_FCMEN$OFF 0000                     _timer 0041  
                   _setup 0426            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 0011              __end_of_main 03E7                    ??_main 005F  
                  _ADCON0 001F                    _ADRESH 001E                    ?_setup 0070  
              _SendSignal 007C                    _ANSELH 0189                    u100_20 02AB  
                  u100_21 02AA                    u101_25 02B7                    u102_20 02C7  
                  u110_20 01C8                    u102_21 02C6                    u110_21 01C7  
                  i1l1300 030A                    i1l1310 0324                    i1l1302 030E  
                  i1l1320 0347                    i1l1312 0329                    i1l1304 0314  
                  u103_20 02CF                    i1l1400 0208                    u111_20 01D7  
                  u103_21 02CE                    u111_21 01D6                    i1l1314 032F  
                  i1l1306 031A                    i1l1322 034F                    i1l1330 0263  
                  i1l1410 023F                    i1l1402 0220                    i1l1324 0354  
                  i1l1316 0339                    i1l1308 031D                    i1l1340 0296  
                  i1l1332 0276                    i1l1412 0243                    i1l1404 0225  
                  i1l1326 035A                    i1l1318 0340                    i1l1350 02B4  
                  i1l1342 029E                    i1l1334 027F                    i1l1414 0247  
                  i1l1406 0228                    i1l1328 035F                    i1l1360 02DA  
                  i1l1352 02B6                    i1l1344 02A0                    i1l1336 0280  
                  i1l1416 0248                    i1l1408 022D                    u112_20 01DB  
                  u112_21 01DA                    i1l1362 02EC                    i1l1346 02A4  
                  i1l1354 02C9                    i1l1338 0295                    i1l1370 01BF  
                  i1l1292 02FD                    i1l1364 02F1                    i1l1356 02CF  
                  i1l1348 02AB                    i1l1380 01CF                    i1l1372 01C4  
                  u104_25 02DC                    i1l1294 02FE                    i1l1358 02D8  
                  i1l1390 01E2                    i1l1382 01D1                    i1l1374 01C9  
                  i1l1366 01B4                    i1l1296 0302                    u105_20 02EA  
                  i1l1392 01EB                    u113_20 01EA                    i1l1384 01D7  
                  i1l1376 01CD                    i1l1368 01B8                    u105_21 02E9  
                  u113_21 01E9                    i1l1298 0307                    i1l1394 01FB  
                  i1l1386 01DB                    i1l1378 01CE                    i1l1396 01FF  
                  i1l1388 01E1                    i1l1398 0205                    u106_20 02F1  
                  u114_20 01FB                    u106_21 02F0                    u114_21 01FA  
                  u122_27 01F3                    u115_20 01FF                    u107_20 01B8  
                  u115_21 01FE                    u107_21 01B7                    u123_27 024C  
                  u116_20 0225                    u108_20 01BF                    u116_21 0224  
                  u108_21 01BE                    u117_20 022D                    u109_20 01C4  
                  u117_21 022C                    u109_21 01C3                    u118_20 0256  
                  u118_21 0255                 ??_LeerADC 005B                    _SSPADD 0093  
                  _TRISC3 043B                    _TRISC4 043C                    _SSPCON 0014  
                  _SSPBUF 0013          __end_of___xxtofl 00F1            __CFG_PWRTE$OFF 0000  
                  _VarMOV 0062                    _Signal 0038                    ___flge 00F1  
               ??___awmod 0074                 ??___fltol 0074                    _inicio 03E7  
                  _varADC 003B           ___awmod@divisor 0070                    _select 007D  
                  _multi1 0043                    _multi2 0042           ___awmod@counter 0075  
                  saved_w 007E                ___flge@ff1 004B                ___flge@ff2 004F  
            ___xxtofl@arg 0055              ___xxtofl@exp 0054              ___xxtofl@val 004B  
 __end_of__initialization 0029                ___fltol@f1 0070            __pcstackCOMMON 0070  
            __pidataBANK0 044E   __size_of_I2C_Slave_Init 001C             __end_of_setup 0436  
           _voltajeunidad 003F                   ??_setup 004C     I2C_Slave_Init@address 004B  
              __pbssBANK0 0020                __pmaintext 03A8                   ?___flge 004B  
              __pintentry 0004                   ?_inicio 0070                 ?___xxtofl 004B  
                 _SSPCON2 0091                   _SSPSTAT 0094                   _LeerADC 0360  
                 _Signal2 003C           __size_of___flge 00C3                   ___awmod 02FD  
                 ___fltol 0263           __size_of_inicio 0023                   __ptext1 0426  
                 __ptext2 040A                   __ptext3 03E7                   __ptext4 0360  
                 __ptext5 002D                   __ptext6 00F1                   __ptext7 0436  
                 __ptext8 01B4                   __ptext9 0263              __size_of_ADC 0010  
                 _counter 007B              __size_of_isr 00AF                ??___xxtofl 004F  
        ___awmod@dividend 0072                   _mostrar 0044                   clrloop0 0447  
    end_of_initialization 0029            _I2C_Slave_Init 040A                 _PORTBbits 0006  
           ___xxtofl@sign 0053                 _TRISCbits 0087    __end_of_I2C_Slave_Init 0426  
          __end_of___flge 01B4            __end_of_inicio 040A       start_initialization 0011  
             __end_of_ADC 0446               __end_of_isr 0263  __CFG_FOSC$INTRC_NOCLKOUT 0000  
         ?_I2C_Slave_Init 0070                  ??___flge 0053               __pdataBANK0 0060  
                ??_inicio 004B               __pbssCOMMON 007B                 ___latbits 0002  
           __pcstackBANK0 0046         __size_of___xxtofl 00C4                  ?_LeerADC 0070  
               __pnvBANK0 0062                  ?___awmod 0070                  ?___fltol 0070  
                _ADCcomp1 0061                  _ADCcomp2 0060            __size_of_setup 0010  
       interrupt_function 0004                 clear_ram0 0446                  _PIE1bits 008C  
                _PIR1bits 000C                 _multiplex 003A                _ADCON0bits 001F  
              _ADCON1bits 009F          __size_of_LeerADC 0048                  _ValorADC 0020  
        __size_of___awmod 0063          __size_of___fltol 009A                  _decimal1 003E  
                _decimal2 003D                  ___xxtofl 002D                  _debounce 0045  
                __ptext10 02FD         __CFG_BOR4V$BOR40V 0000                  _contador 0040  
        ??_I2C_Slave_Init 004B             __size_of_main 003F                _INTCONbits 000B  
                intlevel1 0000               _SSPCON2bits 0091                _SSPCONbits 0014  
