

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Sat Mar 07 12:02:34 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_I2C_Master_Read
   712                           	FNCALL	_main,_I2C_Master_Start
   713                           	FNCALL	_main,_I2C_Master_Stop
   714                           	FNCALL	_main,_I2C_Master_Write
   715                           	FNCALL	_main,___awmod
   716                           	FNCALL	_main,___fladd
   717                           	FNCALL	_main,___fldiv
   718                           	FNCALL	_main,___flmul
   719                           	FNCALL	_main,___flneg
   720                           	FNCALL	_main,___fltol
   721                           	FNCALL	_main,___xxtofl
   722                           	FNCALL	_main,_setCursorLCD
   723                           	FNCALL	_main,_setup
   724                           	FNCALL	_main,_writeCharLCD
   725                           	FNCALL	_main,_writeFloat
   726                           	FNCALL	_main,_writeIntLCD
   727                           	FNCALL	_main,_writeStrLCD
   728                           	FNCALL	_writeFloat,_setCursorLCD
   729                           	FNCALL	_writeFloat,_writeCharLCD
   730                           	FNCALL	_writeFloat,_writeIntLCD
   731                           	FNCALL	_writeIntLCD,_sprintf
   732                           	FNCALL	_writeIntLCD,_writeStrLCD
   733                           	FNCALL	_sprintf,___lwdiv
   734                           	FNCALL	_sprintf,___lwmod
   735                           	FNCALL	_setup,_I2C_Master_Init
   736                           	FNCALL	_setup,_clcLCD
   737                           	FNCALL	_setup,_initLCD
   738                           	FNCALL	_setup,_setCursorLCD
   739                           	FNCALL	_setup,_writeStrLCD
   740                           	FNCALL	_writeStrLCD,_writeCharLCD
   741                           	FNCALL	_setCursorLCD,_cmdLCD
   742                           	FNCALL	_initLCD,_cmdLCD
   743                           	FNCALL	_clcLCD,_cmdLCD
   744                           	FNCALL	_I2C_Master_Init,___lldiv
   745                           	FNCALL	___flmul,__Umul8_16
   746                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   747                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   748                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   749                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   750                           	FNROOT	_main
   751                           	global	_dpowers
   752                           psect	strings,class=STRING,delta=2,noexec
   753                           global __pstrings
   754                           __pstrings:
   755  1000                     stringtab:
   756  1000                     	global    __stringtab
   757                           __stringtab:
   758  1000                     ;	String table - string pointers are 1 byte each
   759                           	btfsc	(btemp+1),7
   760  1000  1BFF               	ljmp	stringcode
   761  1001  280A               	bcf	status,7
   762  1002  1383               	btfsc	(btemp+1),0
   763  1003  187F               	bsf	status,7
   764  1004  1783               	movf	indf,w
   765  1005  0800               	incf fsr
   766  1006  0A84               skipnz
   767  1007  1903               incf btemp+1
   768  1008  0AFF               	return
   769  1009  0008               stringcode:stringdir:
   770  100A                     movlw high(stringdir)
      + 100A                     stringdir:	
   771  100A  3010               movwf pclath
   772  100B  008A               movf fsr,w
   773  100C  0804               incf fsr
   774  100D  0A84               	addwf pc
   775  100E  0782               	global __stringbase
   776                           __stringbase:
   777  100F                     	retlw	0
   778  100F  3400               psect	strings
   779                           	global    __end_of__stringtab
   780                           __end_of__stringtab:
   781  1010                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   782                           	line	358
   783                           _dpowers:
   784  1010                     	retlw	01h
   785  1010  3401               	retlw	0
   786  1011  3400               
   787                           	retlw	0Ah
   788  1012  340A               	retlw	0
   789  1013  3400               
   790                           	retlw	064h
   791  1014  3464               	retlw	0
   792  1015  3400               
   793                           	retlw	0E8h
   794  1016  34E8               	retlw	03h
   795  1017  3403               
   796                           	retlw	010h
   797  1018  3410               	retlw	027h
   798  1019  3427               
   799                           	global __end_of_dpowers
   800                           __end_of_dpowers:
   801  101A                     	global	_dpowers
   802                           	global	_sensorF2
   803                           	global	_float1
   804                           	global	_sensorF1
   805                           	global	_mov
   806                           	global	_signal
   807                           	global	_adcP
   808                           	global	_count2
   809                           	global	_toggle2
   810                           	global	_count
   811                           	global	_toggle
   812                           	global	_hall
   813                           	global	_alarm
   814                           	global	_dec1
   815                           	global	_entero1
   816                           	global	_adcT
   817                           	global	_cursor
   818                           	global	_PORTD
   819                           _PORTD	set	0x8
   820  0008                     	global	_PORTDbits
   821                           _PORTDbits	set	0x8
   822  0008                     	global	_PORTB
   823                           _PORTB	set	0x6
   824  0006                     	global	_SSPBUF
   825                           _SSPBUF	set	0x13
   826  0013                     	global	_SSPCON
   827                           _SSPCON	set	0x14
   828  0014                     	global	_RD1
   829                           _RD1	set	0x41
   830  0041                     	global	_RD0
   831                           _RD0	set	0x40
   832  0040                     	global	_SSPIF
   833                           _SSPIF	set	0x63
   834  0063                     	global	_PEIE
   835                           _PEIE	set	0x5E
   836  005E                     	global	_GIE
   837                           _GIE	set	0x5F
   838  005F                     	global	_TRISD
   839                           _TRISD	set	0x88
   840  0088                     	global	_TRISB
   841                           _TRISB	set	0x86
   842  0086                     	global	_SSPCON2bits
   843                           _SSPCON2bits	set	0x91
   844  0091                     	global	_TRISCbits
   845                           _TRISCbits	set	0x87
   846  0087                     	global	_SSPSTAT
   847                           _SSPSTAT	set	0x94
   848  0094                     	global	_SSPADD
   849                           _SSPADD	set	0x93
   850  0093                     	global	_SSPCON2
   851                           _SSPCON2	set	0x91
   852  0091                     	global	_SSPIE
   853                           _SSPIE	set	0x463
   854  0463                     	global	_TRISC4
   855                           _TRISC4	set	0x43C
   856  043C                     	global	_TRISC3
   857                           _TRISC3	set	0x43B
   858  043B                     	global	_ANSELH
   859                           _ANSELH	set	0x189
   860  0189                     	global	_ANSEL
   861                           _ANSEL	set	0x188
   862  0188                     	
   863                           STR_3:	
   864  101A                     	retlw	32	;' '
   865  101A  3420               	retlw	32	;' '
   866  101B  3420               	retlw	0
   867  101C  3400               psect	strings
   868                           	
   869                           STR_4:	
   870  101D                     	retlw	83	;'S'
   871  101D  3453               	retlw	49	;'1'
   872  101E  3431               	retlw	0
   873  101F  3400               psect	strings
   874                           	
   875                           STR_5:	
   876  1020                     	retlw	83	;'S'
   877  1020  3453               	retlw	50	;'2'
   878  1021  3432               	retlw	0
   879  1022  3400               psect	strings
   880                           	
   881                           STR_6:	
   882  1023                     	retlw	83	;'S'
   883  1023  3453               	retlw	51	;'3'
   884  1024  3433               	retlw	0
   885  1025  3400               psect	strings
   886                           	
   887                           STR_1:	
   888  1026                     	retlw	37	;'%'
   889  1026  3425               	retlw	100	;'d'
   890  1027  3464               	retlw	0
   891  1028  3400               psect	strings
   892                           STR_2	equ	STR_1+0
   893  1026                     ; #config settings
   894                           global __CFG_FOSC$INTRC_NOCLKOUT
   895                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   896  0000                     global __CFG_WDTE$OFF
   897                           __CFG_WDTE$OFF equ 0x0
   898  0000                     global __CFG_PWRTE$OFF
   899                           __CFG_PWRTE$OFF equ 0x0
   900  0000                     global __CFG_MCLRE$OFF
   901                           __CFG_MCLRE$OFF equ 0x0
   902  0000                     global __CFG_CP$OFF
   903                           __CFG_CP$OFF equ 0x0
   904  0000                     global __CFG_CPD$OFF
   905                           __CFG_CPD$OFF equ 0x0
   906  0000                     global __CFG_BOREN$OFF
   907                           __CFG_BOREN$OFF equ 0x0
   908  0000                     global __CFG_IESO$OFF
   909                           __CFG_IESO$OFF equ 0x0
   910  0000                     global __CFG_FCMEN$OFF
   911                           __CFG_FCMEN$OFF equ 0x0
   912  0000                     global __CFG_LVP$OFF
   913                           __CFG_LVP$OFF equ 0x0
   914  0000                     global __CFG_BOR4V$BOR40V
   915                           __CFG_BOR4V$BOR40V equ 0x0
   916  0000                     global __CFG_WRT$OFF
   917                           __CFG_WRT$OFF equ 0x0
   918  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\sfcs."
   919                           	line	#
   920                           psect cinit,class=CODE,delta=2
   921                           global start_initialization
   922                           start_initialization:
   923  07F3                     
   924                           global __initialization
   925                           __initialization:
   926  07F3                     psect	bssBANK1,class=BANK1,space=1,noexec
   927                           global __pbssBANK1
   928                           __pbssBANK1:
   929  00A0                     _lux:
   930  00A0                            ds      4
   931  00A0                     
   932                           _float2:
   933  00A4                            ds      4
   934  00A4                     
   935                           _sensorF2:
   936  00A8                            ds      4
   937  00A8                     
   938                           _float1:
   939  00AC                            ds      4
   940  00AC                     
   941                           _sensorF1:
   942  00B0                            ds      4
   943  00B0                     
   944                           _mov:
   945  00B4                            ds      1
   946  00B4                     
   947                           _signal:
   948  00B5                            ds      1
   949  00B5                     
   950                           _adcP:
   951  00B6                            ds      1
   952  00B6                     
   953                           _count2:
   954  00B7                            ds      1
   955  00B7                     
   956                           _toggle2:
   957  00B8                            ds      1
   958  00B8                     
   959                           _count:
   960  00B9                            ds      1
   961  00B9                     
   962                           _s3:
   963  00BA                            ds      1
   964  00BA                     
   965                           _toggle:
   966  00BB                            ds      1
   967  00BB                     
   968                           _dec2:
   969  00BC                            ds      1
   970  00BC                     
   971                           _entero2:
   972  00BD                            ds      1
   973  00BD                     
   974                           _hall:
   975  00BE                            ds      1
   976  00BE                     
   977                           _alarm:
   978  00BF                            ds      1
   979  00BF                     
   980                           _dec1:
   981  00C0                            ds      1
   982  00C0                     
   983                           _entero1:
   984  00C1                            ds      1
   985  00C1                     
   986                           _adcT:
   987  00C2                            ds      1
   988  00C2                     
   989                           _cursor:
   990  00C3                            ds      1
   991  00C3                     
   992                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\sfcs."
   993                           	line	#
   994                           psect clrtext,class=CODE,delta=2
   995                           global clear_ram0
   996                           ;	Called with FSR containing the base address, and
   997                           ;	W with the last address+1
   998                           clear_ram0:
   999  16C7                     	clrwdt			;clear the watchdog before getting into this loop
  1000  16C7  0064               clrloop0:
  1001  16C8                     	clrf	indf		;clear RAM location pointed to by FSR
  1002  16C8  0180               	incf	fsr,f		;increment pointer
  1003  16C9  0A84               	xorwf	fsr,w		;XOR with final address
  1004  16CA  0604               	btfsc	status,2	;have we reached the end yet?
  1005  16CB  1903               	retlw	0		;all done for this memory range, return
  1006  16CC  3400               	xorwf	fsr,w		;XOR again to restore value
  1007  16CD  0604               	goto	clrloop0		;do the next byte
  1008  16CE  2EC8               
  1009                           ; Clear objects allocated to BANK1
  1010                           psect cinit,class=CODE,delta=2,merge=1
  1011                           	bcf	status, 7	;select IRP bank0
  1012  07F3  1383               	movlw	low(__pbssBANK1)
  1013  07F4  30A0               	movwf	fsr
  1014  07F5  0084               	movlw	low((__pbssBANK1)+024h)
  1015  07F6  30C4               	fcall	clear_ram0
  1016  07F7  160A  118A  26C7  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1017                           global end_of_initialization,__end_of__initialization
  1018                           
  1019                           ;End of C runtime variable initialization code
  1020                           
  1021                           end_of_initialization:
  1022  07FC                     __end_of__initialization:
  1023  07FC                     clrf status
  1024  07FC  0183               ljmp _main	;jump to C main() function
  1025  07FD  120A  158A  2D51   psect	cstackBANK1,class=BANK1,space=1,noexec
  1026                           global __pcstackBANK1
  1027                           __pcstackBANK1:
  1028  00C4                     ??_main:	; 1 bytes @ 0x0
  1029  00C4                     	ds	4
  1030  00C4                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1031                           global __pcstackCOMMON
  1032                           __pcstackCOMMON:
  1033  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1034  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1035  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1036  0070                     ??_writeCharLCD:	; 1 bytes @ 0x0
  1037  0070                     ?_setup:	; 1 bytes @ 0x0
  1038  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1039  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1040  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1041  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1042  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1043  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1044  0070                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1045  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1046  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1047  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1048  0070                     ?_main:	; 1 bytes @ 0x0
  1049  0070                     	global	?__Umul8_16
  1050                           ?__Umul8_16:	; 2 bytes @ 0x0
  1051  0070                     	global	?_I2C_Master_Read
  1052                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1053  0070                     	global	?___awmod
  1054                           ?___awmod:	; 2 bytes @ 0x0
  1055  0070                     	global	?___lwdiv
  1056                           ?___lwdiv:	; 2 bytes @ 0x0
  1057  0070                     	global	?___lldiv
  1058                           ?___lldiv:	; 4 bytes @ 0x0
  1059  0070                     	global	?___fltol
  1060                           ?___fltol:	; 4 bytes @ 0x0
  1061  0070                     	global	?___xxtofl
  1062                           ?___xxtofl:	; 4 bytes @ 0x0
  1063  0070                     	global	__Umul8_16@multiplicand
  1064                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1065  0070                     	global	I2C_Master_Write@d
  1066                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1067  0070                     	global	I2C_Master_Read@a
  1068                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1069  0070                     	global	___awmod@divisor
  1070                           ___awmod@divisor:	; 2 bytes @ 0x0
  1071  0070                     	global	___lwdiv@divisor
  1072                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1073  0070                     	global	___lldiv@divisor
  1074                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1075  0070                     	global	___fltol@f1
  1076                           ___fltol@f1:	; 4 bytes @ 0x0
  1077  0070                     	global	___xxtofl@val
  1078                           ___xxtofl@val:	; 4 bytes @ 0x0
  1079  0070                     	ds	1
  1080  0070                     	global	writeCharLCD@character
  1081                           writeCharLCD@character:	; 1 bytes @ 0x1
  1082  0071                     	ds	1
  1083  0071                     ??__Umul8_16:	; 1 bytes @ 0x2
  1084  0072                     ??_I2C_Master_Write:	; 1 bytes @ 0x2
  1085  0072                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1086  0072                     ?_writeStrLCD:	; 1 bytes @ 0x2
  1087  0072                     	global	cmdLCD@cmd
  1088                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1089  0072                     	global	writeStrLCD@string
  1090                           writeStrLCD@string:	; 2 bytes @ 0x2
  1091  0072                     	global	___awmod@dividend
  1092                           ___awmod@dividend:	; 2 bytes @ 0x2
  1093  0072                     	global	___lwdiv@dividend
  1094                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1095  0072                     	ds	1
  1096  0072                     ?_setCursorLCD:	; 1 bytes @ 0x3
  1097  0073                     ??_clcLCD:	; 1 bytes @ 0x3
  1098  0073                     ??_initLCD:	; 1 bytes @ 0x3
  1099  0073                     	global	setCursorLCD@x
  1100                           setCursorLCD@x:	; 1 bytes @ 0x3
  1101  0073                     	ds	1
  1102  0073                     ??_setCursorLCD:	; 1 bytes @ 0x4
  1103  0074                     ??_writeStrLCD:	; 1 bytes @ 0x4
  1104  0074                     ??___awmod:	; 1 bytes @ 0x4
  1105  0074                     ??___fltol:	; 1 bytes @ 0x4
  1106  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1107  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  1108  0074                     	global	I2C_Master_Read@temp
  1109                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1110  0074                     	global	__Umul8_16@product
  1111                           __Umul8_16@product:	; 2 bytes @ 0x4
  1112  0074                     	global	___lldiv@dividend
  1113                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1114  0074                     	ds	1
  1115  0074                     	global	setCursorLCD@y
  1116                           setCursorLCD@y:	; 1 bytes @ 0x5
  1117  0075                     	global	___awmod@counter
  1118                           ___awmod@counter:	; 1 bytes @ 0x5
  1119  0075                     	global	___lwdiv@quotient
  1120                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1121  0075                     	ds	1
  1122  0075                     	global	___awmod@sign
  1123                           ___awmod@sign:	; 1 bytes @ 0x6
  1124  0076                     	global	__Umul8_16@word_mpld
  1125                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1126  0076                     	ds	1
  1127  0076                     	global	___lwdiv@counter
  1128                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1129  0077                     	global	writeStrLCD@cont
  1130                           writeStrLCD@cont:	; 2 bytes @ 0x7
  1131  0077                     	ds	1
  1132  0077                     ??___lldiv:	; 1 bytes @ 0x8
  1133  0078                     	global	?___lwmod
  1134                           ?___lwmod:	; 2 bytes @ 0x8
  1135  0078                     	global	___xxtofl@sign
  1136                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1137  0078                     	global	__Umul8_16@multiplier
  1138                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1139  0078                     	global	___lwmod@divisor
  1140                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1141  0078                     	ds	1
  1142  0078                     	global	___fltol@sign1
  1143                           ___fltol@sign1:	; 1 bytes @ 0x9
  1144  0079                     	global	___xxtofl@exp
  1145                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1146  0079                     	global	___lldiv@quotient
  1147                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1148  0079                     	ds	1
  1149  0079                     	global	___fltol@exp1
  1150                           ___fltol@exp1:	; 1 bytes @ 0xA
  1151  007A                     	global	___lwmod@dividend
  1152                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1153  007A                     	global	___xxtofl@arg
  1154                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1155  007A                     	ds	2
  1156  007A                     ??___lwmod:	; 1 bytes @ 0xC
  1157  007C                     	ds	1
  1158  007C                     	global	___lldiv@counter
  1159                           ___lldiv@counter:	; 1 bytes @ 0xD
  1160  007D                     	global	___lwmod@counter
  1161                           ___lwmod@counter:	; 1 bytes @ 0xD
  1162  007D                     	ds	1
  1163  007D                     ??___flneg:	; 1 bytes @ 0xE
  1164  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1165                           global __pcstackBANK0
  1166                           __pcstackBANK0:
  1167  0020                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1168  0020                     	global	?_sprintf
  1169                           ?_sprintf:	; 2 bytes @ 0x0
  1170  0020                     	global	?___flneg
  1171                           ?___flneg:	; 4 bytes @ 0x0
  1172  0020                     	global	sprintf@f
  1173                           sprintf@f:	; 1 bytes @ 0x0
  1174  0020                     	global	I2C_Master_Init@c
  1175                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1176  0020                     	global	___flneg@f1
  1177                           ___flneg@f1:	; 4 bytes @ 0x0
  1178  0020                     	ds	3
  1179  0020                     ??_sprintf:	; 1 bytes @ 0x3
  1180  0023                     	ds	1
  1181  0023                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1182  0024                     	global	?___fladd
  1183                           ?___fladd:	; 4 bytes @ 0x4
  1184  0024                     	global	___fladd@b
  1185                           ___fladd@b:	; 4 bytes @ 0x4
  1186  0024                     	ds	2
  1187  0024                     	global	sprintf@ap
  1188                           sprintf@ap:	; 1 bytes @ 0x6
  1189  0026                     	ds	1
  1190  0026                     	global	sprintf@flag
  1191                           sprintf@flag:	; 1 bytes @ 0x7
  1192  0027                     	ds	1
  1193  0027                     ??_setup:	; 1 bytes @ 0x8
  1194  0028                     	global	sprintf@prec
  1195                           sprintf@prec:	; 1 bytes @ 0x8
  1196  0028                     	global	___fladd@a
  1197                           ___fladd@a:	; 4 bytes @ 0x8
  1198  0028                     	ds	1
  1199  0028                     	global	sprintf@val
  1200                           sprintf@val:	; 2 bytes @ 0x9
  1201  0029                     	ds	2
  1202  0029                     	global	sprintf@sp
  1203                           sprintf@sp:	; 1 bytes @ 0xB
  1204  002B                     	ds	1
  1205  002B                     ??___fladd:	; 1 bytes @ 0xC
  1206  002C                     	global	sprintf@c
  1207                           sprintf@c:	; 1 bytes @ 0xC
  1208  002C                     	ds	1
  1209  002C                     ??_writeIntLCD:	; 1 bytes @ 0xD
  1210  002D                     	ds	3
  1211  002D                     	global	writeIntLCD@buffer
  1212                           writeIntLCD@buffer:	; 4 bytes @ 0x10
  1213  0030                     	ds	4
  1214  0030                     	global	writeIntLCD@numero
  1215                           writeIntLCD@numero:	; 1 bytes @ 0x14
  1216  0034                     	ds	1
  1217  0034                     ?_writeFloat:	; 1 bytes @ 0x15
  1218  0035                     	global	writeFloat@decimal
  1219                           writeFloat@decimal:	; 1 bytes @ 0x15
  1220  0035                     	ds	1
  1221  0035                     	global	writeFloat@initPos
  1222                           writeFloat@initPos:	; 1 bytes @ 0x16
  1223  0036                     	ds	1
  1224  0036                     ??_writeFloat:	; 1 bytes @ 0x17
  1225  0037                     	ds	1
  1226  0037                     	global	writeFloat@integer
  1227                           writeFloat@integer:	; 1 bytes @ 0x18
  1228  0038                     	global	___fladd@signs
  1229                           ___fladd@signs:	; 1 bytes @ 0x18
  1230  0038                     	ds	1
  1231  0038                     	global	___fladd@aexp
  1232                           ___fladd@aexp:	; 1 bytes @ 0x19
  1233  0039                     	ds	1
  1234  0039                     	global	___fladd@bexp
  1235                           ___fladd@bexp:	; 1 bytes @ 0x1A
  1236  003A                     	ds	1
  1237  003A                     	global	___fladd@grs
  1238                           ___fladd@grs:	; 1 bytes @ 0x1B
  1239  003B                     	ds	1
  1240  003B                     	global	?___flmul
  1241                           ?___flmul:	; 4 bytes @ 0x1C
  1242  003C                     	global	___flmul@b
  1243                           ___flmul@b:	; 4 bytes @ 0x1C
  1244  003C                     	ds	4
  1245  003C                     	global	___flmul@a
  1246                           ___flmul@a:	; 4 bytes @ 0x20
  1247  0040                     	ds	4
  1248  0040                     ??___flmul:	; 1 bytes @ 0x24
  1249  0044                     	ds	5
  1250  0044                     	global	___flmul@sign
  1251                           ___flmul@sign:	; 1 bytes @ 0x29
  1252  0049                     	ds	1
  1253  0049                     	global	___flmul@grs
  1254                           ___flmul@grs:	; 4 bytes @ 0x2A
  1255  004A                     	ds	4
  1256  004A                     	global	___flmul@aexp
  1257                           ___flmul@aexp:	; 1 bytes @ 0x2E
  1258  004E                     	ds	1
  1259  004E                     	global	___flmul@bexp
  1260                           ___flmul@bexp:	; 1 bytes @ 0x2F
  1261  004F                     	ds	1
  1262  004F                     	global	___flmul@prod
  1263                           ___flmul@prod:	; 4 bytes @ 0x30
  1264  0050                     	ds	4
  1265  0050                     	global	___flmul@temp
  1266                           ___flmul@temp:	; 2 bytes @ 0x34
  1267  0054                     	ds	2
  1268  0054                     	global	?___fldiv
  1269                           ?___fldiv:	; 4 bytes @ 0x36
  1270  0056                     	global	___fldiv@a
  1271                           ___fldiv@a:	; 4 bytes @ 0x36
  1272  0056                     	ds	4
  1273  0056                     	global	___fldiv@b
  1274                           ___fldiv@b:	; 4 bytes @ 0x3A
  1275  005A                     	ds	4
  1276  005A                     ??___fldiv:	; 1 bytes @ 0x3E
  1277  005E                     	ds	5
  1278  005E                     	global	___fldiv@rem
  1279                           ___fldiv@rem:	; 4 bytes @ 0x43
  1280  0063                     	ds	4
  1281  0063                     	global	___fldiv@sign
  1282                           ___fldiv@sign:	; 1 bytes @ 0x47
  1283  0067                     	ds	1
  1284  0067                     	global	___fldiv@new_exp
  1285                           ___fldiv@new_exp:	; 2 bytes @ 0x48
  1286  0068                     	ds	2
  1287  0068                     	global	___fldiv@grs
  1288                           ___fldiv@grs:	; 4 bytes @ 0x4A
  1289  006A                     	ds	4
  1290  006A                     	global	___fldiv@bexp
  1291                           ___fldiv@bexp:	; 1 bytes @ 0x4E
  1292  006E                     	ds	1
  1293  006E                     	global	___fldiv@aexp
  1294                           ___fldiv@aexp:	; 1 bytes @ 0x4F
  1295  006F                     	ds	1
  1296  006F                     ;!
  1297                           ;!Data Sizes:
  1298                           ;!    Strings     15
  1299                           ;!    Constant    10
  1300                           ;!    Data        0
  1301                           ;!    BSS         36
  1302                           ;!    Persistent  0
  1303                           ;!    Stack       0
  1304                           ;!
  1305                           ;!Auto Spaces:
  1306                           ;!    Space          Size  Autos    Used
  1307                           ;!    COMMON           14     14      14
  1308                           ;!    BANK0            80     80      80
  1309                           ;!    BANK1            80      4      40
  1310                           ;!    BANK3            96      0       0
  1311                           ;!    BANK2            96      0       0
  1312                           
  1313                           ;!
  1314                           ;!Pointer List with Targets:
  1315                           ;!
  1316                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1317                           ;!		 -> STR_2(CODE[3]), STR_1(CODE[3]), 
  1318                           ;!
  1319                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
  1320                           ;!		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 
  1321                           ;!
  1322                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1323                           ;!		 -> ?_sprintf(BANK0[2]), 
  1324                           ;!
  1325                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 5
  1326                           ;!		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 
  1327                           ;!		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 
  1328                           ;!
  1329                           
  1330                           
  1331                           ;!
  1332                           ;!Critical Paths under _main in COMMON
  1333                           ;!
  1334                           ;!    _main->___xxtofl
  1335                           ;!    _sprintf->___lwmod
  1336                           ;!    ___lwmod->___lwdiv
  1337                           ;!    _writeStrLCD->_writeCharLCD
  1338                           ;!    _setCursorLCD->_cmdLCD
  1339                           ;!    _initLCD->_cmdLCD
  1340                           ;!    _clcLCD->_cmdLCD
  1341                           ;!    _I2C_Master_Init->___lldiv
  1342                           ;!    ___flneg->___xxtofl
  1343                           ;!    ___flmul->___xxtofl
  1344                           ;!    ___fldiv->___xxtofl
  1345                           ;!    ___fladd->___xxtofl
  1346                           ;!
  1347                           ;!Critical Paths under _main in BANK0
  1348                           ;!
  1349                           ;!    _main->___fldiv
  1350                           ;!    _writeFloat->_writeIntLCD
  1351                           ;!    _writeIntLCD->_sprintf
  1352                           ;!    _setup->_I2C_Master_Init
  1353                           ;!    ___flmul->___fladd
  1354                           ;!    ___fldiv->___flmul
  1355                           ;!    ___fladd->___flneg
  1356                           ;!
  1357                           ;!Critical Paths under _main in BANK1
  1358                           ;!
  1359                           ;!    None.
  1360                           ;!
  1361                           ;!Critical Paths under _main in BANK3
  1362                           ;!
  1363                           ;!    None.
  1364                           ;!
  1365                           ;!Critical Paths under _main in BANK2
  1366                           ;!
  1367                           ;!    None.
  1368                           
  1369 ;;
  1370 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1371 ;;
  1372                           
  1373                           ;!
  1374                           ;!Call Graph Tables:
  1375                           ;!
  1376                           ;! ---------------------------------------------------------------------------------
  1377                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1378                           ;! ---------------------------------------------------------------------------------
  1379                           ;! (0) _main                                                 4     4      0   16967
  1380                           ;!                                              0 BANK1      4     4      0
  1381                           ;!                    _I2C_Master_Read
  1382                           ;!                   _I2C_Master_Start
  1383                           ;!                    _I2C_Master_Stop
  1384                           ;!                   _I2C_Master_Write
  1385                           ;!                            ___awmod
  1386                           ;!                            ___fladd
  1387                           ;!                            ___fldiv
  1388                           ;!                            ___flmul
  1389                           ;!                            ___flneg
  1390                           ;!                            ___fltol
  1391                           ;!                           ___xxtofl
  1392                           ;!                       _setCursorLCD
  1393                           ;!                              _setup
  1394                           ;!                       _writeCharLCD
  1395                           ;!                         _writeFloat
  1396                           ;!                        _writeIntLCD
  1397                           ;!                        _writeStrLCD
  1398                           ;! ---------------------------------------------------------------------------------
  1399                           ;! (1) _writeFloat                                           4     2      2    3186
  1400                           ;!                                             21 BANK0      4     2      2
  1401                           ;!                       _setCursorLCD
  1402                           ;!                       _writeCharLCD
  1403                           ;!                        _writeIntLCD
  1404                           ;! ---------------------------------------------------------------------------------
  1405                           ;! (1) _writeIntLCD                                          8     8      0    1964
  1406                           ;!                                             13 BANK0      8     8      0
  1407                           ;!                            _sprintf
  1408                           ;!                        _writeStrLCD
  1409                           ;! ---------------------------------------------------------------------------------
  1410                           ;! (2) _sprintf                                             21    18      3    1320
  1411                           ;!                                              0 BANK0     13    10      3
  1412                           ;!                            ___lwdiv
  1413                           ;!                            ___lwmod
  1414                           ;! ---------------------------------------------------------------------------------
  1415                           ;! (3) ___lwmod                                              6     2      4     311
  1416                           ;!                                              8 COMMON     6     2      4
  1417                           ;!                            ___lwdiv (ARG)
  1418                           ;! ---------------------------------------------------------------------------------
  1419                           ;! (3) ___lwdiv                                              8     4      4     314
  1420                           ;!                                              0 COMMON     8     4      4
  1421                           ;! ---------------------------------------------------------------------------------
  1422                           ;! (1) _setup                                                1     1      0    1872
  1423                           ;!                                              8 BANK0      1     1      0
  1424                           ;!                    _I2C_Master_Init
  1425                           ;!                             _clcLCD
  1426                           ;!                            _initLCD
  1427                           ;!                       _setCursorLCD
  1428                           ;!                        _writeStrLCD
  1429                           ;! ---------------------------------------------------------------------------------
  1430                           ;! (1) _writeStrLCD                                          7     5      2     568
  1431                           ;!                                              2 COMMON     7     5      2
  1432                           ;!                       _writeCharLCD
  1433                           ;! ---------------------------------------------------------------------------------
  1434                           ;! (2) _writeCharLCD                                         2     2      0      22
  1435                           ;!                                              0 COMMON     2     2      0
  1436                           ;! ---------------------------------------------------------------------------------
  1437                           ;! (2) _setCursorLCD                                         3     2      1     848
  1438                           ;!                                              3 COMMON     3     2      1
  1439                           ;!                             _cmdLCD
  1440                           ;! ---------------------------------------------------------------------------------
  1441                           ;! (2) _initLCD                                              2     2      0      22
  1442                           ;!                                              3 COMMON     2     2      0
  1443                           ;!                             _cmdLCD
  1444                           ;! ---------------------------------------------------------------------------------
  1445                           ;! (2) _clcLCD                                               0     0      0      22
  1446                           ;!                             _cmdLCD
  1447                           ;! ---------------------------------------------------------------------------------
  1448                           ;! (3) _cmdLCD                                               3     3      0      22
  1449                           ;!                                              0 COMMON     3     3      0
  1450                           ;! ---------------------------------------------------------------------------------
  1451                           ;! (2) _I2C_Master_Init                                      8     4      4     412
  1452                           ;!                                              0 BANK0      8     4      4
  1453                           ;!                            ___lldiv
  1454                           ;! ---------------------------------------------------------------------------------
  1455                           ;! (3) ___lldiv                                             14     6      8     314
  1456                           ;!                                              0 COMMON    14     6      8
  1457                           ;! ---------------------------------------------------------------------------------
  1458                           ;! (1) ___xxtofl                                            14    10      4     474
  1459                           ;!                                              0 COMMON    14    10      4
  1460                           ;! ---------------------------------------------------------------------------------
  1461                           ;! (1) ___fltol                                             11     7      4     381
  1462                           ;!                                              0 COMMON    11     7      4
  1463                           ;! ---------------------------------------------------------------------------------
  1464                           ;! (1) ___flneg                                              4     0      4     121
  1465                           ;!                                              0 BANK0      4     0      4
  1466                           ;!                           ___xxtofl (ARG)
  1467                           ;! ---------------------------------------------------------------------------------
  1468                           ;! (1) ___flmul                                             26    18      8    2569
  1469                           ;!                                             28 BANK0     26    18      8
  1470                           ;!                          __Umul8_16
  1471                           ;!                            ___fladd (ARG)
  1472                           ;!                            ___flneg (ARG)
  1473                           ;!                           ___xxtofl (ARG)
  1474                           ;! ---------------------------------------------------------------------------------
  1475                           ;! (2) __Umul8_16                                            9     7      2     799
  1476                           ;!                                              0 COMMON     9     7      2
  1477                           ;! ---------------------------------------------------------------------------------
  1478                           ;! (1) ___fldiv                                             26    18      8    1425
  1479                           ;!                                             54 BANK0     26    18      8
  1480                           ;!                            ___flmul (ARG)
  1481                           ;!                           ___xxtofl (ARG)
  1482                           ;! ---------------------------------------------------------------------------------
  1483                           ;! (1) ___fladd                                             24    16      8    2262
  1484                           ;!                                              4 BANK0     24    16      8
  1485                           ;!                            ___flneg (ARG)
  1486                           ;!                           ___xxtofl (ARG)
  1487                           ;! ---------------------------------------------------------------------------------
  1488                           ;! (1) ___awmod                                              7     3      4     600
  1489                           ;!                                              0 COMMON     7     3      4
  1490                           ;! ---------------------------------------------------------------------------------
  1491                           ;! (1) _I2C_Master_Write                                     2     0      2     174
  1492                           ;!                                              0 COMMON     2     0      2
  1493                           ;!                    _I2C_Master_Wait
  1494                           ;! ---------------------------------------------------------------------------------
  1495                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  1496                           ;!                    _I2C_Master_Wait
  1497                           ;! ---------------------------------------------------------------------------------
  1498                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  1499                           ;!                    _I2C_Master_Wait
  1500                           ;! ---------------------------------------------------------------------------------
  1501                           ;! (1) _I2C_Master_Read                                      6     4      2     501
  1502                           ;!                                              0 COMMON     6     4      2
  1503                           ;!                    _I2C_Master_Wait
  1504                           ;! ---------------------------------------------------------------------------------
  1505                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  1506                           ;! ---------------------------------------------------------------------------------
  1507                           ;! Estimated maximum stack depth 3
  1508                           ;! ---------------------------------------------------------------------------------
  1509                           ;!
  1510                           ;! Call Graph Graphs:
  1511                           ;!
  1512                           ;! _main (ROOT)
  1513                           ;!   _I2C_Master_Read
  1514                           ;!     _I2C_Master_Wait
  1515                           ;!   _I2C_Master_Start
  1516                           ;!     _I2C_Master_Wait
  1517                           ;!   _I2C_Master_Stop
  1518                           ;!     _I2C_Master_Wait
  1519                           ;!   _I2C_Master_Write
  1520                           ;!     _I2C_Master_Wait
  1521                           ;!   ___awmod
  1522                           ;!   ___fladd
  1523                           ;!     ___flneg (ARG)
  1524                           ;!       ___xxtofl (ARG)
  1525                           ;!     ___xxtofl (ARG)
  1526                           ;!   ___fldiv
  1527                           ;!     ___flmul (ARG)
  1528                           ;!       __Umul8_16
  1529                           ;!       ___fladd (ARG)
  1530                           ;!         ___flneg (ARG)
  1531                           ;!           ___xxtofl (ARG)
  1532                           ;!         ___xxtofl (ARG)
  1533                           ;!       ___flneg (ARG)
  1534                           ;!         ___xxtofl (ARG)
  1535                           ;!       ___xxtofl (ARG)
  1536                           ;!     ___xxtofl (ARG)
  1537                           ;!   ___flmul
  1538                           ;!     __Umul8_16
  1539                           ;!     ___fladd (ARG)
  1540                           ;!       ___flneg (ARG)
  1541                           ;!         ___xxtofl (ARG)
  1542                           ;!       ___xxtofl (ARG)
  1543                           ;!     ___flneg (ARG)
  1544                           ;!       ___xxtofl (ARG)
  1545                           ;!     ___xxtofl (ARG)
  1546                           ;!   ___flneg
  1547                           ;!     ___xxtofl (ARG)
  1548                           ;!   ___fltol
  1549                           ;!   ___xxtofl
  1550                           ;!   _setCursorLCD
  1551                           ;!     _cmdLCD
  1552                           ;!   _setup
  1553                           ;!     _I2C_Master_Init
  1554                           ;!       ___lldiv
  1555                           ;!     _clcLCD
  1556                           ;!       _cmdLCD
  1557                           ;!     _initLCD
  1558                           ;!       _cmdLCD
  1559                           ;!     _setCursorLCD
  1560                           ;!       _cmdLCD
  1561                           ;!     _writeStrLCD
  1562                           ;!       _writeCharLCD
  1563                           ;!   _writeCharLCD
  1564                           ;!   _writeFloat
  1565                           ;!     _setCursorLCD
  1566                           ;!       _cmdLCD
  1567                           ;!     _writeCharLCD
  1568                           ;!     _writeIntLCD
  1569                           ;!       _sprintf
  1570                           ;!         ___lwdiv
  1571                           ;!         ___lwmod
  1572                           ;!           ___lwdiv (ARG)
  1573                           ;!       _writeStrLCD
  1574                           ;!         _writeCharLCD
  1575                           ;!   _writeIntLCD
  1576                           ;!     _sprintf
  1577                           ;!       ___lwdiv
  1578                           ;!       ___lwmod
  1579                           ;!         ___lwdiv (ARG)
  1580                           ;!     _writeStrLCD
  1581                           ;!       _writeCharLCD
  1582                           ;!   _writeStrLCD
  1583                           ;!     _writeCharLCD
  1584                           ;!
  1585                           
  1586                           ;! Address spaces:
  1587                           
  1588                           ;!Name               Size   Autos  Total    Cost      Usage
  1589                           ;!BITCOMMON            E      0       0       0        0.0%
  1590                           ;!EEDATA             100      0       0       0        0.0%
  1591                           ;!NULL                 0      0       0       0        0.0%
  1592                           ;!CODE                 0      0       0       0        0.0%
  1593                           ;!COMMON               E      E       E       1      100.0%
  1594                           ;!BITSFR0              0      0       0       1        0.0%
  1595                           ;!SFR0                 0      0       0       1        0.0%
  1596                           ;!BITSFR1              0      0       0       2        0.0%
  1597                           ;!SFR1                 0      0       0       2        0.0%
  1598                           ;!STACK                0      0       0       2        0.0%
  1599                           ;!ABS                  0      0      86       3        0.0%
  1600                           ;!BITBANK0            50      0       0       4        0.0%
  1601                           ;!BITSFR3              0      0       0       4        0.0%
  1602                           ;!SFR3                 0      0       0       4        0.0%
  1603                           ;!BANK0               50     50      50       5      100.0%
  1604                           ;!BITSFR2              0      0       0       5        0.0%
  1605                           ;!SFR2                 0      0       0       5        0.0%
  1606                           ;!BITBANK1            50      0       0       6        0.0%
  1607                           ;!BANK1               50      4      28       7       50.0%
  1608                           ;!BITBANK3            60      0       0       8        0.0%
  1609                           ;!BANK3               60      0       0       9        0.0%
  1610                           ;!BITBANK2            60      0       0      10        0.0%
  1611                           ;!BANK2               60      0       0      11        0.0%
  1612                           ;!DATA                 0      0      86      12        0.0%
  1613                           
  1614                           	global	_main
  1615                           
  1616 ;; *************** function _main *****************
  1617 ;; Defined at:
  1618 ;;		line 61 in file "mainM.c"
  1619 ;; Parameters:    Size  Location     Type
  1620 ;;		None
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;		None
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  1    wreg      void 
  1625 ;; Registers used:
  1626 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1627 ;; Tracked objects:
  1628 ;;		On entry : B00/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1632 ;;      Params:         0       0       0       0       0
  1633 ;;      Locals:         0       0       0       0       0
  1634 ;;      Temps:          0       0       4       0       0
  1635 ;;      Totals:         0       0       4       0       0
  1636 ;;Total ram usage:        4 bytes
  1637 ;; Hardware stack levels required when called:    4
  1638 ;; This function calls:
  1639 ;;		_I2C_Master_Read
  1640 ;;		_I2C_Master_Start
  1641 ;;		_I2C_Master_Stop
  1642 ;;		_I2C_Master_Write
  1643 ;;		___awmod
  1644 ;;		___fladd
  1645 ;;		___fldiv
  1646 ;;		___flmul
  1647 ;;		___flneg
  1648 ;;		___fltol
  1649 ;;		___xxtofl
  1650 ;;		_setCursorLCD
  1651 ;;		_setup
  1652 ;;		_writeCharLCD
  1653 ;;		_writeFloat
  1654 ;;		_writeIntLCD
  1655 ;;		_writeStrLCD
  1656 ;; This function is called by:
  1657 ;;		Startup code after reset
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1661                           	file	"mainM.c"
  1662                           	line	61
  1663                           global __pmaintext
  1664                           __pmaintext:	;psect for function _main
  1665  0D51                     psect	maintext
  1666                           	file	"mainM.c"
  1667                           	line	61
  1668                           	global	__size_of_main
  1669                           	__size_of_main	equ	__end_of_main-_main
  1670  02AF                     	
  1671                           _main:	
  1672  0D51                     ;incstack = 0
  1673                           	opt	stack 4
  1674                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1675                           	line	62
  1676                           	
  1677                           l2724:	
  1678  0D51                     ;mainM.c: 62:     setup();
  1679                           	fcall	_setup
  1680  0D51  120A  158A  20E7  120A  158A  	goto	l2726
  1681  0D56  2D57               	line	63
  1682                           ;mainM.c: 63:     while(1){
  1683                           	
  1684                           l195:	
  1685  0D57                     	line	66
  1686                           	
  1687                           l2726:	
  1688  0D57                     ;mainM.c: 66:         count = toggle%3;
  1689                           	movlw	03h
  1690  0D57  3003               	movwf	(___awmod@divisor)
  1691  0D58  00F0               	movlw	0
  1692  0D59  3000               	movwf	((___awmod@divisor))+1
  1693  0D5A  00F1               	bsf	status, 5	;RP0=1, select bank1
  1694  0D5B  1683               	bcf	status, 6	;RP1=0, select bank1
  1695  0D5C  1303               	movf	(_toggle)^080h,w
  1696  0D5D  083B               	movwf	(??_main+0)^080h+0
  1697  0D5E  00C4               	clrf	(??_main+0)^080h+0+1
  1698  0D5F  01C5               	movf	0+(??_main+0)^080h+0,w
  1699  0D60  0844               	movwf	(___awmod@dividend)
  1700  0D61  00F2               	movf	1+(??_main+0)^080h+0,w
  1701  0D62  0845               	movwf	(___awmod@dividend+1)
  1702  0D63  00F3               	fcall	___awmod
  1703  0D64  120A  158A  2146  120A  158A  	movf	(0+(?___awmod)),w
  1704  0D69  0870               	bsf	status, 5	;RP0=1, select bank1
  1705  0D6A  1683               	bcf	status, 6	;RP1=0, select bank1
  1706  0D6B  1303               	movwf	(??_main+2)^080h+0
  1707  0D6C  00C6               	movf	(??_main+2)^080h+0,w
  1708  0D6D  0846               	movwf	(_count)^080h
  1709  0D6E  00B9               	line	67
  1710                           	
  1711                           l2728:	
  1712  0D6F                     ;mainM.c: 67:         I2C_Master_Start();
  1713                           	fcall	_I2C_Master_Start
  1714  0D6F  160A  118A  26CF  120A  158A  	line	68
  1715                           	
  1716                           l2730:	
  1717  0D74                     ;mainM.c: 68:         I2C_Master_Write(0x69);
  1718                           	movlw	069h
  1719  0D74  3069               	movwf	(I2C_Master_Write@d)
  1720  0D75  00F0               	movlw	0
  1721  0D76  3000               	movwf	((I2C_Master_Write@d))+1
  1722  0D77  00F1               	fcall	_I2C_Master_Write
  1723  0D78  160A  118A  26E1  120A  158A  	line	69
  1724                           	
  1725                           l2732:	
  1726  0D7D                     ;mainM.c: 69:         if(count == 0){
  1727                           	bsf	status, 5	;RP0=1, select bank1
  1728  0D7D  1683               	bcf	status, 6	;RP1=0, select bank1
  1729  0D7E  1303               	movf	((_count)^080h),w
  1730  0D7F  0839               	btfss	status,2
  1731  0D80  1D03               	goto	u3841
  1732  0D81  2D83               	goto	u3840
  1733  0D82  2D84               u3841:
  1734  0D83                     	goto	l2736
  1735  0D83  2D93               u3840:
  1736  0D84                     	line	70
  1737                           	
  1738                           l2734:	
  1739  0D84                     ;mainM.c: 70:             adcT = I2C_Master_Read(0);
  1740                           	movlw	0
  1741  0D84  3000               	movwf	(I2C_Master_Read@a)
  1742  0D85  00F0               	movwf	(I2C_Master_Read@a+1)
  1743  0D86  00F1               	fcall	_I2C_Master_Read
  1744  0D87  160A  118A  275F  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1745  0D8C  0870               	bsf	status, 5	;RP0=1, select bank1
  1746  0D8D  1683               	bcf	status, 6	;RP1=0, select bank1
  1747  0D8E  1303               	movwf	(??_main+0)^080h+0
  1748  0D8F  00C4               	movf	(??_main+0)^080h+0,w
  1749  0D90  0844               	movwf	(_adcT)^080h
  1750  0D91  00C2               	line	71
  1751                           ;mainM.c: 71:         }else if(count == 1){
  1752                           	goto	l2744
  1753  0D92  2DBE               	
  1754                           l196:	
  1755  0D93                     	
  1756                           l2736:	
  1757  0D93                     		decf	((_count)^080h),w
  1758  0D93  0339               	btfss	status,2
  1759  0D94  1D03               	goto	u3851
  1760  0D95  2D97               	goto	u3850
  1761  0D96  2D98               u3851:
  1762  0D97                     	goto	l2740
  1763  0D97  2DA7               u3850:
  1764  0D98                     	line	72
  1765                           	
  1766                           l2738:	
  1767  0D98                     ;mainM.c: 72:             alarm = I2C_Master_Read(0);
  1768                           	movlw	0
  1769  0D98  3000               	movwf	(I2C_Master_Read@a)
  1770  0D99  00F0               	movwf	(I2C_Master_Read@a+1)
  1771  0D9A  00F1               	fcall	_I2C_Master_Read
  1772  0D9B  160A  118A  275F  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1773  0DA0  0870               	bsf	status, 5	;RP0=1, select bank1
  1774  0DA1  1683               	bcf	status, 6	;RP1=0, select bank1
  1775  0DA2  1303               	movwf	(??_main+0)^080h+0
  1776  0DA3  00C4               	movf	(??_main+0)^080h+0,w
  1777  0DA4  0844               	movwf	(_alarm)^080h
  1778  0DA5  00BF               	line	73
  1779                           ;mainM.c: 73:         }else if(count == 2){
  1780                           	goto	l2744
  1781  0DA6  2DBE               	
  1782                           l198:	
  1783  0DA7                     	
  1784                           l2740:	
  1785  0DA7                     		movlw	2
  1786  0DA7  3002               	xorwf	((_count)^080h),w
  1787  0DA8  0639               	btfss	status,2
  1788  0DA9  1D03               	goto	u3861
  1789  0DAA  2DAC               	goto	u3860
  1790  0DAB  2DAD               u3861:
  1791  0DAC                     	goto	l2744
  1792  0DAC  2DBE               u3860:
  1793  0DAD                     	line	74
  1794                           	
  1795                           l2742:	
  1796  0DAD                     ;mainM.c: 74:             hall = I2C_Master_Read(0);
  1797                           	movlw	0
  1798  0DAD  3000               	movwf	(I2C_Master_Read@a)
  1799  0DAE  00F0               	movwf	(I2C_Master_Read@a+1)
  1800  0DAF  00F1               	fcall	_I2C_Master_Read
  1801  0DB0  160A  118A  275F  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1802  0DB5  0870               	bsf	status, 5	;RP0=1, select bank1
  1803  0DB6  1683               	bcf	status, 6	;RP1=0, select bank1
  1804  0DB7  1303               	movwf	(??_main+0)^080h+0
  1805  0DB8  00C4               	movf	(??_main+0)^080h+0,w
  1806  0DB9  0844               	movwf	(_hall)^080h
  1807  0DBA  00BE               	goto	l2744
  1808  0DBB  2DBE               	line	75
  1809                           ;mainM.c: 75:         }
  1810                           	
  1811                           l200:	
  1812  0DBC                     	goto	l2744
  1813  0DBC  2DBE               	
  1814                           l199:	
  1815  0DBD                     	goto	l2744
  1816  0DBD  2DBE               	
  1817                           l197:	
  1818  0DBE                     	line	76
  1819                           	
  1820                           l2744:	
  1821  0DBE                     ;mainM.c: 76:         toggle++;
  1822                           	movlw	low(01h)
  1823  0DBE  3001               	movwf	(??_main+0)^080h+0
  1824  0DBF  00C4               	movf	(??_main+0)^080h+0,w
  1825  0DC0  0844               	addwf	(_toggle)^080h,f
  1826  0DC1  07BB               	line	77
  1827                           	
  1828                           l2746:	
  1829  0DC2                     ;mainM.c: 77:         I2C_Master_Stop();
  1830                           	fcall	_I2C_Master_Stop
  1831  0DC2  160A  118A  26D8  120A  158A  	line	78
  1832                           	
  1833                           l2748:	
  1834  0DC7                     ;mainM.c: 78:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1835                           	opt asmopt_push
  1836                           opt asmopt_off
  1837                           movlw	13
  1838  0DC7  300D               	bsf	status, 5	;RP0=1, select bank1
  1839  0DC8  1683               	bcf	status, 6	;RP1=0, select bank1
  1840  0DC9  1303               movwf	((??_main+0)^080h+0+1),f
  1841  0DCA  00C5               	movlw	251
  1842  0DCB  30FB               movwf	((??_main+0)^080h+0),f
  1843  0DCC  00C4               	u3917:
  1844  0DCD                     decfsz	((??_main+0)^080h+0),f
  1845  0DCD  0BC4               	goto	u3917
  1846  0DCE  2DCD               	decfsz	((??_main+0)^080h+0+1),f
  1847  0DCF  0BC5               	goto	u3917
  1848  0DD0  2DCD               opt asmopt_pop
  1849                           
  1850                           	line	80
  1851                           	
  1852                           l2750:	
  1853  0DD1                     ;mainM.c: 80:         count2 = toggle2%3;
  1854                           	movlw	03h
  1855  0DD1  3003               	movwf	(___awmod@divisor)
  1856  0DD2  00F0               	movlw	0
  1857  0DD3  3000               	movwf	((___awmod@divisor))+1
  1858  0DD4  00F1               	bsf	status, 5	;RP0=1, select bank1
  1859  0DD5  1683               	bcf	status, 6	;RP1=0, select bank1
  1860  0DD6  1303               	movf	(_toggle2)^080h,w
  1861  0DD7  0838               	movwf	(??_main+0)^080h+0
  1862  0DD8  00C4               	clrf	(??_main+0)^080h+0+1
  1863  0DD9  01C5               	movf	0+(??_main+0)^080h+0,w
  1864  0DDA  0844               	movwf	(___awmod@dividend)
  1865  0DDB  00F2               	movf	1+(??_main+0)^080h+0,w
  1866  0DDC  0845               	movwf	(___awmod@dividend+1)
  1867  0DDD  00F3               	fcall	___awmod
  1868  0DDE  120A  158A  2146  120A  158A  	movf	(0+(?___awmod)),w
  1869  0DE3  0870               	bsf	status, 5	;RP0=1, select bank1
  1870  0DE4  1683               	bcf	status, 6	;RP1=0, select bank1
  1871  0DE5  1303               	movwf	(??_main+2)^080h+0
  1872  0DE6  00C6               	movf	(??_main+2)^080h+0,w
  1873  0DE7  0846               	movwf	(_count2)^080h
  1874  0DE8  00B7               	line	81
  1875                           	
  1876                           l2752:	
  1877  0DE9                     ;mainM.c: 81:         I2C_Master_Start();
  1878                           	fcall	_I2C_Master_Start
  1879  0DE9  160A  118A  26CF  120A  158A  	line	82
  1880                           	
  1881                           l2754:	
  1882  0DEE                     ;mainM.c: 82:         I2C_Master_Write(0x61);
  1883                           	movlw	061h
  1884  0DEE  3061               	movwf	(I2C_Master_Write@d)
  1885  0DEF  00F0               	movlw	0
  1886  0DF0  3000               	movwf	((I2C_Master_Write@d))+1
  1887  0DF1  00F1               	fcall	_I2C_Master_Write
  1888  0DF2  160A  118A  26E1  120A  158A  	line	83
  1889                           	
  1890                           l2756:	
  1891  0DF7                     ;mainM.c: 83:         if(count2 == 0){
  1892                           	bsf	status, 5	;RP0=1, select bank1
  1893  0DF7  1683               	bcf	status, 6	;RP1=0, select bank1
  1894  0DF8  1303               	movf	((_count2)^080h),w
  1895  0DF9  0837               	btfss	status,2
  1896  0DFA  1D03               	goto	u3871
  1897  0DFB  2DFD               	goto	u3870
  1898  0DFC  2DFE               u3871:
  1899  0DFD                     	goto	l2760
  1900  0DFD  2E0D               u3870:
  1901  0DFE                     	line	84
  1902                           	
  1903                           l2758:	
  1904  0DFE                     ;mainM.c: 84:             signal = I2C_Master_Read(0);
  1905                           	movlw	0
  1906  0DFE  3000               	movwf	(I2C_Master_Read@a)
  1907  0DFF  00F0               	movwf	(I2C_Master_Read@a+1)
  1908  0E00  00F1               	fcall	_I2C_Master_Read
  1909  0E01  160A  118A  275F  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1910  0E06  0870               	bsf	status, 5	;RP0=1, select bank1
  1911  0E07  1683               	bcf	status, 6	;RP1=0, select bank1
  1912  0E08  1303               	movwf	(??_main+0)^080h+0
  1913  0E09  00C4               	movf	(??_main+0)^080h+0,w
  1914  0E0A  0844               	movwf	(_signal)^080h
  1915  0E0B  00B5               	line	85
  1916                           ;mainM.c: 85:         }else if(count2 == 1){
  1917                           	goto	l2768
  1918  0E0C  2E38               	
  1919                           l201:	
  1920  0E0D                     	
  1921                           l2760:	
  1922  0E0D                     		decf	((_count2)^080h),w
  1923  0E0D  0337               	btfss	status,2
  1924  0E0E  1D03               	goto	u3881
  1925  0E0F  2E11               	goto	u3880
  1926  0E10  2E12               u3881:
  1927  0E11                     	goto	l2764
  1928  0E11  2E21               u3880:
  1929  0E12                     	line	86
  1930                           	
  1931                           l2762:	
  1932  0E12                     ;mainM.c: 86:             adcP = I2C_Master_Read(0);
  1933                           	movlw	0
  1934  0E12  3000               	movwf	(I2C_Master_Read@a)
  1935  0E13  00F0               	movwf	(I2C_Master_Read@a+1)
  1936  0E14  00F1               	fcall	_I2C_Master_Read
  1937  0E15  160A  118A  275F  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1938  0E1A  0870               	bsf	status, 5	;RP0=1, select bank1
  1939  0E1B  1683               	bcf	status, 6	;RP1=0, select bank1
  1940  0E1C  1303               	movwf	(??_main+0)^080h+0
  1941  0E1D  00C4               	movf	(??_main+0)^080h+0,w
  1942  0E1E  0844               	movwf	(_adcP)^080h
  1943  0E1F  00B6               	line	87
  1944                           ;mainM.c: 87:         }else if(count2 == 2){
  1945                           	goto	l2768
  1946  0E20  2E38               	
  1947                           l203:	
  1948  0E21                     	
  1949                           l2764:	
  1950  0E21                     		movlw	2
  1951  0E21  3002               	xorwf	((_count2)^080h),w
  1952  0E22  0637               	btfss	status,2
  1953  0E23  1D03               	goto	u3891
  1954  0E24  2E26               	goto	u3890
  1955  0E25  2E27               u3891:
  1956  0E26                     	goto	l2768
  1957  0E26  2E38               u3890:
  1958  0E27                     	line	88
  1959                           	
  1960                           l2766:	
  1961  0E27                     ;mainM.c: 88:             mov = I2C_Master_Read(0);
  1962                           	movlw	0
  1963  0E27  3000               	movwf	(I2C_Master_Read@a)
  1964  0E28  00F0               	movwf	(I2C_Master_Read@a+1)
  1965  0E29  00F1               	fcall	_I2C_Master_Read
  1966  0E2A  160A  118A  275F  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1967  0E2F  0870               	bsf	status, 5	;RP0=1, select bank1
  1968  0E30  1683               	bcf	status, 6	;RP1=0, select bank1
  1969  0E31  1303               	movwf	(??_main+0)^080h+0
  1970  0E32  00C4               	movf	(??_main+0)^080h+0,w
  1971  0E33  0844               	movwf	(_mov)^080h
  1972  0E34  00B4               	goto	l2768
  1973  0E35  2E38               	line	89
  1974                           ;mainM.c: 89:         }
  1975                           	
  1976                           l205:	
  1977  0E36                     	goto	l2768
  1978  0E36  2E38               	
  1979                           l204:	
  1980  0E37                     	goto	l2768
  1981  0E37  2E38               	
  1982                           l202:	
  1983  0E38                     	line	90
  1984                           	
  1985                           l2768:	
  1986  0E38                     ;mainM.c: 90:         toggle2++;
  1987                           	movlw	low(01h)
  1988  0E38  3001               	movwf	(??_main+0)^080h+0
  1989  0E39  00C4               	movf	(??_main+0)^080h+0,w
  1990  0E3A  0844               	addwf	(_toggle2)^080h,f
  1991  0E3B  07B8               	line	91
  1992                           	
  1993                           l2770:	
  1994  0E3C                     ;mainM.c: 91:         I2C_Master_Stop();
  1995                           	fcall	_I2C_Master_Stop
  1996  0E3C  160A  118A  26D8  120A  158A  	line	92
  1997                           	
  1998                           l2772:	
  1999  0E41                     ;mainM.c: 92:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2000                           	opt asmopt_push
  2001                           opt asmopt_off
  2002                           movlw	13
  2003  0E41  300D               	bsf	status, 5	;RP0=1, select bank1
  2004  0E42  1683               	bcf	status, 6	;RP1=0, select bank1
  2005  0E43  1303               movwf	((??_main+0)^080h+0+1),f
  2006  0E44  00C5               	movlw	251
  2007  0E45  30FB               movwf	((??_main+0)^080h+0),f
  2008  0E46  00C4               	u3927:
  2009  0E47                     decfsz	((??_main+0)^080h+0),f
  2010  0E47  0BC4               	goto	u3927
  2011  0E48  2E47               	decfsz	((??_main+0)^080h+0+1),f
  2012  0E49  0BC5               	goto	u3927
  2013  0E4A  2E47               opt asmopt_pop
  2014                           
  2015                           	line	101
  2016                           	
  2017                           l2774:	
  2018  0E4B                     ;mainM.c: 101:         if(signal){
  2019                           	bsf	status, 5	;RP0=1, select bank1
  2020  0E4B  1683               	bcf	status, 6	;RP1=0, select bank1
  2021  0E4C  1303               	movf	((_signal)^080h),w
  2022  0E4D  0835               	btfsc	status,2
  2023  0E4E  1903               	goto	u3901
  2024  0E4F  2E51               	goto	u3900
  2025  0E50  2E52               u3901:
  2026  0E51                     	goto	l206
  2027  0E51  2E56               u3900:
  2028  0E52                     	line	102
  2029                           	
  2030                           l2776:	
  2031  0E52                     ;mainM.c: 102:             PORTDbits.RD2 = 1;
  2032                           	bcf	status, 5	;RP0=0, select bank0
  2033  0E52  1283               	bcf	status, 6	;RP1=0, select bank0
  2034  0E53  1303               	bsf	(8),2	;volatile
  2035  0E54  1508               	line	103
  2036                           ;mainM.c: 103:         }else{
  2037                           	goto	l2778
  2038  0E55  2E5A               	
  2039                           l206:	
  2040  0E56                     	line	104
  2041                           ;mainM.c: 104:             PORTDbits.RD2 = 0;
  2042                           	bcf	status, 5	;RP0=0, select bank0
  2043  0E56  1283               	bcf	status, 6	;RP1=0, select bank0
  2044  0E57  1303               	bcf	(8),2	;volatile
  2045  0E58  1108               	goto	l2778
  2046  0E59  2E5A               	line	105
  2047                           ;mainM.c: 105:         }
  2048                           	
  2049                           l207:	
  2050  0E5A                     	line	107
  2051                           	
  2052                           l2778:	
  2053  0E5A                     ;mainM.c: 107:         sensorF1 = (float) adcT * 5/255;
  2054                           	movlw	0x43
  2055  0E5A  3043               	movwf	(___fldiv@a+3)
  2056  0E5B  00D9               	movlw	0x7f
  2057  0E5C  307F               	movwf	(___fldiv@a+2)
  2058  0E5D  00D8               	movlw	0x0
  2059  0E5E  3000               	movwf	(___fldiv@a+1)
  2060  0E5F  00D7               	movlw	0x0
  2061  0E60  3000               	movwf	(___fldiv@a)
  2062  0E61  00D6               
  2063                           	movlw	0x40
  2064  0E62  3040               	movwf	(___flmul@b+3)
  2065  0E63  00BF               	movlw	0xa0
  2066  0E64  30A0               	movwf	(___flmul@b+2)
  2067  0E65  00BE               	movlw	0x0
  2068  0E66  3000               	movwf	(___flmul@b+1)
  2069  0E67  00BD               	movlw	0x0
  2070  0E68  3000               	movwf	(___flmul@b)
  2071  0E69  00BC               
  2072                           	bsf	status, 5	;RP0=1, select bank1
  2073  0E6A  1683               	bcf	status, 6	;RP1=0, select bank1
  2074  0E6B  1303               	movf	(_adcT)^080h,w
  2075  0E6C  0842               	movwf	(??_main+0)^080h+0
  2076  0E6D  00C4               	clrf	(??_main+0)^080h+0+1
  2077  0E6E  01C5               	clrf	(??_main+0)^080h+0+2
  2078  0E6F  01C6               	clrf	(??_main+0)^080h+0+3
  2079  0E70  01C7               	movf	3+(??_main+0)^080h+0,w
  2080  0E71  0847               	movwf	(___xxtofl@val+3)
  2081  0E72  00F3               	movf	2+(??_main+0)^080h+0,w
  2082  0E73  0846               	movwf	(___xxtofl@val+2)
  2083  0E74  00F2               	movf	1+(??_main+0)^080h+0,w
  2084  0E75  0845               	movwf	(___xxtofl@val+1)
  2085  0E76  00F1               	movf	0+(??_main+0)^080h+0,w
  2086  0E77  0844               	movwf	(___xxtofl@val)
  2087  0E78  00F0               
  2088                           	movlw	low(0)
  2089  0E79  3000               	fcall	___xxtofl
  2090  0E7A  120A  158A  2286  120A  158A  	movf	(3+(?___xxtofl)),w
  2091  0E7F  0873               	bcf	status, 5	;RP0=0, select bank0
  2092  0E80  1283               	bcf	status, 6	;RP1=0, select bank0
  2093  0E81  1303               	movwf	(___flmul@a+3)
  2094  0E82  00C3               	movf	(2+(?___xxtofl)),w
  2095  0E83  0872               	movwf	(___flmul@a+2)
  2096  0E84  00C2               	movf	(1+(?___xxtofl)),w
  2097  0E85  0871               	movwf	(___flmul@a+1)
  2098  0E86  00C1               	movf	(0+(?___xxtofl)),w
  2099  0E87  0870               	movwf	(___flmul@a)
  2100  0E88  00C0               
  2101                           	fcall	___flmul
  2102  0E89  120A  118A  247E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2103  0E8E  1283               	bcf	status, 6	;RP1=0, select bank0
  2104  0E8F  1303               	movf	(3+(?___flmul)),w
  2105  0E90  083F               	movwf	(___fldiv@b+3)
  2106  0E91  00DD               	movf	(2+(?___flmul)),w
  2107  0E92  083E               	movwf	(___fldiv@b+2)
  2108  0E93  00DC               	movf	(1+(?___flmul)),w
  2109  0E94  083D               	movwf	(___fldiv@b+1)
  2110  0E95  00DB               	movf	(0+(?___flmul)),w
  2111  0E96  083C               	movwf	(___fldiv@b)
  2112  0E97  00DA               
  2113                           	fcall	___fldiv
  2114  0E98  120A  158A  2348  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2115  0E9D  1283               	bcf	status, 6	;RP1=0, select bank0
  2116  0E9E  1303               	movf	(3+(?___fldiv)),w
  2117  0E9F  0859               	bsf	status, 5	;RP0=1, select bank1
  2118  0EA0  1683               	bcf	status, 6	;RP1=0, select bank1
  2119  0EA1  1303               	movwf	(_sensorF1+3)^080h
  2120  0EA2  00B3               	bcf	status, 5	;RP0=0, select bank0
  2121  0EA3  1283               	bcf	status, 6	;RP1=0, select bank0
  2122  0EA4  1303               	movf	(2+(?___fldiv)),w
  2123  0EA5  0858               	bsf	status, 5	;RP0=1, select bank1
  2124  0EA6  1683               	bcf	status, 6	;RP1=0, select bank1
  2125  0EA7  1303               	movwf	(_sensorF1+2)^080h
  2126  0EA8  00B2               	bcf	status, 5	;RP0=0, select bank0
  2127  0EA9  1283               	bcf	status, 6	;RP1=0, select bank0
  2128  0EAA  1303               	movf	(1+(?___fldiv)),w
  2129  0EAB  0857               	bsf	status, 5	;RP0=1, select bank1
  2130  0EAC  1683               	bcf	status, 6	;RP1=0, select bank1
  2131  0EAD  1303               	movwf	(_sensorF1+1)^080h
  2132  0EAE  00B1               	bcf	status, 5	;RP0=0, select bank0
  2133  0EAF  1283               	bcf	status, 6	;RP1=0, select bank0
  2134  0EB0  1303               	movf	(0+(?___fldiv)),w
  2135  0EB1  0856               	bsf	status, 5	;RP0=1, select bank1
  2136  0EB2  1683               	bcf	status, 6	;RP1=0, select bank1
  2137  0EB3  1303               	movwf	(_sensorF1)^080h
  2138  0EB4  00B0               
  2139                           	line	108
  2140                           ;mainM.c: 108:         sensorF2 = (float) sensorF1/0.01;
  2141                           	movlw	0x3c
  2142  0EB5  303C               	bcf	status, 5	;RP0=0, select bank0
  2143  0EB6  1283               	bcf	status, 6	;RP1=0, select bank0
  2144  0EB7  1303               	movwf	(___fldiv@a+3)
  2145  0EB8  00D9               	movlw	0x23
  2146  0EB9  3023               	movwf	(___fldiv@a+2)
  2147  0EBA  00D8               	movlw	0xd7
  2148  0EBB  30D7               	movwf	(___fldiv@a+1)
  2149  0EBC  00D7               	movlw	0xa
  2150  0EBD  300A               	movwf	(___fldiv@a)
  2151  0EBE  00D6               
  2152                           	bsf	status, 5	;RP0=1, select bank1
  2153  0EBF  1683               	bcf	status, 6	;RP1=0, select bank1
  2154  0EC0  1303               	movf	(_sensorF1+3)^080h,w
  2155  0EC1  0833               	bcf	status, 5	;RP0=0, select bank0
  2156  0EC2  1283               	bcf	status, 6	;RP1=0, select bank0
  2157  0EC3  1303               	movwf	(___fldiv@b+3)
  2158  0EC4  00DD               	bsf	status, 5	;RP0=1, select bank1
  2159  0EC5  1683               	bcf	status, 6	;RP1=0, select bank1
  2160  0EC6  1303               	movf	(_sensorF1+2)^080h,w
  2161  0EC7  0832               	bcf	status, 5	;RP0=0, select bank0
  2162  0EC8  1283               	bcf	status, 6	;RP1=0, select bank0
  2163  0EC9  1303               	movwf	(___fldiv@b+2)
  2164  0ECA  00DC               	bsf	status, 5	;RP0=1, select bank1
  2165  0ECB  1683               	bcf	status, 6	;RP1=0, select bank1
  2166  0ECC  1303               	movf	(_sensorF1+1)^080h,w
  2167  0ECD  0831               	bcf	status, 5	;RP0=0, select bank0
  2168  0ECE  1283               	bcf	status, 6	;RP1=0, select bank0
  2169  0ECF  1303               	movwf	(___fldiv@b+1)
  2170  0ED0  00DB               	bsf	status, 5	;RP0=1, select bank1
  2171  0ED1  1683               	bcf	status, 6	;RP1=0, select bank1
  2172  0ED2  1303               	movf	(_sensorF1)^080h,w
  2173  0ED3  0830               	bcf	status, 5	;RP0=0, select bank0
  2174  0ED4  1283               	bcf	status, 6	;RP1=0, select bank0
  2175  0ED5  1303               	movwf	(___fldiv@b)
  2176  0ED6  00DA               
  2177                           	fcall	___fldiv
  2178  0ED7  120A  158A  2348  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2179  0EDC  1283               	bcf	status, 6	;RP1=0, select bank0
  2180  0EDD  1303               	movf	(3+(?___fldiv)),w
  2181  0EDE  0859               	bsf	status, 5	;RP0=1, select bank1
  2182  0EDF  1683               	bcf	status, 6	;RP1=0, select bank1
  2183  0EE0  1303               	movwf	(_sensorF2+3)^080h
  2184  0EE1  00AB               	bcf	status, 5	;RP0=0, select bank0
  2185  0EE2  1283               	bcf	status, 6	;RP1=0, select bank0
  2186  0EE3  1303               	movf	(2+(?___fldiv)),w
  2187  0EE4  0858               	bsf	status, 5	;RP0=1, select bank1
  2188  0EE5  1683               	bcf	status, 6	;RP1=0, select bank1
  2189  0EE6  1303               	movwf	(_sensorF2+2)^080h
  2190  0EE7  00AA               	bcf	status, 5	;RP0=0, select bank0
  2191  0EE8  1283               	bcf	status, 6	;RP1=0, select bank0
  2192  0EE9  1303               	movf	(1+(?___fldiv)),w
  2193  0EEA  0857               	bsf	status, 5	;RP0=1, select bank1
  2194  0EEB  1683               	bcf	status, 6	;RP1=0, select bank1
  2195  0EEC  1303               	movwf	(_sensorF2+1)^080h
  2196  0EED  00A9               	bcf	status, 5	;RP0=0, select bank0
  2197  0EEE  1283               	bcf	status, 6	;RP1=0, select bank0
  2198  0EEF  1303               	movf	(0+(?___fldiv)),w
  2199  0EF0  0856               	bsf	status, 5	;RP0=1, select bank1
  2200  0EF1  1683               	bcf	status, 6	;RP1=0, select bank1
  2201  0EF2  1303               	movwf	(_sensorF2)^080h
  2202  0EF3  00A8               
  2203                           	line	109
  2204                           	
  2205                           l2780:	
  2206  0EF4                     ;mainM.c: 109:         entero1 = (int) sensorF2;
  2207                           	movf	(_sensorF2+3)^080h,w
  2208  0EF4  082B               	movwf	(___fltol@f1+3)
  2209  0EF5  00F3               	movf	(_sensorF2+2)^080h,w
  2210  0EF6  082A               	movwf	(___fltol@f1+2)
  2211  0EF7  00F2               	movf	(_sensorF2+1)^080h,w
  2212  0EF8  0829               	movwf	(___fltol@f1+1)
  2213  0EF9  00F1               	movf	(_sensorF2)^080h,w
  2214  0EFA  0828               	movwf	(___fltol@f1)
  2215  0EFB  00F0               
  2216                           	fcall	___fltol
  2217  0EFC  120A  118A  2028  120A  158A  	movf	(0+(?___fltol)),w
  2218  0F01  0870               	bsf	status, 5	;RP0=1, select bank1
  2219  0F02  1683               	bcf	status, 6	;RP1=0, select bank1
  2220  0F03  1303               	movwf	(??_main+0)^080h+0
  2221  0F04  00C4               	movf	(??_main+0)^080h+0,w
  2222  0F05  0844               	movwf	(_entero1)^080h
  2223  0F06  00C1               	line	110
  2224                           	
  2225                           l2782:	
  2226  0F07                     ;mainM.c: 110:         float1 = (sensorF2 - entero1)*100;
  2227                           	movlw	0x42
  2228  0F07  3042               	bcf	status, 5	;RP0=0, select bank0
  2229  0F08  1283               	bcf	status, 6	;RP1=0, select bank0
  2230  0F09  1303               	movwf	(___flmul@b+3)
  2231  0F0A  00BF               	movlw	0xc8
  2232  0F0B  30C8               	movwf	(___flmul@b+2)
  2233  0F0C  00BE               	movlw	0x0
  2234  0F0D  3000               	movwf	(___flmul@b+1)
  2235  0F0E  00BD               	movlw	0x0
  2236  0F0F  3000               	movwf	(___flmul@b)
  2237  0F10  00BC               
  2238                           	bsf	status, 5	;RP0=1, select bank1
  2239  0F11  1683               	bcf	status, 6	;RP1=0, select bank1
  2240  0F12  1303               	movf	(_sensorF2+3)^080h,w
  2241  0F13  082B               	bcf	status, 5	;RP0=0, select bank0
  2242  0F14  1283               	bcf	status, 6	;RP1=0, select bank0
  2243  0F15  1303               	movwf	(___fladd@b+3)
  2244  0F16  00A7               	bsf	status, 5	;RP0=1, select bank1
  2245  0F17  1683               	bcf	status, 6	;RP1=0, select bank1
  2246  0F18  1303               	movf	(_sensorF2+2)^080h,w
  2247  0F19  082A               	bcf	status, 5	;RP0=0, select bank0
  2248  0F1A  1283               	bcf	status, 6	;RP1=0, select bank0
  2249  0F1B  1303               	movwf	(___fladd@b+2)
  2250  0F1C  00A6               	bsf	status, 5	;RP0=1, select bank1
  2251  0F1D  1683               	bcf	status, 6	;RP1=0, select bank1
  2252  0F1E  1303               	movf	(_sensorF2+1)^080h,w
  2253  0F1F  0829               	bcf	status, 5	;RP0=0, select bank0
  2254  0F20  1283               	bcf	status, 6	;RP1=0, select bank0
  2255  0F21  1303               	movwf	(___fladd@b+1)
  2256  0F22  00A5               	bsf	status, 5	;RP0=1, select bank1
  2257  0F23  1683               	bcf	status, 6	;RP1=0, select bank1
  2258  0F24  1303               	movf	(_sensorF2)^080h,w
  2259  0F25  0828               	bcf	status, 5	;RP0=0, select bank0
  2260  0F26  1283               	bcf	status, 6	;RP1=0, select bank0
  2261  0F27  1303               	movwf	(___fladd@b)
  2262  0F28  00A4               
  2263                           	bsf	status, 5	;RP0=1, select bank1
  2264  0F29  1683               	bcf	status, 6	;RP1=0, select bank1
  2265  0F2A  1303               	movf	(_entero1)^080h,w
  2266  0F2B  0841               	movwf	(??_main+0)^080h+0
  2267  0F2C  00C4               	clrf	(??_main+0)^080h+0+1
  2268  0F2D  01C5               	clrf	(??_main+0)^080h+0+2
  2269  0F2E  01C6               	clrf	(??_main+0)^080h+0+3
  2270  0F2F  01C7               	movf	3+(??_main+0)^080h+0,w
  2271  0F30  0847               	movwf	(___xxtofl@val+3)
  2272  0F31  00F3               	movf	2+(??_main+0)^080h+0,w
  2273  0F32  0846               	movwf	(___xxtofl@val+2)
  2274  0F33  00F2               	movf	1+(??_main+0)^080h+0,w
  2275  0F34  0845               	movwf	(___xxtofl@val+1)
  2276  0F35  00F1               	movf	0+(??_main+0)^080h+0,w
  2277  0F36  0844               	movwf	(___xxtofl@val)
  2278  0F37  00F0               
  2279                           	movlw	low(01h)
  2280  0F38  3001               	fcall	___xxtofl
  2281  0F39  120A  158A  2286  120A  158A  	movf	(3+(?___xxtofl)),w
  2282  0F3E  0873               	bcf	status, 5	;RP0=0, select bank0
  2283  0F3F  1283               	bcf	status, 6	;RP1=0, select bank0
  2284  0F40  1303               	movwf	(___flneg@f1+3)
  2285  0F41  00A3               	movf	(2+(?___xxtofl)),w
  2286  0F42  0872               	movwf	(___flneg@f1+2)
  2287  0F43  00A2               	movf	(1+(?___xxtofl)),w
  2288  0F44  0871               	movwf	(___flneg@f1+1)
  2289  0F45  00A1               	movf	(0+(?___xxtofl)),w
  2290  0F46  0870               	movwf	(___flneg@f1)
  2291  0F47  00A0               
  2292                           	fcall	___flneg
  2293  0F48  160A  118A  26FA  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2294  0F4D  1283               	bcf	status, 6	;RP1=0, select bank0
  2295  0F4E  1303               	movf	(3+(?___flneg)),w
  2296  0F4F  0823               	movwf	(___fladd@a+3)
  2297  0F50  00AB               	movf	(2+(?___flneg)),w
  2298  0F51  0822               	movwf	(___fladd@a+2)
  2299  0F52  00AA               	movf	(1+(?___flneg)),w
  2300  0F53  0821               	movwf	(___fladd@a+1)
  2301  0F54  00A9               	movf	(0+(?___flneg)),w
  2302  0F55  0820               	movwf	(___fladd@a)
  2303  0F56  00A8               
  2304                           	fcall	___fladd
  2305  0F57  120A  118A  21C2  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2306  0F5C  1283               	bcf	status, 6	;RP1=0, select bank0
  2307  0F5D  1303               	movf	(3+(?___fladd)),w
  2308  0F5E  0827               	movwf	(___flmul@a+3)
  2309  0F5F  00C3               	movf	(2+(?___fladd)),w
  2310  0F60  0826               	movwf	(___flmul@a+2)
  2311  0F61  00C2               	movf	(1+(?___fladd)),w
  2312  0F62  0825               	movwf	(___flmul@a+1)
  2313  0F63  00C1               	movf	(0+(?___fladd)),w
  2314  0F64  0824               	movwf	(___flmul@a)
  2315  0F65  00C0               
  2316                           	fcall	___flmul
  2317  0F66  120A  118A  247E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  2318  0F6B  1283               	bcf	status, 6	;RP1=0, select bank0
  2319  0F6C  1303               	movf	(3+(?___flmul)),w
  2320  0F6D  083F               	bsf	status, 5	;RP0=1, select bank1
  2321  0F6E  1683               	bcf	status, 6	;RP1=0, select bank1
  2322  0F6F  1303               	movwf	(_float1+3)^080h
  2323  0F70  00AF               	bcf	status, 5	;RP0=0, select bank0
  2324  0F71  1283               	bcf	status, 6	;RP1=0, select bank0
  2325  0F72  1303               	movf	(2+(?___flmul)),w
  2326  0F73  083E               	bsf	status, 5	;RP0=1, select bank1
  2327  0F74  1683               	bcf	status, 6	;RP1=0, select bank1
  2328  0F75  1303               	movwf	(_float1+2)^080h
  2329  0F76  00AE               	bcf	status, 5	;RP0=0, select bank0
  2330  0F77  1283               	bcf	status, 6	;RP1=0, select bank0
  2331  0F78  1303               	movf	(1+(?___flmul)),w
  2332  0F79  083D               	bsf	status, 5	;RP0=1, select bank1
  2333  0F7A  1683               	bcf	status, 6	;RP1=0, select bank1
  2334  0F7B  1303               	movwf	(_float1+1)^080h
  2335  0F7C  00AD               	bcf	status, 5	;RP0=0, select bank0
  2336  0F7D  1283               	bcf	status, 6	;RP1=0, select bank0
  2337  0F7E  1303               	movf	(0+(?___flmul)),w
  2338  0F7F  083C               	bsf	status, 5	;RP0=1, select bank1
  2339  0F80  1683               	bcf	status, 6	;RP1=0, select bank1
  2340  0F81  1303               	movwf	(_float1)^080h
  2341  0F82  00AC               
  2342                           	line	111
  2343                           ;mainM.c: 111:         dec1 = (int) float1;
  2344                           	movf	(_float1+3)^080h,w
  2345  0F83  082F               	movwf	(___fltol@f1+3)
  2346  0F84  00F3               	movf	(_float1+2)^080h,w
  2347  0F85  082E               	movwf	(___fltol@f1+2)
  2348  0F86  00F2               	movf	(_float1+1)^080h,w
  2349  0F87  082D               	movwf	(___fltol@f1+1)
  2350  0F88  00F1               	movf	(_float1)^080h,w
  2351  0F89  082C               	movwf	(___fltol@f1)
  2352  0F8A  00F0               
  2353                           	fcall	___fltol
  2354  0F8B  120A  118A  2028  120A  158A  	movf	(0+(?___fltol)),w
  2355  0F90  0870               	bsf	status, 5	;RP0=1, select bank1
  2356  0F91  1683               	bcf	status, 6	;RP1=0, select bank1
  2357  0F92  1303               	movwf	(??_main+0)^080h+0
  2358  0F93  00C4               	movf	(??_main+0)^080h+0,w
  2359  0F94  0844               	movwf	(_dec1)^080h
  2360  0F95  00C0               	line	113
  2361                           ;mainM.c: 113:         setCursorLCD(2, 1);
  2362                           	clrf	(setCursorLCD@x)
  2363  0F96  01F3               	incf	(setCursorLCD@x),f
  2364  0F97  0AF3               	movlw	low(02h)
  2365  0F98  3002               	fcall	_setCursorLCD
  2366  0F99  160A  118A  2718  120A  158A  	line	114
  2367                           	
  2368                           l2784:	
  2369  0F9E                     ;mainM.c: 114:         writeIntLCD(adcT);
  2370                           	bsf	status, 5	;RP0=1, select bank1
  2371  0F9E  1683               	bcf	status, 6	;RP1=0, select bank1
  2372  0F9F  1303               	movf	(_adcT)^080h,w
  2373  0FA0  0842               	fcall	_writeIntLCD
  2374  0FA1  120A  118A  200A  120A  158A  	line	115
  2375                           	
  2376                           l2786:	
  2377  0FA6                     ;mainM.c: 115:         writeCharLCD(' ');
  2378                           	movlw	low(020h)
  2379  0FA6  3020               	fcall	_writeCharLCD
  2380  0FA7  160A  118A  2709  120A  158A  	line	116
  2381                           	
  2382                           l2788:	
  2383  0FAC                     ;mainM.c: 116:         writeCharLCD(' ');
  2384                           	movlw	low(020h)
  2385  0FAC  3020               	fcall	_writeCharLCD
  2386  0FAD  160A  118A  2709  120A  158A  	line	117
  2387                           	
  2388                           l2790:	
  2389  0FB2                     ;mainM.c: 117:         setCursorLCD(2, 6);
  2390                           	movlw	low(06h)
  2391  0FB2  3006               	bsf	status, 5	;RP0=1, select bank1
  2392  0FB3  1683               	bcf	status, 6	;RP1=0, select bank1
  2393  0FB4  1303               	movwf	(??_main+0)^080h+0
  2394  0FB5  00C4               	movf	(??_main+0)^080h+0,w
  2395  0FB6  0844               	movwf	(setCursorLCD@x)
  2396  0FB7  00F3               	movlw	low(02h)
  2397  0FB8  3002               	fcall	_setCursorLCD
  2398  0FB9  160A  118A  2718  120A  158A  	line	118
  2399                           ;mainM.c: 118:         writeIntLCD(alarm);
  2400                           	bsf	status, 5	;RP0=1, select bank1
  2401  0FBE  1683               	bcf	status, 6	;RP1=0, select bank1
  2402  0FBF  1303               	movf	(_alarm)^080h,w
  2403  0FC0  083F               	fcall	_writeIntLCD
  2404  0FC1  120A  118A  200A  120A  158A  	line	119
  2405                           	
  2406                           l2792:	
  2407  0FC6                     ;mainM.c: 119:         setCursorLCD(2, 8);
  2408                           	movlw	low(08h)
  2409  0FC6  3008               	bsf	status, 5	;RP0=1, select bank1
  2410  0FC7  1683               	bcf	status, 6	;RP1=0, select bank1
  2411  0FC8  1303               	movwf	(??_main+0)^080h+0
  2412  0FC9  00C4               	movf	(??_main+0)^080h+0,w
  2413  0FCA  0844               	movwf	(setCursorLCD@x)
  2414  0FCB  00F3               	movlw	low(02h)
  2415  0FCC  3002               	fcall	_setCursorLCD
  2416  0FCD  160A  118A  2718  120A  158A  	line	120
  2417                           	
  2418                           l2794:	
  2419  0FD2                     ;mainM.c: 120:         writeIntLCD(hall);
  2420                           	bsf	status, 5	;RP0=1, select bank1
  2421  0FD2  1683               	bcf	status, 6	;RP1=0, select bank1
  2422  0FD3  1303               	movf	(_hall)^080h,w
  2423  0FD4  083E               	fcall	_writeIntLCD
  2424  0FD5  120A  118A  200A  120A  158A  	line	121
  2425                           	
  2426                           l2796:	
  2427  0FDA                     ;mainM.c: 121:         writeFloat(entero1, dec1, 10);
  2428                           	bsf	status, 5	;RP0=1, select bank1
  2429  0FDA  1683               	bcf	status, 6	;RP1=0, select bank1
  2430  0FDB  1303               	movf	(_dec1)^080h,w
  2431  0FDC  0840               	movwf	(??_main+0)^080h+0
  2432  0FDD  00C4               	movf	(??_main+0)^080h+0,w
  2433  0FDE  0844               	bcf	status, 5	;RP0=0, select bank0
  2434  0FDF  1283               	bcf	status, 6	;RP1=0, select bank0
  2435  0FE0  1303               	movwf	(writeFloat@decimal)
  2436  0FE1  00B5               	movlw	low(0Ah)
  2437  0FE2  300A               	bsf	status, 5	;RP0=1, select bank1
  2438  0FE3  1683               	bcf	status, 6	;RP1=0, select bank1
  2439  0FE4  1303               	movwf	(??_main+1)^080h+0
  2440  0FE5  00C5               	movf	(??_main+1)^080h+0,w
  2441  0FE6  0845               	bcf	status, 5	;RP0=0, select bank0
  2442  0FE7  1283               	bcf	status, 6	;RP1=0, select bank0
  2443  0FE8  1303               	movwf	(writeFloat@initPos)
  2444  0FE9  00B6               	bsf	status, 5	;RP0=1, select bank1
  2445  0FEA  1683               	bcf	status, 6	;RP1=0, select bank1
  2446  0FEB  1303               	movf	(_entero1)^080h,w
  2447  0FEC  0841               	fcall	_writeFloat
  2448  0FED  120A  158A  2216  120A  158A  	line	122
  2449                           	
  2450                           l2798:	
  2451  0FF2                     ;mainM.c: 122:         writeStrLCD("  ");
  2452                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  2453  0FF2  300B               	movwf	(writeStrLCD@string)
  2454  0FF3  00F2               	movlw	80h
  2455  0FF4  3080               	movwf	(writeStrLCD@string+1)
  2456  0FF5  00F3               	fcall	_writeStrLCD
  2457  0FF6  120A  158A  2058  120A  158A  	goto	l2726
  2458  0FFB  2D57               	line	123
  2459                           ;mainM.c: 123:     }
  2460                           	
  2461                           l208:	
  2462  0FFC                     	goto	l2726
  2463  0FFC  2D57               	
  2464                           l209:	
  2465  0FFD                     	line	125
  2466                           ;mainM.c: 124:     return;
  2467                           	
  2468                           l210:	
  2469  0FFD                     	global	start
  2470                           	ljmp	start
  2471  0FFD  120A  118A  2800   	opt stack 0
  2472                           GLOBAL	__end_of_main
  2473                           	__end_of_main:
  2474  1000                     	signat	_main,89
  2475                           	global	_writeFloat
  2476                           
  2477 ;; *************** function _writeFloat *****************
  2478 ;; Defined at:
  2479 ;;		line 69 in file "LCD.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;  integer         1    wreg     unsigned char 
  2482 ;;  decimal         1   21[BANK0 ] unsigned char 
  2483 ;;  initPos         1   22[BANK0 ] unsigned char 
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;  integer         1   24[BANK0 ] unsigned char 
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       2       0       0       0
  2496 ;;      Locals:         0       1       0       0       0
  2497 ;;      Temps:          0       1       0       0       0
  2498 ;;      Totals:         0       4       0       0       0
  2499 ;;Total ram usage:        4 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    3
  2502 ;; This function calls:
  2503 ;;		_setCursorLCD
  2504 ;;		_writeCharLCD
  2505 ;;		_writeIntLCD
  2506 ;; This function is called by:
  2507 ;;		_main
  2508 ;; This function uses a non-reentrant model
  2509 ;;
  2510                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2511                           	file	"LCD.c"
  2512                           	line	69
  2513                           global __ptext1
  2514                           __ptext1:	;psect for function _writeFloat
  2515  0A16                     psect	text1
  2516                           	file	"LCD.c"
  2517                           	line	69
  2518                           	global	__size_of_writeFloat
  2519                           	__size_of_writeFloat	equ	__end_of_writeFloat-_writeFloat
  2520  0070                     	
  2521                           _writeFloat:	
  2522  0A16                     ;incstack = 0
  2523                           	opt	stack 4
  2524                           ; Regs used in _writeFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2525                           ;writeFloat@integer stored from wreg
  2526                           	bcf	status, 5	;RP0=0, select bank0
  2527  0A16  1283               	bcf	status, 6	;RP1=0, select bank0
  2528  0A17  1303               	movwf	(writeFloat@integer)
  2529  0A18  00B8               	line	72
  2530                           	
  2531                           l2070:	
  2532  0A19                     ;LCD.c: 72:     setCursorLCD(2, initPos);
  2533                           	movf	(writeFloat@initPos),w
  2534  0A19  0836               	movwf	(??_writeFloat+0)+0
  2535  0A1A  00B7               	movf	(??_writeFloat+0)+0,w
  2536  0A1B  0837               	movwf	(setCursorLCD@x)
  2537  0A1C  00F3               	movlw	low(02h)
  2538  0A1D  3002               	fcall	_setCursorLCD
  2539  0A1E  160A  118A  2718  120A  158A  	line	73
  2540                           	
  2541                           l2072:	
  2542  0A23                     ;LCD.c: 73:     writeIntLCD(integer);
  2543                           	bcf	status, 5	;RP0=0, select bank0
  2544  0A23  1283               	bcf	status, 6	;RP1=0, select bank0
  2545  0A24  1303               	movf	(writeFloat@integer),w
  2546  0A25  0838               	fcall	_writeIntLCD
  2547  0A26  120A  118A  200A  120A  158A  	line	74
  2548                           	
  2549                           l2074:	
  2550  0A2B                     ;LCD.c: 74:     if(integer >= 10){
  2551                           	movlw	low(0Ah)
  2552  0A2B  300A               	bcf	status, 5	;RP0=0, select bank0
  2553  0A2C  1283               	bcf	status, 6	;RP1=0, select bank0
  2554  0A2D  1303               	subwf	(writeFloat@integer),w
  2555  0A2E  0238               	skipc
  2556  0A2F  1C03               	goto	u2351
  2557  0A30  2A32               	goto	u2350
  2558  0A31  2A33               u2351:
  2559  0A32                     	goto	l2078
  2560  0A32  2A38               u2350:
  2561  0A33                     	line	75
  2562                           	
  2563                           l2076:	
  2564  0A33                     ;LCD.c: 75:         initPos++;
  2565                           	movlw	low(01h)
  2566  0A33  3001               	movwf	(??_writeFloat+0)+0
  2567  0A34  00B7               	movf	(??_writeFloat+0)+0,w
  2568  0A35  0837               	addwf	(writeFloat@initPos),f
  2569  0A36  07B6               	goto	l2078
  2570  0A37  2A38               	line	76
  2571                           ;LCD.c: 76:     }if(integer >= 100){
  2572                           	
  2573                           l103:	
  2574  0A38                     	
  2575                           l2078:	
  2576  0A38                     	movlw	low(064h)
  2577  0A38  3064               	subwf	(writeFloat@integer),w
  2578  0A39  0238               	skipc
  2579  0A3A  1C03               	goto	u2361
  2580  0A3B  2A3D               	goto	u2360
  2581  0A3C  2A3E               u2361:
  2582  0A3D                     	goto	l2082
  2583  0A3D  2A43               u2360:
  2584  0A3E                     	line	77
  2585                           	
  2586                           l2080:	
  2587  0A3E                     ;LCD.c: 77:         initPos++;
  2588                           	movlw	low(01h)
  2589  0A3E  3001               	movwf	(??_writeFloat+0)+0
  2590  0A3F  00B7               	movf	(??_writeFloat+0)+0,w
  2591  0A40  0837               	addwf	(writeFloat@initPos),f
  2592  0A41  07B6               	goto	l2082
  2593  0A42  2A43               	line	78
  2594                           ;LCD.c: 78:     }
  2595                           	
  2596                           l104:	
  2597  0A43                     	line	79
  2598                           	
  2599                           l2082:	
  2600  0A43                     ;LCD.c: 79:     setCursorLCD(2, initPos + 1);
  2601                           	movf	(writeFloat@initPos),w
  2602  0A43  0836               	addlw	01h
  2603  0A44  3E01               	movwf	(??_writeFloat+0)+0
  2604  0A45  00B7               	movf	(??_writeFloat+0)+0,w
  2605  0A46  0837               	movwf	(setCursorLCD@x)
  2606  0A47  00F3               	movlw	low(02h)
  2607  0A48  3002               	fcall	_setCursorLCD
  2608  0A49  160A  118A  2718  120A  158A  	line	80
  2609                           	
  2610                           l2084:	
  2611  0A4E                     ;LCD.c: 80:     writeCharLCD('.');
  2612                           	movlw	low(02Eh)
  2613  0A4E  302E               	fcall	_writeCharLCD
  2614  0A4F  160A  118A  2709  120A  158A  	line	81
  2615                           	
  2616                           l2086:	
  2617  0A54                     ;LCD.c: 81:     setCursorLCD(2, initPos + 2);
  2618                           	bcf	status, 5	;RP0=0, select bank0
  2619  0A54  1283               	bcf	status, 6	;RP1=0, select bank0
  2620  0A55  1303               	movf	(writeFloat@initPos),w
  2621  0A56  0836               	addlw	02h
  2622  0A57  3E02               	movwf	(??_writeFloat+0)+0
  2623  0A58  00B7               	movf	(??_writeFloat+0)+0,w
  2624  0A59  0837               	movwf	(setCursorLCD@x)
  2625  0A5A  00F3               	movlw	low(02h)
  2626  0A5B  3002               	fcall	_setCursorLCD
  2627  0A5C  160A  118A  2718  120A  158A  	line	83
  2628                           	
  2629                           l2088:	
  2630  0A61                     ;LCD.c: 83:     if(decimal < 10){
  2631                           	movlw	low(0Ah)
  2632  0A61  300A               	bcf	status, 5	;RP0=0, select bank0
  2633  0A62  1283               	bcf	status, 6	;RP1=0, select bank0
  2634  0A63  1303               	subwf	(writeFloat@decimal),w
  2635  0A64  0235               	skipnc
  2636  0A65  1803               	goto	u2371
  2637  0A66  2A68               	goto	u2370
  2638  0A67  2A69               u2371:
  2639  0A68                     	goto	l2092
  2640  0A68  2A70               u2370:
  2641  0A69                     	line	84
  2642                           	
  2643                           l2090:	
  2644  0A69                     ;LCD.c: 84:         writeCharLCD('0');
  2645                           	movlw	low(030h)
  2646  0A69  3030               	fcall	_writeCharLCD
  2647  0A6A  160A  118A  2709  120A  158A  	goto	l2092
  2648  0A6F  2A70               	line	85
  2649                           ;LCD.c: 85:     }
  2650                           	
  2651                           l105:	
  2652  0A70                     	line	86
  2653                           	
  2654                           l2092:	
  2655  0A70                     ;LCD.c: 86:     writeIntLCD(decimal);
  2656                           	bcf	status, 5	;RP0=0, select bank0
  2657  0A70  1283               	bcf	status, 6	;RP1=0, select bank0
  2658  0A71  1303               	movf	(writeFloat@decimal),w
  2659  0A72  0835               	fcall	_writeIntLCD
  2660  0A73  120A  118A  200A  120A  158A  	line	88
  2661                           	
  2662                           l2094:	
  2663  0A78                     ;LCD.c: 88:     setCursorLCD(2, initPos + 4);
  2664                           	bcf	status, 5	;RP0=0, select bank0
  2665  0A78  1283               	bcf	status, 6	;RP1=0, select bank0
  2666  0A79  1303               	movf	(writeFloat@initPos),w
  2667  0A7A  0836               	addlw	04h
  2668  0A7B  3E04               	movwf	(??_writeFloat+0)+0
  2669  0A7C  00B7               	movf	(??_writeFloat+0)+0,w
  2670  0A7D  0837               	movwf	(setCursorLCD@x)
  2671  0A7E  00F3               	movlw	low(02h)
  2672  0A7F  3002               	fcall	_setCursorLCD
  2673  0A80  160A  118A  2718  120A  158A  	line	90
  2674                           	
  2675                           l106:	
  2676  0A85                     	return
  2677  0A85  0008               	opt stack 0
  2678                           GLOBAL	__end_of_writeFloat
  2679                           	__end_of_writeFloat:
  2680  0A86                     	signat	_writeFloat,12409
  2681                           	global	_writeIntLCD
  2682                           
  2683 ;; *************** function _writeIntLCD *****************
  2684 ;; Defined at:
  2685 ;;		line 57 in file "LCD.c"
  2686 ;; Parameters:    Size  Location     Type
  2687 ;;  numero          1    wreg     unsigned char 
  2688 ;; Auto vars:     Size  Location     Type
  2689 ;;  numero          1   20[BANK0 ] unsigned char 
  2690 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  2691 ;; Return value:  Size  Location     Type
  2692 ;;                  1    wreg      void 
  2693 ;; Registers used:
  2694 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2695 ;; Tracked objects:
  2696 ;;		On entry : 0/0
  2697 ;;		On exit  : 0/0
  2698 ;;		Unchanged: 0/0
  2699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2700 ;;      Params:         0       0       0       0       0
  2701 ;;      Locals:         0       5       0       0       0
  2702 ;;      Temps:          0       3       0       0       0
  2703 ;;      Totals:         0       8       0       0       0
  2704 ;;Total ram usage:        8 bytes
  2705 ;; Hardware stack levels used:    1
  2706 ;; Hardware stack levels required when called:    2
  2707 ;; This function calls:
  2708 ;;		_sprintf
  2709 ;;		_writeStrLCD
  2710 ;; This function is called by:
  2711 ;;		_writeFloat
  2712 ;;		_main
  2713 ;; This function uses a non-reentrant model
  2714 ;;
  2715                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2716                           	line	57
  2717                           global __ptext2
  2718                           __ptext2:	;psect for function _writeIntLCD
  2719  000A                     psect	text2
  2720                           	file	"LCD.c"
  2721                           	line	57
  2722                           	global	__size_of_writeIntLCD
  2723                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  2724  001E                     	
  2725                           _writeIntLCD:	
  2726  000A                     ;incstack = 0
  2727                           	opt	stack 5
  2728                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2729                           ;writeIntLCD@numero stored from wreg
  2730                           	bcf	status, 5	;RP0=0, select bank0
  2731  000A  1283               	bcf	status, 6	;RP1=0, select bank0
  2732  000B  1303               	movwf	(writeIntLCD@numero)
  2733  000C  00B4               	line	59
  2734                           	
  2735                           l2026:	
  2736  000D                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  2737                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2738  000D  3017               	movwf	(??_writeIntLCD+0)+0
  2739  000E  00AD               	movf	(??_writeIntLCD+0)+0,w
  2740  000F  082D               	movwf	(sprintf@f)
  2741  0010  00A0               	movf	(writeIntLCD@numero),w
  2742  0011  0834               	movwf	(??_writeIntLCD+1)+0
  2743  0012  00AE               	clrf	(??_writeIntLCD+1)+0+1
  2744  0013  01AF               	movf	0+(??_writeIntLCD+1)+0,w
  2745  0014  082E               	movwf	0+(?_sprintf)+01h
  2746  0015  00A1               	movf	1+(??_writeIntLCD+1)+0,w
  2747  0016  082F               	movwf	1+(?_sprintf)+01h
  2748  0017  00A2               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  2749  0018  3030               	fcall	_sprintf
  2750  0019  120A  118A  20C2  120A  118A  	line	60
  2751                           ;LCD.c: 60:     writeStrLCD(buffer);
  2752                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  2753  001E  3030               	movwf	(writeStrLCD@string)
  2754  001F  00F2               	movlw	(0x0)
  2755  0020  3000               	movwf	(writeStrLCD@string+1)
  2756  0021  00F3               	fcall	_writeStrLCD
  2757  0022  120A  158A  2058  120A  118A  	line	61
  2758                           	
  2759                           l97:	
  2760  0027                     	return
  2761  0027  0008               	opt stack 0
  2762                           GLOBAL	__end_of_writeIntLCD
  2763                           	__end_of_writeIntLCD:
  2764  0028                     	signat	_writeIntLCD,4217
  2765                           	global	_sprintf
  2766                           
  2767 ;; *************** function _sprintf *****************
  2768 ;; Defined at:
  2769 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2770 ;; Parameters:    Size  Location     Type
  2771 ;;  sp              1    wreg     PTR unsigned char 
  2772 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  2773 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2774 ;;		 -> STR_2(3), STR_1(3), 
  2775 ;; Auto vars:     Size  Location     Type
  2776 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2777 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  2778 ;;  tmpval          4    0        struct .
  2779 ;;  val             2    9[BANK0 ] unsigned int 
  2780 ;;  cp              2    0        PTR const unsigned char 
  2781 ;;  len             2    0        unsigned int 
  2782 ;;  c               1   12[BANK0 ] unsigned char 
  2783 ;;  prec            1    8[BANK0 ] char 
  2784 ;;  flag            1    7[BANK0 ] unsigned char 
  2785 ;;  ap              1    6[BANK0 ] PTR void [1]
  2786 ;;		 -> ?_sprintf(2), 
  2787 ;; Return value:  Size  Location     Type
  2788 ;;                  2    0[BANK0 ] int 
  2789 ;; Registers used:
  2790 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2791 ;; Tracked objects:
  2792 ;;		On entry : 0/0
  2793 ;;		On exit  : 0/0
  2794 ;;		Unchanged: 0/0
  2795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2796 ;;      Params:         0       3       0       0       0
  2797 ;;      Locals:         0       7       0       0       0
  2798 ;;      Temps:          0       3       0       0       0
  2799 ;;      Totals:         0      13       0       0       0
  2800 ;;Total ram usage:       13 bytes
  2801 ;; Hardware stack levels used:    1
  2802 ;; Hardware stack levels required when called:    1
  2803 ;; This function calls:
  2804 ;;		___lwdiv
  2805 ;;		___lwmod
  2806 ;; This function is called by:
  2807 ;;		_writeIntLCD
  2808 ;;		_writeIntLCD16
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2812                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2813                           	line	500
  2814                           global __ptext3
  2815                           __ptext3:	;psect for function _sprintf
  2816  00C2                     psect	text3
  2817                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2818                           	line	500
  2819                           	global	__size_of_sprintf
  2820                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2821  0100                     	
  2822                           _sprintf:	
  2823  00C2                     ;incstack = 0
  2824                           	opt	stack 5
  2825                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2826                           ;sprintf@sp stored from wreg
  2827                           	bcf	status, 5	;RP0=0, select bank0
  2828  00C2  1283               	bcf	status, 6	;RP1=0, select bank0
  2829  00C3  1303               	movwf	(sprintf@sp)
  2830  00C4  00AB               	line	545
  2831                           	
  2832                           l1896:	
  2833  00C5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2834                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2835  00C5  3021               	movwf	(??_sprintf+0)+0
  2836  00C6  00A3               	movf	(??_sprintf+0)+0,w
  2837  00C7  0823               	movwf	(sprintf@ap)
  2838  00C8  00A6               	line	548
  2839                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2840                           	goto	l1948
  2841  00C9  29A8               	
  2842                           l305:	
  2843  00CA                     	line	550
  2844                           	
  2845                           l1898:	
  2846  00CA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2847                           		movlw	37
  2848  00CA  3025               	xorwf	((sprintf@c)),w
  2849  00CB  062C               	btfsc	status,2
  2850  00CC  1903               	goto	u2121
  2851  00CD  28CF               	goto	u2120
  2852  00CE  28D0               u2121:
  2853  00CF                     	goto	l1904
  2854  00CF  28DC               u2120:
  2855  00D0                     	line	553
  2856                           	
  2857                           l1900:	
  2858  00D0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  2859                           	movf	(sprintf@c),w
  2860  00D0  082C               	movwf	(??_sprintf+0)+0
  2861  00D1  00A3               	movf	(sprintf@sp),w
  2862  00D2  082B               	movwf	fsr0
  2863  00D3  0084               	movf	(??_sprintf+0)+0,w
  2864  00D4  0823               	bcf	status, 7	;select IRP bank0
  2865  00D5  1383               	movwf	indf
  2866  00D6  0080               	
  2867                           l1902:	
  2868  00D7                     	movlw	low(01h)
  2869  00D7  3001               	movwf	(??_sprintf+0)+0
  2870  00D8  00A3               	movf	(??_sprintf+0)+0,w
  2871  00D9  0823               	addwf	(sprintf@sp),f
  2872  00DA  07AB               	line	554
  2873                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2874                           	goto	l1948
  2875  00DB  29A8               	line	555
  2876                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2877                           	
  2878                           l306:	
  2879  00DC                     	line	560
  2880                           	
  2881                           l1904:	
  2882  00DC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2883                           	clrf	(sprintf@flag)
  2884  00DC  01A7               	line	654
  2885                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2886                           	goto	l1908
  2887  00DD  28E3               	line	656
  2888                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2889                           	
  2890                           l308:	
  2891  00DE                     	line	657
  2892                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2893                           	goto	l1950
  2894  00DE  29BC               	line	716
  2895                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2896                           	
  2897                           l310:	
  2898  00DF                     	goto	l1910
  2899  00DF  2900               	line	717
  2900                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2901                           	
  2902                           l311:	
  2903  00E0                     	line	718
  2904                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2905                           	goto	l1910
  2906  00E0  2900               	line	821
  2907                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2908                           	
  2909                           l313:	
  2910  00E1                     	line	832
  2911                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2912                           	goto	l1948
  2913  00E1  29A8               	line	841
  2914                           	
  2915                           l1906:	
  2916  00E2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2917                           	goto	l1910
  2918  00E2  2900               	
  2919                           l307:	
  2920  00E3                     	
  2921                           l1908:	
  2922  00E3                     	movlw	01h
  2923  00E3  3001               	addwf	(sprintf@f),f
  2924  00E4  07A0               	movlw	-01h
  2925  00E5  30FF               	addwf	(sprintf@f),w
  2926  00E6  0720               	movwf	fsr0
  2927  00E7  0084               	fcall	stringdir
  2928  00E8  160A  118A  200A  120A  118A  	movwf	(sprintf@c)
  2929  00ED  00AC               	movwf	(??_sprintf+0)+0
  2930  00EE  00A3               	clrf	(??_sprintf+0)+0+1
  2931  00EF  01A4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2932                           ; Switch size 1, requested type "space"
  2933                           ; Number of cases is 1, Range of values is 0 to 0
  2934                           ; switch strategies available:
  2935                           ; Name         Instructions Cycles
  2936                           ; simple_byte            4     3 (average)
  2937                           ; direct_byte           11     8 (fixed)
  2938                           ; jumptable            260     6 (fixed)
  2939                           ;	Chosen strategy is simple_byte
  2940                           
  2941                           	movf 1+(??_sprintf+0)+0,w
  2942  00F0  0824               	opt asmopt_push
  2943                           	opt asmopt_off
  2944                           	xorlw	0^0	; case 0
  2945  00F1  3A00               	skipnz
  2946  00F2  1903               	goto	l2820
  2947  00F3  28F5               	goto	l1948
  2948  00F4  29A8               	opt asmopt_pop
  2949                           	
  2950                           l2820:	
  2951  00F5                     ; Switch size 1, requested type "space"
  2952                           ; Number of cases is 3, Range of values is 0 to 105
  2953                           ; switch strategies available:
  2954                           ; Name         Instructions Cycles
  2955                           ; simple_byte           10     6 (average)
  2956                           ; jumptable            260     6 (fixed)
  2957                           ;	Chosen strategy is simple_byte
  2958                           
  2959                           	movf 0+(??_sprintf+0)+0,w
  2960  00F5  0823               	opt asmopt_push
  2961                           	opt asmopt_off
  2962                           	xorlw	0^0	; case 0
  2963  00F6  3A00               	skipnz
  2964  00F7  1903               	goto	l1950
  2965  00F8  29BC               	xorlw	100^0	; case 100
  2966  00F9  3A64               	skipnz
  2967  00FA  1903               	goto	l1910
  2968  00FB  2900               	xorlw	105^100	; case 105
  2969  00FC  3A0D               	skipnz
  2970  00FD  1903               	goto	l1910
  2971  00FE  2900               	goto	l1948
  2972  00FF  29A8               	opt asmopt_pop
  2973                           
  2974                           	
  2975                           l312:	
  2976  0100                     	line	1278
  2977                           	
  2978                           l1910:	
  2979  0100                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2980                           	movf	(sprintf@ap),w
  2981  0100  0826               	movwf	fsr0
  2982  0101  0084               	bcf	status, 7	;select IRP bank0
  2983  0102  1383               	movf	indf,w
  2984  0103  0800               	movwf	(sprintf@val)
  2985  0104  00A9               	incf	fsr0,f
  2986  0105  0A84               	movf	indf,w
  2987  0106  0800               	movwf	(sprintf@val+1)
  2988  0107  00AA               	
  2989                           l1912:	
  2990  0108                     	movlw	low(02h)
  2991  0108  3002               	movwf	(??_sprintf+0)+0
  2992  0109  00A3               	movf	(??_sprintf+0)+0,w
  2993  010A  0823               	addwf	(sprintf@ap),f
  2994  010B  07A6               	line	1280
  2995                           	
  2996                           l1914:	
  2997  010C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2998                           	btfss	(sprintf@val+1),7
  2999  010C  1FAA               	goto	u2131
  3000  010D  290F               	goto	u2130
  3001  010E  2910               u2131:
  3002  010F                     	goto	l1920
  3003  010F  291A               u2130:
  3004  0110                     	line	1281
  3005                           	
  3006                           l1916:	
  3007  0110                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  3008                           	movlw	low(03h)
  3009  0110  3003               	movwf	(??_sprintf+0)+0
  3010  0111  00A3               	movf	(??_sprintf+0)+0,w
  3011  0112  0823               	iorwf	(sprintf@flag),f
  3012  0113  04A7               	line	1282
  3013                           	
  3014                           l1918:	
  3015  0114                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  3016                           	comf	(sprintf@val),f
  3017  0114  09A9               	comf	(sprintf@val+1),f
  3018  0115  09AA               	incf	(sprintf@val),f
  3019  0116  0AA9               	skipnz
  3020  0117  1903               	incf	(sprintf@val+1),f
  3021  0118  0AAA               	goto	l1920
  3022  0119  291A               	line	1283
  3023                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  3024                           	
  3025                           l314:	
  3026  011A                     	line	1324
  3027                           	
  3028                           l1920:	
  3029  011A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3030                           	clrf	(sprintf@c)
  3031  011A  01AC               	incf	(sprintf@c),f
  3032  011B  0AAC               	
  3033                           l1922:	
  3034  011C                     		movlw	5
  3035  011C  3005               	xorwf	((sprintf@c)),w
  3036  011D  062C               	btfss	status,2
  3037  011E  1D03               	goto	u2141
  3038  011F  2921               	goto	u2140
  3039  0120  2922               u2141:
  3040  0121                     	goto	l1926
  3041  0121  2924               u2140:
  3042  0122                     	goto	l1932
  3043  0122  294C               	
  3044                           l1924:	
  3045  0123                     	goto	l1932
  3046  0123  294C               	
  3047                           l315:	
  3048  0124                     	line	1325
  3049                           	
  3050                           l1926:	
  3051  0124                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  3052                           	movf	(sprintf@c),w
  3053  0124  082C               	movwf	(??_sprintf+0)+0
  3054  0125  00A3               	addwf	(??_sprintf+0)+0,w
  3055  0126  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3056  0127  3E01               	movwf	fsr0
  3057  0128  0084               	fcall	stringdir
  3058  0129  160A  118A  200A  120A  118A  	movwf	(??_sprintf+1)+0
  3059  012E  00A4               	fcall	stringdir
  3060  012F  160A  118A  200A  120A  118A  	movwf	(??_sprintf+1)+0+1
  3061  0134  00A5               	movf	1+(??_sprintf+1)+0,w
  3062  0135  0825               	subwf	(sprintf@val+1),w
  3063  0136  022A               	skipz
  3064  0137  1D03               	goto	u2155
  3065  0138  293B               	movf	0+(??_sprintf+1)+0,w
  3066  0139  0824               	subwf	(sprintf@val),w
  3067  013A  0229               u2155:
  3068  013B                     	skipnc
  3069  013B  1803               	goto	u2151
  3070  013C  293E               	goto	u2150
  3071  013D  293F               u2151:
  3072  013E                     	goto	l1930
  3073  013E  2941               u2150:
  3074  013F                     	goto	l1932
  3075  013F  294C               	line	1326
  3076                           	
  3077                           l1928:	
  3078  0140                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  3079                           	goto	l1932
  3080  0140  294C               	
  3081                           l317:	
  3082  0141                     	
  3083                           l1930:	
  3084  0141                     	movlw	low(01h)
  3085  0141  3001               	movwf	(??_sprintf+0)+0
  3086  0142  00A3               	movf	(??_sprintf+0)+0,w
  3087  0143  0823               	addwf	(sprintf@c),f
  3088  0144  07AC               		movlw	5
  3089  0145  3005               	xorwf	((sprintf@c)),w
  3090  0146  062C               	btfss	status,2
  3091  0147  1D03               	goto	u2161
  3092  0148  294A               	goto	u2160
  3093  0149  294B               u2161:
  3094  014A                     	goto	l1926
  3095  014A  2924               u2160:
  3096  014B                     	goto	l1932
  3097  014B  294C               	
  3098                           l316:	
  3099  014C                     	line	1457
  3100                           	
  3101                           l1932:	
  3102  014C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  3103                           	movf	(sprintf@flag),w
  3104  014C  0827               	andlw	03h
  3105  014D  3903               	btfsc	status,2
  3106  014E  1903               	goto	u2171
  3107  014F  2951               	goto	u2170
  3108  0150  2952               u2171:
  3109  0151                     	goto	l1938
  3110  0151  295E               u2170:
  3111  0152                     	line	1458
  3112                           	
  3113                           l1934:	
  3114  0152                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  3115                           	movlw	low(02Dh)
  3116  0152  302D               	movwf	(??_sprintf+0)+0
  3117  0153  00A3               	movf	(sprintf@sp),w
  3118  0154  082B               	movwf	fsr0
  3119  0155  0084               	movf	(??_sprintf+0)+0,w
  3120  0156  0823               	bcf	status, 7	;select IRP bank0
  3121  0157  1383               	movwf	indf
  3122  0158  0080               	
  3123                           l1936:	
  3124  0159                     	movlw	low(01h)
  3125  0159  3001               	movwf	(??_sprintf+0)+0
  3126  015A  00A3               	movf	(??_sprintf+0)+0,w
  3127  015B  0823               	addwf	(sprintf@sp),f
  3128  015C  07AB               	goto	l1938
  3129  015D  295E               	
  3130                           l318:	
  3131  015E                     	line	1491
  3132                           	
  3133                           l1938:	
  3134  015E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  3135                           	movf	(sprintf@c),w
  3136  015E  082C               	movwf	(??_sprintf+0)+0
  3137  015F  00A3               	movf	(??_sprintf+0)+0,w
  3138  0160  0823               	movwf	(sprintf@prec)
  3139  0161  00A8               	line	1493
  3140                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  3141                           	goto	l1946
  3142  0162  299D               	
  3143                           l320:	
  3144  0163                     	line	1508
  3145                           	
  3146                           l1940:	
  3147  0163                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  3148                           	movlw	0Ah
  3149  0163  300A               	movwf	(___lwmod@divisor)
  3150  0164  00F8               	movlw	0
  3151  0165  3000               	movwf	((___lwmod@divisor))+1
  3152  0166  00F9               	movf	(sprintf@prec),w
  3153  0167  0828               	movwf	(??_sprintf+0)+0
  3154  0168  00A3               	addwf	(??_sprintf+0)+0,w
  3155  0169  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  3156  016A  3E01               	movwf	fsr0
  3157  016B  0084               	fcall	stringdir
  3158  016C  160A  118A  200A  120A  118A  	movwf	(___lwdiv@divisor)
  3159  0171  00F0               	fcall	stringdir
  3160  0172  160A  118A  200A  120A  118A  	movwf	(___lwdiv@divisor+1)
  3161  0177  00F1               	movf	(sprintf@val+1),w
  3162  0178  082A               	movwf	(___lwdiv@dividend+1)
  3163  0179  00F3               	movf	(sprintf@val),w
  3164  017A  0829               	movwf	(___lwdiv@dividend)
  3165  017B  00F2               	fcall	___lwdiv
  3166  017C  120A  158A  209C  120A  118A  	movf	(1+(?___lwdiv)),w
  3167  0181  0871               	movwf	(___lwmod@dividend+1)
  3168  0182  00FB               	movf	(0+(?___lwdiv)),w
  3169  0183  0870               	movwf	(___lwmod@dividend)
  3170  0184  00FA               	fcall	___lwmod
  3171  0185  120A  158A  2017  120A  118A  	movf	(0+(?___lwmod)),w
  3172  018A  0878               	addlw	030h
  3173  018B  3E30               	bcf	status, 5	;RP0=0, select bank0
  3174  018C  1283               	bcf	status, 6	;RP1=0, select bank0
  3175  018D  1303               	movwf	(??_sprintf+1)+0
  3176  018E  00A4               	movf	(??_sprintf+1)+0,w
  3177  018F  0824               	movwf	(sprintf@c)
  3178  0190  00AC               	line	1543
  3179                           	
  3180                           l1942:	
  3181  0191                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  3182                           	movf	(sprintf@c),w
  3183  0191  082C               	movwf	(??_sprintf+0)+0
  3184  0192  00A3               	movf	(sprintf@sp),w
  3185  0193  082B               	movwf	fsr0
  3186  0194  0084               	movf	(??_sprintf+0)+0,w
  3187  0195  0823               	bcf	status, 7	;select IRP bank0
  3188  0196  1383               	movwf	indf
  3189  0197  0080               	
  3190                           l1944:	
  3191  0198                     	movlw	low(01h)
  3192  0198  3001               	movwf	(??_sprintf+0)+0
  3193  0199  00A3               	movf	(??_sprintf+0)+0,w
  3194  019A  0823               	addwf	(sprintf@sp),f
  3195  019B  07AB               	goto	l1946
  3196  019C  299D               	line	1544
  3197                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  3198                           	
  3199                           l319:	
  3200  019D                     	line	1493
  3201                           	
  3202                           l1946:	
  3203  019D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  3204                           	movlw	low(-1)
  3205  019D  30FF               	movwf	(??_sprintf+0)+0
  3206  019E  00A3               	movf	(??_sprintf+0)+0,w
  3207  019F  0823               	addwf	(sprintf@prec),f
  3208  01A0  07A8               		incf	(((sprintf@prec))),w
  3209  01A1  0A28               	btfss	status,2
  3210  01A2  1D03               	goto	u2181
  3211  01A3  29A5               	goto	u2180
  3212  01A4  29A6               u2181:
  3213  01A5                     	goto	l1940
  3214  01A5  2963               u2180:
  3215  01A6                     	goto	l1948
  3216  01A6  29A8               	
  3217                           l321:	
  3218  01A7                     	goto	l1948
  3219  01A7  29A8               	line	1552
  3220                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  3221                           	
  3222                           l304:	
  3223  01A8                     	line	548
  3224                           	
  3225                           l1948:	
  3226  01A8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  3227                           	movlw	01h
  3228  01A8  3001               	addwf	(sprintf@f),f
  3229  01A9  07A0               	movlw	-01h
  3230  01AA  30FF               	addwf	(sprintf@f),w
  3231  01AB  0720               	movwf	fsr0
  3232  01AC  0084               	fcall	stringdir
  3233  01AD  160A  118A  200A  120A  118A  	movwf	(??_sprintf+0)+0
  3234  01B2  00A3               	movf	(??_sprintf+0)+0,w
  3235  01B3  0823               	movwf	(sprintf@c)
  3236  01B4  00AC               	movf	(((sprintf@c))),w
  3237  01B5  082C               	btfss	status,2
  3238  01B6  1D03               	goto	u2191
  3239  01B7  29B9               	goto	u2190
  3240  01B8  29BA               u2191:
  3241  01B9                     	goto	l1898
  3242  01B9  28CA               u2190:
  3243  01BA                     	goto	l1950
  3244  01BA  29BC               	
  3245                           l322:	
  3246  01BB                     	goto	l1950
  3247  01BB  29BC               	line	1554
  3248                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  3249                           	
  3250                           l309:	
  3251  01BC                     	line	1557
  3252                           	
  3253                           l1950:	
  3254  01BC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  3255                           	movf	(sprintf@sp),w
  3256  01BC  082B               	movwf	fsr0
  3257  01BD  0084               	bcf	status, 7	;select IRP bank0
  3258  01BE  1383               	clrf	indf
  3259  01BF  0180               	goto	l323
  3260  01C0  29C1               	line	1559
  3261                           	
  3262                           l1952:	
  3263  01C1                     	line	1560
  3264                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  3265                           	
  3266                           l323:	
  3267  01C1                     	return
  3268  01C1  0008               	opt stack 0
  3269                           GLOBAL	__end_of_sprintf
  3270                           	__end_of_sprintf:
  3271  01C2                     	signat	_sprintf,4698
  3272                           	global	___lwmod
  3273                           
  3274 ;; *************** function ___lwmod *****************
  3275 ;; Defined at:
  3276 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3277 ;; Parameters:    Size  Location     Type
  3278 ;;  divisor         2    8[COMMON] unsigned int 
  3279 ;;  dividend        2   10[COMMON] unsigned int 
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;  counter         1   13[COMMON] unsigned char 
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  2    8[COMMON] unsigned int 
  3284 ;; Registers used:
  3285 ;;		wreg, status,2, status,0
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3291 ;;      Params:         4       0       0       0       0
  3292 ;;      Locals:         1       0       0       0       0
  3293 ;;      Temps:          1       0       0       0       0
  3294 ;;      Totals:         6       0       0       0       0
  3295 ;;Total ram usage:        6 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; This function calls:
  3298 ;;		Nothing
  3299 ;; This function is called by:
  3300 ;;		_sprintf
  3301 ;; This function uses a non-reentrant model
  3302 ;;
  3303                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  3304                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3305                           	line	5
  3306                           global __ptext4
  3307                           __ptext4:	;psect for function ___lwmod
  3308  0817                     psect	text4
  3309                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  3310                           	line	5
  3311                           	global	__size_of___lwmod
  3312                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  3313  0041                     	
  3314                           ___lwmod:	
  3315  0817                     ;incstack = 0
  3316                           	opt	stack 5
  3317                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  3318                           	line	12
  3319                           	
  3320                           l1858:	
  3321  0817                     	movf	((___lwmod@divisor)),w
  3322  0817  0878               iorwf	((___lwmod@divisor+1)),w
  3323  0818  0479               	btfsc	status,2
  3324  0819  1903               	goto	u2031
  3325  081A  281C               	goto	u2030
  3326  081B  281D               u2031:
  3327  081C                     	goto	l1876
  3328  081C  2852               u2030:
  3329  081D                     	line	13
  3330                           	
  3331                           l1860:	
  3332  081D                     	clrf	(___lwmod@counter)
  3333  081D  01FD               	incf	(___lwmod@counter),f
  3334  081E  0AFD               	line	14
  3335                           	goto	l1866
  3336  081F  282C               	
  3337                           l604:	
  3338  0820                     	line	15
  3339                           	
  3340                           l1862:	
  3341  0820                     	movlw	01h
  3342  0820  3001               	
  3343                           u2045:
  3344  0821                     	clrc
  3345  0821  1003               	rlf	(___lwmod@divisor),f
  3346  0822  0DF8               	rlf	(___lwmod@divisor+1),f
  3347  0823  0DF9               	addlw	-1
  3348  0824  3EFF               	skipz
  3349  0825  1D03               	goto	u2045
  3350  0826  2821               	line	16
  3351                           	
  3352                           l1864:	
  3353  0827                     	movlw	low(01h)
  3354  0827  3001               	movwf	(??___lwmod+0)+0
  3355  0828  00FC               	movf	(??___lwmod+0)+0,w
  3356  0829  087C               	addwf	(___lwmod@counter),f
  3357  082A  07FD               	goto	l1866
  3358  082B  282C               	line	17
  3359                           	
  3360                           l603:	
  3361  082C                     	line	14
  3362                           	
  3363                           l1866:	
  3364  082C                     	btfss	(___lwmod@divisor+1),(15)&7
  3365  082C  1FF9               	goto	u2051
  3366  082D  282F               	goto	u2050
  3367  082E  2830               u2051:
  3368  082F                     	goto	l1862
  3369  082F  2820               u2050:
  3370  0830                     	goto	l1868
  3371  0830  2832               	
  3372                           l605:	
  3373  0831                     	goto	l1868
  3374  0831  2832               	line	18
  3375                           	
  3376                           l606:	
  3377  0832                     	line	19
  3378                           	
  3379                           l1868:	
  3380  0832                     	movf	(___lwmod@divisor+1),w
  3381  0832  0879               	subwf	(___lwmod@dividend+1),w
  3382  0833  027B               	skipz
  3383  0834  1D03               	goto	u2065
  3384  0835  2838               	movf	(___lwmod@divisor),w
  3385  0836  0878               	subwf	(___lwmod@dividend),w
  3386  0837  027A               u2065:
  3387  0838                     	skipc
  3388  0838  1C03               	goto	u2061
  3389  0839  283B               	goto	u2060
  3390  083A  283C               u2061:
  3391  083B                     	goto	l1872
  3392  083B  2843               u2060:
  3393  083C                     	line	20
  3394                           	
  3395                           l1870:	
  3396  083C                     	movf	(___lwmod@divisor),w
  3397  083C  0878               	subwf	(___lwmod@dividend),f
  3398  083D  02FA               	movf	(___lwmod@divisor+1),w
  3399  083E  0879               	skipc
  3400  083F  1C03               	decf	(___lwmod@dividend+1),f
  3401  0840  03FB               	subwf	(___lwmod@dividend+1),f
  3402  0841  02FB               	goto	l1872
  3403  0842  2843               	
  3404                           l607:	
  3405  0843                     	line	21
  3406                           	
  3407                           l1872:	
  3408  0843                     	movlw	01h
  3409  0843  3001               	
  3410                           u2075:
  3411  0844                     	clrc
  3412  0844  1003               	rrf	(___lwmod@divisor+1),f
  3413  0845  0CF9               	rrf	(___lwmod@divisor),f
  3414  0846  0CF8               	addlw	-1
  3415  0847  3EFF               	skipz
  3416  0848  1D03               	goto	u2075
  3417  0849  2844               	line	22
  3418                           	
  3419                           l1874:	
  3420  084A                     	movlw	01h
  3421  084A  3001               	subwf	(___lwmod@counter),f
  3422  084B  02FD               	btfss	status,2
  3423  084C  1D03               	goto	u2081
  3424  084D  284F               	goto	u2080
  3425  084E  2850               u2081:
  3426  084F                     	goto	l1868
  3427  084F  2832               u2080:
  3428  0850                     	goto	l1876
  3429  0850  2852               	
  3430                           l608:	
  3431  0851                     	goto	l1876
  3432  0851  2852               	line	23
  3433                           	
  3434                           l602:	
  3435  0852                     	line	24
  3436                           	
  3437                           l1876:	
  3438  0852                     	movf	(___lwmod@dividend+1),w
  3439  0852  087B               	movwf	(?___lwmod+1)
  3440  0853  00F9               	movf	(___lwmod@dividend),w
  3441  0854  087A               	movwf	(?___lwmod)
  3442  0855  00F8               	goto	l609
  3443  0856  2857               	
  3444                           l1878:	
  3445  0857                     	line	25
  3446                           	
  3447                           l609:	
  3448  0857                     	return
  3449  0857  0008               	opt stack 0
  3450                           GLOBAL	__end_of___lwmod
  3451                           	__end_of___lwmod:
  3452  0858                     	signat	___lwmod,8314
  3453                           	global	___lwdiv
  3454                           
  3455 ;; *************** function ___lwdiv *****************
  3456 ;; Defined at:
  3457 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3458 ;; Parameters:    Size  Location     Type
  3459 ;;  divisor         2    0[COMMON] unsigned int 
  3460 ;;  dividend        2    2[COMMON] unsigned int 
  3461 ;; Auto vars:     Size  Location     Type
  3462 ;;  quotient        2    5[COMMON] unsigned int 
  3463 ;;  counter         1    7[COMMON] unsigned char 
  3464 ;; Return value:  Size  Location     Type
  3465 ;;                  2    0[COMMON] unsigned int 
  3466 ;; Registers used:
  3467 ;;		wreg, status,2, status,0
  3468 ;; Tracked objects:
  3469 ;;		On entry : 0/0
  3470 ;;		On exit  : 0/0
  3471 ;;		Unchanged: 0/0
  3472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3473 ;;      Params:         4       0       0       0       0
  3474 ;;      Locals:         3       0       0       0       0
  3475 ;;      Temps:          1       0       0       0       0
  3476 ;;      Totals:         8       0       0       0       0
  3477 ;;Total ram usage:        8 bytes
  3478 ;; Hardware stack levels used:    1
  3479 ;; This function calls:
  3480 ;;		Nothing
  3481 ;; This function is called by:
  3482 ;;		_sprintf
  3483 ;; This function uses a non-reentrant model
  3484 ;;
  3485                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3486                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3487                           	line	5
  3488                           global __ptext5
  3489                           __ptext5:	;psect for function ___lwdiv
  3490  089C                     psect	text5
  3491                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3492                           	line	5
  3493                           	global	__size_of___lwdiv
  3494                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3495  004B                     	
  3496                           ___lwdiv:	
  3497  089C                     ;incstack = 0
  3498                           	opt	stack 5
  3499                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3500                           	line	13
  3501                           	
  3502                           l1832:	
  3503  089C                     	clrf	(___lwdiv@quotient)
  3504  089C  01F5               	clrf	(___lwdiv@quotient+1)
  3505  089D  01F6               	line	14
  3506                           	
  3507                           l1834:	
  3508  089E                     	movf	((___lwdiv@divisor)),w
  3509  089E  0870               iorwf	((___lwdiv@divisor+1)),w
  3510  089F  0471               	btfsc	status,2
  3511  08A0  1903               	goto	u1961
  3512  08A1  28A3               	goto	u1960
  3513  08A2  28A4               u1961:
  3514  08A3                     	goto	l1854
  3515  08A3  28E1               u1960:
  3516  08A4                     	line	15
  3517                           	
  3518                           l1836:	
  3519  08A4                     	clrf	(___lwdiv@counter)
  3520  08A4  01F7               	incf	(___lwdiv@counter),f
  3521  08A5  0AF7               	line	16
  3522                           	goto	l1842
  3523  08A6  28B3               	
  3524                           l594:	
  3525  08A7                     	line	17
  3526                           	
  3527                           l1838:	
  3528  08A7                     	movlw	01h
  3529  08A7  3001               	
  3530                           u1975:
  3531  08A8                     	clrc
  3532  08A8  1003               	rlf	(___lwdiv@divisor),f
  3533  08A9  0DF0               	rlf	(___lwdiv@divisor+1),f
  3534  08AA  0DF1               	addlw	-1
  3535  08AB  3EFF               	skipz
  3536  08AC  1D03               	goto	u1975
  3537  08AD  28A8               	line	18
  3538                           	
  3539                           l1840:	
  3540  08AE                     	movlw	low(01h)
  3541  08AE  3001               	movwf	(??___lwdiv+0)+0
  3542  08AF  00F4               	movf	(??___lwdiv+0)+0,w
  3543  08B0  0874               	addwf	(___lwdiv@counter),f
  3544  08B1  07F7               	goto	l1842
  3545  08B2  28B3               	line	19
  3546                           	
  3547                           l593:	
  3548  08B3                     	line	16
  3549                           	
  3550                           l1842:	
  3551  08B3                     	btfss	(___lwdiv@divisor+1),(15)&7
  3552  08B3  1FF1               	goto	u1981
  3553  08B4  28B6               	goto	u1980
  3554  08B5  28B7               u1981:
  3555  08B6                     	goto	l1838
  3556  08B6  28A7               u1980:
  3557  08B7                     	goto	l1844
  3558  08B7  28B9               	
  3559                           l595:	
  3560  08B8                     	goto	l1844
  3561  08B8  28B9               	line	20
  3562                           	
  3563                           l596:	
  3564  08B9                     	line	21
  3565                           	
  3566                           l1844:	
  3567  08B9                     	movlw	01h
  3568  08B9  3001               	
  3569                           u1995:
  3570  08BA                     	clrc
  3571  08BA  1003               	rlf	(___lwdiv@quotient),f
  3572  08BB  0DF5               	rlf	(___lwdiv@quotient+1),f
  3573  08BC  0DF6               	addlw	-1
  3574  08BD  3EFF               	skipz
  3575  08BE  1D03               	goto	u1995
  3576  08BF  28BA               	line	22
  3577                           	movf	(___lwdiv@divisor+1),w
  3578  08C0  0871               	subwf	(___lwdiv@dividend+1),w
  3579  08C1  0273               	skipz
  3580  08C2  1D03               	goto	u2005
  3581  08C3  28C6               	movf	(___lwdiv@divisor),w
  3582  08C4  0870               	subwf	(___lwdiv@dividend),w
  3583  08C5  0272               u2005:
  3584  08C6                     	skipc
  3585  08C6  1C03               	goto	u2001
  3586  08C7  28C9               	goto	u2000
  3587  08C8  28CA               u2001:
  3588  08C9                     	goto	l1850
  3589  08C9  28D2               u2000:
  3590  08CA                     	line	23
  3591                           	
  3592                           l1846:	
  3593  08CA                     	movf	(___lwdiv@divisor),w
  3594  08CA  0870               	subwf	(___lwdiv@dividend),f
  3595  08CB  02F2               	movf	(___lwdiv@divisor+1),w
  3596  08CC  0871               	skipc
  3597  08CD  1C03               	decf	(___lwdiv@dividend+1),f
  3598  08CE  03F3               	subwf	(___lwdiv@dividend+1),f
  3599  08CF  02F3               	line	24
  3600                           	
  3601                           l1848:	
  3602  08D0                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3603  08D0  1475               	goto	l1850
  3604  08D1  28D2               	line	25
  3605                           	
  3606                           l597:	
  3607  08D2                     	line	26
  3608                           	
  3609                           l1850:	
  3610  08D2                     	movlw	01h
  3611  08D2  3001               	
  3612                           u2015:
  3613  08D3                     	clrc
  3614  08D3  1003               	rrf	(___lwdiv@divisor+1),f
  3615  08D4  0CF1               	rrf	(___lwdiv@divisor),f
  3616  08D5  0CF0               	addlw	-1
  3617  08D6  3EFF               	skipz
  3618  08D7  1D03               	goto	u2015
  3619  08D8  28D3               	line	27
  3620                           	
  3621                           l1852:	
  3622  08D9                     	movlw	01h
  3623  08D9  3001               	subwf	(___lwdiv@counter),f
  3624  08DA  02F7               	btfss	status,2
  3625  08DB  1D03               	goto	u2021
  3626  08DC  28DE               	goto	u2020
  3627  08DD  28DF               u2021:
  3628  08DE                     	goto	l1844
  3629  08DE  28B9               u2020:
  3630  08DF                     	goto	l1854
  3631  08DF  28E1               	
  3632                           l598:	
  3633  08E0                     	goto	l1854
  3634  08E0  28E1               	line	28
  3635                           	
  3636                           l592:	
  3637  08E1                     	line	29
  3638                           	
  3639                           l1854:	
  3640  08E1                     	movf	(___lwdiv@quotient+1),w
  3641  08E1  0876               	movwf	(?___lwdiv+1)
  3642  08E2  00F1               	movf	(___lwdiv@quotient),w
  3643  08E3  0875               	movwf	(?___lwdiv)
  3644  08E4  00F0               	goto	l599
  3645  08E5  28E6               	
  3646                           l1856:	
  3647  08E6                     	line	30
  3648                           	
  3649                           l599:	
  3650  08E6                     	return
  3651  08E6  0008               	opt stack 0
  3652                           GLOBAL	__end_of___lwdiv
  3653                           	__end_of___lwdiv:
  3654  08E7                     	signat	___lwdiv,8314
  3655                           	global	_setup
  3656                           
  3657 ;; *************** function _setup *****************
  3658 ;; Defined at:
  3659 ;;		line 129 in file "mainM.c"
  3660 ;; Parameters:    Size  Location     Type
  3661 ;;		None
  3662 ;; Auto vars:     Size  Location     Type
  3663 ;;		None
  3664 ;; Return value:  Size  Location     Type
  3665 ;;                  1    wreg      void 
  3666 ;; Registers used:
  3667 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3668 ;; Tracked objects:
  3669 ;;		On entry : 0/0
  3670 ;;		On exit  : 0/0
  3671 ;;		Unchanged: 0/0
  3672 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3673 ;;      Params:         0       0       0       0       0
  3674 ;;      Locals:         0       0       0       0       0
  3675 ;;      Temps:          0       1       0       0       0
  3676 ;;      Totals:         0       1       0       0       0
  3677 ;;Total ram usage:        1 bytes
  3678 ;; Hardware stack levels used:    1
  3679 ;; Hardware stack levels required when called:    2
  3680 ;; This function calls:
  3681 ;;		_I2C_Master_Init
  3682 ;;		_clcLCD
  3683 ;;		_initLCD
  3684 ;;		_setCursorLCD
  3685 ;;		_writeStrLCD
  3686 ;; This function is called by:
  3687 ;;		_main
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3691                           	file	"mainM.c"
  3692                           	line	129
  3693                           global __ptext6
  3694                           __ptext6:	;psect for function _setup
  3695  08E7                     psect	text6
  3696                           	file	"mainM.c"
  3697                           	line	129
  3698                           	global	__size_of_setup
  3699                           	__size_of_setup	equ	__end_of_setup-_setup
  3700  005F                     	
  3701                           _setup:	
  3702  08E7                     ;incstack = 0
  3703                           	opt	stack 5
  3704                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3705                           	line	131
  3706                           	
  3707                           l2096:	
  3708  08E7                     ;mainM.c: 131:     ANSEL = 0;
  3709                           	bsf	status, 5	;RP0=1, select bank3
  3710  08E7  1683               	bsf	status, 6	;RP1=1, select bank3
  3711  08E8  1703               	clrf	(392)^0180h	;volatile
  3712  08E9  0188               	line	132
  3713                           ;mainM.c: 132:     ANSELH = 0;
  3714                           	clrf	(393)^0180h	;volatile
  3715  08EA  0189               	line	133
  3716                           ;mainM.c: 133:     TRISB = 0;
  3717                           	bsf	status, 5	;RP0=1, select bank1
  3718  08EB  1683               	bcf	status, 6	;RP1=0, select bank1
  3719  08EC  1303               	clrf	(134)^080h	;volatile
  3720  08ED  0186               	line	134
  3721                           ;mainM.c: 134:     TRISD = 0;
  3722                           	clrf	(136)^080h	;volatile
  3723  08EE  0188               	line	135
  3724                           ;mainM.c: 135:     PORTB = 0;
  3725                           	bcf	status, 5	;RP0=0, select bank0
  3726  08EF  1283               	bcf	status, 6	;RP1=0, select bank0
  3727  08F0  1303               	clrf	(6)	;volatile
  3728  08F1  0186               	line	136
  3729                           ;mainM.c: 136:     PORTD = 0;
  3730                           	clrf	(8)	;volatile
  3731  08F2  0188               	line	137
  3732                           	
  3733                           l2098:	
  3734  08F3                     ;mainM.c: 137:     I2C_Master_Init(100000);
  3735                           	movlw	0
  3736  08F3  3000               	movwf	(I2C_Master_Init@c+3)
  3737  08F4  00A3               	movlw	01h
  3738  08F5  3001               	movwf	(I2C_Master_Init@c+2)
  3739  08F6  00A2               	movlw	086h
  3740  08F7  3086               	movwf	(I2C_Master_Init@c+1)
  3741  08F8  00A1               	movlw	0A0h
  3742  08F9  30A0               	movwf	(I2C_Master_Init@c)
  3743  08FA  00A0               
  3744                           	fcall	_I2C_Master_Init
  3745  08FB  160A  118A  278E  120A  158A  	line	139
  3746                           	
  3747                           l2100:	
  3748  0900                     ;mainM.c: 139:     initLCD();
  3749                           	fcall	_initLCD
  3750  0900  160A  118A  27C6  120A  158A  	line	140
  3751                           	
  3752                           l2102:	
  3753  0905                     ;mainM.c: 140:     clcLCD();
  3754                           	fcall	_clcLCD
  3755  0905  120A  118A  2003  120A  158A  	line	143
  3756                           	
  3757                           l2104:	
  3758  090A                     ;mainM.c: 143:     setCursorLCD(1, 1);
  3759                           	clrf	(setCursorLCD@x)
  3760  090A  01F3               	incf	(setCursorLCD@x),f
  3761  090B  0AF3               	movlw	low(01h)
  3762  090C  3001               	fcall	_setCursorLCD
  3763  090D  160A  118A  2718  120A  158A  	line	144
  3764                           	
  3765                           l2106:	
  3766  0912                     ;mainM.c: 144:     writeStrLCD("S1");
  3767                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3768  0912  300E               	movwf	(writeStrLCD@string)
  3769  0913  00F2               	movlw	80h
  3770  0914  3080               	movwf	(writeStrLCD@string+1)
  3771  0915  00F3               	fcall	_writeStrLCD
  3772  0916  120A  158A  2058  120A  158A  	line	145
  3773                           	
  3774                           l2108:	
  3775  091B                     ;mainM.c: 145:     setCursorLCD(1, 7);
  3776                           	movlw	low(07h)
  3777  091B  3007               	bcf	status, 5	;RP0=0, select bank0
  3778  091C  1283               	bcf	status, 6	;RP1=0, select bank0
  3779  091D  1303               	movwf	(??_setup+0)+0
  3780  091E  00A8               	movf	(??_setup+0)+0,w
  3781  091F  0828               	movwf	(setCursorLCD@x)
  3782  0920  00F3               	movlw	low(01h)
  3783  0921  3001               	fcall	_setCursorLCD
  3784  0922  160A  118A  2718  120A  158A  	line	146
  3785                           	
  3786                           l2110:	
  3787  0927                     ;mainM.c: 146:     writeStrLCD("S2");
  3788                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3789  0927  3011               	movwf	(writeStrLCD@string)
  3790  0928  00F2               	movlw	80h
  3791  0929  3080               	movwf	(writeStrLCD@string+1)
  3792  092A  00F3               	fcall	_writeStrLCD
  3793  092B  120A  158A  2058  120A  158A  	line	147
  3794                           	
  3795                           l2112:	
  3796  0930                     ;mainM.c: 147:     setCursorLCD(1, 13);
  3797                           	movlw	low(0Dh)
  3798  0930  300D               	bcf	status, 5	;RP0=0, select bank0
  3799  0931  1283               	bcf	status, 6	;RP1=0, select bank0
  3800  0932  1303               	movwf	(??_setup+0)+0
  3801  0933  00A8               	movf	(??_setup+0)+0,w
  3802  0934  0828               	movwf	(setCursorLCD@x)
  3803  0935  00F3               	movlw	low(01h)
  3804  0936  3001               	fcall	_setCursorLCD
  3805  0937  160A  118A  2718  120A  158A  	line	148
  3806                           	
  3807                           l2114:	
  3808  093C                     ;mainM.c: 148:     writeStrLCD("S3");
  3809                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3810  093C  3014               	movwf	(writeStrLCD@string)
  3811  093D  00F2               	movlw	80h
  3812  093E  3080               	movwf	(writeStrLCD@string+1)
  3813  093F  00F3               	fcall	_writeStrLCD
  3814  0940  120A  158A  2058  120A  158A  	line	149
  3815                           	
  3816                           l213:	
  3817  0945                     	return
  3818  0945  0008               	opt stack 0
  3819                           GLOBAL	__end_of_setup
  3820                           	__end_of_setup:
  3821  0946                     	signat	_setup,89
  3822                           	global	_writeStrLCD
  3823                           
  3824 ;; *************** function _writeStrLCD *****************
  3825 ;; Defined at:
  3826 ;;		line 21 in file "LCD.c"
  3827 ;; Parameters:    Size  Location     Type
  3828 ;;  string          2    2[COMMON] PTR unsigned char 
  3829 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  3830 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  cont            2    7[COMMON] int 
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3842 ;;      Params:         2       0       0       0       0
  3843 ;;      Locals:         2       0       0       0       0
  3844 ;;      Temps:          3       0       0       0       0
  3845 ;;      Totals:         7       0       0       0       0
  3846 ;;Total ram usage:        7 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    1
  3849 ;; This function calls:
  3850 ;;		_writeCharLCD
  3851 ;; This function is called by:
  3852 ;;		_writeIntLCD
  3853 ;;		_main
  3854 ;;		_setup
  3855 ;;		_writeIntLCD16
  3856 ;; This function uses a non-reentrant model
  3857 ;;
  3858                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3859                           	file	"LCD.c"
  3860                           	line	21
  3861                           global __ptext7
  3862                           __ptext7:	;psect for function _writeStrLCD
  3863  0858                     psect	text7
  3864                           	file	"LCD.c"
  3865                           	line	21
  3866                           	global	__size_of_writeStrLCD
  3867                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  3868  0044                     	
  3869                           _writeStrLCD:	
  3870  0858                     ;incstack = 0
  3871                           	opt	stack 6
  3872                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3873                           	line	23
  3874                           	
  3875                           l1888:	
  3876  0858                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  3877                           	clrf	(writeStrLCD@cont)
  3878  0858  01F7               	clrf	(writeStrLCD@cont+1)
  3879  0859  01F8               	goto	l1894
  3880  085A  287E               	
  3881                           l83:	
  3882  085B                     	line	24
  3883                           	
  3884                           l1890:	
  3885  085B                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  3886                           	movf	(writeStrLCD@cont),w
  3887  085B  0877               	addwf	(writeStrLCD@string),w
  3888  085C  0772               	movwf	(??_writeStrLCD+1)+0
  3889  085D  00F5               	movf	(writeStrLCD@string+1),w
  3890  085E  0873               	movwf	(??_writeStrLCD+0)+0
  3891  085F  00F4               	skipnc
  3892  0860  1803               	incf	(??_writeStrLCD+0)+0,f
  3893  0861  0AF4               	btfss	(writeStrLCD@cont),7
  3894  0862  1FF7               	goto	u2090
  3895  0863  2865               	decf	(??_writeStrLCD+0)+0,f
  3896  0864  03F4               u2090:
  3897  0865                     	movf	(??_writeStrLCD+0)+0,w
  3898  0865  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3899  0866  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3900  0867  0876               	bcf	status, 5	;RP0=0, select bank0
  3901  0868  1283               	bcf	status, 6	;RP1=0, select bank0
  3902  0869  1303               	movwf	btemp+1
  3903  086A  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3904  086B  0875               	movwf	fsr0
  3905  086C  0084               	fcall	stringtab
  3906  086D  160A  118A  2000  120A  158A  	fcall	_writeCharLCD
  3907  0872  160A  118A  2709  120A  158A  	line	25
  3908                           	
  3909                           l1892:	
  3910  0877                     ;LCD.c: 25:     }
  3911                           	movlw	01h
  3912  0877  3001               	addwf	(writeStrLCD@cont),f
  3913  0878  07F7               	skipnc
  3914  0879  1803               	incf	(writeStrLCD@cont+1),f
  3915  087A  0AF8               	movlw	0
  3916  087B  3000               	addwf	(writeStrLCD@cont+1),f
  3917  087C  07F8               	goto	l1894
  3918  087D  287E               	
  3919                           l82:	
  3920  087E                     	
  3921                           l1894:	
  3922  087E                     	movf	(writeStrLCD@cont),w
  3923  087E  0877               	addwf	(writeStrLCD@string),w
  3924  087F  0772               	movwf	(??_writeStrLCD+1)+0
  3925  0880  00F5               	movf	(writeStrLCD@string+1),w
  3926  0881  0873               	movwf	(??_writeStrLCD+0)+0
  3927  0882  00F4               	skipnc
  3928  0883  1803               	incf	(??_writeStrLCD+0)+0,f
  3929  0884  0AF4               	btfss	(writeStrLCD@cont),7
  3930  0885  1FF7               	goto	u2100
  3931  0886  2888               	decf	(??_writeStrLCD+0)+0,f
  3932  0887  03F4               u2100:
  3933  0888                     	movf	(??_writeStrLCD+0)+0,w
  3934  0888  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3935  0889  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3936  088A  0876               	bcf	status, 5	;RP0=0, select bank0
  3937  088B  1283               	bcf	status, 6	;RP1=0, select bank0
  3938  088C  1303               	movwf	btemp+1
  3939  088D  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3940  088E  0875               	movwf	fsr0
  3941  088F  0084               	fcall	stringtab
  3942  0890  160A  118A  2000  120A  158A  	xorlw	0
  3943  0895  3A00               	skipz
  3944  0896  1D03               	goto	u2111
  3945  0897  2899               	goto	u2110
  3946  0898  289A               u2111:
  3947  0899                     	goto	l1890
  3948  0899  285B               u2110:
  3949  089A                     	goto	l85
  3950  089A  289B               	
  3951                           l84:	
  3952  089B                     	line	26
  3953                           	
  3954                           l85:	
  3955  089B                     	return
  3956  089B  0008               	opt stack 0
  3957                           GLOBAL	__end_of_writeStrLCD
  3958                           	__end_of_writeStrLCD:
  3959  089C                     	signat	_writeStrLCD,4217
  3960                           	global	_writeCharLCD
  3961                           
  3962 ;; *************** function _writeCharLCD *****************
  3963 ;; Defined at:
  3964 ;;		line 28 in file "LCD.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  character       1    wreg     unsigned char 
  3967 ;; Auto vars:     Size  Location     Type
  3968 ;;  character       1    1[COMMON] unsigned char 
  3969 ;; Return value:  Size  Location     Type
  3970 ;;                  1    wreg      void 
  3971 ;; Registers used:
  3972 ;;		wreg
  3973 ;; Tracked objects:
  3974 ;;		On entry : 0/0
  3975 ;;		On exit  : 0/0
  3976 ;;		Unchanged: 0/0
  3977 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3978 ;;      Params:         0       0       0       0       0
  3979 ;;      Locals:         1       0       0       0       0
  3980 ;;      Temps:          1       0       0       0       0
  3981 ;;      Totals:         2       0       0       0       0
  3982 ;;Total ram usage:        2 bytes
  3983 ;; Hardware stack levels used:    1
  3984 ;; This function calls:
  3985 ;;		Nothing
  3986 ;; This function is called by:
  3987 ;;		_writeStrLCD
  3988 ;;		_writeFloat
  3989 ;;		_main
  3990 ;; This function uses a non-reentrant model
  3991 ;;
  3992                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3993                           	line	28
  3994                           global __ptext8
  3995                           __ptext8:	;psect for function _writeCharLCD
  3996  1709                     psect	text8
  3997                           	file	"LCD.c"
  3998                           	line	28
  3999                           	global	__size_of_writeCharLCD
  4000                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  4001  000F                     	
  4002                           _writeCharLCD:	
  4003  1709                     ;incstack = 0
  4004                           	opt	stack 6
  4005                           ; Regs used in _writeCharLCD: [wreg]
  4006                           ;writeCharLCD@character stored from wreg
  4007                           	movwf	(writeCharLCD@character)
  4008  1709  00F1               	line	29
  4009                           	
  4010                           l1824:	
  4011  170A                     ;LCD.c: 29:    RD0 = 1;
  4012                           	bcf	status, 5	;RP0=0, select bank0
  4013  170A  1283               	bcf	status, 6	;RP1=0, select bank0
  4014  170B  1303               	bsf	(64/8),(64)&7	;volatile
  4015  170C  1408               	line	30
  4016                           	
  4017                           l1826:	
  4018  170D                     ;LCD.c: 30:    PORTB = character;
  4019                           	movf	(writeCharLCD@character),w
  4020  170D  0871               	movwf	(6)	;volatile
  4021  170E  0086               	line	31
  4022                           	
  4023                           l1828:	
  4024  170F                     ;LCD.c: 31:    RD1 = 1;
  4025                           	bsf	(65/8),(65)&7	;volatile
  4026  170F  1488               	line	32
  4027                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4028                           	opt asmopt_push
  4029                           opt asmopt_off
  4030                           	movlw	13
  4031  1710  300D               movwf	((??_writeCharLCD+0)+0),f
  4032  1711  00F0               	u3937:
  4033  1712                     decfsz	(??_writeCharLCD+0)+0,f
  4034  1712  0BF0               	goto	u3937
  4035  1713  2F12               opt asmopt_pop
  4036                           
  4037                           	line	33
  4038                           	
  4039                           l1830:	
  4040  1714                     ;LCD.c: 33:    RD1 = 0;
  4041                           	bcf	status, 5	;RP0=0, select bank0
  4042  1714  1283               	bcf	status, 6	;RP1=0, select bank0
  4043  1715  1303               	bcf	(65/8),(65)&7	;volatile
  4044  1716  1088               	line	34
  4045                           	
  4046                           l88:	
  4047  1717                     	return
  4048  1717  0008               	opt stack 0
  4049                           GLOBAL	__end_of_writeCharLCD
  4050                           	__end_of_writeCharLCD:
  4051  1718                     	signat	_writeCharLCD,4217
  4052                           	global	_setCursorLCD
  4053                           
  4054 ;; *************** function _setCursorLCD *****************
  4055 ;; Defined at:
  4056 ;;		line 8 in file "LCD.c"
  4057 ;; Parameters:    Size  Location     Type
  4058 ;;  y               1    wreg     unsigned char 
  4059 ;;  x               1    3[COMMON] unsigned char 
  4060 ;; Auto vars:     Size  Location     Type
  4061 ;;  y               1    5[COMMON] unsigned char 
  4062 ;; Return value:  Size  Location     Type
  4063 ;;                  1    wreg      void 
  4064 ;; Registers used:
  4065 ;;		wreg, status,2, status,0, pclath, cstack
  4066 ;; Tracked objects:
  4067 ;;		On entry : 0/0
  4068 ;;		On exit  : 0/0
  4069 ;;		Unchanged: 0/0
  4070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4071 ;;      Params:         1       0       0       0       0
  4072 ;;      Locals:         1       0       0       0       0
  4073 ;;      Temps:          1       0       0       0       0
  4074 ;;      Totals:         3       0       0       0       0
  4075 ;;Total ram usage:        3 bytes
  4076 ;; Hardware stack levels used:    1
  4077 ;; Hardware stack levels required when called:    1
  4078 ;; This function calls:
  4079 ;;		_cmdLCD
  4080 ;; This function is called by:
  4081 ;;		_writeFloat
  4082 ;;		_main
  4083 ;;		_setup
  4084 ;; This function uses a non-reentrant model
  4085 ;;
  4086                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  4087                           	line	8
  4088                           global __ptext9
  4089                           __ptext9:	;psect for function _setCursorLCD
  4090  1718                     psect	text9
  4091                           	file	"LCD.c"
  4092                           	line	8
  4093                           	global	__size_of_setCursorLCD
  4094                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  4095  001D                     	
  4096                           _setCursorLCD:	
  4097  1718                     ;incstack = 0
  4098                           	opt	stack 5
  4099                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  4100                           ;setCursorLCD@y stored from wreg
  4101                           	movwf	(setCursorLCD@y)
  4102  1718  00F5               	line	9
  4103                           	
  4104                           l1998:	
  4105  1719                     ;LCD.c: 9:     if(y == 1){
  4106                           		decf	((setCursorLCD@y)),w
  4107  1719  0375               	btfss	status,2
  4108  171A  1D03               	goto	u2301
  4109  171B  2F1D               	goto	u2300
  4110  171C  2F1E               u2301:
  4111  171D                     	goto	l2002
  4112  171D  2F26               u2300:
  4113  171E                     	line	10
  4114                           	
  4115                           l2000:	
  4116  171E                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  4117                           	movf	(setCursorLCD@x),w
  4118  171E  0873               	addlw	07Fh
  4119  171F  3E7F               	movwf	(??_setCursorLCD+0)+0
  4120  1720  00F4               	movf	(??_setCursorLCD+0)+0,w
  4121  1721  0874               	bsf	status, 5	;RP0=1, select bank1
  4122  1722  1683               	bcf	status, 6	;RP1=0, select bank1
  4123  1723  1303               	movwf	(_cursor)^080h
  4124  1724  00C3               	line	11
  4125                           ;LCD.c: 11:     }else{
  4126                           	goto	l2004
  4127  1725  2F2E               	
  4128                           l74:	
  4129  1726                     	line	12
  4130                           	
  4131                           l2002:	
  4132  1726                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  4133                           	movf	(setCursorLCD@x),w
  4134  1726  0873               	addlw	0BFh
  4135  1727  3EBF               	movwf	(??_setCursorLCD+0)+0
  4136  1728  00F4               	movf	(??_setCursorLCD+0)+0,w
  4137  1729  0874               	bsf	status, 5	;RP0=1, select bank1
  4138  172A  1683               	bcf	status, 6	;RP1=0, select bank1
  4139  172B  1303               	movwf	(_cursor)^080h
  4140  172C  00C3               	goto	l2004
  4141  172D  2F2E               	line	13
  4142                           ;LCD.c: 13:     }
  4143                           	
  4144                           l75:	
  4145  172E                     	line	14
  4146                           	
  4147                           l2004:	
  4148  172E                     ;LCD.c: 14:     cmdLCD(cursor);
  4149                           	movf	(_cursor)^080h,w
  4150  172E  0843               	fcall	_cmdLCD
  4151  172F  120A  158A  2003  160A  118A  	line	15
  4152                           	
  4153                           l76:	
  4154  1734                     	return
  4155  1734  0008               	opt stack 0
  4156                           GLOBAL	__end_of_setCursorLCD
  4157                           	__end_of_setCursorLCD:
  4158  1735                     	signat	_setCursorLCD,8313
  4159                           	global	_initLCD
  4160                           
  4161 ;; *************** function _initLCD *****************
  4162 ;; Defined at:
  4163 ;;		line 36 in file "LCD.c"
  4164 ;; Parameters:    Size  Location     Type
  4165 ;;		None
  4166 ;; Auto vars:     Size  Location     Type
  4167 ;;		None
  4168 ;; Return value:  Size  Location     Type
  4169 ;;                  1    wreg      void 
  4170 ;; Registers used:
  4171 ;;		wreg, status,2, status,0, pclath, cstack
  4172 ;; Tracked objects:
  4173 ;;		On entry : 0/0
  4174 ;;		On exit  : 0/0
  4175 ;;		Unchanged: 0/0
  4176 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4177 ;;      Params:         0       0       0       0       0
  4178 ;;      Locals:         0       0       0       0       0
  4179 ;;      Temps:          2       0       0       0       0
  4180 ;;      Totals:         2       0       0       0       0
  4181 ;;Total ram usage:        2 bytes
  4182 ;; Hardware stack levels used:    1
  4183 ;; Hardware stack levels required when called:    1
  4184 ;; This function calls:
  4185 ;;		_cmdLCD
  4186 ;; This function is called by:
  4187 ;;		_setup
  4188 ;; This function uses a non-reentrant model
  4189 ;;
  4190                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  4191                           	line	36
  4192                           global __ptext10
  4193                           __ptext10:	;psect for function _initLCD
  4194  17C6                     psect	text10
  4195                           	file	"LCD.c"
  4196                           	line	36
  4197                           	global	__size_of_initLCD
  4198                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  4199  003A                     	
  4200                           _initLCD:	
  4201  17C6                     ;incstack = 0
  4202                           	opt	stack 5
  4203                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  4204                           	line	37
  4205                           	
  4206                           l2008:	
  4207  17C6                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  4208                           	opt asmopt_push
  4209                           opt asmopt_off
  4210                           movlw	20
  4211  17C6  3014               movwf	((??_initLCD+0)+0+1),f
  4212  17C7  00F4               	movlw	121
  4213  17C8  3079               movwf	((??_initLCD+0)+0),f
  4214  17C9  00F3               	u3947:
  4215  17CA                     decfsz	((??_initLCD+0)+0),f
  4216  17CA  0BF3               	goto	u3947
  4217  17CB  2FCA               	decfsz	((??_initLCD+0)+0+1),f
  4218  17CC  0BF4               	goto	u3947
  4219  17CD  2FCA               	nop2
  4220  17CE  2FCF               opt asmopt_pop
  4221                           
  4222                           	line	38
  4223                           	
  4224                           l2010:	
  4225  17CF                     ;LCD.c: 38:     cmdLCD(0x030);
  4226                           	movlw	low(030h)
  4227  17CF  3030               	fcall	_cmdLCD
  4228  17D0  120A  158A  2003  160A  118A  	line	39
  4229                           	
  4230                           l2012:	
  4231  17D5                     ;LCD.c: 39:     cmdLCD(0x030);
  4232                           	movlw	low(030h)
  4233  17D5  3030               	fcall	_cmdLCD
  4234  17D6  120A  158A  2003  160A  118A  	line	40
  4235                           	
  4236                           l2014:	
  4237  17DB                     ;LCD.c: 40:     cmdLCD(0x030);
  4238                           	movlw	low(030h)
  4239  17DB  3030               	fcall	_cmdLCD
  4240  17DC  120A  158A  2003  160A  118A  	line	42
  4241                           	
  4242                           l2016:	
  4243  17E1                     ;LCD.c: 42:     cmdLCD(0x38);
  4244                           	movlw	low(038h)
  4245  17E1  3038               	fcall	_cmdLCD
  4246  17E2  120A  158A  2003  160A  118A  	line	43
  4247                           	
  4248                           l2018:	
  4249  17E7                     ;LCD.c: 43:     cmdLCD(0x10);
  4250                           	movlw	low(010h)
  4251  17E7  3010               	fcall	_cmdLCD
  4252  17E8  120A  158A  2003  160A  118A  	line	44
  4253                           	
  4254                           l2020:	
  4255  17ED                     ;LCD.c: 44:     cmdLCD(0x01);
  4256                           	movlw	low(01h)
  4257  17ED  3001               	fcall	_cmdLCD
  4258  17EE  120A  158A  2003  160A  118A  	line	45
  4259                           	
  4260                           l2022:	
  4261  17F3                     ;LCD.c: 45:     cmdLCD(0x06);
  4262                           	movlw	low(06h)
  4263  17F3  3006               	fcall	_cmdLCD
  4264  17F4  120A  158A  2003  160A  118A  	line	46
  4265                           	
  4266                           l2024:	
  4267  17F9                     ;LCD.c: 46:     cmdLCD(0x0E);
  4268                           	movlw	low(0Eh)
  4269  17F9  300E               	fcall	_cmdLCD
  4270  17FA  120A  158A  2003  160A  118A  	line	47
  4271                           	
  4272                           l91:	
  4273  17FF                     	return
  4274  17FF  0008               	opt stack 0
  4275                           GLOBAL	__end_of_initLCD
  4276                           	__end_of_initLCD:
  4277  1800                     	signat	_initLCD,89
  4278                           	global	_clcLCD
  4279                           
  4280 ;; *************** function _clcLCD *****************
  4281 ;; Defined at:
  4282 ;;		line 17 in file "LCD.c"
  4283 ;; Parameters:    Size  Location     Type
  4284 ;;		None
  4285 ;; Auto vars:     Size  Location     Type
  4286 ;;		None
  4287 ;; Return value:  Size  Location     Type
  4288 ;;                  1    wreg      void 
  4289 ;; Registers used:
  4290 ;;		wreg, status,2, status,0, pclath, cstack
  4291 ;; Tracked objects:
  4292 ;;		On entry : 0/0
  4293 ;;		On exit  : 0/0
  4294 ;;		Unchanged: 0/0
  4295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4296 ;;      Params:         0       0       0       0       0
  4297 ;;      Locals:         0       0       0       0       0
  4298 ;;      Temps:          0       0       0       0       0
  4299 ;;      Totals:         0       0       0       0       0
  4300 ;;Total ram usage:        0 bytes
  4301 ;; Hardware stack levels used:    1
  4302 ;; Hardware stack levels required when called:    1
  4303 ;; This function calls:
  4304 ;;		_cmdLCD
  4305 ;; This function is called by:
  4306 ;;		_setup
  4307 ;; This function uses a non-reentrant model
  4308 ;;
  4309                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  4310                           	line	17
  4311                           global __ptext11
  4312                           __ptext11:	;psect for function _clcLCD
  4313  0003                     psect	text11
  4314                           	file	"LCD.c"
  4315                           	line	17
  4316                           	global	__size_of_clcLCD
  4317                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  4318  0007                     	
  4319                           _clcLCD:	
  4320  0003                     ;incstack = 0
  4321                           	opt	stack 5
  4322                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  4323                           	line	18
  4324                           	
  4325                           l2006:	
  4326  0003                     ;LCD.c: 18:     cmdLCD(0x01);
  4327                           	movlw	low(01h)
  4328  0003  3001               	fcall	_cmdLCD
  4329  0004  120A  158A  2003  120A  118A  	line	19
  4330                           	
  4331                           l79:	
  4332  0009                     	return
  4333  0009  0008               	opt stack 0
  4334                           GLOBAL	__end_of_clcLCD
  4335                           	__end_of_clcLCD:
  4336  000A                     	signat	_clcLCD,89
  4337                           	global	_cmdLCD
  4338                           
  4339 ;; *************** function _cmdLCD *****************
  4340 ;; Defined at:
  4341 ;;		line 49 in file "LCD.c"
  4342 ;; Parameters:    Size  Location     Type
  4343 ;;  cmd             1    wreg     unsigned char 
  4344 ;; Auto vars:     Size  Location     Type
  4345 ;;  cmd             1    2[COMMON] unsigned char 
  4346 ;; Return value:  Size  Location     Type
  4347 ;;                  1    wreg      void 
  4348 ;; Registers used:
  4349 ;;		wreg
  4350 ;; Tracked objects:
  4351 ;;		On entry : 0/0
  4352 ;;		On exit  : 0/0
  4353 ;;		Unchanged: 0/0
  4354 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4355 ;;      Params:         0       0       0       0       0
  4356 ;;      Locals:         1       0       0       0       0
  4357 ;;      Temps:          2       0       0       0       0
  4358 ;;      Totals:         3       0       0       0       0
  4359 ;;Total ram usage:        3 bytes
  4360 ;; Hardware stack levels used:    1
  4361 ;; This function calls:
  4362 ;;		Nothing
  4363 ;; This function is called by:
  4364 ;;		_setCursorLCD
  4365 ;;		_clcLCD
  4366 ;;		_initLCD
  4367 ;; This function uses a non-reentrant model
  4368 ;;
  4369                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  4370                           	line	49
  4371                           global __ptext12
  4372                           __ptext12:	;psect for function _cmdLCD
  4373  0803                     psect	text12
  4374                           	file	"LCD.c"
  4375                           	line	49
  4376                           	global	__size_of_cmdLCD
  4377                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  4378  0014                     	
  4379                           _cmdLCD:	
  4380  0803                     ;incstack = 0
  4381                           	opt	stack 5
  4382                           ; Regs used in _cmdLCD: [wreg]
  4383                           ;cmdLCD@cmd stored from wreg
  4384                           	movwf	(cmdLCD@cmd)
  4385  0803  00F2               	line	50
  4386                           	
  4387                           l1880:	
  4388  0804                     ;LCD.c: 50:     RD0 = 0;
  4389                           	bcf	status, 5	;RP0=0, select bank0
  4390  0804  1283               	bcf	status, 6	;RP1=0, select bank0
  4391  0805  1303               	bcf	(64/8),(64)&7	;volatile
  4392  0806  1008               	line	51
  4393                           	
  4394                           l1882:	
  4395  0807                     ;LCD.c: 51:  PORTB = cmd;
  4396                           	movf	(cmdLCD@cmd),w
  4397  0807  0872               	movwf	(6)	;volatile
  4398  0808  0086               	line	52
  4399                           	
  4400                           l1884:	
  4401  0809                     ;LCD.c: 52:  RD1 = 1;
  4402                           	bsf	(65/8),(65)&7	;volatile
  4403  0809  1488               	line	53
  4404                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4405                           	opt asmopt_push
  4406                           opt asmopt_off
  4407                           movlw	6
  4408  080A  3006               movwf	((??_cmdLCD+0)+0+1),f
  4409  080B  00F1               	movlw	48
  4410  080C  3030               movwf	((??_cmdLCD+0)+0),f
  4411  080D  00F0               	u3957:
  4412  080E                     decfsz	((??_cmdLCD+0)+0),f
  4413  080E  0BF0               	goto	u3957
  4414  080F  280E               	decfsz	((??_cmdLCD+0)+0+1),f
  4415  0810  0BF1               	goto	u3957
  4416  0811  280E               	nop
  4417  0812  0000               opt asmopt_pop
  4418                           
  4419                           	line	54
  4420                           	
  4421                           l1886:	
  4422  0813                     ;LCD.c: 54:     RD1 = 0;
  4423                           	bcf	status, 5	;RP0=0, select bank0
  4424  0813  1283               	bcf	status, 6	;RP1=0, select bank0
  4425  0814  1303               	bcf	(65/8),(65)&7	;volatile
  4426  0815  1088               	line	55
  4427                           	
  4428                           l94:	
  4429  0816                     	return
  4430  0816  0008               	opt stack 0
  4431                           GLOBAL	__end_of_cmdLCD
  4432                           	__end_of_cmdLCD:
  4433  0817                     	signat	_cmdLCD,4217
  4434                           	global	_I2C_Master_Init
  4435                           
  4436 ;; *************** function _I2C_Master_Init *****************
  4437 ;; Defined at:
  4438 ;;		line 16 in file "I2C.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  c               4    0[BANK0 ] const unsigned long 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;                  1    wreg      void 
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, pclath, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4452 ;;      Params:         0       4       0       0       0
  4453 ;;      Locals:         0       0       0       0       0
  4454 ;;      Temps:          0       4       0       0       0
  4455 ;;      Totals:         0       8       0       0       0
  4456 ;;Total ram usage:        8 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    1
  4459 ;; This function calls:
  4460 ;;		___lldiv
  4461 ;; This function is called by:
  4462 ;;		_setup
  4463 ;; This function uses a non-reentrant model
  4464 ;;
  4465                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4466                           	file	"I2C.c"
  4467                           	line	16
  4468                           global __ptext13
  4469                           __ptext13:	;psect for function _I2C_Master_Init
  4470  178E                     psect	text13
  4471                           	file	"I2C.c"
  4472                           	line	16
  4473                           	global	__size_of_I2C_Master_Init
  4474                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  4475  0038                     	
  4476                           _I2C_Master_Init:	
  4477  178E                     ;incstack = 0
  4478                           	opt	stack 5
  4479                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4480                           	line	18
  4481                           	
  4482                           l1982:	
  4483  178E                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  4484                           	movlw	low(028h)
  4485  178E  3028               	bcf	status, 5	;RP0=0, select bank0
  4486  178F  1283               	bcf	status, 6	;RP1=0, select bank0
  4487  1790  1303               	movwf	(20)	;volatile
  4488  1791  0094               	line	19
  4489                           	
  4490                           l1984:	
  4491  1792                     ;I2C.c: 19:     SSPCON2 = 0;
  4492                           	bsf	status, 5	;RP0=1, select bank1
  4493  1792  1683               	bcf	status, 6	;RP1=0, select bank1
  4494  1793  1303               	clrf	(145)^080h	;volatile
  4495  1794  0191               	line	20
  4496                           	
  4497                           l1986:	
  4498  1795                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  4499                           	bcf	status, 5	;RP0=0, select bank0
  4500  1795  1283               	bcf	status, 6	;RP1=0, select bank0
  4501  1796  1303               	movf	(I2C_Master_Init@c),w
  4502  1797  0820               	movwf	(??_I2C_Master_Init+0)+0
  4503  1798  00A4               	movf	(I2C_Master_Init@c+1),w
  4504  1799  0821               	movwf	((??_I2C_Master_Init+0)+0+1)
  4505  179A  00A5               	movf	(I2C_Master_Init@c+2),w
  4506  179B  0822               	movwf	((??_I2C_Master_Init+0)+0+2)
  4507  179C  00A6               	movf	(I2C_Master_Init@c+3),w
  4508  179D  0823               	movwf	((??_I2C_Master_Init+0)+0+3)
  4509  179E  00A7               	movlw	02h
  4510  179F  3002               u2275:
  4511  17A0                     	clrc
  4512  17A0  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  4513  17A1  0DA4               	rlf	(??_I2C_Master_Init+0)+1,f
  4514  17A2  0DA5               	rlf	(??_I2C_Master_Init+0)+2,f
  4515  17A3  0DA6               	rlf	(??_I2C_Master_Init+0)+3,f
  4516  17A4  0DA7               u2270:
  4517  17A5                     	addlw	-1
  4518  17A5  3EFF               	skipz
  4519  17A6  1D03               	goto	u2275
  4520  17A7  2FA0               	movf	3+(??_I2C_Master_Init+0)+0,w
  4521  17A8  0827               	movwf	(___lldiv@divisor+3)
  4522  17A9  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  4523  17AA  0826               	movwf	(___lldiv@divisor+2)
  4524  17AB  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  4525  17AC  0825               	movwf	(___lldiv@divisor+1)
  4526  17AD  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  4527  17AE  0824               	movwf	(___lldiv@divisor)
  4528  17AF  00F0               
  4529                           	movlw	0
  4530  17B0  3000               	movwf	(___lldiv@dividend+3)
  4531  17B1  00F7               	movlw	03Dh
  4532  17B2  303D               	movwf	(___lldiv@dividend+2)
  4533  17B3  00F6               	movlw	09h
  4534  17B4  3009               	movwf	(___lldiv@dividend+1)
  4535  17B5  00F5               	movlw	0
  4536  17B6  3000               	movwf	(___lldiv@dividend)
  4537  17B7  00F4               
  4538                           	fcall	___lldiv
  4539  17B8  120A  158A  21A9  160A  118A  	movf	(0+(?___lldiv)),w
  4540  17BD  0870               	addlw	0FFh
  4541  17BE  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4542  17BF  1683               	bcf	status, 6	;RP1=0, select bank1
  4543  17C0  1303               	movwf	(147)^080h	;volatile
  4544  17C1  0093               	line	21
  4545                           	
  4546                           l1988:	
  4547  17C2                     ;I2C.c: 21:     SSPSTAT = 0;
  4548                           	clrf	(148)^080h	;volatile
  4549  17C2  0194               	line	22
  4550                           	
  4551                           l1990:	
  4552  17C3                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4553                           	bsf	(135)^080h,3	;volatile
  4554  17C3  1587               	line	23
  4555                           	
  4556                           l1992:	
  4557  17C4                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4558                           	bsf	(135)^080h,4	;volatile
  4559  17C4  1607               	line	24
  4560                           	
  4561                           l29:	
  4562  17C5                     	return
  4563  17C5  0008               	opt stack 0
  4564                           GLOBAL	__end_of_I2C_Master_Init
  4565                           	__end_of_I2C_Master_Init:
  4566  17C6                     	signat	_I2C_Master_Init,4217
  4567                           	global	___lldiv
  4568                           
  4569 ;; *************** function ___lldiv *****************
  4570 ;; Defined at:
  4571 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4572 ;; Parameters:    Size  Location     Type
  4573 ;;  divisor         4    0[COMMON] unsigned long 
  4574 ;;  dividend        4    4[COMMON] unsigned long 
  4575 ;; Auto vars:     Size  Location     Type
  4576 ;;  quotient        4    9[COMMON] unsigned long 
  4577 ;;  counter         1   13[COMMON] unsigned char 
  4578 ;; Return value:  Size  Location     Type
  4579 ;;                  4    0[COMMON] unsigned long 
  4580 ;; Registers used:
  4581 ;;		wreg, status,2, status,0
  4582 ;; Tracked objects:
  4583 ;;		On entry : 0/0
  4584 ;;		On exit  : 0/0
  4585 ;;		Unchanged: 0/0
  4586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4587 ;;      Params:         8       0       0       0       0
  4588 ;;      Locals:         5       0       0       0       0
  4589 ;;      Temps:          1       0       0       0       0
  4590 ;;      Totals:        14       0       0       0       0
  4591 ;;Total ram usage:       14 bytes
  4592 ;; Hardware stack levels used:    1
  4593 ;; This function calls:
  4594 ;;		Nothing
  4595 ;; This function is called by:
  4596 ;;		_I2C_Master_Init
  4597 ;; This function uses a non-reentrant model
  4598 ;;
  4599                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  4600                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4601                           	line	5
  4602                           global __ptext14
  4603                           __ptext14:	;psect for function ___lldiv
  4604  09A9                     psect	text14
  4605                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4606                           	line	5
  4607                           	global	__size_of___lldiv
  4608                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4609  006D                     	
  4610                           ___lldiv:	
  4611  09A9                     ;incstack = 0
  4612                           	opt	stack 5
  4613                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4614                           	line	13
  4615                           	
  4616                           l1958:	
  4617  09A9                     	movlw	high highword(0)
  4618  09A9  3000               	movwf	(___lldiv@quotient+3)
  4619  09AA  00FC               	movlw	low highword(0)
  4620  09AB  3000               	movwf	(___lldiv@quotient+2)
  4621  09AC  00FB               	movlw	high(0)
  4622  09AD  3000               	movwf	(___lldiv@quotient+1)
  4623  09AE  00FA               	movlw	low(0)
  4624  09AF  3000               	movwf	(___lldiv@quotient)
  4625  09B0  00F9               
  4626                           	line	14
  4627                           	movf	(___lldiv@divisor+3),w
  4628  09B1  0873               	iorwf	(___lldiv@divisor+2),w
  4629  09B2  0472               	iorwf	(___lldiv@divisor+1),w
  4630  09B3  0471               	iorwf	(___lldiv@divisor),w
  4631  09B4  0470               	skipnz
  4632  09B5  1903               	goto	u2201
  4633  09B6  29B8               	goto	u2200
  4634  09B7  29B9               u2201:
  4635  09B8                     	goto	l1978
  4636  09B8  2A0C               u2200:
  4637  09B9                     	line	15
  4638                           	
  4639                           l1960:	
  4640  09B9                     	clrf	(___lldiv@counter)
  4641  09B9  01FD               	incf	(___lldiv@counter),f
  4642  09BA  0AFD               	line	16
  4643                           	goto	l1964
  4644  09BB  29CA               	
  4645                           l358:	
  4646  09BC                     	line	17
  4647                           	
  4648                           l1962:	
  4649  09BC                     	movlw	01h
  4650  09BC  3001               	movwf	(??___lldiv+0)+0
  4651  09BD  00F8               u2215:
  4652  09BE                     	clrc
  4653  09BE  1003               	rlf	(___lldiv@divisor),f
  4654  09BF  0DF0               	rlf	(___lldiv@divisor+1),f
  4655  09C0  0DF1               	rlf	(___lldiv@divisor+2),f
  4656  09C1  0DF2               	rlf	(___lldiv@divisor+3),f
  4657  09C2  0DF3               	decfsz	(??___lldiv+0)+0
  4658  09C3  0BF8               	goto	u2215
  4659  09C4  29BE               	line	18
  4660                           	movlw	low(01h)
  4661  09C5  3001               	movwf	(??___lldiv+0)+0
  4662  09C6  00F8               	movf	(??___lldiv+0)+0,w
  4663  09C7  0878               	addwf	(___lldiv@counter),f
  4664  09C8  07FD               	goto	l1964
  4665  09C9  29CA               	line	19
  4666                           	
  4667                           l357:	
  4668  09CA                     	line	16
  4669                           	
  4670                           l1964:	
  4671  09CA                     	btfss	(___lldiv@divisor+3),(31)&7
  4672  09CA  1FF3               	goto	u2221
  4673  09CB  29CD               	goto	u2220
  4674  09CC  29CE               u2221:
  4675  09CD                     	goto	l1962
  4676  09CD  29BC               u2220:
  4677  09CE                     	goto	l1966
  4678  09CE  29D0               	
  4679                           l359:	
  4680  09CF                     	goto	l1966
  4681  09CF  29D0               	line	20
  4682                           	
  4683                           l360:	
  4684  09D0                     	line	21
  4685                           	
  4686                           l1966:	
  4687  09D0                     	movlw	01h
  4688  09D0  3001               	movwf	(??___lldiv+0)+0
  4689  09D1  00F8               u2235:
  4690  09D2                     	clrc
  4691  09D2  1003               	rlf	(___lldiv@quotient),f
  4692  09D3  0DF9               	rlf	(___lldiv@quotient+1),f
  4693  09D4  0DFA               	rlf	(___lldiv@quotient+2),f
  4694  09D5  0DFB               	rlf	(___lldiv@quotient+3),f
  4695  09D6  0DFC               	decfsz	(??___lldiv+0)+0
  4696  09D7  0BF8               	goto	u2235
  4697  09D8  29D2               	line	22
  4698                           	
  4699                           l1968:	
  4700  09D9                     	movf	(___lldiv@divisor+3),w
  4701  09D9  0873               	subwf	(___lldiv@dividend+3),w
  4702  09DA  0277               	skipz
  4703  09DB  1D03               	goto	u2245
  4704  09DC  29E7               	movf	(___lldiv@divisor+2),w
  4705  09DD  0872               	subwf	(___lldiv@dividend+2),w
  4706  09DE  0276               	skipz
  4707  09DF  1D03               	goto	u2245
  4708  09E0  29E7               	movf	(___lldiv@divisor+1),w
  4709  09E1  0871               	subwf	(___lldiv@dividend+1),w
  4710  09E2  0275               	skipz
  4711  09E3  1D03               	goto	u2245
  4712  09E4  29E7               	movf	(___lldiv@divisor),w
  4713  09E5  0870               	subwf	(___lldiv@dividend),w
  4714  09E6  0274               u2245:
  4715  09E7                     	skipc
  4716  09E7  1C03               	goto	u2241
  4717  09E8  29EA               	goto	u2240
  4718  09E9  29EB               u2241:
  4719  09EA                     	goto	l1974
  4720  09EA  29FB               u2240:
  4721  09EB                     	line	23
  4722                           	
  4723                           l1970:	
  4724  09EB                     	movf	(___lldiv@divisor),w
  4725  09EB  0870               	subwf	(___lldiv@dividend),f
  4726  09EC  02F4               	movf	(___lldiv@divisor+1),w
  4727  09ED  0871               	skipc
  4728  09EE  1C03               	incfsz	(___lldiv@divisor+1),w
  4729  09EF  0F71               	subwf	(___lldiv@dividend+1),f
  4730  09F0  02F5               	movf	(___lldiv@divisor+2),w
  4731  09F1  0872               	skipc
  4732  09F2  1C03               	incfsz	(___lldiv@divisor+2),w
  4733  09F3  0F72               	subwf	(___lldiv@dividend+2),f
  4734  09F4  02F6               	movf	(___lldiv@divisor+3),w
  4735  09F5  0873               	skipc
  4736  09F6  1C03               	incfsz	(___lldiv@divisor+3),w
  4737  09F7  0F73               	subwf	(___lldiv@dividend+3),f
  4738  09F8  02F7               	line	24
  4739                           	
  4740                           l1972:	
  4741  09F9                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4742  09F9  1479               	goto	l1974
  4743  09FA  29FB               	line	25
  4744                           	
  4745                           l361:	
  4746  09FB                     	line	26
  4747                           	
  4748                           l1974:	
  4749  09FB                     	movlw	01h
  4750  09FB  3001               u2255:
  4751  09FC                     	clrc
  4752  09FC  1003               	rrf	(___lldiv@divisor+3),f
  4753  09FD  0CF3               	rrf	(___lldiv@divisor+2),f
  4754  09FE  0CF2               	rrf	(___lldiv@divisor+1),f
  4755  09FF  0CF1               	rrf	(___lldiv@divisor),f
  4756  0A00  0CF0               	addlw	-1
  4757  0A01  3EFF               	skipz
  4758  0A02  1D03               	goto	u2255
  4759  0A03  29FC               
  4760                           	line	27
  4761                           	
  4762                           l1976:	
  4763  0A04                     	movlw	01h
  4764  0A04  3001               	subwf	(___lldiv@counter),f
  4765  0A05  02FD               	btfss	status,2
  4766  0A06  1D03               	goto	u2261
  4767  0A07  2A09               	goto	u2260
  4768  0A08  2A0A               u2261:
  4769  0A09                     	goto	l1966
  4770  0A09  29D0               u2260:
  4771  0A0A                     	goto	l1978
  4772  0A0A  2A0C               	
  4773                           l362:	
  4774  0A0B                     	goto	l1978
  4775  0A0B  2A0C               	line	28
  4776                           	
  4777                           l356:	
  4778  0A0C                     	line	29
  4779                           	
  4780                           l1978:	
  4781  0A0C                     	movf	(___lldiv@quotient+3),w
  4782  0A0C  087C               	movwf	(?___lldiv+3)
  4783  0A0D  00F3               	movf	(___lldiv@quotient+2),w
  4784  0A0E  087B               	movwf	(?___lldiv+2)
  4785  0A0F  00F2               	movf	(___lldiv@quotient+1),w
  4786  0A10  087A               	movwf	(?___lldiv+1)
  4787  0A11  00F1               	movf	(___lldiv@quotient),w
  4788  0A12  0879               	movwf	(?___lldiv)
  4789  0A13  00F0               
  4790                           	goto	l363
  4791  0A14  2A15               	
  4792                           l1980:	
  4793  0A15                     	line	30
  4794                           	
  4795                           l363:	
  4796  0A15                     	return
  4797  0A15  0008               	opt stack 0
  4798                           GLOBAL	__end_of___lldiv
  4799                           	__end_of___lldiv:
  4800  0A16                     	signat	___lldiv,8316
  4801                           	global	___xxtofl
  4802                           
  4803 ;; *************** function ___xxtofl *****************
  4804 ;; Defined at:
  4805 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4806 ;; Parameters:    Size  Location     Type
  4807 ;;  sign            1    wreg     unsigned char 
  4808 ;;  val             4    0[COMMON] long 
  4809 ;; Auto vars:     Size  Location     Type
  4810 ;;  sign            1    8[COMMON] unsigned char 
  4811 ;;  arg             4   10[COMMON] unsigned long 
  4812 ;;  exp             1    9[COMMON] unsigned char 
  4813 ;; Return value:  Size  Location     Type
  4814 ;;                  4    0[COMMON] unsigned char 
  4815 ;; Registers used:
  4816 ;;		wreg, status,2, status,0
  4817 ;; Tracked objects:
  4818 ;;		On entry : 0/0
  4819 ;;		On exit  : 0/0
  4820 ;;		Unchanged: 0/0
  4821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4822 ;;      Params:         4       0       0       0       0
  4823 ;;      Locals:         6       0       0       0       0
  4824 ;;      Temps:          4       0       0       0       0
  4825 ;;      Totals:        14       0       0       0       0
  4826 ;;Total ram usage:       14 bytes
  4827 ;; Hardware stack levels used:    1
  4828 ;; This function calls:
  4829 ;;		Nothing
  4830 ;; This function is called by:
  4831 ;;		_main
  4832 ;; This function uses a non-reentrant model
  4833 ;;
  4834                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  4835                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4836                           	line	10
  4837                           global __ptext15
  4838                           __ptext15:	;psect for function ___xxtofl
  4839  0A86                     psect	text15
  4840                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4841                           	line	10
  4842                           	global	__size_of___xxtofl
  4843                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  4844  00C2                     	
  4845                           ___xxtofl:	
  4846  0A86                     ;incstack = 0
  4847                           	opt	stack 7
  4848                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4849                           ;___xxtofl@sign stored from wreg
  4850                           	movwf	(___xxtofl@sign)
  4851  0A86  00F8               	line	15
  4852                           	
  4853                           l2674:	
  4854  0A87                     	movf	((___xxtofl@sign)),w
  4855  0A87  0878               	btfsc	status,2
  4856  0A88  1903               	goto	u3701
  4857  0A89  2A8B               	goto	u3700
  4858  0A8A  2A8C               u3701:
  4859  0A8B                     	goto	l2680
  4860  0A8B  2AA0               u3700:
  4861  0A8C                     	
  4862                           l2676:	
  4863  0A8C                     	btfss	(___xxtofl@val+3),7
  4864  0A8C  1FF3               	goto	u3711
  4865  0A8D  2A8F               	goto	u3710
  4866  0A8E  2A90               u3711:
  4867  0A8F                     	goto	l2680
  4868  0A8F  2AA0               u3710:
  4869  0A90                     	line	16
  4870                           	
  4871                           l2678:	
  4872  0A90                     	comf	(___xxtofl@val)+0,w
  4873  0A90  0970               	movwf	(___xxtofl@arg)
  4874  0A91  00FA               	comf	(___xxtofl@val)+1,w
  4875  0A92  0971               	movwf	(___xxtofl@arg+1)
  4876  0A93  00FB               	comf	(___xxtofl@val)+2,w
  4877  0A94  0972               	movwf	(___xxtofl@arg+2)
  4878  0A95  00FC               	comf	(___xxtofl@val)+3,w
  4879  0A96  0973               	movwf	(___xxtofl@arg+3)
  4880  0A97  00FD               	incf	(___xxtofl@arg),f
  4881  0A98  0AFA               	skipnz
  4882  0A99  1903               	incf	(___xxtofl@arg+1),f
  4883  0A9A  0AFB               	skipnz
  4884  0A9B  1903               	incf	(___xxtofl@arg+2),f
  4885  0A9C  0AFC               	skipnz
  4886  0A9D  1903               	incf	(___xxtofl@arg+3),f
  4887  0A9E  0AFD               	line	17
  4888                           	goto	l735
  4889  0A9F  2AA8               	line	18
  4890                           	
  4891                           l734:	
  4892  0AA0                     	line	19
  4893                           	
  4894                           l2680:	
  4895  0AA0                     	movf	(___xxtofl@val+3),w
  4896  0AA0  0873               	movwf	(___xxtofl@arg+3)
  4897  0AA1  00FD               	movf	(___xxtofl@val+2),w
  4898  0AA2  0872               	movwf	(___xxtofl@arg+2)
  4899  0AA3  00FC               	movf	(___xxtofl@val+1),w
  4900  0AA4  0871               	movwf	(___xxtofl@arg+1)
  4901  0AA5  00FB               	movf	(___xxtofl@val),w
  4902  0AA6  0870               	movwf	(___xxtofl@arg)
  4903  0AA7  00FA               
  4904                           	line	20
  4905                           	
  4906                           l735:	
  4907  0AA8                     	line	21
  4908                           	movf	(___xxtofl@val+3),w
  4909  0AA8  0873               	iorwf	(___xxtofl@val+2),w
  4910  0AA9  0472               	iorwf	(___xxtofl@val+1),w
  4911  0AAA  0471               	iorwf	(___xxtofl@val),w
  4912  0AAB  0470               	skipz
  4913  0AAC  1D03               	goto	u3721
  4914  0AAD  2AAF               	goto	u3720
  4915  0AAE  2AB0               u3721:
  4916  0AAF                     	goto	l2686
  4917  0AAF  2ABA               u3720:
  4918  0AB0                     	line	22
  4919                           	
  4920                           l2682:	
  4921  0AB0                     	movlw	0x0
  4922  0AB0  3000               	movwf	(?___xxtofl+3)
  4923  0AB1  00F3               	movlw	0x0
  4924  0AB2  3000               	movwf	(?___xxtofl+2)
  4925  0AB3  00F2               	movlw	0x0
  4926  0AB4  3000               	movwf	(?___xxtofl+1)
  4927  0AB5  00F1               	movlw	0x0
  4928  0AB6  3000               	movwf	(?___xxtofl)
  4929  0AB7  00F0               
  4930                           	goto	l737
  4931  0AB8  2B47               	
  4932                           l2684:	
  4933  0AB9                     	goto	l737
  4934  0AB9  2B47               	
  4935                           l736:	
  4936  0ABA                     	line	23
  4937                           	
  4938                           l2686:	
  4939  0ABA                     	movlw	low(096h)
  4940  0ABA  3096               	movwf	(??___xxtofl+0)+0
  4941  0ABB  00F4               	movf	(??___xxtofl+0)+0,w
  4942  0ABC  0874               	movwf	(___xxtofl@exp)
  4943  0ABD  00F9               	line	24
  4944                           	goto	l2690
  4945  0ABE  2ACD               	
  4946                           l739:	
  4947  0ABF                     	line	25
  4948                           	
  4949                           l2688:	
  4950  0ABF                     	movlw	low(01h)
  4951  0ABF  3001               	movwf	(??___xxtofl+0)+0
  4952  0AC0  00F4               	movf	(??___xxtofl+0)+0,w
  4953  0AC1  0874               	addwf	(___xxtofl@exp),f
  4954  0AC2  07F9               	line	26
  4955                           	movlw	01h
  4956  0AC3  3001               u3735:
  4957  0AC4                     	clrc
  4958  0AC4  1003               	rrf	(___xxtofl@arg+3),f
  4959  0AC5  0CFD               	rrf	(___xxtofl@arg+2),f
  4960  0AC6  0CFC               	rrf	(___xxtofl@arg+1),f
  4961  0AC7  0CFB               	rrf	(___xxtofl@arg),f
  4962  0AC8  0CFA               	addlw	-1
  4963  0AC9  3EFF               	skipz
  4964  0ACA  1D03               	goto	u3735
  4965  0ACB  2AC4               
  4966                           	goto	l2690
  4967  0ACC  2ACD               	line	27
  4968                           	
  4969                           l738:	
  4970  0ACD                     	line	24
  4971                           	
  4972                           l2690:	
  4973  0ACD                     	movlw	high highword(0FE000000h)
  4974  0ACD  30FE               	andwf	(___xxtofl@arg+3),w
  4975  0ACE  057D               	btfss	status,2
  4976  0ACF  1D03               	goto	u3741
  4977  0AD0  2AD2               	goto	u3740
  4978  0AD1  2AD3               u3741:
  4979  0AD2                     	goto	l2688
  4980  0AD2  2ABF               u3740:
  4981  0AD3                     	goto	l741
  4982  0AD3  2AF0               	
  4983                           l740:	
  4984  0AD4                     	line	28
  4985                           	goto	l741
  4986  0AD4  2AF0               	
  4987                           l742:	
  4988  0AD5                     	line	29
  4989                           	
  4990                           l2692:	
  4991  0AD5                     	movlw	low(01h)
  4992  0AD5  3001               	movwf	(??___xxtofl+0)+0
  4993  0AD6  00F4               	movf	(??___xxtofl+0)+0,w
  4994  0AD7  0874               	addwf	(___xxtofl@exp),f
  4995  0AD8  07F9               	line	30
  4996                           	
  4997                           l2694:	
  4998  0AD9                     	movlw	01h
  4999  0AD9  3001               	addwf	(___xxtofl@arg),f
  5000  0ADA  07FA               	movlw	0
  5001  0ADB  3000               	skipnc
  5002  0ADC  1803               movlw 1
  5003  0ADD  3001               	addwf	(___xxtofl@arg+1),f
  5004  0ADE  07FB               	movlw	0
  5005  0ADF  3000               	skipnc
  5006  0AE0  1803               movlw 1
  5007  0AE1  3001               	addwf	(___xxtofl@arg+2),f
  5008  0AE2  07FC               	movlw	0
  5009  0AE3  3000               	skipnc
  5010  0AE4  1803               movlw 1
  5011  0AE5  3001               	addwf	(___xxtofl@arg+3),f
  5012  0AE6  07FD               	line	31
  5013                           	
  5014                           l2696:	
  5015  0AE7                     	movlw	01h
  5016  0AE7  3001               u3755:
  5017  0AE8                     	clrc
  5018  0AE8  1003               	rrf	(___xxtofl@arg+3),f
  5019  0AE9  0CFD               	rrf	(___xxtofl@arg+2),f
  5020  0AEA  0CFC               	rrf	(___xxtofl@arg+1),f
  5021  0AEB  0CFB               	rrf	(___xxtofl@arg),f
  5022  0AEC  0CFA               	addlw	-1
  5023  0AED  3EFF               	skipz
  5024  0AEE  1D03               	goto	u3755
  5025  0AEF  2AE8               
  5026                           	line	32
  5027                           	
  5028                           l741:	
  5029  0AF0                     	line	28
  5030                           	movlw	high highword(0FF000000h)
  5031  0AF0  30FF               	andwf	(___xxtofl@arg+3),w
  5032  0AF1  057D               	btfss	status,2
  5033  0AF2  1D03               	goto	u3761
  5034  0AF3  2AF5               	goto	u3760
  5035  0AF4  2AF6               u3761:
  5036  0AF5                     	goto	l2692
  5037  0AF5  2AD5               u3760:
  5038  0AF6                     	goto	l2700
  5039  0AF6  2B04               	
  5040                           l743:	
  5041  0AF7                     	line	33
  5042                           	goto	l2700
  5043  0AF7  2B04               	
  5044                           l745:	
  5045  0AF8                     	line	34
  5046                           	
  5047                           l2698:	
  5048  0AF8                     	movlw	01h
  5049  0AF8  3001               	subwf	(___xxtofl@exp),f
  5050  0AF9  02F9               	line	35
  5051                           	movlw	01h
  5052  0AFA  3001               	movwf	(??___xxtofl+0)+0
  5053  0AFB  00F4               u3775:
  5054  0AFC                     	clrc
  5055  0AFC  1003               	rlf	(___xxtofl@arg),f
  5056  0AFD  0DFA               	rlf	(___xxtofl@arg+1),f
  5057  0AFE  0DFB               	rlf	(___xxtofl@arg+2),f
  5058  0AFF  0DFC               	rlf	(___xxtofl@arg+3),f
  5059  0B00  0DFD               	decfsz	(??___xxtofl+0)+0
  5060  0B01  0BF4               	goto	u3775
  5061  0B02  2AFC               	goto	l2700
  5062  0B03  2B04               	line	36
  5063                           	
  5064                           l744:	
  5065  0B04                     	line	33
  5066                           	
  5067                           l2700:	
  5068  0B04                     	btfsc	(___xxtofl@arg+2),(23)&7
  5069  0B04  1BFC               	goto	u3781
  5070  0B05  2B07               	goto	u3780
  5071  0B06  2B08               u3781:
  5072  0B07                     	goto	l748
  5073  0B07  2B0F               u3780:
  5074  0B08                     	
  5075                           l2702:	
  5076  0B08                     	movlw	low(02h)
  5077  0B08  3002               	subwf	(___xxtofl@exp),w
  5078  0B09  0279               	skipnc
  5079  0B0A  1803               	goto	u3791
  5080  0B0B  2B0D               	goto	u3790
  5081  0B0C  2B0E               u3791:
  5082  0B0D                     	goto	l2698
  5083  0B0D  2AF8               u3790:
  5084  0B0E                     	goto	l748
  5085  0B0E  2B0F               	
  5086                           l747:	
  5087  0B0F                     	
  5088                           l748:	
  5089  0B0F                     	line	37
  5090                           	btfsc	(___xxtofl@exp),(0)&7
  5091  0B0F  1879               	goto	u3801
  5092  0B10  2B12               	goto	u3800
  5093  0B11  2B13               u3801:
  5094  0B12                     	goto	l749
  5095  0B12  2B1B               u3800:
  5096  0B13                     	line	38
  5097                           	
  5098                           l2704:	
  5099  0B13                     	movlw	0FFh
  5100  0B13  30FF               	andwf	(___xxtofl@arg),f
  5101  0B14  05FA               	movlw	0FFh
  5102  0B15  30FF               	andwf	(___xxtofl@arg+1),f
  5103  0B16  05FB               	movlw	07Fh
  5104  0B17  307F               	andwf	(___xxtofl@arg+2),f
  5105  0B18  05FC               	movlw	0FFh
  5106  0B19  30FF               	andwf	(___xxtofl@arg+3),f
  5107  0B1A  05FD               	
  5108                           l749:	
  5109  0B1B                     	line	39
  5110                           	clrc
  5111  0B1B  1003               	rrf	(___xxtofl@exp),f
  5112  0B1C  0CF9               
  5113                           	line	40
  5114                           	
  5115                           l2706:	
  5116  0B1D                     	movf	(___xxtofl@exp),w
  5117  0B1D  0879               	movwf	(??___xxtofl+0)+0
  5118  0B1E  00F4               	clrf	(??___xxtofl+0)+0+1
  5119  0B1F  01F5               	clrf	(??___xxtofl+0)+0+2
  5120  0B20  01F6               	clrf	(??___xxtofl+0)+0+3
  5121  0B21  01F7               	movlw	018h
  5122  0B22  3018               u3815:
  5123  0B23                     	clrc
  5124  0B23  1003               	rlf	(??___xxtofl+0)+0,f
  5125  0B24  0DF4               	rlf	(??___xxtofl+0)+1,f
  5126  0B25  0DF5               	rlf	(??___xxtofl+0)+2,f
  5127  0B26  0DF6               	rlf	(??___xxtofl+0)+3,f
  5128  0B27  0DF7               u3810:
  5129  0B28                     	addlw	-1
  5130  0B28  3EFF               	skipz
  5131  0B29  1D03               	goto	u3815
  5132  0B2A  2B23               	movf	0+(??___xxtofl+0)+0,w
  5133  0B2B  0874               	iorwf	(___xxtofl@arg),f
  5134  0B2C  04FA               	movf	1+(??___xxtofl+0)+0,w
  5135  0B2D  0875               	iorwf	(___xxtofl@arg+1),f
  5136  0B2E  04FB               	movf	2+(??___xxtofl+0)+0,w
  5137  0B2F  0876               	iorwf	(___xxtofl@arg+2),f
  5138  0B30  04FC               	movf	3+(??___xxtofl+0)+0,w
  5139  0B31  0877               	iorwf	(___xxtofl@arg+3),f
  5140  0B32  04FD               	line	41
  5141                           	
  5142                           l2708:	
  5143  0B33                     	movf	((___xxtofl@sign)),w
  5144  0B33  0878               	btfsc	status,2
  5145  0B34  1903               	goto	u3821
  5146  0B35  2B37               	goto	u3820
  5147  0B36  2B38               u3821:
  5148  0B37                     	goto	l2714
  5149  0B37  2B3E               u3820:
  5150  0B38                     	
  5151                           l2710:	
  5152  0B38                     	btfss	(___xxtofl@val+3),7
  5153  0B38  1FF3               	goto	u3831
  5154  0B39  2B3B               	goto	u3830
  5155  0B3A  2B3C               u3831:
  5156  0B3B                     	goto	l2714
  5157  0B3B  2B3E               u3830:
  5158  0B3C                     	line	42
  5159                           	
  5160                           l2712:	
  5161  0B3C                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  5162  0B3C  17FD               	goto	l2714
  5163  0B3D  2B3E               	
  5164                           l750:	
  5165  0B3E                     	line	43
  5166                           	
  5167                           l2714:	
  5168  0B3E                     	movf	(___xxtofl@arg+3),w
  5169  0B3E  087D               	movwf	(?___xxtofl+3)
  5170  0B3F  00F3               	movf	(___xxtofl@arg+2),w
  5171  0B40  087C               	movwf	(?___xxtofl+2)
  5172  0B41  00F2               	movf	(___xxtofl@arg+1),w
  5173  0B42  087B               	movwf	(?___xxtofl+1)
  5174  0B43  00F1               	movf	(___xxtofl@arg),w
  5175  0B44  087A               	movwf	(?___xxtofl)
  5176  0B45  00F0               
  5177                           	goto	l737
  5178  0B46  2B47               	
  5179                           l2716:	
  5180  0B47                     	line	44
  5181                           	
  5182                           l737:	
  5183  0B47                     	return
  5184  0B47  0008               	opt stack 0
  5185                           GLOBAL	__end_of___xxtofl
  5186                           	__end_of___xxtofl:
  5187  0B48                     	signat	___xxtofl,8316
  5188                           	global	___fltol
  5189                           
  5190 ;; *************** function ___fltol *****************
  5191 ;; Defined at:
  5192 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  5193 ;; Parameters:    Size  Location     Type
  5194 ;;  f1              4    0[COMMON] unsigned char 
  5195 ;; Auto vars:     Size  Location     Type
  5196 ;;  exp1            1   10[COMMON] unsigned char 
  5197 ;;  sign1           1    9[COMMON] unsigned char 
  5198 ;; Return value:  Size  Location     Type
  5199 ;;                  4    0[COMMON] long 
  5200 ;; Registers used:
  5201 ;;		wreg, status,2, status,0
  5202 ;; Tracked objects:
  5203 ;;		On entry : 0/0
  5204 ;;		On exit  : 0/0
  5205 ;;		Unchanged: 0/0
  5206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5207 ;;      Params:         4       0       0       0       0
  5208 ;;      Locals:         2       0       0       0       0
  5209 ;;      Temps:          5       0       0       0       0
  5210 ;;      Totals:        11       0       0       0       0
  5211 ;;Total ram usage:       11 bytes
  5212 ;; Hardware stack levels used:    1
  5213 ;; This function calls:
  5214 ;;		Nothing
  5215 ;; This function is called by:
  5216 ;;		_main
  5217 ;; This function uses a non-reentrant model
  5218 ;;
  5219                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  5220                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  5221                           	line	43
  5222                           global __ptext16
  5223                           __ptext16:	;psect for function ___fltol
  5224  0028                     psect	text16
  5225                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  5226                           	line	43
  5227                           	global	__size_of___fltol
  5228                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  5229  009A                     	
  5230                           ___fltol:	
  5231  0028                     ;incstack = 0
  5232                           	opt	stack 7
  5233                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  5234                           	line	47
  5235                           	
  5236                           l2162:	
  5237  0028                     	movf	(___fltol@f1),w
  5238  0028  0870               	movwf	(??___fltol+0)+0
  5239  0029  00F4               	movf	(___fltol@f1+1),w
  5240  002A  0871               	movwf	((??___fltol+0)+0+1)
  5241  002B  00F5               	movf	(___fltol@f1+2),w
  5242  002C  0872               	movwf	((??___fltol+0)+0+2)
  5243  002D  00F6               	movf	(___fltol@f1+3),w
  5244  002E  0873               	movwf	((??___fltol+0)+0+3)
  5245  002F  00F7               	clrc
  5246  0030  1003               	rlf	(??___fltol+0)+2,w
  5247  0031  0D76               	rlf	(??___fltol+0)+3,w
  5248  0032  0D77               	movwf	(??___fltol+4)+0
  5249  0033  00F8               	movf	(??___fltol+4)+0,w
  5250  0034  0878               	movwf	(___fltol@exp1)
  5251  0035  00FA               	movf	(((___fltol@exp1))),w
  5252  0036  087A               	btfss	status,2
  5253  0037  1D03               	goto	u2481
  5254  0038  283A               	goto	u2480
  5255  0039  283B               u2481:
  5256  003A                     	goto	l2168
  5257  003A  2845               u2480:
  5258  003B                     	line	48
  5259                           	
  5260                           l2164:	
  5261  003B                     	movlw	high highword(0)
  5262  003B  3000               	movwf	(?___fltol+3)
  5263  003C  00F3               	movlw	low highword(0)
  5264  003D  3000               	movwf	(?___fltol+2)
  5265  003E  00F2               	movlw	high(0)
  5266  003F  3000               	movwf	(?___fltol+1)
  5267  0040  00F1               	movlw	low(0)
  5268  0041  3000               	movwf	(?___fltol)
  5269  0042  00F0               
  5270                           	goto	l513
  5271  0043  28C1               	
  5272                           l2166:	
  5273  0044                     	goto	l513
  5274  0044  28C1               	
  5275                           l512:	
  5276  0045                     	line	49
  5277                           	
  5278                           l2168:	
  5279  0045                     	movf	(___fltol@f1),w
  5280  0045  0870               	movwf	(??___fltol+0)+0
  5281  0046  00F4               	movf	(___fltol@f1+1),w
  5282  0047  0871               	movwf	((??___fltol+0)+0+1)
  5283  0048  00F5               	movf	(___fltol@f1+2),w
  5284  0049  0872               	movwf	((??___fltol+0)+0+2)
  5285  004A  00F6               	movf	(___fltol@f1+3),w
  5286  004B  0873               	movwf	((??___fltol+0)+0+3)
  5287  004C  00F7               	movlw	01Fh
  5288  004D  301F               u2495:
  5289  004E                     	clrc
  5290  004E  1003               	rrf	(??___fltol+0)+3,f
  5291  004F  0CF7               	rrf	(??___fltol+0)+2,f
  5292  0050  0CF6               	rrf	(??___fltol+0)+1,f
  5293  0051  0CF5               	rrf	(??___fltol+0)+0,f
  5294  0052  0CF4               u2490:
  5295  0053                     	addlw	-1
  5296  0053  3EFF               	skipz
  5297  0054  1D03               	goto	u2495
  5298  0055  284E               	movf	0+(??___fltol+0)+0,w
  5299  0056  0874               	movwf	(??___fltol+4)+0
  5300  0057  00F8               	movf	(??___fltol+4)+0,w
  5301  0058  0878               	movwf	(___fltol@sign1)
  5302  0059  00F9               	line	50
  5303                           	
  5304                           l2170:	
  5305  005A                     	bsf	(___fltol@f1)+(23/8),(23)&7
  5306  005A  17F2               	line	51
  5307                           	
  5308                           l2172:	
  5309  005B                     	movlw	0FFh
  5310  005B  30FF               	andwf	(___fltol@f1),f
  5311  005C  05F0               	movlw	0FFh
  5312  005D  30FF               	andwf	(___fltol@f1+1),f
  5313  005E  05F1               	movlw	0FFh
  5314  005F  30FF               	andwf	(___fltol@f1+2),f
  5315  0060  05F2               	movlw	0
  5316  0061  3000               	andwf	(___fltol@f1+3),f
  5317  0062  05F3               	line	52
  5318                           	
  5319                           l2174:	
  5320  0063                     	movlw	096h
  5321  0063  3096               	subwf	(___fltol@exp1),f
  5322  0064  02FA               	line	53
  5323                           	
  5324                           l2176:	
  5325  0065                     	btfss	(___fltol@exp1),7
  5326  0065  1FFA               	goto	u2501
  5327  0066  2868               	goto	u2500
  5328  0067  2869               u2501:
  5329  0068                     	goto	l2186
  5330  0068  288E               u2500:
  5331  0069                     	line	54
  5332                           	
  5333                           l2178:	
  5334  0069                     	movf	(___fltol@exp1),w
  5335  0069  087A               	xorlw	80h
  5336  006A  3A80               	addlw	-((-23)^80h)
  5337  006B  3E97               	skipnc
  5338  006C  1803               	goto	u2511
  5339  006D  286F               	goto	u2510
  5340  006E  2870               u2511:
  5341  006F                     	goto	l2184
  5342  006F  287B               u2510:
  5343  0070                     	line	55
  5344                           	
  5345                           l2180:	
  5346  0070                     	movlw	high highword(0)
  5347  0070  3000               	movwf	(?___fltol+3)
  5348  0071  00F3               	movlw	low highword(0)
  5349  0072  3000               	movwf	(?___fltol+2)
  5350  0073  00F2               	movlw	high(0)
  5351  0074  3000               	movwf	(?___fltol+1)
  5352  0075  00F1               	movlw	low(0)
  5353  0076  3000               	movwf	(?___fltol)
  5354  0077  00F0               
  5355                           	goto	l513
  5356  0078  28C1               	
  5357                           l2182:	
  5358  0079                     	goto	l513
  5359  0079  28C1               	
  5360                           l515:	
  5361  007A                     	goto	l2184
  5362  007A  287B               	line	56
  5363                           	
  5364                           l516:	
  5365  007B                     	line	57
  5366                           	
  5367                           l2184:	
  5368  007B                     	movlw	01h
  5369  007B  3001               u2525:
  5370  007C                     	clrc
  5371  007C  1003               	rrf	(___fltol@f1+3),f
  5372  007D  0CF3               	rrf	(___fltol@f1+2),f
  5373  007E  0CF2               	rrf	(___fltol@f1+1),f
  5374  007F  0CF1               	rrf	(___fltol@f1),f
  5375  0080  0CF0               	addlw	-1
  5376  0081  3EFF               	skipz
  5377  0082  1D03               	goto	u2525
  5378  0083  287C               
  5379                           	line	58
  5380                           	movlw	low(01h)
  5381  0084  3001               	movwf	(??___fltol+0)+0
  5382  0085  00F4               	movf	(??___fltol+0)+0,w
  5383  0086  0874               	addwf	(___fltol@exp1),f
  5384  0087  07FA               	btfss	status,2
  5385  0088  1D03               	goto	u2531
  5386  0089  288B               	goto	u2530
  5387  008A  288C               u2531:
  5388  008B                     	goto	l2184
  5389  008B  287B               u2530:
  5390  008C                     	goto	l2194
  5391  008C  28B1               	
  5392                           l517:	
  5393  008D                     	line	59
  5394                           	goto	l2194
  5395  008D  28B1               	
  5396                           l514:	
  5397  008E                     	line	60
  5398                           	
  5399                           l2186:	
  5400  008E                     	movlw	low(020h)
  5401  008E  3020               	subwf	(___fltol@exp1),w
  5402  008F  027A               	skipc
  5403  0090  1C03               	goto	u2541
  5404  0091  2893               	goto	u2540
  5405  0092  2894               u2541:
  5406  0093                     	goto	l520
  5407  0093  28AA               u2540:
  5408  0094                     	line	61
  5409                           	
  5410                           l2188:	
  5411  0094                     	movlw	high highword(0)
  5412  0094  3000               	movwf	(?___fltol+3)
  5413  0095  00F3               	movlw	low highword(0)
  5414  0096  3000               	movwf	(?___fltol+2)
  5415  0097  00F2               	movlw	high(0)
  5416  0098  3000               	movwf	(?___fltol+1)
  5417  0099  00F1               	movlw	low(0)
  5418  009A  3000               	movwf	(?___fltol)
  5419  009B  00F0               
  5420                           	goto	l513
  5421  009C  28C1               	
  5422                           l2190:	
  5423  009D                     	goto	l513
  5424  009D  28C1               	
  5425                           l519:	
  5426  009E                     	line	62
  5427                           	goto	l520
  5428  009E  28AA               	
  5429                           l521:	
  5430  009F                     	line	63
  5431                           	
  5432                           l2192:	
  5433  009F                     	movlw	01h
  5434  009F  3001               	movwf	(??___fltol+0)+0
  5435  00A0  00F4               u2555:
  5436  00A1                     	clrc
  5437  00A1  1003               	rlf	(___fltol@f1),f
  5438  00A2  0DF0               	rlf	(___fltol@f1+1),f
  5439  00A3  0DF1               	rlf	(___fltol@f1+2),f
  5440  00A4  0DF2               	rlf	(___fltol@f1+3),f
  5441  00A5  0DF3               	decfsz	(??___fltol+0)+0
  5442  00A6  0BF4               	goto	u2555
  5443  00A7  28A1               	line	64
  5444                           	movlw	01h
  5445  00A8  3001               	subwf	(___fltol@exp1),f
  5446  00A9  02FA               	line	65
  5447                           	
  5448                           l520:	
  5449  00AA                     	line	62
  5450                           	movf	((___fltol@exp1)),w
  5451  00AA  087A               	btfss	status,2
  5452  00AB  1D03               	goto	u2561
  5453  00AC  28AE               	goto	u2560
  5454  00AD  28AF               u2561:
  5455  00AE                     	goto	l2192
  5456  00AE  289F               u2560:
  5457  00AF                     	goto	l2194
  5458  00AF  28B1               	
  5459                           l522:	
  5460  00B0                     	goto	l2194
  5461  00B0  28B1               	line	66
  5462                           	
  5463                           l518:	
  5464  00B1                     	line	67
  5465                           	
  5466                           l2194:	
  5467  00B1                     	movf	((___fltol@sign1)),w
  5468  00B1  0879               	btfsc	status,2
  5469  00B2  1903               	goto	u2571
  5470  00B3  28B5               	goto	u2570
  5471  00B4  28B6               u2571:
  5472  00B5                     	goto	l523
  5473  00B5  28C1               u2570:
  5474  00B6                     	line	68
  5475                           	
  5476                           l2196:	
  5477  00B6                     	comf	(___fltol@f1),f
  5478  00B6  09F0               	comf	(___fltol@f1+1),f
  5479  00B7  09F1               	comf	(___fltol@f1+2),f
  5480  00B8  09F2               	comf	(___fltol@f1+3),f
  5481  00B9  09F3               	incf	(___fltol@f1),f
  5482  00BA  0AF0               	skipnz
  5483  00BB  1903               	incf	(___fltol@f1+1),f
  5484  00BC  0AF1               	skipnz
  5485  00BD  1903               	incf	(___fltol@f1+2),f
  5486  00BE  0AF2               	skipnz
  5487  00BF  1903               	incf	(___fltol@f1+3),f
  5488  00C0  0AF3               	
  5489                           l523:	
  5490  00C1                     	line	69
  5491                           	line	70
  5492                           	
  5493                           l513:	
  5494  00C1                     	return
  5495  00C1  0008               	opt stack 0
  5496                           GLOBAL	__end_of___fltol
  5497                           	__end_of___fltol:
  5498  00C2                     	signat	___fltol,4220
  5499                           	global	___flneg
  5500                           
  5501 ;; *************** function ___flneg *****************
  5502 ;; Defined at:
  5503 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  f1              4    0[BANK0 ] long 
  5506 ;; Auto vars:     Size  Location     Type
  5507 ;;		None
  5508 ;; Return value:  Size  Location     Type
  5509 ;;                  4    0[BANK0 ] long 
  5510 ;; Registers used:
  5511 ;;		wreg
  5512 ;; Tracked objects:
  5513 ;;		On entry : 0/0
  5514 ;;		On exit  : 0/0
  5515 ;;		Unchanged: 0/0
  5516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5517 ;;      Params:         0       4       0       0       0
  5518 ;;      Locals:         0       0       0       0       0
  5519 ;;      Temps:          0       0       0       0       0
  5520 ;;      Totals:         0       4       0       0       0
  5521 ;;Total ram usage:        4 bytes
  5522 ;; Hardware stack levels used:    1
  5523 ;; This function calls:
  5524 ;;		Nothing
  5525 ;; This function is called by:
  5526 ;;		_main
  5527 ;; This function uses a non-reentrant model
  5528 ;;
  5529                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5530                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5531                           	line	15
  5532                           global __ptext17
  5533                           __ptext17:	;psect for function ___flneg
  5534  16FA                     psect	text17
  5535                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5536                           	line	15
  5537                           	global	__size_of___flneg
  5538                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  5539  000F                     	
  5540                           ___flneg:	
  5541  16FA                     ;incstack = 0
  5542                           	opt	stack 7
  5543                           ; Regs used in ___flneg: [wreg]
  5544                           	line	17
  5545                           	
  5546                           l2154:	
  5547  16FA                     	bcf	status, 5	;RP0=0, select bank0
  5548  16FA  1283               	bcf	status, 6	;RP1=0, select bank0
  5549  16FB  1303               	movf	(___flneg@f1+3),w
  5550  16FC  0823               	iorwf	(___flneg@f1+2),w
  5551  16FD  0422               	iorwf	(___flneg@f1+1),w
  5552  16FE  0421               	iorwf	(___flneg@f1),w
  5553  16FF  0420               	skipnz
  5554  1700  1903               	goto	u2471
  5555  1701  2F03               	goto	u2470
  5556  1702  2F04               u2471:
  5557  1703                     	goto	l2158
  5558  1703  2F07               u2470:
  5559  1704                     	line	18
  5560                           	
  5561                           l2156:	
  5562  1704                     	movlw	080h
  5563  1704  3080               	xorwf	(___flneg@f1+3),f
  5564  1705  06A3               	goto	l2158
  5565  1706  2F07               	
  5566                           l508:	
  5567  1707                     	line	19
  5568                           	
  5569                           l2158:	
  5570  1707                     	goto	l509
  5571  1707  2F08               	
  5572                           l2160:	
  5573  1708                     	line	20
  5574                           	
  5575                           l509:	
  5576  1708                     	return
  5577  1708  0008               	opt stack 0
  5578                           GLOBAL	__end_of___flneg
  5579                           	__end_of___flneg:
  5580  1709                     	signat	___flneg,4220
  5581                           	global	___flmul
  5582                           
  5583 ;; *************** function ___flmul *****************
  5584 ;; Defined at:
  5585 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5586 ;; Parameters:    Size  Location     Type
  5587 ;;  b               4   28[BANK0 ] long 
  5588 ;;  a               4   32[BANK0 ] long 
  5589 ;; Auto vars:     Size  Location     Type
  5590 ;;  prod            4   48[BANK0 ] struct .
  5591 ;;  grs             4   42[BANK0 ] unsigned long 
  5592 ;;  temp            2   52[BANK0 ] struct .
  5593 ;;  bexp            1   47[BANK0 ] unsigned char 
  5594 ;;  aexp            1   46[BANK0 ] unsigned char 
  5595 ;;  sign            1   41[BANK0 ] unsigned char 
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  4   28[BANK0 ] unsigned char 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5605 ;;      Params:         0       8       0       0       0
  5606 ;;      Locals:         0      13       0       0       0
  5607 ;;      Temps:          0       5       0       0       0
  5608 ;;      Totals:         0      26       0       0       0
  5609 ;;Total ram usage:       26 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    1
  5612 ;; This function calls:
  5613 ;;		__Umul8_16
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5619                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5620                           	line	8
  5621                           global __ptext18
  5622                           __ptext18:	;psect for function ___flmul
  5623  047E                     psect	text18
  5624                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5625                           	line	8
  5626                           	global	__size_of___flmul
  5627                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  5628  0375                     	
  5629                           ___flmul:	
  5630  047E                     ;incstack = 0
  5631                           	opt	stack 6
  5632                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5633                           	line	17
  5634                           	
  5635                           l2534:	
  5636  047E                     	bcf	status, 5	;RP0=0, select bank0
  5637  047E  1283               	bcf	status, 6	;RP1=0, select bank0
  5638  047F  1303               	movf	0+(___flmul@b)+03h,w
  5639  0480  083F               	andlw	080h
  5640  0481  3980               	movwf	(??___flmul+0)+0
  5641  0482  00C4               	movf	(??___flmul+0)+0,w
  5642  0483  0844               	movwf	(___flmul@sign)
  5643  0484  00C9               	line	18
  5644                           	
  5645                           l2536:	
  5646  0485                     	movf	0+(___flmul@b)+03h,w
  5647  0485  083F               	movwf	(??___flmul+0)+0
  5648  0486  00C4               	addwf	(??___flmul+0)+0,w
  5649  0487  0744               	movwf	(??___flmul+1)+0
  5650  0488  00C5               	movf	(??___flmul+1)+0,w
  5651  0489  0845               	movwf	(___flmul@bexp)
  5652  048A  00CF               	line	19
  5653                           	
  5654                           l2538:	
  5655  048B                     	btfss	0+(___flmul@b)+02h,(7)&7
  5656  048B  1FBE               	goto	u3331
  5657  048C  2C8E               	goto	u3330
  5658  048D  2C8F               u3331:
  5659  048E                     	goto	l2542
  5660  048E  2C91               u3330:
  5661  048F                     	line	20
  5662                           	
  5663                           l2540:	
  5664  048F                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  5665  048F  144F               	goto	l2542
  5666  0490  2C91               	line	21
  5667                           	
  5668                           l705:	
  5669  0491                     	line	24
  5670                           	
  5671                           l2542:	
  5672  0491                     	movf	((___flmul@bexp)),w
  5673  0491  084F               	btfsc	status,2
  5674  0492  1903               	goto	u3341
  5675  0493  2C95               	goto	u3340
  5676  0494  2C96               u3341:
  5677  0495                     	goto	l2550
  5678  0495  2CA6               u3340:
  5679  0496                     	line	26
  5680                           	
  5681                           l2544:	
  5682  0496                     		incf	((___flmul@bexp)),w
  5683  0496  0A4F               	btfss	status,2
  5684  0497  1D03               	goto	u3351
  5685  0498  2C9A               	goto	u3350
  5686  0499  2C9B               u3351:
  5687  049A                     	goto	l2548
  5688  049A  2CA4               u3350:
  5689  049B                     	line	28
  5690                           	
  5691                           l2546:	
  5692  049B                     	movlw	0x0
  5693  049B  3000               	movwf	(___flmul@b+3)
  5694  049C  00BF               	movlw	0x0
  5695  049D  3000               	movwf	(___flmul@b+2)
  5696  049E  00BE               	movlw	0x0
  5697  049F  3000               	movwf	(___flmul@b+1)
  5698  04A0  00BD               	movlw	0x0
  5699  04A1  3000               	movwf	(___flmul@b)
  5700  04A2  00BC               
  5701                           	goto	l2548
  5702  04A3  2CA4               	line	29
  5703                           	
  5704                           l707:	
  5705  04A4                     	line	31
  5706                           	
  5707                           l2548:	
  5708  04A4                     	bsf	(___flmul@b)+(23/8),(23)&7
  5709  04A4  17BE               	line	33
  5710                           	goto	l2552
  5711  04A5  2CAF               	line	34
  5712                           	
  5713                           l706:	
  5714  04A6                     	line	36
  5715                           	
  5716                           l2550:	
  5717  04A6                     	movlw	0x0
  5718  04A6  3000               	movwf	(___flmul@b+3)
  5719  04A7  00BF               	movlw	0x0
  5720  04A8  3000               	movwf	(___flmul@b+2)
  5721  04A9  00BE               	movlw	0x0
  5722  04AA  3000               	movwf	(___flmul@b+1)
  5723  04AB  00BD               	movlw	0x0
  5724  04AC  3000               	movwf	(___flmul@b)
  5725  04AD  00BC               
  5726                           	goto	l2552
  5727  04AE  2CAF               	line	37
  5728                           	
  5729                           l708:	
  5730  04AF                     	line	39
  5731                           	
  5732                           l2552:	
  5733  04AF                     	movf	0+(___flmul@a)+03h,w
  5734  04AF  0843               	andlw	080h
  5735  04B0  3980               	movwf	(??___flmul+0)+0
  5736  04B1  00C4               	movf	(??___flmul+0)+0,w
  5737  04B2  0844               	xorwf	(___flmul@sign),f
  5738  04B3  06C9               	line	40
  5739                           	
  5740                           l2554:	
  5741  04B4                     	movf	0+(___flmul@a)+03h,w
  5742  04B4  0843               	movwf	(??___flmul+0)+0
  5743  04B5  00C4               	addwf	(??___flmul+0)+0,w
  5744  04B6  0744               	movwf	(??___flmul+1)+0
  5745  04B7  00C5               	movf	(??___flmul+1)+0,w
  5746  04B8  0845               	movwf	(___flmul@aexp)
  5747  04B9  00CE               	line	41
  5748                           	
  5749                           l2556:	
  5750  04BA                     	btfss	0+(___flmul@a)+02h,(7)&7
  5751  04BA  1FC2               	goto	u3361
  5752  04BB  2CBD               	goto	u3360
  5753  04BC  2CBE               u3361:
  5754  04BD                     	goto	l2560
  5755  04BD  2CC0               u3360:
  5756  04BE                     	line	42
  5757                           	
  5758                           l2558:	
  5759  04BE                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  5760  04BE  144E               	goto	l2560
  5761  04BF  2CC0               	line	43
  5762                           	
  5763                           l709:	
  5764  04C0                     	line	45
  5765                           	
  5766                           l2560:	
  5767  04C0                     	movf	((___flmul@aexp)),w
  5768  04C0  084E               	btfsc	status,2
  5769  04C1  1903               	goto	u3371
  5770  04C2  2CC4               	goto	u3370
  5771  04C3  2CC5               u3371:
  5772  04C4                     	goto	l2568
  5773  04C4  2CD5               u3370:
  5774  04C5                     	line	48
  5775                           	
  5776                           l2562:	
  5777  04C5                     		incf	((___flmul@aexp)),w
  5778  04C5  0A4E               	btfss	status,2
  5779  04C6  1D03               	goto	u3381
  5780  04C7  2CC9               	goto	u3380
  5781  04C8  2CCA               u3381:
  5782  04C9                     	goto	l2566
  5783  04C9  2CD3               u3380:
  5784  04CA                     	line	50
  5785                           	
  5786                           l2564:	
  5787  04CA                     	movlw	0x0
  5788  04CA  3000               	movwf	(___flmul@a+3)
  5789  04CB  00C3               	movlw	0x0
  5790  04CC  3000               	movwf	(___flmul@a+2)
  5791  04CD  00C2               	movlw	0x0
  5792  04CE  3000               	movwf	(___flmul@a+1)
  5793  04CF  00C1               	movlw	0x0
  5794  04D0  3000               	movwf	(___flmul@a)
  5795  04D1  00C0               
  5796                           	goto	l2566
  5797  04D2  2CD3               	line	51
  5798                           	
  5799                           l711:	
  5800  04D3                     	line	53
  5801                           	
  5802                           l2566:	
  5803  04D3                     	bsf	(___flmul@a)+(23/8),(23)&7
  5804  04D3  17C2               	line	54
  5805                           	goto	l2570
  5806  04D4  2CDE               	line	55
  5807                           	
  5808                           l710:	
  5809  04D5                     	line	57
  5810                           	
  5811                           l2568:	
  5812  04D5                     	movlw	0x0
  5813  04D5  3000               	movwf	(___flmul@a+3)
  5814  04D6  00C3               	movlw	0x0
  5815  04D7  3000               	movwf	(___flmul@a+2)
  5816  04D8  00C2               	movlw	0x0
  5817  04D9  3000               	movwf	(___flmul@a+1)
  5818  04DA  00C1               	movlw	0x0
  5819  04DB  3000               	movwf	(___flmul@a)
  5820  04DC  00C0               
  5821                           	goto	l2570
  5822  04DD  2CDE               	line	58
  5823                           	
  5824                           l712:	
  5825  04DE                     	line	65
  5826                           	
  5827                           l2570:	
  5828  04DE                     	movf	((___flmul@aexp)),w
  5829  04DE  084E               	btfsc	status,2
  5830  04DF  1903               	goto	u3391
  5831  04E0  2CE2               	goto	u3390
  5832  04E1  2CE3               u3391:
  5833  04E2                     	goto	l2574
  5834  04E2  2CE9               u3390:
  5835  04E3                     	
  5836                           l2572:	
  5837  04E3                     	movf	((___flmul@bexp)),w
  5838  04E3  084F               	btfss	status,2
  5839  04E4  1D03               	goto	u3401
  5840  04E5  2CE7               	goto	u3400
  5841  04E6  2CE8               u3401:
  5842  04E7                     	goto	l2578
  5843  04E7  2CF3               u3400:
  5844  04E8                     	goto	l2574
  5845  04E8  2CE9               	
  5846                           l715:	
  5847  04E9                     	line	66
  5848                           	
  5849                           l2574:	
  5850  04E9                     	movlw	0x0
  5851  04E9  3000               	movwf	(?___flmul+3)
  5852  04EA  00BF               	movlw	0x0
  5853  04EB  3000               	movwf	(?___flmul+2)
  5854  04EC  00BE               	movlw	0x0
  5855  04ED  3000               	movwf	(?___flmul+1)
  5856  04EE  00BD               	movlw	0x0
  5857  04EF  3000               	movwf	(?___flmul)
  5858  04F0  00BC               
  5859                           	goto	l716
  5860  04F1  2FF2               	
  5861                           l2576:	
  5862  04F2                     	goto	l716
  5863  04F2  2FF2               	line	67
  5864                           	
  5865                           l713:	
  5866  04F3                     	line	119
  5867                           	
  5868                           l2578:	
  5869  04F3                     	movf	(___flmul@b),w
  5870  04F3  083C               	movwf	(??___flmul+0)+0
  5871  04F4  00C4               	movf	(??___flmul+0)+0,w
  5872  04F5  0844               	movwf	(__Umul8_16@multiplicand)
  5873  04F6  00F0               	movf	0+(___flmul@a)+02h,w
  5874  04F7  0842               	fcall	__Umul8_16
  5875  04F8  160A  118A  2735  120A  118A  	movf	(1+(?__Umul8_16)),w
  5876  04FD  0871               	bcf	status, 5	;RP0=0, select bank0
  5877  04FE  1283               	bcf	status, 6	;RP1=0, select bank0
  5878  04FF  1303               	movwf	(___flmul@temp+1)
  5879  0500  00D5               	movf	(0+(?__Umul8_16)),w
  5880  0501  0870               	movwf	(___flmul@temp)
  5881  0502  00D4               	line	120
  5882                           	
  5883                           l2580:	
  5884  0503                     	movf	(___flmul@temp),w
  5885  0503  0854               	movwf	(??___flmul+0)+0
  5886  0504  00C4               	clrf	(??___flmul+0)+0+1
  5887  0505  01C5               	clrf	(??___flmul+0)+0+2
  5888  0506  01C6               	clrf	(??___flmul+0)+0+3
  5889  0507  01C7               	movf	3+(??___flmul+0)+0,w
  5890  0508  0847               	movwf	(___flmul@grs+3)
  5891  0509  00CD               	movf	2+(??___flmul+0)+0,w
  5892  050A  0846               	movwf	(___flmul@grs+2)
  5893  050B  00CC               	movf	1+(??___flmul+0)+0,w
  5894  050C  0845               	movwf	(___flmul@grs+1)
  5895  050D  00CB               	movf	0+(??___flmul+0)+0,w
  5896  050E  0844               	movwf	(___flmul@grs)
  5897  050F  00CA               
  5898                           	line	121
  5899                           	
  5900                           l2582:	
  5901  0510                     	movf	0+(___flmul@temp)+01h,w
  5902  0510  0855               	movwf	(??___flmul+0)+0
  5903  0511  00C4               	clrf	(??___flmul+0)+0+1
  5904  0512  01C5               	clrf	(??___flmul+0)+0+2
  5905  0513  01C6               	clrf	(??___flmul+0)+0+3
  5906  0514  01C7               	movf	3+(??___flmul+0)+0,w
  5907  0515  0847               	movwf	(___flmul@prod+3)
  5908  0516  00D3               	movf	2+(??___flmul+0)+0,w
  5909  0517  0846               	movwf	(___flmul@prod+2)
  5910  0518  00D2               	movf	1+(??___flmul+0)+0,w
  5911  0519  0845               	movwf	(___flmul@prod+1)
  5912  051A  00D1               	movf	0+(??___flmul+0)+0,w
  5913  051B  0844               	movwf	(___flmul@prod)
  5914  051C  00D0               
  5915                           	line	122
  5916                           	movf	0+(___flmul@b)+01h,w
  5917  051D  083D               	movwf	(??___flmul+0)+0
  5918  051E  00C4               	movf	(??___flmul+0)+0,w
  5919  051F  0844               	movwf	(__Umul8_16@multiplicand)
  5920  0520  00F0               	movf	0+(___flmul@a)+01h,w
  5921  0521  0841               	fcall	__Umul8_16
  5922  0522  160A  118A  2735  120A  118A  	movf	(1+(?__Umul8_16)),w
  5923  0527  0871               	bcf	status, 5	;RP0=0, select bank0
  5924  0528  1283               	bcf	status, 6	;RP1=0, select bank0
  5925  0529  1303               	movwf	(___flmul@temp+1)
  5926  052A  00D5               	movf	(0+(?__Umul8_16)),w
  5927  052B  0870               	movwf	(___flmul@temp)
  5928  052C  00D4               	line	123
  5929                           	
  5930                           l2584:	
  5931  052D                     	movf	(___flmul@temp),w
  5932  052D  0854               	movwf	(??___flmul+0)+0
  5933  052E  00C4               	clrf	(??___flmul+0)+0+1
  5934  052F  01C5               	clrf	(??___flmul+0)+0+2
  5935  0530  01C6               	clrf	(??___flmul+0)+0+3
  5936  0531  01C7               	movf	0+(??___flmul+0)+0,w
  5937  0532  0844               	addwf	(___flmul@grs),f
  5938  0533  07CA               	movf	1+(??___flmul+0)+0,w
  5939  0534  0845               	clrz
  5940  0535  1103               	skipnc
  5941  0536  1803               	addlw	1
  5942  0537  3E01               	skipnz
  5943  0538  1903               	goto	u3411
  5944  0539  2D3B               	addwf	(___flmul@grs+1),f
  5945  053A  07CB               u3411:
  5946  053B                     	movf	2+(??___flmul+0)+0,w
  5947  053B  0846               	clrz
  5948  053C  1103               	skipnc
  5949  053D  1803               	addlw	1
  5950  053E  3E01               	skipnz
  5951  053F  1903               	goto	u3412
  5952  0540  2D42               	addwf	(___flmul@grs+2),f
  5953  0541  07CC               u3412:
  5954  0542                     	movf	3+(??___flmul+0)+0,w
  5955  0542  0847               	clrz
  5956  0543  1103               	skipnc
  5957  0544  1803               	addlw	1
  5958  0545  3E01               	skipnz
  5959  0546  1903               	goto	u3413
  5960  0547  2D49               	addwf	(___flmul@grs+3),f
  5961  0548  07CD               u3413:
  5962  0549                     
  5963                           	line	124
  5964                           	
  5965                           l2586:	
  5966  0549                     	movf	0+(___flmul@temp)+01h,w
  5967  0549  0855               	movwf	(??___flmul+0)+0
  5968  054A  00C4               	clrf	(??___flmul+0)+0+1
  5969  054B  01C5               	clrf	(??___flmul+0)+0+2
  5970  054C  01C6               	clrf	(??___flmul+0)+0+3
  5971  054D  01C7               	movf	0+(??___flmul+0)+0,w
  5972  054E  0844               	addwf	(___flmul@prod),f
  5973  054F  07D0               	movf	1+(??___flmul+0)+0,w
  5974  0550  0845               	clrz
  5975  0551  1103               	skipnc
  5976  0552  1803               	addlw	1
  5977  0553  3E01               	skipnz
  5978  0554  1903               	goto	u3421
  5979  0555  2D57               	addwf	(___flmul@prod+1),f
  5980  0556  07D1               u3421:
  5981  0557                     	movf	2+(??___flmul+0)+0,w
  5982  0557  0846               	clrz
  5983  0558  1103               	skipnc
  5984  0559  1803               	addlw	1
  5985  055A  3E01               	skipnz
  5986  055B  1903               	goto	u3422
  5987  055C  2D5E               	addwf	(___flmul@prod+2),f
  5988  055D  07D2               u3422:
  5989  055E                     	movf	3+(??___flmul+0)+0,w
  5990  055E  0847               	clrz
  5991  055F  1103               	skipnc
  5992  0560  1803               	addlw	1
  5993  0561  3E01               	skipnz
  5994  0562  1903               	goto	u3423
  5995  0563  2D65               	addwf	(___flmul@prod+3),f
  5996  0564  07D3               u3423:
  5997  0565                     
  5998                           	line	125
  5999                           	movf	0+(___flmul@b)+02h,w
  6000  0565  083E               	movwf	(??___flmul+0)+0
  6001  0566  00C4               	movf	(??___flmul+0)+0,w
  6002  0567  0844               	movwf	(__Umul8_16@multiplicand)
  6003  0568  00F0               	movf	(___flmul@a),w
  6004  0569  0840               	fcall	__Umul8_16
  6005  056A  160A  118A  2735  120A  118A  	movf	(1+(?__Umul8_16)),w
  6006  056F  0871               	bcf	status, 5	;RP0=0, select bank0
  6007  0570  1283               	bcf	status, 6	;RP1=0, select bank0
  6008  0571  1303               	movwf	(___flmul@temp+1)
  6009  0572  00D5               	movf	(0+(?__Umul8_16)),w
  6010  0573  0870               	movwf	(___flmul@temp)
  6011  0574  00D4               	line	126
  6012                           	
  6013                           l2588:	
  6014  0575                     	movf	(___flmul@temp),w
  6015  0575  0854               	movwf	(??___flmul+0)+0
  6016  0576  00C4               	clrf	(??___flmul+0)+0+1
  6017  0577  01C5               	clrf	(??___flmul+0)+0+2
  6018  0578  01C6               	clrf	(??___flmul+0)+0+3
  6019  0579  01C7               	movf	0+(??___flmul+0)+0,w
  6020  057A  0844               	addwf	(___flmul@grs),f
  6021  057B  07CA               	movf	1+(??___flmul+0)+0,w
  6022  057C  0845               	clrz
  6023  057D  1103               	skipnc
  6024  057E  1803               	addlw	1
  6025  057F  3E01               	skipnz
  6026  0580  1903               	goto	u3431
  6027  0581  2D83               	addwf	(___flmul@grs+1),f
  6028  0582  07CB               u3431:
  6029  0583                     	movf	2+(??___flmul+0)+0,w
  6030  0583  0846               	clrz
  6031  0584  1103               	skipnc
  6032  0585  1803               	addlw	1
  6033  0586  3E01               	skipnz
  6034  0587  1903               	goto	u3432
  6035  0588  2D8A               	addwf	(___flmul@grs+2),f
  6036  0589  07CC               u3432:
  6037  058A                     	movf	3+(??___flmul+0)+0,w
  6038  058A  0847               	clrz
  6039  058B  1103               	skipnc
  6040  058C  1803               	addlw	1
  6041  058D  3E01               	skipnz
  6042  058E  1903               	goto	u3433
  6043  058F  2D91               	addwf	(___flmul@grs+3),f
  6044  0590  07CD               u3433:
  6045  0591                     
  6046                           	line	127
  6047                           	
  6048                           l2590:	
  6049  0591                     	movf	0+(___flmul@temp)+01h,w
  6050  0591  0855               	movwf	(??___flmul+0)+0
  6051  0592  00C4               	clrf	(??___flmul+0)+0+1
  6052  0593  01C5               	clrf	(??___flmul+0)+0+2
  6053  0594  01C6               	clrf	(??___flmul+0)+0+3
  6054  0595  01C7               	movf	0+(??___flmul+0)+0,w
  6055  0596  0844               	addwf	(___flmul@prod),f
  6056  0597  07D0               	movf	1+(??___flmul+0)+0,w
  6057  0598  0845               	clrz
  6058  0599  1103               	skipnc
  6059  059A  1803               	addlw	1
  6060  059B  3E01               	skipnz
  6061  059C  1903               	goto	u3441
  6062  059D  2D9F               	addwf	(___flmul@prod+1),f
  6063  059E  07D1               u3441:
  6064  059F                     	movf	2+(??___flmul+0)+0,w
  6065  059F  0846               	clrz
  6066  05A0  1103               	skipnc
  6067  05A1  1803               	addlw	1
  6068  05A2  3E01               	skipnz
  6069  05A3  1903               	goto	u3442
  6070  05A4  2DA6               	addwf	(___flmul@prod+2),f
  6071  05A5  07D2               u3442:
  6072  05A6                     	movf	3+(??___flmul+0)+0,w
  6073  05A6  0847               	clrz
  6074  05A7  1103               	skipnc
  6075  05A8  1803               	addlw	1
  6076  05A9  3E01               	skipnz
  6077  05AA  1903               	goto	u3443
  6078  05AB  2DAD               	addwf	(___flmul@prod+3),f
  6079  05AC  07D3               u3443:
  6080  05AD                     
  6081                           	line	128
  6082                           	
  6083                           l2592:	
  6084  05AD                     	movlw	08h
  6085  05AD  3008               	movwf	(??___flmul+0)+0
  6086  05AE  00C4               u3455:
  6087  05AF                     	clrc
  6088  05AF  1003               	rlf	(___flmul@grs),f
  6089  05B0  0DCA               	rlf	(___flmul@grs+1),f
  6090  05B1  0DCB               	rlf	(___flmul@grs+2),f
  6091  05B2  0DCC               	rlf	(___flmul@grs+3),f
  6092  05B3  0DCD               	decfsz	(??___flmul+0)+0
  6093  05B4  0BC4               	goto	u3455
  6094  05B5  2DAF               	line	129
  6095                           	
  6096                           l2594:	
  6097  05B6                     	movf	0+(___flmul@b)+01h,w
  6098  05B6  083D               	movwf	(??___flmul+0)+0
  6099  05B7  00C4               	movf	(??___flmul+0)+0,w
  6100  05B8  0844               	movwf	(__Umul8_16@multiplicand)
  6101  05B9  00F0               	movf	(___flmul@a),w
  6102  05BA  0840               	fcall	__Umul8_16
  6103  05BB  160A  118A  2735  120A  118A  	movf	(1+(?__Umul8_16)),w
  6104  05C0  0871               	bcf	status, 5	;RP0=0, select bank0
  6105  05C1  1283               	bcf	status, 6	;RP1=0, select bank0
  6106  05C2  1303               	movwf	(___flmul@temp+1)
  6107  05C3  00D5               	movf	(0+(?__Umul8_16)),w
  6108  05C4  0870               	movwf	(___flmul@temp)
  6109  05C5  00D4               	line	130
  6110                           	
  6111                           l2596:	
  6112  05C6                     	movf	(___flmul@temp),w
  6113  05C6  0854               	movwf	((??___flmul+0)+0)
  6114  05C7  00C4               	movf	(___flmul@temp+1),w
  6115  05C8  0855               	movwf	((??___flmul+0)+0+1)
  6116  05C9  00C5               	clrf	((??___flmul+0)+0+2)
  6117  05CA  01C6               	clrf	((??___flmul+0)+0+3)
  6118  05CB  01C7               	movf	0+(??___flmul+0)+0,w
  6119  05CC  0844               	addwf	(___flmul@grs),f
  6120  05CD  07CA               	movf	1+(??___flmul+0)+0,w
  6121  05CE  0845               	clrz
  6122  05CF  1103               	skipnc
  6123  05D0  1803               	addlw	1
  6124  05D1  3E01               	skipnz
  6125  05D2  1903               	goto	u3461
  6126  05D3  2DD5               	addwf	(___flmul@grs+1),f
  6127  05D4  07CB               u3461:
  6128  05D5                     	movf	2+(??___flmul+0)+0,w
  6129  05D5  0846               	clrz
  6130  05D6  1103               	skipnc
  6131  05D7  1803               	addlw	1
  6132  05D8  3E01               	skipnz
  6133  05D9  1903               	goto	u3462
  6134  05DA  2DDC               	addwf	(___flmul@grs+2),f
  6135  05DB  07CC               u3462:
  6136  05DC                     	movf	3+(??___flmul+0)+0,w
  6137  05DC  0847               	clrz
  6138  05DD  1103               	skipnc
  6139  05DE  1803               	addlw	1
  6140  05DF  3E01               	skipnz
  6141  05E0  1903               	goto	u3463
  6142  05E1  2DE3               	addwf	(___flmul@grs+3),f
  6143  05E2  07CD               u3463:
  6144  05E3                     
  6145                           	line	131
  6146                           	
  6147                           l2598:	
  6148  05E3                     	movf	(___flmul@b),w
  6149  05E3  083C               	movwf	(??___flmul+0)+0
  6150  05E4  00C4               	movf	(??___flmul+0)+0,w
  6151  05E5  0844               	movwf	(__Umul8_16@multiplicand)
  6152  05E6  00F0               	movf	0+(___flmul@a)+01h,w
  6153  05E7  0841               	fcall	__Umul8_16
  6154  05E8  160A  118A  2735  120A  118A  	movf	(1+(?__Umul8_16)),w
  6155  05ED  0871               	bcf	status, 5	;RP0=0, select bank0
  6156  05EE  1283               	bcf	status, 6	;RP1=0, select bank0
  6157  05EF  1303               	movwf	(___flmul@temp+1)
  6158  05F0  00D5               	movf	(0+(?__Umul8_16)),w
  6159  05F1  0870               	movwf	(___flmul@temp)
  6160  05F2  00D4               	line	132
  6161                           	
  6162                           l2600:	
  6163  05F3                     	movf	(___flmul@temp),w
  6164  05F3  0854               	movwf	((??___flmul+0)+0)
  6165  05F4  00C4               	movf	(___flmul@temp+1),w
  6166  05F5  0855               	movwf	((??___flmul+0)+0+1)
  6167  05F6  00C5               	clrf	((??___flmul+0)+0+2)
  6168  05F7  01C6               	clrf	((??___flmul+0)+0+3)
  6169  05F8  01C7               	movf	0+(??___flmul+0)+0,w
  6170  05F9  0844               	addwf	(___flmul@grs),f
  6171  05FA  07CA               	movf	1+(??___flmul+0)+0,w
  6172  05FB  0845               	clrz
  6173  05FC  1103               	skipnc
  6174  05FD  1803               	addlw	1
  6175  05FE  3E01               	skipnz
  6176  05FF  1903               	goto	u3471
  6177  0600  2E02               	addwf	(___flmul@grs+1),f
  6178  0601  07CB               u3471:
  6179  0602                     	movf	2+(??___flmul+0)+0,w
  6180  0602  0846               	clrz
  6181  0603  1103               	skipnc
  6182  0604  1803               	addlw	1
  6183  0605  3E01               	skipnz
  6184  0606  1903               	goto	u3472
  6185  0607  2E09               	addwf	(___flmul@grs+2),f
  6186  0608  07CC               u3472:
  6187  0609                     	movf	3+(??___flmul+0)+0,w
  6188  0609  0847               	clrz
  6189  060A  1103               	skipnc
  6190  060B  1803               	addlw	1
  6191  060C  3E01               	skipnz
  6192  060D  1903               	goto	u3473
  6193  060E  2E10               	addwf	(___flmul@grs+3),f
  6194  060F  07CD               u3473:
  6195  0610                     
  6196                           	line	133
  6197                           	
  6198                           l2602:	
  6199  0610                     	movlw	08h
  6200  0610  3008               	movwf	(??___flmul+0)+0
  6201  0611  00C4               u3485:
  6202  0612                     	clrc
  6203  0612  1003               	rlf	(___flmul@grs),f
  6204  0613  0DCA               	rlf	(___flmul@grs+1),f
  6205  0614  0DCB               	rlf	(___flmul@grs+2),f
  6206  0615  0DCC               	rlf	(___flmul@grs+3),f
  6207  0616  0DCD               	decfsz	(??___flmul+0)+0
  6208  0617  0BC4               	goto	u3485
  6209  0618  2E12               	line	134
  6210                           	movf	(___flmul@b),w
  6211  0619  083C               	movwf	(??___flmul+0)+0
  6212  061A  00C4               	movf	(??___flmul+0)+0,w
  6213  061B  0844               	movwf	(__Umul8_16@multiplicand)
  6214  061C  00F0               	movf	(___flmul@a),w
  6215  061D  0840               	fcall	__Umul8_16
  6216  061E  160A  118A  2735  120A  118A  	movf	(1+(?__Umul8_16)),w
  6217  0623  0871               	bcf	status, 5	;RP0=0, select bank0
  6218  0624  1283               	bcf	status, 6	;RP1=0, select bank0
  6219  0625  1303               	movwf	(___flmul@temp+1)
  6220  0626  00D5               	movf	(0+(?__Umul8_16)),w
  6221  0627  0870               	movwf	(___flmul@temp)
  6222  0628  00D4               	line	135
  6223                           	
  6224                           l2604:	
  6225  0629                     	movf	(___flmul@temp),w
  6226  0629  0854               	movwf	((??___flmul+0)+0)
  6227  062A  00C4               	movf	(___flmul@temp+1),w
  6228  062B  0855               	movwf	((??___flmul+0)+0+1)
  6229  062C  00C5               	clrf	((??___flmul+0)+0+2)
  6230  062D  01C6               	clrf	((??___flmul+0)+0+3)
  6231  062E  01C7               	movf	0+(??___flmul+0)+0,w
  6232  062F  0844               	addwf	(___flmul@grs),f
  6233  0630  07CA               	movf	1+(??___flmul+0)+0,w
  6234  0631  0845               	clrz
  6235  0632  1103               	skipnc
  6236  0633  1803               	addlw	1
  6237  0634  3E01               	skipnz
  6238  0635  1903               	goto	u3491
  6239  0636  2E38               	addwf	(___flmul@grs+1),f
  6240  0637  07CB               u3491:
  6241  0638                     	movf	2+(??___flmul+0)+0,w
  6242  0638  0846               	clrz
  6243  0639  1103               	skipnc
  6244  063A  1803               	addlw	1
  6245  063B  3E01               	skipnz
  6246  063C  1903               	goto	u3492
  6247  063D  2E3F               	addwf	(___flmul@grs+2),f
  6248  063E  07CC               u3492:
  6249  063F                     	movf	3+(??___flmul+0)+0,w
  6250  063F  0847               	clrz
  6251  0640  1103               	skipnc
  6252  0641  1803               	addlw	1
  6253  0642  3E01               	skipnz
  6254  0643  1903               	goto	u3493
  6255  0644  2E46               	addwf	(___flmul@grs+3),f
  6256  0645  07CD               u3493:
  6257  0646                     
  6258                           	line	136
  6259                           	
  6260                           l2606:	
  6261  0646                     	movf	0+(___flmul@b)+01h,w
  6262  0646  083D               	movwf	(??___flmul+0)+0
  6263  0647  00C4               	movf	(??___flmul+0)+0,w
  6264  0648  0844               	movwf	(__Umul8_16@multiplicand)
  6265  0649  00F0               	movf	0+(___flmul@a)+02h,w
  6266  064A  0842               	fcall	__Umul8_16
  6267  064B  160A  118A  2735  120A  118A  	movf	(1+(?__Umul8_16)),w
  6268  0650  0871               	bcf	status, 5	;RP0=0, select bank0
  6269  0651  1283               	bcf	status, 6	;RP1=0, select bank0
  6270  0652  1303               	movwf	(___flmul@temp+1)
  6271  0653  00D5               	movf	(0+(?__Umul8_16)),w
  6272  0654  0870               	movwf	(___flmul@temp)
  6273  0655  00D4               	line	137
  6274                           	movf	(___flmul@temp),w
  6275  0656  0854               	movwf	((??___flmul+0)+0)
  6276  0657  00C4               	movf	(___flmul@temp+1),w
  6277  0658  0855               	movwf	((??___flmul+0)+0+1)
  6278  0659  00C5               	clrf	((??___flmul+0)+0+2)
  6279  065A  01C6               	clrf	((??___flmul+0)+0+3)
  6280  065B  01C7               	movf	0+(??___flmul+0)+0,w
  6281  065C  0844               	addwf	(___flmul@prod),f
  6282  065D  07D0               	movf	1+(??___flmul+0)+0,w
  6283  065E  0845               	clrz
  6284  065F  1103               	skipnc
  6285  0660  1803               	addlw	1
  6286  0661  3E01               	skipnz
  6287  0662  1903               	goto	u3501
  6288  0663  2E65               	addwf	(___flmul@prod+1),f
  6289  0664  07D1               u3501:
  6290  0665                     	movf	2+(??___flmul+0)+0,w
  6291  0665  0846               	clrz
  6292  0666  1103               	skipnc
  6293  0667  1803               	addlw	1
  6294  0668  3E01               	skipnz
  6295  0669  1903               	goto	u3502
  6296  066A  2E6C               	addwf	(___flmul@prod+2),f
  6297  066B  07D2               u3502:
  6298  066C                     	movf	3+(??___flmul+0)+0,w
  6299  066C  0847               	clrz
  6300  066D  1103               	skipnc
  6301  066E  1803               	addlw	1
  6302  066F  3E01               	skipnz
  6303  0670  1903               	goto	u3503
  6304  0671  2E73               	addwf	(___flmul@prod+3),f
  6305  0672  07D3               u3503:
  6306  0673                     
  6307                           	line	138
  6308                           	
  6309                           l2608:	
  6310  0673                     	movf	0+(___flmul@b)+02h,w
  6311  0673  083E               	movwf	(??___flmul+0)+0
  6312  0674  00C4               	movf	(??___flmul+0)+0,w
  6313  0675  0844               	movwf	(__Umul8_16@multiplicand)
  6314  0676  00F0               	movf	0+(___flmul@a)+01h,w
  6315  0677  0841               	fcall	__Umul8_16
  6316  0678  160A  118A  2735  120A  118A  	movf	(1+(?__Umul8_16)),w
  6317  067D  0871               	bcf	status, 5	;RP0=0, select bank0
  6318  067E  1283               	bcf	status, 6	;RP1=0, select bank0
  6319  067F  1303               	movwf	(___flmul@temp+1)
  6320  0680  00D5               	movf	(0+(?__Umul8_16)),w
  6321  0681  0870               	movwf	(___flmul@temp)
  6322  0682  00D4               	line	139
  6323                           	
  6324                           l2610:	
  6325  0683                     	movf	(___flmul@temp),w
  6326  0683  0854               	movwf	((??___flmul+0)+0)
  6327  0684  00C4               	movf	(___flmul@temp+1),w
  6328  0685  0855               	movwf	((??___flmul+0)+0+1)
  6329  0686  00C5               	clrf	((??___flmul+0)+0+2)
  6330  0687  01C6               	clrf	((??___flmul+0)+0+3)
  6331  0688  01C7               	movf	0+(??___flmul+0)+0,w
  6332  0689  0844               	addwf	(___flmul@prod),f
  6333  068A  07D0               	movf	1+(??___flmul+0)+0,w
  6334  068B  0845               	clrz
  6335  068C  1103               	skipnc
  6336  068D  1803               	addlw	1
  6337  068E  3E01               	skipnz
  6338  068F  1903               	goto	u3511
  6339  0690  2E92               	addwf	(___flmul@prod+1),f
  6340  0691  07D1               u3511:
  6341  0692                     	movf	2+(??___flmul+0)+0,w
  6342  0692  0846               	clrz
  6343  0693  1103               	skipnc
  6344  0694  1803               	addlw	1
  6345  0695  3E01               	skipnz
  6346  0696  1903               	goto	u3512
  6347  0697  2E99               	addwf	(___flmul@prod+2),f
  6348  0698  07D2               u3512:
  6349  0699                     	movf	3+(??___flmul+0)+0,w
  6350  0699  0847               	clrz
  6351  069A  1103               	skipnc
  6352  069B  1803               	addlw	1
  6353  069C  3E01               	skipnz
  6354  069D  1903               	goto	u3513
  6355  069E  2EA0               	addwf	(___flmul@prod+3),f
  6356  069F  07D3               u3513:
  6357  06A0                     
  6358                           	line	140
  6359                           	movf	0+(___flmul@b)+02h,w
  6360  06A0  083E               	movwf	(??___flmul+0)+0
  6361  06A1  00C4               	movf	(??___flmul+0)+0,w
  6362  06A2  0844               	movwf	(__Umul8_16@multiplicand)
  6363  06A3  00F0               	movf	0+(___flmul@a)+02h,w
  6364  06A4  0842               	fcall	__Umul8_16
  6365  06A5  160A  118A  2735  120A  118A  	movf	(1+(?__Umul8_16)),w
  6366  06AA  0871               	bcf	status, 5	;RP0=0, select bank0
  6367  06AB  1283               	bcf	status, 6	;RP1=0, select bank0
  6368  06AC  1303               	movwf	(___flmul@temp+1)
  6369  06AD  00D5               	movf	(0+(?__Umul8_16)),w
  6370  06AE  0870               	movwf	(___flmul@temp)
  6371  06AF  00D4               	line	141
  6372                           	
  6373                           l2612:	
  6374  06B0                     	movf	(___flmul@temp),w
  6375  06B0  0854               	movwf	((??___flmul+0)+0)
  6376  06B1  00C4               	movf	(___flmul@temp+1),w
  6377  06B2  0855               	movwf	((??___flmul+0)+0+1)
  6378  06B3  00C5               	clrf	((??___flmul+0)+0+2)
  6379  06B4  01C6               	clrf	((??___flmul+0)+0+3)
  6380  06B5  01C7               	movlw	08h
  6381  06B6  3008               u3525:
  6382  06B7                     	clrc
  6383  06B7  1003               	rlf	(??___flmul+0)+0,f
  6384  06B8  0DC4               	rlf	(??___flmul+0)+1,f
  6385  06B9  0DC5               	rlf	(??___flmul+0)+2,f
  6386  06BA  0DC6               	rlf	(??___flmul+0)+3,f
  6387  06BB  0DC7               u3520:
  6388  06BC                     	addlw	-1
  6389  06BC  3EFF               	skipz
  6390  06BD  1D03               	goto	u3525
  6391  06BE  2EB7               	movf	0+(??___flmul+0)+0,w
  6392  06BF  0844               	addwf	(___flmul@prod),f
  6393  06C0  07D0               	movf	1+(??___flmul+0)+0,w
  6394  06C1  0845               	clrz
  6395  06C2  1103               	skipnc
  6396  06C3  1803               	addlw	1
  6397  06C4  3E01               	skipnz
  6398  06C5  1903               	goto	u3531
  6399  06C6  2EC8               	addwf	(___flmul@prod+1),f
  6400  06C7  07D1               u3531:
  6401  06C8                     	movf	2+(??___flmul+0)+0,w
  6402  06C8  0846               	clrz
  6403  06C9  1103               	skipnc
  6404  06CA  1803               	addlw	1
  6405  06CB  3E01               	skipnz
  6406  06CC  1903               	goto	u3532
  6407  06CD  2ECF               	addwf	(___flmul@prod+2),f
  6408  06CE  07D2               u3532:
  6409  06CF                     	movf	3+(??___flmul+0)+0,w
  6410  06CF  0847               	clrz
  6411  06D0  1103               	skipnc
  6412  06D1  1803               	addlw	1
  6413  06D2  3E01               	skipnz
  6414  06D3  1903               	goto	u3533
  6415  06D4  2ED6               	addwf	(___flmul@prod+3),f
  6416  06D5  07D3               u3533:
  6417  06D6                     
  6418                           	line	145
  6419                           	
  6420                           l2614:	
  6421  06D6                     	movf	(___flmul@grs),w
  6422  06D6  084A               	movwf	(??___flmul+0)+0
  6423  06D7  00C4               	movf	(___flmul@grs+1),w
  6424  06D8  084B               	movwf	((??___flmul+0)+0+1)
  6425  06D9  00C5               	movf	(___flmul@grs+2),w
  6426  06DA  084C               	movwf	((??___flmul+0)+0+2)
  6427  06DB  00C6               	movf	(___flmul@grs+3),w
  6428  06DC  084D               	movwf	((??___flmul+0)+0+3)
  6429  06DD  00C7               	movlw	018h
  6430  06DE  3018               u3545:
  6431  06DF                     	clrc
  6432  06DF  1003               	rrf	(??___flmul+0)+3,f
  6433  06E0  0CC7               	rrf	(??___flmul+0)+2,f
  6434  06E1  0CC6               	rrf	(??___flmul+0)+1,f
  6435  06E2  0CC5               	rrf	(??___flmul+0)+0,f
  6436  06E3  0CC4               u3540:
  6437  06E4                     	addlw	-1
  6438  06E4  3EFF               	skipz
  6439  06E5  1D03               	goto	u3545
  6440  06E6  2EDF               	movf	0+(??___flmul+0)+0,w
  6441  06E7  0844               	addwf	(___flmul@prod),f
  6442  06E8  07D0               	movf	1+(??___flmul+0)+0,w
  6443  06E9  0845               	clrz
  6444  06EA  1103               	skipnc
  6445  06EB  1803               	addlw	1
  6446  06EC  3E01               	skipnz
  6447  06ED  1903               	goto	u3551
  6448  06EE  2EF0               	addwf	(___flmul@prod+1),f
  6449  06EF  07D1               u3551:
  6450  06F0                     	movf	2+(??___flmul+0)+0,w
  6451  06F0  0846               	clrz
  6452  06F1  1103               	skipnc
  6453  06F2  1803               	addlw	1
  6454  06F3  3E01               	skipnz
  6455  06F4  1903               	goto	u3552
  6456  06F5  2EF7               	addwf	(___flmul@prod+2),f
  6457  06F6  07D2               u3552:
  6458  06F7                     	movf	3+(??___flmul+0)+0,w
  6459  06F7  0847               	clrz
  6460  06F8  1103               	skipnc
  6461  06F9  1803               	addlw	1
  6462  06FA  3E01               	skipnz
  6463  06FB  1903               	goto	u3553
  6464  06FC  2EFE               	addwf	(___flmul@prod+3),f
  6465  06FD  07D3               u3553:
  6466  06FE                     
  6467                           	line	146
  6468                           	
  6469                           l2616:	
  6470  06FE                     	movlw	08h
  6471  06FE  3008               	movwf	(??___flmul+0)+0
  6472  06FF  00C4               u3565:
  6473  0700                     	clrc
  6474  0700  1003               	rlf	(___flmul@grs),f
  6475  0701  0DCA               	rlf	(___flmul@grs+1),f
  6476  0702  0DCB               	rlf	(___flmul@grs+2),f
  6477  0703  0DCC               	rlf	(___flmul@grs+3),f
  6478  0704  0DCD               	decfsz	(??___flmul+0)+0
  6479  0705  0BC4               	goto	u3565
  6480  0706  2F00               	line	149
  6481                           	
  6482                           l2618:	
  6483  0707                     	movf	(___flmul@bexp),w
  6484  0707  084F               	addwf	(___flmul@aexp),w
  6485  0708  074E               	movwf	(??___flmul+0)+0
  6486  0709  00C4               	clrf	(??___flmul+0)+0+1
  6487  070A  01C5               	rlf	1+(??___flmul+0)+0,f
  6488  070B  0DC5               	
  6489                           	movf	0+(??___flmul+0)+0,w
  6490  070C  0844               	addlw	low(-126)
  6491  070D  3E82               	movwf	(___flmul@temp)
  6492  070E  00D4               	movf	1+(??___flmul+0)+0,w
  6493  070F  0845               	skipnc
  6494  0710  1803               	addlw	1
  6495  0711  3E01               	addlw	high(-126)
  6496  0712  3EFF               	movwf	1+(___flmul@temp)
  6497  0713  00D5               	line	152
  6498                           	goto	l2630
  6499  0714  2F34               	
  6500                           l718:	
  6501  0715                     	line	153
  6502                           	
  6503                           l2620:	
  6504  0715                     	movlw	01h
  6505  0715  3001               	movwf	(??___flmul+0)+0
  6506  0716  00C4               u3575:
  6507  0717                     	clrc
  6508  0717  1003               	rlf	(___flmul@prod),f
  6509  0718  0DD0               	rlf	(___flmul@prod+1),f
  6510  0719  0DD1               	rlf	(___flmul@prod+2),f
  6511  071A  0DD2               	rlf	(___flmul@prod+3),f
  6512  071B  0DD3               	decfsz	(??___flmul+0)+0
  6513  071C  0BC4               	goto	u3575
  6514  071D  2F17               	line	154
  6515                           	
  6516                           l2622:	
  6517  071E                     	btfss	(___flmul@grs+3),(31)&7
  6518  071E  1FCD               	goto	u3581
  6519  071F  2F21               	goto	u3580
  6520  0720  2F22               u3581:
  6521  0721                     	goto	l2626
  6522  0721  2F24               u3580:
  6523  0722                     	line	155
  6524                           	
  6525                           l2624:	
  6526  0722                     	bsf	(___flmul@prod)+(0/8),(0)&7
  6527  0722  1450               	goto	l2626
  6528  0723  2F24               	line	156
  6529                           	
  6530                           l719:	
  6531  0724                     	line	157
  6532                           	
  6533                           l2626:	
  6534  0724                     	movlw	01h
  6535  0724  3001               	movwf	(??___flmul+0)+0
  6536  0725  00C4               u3595:
  6537  0726                     	clrc
  6538  0726  1003               	rlf	(___flmul@grs),f
  6539  0727  0DCA               	rlf	(___flmul@grs+1),f
  6540  0728  0DCB               	rlf	(___flmul@grs+2),f
  6541  0729  0DCC               	rlf	(___flmul@grs+3),f
  6542  072A  0DCD               	decfsz	(??___flmul+0)+0
  6543  072B  0BC4               	goto	u3595
  6544  072C  2F26               	line	158
  6545                           	
  6546                           l2628:	
  6547  072D                     	movlw	0FFh
  6548  072D  30FF               	addwf	(___flmul@temp),f
  6549  072E  07D4               	skipnc
  6550  072F  1803               	incf	(___flmul@temp+1),f
  6551  0730  0AD5               	movlw	0FFh
  6552  0731  30FF               	addwf	(___flmul@temp+1),f
  6553  0732  07D5               	goto	l2630
  6554  0733  2F34               	line	159
  6555                           	
  6556                           l717:	
  6557  0734                     	line	152
  6558                           	
  6559                           l2630:	
  6560  0734                     	btfss	(___flmul@prod+2),(23)&7
  6561  0734  1FD2               	goto	u3601
  6562  0735  2F37               	goto	u3600
  6563  0736  2F38               u3601:
  6564  0737                     	goto	l2620
  6565  0737  2F15               u3600:
  6566  0738                     	goto	l2632
  6567  0738  2F39               	
  6568                           l720:	
  6569  0739                     	line	163
  6570                           	
  6571                           l2632:	
  6572  0739                     	clrf	(___flmul@aexp)
  6573  0739  01CE               	line	164
  6574                           	
  6575                           l2634:	
  6576  073A                     	btfss	(___flmul@grs+3),(31)&7
  6577  073A  1FCD               	goto	u3611
  6578  073B  2F3D               	goto	u3610
  6579  073C  2F3E               u3611:
  6580  073D                     	goto	l2642
  6581  073D  2F5E               u3610:
  6582  073E                     	line	165
  6583                           	
  6584                           l2636:	
  6585  073E                     	movlw	0FFh
  6586  073E  30FF               	andwf	(___flmul@grs),w
  6587  073F  054A               	movwf	(??___flmul+0)+0
  6588  0740  00C4               	movlw	0FFh
  6589  0741  30FF               	andwf	(___flmul@grs+1),w
  6590  0742  054B               	movwf	((??___flmul+0)+0+1)
  6591  0743  00C5               	movlw	0FFh
  6592  0744  30FF               	andwf	(___flmul@grs+2),w
  6593  0745  054C               	movwf	((??___flmul+0)+0+2)
  6594  0746  00C6               	movlw	07Fh
  6595  0747  307F               	andwf	(___flmul@grs+3),w
  6596  0748  054D               	movwf	((??___flmul+0)+0+3)
  6597  0749  00C7               	movf	3+(??___flmul+0)+0,w
  6598  074A  0847               	iorwf	2+(??___flmul+0)+0,w
  6599  074B  0446               	iorwf	1+(??___flmul+0)+0,w
  6600  074C  0445               	iorwf	0+(??___flmul+0)+0,w
  6601  074D  0444               	skipnz
  6602  074E  1903               	goto	u3621
  6603  074F  2F51               	goto	u3620
  6604  0750  2F52               u3621:
  6605  0751                     	goto	l722
  6606  0751  2F55               u3620:
  6607  0752                     	line	166
  6608                           	
  6609                           l2638:	
  6610  0752                     	clrf	(___flmul@aexp)
  6611  0752  01CE               	incf	(___flmul@aexp),f
  6612  0753  0ACE               	line	167
  6613                           	goto	l2642
  6614  0754  2F5E               	line	168
  6615                           	
  6616                           l722:	
  6617  0755                     	line	169
  6618                           	btfss	(___flmul@prod),(0)&7
  6619  0755  1C50               	goto	u3631
  6620  0756  2F58               	goto	u3630
  6621  0757  2F59               u3631:
  6622  0758                     	goto	l2642
  6623  0758  2F5E               u3630:
  6624  0759                     	line	170
  6625                           	
  6626                           l2640:	
  6627  0759                     	clrf	(___flmul@aexp)
  6628  0759  01CE               	incf	(___flmul@aexp),f
  6629  075A  0ACE               	goto	l2642
  6630  075B  2F5E               	line	171
  6631                           	
  6632                           l724:	
  6633  075C                     	goto	l2642
  6634  075C  2F5E               	line	172
  6635                           	
  6636                           l723:	
  6637  075D                     	goto	l2642
  6638  075D  2F5E               	line	173
  6639                           	
  6640                           l721:	
  6641  075E                     	line	174
  6642                           	
  6643                           l2642:	
  6644  075E                     	movf	((___flmul@aexp)),w
  6645  075E  084E               	btfsc	status,2
  6646  075F  1903               	goto	u3641
  6647  0760  2F62               	goto	u3640
  6648  0761  2F63               u3641:
  6649  0762                     	goto	l2652
  6650  0762  2F96               u3640:
  6651  0763                     	line	175
  6652                           	
  6653                           l2644:	
  6654  0763                     	movlw	01h
  6655  0763  3001               	addwf	(___flmul@prod),f
  6656  0764  07D0               	movlw	0
  6657  0765  3000               	skipnc
  6658  0766  1803               movlw 1
  6659  0767  3001               	addwf	(___flmul@prod+1),f
  6660  0768  07D1               	movlw	0
  6661  0769  3000               	skipnc
  6662  076A  1803               movlw 1
  6663  076B  3001               	addwf	(___flmul@prod+2),f
  6664  076C  07D2               	movlw	0
  6665  076D  3000               	skipnc
  6666  076E  1803               movlw 1
  6667  076F  3001               	addwf	(___flmul@prod+3),f
  6668  0770  07D3               	line	176
  6669                           	
  6670                           l2646:	
  6671  0771                     	btfss	(___flmul@prod+3),(24)&7
  6672  0771  1C53               	goto	u3651
  6673  0772  2F74               	goto	u3650
  6674  0773  2F75               u3651:
  6675  0774                     	goto	l2652
  6676  0774  2F96               u3650:
  6677  0775                     	line	177
  6678                           	
  6679                           l2648:	
  6680  0775                     	movf	(___flmul@prod),w
  6681  0775  0850               	movwf	(??___flmul+0)+0
  6682  0776  00C4               	movf	(___flmul@prod+1),w
  6683  0777  0851               	movwf	((??___flmul+0)+0+1)
  6684  0778  00C5               	movf	(___flmul@prod+2),w
  6685  0779  0852               	movwf	((??___flmul+0)+0+2)
  6686  077A  00C6               	movf	(___flmul@prod+3),w
  6687  077B  0853               	movwf	((??___flmul+0)+0+3)
  6688  077C  00C7               	movlw	01h
  6689  077D  3001               	movwf	(??___flmul+4)+0
  6690  077E  00C8               u3665:
  6691  077F                     	rlf	(??___flmul+0)+3,w
  6692  077F  0D47               	rrf	(??___flmul+0)+3,f
  6693  0780  0CC7               	rrf	(??___flmul+0)+2,f
  6694  0781  0CC6               	rrf	(??___flmul+0)+1,f
  6695  0782  0CC5               	rrf	(??___flmul+0)+0,f
  6696  0783  0CC4               u3660:
  6697  0784                     	decfsz	(??___flmul+4)+0,f
  6698  0784  0BC8               	goto	u3665
  6699  0785  2F7F               	movf	3+(??___flmul+0)+0,w
  6700  0786  0847               	movwf	(___flmul@prod+3)
  6701  0787  00D3               	movf	2+(??___flmul+0)+0,w
  6702  0788  0846               	movwf	(___flmul@prod+2)
  6703  0789  00D2               	movf	1+(??___flmul+0)+0,w
  6704  078A  0845               	movwf	(___flmul@prod+1)
  6705  078B  00D1               	movf	0+(??___flmul+0)+0,w
  6706  078C  0844               	movwf	(___flmul@prod)
  6707  078D  00D0               
  6708                           	line	178
  6709                           	
  6710                           l2650:	
  6711  078E                     	movlw	01h
  6712  078E  3001               	addwf	(___flmul@temp),f
  6713  078F  07D4               	skipnc
  6714  0790  1803               	incf	(___flmul@temp+1),f
  6715  0791  0AD5               	movlw	0
  6716  0792  3000               	addwf	(___flmul@temp+1),f
  6717  0793  07D5               	goto	l2652
  6718  0794  2F96               	line	179
  6719                           	
  6720                           l726:	
  6721  0795                     	goto	l2652
  6722  0795  2F96               	line	180
  6723                           	
  6724                           l725:	
  6725  0796                     	line	183
  6726                           	
  6727                           l2652:	
  6728  0796                     	movf	(___flmul@temp+1),w
  6729  0796  0855               	xorlw	80h
  6730  0797  3A80               	movwf	btemp+1
  6731  0798  00FF               	movlw	(0)^80h
  6732  0799  3080               	subwf	btemp+1,w
  6733  079A  027F               	skipz
  6734  079B  1D03               	goto	u3675
  6735  079C  2F9F               	movlw	0FFh
  6736  079D  30FF               	subwf	(___flmul@temp),w
  6737  079E  0254               u3675:
  6738  079F                     
  6739                           	skipc
  6740  079F  1C03               	goto	u3671
  6741  07A0  2FA2               	goto	u3670
  6742  07A1  2FA3               u3671:
  6743  07A2                     	goto	l2656
  6744  07A2  2FAE               u3670:
  6745  07A3                     	line	184
  6746                           	
  6747                           l2654:	
  6748  07A3                     	movlw	07Fh
  6749  07A3  307F               	bcf	status, 5	;RP0=0, select bank0
  6750  07A4  1283               	bcf	status, 6	;RP1=0, select bank0
  6751  07A5  1303               	movwf	(___flmul@prod+3)
  6752  07A6  00D3               	movlw	080h
  6753  07A7  3080               	movwf	(___flmul@prod+2)
  6754  07A8  00D2               	movlw	0
  6755  07A9  3000               	movwf	(___flmul@prod+1)
  6756  07AA  00D1               	movlw	0
  6757  07AB  3000               	movwf	(___flmul@prod)
  6758  07AC  00D0               
  6759                           	line	185
  6760                           	goto	l728
  6761  07AD  2FE5               	line	187
  6762                           	
  6763                           l727:	
  6764  07AE                     	
  6765                           l2656:	
  6766  07AE                     	bcf	status, 5	;RP0=0, select bank0
  6767  07AE  1283               	bcf	status, 6	;RP1=0, select bank0
  6768  07AF  1303               	movf	(___flmul@temp+1),w
  6769  07B0  0855               	xorlw	80h
  6770  07B1  3A80               	movwf	btemp+1
  6771  07B2  00FF               	movlw	(0)^80h
  6772  07B3  3080               	subwf	btemp+1,w
  6773  07B4  027F               	skipz
  6774  07B5  1D03               	goto	u3685
  6775  07B6  2FB9               	movlw	01h
  6776  07B7  3001               	subwf	(___flmul@temp),w
  6777  07B8  0254               u3685:
  6778  07B9                     
  6779                           	skipnc
  6780  07B9  1803               	goto	u3681
  6781  07BA  2FBC               	goto	u3680
  6782  07BB  2FBD               u3681:
  6783  07BC                     	goto	l2662
  6784  07BC  2FC9               u3680:
  6785  07BD                     	line	188
  6786                           	
  6787                           l2658:	
  6788  07BD                     	movlw	high highword(0)
  6789  07BD  3000               	bcf	status, 5	;RP0=0, select bank0
  6790  07BE  1283               	bcf	status, 6	;RP1=0, select bank0
  6791  07BF  1303               	movwf	(___flmul@prod+3)
  6792  07C0  00D3               	movlw	low highword(0)
  6793  07C1  3000               	movwf	(___flmul@prod+2)
  6794  07C2  00D2               	movlw	high(0)
  6795  07C3  3000               	movwf	(___flmul@prod+1)
  6796  07C4  00D1               	movlw	low(0)
  6797  07C5  3000               	movwf	(___flmul@prod)
  6798  07C6  00D0               
  6799                           	line	190
  6800                           	
  6801                           l2660:	
  6802  07C7                     	clrf	(___flmul@sign)
  6803  07C7  01C9               	line	191
  6804                           	goto	l728
  6805  07C8  2FE5               	line	192
  6806                           	
  6807                           l729:	
  6808  07C9                     	line	194
  6809                           	
  6810                           l2662:	
  6811  07C9                     	bcf	status, 5	;RP0=0, select bank0
  6812  07C9  1283               	bcf	status, 6	;RP1=0, select bank0
  6813  07CA  1303               	movf	(___flmul@temp),w
  6814  07CB  0854               	movwf	(??___flmul+0)+0
  6815  07CC  00C4               	movf	(??___flmul+0)+0,w
  6816  07CD  0844               	movwf	(___flmul@bexp)
  6817  07CE  00CF               	line	195
  6818                           	movlw	0FFh
  6819  07CF  30FF               	andwf	(___flmul@prod),f
  6820  07D0  05D0               	movlw	0FFh
  6821  07D1  30FF               	andwf	(___flmul@prod+1),f
  6822  07D2  05D1               	movlw	07Fh
  6823  07D3  307F               	andwf	(___flmul@prod+2),f
  6824  07D4  05D2               	movlw	0
  6825  07D5  3000               	andwf	(___flmul@prod+3),f
  6826  07D6  05D3               	line	196
  6827                           	
  6828                           l2664:	
  6829  07D7                     	btfss	(___flmul@bexp),(0)&7
  6830  07D7  1C4F               	goto	u3691
  6831  07D8  2FDA               	goto	u3690
  6832  07D9  2FDB               u3691:
  6833  07DA                     	goto	l2668
  6834  07DA  2FDD               u3690:
  6835  07DB                     	line	197
  6836                           	
  6837                           l2666:	
  6838  07DB                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  6839  07DB  17D2               	goto	l2668
  6840  07DC  2FDD               	line	198
  6841                           	
  6842                           l731:	
  6843  07DD                     	line	199
  6844                           	
  6845                           l2668:	
  6846  07DD                     	movf	(___flmul@bexp),w
  6847  07DD  084F               	movwf	(??___flmul+0)+0
  6848  07DE  00C4               	clrc
  6849  07DF  1003               	rrf	(??___flmul+0)+0,w
  6850  07E0  0C44               	movwf	(??___flmul+1)+0
  6851  07E1  00C5               	movf	(??___flmul+1)+0,w
  6852  07E2  0845               	movwf	0+(___flmul@prod)+03h
  6853  07E3  00D3               	goto	l728
  6854  07E4  2FE5               	line	200
  6855                           	
  6856                           l730:	
  6857  07E5                     	
  6858                           l728:	
  6859  07E5                     	line	201
  6860                           	movf	(___flmul@sign),w
  6861  07E5  0849               	movwf	(??___flmul+0)+0
  6862  07E6  00C4               	movf	(??___flmul+0)+0,w
  6863  07E7  0844               	iorwf	0+(___flmul@prod)+03h,f
  6864  07E8  04D3               	line	203
  6865                           	
  6866                           l2670:	
  6867  07E9                     	movf	(___flmul@prod+3),w
  6868  07E9  0853               	movwf	(?___flmul+3)
  6869  07EA  00BF               	movf	(___flmul@prod+2),w
  6870  07EB  0852               	movwf	(?___flmul+2)
  6871  07EC  00BE               	movf	(___flmul@prod+1),w
  6872  07ED  0851               	movwf	(?___flmul+1)
  6873  07EE  00BD               	movf	(___flmul@prod),w
  6874  07EF  0850               	movwf	(?___flmul)
  6875  07F0  00BC               
  6876                           	goto	l716
  6877  07F1  2FF2               	
  6878                           l2672:	
  6879  07F2                     	line	205
  6880                           	
  6881                           l716:	
  6882  07F2                     	return
  6883  07F2  0008               	opt stack 0
  6884                           GLOBAL	__end_of___flmul
  6885                           	__end_of___flmul:
  6886  07F3                     	signat	___flmul,8316
  6887                           	global	__Umul8_16
  6888                           
  6889 ;; *************** function __Umul8_16 *****************
  6890 ;; Defined at:
  6891 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6892 ;; Parameters:    Size  Location     Type
  6893 ;;  multiplier      1    wreg     unsigned char 
  6894 ;;  multiplicand    1    0[COMMON] unsigned char 
  6895 ;; Auto vars:     Size  Location     Type
  6896 ;;  multiplier      1    8[COMMON] unsigned char 
  6897 ;;  word_mpld       2    6[COMMON] unsigned int 
  6898 ;;  product         2    4[COMMON] unsigned int 
  6899 ;; Return value:  Size  Location     Type
  6900 ;;                  2    0[COMMON] unsigned int 
  6901 ;; Registers used:
  6902 ;;		wreg, status,2, status,0
  6903 ;; Tracked objects:
  6904 ;;		On entry : 0/0
  6905 ;;		On exit  : 0/0
  6906 ;;		Unchanged: 0/0
  6907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6908 ;;      Params:         2       0       0       0       0
  6909 ;;      Locals:         5       0       0       0       0
  6910 ;;      Temps:          2       0       0       0       0
  6911 ;;      Totals:         9       0       0       0       0
  6912 ;;Total ram usage:        9 bytes
  6913 ;; Hardware stack levels used:    1
  6914 ;; This function calls:
  6915 ;;		Nothing
  6916 ;; This function is called by:
  6917 ;;		___flmul
  6918 ;; This function uses a non-reentrant model
  6919 ;;
  6920                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  6921                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6922                           	line	4
  6923                           global __ptext19
  6924                           __ptext19:	;psect for function __Umul8_16
  6925  1735                     psect	text19
  6926                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6927                           	line	4
  6928                           	global	__size_of__Umul8_16
  6929                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  6930  002A                     	
  6931                           __Umul8_16:	
  6932  1735                     ;incstack = 0
  6933                           	opt	stack 6
  6934                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6935                           ;__Umul8_16@multiplier stored from wreg
  6936                           	movwf	(__Umul8_16@multiplier)
  6937  1735  00F8               	line	5
  6938                           	
  6939                           l2028:	
  6940  1736                     	clrf	(__Umul8_16@product)
  6941  1736  01F4               	clrf	(__Umul8_16@product+1)
  6942  1737  01F5               	line	6
  6943                           	
  6944                           l2030:	
  6945  1738                     	movf	(__Umul8_16@multiplicand),w
  6946  1738  0870               	movwf	(??__Umul8_16+0)+0
  6947  1739  00F2               	clrf	(??__Umul8_16+0)+0+1
  6948  173A  01F3               	movf	0+(??__Umul8_16+0)+0,w
  6949  173B  0872               	movwf	(__Umul8_16@word_mpld)
  6950  173C  00F6               	movf	1+(??__Umul8_16+0)+0,w
  6951  173D  0873               	movwf	(__Umul8_16@word_mpld+1)
  6952  173E  00F7               	goto	l2032
  6953  173F  2F40               	line	50
  6954                           	
  6955                           l753:	
  6956  1740                     	line	51
  6957                           	
  6958                           l2032:	
  6959  1740                     	btfss	(__Umul8_16@multiplier),(0)&7
  6960  1740  1C78               	goto	u2311
  6961  1741  2F43               	goto	u2310
  6962  1742  2F44               u2311:
  6963  1743                     	goto	l754
  6964  1743  2F4A               u2310:
  6965  1744                     	line	52
  6966                           	
  6967                           l2034:	
  6968  1744                     	movf	(__Umul8_16@word_mpld),w
  6969  1744  0876               	addwf	(__Umul8_16@product),f
  6970  1745  07F4               	skipnc
  6971  1746  1803               	incf	(__Umul8_16@product+1),f
  6972  1747  0AF5               	movf	(__Umul8_16@word_mpld+1),w
  6973  1748  0877               	addwf	(__Umul8_16@product+1),f
  6974  1749  07F5               	line	53
  6975                           	
  6976                           l754:	
  6977  174A                     	line	54
  6978                           	movlw	01h
  6979  174A  3001               	
  6980                           u2325:
  6981  174B                     	clrc
  6982  174B  1003               	rlf	(__Umul8_16@word_mpld),f
  6983  174C  0DF6               	rlf	(__Umul8_16@word_mpld+1),f
  6984  174D  0DF7               	addlw	-1
  6985  174E  3EFF               	skipz
  6986  174F  1D03               	goto	u2325
  6987  1750  2F4B               	line	55
  6988                           	clrc
  6989  1751  1003               	rrf	(__Umul8_16@multiplier),f
  6990  1752  0CF8               
  6991                           	line	56
  6992                           	
  6993                           l2036:	
  6994  1753                     	movf	((__Umul8_16@multiplier)),w
  6995  1753  0878               	btfss	status,2
  6996  1754  1D03               	goto	u2331
  6997  1755  2F57               	goto	u2330
  6998  1756  2F58               u2331:
  6999  1757                     	goto	l2032
  7000  1757  2F40               u2330:
  7001  1758                     	goto	l2038
  7002  1758  2F59               	
  7003                           l755:	
  7004  1759                     	line	59
  7005                           	
  7006                           l2038:	
  7007  1759                     	movf	(__Umul8_16@product+1),w
  7008  1759  0875               	movwf	(?__Umul8_16+1)
  7009  175A  00F1               	movf	(__Umul8_16@product),w
  7010  175B  0874               	movwf	(?__Umul8_16)
  7011  175C  00F0               	goto	l756
  7012  175D  2F5E               	
  7013                           l2040:	
  7014  175E                     	line	60
  7015                           	
  7016                           l756:	
  7017  175E                     	return
  7018  175E  0008               	opt stack 0
  7019                           GLOBAL	__end_of__Umul8_16
  7020                           	__end_of__Umul8_16:
  7021  175F                     	signat	__Umul8_16,8314
  7022                           	global	___fldiv
  7023                           
  7024 ;; *************** function ___fldiv *****************
  7025 ;; Defined at:
  7026 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  7027 ;; Parameters:    Size  Location     Type
  7028 ;;  a               4   54[BANK0 ] unsigned int 
  7029 ;;  b               4   58[BANK0 ] unsigned int 
  7030 ;; Auto vars:     Size  Location     Type
  7031 ;;  grs             4   74[BANK0 ] unsigned long 
  7032 ;;  rem             4   67[BANK0 ] unsigned long 
  7033 ;;  new_exp         2   72[BANK0 ] int 
  7034 ;;  aexp            1   79[BANK0 ] unsigned char 
  7035 ;;  bexp            1   78[BANK0 ] unsigned char 
  7036 ;;  sign            1   71[BANK0 ] unsigned char 
  7037 ;; Return value:  Size  Location     Type
  7038 ;;                  4   54[BANK0 ] unsigned char 
  7039 ;; Registers used:
  7040 ;;		wreg, status,2, status,0, btemp+1
  7041 ;; Tracked objects:
  7042 ;;		On entry : 0/0
  7043 ;;		On exit  : 0/0
  7044 ;;		Unchanged: 0/0
  7045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7046 ;;      Params:         0       8       0       0       0
  7047 ;;      Locals:         0      13       0       0       0
  7048 ;;      Temps:          0       5       0       0       0
  7049 ;;      Totals:         0      26       0       0       0
  7050 ;;Total ram usage:       26 bytes
  7051 ;; Hardware stack levels used:    1
  7052 ;; This function calls:
  7053 ;;		Nothing
  7054 ;; This function is called by:
  7055 ;;		_main
  7056 ;; This function uses a non-reentrant model
  7057 ;;
  7058                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  7059                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  7060                           	line	8
  7061                           global __ptext20
  7062                           __ptext20:	;psect for function ___fldiv
  7063  0B48                     psect	text20
  7064                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  7065                           	line	8
  7066                           	global	__size_of___fldiv
  7067                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  7068  0209                     	
  7069                           ___fldiv:	
  7070  0B48                     ;incstack = 0
  7071                           	opt	stack 7
  7072                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  7073                           	line	26
  7074                           	
  7075                           l2392:	
  7076  0B48                     	bcf	status, 5	;RP0=0, select bank0
  7077  0B48  1283               	bcf	status, 6	;RP1=0, select bank0
  7078  0B49  1303               	movf	0+(___fldiv@b)+03h,w
  7079  0B4A  085D               	andlw	080h
  7080  0B4B  3980               	movwf	(??___fldiv+0)+0
  7081  0B4C  00DE               	movf	(??___fldiv+0)+0,w
  7082  0B4D  085E               	movwf	(___fldiv@sign)
  7083  0B4E  00E7               	line	27
  7084                           	
  7085                           l2394:	
  7086  0B4F                     	movf	0+(___fldiv@b)+03h,w
  7087  0B4F  085D               	movwf	(??___fldiv+0)+0
  7088  0B50  00DE               	addwf	(??___fldiv+0)+0,w
  7089  0B51  075E               	movwf	(??___fldiv+1)+0
  7090  0B52  00DF               	movf	(??___fldiv+1)+0,w
  7091  0B53  085F               	movwf	(___fldiv@bexp)
  7092  0B54  00EE               	line	28
  7093                           	
  7094                           l2396:	
  7095  0B55                     	btfss	0+(___fldiv@b)+02h,(7)&7
  7096  0B55  1FDC               	goto	u3041
  7097  0B56  2B58               	goto	u3040
  7098  0B57  2B59               u3041:
  7099  0B58                     	goto	l2400
  7100  0B58  2B5B               u3040:
  7101  0B59                     	line	29
  7102                           	
  7103                           l2398:	
  7104  0B59                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
  7105  0B59  146E               	goto	l2400
  7106  0B5A  2B5B               	line	30
  7107                           	
  7108                           l669:	
  7109  0B5B                     	line	33
  7110                           	
  7111                           l2400:	
  7112  0B5B                     	movf	((___fldiv@bexp)),w
  7113  0B5B  086E               	btfsc	status,2
  7114  0B5C  1903               	goto	u3051
  7115  0B5D  2B5F               	goto	u3050
  7116  0B5E  2B60               u3051:
  7117  0B5F                     	goto	l2410
  7118  0B5F  2B71               u3050:
  7119  0B60                     	line	35
  7120                           	
  7121                           l2402:	
  7122  0B60                     		incf	((___fldiv@bexp)),w
  7123  0B60  0A6E               	btfss	status,2
  7124  0B61  1D03               	goto	u3061
  7125  0B62  2B64               	goto	u3060
  7126  0B63  2B65               u3061:
  7127  0B64                     	goto	l2406
  7128  0B64  2B6E               u3060:
  7129  0B65                     	line	37
  7130                           	
  7131                           l2404:	
  7132  0B65                     	movlw	0x0
  7133  0B65  3000               	movwf	(___fldiv@b+3)
  7134  0B66  00DD               	movlw	0x0
  7135  0B67  3000               	movwf	(___fldiv@b+2)
  7136  0B68  00DC               	movlw	0x0
  7137  0B69  3000               	movwf	(___fldiv@b+1)
  7138  0B6A  00DB               	movlw	0x0
  7139  0B6B  3000               	movwf	(___fldiv@b)
  7140  0B6C  00DA               
  7141                           	goto	l2406
  7142  0B6D  2B6E               	line	38
  7143                           	
  7144                           l671:	
  7145  0B6E                     	line	40
  7146                           	
  7147                           l2406:	
  7148  0B6E                     	bsf	(___fldiv@b)+(23/8),(23)&7
  7149  0B6E  17DC               	line	42
  7150                           	
  7151                           l2408:	
  7152  0B6F                     	clrf	0+(___fldiv@b)+03h
  7153  0B6F  01DD               	line	43
  7154                           	goto	l2412
  7155  0B70  2B7A               	line	44
  7156                           	
  7157                           l670:	
  7158  0B71                     	line	46
  7159                           	
  7160                           l2410:	
  7161  0B71                     	movlw	0x0
  7162  0B71  3000               	movwf	(___fldiv@b+3)
  7163  0B72  00DD               	movlw	0x0
  7164  0B73  3000               	movwf	(___fldiv@b+2)
  7165  0B74  00DC               	movlw	0x0
  7166  0B75  3000               	movwf	(___fldiv@b+1)
  7167  0B76  00DB               	movlw	0x0
  7168  0B77  3000               	movwf	(___fldiv@b)
  7169  0B78  00DA               
  7170                           	goto	l2412
  7171  0B79  2B7A               	line	47
  7172                           	
  7173                           l672:	
  7174  0B7A                     	line	49
  7175                           	
  7176                           l2412:	
  7177  0B7A                     	movf	0+(___fldiv@a)+03h,w
  7178  0B7A  0859               	andlw	080h
  7179  0B7B  3980               	movwf	(??___fldiv+0)+0
  7180  0B7C  00DE               	movf	(??___fldiv+0)+0,w
  7181  0B7D  085E               	xorwf	(___fldiv@sign),f
  7182  0B7E  06E7               	line	50
  7183                           	
  7184                           l2414:	
  7185  0B7F                     	movf	0+(___fldiv@a)+03h,w
  7186  0B7F  0859               	movwf	(??___fldiv+0)+0
  7187  0B80  00DE               	addwf	(??___fldiv+0)+0,w
  7188  0B81  075E               	movwf	(??___fldiv+1)+0
  7189  0B82  00DF               	movf	(??___fldiv+1)+0,w
  7190  0B83  085F               	movwf	(___fldiv@aexp)
  7191  0B84  00EF               	line	51
  7192                           	
  7193                           l2416:	
  7194  0B85                     	btfss	0+(___fldiv@a)+02h,(7)&7
  7195  0B85  1FD8               	goto	u3071
  7196  0B86  2B88               	goto	u3070
  7197  0B87  2B89               u3071:
  7198  0B88                     	goto	l2420
  7199  0B88  2B8B               u3070:
  7200  0B89                     	line	52
  7201                           	
  7202                           l2418:	
  7203  0B89                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
  7204  0B89  146F               	goto	l2420
  7205  0B8A  2B8B               	line	53
  7206                           	
  7207                           l673:	
  7208  0B8B                     	line	56
  7209                           	
  7210                           l2420:	
  7211  0B8B                     	movf	((___fldiv@aexp)),w
  7212  0B8B  086F               	btfsc	status,2
  7213  0B8C  1903               	goto	u3081
  7214  0B8D  2B8F               	goto	u3080
  7215  0B8E  2B90               u3081:
  7216  0B8F                     	goto	l2430
  7217  0B8F  2BA1               u3080:
  7218  0B90                     	line	58
  7219                           	
  7220                           l2422:	
  7221  0B90                     		incf	((___fldiv@aexp)),w
  7222  0B90  0A6F               	btfss	status,2
  7223  0B91  1D03               	goto	u3091
  7224  0B92  2B94               	goto	u3090
  7225  0B93  2B95               u3091:
  7226  0B94                     	goto	l2426
  7227  0B94  2B9E               u3090:
  7228  0B95                     	line	60
  7229                           	
  7230                           l2424:	
  7231  0B95                     	movlw	0x0
  7232  0B95  3000               	movwf	(___fldiv@a+3)
  7233  0B96  00D9               	movlw	0x0
  7234  0B97  3000               	movwf	(___fldiv@a+2)
  7235  0B98  00D8               	movlw	0x0
  7236  0B99  3000               	movwf	(___fldiv@a+1)
  7237  0B9A  00D7               	movlw	0x0
  7238  0B9B  3000               	movwf	(___fldiv@a)
  7239  0B9C  00D6               
  7240                           	goto	l2426
  7241  0B9D  2B9E               	line	61
  7242                           	
  7243                           l675:	
  7244  0B9E                     	line	63
  7245                           	
  7246                           l2426:	
  7247  0B9E                     	bsf	(___fldiv@a)+(23/8),(23)&7
  7248  0B9E  17D8               	line	65
  7249                           	
  7250                           l2428:	
  7251  0B9F                     	clrf	0+(___fldiv@a)+03h
  7252  0B9F  01D9               	line	66
  7253                           	goto	l676
  7254  0BA0  2BA9               	line	67
  7255                           	
  7256                           l674:	
  7257  0BA1                     	line	69
  7258                           	
  7259                           l2430:	
  7260  0BA1                     	movlw	0x0
  7261  0BA1  3000               	movwf	(___fldiv@a+3)
  7262  0BA2  00D9               	movlw	0x0
  7263  0BA3  3000               	movwf	(___fldiv@a+2)
  7264  0BA4  00D8               	movlw	0x0
  7265  0BA5  3000               	movwf	(___fldiv@a+1)
  7266  0BA6  00D7               	movlw	0x0
  7267  0BA7  3000               	movwf	(___fldiv@a)
  7268  0BA8  00D6               
  7269                           	line	70
  7270                           	
  7271                           l676:	
  7272  0BA9                     	line	75
  7273                           	movf	(___fldiv@a+3),w
  7274  0BA9  0859               	iorwf	(___fldiv@a+2),w
  7275  0BAA  0458               	iorwf	(___fldiv@a+1),w
  7276  0BAB  0457               	iorwf	(___fldiv@a),w
  7277  0BAC  0456               	skipz
  7278  0BAD  1D03               	goto	u3101
  7279  0BAE  2BB0               	goto	u3100
  7280  0BAF  2BB1               u3101:
  7281  0BB0                     	goto	l2440
  7282  0BB0  2BCB               u3100:
  7283  0BB1                     	line	76
  7284                           	
  7285                           l2432:	
  7286  0BB1                     	movlw	high highword(0)
  7287  0BB1  3000               	movwf	(___fldiv@b+3)
  7288  0BB2  00DD               	movlw	low highword(0)
  7289  0BB3  3000               	movwf	(___fldiv@b+2)
  7290  0BB4  00DC               	movlw	high(0)
  7291  0BB5  3000               	movwf	(___fldiv@b+1)
  7292  0BB6  00DB               	movlw	low(0)
  7293  0BB7  3000               	movwf	(___fldiv@b)
  7294  0BB8  00DA               
  7295                           	line	77
  7296                           	movlw	080h
  7297  0BB9  3080               	iorwf	0+(___fldiv@b)+02h,f
  7298  0BBA  04DC               	movlw	07Fh
  7299  0BBB  307F               	iorwf	1+(___fldiv@b)+02h,f
  7300  0BBC  04DD               	line	78
  7301                           	
  7302                           l2434:	
  7303  0BBD                     	movf	(___fldiv@sign),w
  7304  0BBD  0867               	movwf	(??___fldiv+0)+0
  7305  0BBE  00DE               	movf	(??___fldiv+0)+0,w
  7306  0BBF  085E               	iorwf	0+(___fldiv@b)+03h,f
  7307  0BC0  04DD               	line	79
  7308                           	
  7309                           l2436:	
  7310  0BC1                     	movf	(___fldiv@b+3),w
  7311  0BC1  085D               	movwf	(?___fldiv+3)
  7312  0BC2  00D9               	movf	(___fldiv@b+2),w
  7313  0BC3  085C               	movwf	(?___fldiv+2)
  7314  0BC4  00D8               	movf	(___fldiv@b+1),w
  7315  0BC5  085B               	movwf	(?___fldiv+1)
  7316  0BC6  00D7               	movf	(___fldiv@b),w
  7317  0BC7  085A               	movwf	(?___fldiv)
  7318  0BC8  00D6               
  7319                           	goto	l678
  7320  0BC9  2D50               	
  7321                           l2438:	
  7322  0BCA                     	goto	l678
  7323  0BCA  2D50               	line	80
  7324                           	
  7325                           l677:	
  7326  0BCB                     	line	83
  7327                           	
  7328                           l2440:	
  7329  0BCB                     	movf	((___fldiv@bexp)),w
  7330  0BCB  086E               	btfss	status,2
  7331  0BCC  1D03               	goto	u3111
  7332  0BCD  2BCF               	goto	u3110
  7333  0BCE  2BD0               u3111:
  7334  0BCF                     	goto	l2446
  7335  0BCF  2BE2               u3110:
  7336  0BD0                     	line	84
  7337                           	
  7338                           l2442:	
  7339  0BD0                     	movlw	high highword(0)
  7340  0BD0  3000               	movwf	(___fldiv@b+3)
  7341  0BD1  00DD               	movlw	low highword(0)
  7342  0BD2  3000               	movwf	(___fldiv@b+2)
  7343  0BD3  00DC               	movlw	high(0)
  7344  0BD4  3000               	movwf	(___fldiv@b+1)
  7345  0BD5  00DB               	movlw	low(0)
  7346  0BD6  3000               	movwf	(___fldiv@b)
  7347  0BD7  00DA               
  7348                           	line	85
  7349                           	movf	(___fldiv@b+3),w
  7350  0BD8  085D               	movwf	(?___fldiv+3)
  7351  0BD9  00D9               	movf	(___fldiv@b+2),w
  7352  0BDA  085C               	movwf	(?___fldiv+2)
  7353  0BDB  00D8               	movf	(___fldiv@b+1),w
  7354  0BDC  085B               	movwf	(?___fldiv+1)
  7355  0BDD  00D7               	movf	(___fldiv@b),w
  7356  0BDE  085A               	movwf	(?___fldiv)
  7357  0BDF  00D6               
  7358                           	goto	l678
  7359  0BE0  2D50               	
  7360                           l2444:	
  7361  0BE1                     	goto	l678
  7362  0BE1  2D50               	line	86
  7363                           	
  7364                           l679:	
  7365  0BE2                     	line	89
  7366                           	
  7367                           l2446:	
  7368  0BE2                     	movf	(___fldiv@aexp),w
  7369  0BE2  086F               	movwf	(??___fldiv+0)+0
  7370  0BE3  00DE               	clrf	(??___fldiv+0)+0+1
  7371  0BE4  01DF               	comf	(??___fldiv+0)+0,f
  7372  0BE5  09DE               	comf	(??___fldiv+0)+1,f
  7373  0BE6  09DF               	incf	(??___fldiv+0)+0,f
  7374  0BE7  0ADE               	skipnz
  7375  0BE8  1903               	incf	(??___fldiv+0)+1,f
  7376  0BE9  0ADF               	movf	(___fldiv@bexp),w
  7377  0BEA  086E               	addwf	0+(??___fldiv+0)+0,w
  7378  0BEB  075E               	movwf	(??___fldiv+2)+0
  7379  0BEC  00E0               	movf	1+(??___fldiv+0)+0,w
  7380  0BED  085F               	skipnc
  7381  0BEE  1803               	incf	1+(??___fldiv+0)+0,w
  7382  0BEF  0A5F               	movwf	((??___fldiv+2)+0)+1
  7383  0BF0  00E1               	movf	0+(??___fldiv+2)+0,w
  7384  0BF1  0860               	addlw	low(07Fh)
  7385  0BF2  3E7F               	movwf	(___fldiv@new_exp)
  7386  0BF3  00E8               	movf	1+(??___fldiv+2)+0,w
  7387  0BF4  0861               	skipnc
  7388  0BF5  1803               	addlw	1
  7389  0BF6  3E01               	addlw	high(07Fh)
  7390  0BF7  3E00               	movwf	1+(___fldiv@new_exp)
  7391  0BF8  00E9               	line	92
  7392                           	
  7393                           l2448:	
  7394  0BF9                     	movf	(___fldiv@b+3),w
  7395  0BF9  085D               	movwf	(___fldiv@rem+3)
  7396  0BFA  00E6               	movf	(___fldiv@b+2),w
  7397  0BFB  085C               	movwf	(___fldiv@rem+2)
  7398  0BFC  00E5               	movf	(___fldiv@b+1),w
  7399  0BFD  085B               	movwf	(___fldiv@rem+1)
  7400  0BFE  00E4               	movf	(___fldiv@b),w
  7401  0BFF  085A               	movwf	(___fldiv@rem)
  7402  0C00  00E3               
  7403                           	line	93
  7404                           	
  7405                           l2450:	
  7406  0C01                     	movlw	high highword(0)
  7407  0C01  3000               	movwf	(___fldiv@b+3)
  7408  0C02  00DD               	movlw	low highword(0)
  7409  0C03  3000               	movwf	(___fldiv@b+2)
  7410  0C04  00DC               	movlw	high(0)
  7411  0C05  3000               	movwf	(___fldiv@b+1)
  7412  0C06  00DB               	movlw	low(0)
  7413  0C07  3000               	movwf	(___fldiv@b)
  7414  0C08  00DA               
  7415                           	line	94
  7416                           	
  7417                           l2452:	
  7418  0C09                     	movlw	high highword(0)
  7419  0C09  3000               	movwf	(___fldiv@grs+3)
  7420  0C0A  00ED               	movlw	low highword(0)
  7421  0C0B  3000               	movwf	(___fldiv@grs+2)
  7422  0C0C  00EC               	movlw	high(0)
  7423  0C0D  3000               	movwf	(___fldiv@grs+1)
  7424  0C0E  00EB               	movlw	low(0)
  7425  0C0F  3000               	movwf	(___fldiv@grs)
  7426  0C10  00EA               
  7427                           	line	96
  7428                           	
  7429                           l2454:	
  7430  0C11                     	clrf	(___fldiv@aexp)
  7431  0C11  01EF               	line	97
  7432                           	goto	l2474
  7433  0C12  2C61               	
  7434                           l681:	
  7435  0C13                     	line	100
  7436                           	
  7437                           l2456:	
  7438  0C13                     	movf	((___fldiv@aexp)),w
  7439  0C13  086F               	btfsc	status,2
  7440  0C14  1903               	goto	u3121
  7441  0C15  2C17               	goto	u3120
  7442  0C16  2C18               u3121:
  7443  0C17                     	goto	l2466
  7444  0C17  2C3A               u3120:
  7445  0C18                     	line	101
  7446                           	
  7447                           l2458:	
  7448  0C18                     	movlw	01h
  7449  0C18  3001               	movwf	(??___fldiv+0)+0
  7450  0C19  00DE               u3135:
  7451  0C1A                     	clrc
  7452  0C1A  1003               	rlf	(___fldiv@rem),f
  7453  0C1B  0DE3               	rlf	(___fldiv@rem+1),f
  7454  0C1C  0DE4               	rlf	(___fldiv@rem+2),f
  7455  0C1D  0DE5               	rlf	(___fldiv@rem+3),f
  7456  0C1E  0DE6               	decfsz	(??___fldiv+0)+0
  7457  0C1F  0BDE               	goto	u3135
  7458  0C20  2C1A               	line	102
  7459                           	movlw	01h
  7460  0C21  3001               	movwf	(??___fldiv+0)+0
  7461  0C22  00DE               u3145:
  7462  0C23                     	clrc
  7463  0C23  1003               	rlf	(___fldiv@b),f
  7464  0C24  0DDA               	rlf	(___fldiv@b+1),f
  7465  0C25  0DDB               	rlf	(___fldiv@b+2),f
  7466  0C26  0DDC               	rlf	(___fldiv@b+3),f
  7467  0C27  0DDD               	decfsz	(??___fldiv+0)+0
  7468  0C28  0BDE               	goto	u3145
  7469  0C29  2C23               	line	103
  7470                           	
  7471                           l2460:	
  7472  0C2A                     	btfss	(___fldiv@grs+3),(31)&7
  7473  0C2A  1FED               	goto	u3151
  7474  0C2B  2C2D               	goto	u3150
  7475  0C2C  2C2E               u3151:
  7476  0C2D                     	goto	l2464
  7477  0C2D  2C30               u3150:
  7478  0C2E                     	line	104
  7479                           	
  7480                           l2462:	
  7481  0C2E                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7482  0C2E  145A               	goto	l2464
  7483  0C2F  2C30               	line	105
  7484                           	
  7485                           l683:	
  7486  0C30                     	line	106
  7487                           	
  7488                           l2464:	
  7489  0C30                     	movlw	01h
  7490  0C30  3001               	movwf	(??___fldiv+0)+0
  7491  0C31  00DE               u3165:
  7492  0C32                     	clrc
  7493  0C32  1003               	rlf	(___fldiv@grs),f
  7494  0C33  0DEA               	rlf	(___fldiv@grs+1),f
  7495  0C34  0DEB               	rlf	(___fldiv@grs+2),f
  7496  0C35  0DEC               	rlf	(___fldiv@grs+3),f
  7497  0C36  0DED               	decfsz	(??___fldiv+0)+0
  7498  0C37  0BDE               	goto	u3165
  7499  0C38  2C32               	goto	l2466
  7500  0C39  2C3A               	line	107
  7501                           	
  7502                           l682:	
  7503  0C3A                     	line	112
  7504                           	
  7505                           l2466:	
  7506  0C3A                     	movf	(___fldiv@a+3),w
  7507  0C3A  0859               	subwf	(___fldiv@rem+3),w
  7508  0C3B  0266               	skipz
  7509  0C3C  1D03               	goto	u3175
  7510  0C3D  2C48               	movf	(___fldiv@a+2),w
  7511  0C3E  0858               	subwf	(___fldiv@rem+2),w
  7512  0C3F  0265               	skipz
  7513  0C40  1D03               	goto	u3175
  7514  0C41  2C48               	movf	(___fldiv@a+1),w
  7515  0C42  0857               	subwf	(___fldiv@rem+1),w
  7516  0C43  0264               	skipz
  7517  0C44  1D03               	goto	u3175
  7518  0C45  2C48               	movf	(___fldiv@a),w
  7519  0C46  0856               	subwf	(___fldiv@rem),w
  7520  0C47  0263               u3175:
  7521  0C48                     	skipc
  7522  0C48  1C03               	goto	u3171
  7523  0C49  2C4B               	goto	u3170
  7524  0C4A  2C4C               u3171:
  7525  0C4B                     	goto	l2472
  7526  0C4B  2C5C               u3170:
  7527  0C4C                     	line	115
  7528                           	
  7529                           l2468:	
  7530  0C4C                     	bsf	(___fldiv@grs)+(30/8),(30)&7
  7531  0C4C  176D               	line	116
  7532                           	
  7533                           l2470:	
  7534  0C4D                     	movf	(___fldiv@a),w
  7535  0C4D  0856               	subwf	(___fldiv@rem),f
  7536  0C4E  02E3               	movf	(___fldiv@a+1),w
  7537  0C4F  0857               	skipc
  7538  0C50  1C03               	incfsz	(___fldiv@a+1),w
  7539  0C51  0F57               	subwf	(___fldiv@rem+1),f
  7540  0C52  02E4               	movf	(___fldiv@a+2),w
  7541  0C53  0858               	skipc
  7542  0C54  1C03               	incfsz	(___fldiv@a+2),w
  7543  0C55  0F58               	subwf	(___fldiv@rem+2),f
  7544  0C56  02E5               	movf	(___fldiv@a+3),w
  7545  0C57  0859               	skipc
  7546  0C58  1C03               	incfsz	(___fldiv@a+3),w
  7547  0C59  0F59               	subwf	(___fldiv@rem+3),f
  7548  0C5A  02E6               	goto	l2472
  7549  0C5B  2C5C               	line	117
  7550                           	
  7551                           l684:	
  7552  0C5C                     	line	118
  7553                           	
  7554                           l2472:	
  7555  0C5C                     	movlw	low(01h)
  7556  0C5C  3001               	movwf	(??___fldiv+0)+0
  7557  0C5D  00DE               	movf	(??___fldiv+0)+0,w
  7558  0C5E  085E               	addwf	(___fldiv@aexp),f
  7559  0C5F  07EF               	goto	l2474
  7560  0C60  2C61               	line	119
  7561                           	
  7562                           l680:	
  7563  0C61                     	line	97
  7564                           	
  7565                           l2474:	
  7566  0C61                     	movlw	low(01Ah)
  7567  0C61  301A               	subwf	(___fldiv@aexp),w
  7568  0C62  026F               	skipc
  7569  0C63  1C03               	goto	u3181
  7570  0C64  2C66               	goto	u3180
  7571  0C65  2C67               u3181:
  7572  0C66                     	goto	l2456
  7573  0C66  2C13               u3180:
  7574  0C67                     	goto	l2476
  7575  0C67  2C68               	
  7576                           l685:	
  7577  0C68                     	line	122
  7578                           	
  7579                           l2476:	
  7580  0C68                     	movf	(___fldiv@rem+3),w
  7581  0C68  0866               	iorwf	(___fldiv@rem+2),w
  7582  0C69  0465               	iorwf	(___fldiv@rem+1),w
  7583  0C6A  0464               	iorwf	(___fldiv@rem),w
  7584  0C6B  0463               	skipnz
  7585  0C6C  1903               	goto	u3191
  7586  0C6D  2C6F               	goto	u3190
  7587  0C6E  2C70               u3191:
  7588  0C6F                     	goto	l2490
  7589  0C6F  2C92               u3190:
  7590  0C70                     	line	123
  7591                           	
  7592                           l2478:	
  7593  0C70                     	bsf	(___fldiv@grs)+(0/8),(0)&7
  7594  0C70  146A               	goto	l2490
  7595  0C71  2C92               	line	124
  7596                           	
  7597                           l686:	
  7598  0C72                     	line	127
  7599                           	goto	l2490
  7600  0C72  2C92               	
  7601                           l688:	
  7602  0C73                     	line	128
  7603                           	
  7604                           l2480:	
  7605  0C73                     	movlw	01h
  7606  0C73  3001               	movwf	(??___fldiv+0)+0
  7607  0C74  00DE               u3205:
  7608  0C75                     	clrc
  7609  0C75  1003               	rlf	(___fldiv@b),f
  7610  0C76  0DDA               	rlf	(___fldiv@b+1),f
  7611  0C77  0DDB               	rlf	(___fldiv@b+2),f
  7612  0C78  0DDC               	rlf	(___fldiv@b+3),f
  7613  0C79  0DDD               	decfsz	(??___fldiv+0)+0
  7614  0C7A  0BDE               	goto	u3205
  7615  0C7B  2C75               	line	129
  7616                           	
  7617                           l2482:	
  7618  0C7C                     	btfss	(___fldiv@grs+3),(31)&7
  7619  0C7C  1FED               	goto	u3211
  7620  0C7D  2C7F               	goto	u3210
  7621  0C7E  2C80               u3211:
  7622  0C7F                     	goto	l2486
  7623  0C7F  2C82               u3210:
  7624  0C80                     	line	130
  7625                           	
  7626                           l2484:	
  7627  0C80                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7628  0C80  145A               	goto	l2486
  7629  0C81  2C82               	line	131
  7630                           	
  7631                           l689:	
  7632  0C82                     	line	132
  7633                           	
  7634                           l2486:	
  7635  0C82                     	movlw	01h
  7636  0C82  3001               	movwf	(??___fldiv+0)+0
  7637  0C83  00DE               u3225:
  7638  0C84                     	clrc
  7639  0C84  1003               	rlf	(___fldiv@grs),f
  7640  0C85  0DEA               	rlf	(___fldiv@grs+1),f
  7641  0C86  0DEB               	rlf	(___fldiv@grs+2),f
  7642  0C87  0DEC               	rlf	(___fldiv@grs+3),f
  7643  0C88  0DED               	decfsz	(??___fldiv+0)+0
  7644  0C89  0BDE               	goto	u3225
  7645  0C8A  2C84               	line	133
  7646                           	
  7647                           l2488:	
  7648  0C8B                     	movlw	0FFh
  7649  0C8B  30FF               	addwf	(___fldiv@new_exp),f
  7650  0C8C  07E8               	skipnc
  7651  0C8D  1803               	incf	(___fldiv@new_exp+1),f
  7652  0C8E  0AE9               	movlw	0FFh
  7653  0C8F  30FF               	addwf	(___fldiv@new_exp+1),f
  7654  0C90  07E9               	goto	l2490
  7655  0C91  2C92               	line	134
  7656                           	
  7657                           l687:	
  7658  0C92                     	line	127
  7659                           	
  7660                           l2490:	
  7661  0C92                     	btfss	(___fldiv@b+2),(23)&7
  7662  0C92  1FDC               	goto	u3231
  7663  0C93  2C95               	goto	u3230
  7664  0C94  2C96               u3231:
  7665  0C95                     	goto	l2480
  7666  0C95  2C73               u3230:
  7667  0C96                     	goto	l2492
  7668  0C96  2C97               	
  7669                           l690:	
  7670  0C97                     	line	139
  7671                           	
  7672                           l2492:	
  7673  0C97                     	clrf	(___fldiv@aexp)
  7674  0C97  01EF               	line	140
  7675                           	
  7676                           l2494:	
  7677  0C98                     	btfss	(___fldiv@grs+3),(31)&7
  7678  0C98  1FED               	goto	u3241
  7679  0C99  2C9B               	goto	u3240
  7680  0C9A  2C9C               u3241:
  7681  0C9B                     	goto	l2502
  7682  0C9B  2CBC               u3240:
  7683  0C9C                     	line	141
  7684                           	
  7685                           l2496:	
  7686  0C9C                     	movlw	0FFh
  7687  0C9C  30FF               	andwf	(___fldiv@grs),w
  7688  0C9D  056A               	movwf	(??___fldiv+0)+0
  7689  0C9E  00DE               	movlw	0FFh
  7690  0C9F  30FF               	andwf	(___fldiv@grs+1),w
  7691  0CA0  056B               	movwf	((??___fldiv+0)+0+1)
  7692  0CA1  00DF               	movlw	0FFh
  7693  0CA2  30FF               	andwf	(___fldiv@grs+2),w
  7694  0CA3  056C               	movwf	((??___fldiv+0)+0+2)
  7695  0CA4  00E0               	movlw	07Fh
  7696  0CA5  307F               	andwf	(___fldiv@grs+3),w
  7697  0CA6  056D               	movwf	((??___fldiv+0)+0+3)
  7698  0CA7  00E1               	movf	3+(??___fldiv+0)+0,w
  7699  0CA8  0861               	iorwf	2+(??___fldiv+0)+0,w
  7700  0CA9  0460               	iorwf	1+(??___fldiv+0)+0,w
  7701  0CAA  045F               	iorwf	0+(??___fldiv+0)+0,w
  7702  0CAB  045E               	skipnz
  7703  0CAC  1903               	goto	u3251
  7704  0CAD  2CAF               	goto	u3250
  7705  0CAE  2CB0               u3251:
  7706  0CAF                     	goto	l692
  7707  0CAF  2CB3               u3250:
  7708  0CB0                     	line	142
  7709                           	
  7710                           l2498:	
  7711  0CB0                     	clrf	(___fldiv@aexp)
  7712  0CB0  01EF               	incf	(___fldiv@aexp),f
  7713  0CB1  0AEF               	line	143
  7714                           	goto	l2502
  7715  0CB2  2CBC               	line	144
  7716                           	
  7717                           l692:	
  7718  0CB3                     	line	145
  7719                           	btfss	(___fldiv@b),(0)&7
  7720  0CB3  1C5A               	goto	u3261
  7721  0CB4  2CB6               	goto	u3260
  7722  0CB5  2CB7               u3261:
  7723  0CB6                     	goto	l2502
  7724  0CB6  2CBC               u3260:
  7725  0CB7                     	line	146
  7726                           	
  7727                           l2500:	
  7728  0CB7                     	clrf	(___fldiv@aexp)
  7729  0CB7  01EF               	incf	(___fldiv@aexp),f
  7730  0CB8  0AEF               	goto	l2502
  7731  0CB9  2CBC               	line	147
  7732                           	
  7733                           l694:	
  7734  0CBA                     	goto	l2502
  7735  0CBA  2CBC               	line	148
  7736                           	
  7737                           l693:	
  7738  0CBB                     	goto	l2502
  7739  0CBB  2CBC               	line	149
  7740                           	
  7741                           l691:	
  7742  0CBC                     	line	150
  7743                           	
  7744                           l2502:	
  7745  0CBC                     	movf	((___fldiv@aexp)),w
  7746  0CBC  086F               	btfsc	status,2
  7747  0CBD  1903               	goto	u3271
  7748  0CBE  2CC0               	goto	u3270
  7749  0CBF  2CC1               u3271:
  7750  0CC0                     	goto	l2512
  7751  0CC0  2CF4               u3270:
  7752  0CC1                     	line	151
  7753                           	
  7754                           l2504:	
  7755  0CC1                     	movlw	01h
  7756  0CC1  3001               	addwf	(___fldiv@b),f
  7757  0CC2  07DA               	movlw	0
  7758  0CC3  3000               	skipnc
  7759  0CC4  1803               movlw 1
  7760  0CC5  3001               	addwf	(___fldiv@b+1),f
  7761  0CC6  07DB               	movlw	0
  7762  0CC7  3000               	skipnc
  7763  0CC8  1803               movlw 1
  7764  0CC9  3001               	addwf	(___fldiv@b+2),f
  7765  0CCA  07DC               	movlw	0
  7766  0CCB  3000               	skipnc
  7767  0CCC  1803               movlw 1
  7768  0CCD  3001               	addwf	(___fldiv@b+3),f
  7769  0CCE  07DD               	line	152
  7770                           	
  7771                           l2506:	
  7772  0CCF                     	btfss	(___fldiv@b+3),(24)&7
  7773  0CCF  1C5D               	goto	u3281
  7774  0CD0  2CD2               	goto	u3280
  7775  0CD1  2CD3               u3281:
  7776  0CD2                     	goto	l2512
  7777  0CD2  2CF4               u3280:
  7778  0CD3                     	line	153
  7779                           	
  7780                           l2508:	
  7781  0CD3                     	movf	(___fldiv@b),w
  7782  0CD3  085A               	movwf	(??___fldiv+0)+0
  7783  0CD4  00DE               	movf	(___fldiv@b+1),w
  7784  0CD5  085B               	movwf	((??___fldiv+0)+0+1)
  7785  0CD6  00DF               	movf	(___fldiv@b+2),w
  7786  0CD7  085C               	movwf	((??___fldiv+0)+0+2)
  7787  0CD8  00E0               	movf	(___fldiv@b+3),w
  7788  0CD9  085D               	movwf	((??___fldiv+0)+0+3)
  7789  0CDA  00E1               	movlw	01h
  7790  0CDB  3001               	movwf	(??___fldiv+4)+0
  7791  0CDC  00E2               u3295:
  7792  0CDD                     	rlf	(??___fldiv+0)+3,w
  7793  0CDD  0D61               	rrf	(??___fldiv+0)+3,f
  7794  0CDE  0CE1               	rrf	(??___fldiv+0)+2,f
  7795  0CDF  0CE0               	rrf	(??___fldiv+0)+1,f
  7796  0CE0  0CDF               	rrf	(??___fldiv+0)+0,f
  7797  0CE1  0CDE               u3290:
  7798  0CE2                     	decfsz	(??___fldiv+4)+0,f
  7799  0CE2  0BE2               	goto	u3295
  7800  0CE3  2CDD               	movf	3+(??___fldiv+0)+0,w
  7801  0CE4  0861               	movwf	(___fldiv@b+3)
  7802  0CE5  00DD               	movf	2+(??___fldiv+0)+0,w
  7803  0CE6  0860               	movwf	(___fldiv@b+2)
  7804  0CE7  00DC               	movf	1+(??___fldiv+0)+0,w
  7805  0CE8  085F               	movwf	(___fldiv@b+1)
  7806  0CE9  00DB               	movf	0+(??___fldiv+0)+0,w
  7807  0CEA  085E               	movwf	(___fldiv@b)
  7808  0CEB  00DA               
  7809                           	line	154
  7810                           	
  7811                           l2510:	
  7812  0CEC                     	movlw	01h
  7813  0CEC  3001               	addwf	(___fldiv@new_exp),f
  7814  0CED  07E8               	skipnc
  7815  0CEE  1803               	incf	(___fldiv@new_exp+1),f
  7816  0CEF  0AE9               	movlw	0
  7817  0CF0  3000               	addwf	(___fldiv@new_exp+1),f
  7818  0CF1  07E9               	goto	l2512
  7819  0CF2  2CF4               	line	155
  7820                           	
  7821                           l696:	
  7822  0CF3                     	goto	l2512
  7823  0CF3  2CF4               	line	156
  7824                           	
  7825                           l695:	
  7826  0CF4                     	line	159
  7827                           	
  7828                           l2512:	
  7829  0CF4                     	movf	(___fldiv@new_exp+1),w
  7830  0CF4  0869               	xorlw	80h
  7831  0CF5  3A80               	movwf	btemp+1
  7832  0CF6  00FF               	movlw	(0)^80h
  7833  0CF7  3080               	subwf	btemp+1,w
  7834  0CF8  027F               	skipz
  7835  0CF9  1D03               	goto	u3305
  7836  0CFA  2CFD               	movlw	0FFh
  7837  0CFB  30FF               	subwf	(___fldiv@new_exp),w
  7838  0CFC  0268               u3305:
  7839  0CFD                     
  7840                           	skipc
  7841  0CFD  1C03               	goto	u3301
  7842  0CFE  2D00               	goto	u3300
  7843  0CFF  2D01               u3301:
  7844  0D00                     	goto	l2516
  7845  0D00  2D10               u3300:
  7846  0D01                     	line	160
  7847                           	
  7848                           l2514:	
  7849  0D01                     	movlw	0FFh
  7850  0D01  30FF               	bcf	status, 5	;RP0=0, select bank0
  7851  0D02  1283               	bcf	status, 6	;RP1=0, select bank0
  7852  0D03  1303               	movwf	(___fldiv@new_exp)
  7853  0D04  00E8               	movlw	0
  7854  0D05  3000               	movwf	((___fldiv@new_exp))+1
  7855  0D06  00E9               	line	161
  7856                           	movlw	high highword(0)
  7857  0D07  3000               	movwf	(___fldiv@b+3)
  7858  0D08  00DD               	movlw	low highword(0)
  7859  0D09  3000               	movwf	(___fldiv@b+2)
  7860  0D0A  00DC               	movlw	high(0)
  7861  0D0B  3000               	movwf	(___fldiv@b+1)
  7862  0D0C  00DB               	movlw	low(0)
  7863  0D0D  3000               	movwf	(___fldiv@b)
  7864  0D0E  00DA               
  7865                           	goto	l2516
  7866  0D0F  2D10               	line	162
  7867                           	
  7868                           l697:	
  7869  0D10                     	line	165
  7870                           	
  7871                           l2516:	
  7872  0D10                     	bcf	status, 5	;RP0=0, select bank0
  7873  0D10  1283               	bcf	status, 6	;RP1=0, select bank0
  7874  0D11  1303               	movf	(___fldiv@new_exp+1),w
  7875  0D12  0869               	xorlw	80h
  7876  0D13  3A80               	movwf	btemp+1
  7877  0D14  00FF               	movlw	(0)^80h
  7878  0D15  3080               	subwf	btemp+1,w
  7879  0D16  027F               	skipz
  7880  0D17  1D03               	goto	u3315
  7881  0D18  2D1B               	movlw	01h
  7882  0D19  3001               	subwf	(___fldiv@new_exp),w
  7883  0D1A  0268               u3315:
  7884  0D1B                     
  7885                           	skipnc
  7886  0D1B  1803               	goto	u3311
  7887  0D1C  2D1E               	goto	u3310
  7888  0D1D  2D1F               u3311:
  7889  0D1E                     	goto	l698
  7890  0D1E  2D2C               u3310:
  7891  0D1F                     	line	166
  7892                           	
  7893                           l2518:	
  7894  0D1F                     	bcf	status, 5	;RP0=0, select bank0
  7895  0D1F  1283               	bcf	status, 6	;RP1=0, select bank0
  7896  0D20  1303               	clrf	(___fldiv@new_exp)
  7897  0D21  01E8               	clrf	(___fldiv@new_exp+1)
  7898  0D22  01E9               	line	167
  7899                           	
  7900                           l2520:	
  7901  0D23                     	movlw	high highword(0)
  7902  0D23  3000               	movwf	(___fldiv@b+3)
  7903  0D24  00DD               	movlw	low highword(0)
  7904  0D25  3000               	movwf	(___fldiv@b+2)
  7905  0D26  00DC               	movlw	high(0)
  7906  0D27  3000               	movwf	(___fldiv@b+1)
  7907  0D28  00DB               	movlw	low(0)
  7908  0D29  3000               	movwf	(___fldiv@b)
  7909  0D2A  00DA               
  7910                           	line	169
  7911                           	
  7912                           l2522:	
  7913  0D2B                     	clrf	(___fldiv@sign)
  7914  0D2B  01E7               	line	170
  7915                           	
  7916                           l698:	
  7917  0D2C                     	line	173
  7918                           	bcf	status, 5	;RP0=0, select bank0
  7919  0D2C  1283               	bcf	status, 6	;RP1=0, select bank0
  7920  0D2D  1303               	movf	(___fldiv@new_exp),w
  7921  0D2E  0868               	movwf	(??___fldiv+0)+0
  7922  0D2F  00DE               	movf	(??___fldiv+0)+0,w
  7923  0D30  085E               	movwf	(___fldiv@bexp)
  7924  0D31  00EE               	line	175
  7925                           	
  7926                           l2524:	
  7927  0D32                     	btfss	(___fldiv@bexp),(0)&7
  7928  0D32  1C6E               	goto	u3321
  7929  0D33  2D35               	goto	u3320
  7930  0D34  2D36               u3321:
  7931  0D35                     	goto	l2528
  7932  0D35  2D38               u3320:
  7933  0D36                     	line	176
  7934                           	
  7935                           l2526:	
  7936  0D36                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
  7937  0D36  17DC               	line	177
  7938                           	goto	l700
  7939  0D37  2D3C               	line	179
  7940                           	
  7941                           l699:	
  7942  0D38                     	line	180
  7943                           	
  7944                           l2528:	
  7945  0D38                     	movlw	low(07Fh)
  7946  0D38  307F               	movwf	(??___fldiv+0)+0
  7947  0D39  00DE               	movf	(??___fldiv+0)+0,w
  7948  0D3A  085E               	andwf	0+(___fldiv@b)+02h,f
  7949  0D3B  05DC               	line	181
  7950                           	
  7951                           l700:	
  7952  0D3C                     	line	182
  7953                           	movf	(___fldiv@bexp),w
  7954  0D3C  086E               	movwf	(??___fldiv+0)+0
  7955  0D3D  00DE               	clrc
  7956  0D3E  1003               	rrf	(??___fldiv+0)+0,w
  7957  0D3F  0C5E               	movwf	(??___fldiv+1)+0
  7958  0D40  00DF               	movf	(??___fldiv+1)+0,w
  7959  0D41  085F               	movwf	0+(___fldiv@b)+03h
  7960  0D42  00DD               	line	183
  7961                           	movf	(___fldiv@sign),w
  7962  0D43  0867               	movwf	(??___fldiv+0)+0
  7963  0D44  00DE               	movf	(??___fldiv+0)+0,w
  7964  0D45  085E               	iorwf	0+(___fldiv@b)+03h,f
  7965  0D46  04DD               	line	184
  7966                           	
  7967                           l2530:	
  7968  0D47                     	movf	(___fldiv@b+3),w
  7969  0D47  085D               	movwf	(?___fldiv+3)
  7970  0D48  00D9               	movf	(___fldiv@b+2),w
  7971  0D49  085C               	movwf	(?___fldiv+2)
  7972  0D4A  00D8               	movf	(___fldiv@b+1),w
  7973  0D4B  085B               	movwf	(?___fldiv+1)
  7974  0D4C  00D7               	movf	(___fldiv@b),w
  7975  0D4D  085A               	movwf	(?___fldiv)
  7976  0D4E  00D6               
  7977                           	goto	l678
  7978  0D4F  2D50               	
  7979                           l2532:	
  7980  0D50                     	line	185
  7981                           	
  7982                           l678:	
  7983  0D50                     	return
  7984  0D50  0008               	opt stack 0
  7985                           GLOBAL	__end_of___fldiv
  7986                           	__end_of___fldiv:
  7987  0D51                     	signat	___fldiv,8316
  7988                           	global	___fladd
  7989                           
  7990 ;; *************** function ___fladd *****************
  7991 ;; Defined at:
  7992 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  b               4    4[BANK0 ] unsigned char 
  7995 ;;  a               4    8[BANK0 ] unsigned char 
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;  grs             1   27[BANK0 ] unsigned char 
  7998 ;;  bexp            1   26[BANK0 ] unsigned char 
  7999 ;;  aexp            1   25[BANK0 ] unsigned char 
  8000 ;;  signs           1   24[BANK0 ] unsigned char 
  8001 ;; Return value:  Size  Location     Type
  8002 ;;                  4    4[BANK0 ] unsigned char 
  8003 ;; Registers used:
  8004 ;;		wreg, status,2, status,0, btemp+1
  8005 ;; Tracked objects:
  8006 ;;		On entry : 0/0
  8007 ;;		On exit  : 0/0
  8008 ;;		Unchanged: 0/0
  8009 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8010 ;;      Params:         0       8       0       0       0
  8011 ;;      Locals:         0       4       0       0       0
  8012 ;;      Temps:          0      12       0       0       0
  8013 ;;      Totals:         0      24       0       0       0
  8014 ;;Total ram usage:       24 bytes
  8015 ;; Hardware stack levels used:    1
  8016 ;; This function calls:
  8017 ;;		Nothing
  8018 ;; This function is called by:
  8019 ;;		_main
  8020 ;; This function uses a non-reentrant model
  8021 ;;
  8022                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  8023                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8024                           	line	10
  8025                           global __ptext21
  8026                           __ptext21:	;psect for function ___fladd
  8027  01C2                     psect	text21
  8028                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  8029                           	line	10
  8030                           	global	__size_of___fladd
  8031                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  8032  02BC                     	
  8033                           ___fladd:	
  8034  01C2                     ;incstack = 0
  8035                           	opt	stack 7
  8036                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8037                           	line	21
  8038                           	
  8039                           l2198:	
  8040  01C2                     	bcf	status, 5	;RP0=0, select bank0
  8041  01C2  1283               	bcf	status, 6	;RP1=0, select bank0
  8042  01C3  1303               	movf	0+(___fladd@b)+03h,w
  8043  01C4  0827               	andlw	080h
  8044  01C5  3980               	movwf	(??___fladd+0)+0
  8045  01C6  00AC               	movf	(??___fladd+0)+0,w
  8046  01C7  082C               	movwf	(___fladd@signs)
  8047  01C8  00B8               	line	22
  8048                           	
  8049                           l2200:	
  8050  01C9                     	movf	0+(___fladd@b)+03h,w
  8051  01C9  0827               	movwf	(??___fladd+0)+0
  8052  01CA  00AC               	addwf	(??___fladd+0)+0,w
  8053  01CB  072C               	movwf	(??___fladd+1)+0
  8054  01CC  00AD               	movf	(??___fladd+1)+0,w
  8055  01CD  082D               	movwf	(___fladd@bexp)
  8056  01CE  00BA               	line	23
  8057                           	
  8058                           l2202:	
  8059  01CF                     	btfss	0+(___fladd@b)+02h,(7)&7
  8060  01CF  1FA6               	goto	u2581
  8061  01D0  29D2               	goto	u2580
  8062  01D1  29D3               u2581:
  8063  01D2                     	goto	l2206
  8064  01D2  29D5               u2580:
  8065  01D3                     	line	24
  8066                           	
  8067                           l2204:	
  8068  01D3                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  8069  01D3  143A               	goto	l2206
  8070  01D4  29D5               	line	25
  8071                           	
  8072                           l612:	
  8073  01D5                     	line	28
  8074                           	
  8075                           l2206:	
  8076  01D5                     	movf	((___fladd@bexp)),w
  8077  01D5  083A               	btfsc	status,2
  8078  01D6  1903               	goto	u2591
  8079  01D7  29D9               	goto	u2590
  8080  01D8  29DA               u2591:
  8081  01D9                     	goto	l2216
  8082  01D9  29EB               u2590:
  8083  01DA                     	line	30
  8084                           	
  8085                           l2208:	
  8086  01DA                     		incf	((___fladd@bexp)),w
  8087  01DA  0A3A               	btfss	status,2
  8088  01DB  1D03               	goto	u2601
  8089  01DC  29DE               	goto	u2600
  8090  01DD  29DF               u2601:
  8091  01DE                     	goto	l2212
  8092  01DE  29E8               u2600:
  8093  01DF                     	line	32
  8094                           	
  8095                           l2210:	
  8096  01DF                     	movlw	0x0
  8097  01DF  3000               	movwf	(___fladd@b+3)
  8098  01E0  00A7               	movlw	0x0
  8099  01E1  3000               	movwf	(___fladd@b+2)
  8100  01E2  00A6               	movlw	0x0
  8101  01E3  3000               	movwf	(___fladd@b+1)
  8102  01E4  00A5               	movlw	0x0
  8103  01E5  3000               	movwf	(___fladd@b)
  8104  01E6  00A4               
  8105                           	goto	l2212
  8106  01E7  29E8               	line	33
  8107                           	
  8108                           l614:	
  8109  01E8                     	line	35
  8110                           	
  8111                           l2212:	
  8112  01E8                     	bsf	(___fladd@b)+(23/8),(23)&7
  8113  01E8  17A6               	line	37
  8114                           	
  8115                           l2214:	
  8116  01E9                     	clrf	0+(___fladd@b)+03h
  8117  01E9  01A7               	line	38
  8118                           	goto	l2218
  8119  01EA  29F4               	line	39
  8120                           	
  8121                           l613:	
  8122  01EB                     	line	41
  8123                           	
  8124                           l2216:	
  8125  01EB                     	movlw	0x0
  8126  01EB  3000               	movwf	(___fladd@b+3)
  8127  01EC  00A7               	movlw	0x0
  8128  01ED  3000               	movwf	(___fladd@b+2)
  8129  01EE  00A6               	movlw	0x0
  8130  01EF  3000               	movwf	(___fladd@b+1)
  8131  01F0  00A5               	movlw	0x0
  8132  01F1  3000               	movwf	(___fladd@b)
  8133  01F2  00A4               
  8134                           	goto	l2218
  8135  01F3  29F4               	line	42
  8136                           	
  8137                           l615:	
  8138  01F4                     	line	44
  8139                           	
  8140                           l2218:	
  8141  01F4                     	movf	0+(___fladd@a)+03h,w
  8142  01F4  082B               	andlw	080h
  8143  01F5  3980               	movwf	(??___fladd+0)+0
  8144  01F6  00AC               	movf	(??___fladd+0)+0,w
  8145  01F7  082C               	movwf	(___fladd@aexp)
  8146  01F8  00B9               	line	46
  8147                           	
  8148                           l2220:	
  8149  01F9                     	movf	(___fladd@aexp),w
  8150  01F9  0839               	xorwf	(___fladd@signs),w
  8151  01FA  0638               	skipnz
  8152  01FB  1903               	goto	u2611
  8153  01FC  29FE               	goto	u2610
  8154  01FD  29FF               u2611:
  8155  01FE                     	goto	l2224
  8156  01FE  2A01               u2610:
  8157  01FF                     	line	47
  8158                           	
  8159                           l2222:	
  8160  01FF                     	bsf	(___fladd@signs)+(6/8),(6)&7
  8161  01FF  1738               	goto	l2224
  8162  0200  2A01               	line	48
  8163                           	
  8164                           l616:	
  8165  0201                     	line	49
  8166                           	
  8167                           l2224:	
  8168  0201                     	movf	0+(___fladd@a)+03h,w
  8169  0201  082B               	movwf	(??___fladd+0)+0
  8170  0202  00AC               	addwf	(??___fladd+0)+0,w
  8171  0203  072C               	movwf	(??___fladd+1)+0
  8172  0204  00AD               	movf	(??___fladd+1)+0,w
  8173  0205  082D               	movwf	(___fladd@aexp)
  8174  0206  00B9               	line	50
  8175                           	
  8176                           l2226:	
  8177  0207                     	btfss	0+(___fladd@a)+02h,(7)&7
  8178  0207  1FAA               	goto	u2621
  8179  0208  2A0A               	goto	u2620
  8180  0209  2A0B               u2621:
  8181  020A                     	goto	l2230
  8182  020A  2A0D               u2620:
  8183  020B                     	line	51
  8184                           	
  8185                           l2228:	
  8186  020B                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  8187  020B  1439               	goto	l2230
  8188  020C  2A0D               	line	52
  8189                           	
  8190                           l617:	
  8191  020D                     	line	55
  8192                           	
  8193                           l2230:	
  8194  020D                     	movf	((___fladd@aexp)),w
  8195  020D  0839               	btfsc	status,2
  8196  020E  1903               	goto	u2631
  8197  020F  2A11               	goto	u2630
  8198  0210  2A12               u2631:
  8199  0211                     	goto	l2240
  8200  0211  2A23               u2630:
  8201  0212                     	line	57
  8202                           	
  8203                           l2232:	
  8204  0212                     		incf	((___fladd@aexp)),w
  8205  0212  0A39               	btfss	status,2
  8206  0213  1D03               	goto	u2641
  8207  0214  2A16               	goto	u2640
  8208  0215  2A17               u2641:
  8209  0216                     	goto	l2236
  8210  0216  2A20               u2640:
  8211  0217                     	line	59
  8212                           	
  8213                           l2234:	
  8214  0217                     	movlw	0x0
  8215  0217  3000               	movwf	(___fladd@a+3)
  8216  0218  00AB               	movlw	0x0
  8217  0219  3000               	movwf	(___fladd@a+2)
  8218  021A  00AA               	movlw	0x0
  8219  021B  3000               	movwf	(___fladd@a+1)
  8220  021C  00A9               	movlw	0x0
  8221  021D  3000               	movwf	(___fladd@a)
  8222  021E  00A8               
  8223                           	goto	l2236
  8224  021F  2A20               	line	60
  8225                           	
  8226                           l619:	
  8227  0220                     	line	62
  8228                           	
  8229                           l2236:	
  8230  0220                     	bsf	(___fladd@a)+(23/8),(23)&7
  8231  0220  17AA               	line	64
  8232                           	
  8233                           l2238:	
  8234  0221                     	clrf	0+(___fladd@a)+03h
  8235  0221  01AB               	line	65
  8236                           	goto	l620
  8237  0222  2A2B               	line	66
  8238                           	
  8239                           l618:	
  8240  0223                     	line	68
  8241                           	
  8242                           l2240:	
  8243  0223                     	movlw	0x0
  8244  0223  3000               	movwf	(___fladd@a+3)
  8245  0224  00AB               	movlw	0x0
  8246  0225  3000               	movwf	(___fladd@a+2)
  8247  0226  00AA               	movlw	0x0
  8248  0227  3000               	movwf	(___fladd@a+1)
  8249  0228  00A9               	movlw	0x0
  8250  0229  3000               	movwf	(___fladd@a)
  8251  022A  00A8               
  8252                           	line	69
  8253                           	
  8254                           l620:	
  8255  022B                     	line	75
  8256                           	movf	(___fladd@bexp),w
  8257  022B  083A               	subwf	(___fladd@aexp),w
  8258  022C  0239               	skipnc
  8259  022D  1803               	goto	u2651
  8260  022E  2A30               	goto	u2650
  8261  022F  2A31               u2651:
  8262  0230                     	goto	l2276
  8263  0230  2A77               u2650:
  8264  0231                     	line	77
  8265                           	
  8266                           l2242:	
  8267  0231                     	btfss	(___fladd@signs),(6)&7
  8268  0231  1F38               	goto	u2661
  8269  0232  2A34               	goto	u2660
  8270  0233  2A35               u2661:
  8271  0234                     	goto	l2246
  8272  0234  2A3A               u2660:
  8273  0235                     	line	78
  8274                           	
  8275                           l2244:	
  8276  0235                     	movlw	low(080h)
  8277  0235  3080               	movwf	(??___fladd+0)+0
  8278  0236  00AC               	movf	(??___fladd+0)+0,w
  8279  0237  082C               	xorwf	(___fladd@signs),f
  8280  0238  06B8               	goto	l2246
  8281  0239  2A3A               	line	79
  8282                           	
  8283                           l622:	
  8284  023A                     	line	81
  8285                           	
  8286                           l2246:	
  8287  023A                     	movf	(___fladd@bexp),w
  8288  023A  083A               	movwf	(??___fladd+0)+0
  8289  023B  00AC               	movf	(??___fladd+0)+0,w
  8290  023C  082C               	movwf	(___fladd@grs)
  8291  023D  00BB               	line	82
  8292                           	
  8293                           l2248:	
  8294  023E                     	movf	(___fladd@aexp),w
  8295  023E  0839               	movwf	(??___fladd+0)+0
  8296  023F  00AC               	movf	(??___fladd+0)+0,w
  8297  0240  082C               	movwf	(___fladd@bexp)
  8298  0241  00BA               	line	83
  8299                           	
  8300                           l2250:	
  8301  0242                     	movf	(___fladd@grs),w
  8302  0242  083B               	movwf	(??___fladd+0)+0
  8303  0243  00AC               	movf	(??___fladd+0)+0,w
  8304  0244  082C               	movwf	(___fladd@aexp)
  8305  0245  00B9               	line	84
  8306                           	
  8307                           l2252:	
  8308  0246                     	movf	(___fladd@b),w
  8309  0246  0824               	movwf	(??___fladd+0)+0
  8310  0247  00AC               	movf	(??___fladd+0)+0,w
  8311  0248  082C               	movwf	(___fladd@grs)
  8312  0249  00BB               	line	85
  8313                           	
  8314                           l2254:	
  8315  024A                     	movf	(___fladd@a),w
  8316  024A  0828               	movwf	(??___fladd+0)+0
  8317  024B  00AC               	movf	(??___fladd+0)+0,w
  8318  024C  082C               	movwf	(___fladd@b)
  8319  024D  00A4               	line	86
  8320                           	
  8321                           l2256:	
  8322  024E                     	movf	(___fladd@grs),w
  8323  024E  083B               	movwf	(??___fladd+0)+0
  8324  024F  00AC               	movf	(??___fladd+0)+0,w
  8325  0250  082C               	movwf	(___fladd@a)
  8326  0251  00A8               	line	87
  8327                           	
  8328                           l2258:	
  8329  0252                     	movf	0+(___fladd@b)+01h,w
  8330  0252  0825               	movwf	(??___fladd+0)+0
  8331  0253  00AC               	movf	(??___fladd+0)+0,w
  8332  0254  082C               	movwf	(___fladd@grs)
  8333  0255  00BB               	line	88
  8334                           	
  8335                           l2260:	
  8336  0256                     	movf	0+(___fladd@a)+01h,w
  8337  0256  0829               	movwf	(??___fladd+0)+0
  8338  0257  00AC               	movf	(??___fladd+0)+0,w
  8339  0258  082C               	movwf	0+(___fladd@b)+01h
  8340  0259  00A5               	line	89
  8341                           	
  8342                           l2262:	
  8343  025A                     	movf	(___fladd@grs),w
  8344  025A  083B               	movwf	(??___fladd+0)+0
  8345  025B  00AC               	movf	(??___fladd+0)+0,w
  8346  025C  082C               	movwf	0+(___fladd@a)+01h
  8347  025D  00A9               	line	90
  8348                           	
  8349                           l2264:	
  8350  025E                     	movf	0+(___fladd@b)+02h,w
  8351  025E  0826               	movwf	(??___fladd+0)+0
  8352  025F  00AC               	movf	(??___fladd+0)+0,w
  8353  0260  082C               	movwf	(___fladd@grs)
  8354  0261  00BB               	line	91
  8355                           	
  8356                           l2266:	
  8357  0262                     	movf	0+(___fladd@a)+02h,w
  8358  0262  082A               	movwf	(??___fladd+0)+0
  8359  0263  00AC               	movf	(??___fladd+0)+0,w
  8360  0264  082C               	movwf	0+(___fladd@b)+02h
  8361  0265  00A6               	line	92
  8362                           	
  8363                           l2268:	
  8364  0266                     	movf	(___fladd@grs),w
  8365  0266  083B               	movwf	(??___fladd+0)+0
  8366  0267  00AC               	movf	(??___fladd+0)+0,w
  8367  0268  082C               	movwf	0+(___fladd@a)+02h
  8368  0269  00AA               	line	93
  8369                           	
  8370                           l2270:	
  8371  026A                     	movf	0+(___fladd@b)+03h,w
  8372  026A  0827               	movwf	(??___fladd+0)+0
  8373  026B  00AC               	movf	(??___fladd+0)+0,w
  8374  026C  082C               	movwf	(___fladd@grs)
  8375  026D  00BB               	line	94
  8376                           	
  8377                           l2272:	
  8378  026E                     	movf	0+(___fladd@a)+03h,w
  8379  026E  082B               	movwf	(??___fladd+0)+0
  8380  026F  00AC               	movf	(??___fladd+0)+0,w
  8381  0270  082C               	movwf	0+(___fladd@b)+03h
  8382  0271  00A7               	line	95
  8383                           	
  8384                           l2274:	
  8385  0272                     	movf	(___fladd@grs),w
  8386  0272  083B               	movwf	(??___fladd+0)+0
  8387  0273  00AC               	movf	(??___fladd+0)+0,w
  8388  0274  082C               	movwf	0+(___fladd@a)+03h
  8389  0275  00AB               	goto	l2276
  8390  0276  2A77               	line	96
  8391                           	
  8392                           l621:	
  8393  0277                     	line	98
  8394                           	
  8395                           l2276:	
  8396  0277                     	clrf	(___fladd@grs)
  8397  0277  01BB               	line	100
  8398                           	
  8399                           l2278:	
  8400  0278                     	movf	(___fladd@bexp),w
  8401  0278  083A               	movwf	(??___fladd+0)+0
  8402  0279  00AC               	clrf	(??___fladd+0)+0+1
  8403  027A  01AD               	comf	(??___fladd+0)+0,f
  8404  027B  09AC               	comf	(??___fladd+0)+1,f
  8405  027C  09AD               	incf	(??___fladd+0)+0,f
  8406  027D  0AAC               	skipnz
  8407  027E  1903               	incf	(??___fladd+0)+1,f
  8408  027F  0AAD               	movf	(___fladd@aexp),w
  8409  0280  0839               	addwf	0+(??___fladd+0)+0,w
  8410  0281  072C               	movwf	(??___fladd+2)+0
  8411  0282  00AE               	movf	1+(??___fladd+0)+0,w
  8412  0283  082D               	skipnc
  8413  0284  1803               	incf	1+(??___fladd+0)+0,w
  8414  0285  0A2D               	movwf	((??___fladd+2)+0)+1
  8415  0286  00AF               	movf	1+(??___fladd+2)+0,w
  8416  0287  082F               	xorlw	80h
  8417  0288  3A80               	movwf	btemp+1
  8418  0289  00FF               	movlw	(0)^80h
  8419  028A  3080               	subwf	btemp+1,w
  8420  028B  027F               	skipz
  8421  028C  1D03               	goto	u2675
  8422  028D  2A90               	movlw	01Ah
  8423  028E  301A               	subwf	0+(??___fladd+2)+0,w
  8424  028F  022E               u2675:
  8425  0290                     
  8426                           	skipc
  8427  0290  1C03               	goto	u2671
  8428  0291  2A93               	goto	u2670
  8429  0292  2A94               u2671:
  8430  0293                     	goto	l2294
  8431  0293  2AD5               u2670:
  8432  0294                     	line	101
  8433                           	
  8434                           l2280:	
  8435  0294                     	bcf	status, 5	;RP0=0, select bank0
  8436  0294  1283               	bcf	status, 6	;RP1=0, select bank0
  8437  0295  1303               	movf	(___fladd@b+3),w
  8438  0296  0827               	iorwf	(___fladd@b+2),w
  8439  0297  0426               	iorwf	(___fladd@b+1),w
  8440  0298  0425               	iorwf	(___fladd@b),w
  8441  0299  0424               	skipz
  8442  029A  1D03               	goto	u2681
  8443  029B  2A9D               	goto	u2680
  8444  029C  2A9F               u2681:
  8445  029D                     	movlw	1
  8446  029D  3001               	goto	u2690
  8447  029E  2AA0               u2680:
  8448  029F                     	movlw	0
  8449  029F  3000               u2690:
  8450  02A0                     	movwf	(??___fladd+0)+0
  8451  02A0  00AC               	movf	(??___fladd+0)+0,w
  8452  02A1  082C               	movwf	(___fladd@grs)
  8453  02A2  00BB               	line	102
  8454                           	movlw	high highword(0)
  8455  02A3  3000               	movwf	(___fladd@b+3)
  8456  02A4  00A7               	movlw	low highword(0)
  8457  02A5  3000               	movwf	(___fladd@b+2)
  8458  02A6  00A6               	movlw	high(0)
  8459  02A7  3000               	movwf	(___fladd@b+1)
  8460  02A8  00A5               	movlw	low(0)
  8461  02A9  3000               	movwf	(___fladd@b)
  8462  02AA  00A4               
  8463                           	line	103
  8464                           	movf	(___fladd@aexp),w
  8465  02AB  0839               	movwf	(??___fladd+0)+0
  8466  02AC  00AC               	movf	(??___fladd+0)+0,w
  8467  02AD  082C               	movwf	(___fladd@bexp)
  8468  02AE  00BA               	line	104
  8469                           	goto	l624
  8470  02AF  2ADE               	line	105
  8471                           	
  8472                           l623:	
  8473  02B0                     	line	106
  8474                           	goto	l2294
  8475  02B0  2AD5               	
  8476                           l626:	
  8477  02B1                     	line	109
  8478                           	btfss	(___fladd@grs),(0)&7
  8479  02B1  1C3B               	goto	u2701
  8480  02B2  2AB4               	goto	u2700
  8481  02B3  2AB5               u2701:
  8482  02B4                     	goto	l2284
  8483  02B4  2ABE               u2700:
  8484  02B5                     	line	110
  8485                           	
  8486                           l2282:	
  8487  02B5                     	movf	(___fladd@grs),w
  8488  02B5  083B               	movwf	(??___fladd+0)+0
  8489  02B6  00AC               	clrc
  8490  02B7  1003               	rrf	(??___fladd+0)+0,w
  8491  02B8  0C2C               	iorlw	01h
  8492  02B9  3801               	movwf	(??___fladd+1)+0
  8493  02BA  00AD               	movf	(??___fladd+1)+0,w
  8494  02BB  082D               	movwf	(___fladd@grs)
  8495  02BC  00BB               	line	111
  8496                           	goto	l2286
  8497  02BD  2AC1               	line	112
  8498                           	
  8499                           l627:	
  8500  02BE                     	line	113
  8501                           	
  8502                           l2284:	
  8503  02BE                     	clrc
  8504  02BE  1003               	rrf	(___fladd@grs),f
  8505  02BF  0CBB               
  8506                           	goto	l2286
  8507  02C0  2AC1               	line	114
  8508                           	
  8509                           l628:	
  8510  02C1                     	line	115
  8511                           	
  8512                           l2286:	
  8513  02C1                     	btfss	(___fladd@b),(0)&7
  8514  02C1  1C24               	goto	u2711
  8515  02C2  2AC4               	goto	u2710
  8516  02C3  2AC5               u2711:
  8517  02C4                     	goto	l2290
  8518  02C4  2AC7               u2710:
  8519  02C5                     	line	116
  8520                           	
  8521                           l2288:	
  8522  02C5                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8523  02C5  17BB               	goto	l2290
  8524  02C6  2AC7               	line	117
  8525                           	
  8526                           l629:	
  8527  02C7                     	line	118
  8528                           	
  8529                           l2290:	
  8530  02C7                     	movlw	01h
  8531  02C7  3001               	movwf	(??___fladd+0)+0
  8532  02C8  00AC               u2725:
  8533  02C9                     	rlf	(___fladd@b+3),w
  8534  02C9  0D27               	rrf	(___fladd@b+3),f
  8535  02CA  0CA7               	rrf	(___fladd@b+2),f
  8536  02CB  0CA6               	rrf	(___fladd@b+1),f
  8537  02CC  0CA5               	rrf	(___fladd@b),f
  8538  02CD  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8539  02CE  0BAC               	goto	u2725
  8540  02CF  2AC9               
  8541                           	line	119
  8542                           	
  8543                           l2292:	
  8544  02D0                     	movlw	low(01h)
  8545  02D0  3001               	movwf	(??___fladd+0)+0
  8546  02D1  00AC               	movf	(??___fladd+0)+0,w
  8547  02D2  082C               	addwf	(___fladd@bexp),f
  8548  02D3  07BA               	goto	l2294
  8549  02D4  2AD5               	line	120
  8550                           	
  8551                           l625:	
  8552  02D5                     	line	106
  8553                           	
  8554                           l2294:	
  8555  02D5                     	bcf	status, 5	;RP0=0, select bank0
  8556  02D5  1283               	bcf	status, 6	;RP1=0, select bank0
  8557  02D6  1303               	movf	(___fladd@aexp),w
  8558  02D7  0839               	subwf	(___fladd@bexp),w
  8559  02D8  023A               	skipc
  8560  02D9  1C03               	goto	u2731
  8561  02DA  2ADC               	goto	u2730
  8562  02DB  2ADD               u2731:
  8563  02DC                     	goto	l626
  8564  02DC  2AB1               u2730:
  8565  02DD                     	goto	l624
  8566  02DD  2ADE               	
  8567                           l630:	
  8568  02DE                     	line	121
  8569                           	
  8570                           l624:	
  8571  02DE                     	line	124
  8572                           	btfsc	(___fladd@signs),(6)&7
  8573  02DE  1B38               	goto	u2741
  8574  02DF  2AE1               	goto	u2740
  8575  02E0  2AE2               u2741:
  8576  02E1                     	goto	l2320
  8577  02E1  2B31               u2740:
  8578  02E2                     	line	127
  8579                           	
  8580                           l2296:	
  8581  02E2                     	movf	((___fladd@bexp)),w
  8582  02E2  083A               	btfss	status,2
  8583  02E3  1D03               	goto	u2751
  8584  02E4  2AE6               	goto	u2750
  8585  02E5  2AE7               u2751:
  8586  02E6                     	goto	l2302
  8587  02E6  2AF1               u2750:
  8588  02E7                     	line	128
  8589                           	
  8590                           l2298:	
  8591  02E7                     	movlw	0x0
  8592  02E7  3000               	movwf	(?___fladd+3)
  8593  02E8  00A7               	movlw	0x0
  8594  02E9  3000               	movwf	(?___fladd+2)
  8595  02EA  00A6               	movlw	0x0
  8596  02EB  3000               	movwf	(?___fladd+1)
  8597  02EC  00A5               	movlw	0x0
  8598  02ED  3000               	movwf	(?___fladd)
  8599  02EE  00A4               
  8600                           	goto	l633
  8601  02EF  2C7D               	
  8602                           l2300:	
  8603  02F0                     	goto	l633
  8604  02F0  2C7D               	line	129
  8605                           	
  8606                           l632:	
  8607  02F1                     	line	132
  8608                           	
  8609                           l2302:	
  8610  02F1                     	movf	(___fladd@a),w
  8611  02F1  0828               	addwf	(___fladd@b),f
  8612  02F2  07A4               	movf	(___fladd@a+1),w
  8613  02F3  0829               	clrz
  8614  02F4  1103               	skipnc
  8615  02F5  1803               	addlw	1
  8616  02F6  3E01               	skipnz
  8617  02F7  1903               	goto	u2761
  8618  02F8  2AFA               	addwf	(___fladd@b+1),f
  8619  02F9  07A5               u2761:
  8620  02FA                     	movf	(___fladd@a+2),w
  8621  02FA  082A               	clrz
  8622  02FB  1103               	skipnc
  8623  02FC  1803               	addlw	1
  8624  02FD  3E01               	skipnz
  8625  02FE  1903               	goto	u2762
  8626  02FF  2B01               	addwf	(___fladd@b+2),f
  8627  0300  07A6               u2762:
  8628  0301                     	movf	(___fladd@a+3),w
  8629  0301  082B               	clrz
  8630  0302  1103               	skipnc
  8631  0303  1803               	addlw	1
  8632  0304  3E01               	skipnz
  8633  0305  1903               	goto	u2763
  8634  0306  2B08               	addwf	(___fladd@b+3),f
  8635  0307  07A7               u2763:
  8636  0308                     
  8637                           	line	134
  8638                           	
  8639                           l2304:	
  8640  0308                     	btfss	(___fladd@b+3),(24)&7
  8641  0308  1C27               	goto	u2771
  8642  0309  2B0B               	goto	u2770
  8643  030A  2B0C               u2771:
  8644  030B                     	goto	l2354
  8645  030B  2BFA               u2770:
  8646  030C                     	line	135
  8647                           	
  8648                           l2306:	
  8649  030C                     	btfss	(___fladd@grs),(0)&7
  8650  030C  1C3B               	goto	u2781
  8651  030D  2B0F               	goto	u2780
  8652  030E  2B10               u2781:
  8653  030F                     	goto	l2310
  8654  030F  2B19               u2780:
  8655  0310                     	line	136
  8656                           	
  8657                           l2308:	
  8658  0310                     	movf	(___fladd@grs),w
  8659  0310  083B               	movwf	(??___fladd+0)+0
  8660  0311  00AC               	clrc
  8661  0312  1003               	rrf	(??___fladd+0)+0,w
  8662  0313  0C2C               	iorlw	01h
  8663  0314  3801               	movwf	(??___fladd+1)+0
  8664  0315  00AD               	movf	(??___fladd+1)+0,w
  8665  0316  082D               	movwf	(___fladd@grs)
  8666  0317  00BB               	line	137
  8667                           	goto	l2312
  8668  0318  2B1C               	line	138
  8669                           	
  8670                           l635:	
  8671  0319                     	line	139
  8672                           	
  8673                           l2310:	
  8674  0319                     	clrc
  8675  0319  1003               	rrf	(___fladd@grs),f
  8676  031A  0CBB               
  8677                           	goto	l2312
  8678  031B  2B1C               	line	140
  8679                           	
  8680                           l636:	
  8681  031C                     	line	141
  8682                           	
  8683                           l2312:	
  8684  031C                     	btfss	(___fladd@b),(0)&7
  8685  031C  1C24               	goto	u2791
  8686  031D  2B1F               	goto	u2790
  8687  031E  2B20               u2791:
  8688  031F                     	goto	l2316
  8689  031F  2B22               u2790:
  8690  0320                     	line	142
  8691                           	
  8692                           l2314:	
  8693  0320                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8694  0320  17BB               	goto	l2316
  8695  0321  2B22               	line	143
  8696                           	
  8697                           l637:	
  8698  0322                     	line	144
  8699                           	
  8700                           l2316:	
  8701  0322                     	movlw	01h
  8702  0322  3001               	movwf	(??___fladd+0)+0
  8703  0323  00AC               u2805:
  8704  0324                     	rlf	(___fladd@b+3),w
  8705  0324  0D27               	rrf	(___fladd@b+3),f
  8706  0325  0CA7               	rrf	(___fladd@b+2),f
  8707  0326  0CA6               	rrf	(___fladd@b+1),f
  8708  0327  0CA5               	rrf	(___fladd@b),f
  8709  0328  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8710  0329  0BAC               	goto	u2805
  8711  032A  2B24               
  8712                           	line	145
  8713                           	
  8714                           l2318:	
  8715  032B                     	movlw	low(01h)
  8716  032B  3001               	movwf	(??___fladd+0)+0
  8717  032C  00AC               	movf	(??___fladd+0)+0,w
  8718  032D  082C               	addwf	(___fladd@bexp),f
  8719  032E  07BA               	goto	l2354
  8720  032F  2BFA               	line	146
  8721                           	
  8722                           l634:	
  8723  0330                     	line	148
  8724                           	goto	l2354
  8725  0330  2BFA               	line	149
  8726                           	
  8727                           l631:	
  8728  0331                     	line	153
  8729                           	
  8730                           l2320:	
  8731  0331                     	movf	(___fladd@b+3),w
  8732  0331  0827               	xorlw	80h
  8733  0332  3A80               	movwf	btemp+1
  8734  0333  00FF               	movf	(___fladd@a+3),w
  8735  0334  082B               	xorlw	80h
  8736  0335  3A80               	subwf	btemp+1,w
  8737  0336  027F               	
  8738                           	skipz
  8739  0337  1D03               	goto	u2813
  8740  0338  2B43               	movf	(___fladd@a+2),w
  8741  0339  082A               	subwf	(___fladd@b+2),w
  8742  033A  0226               	skipz
  8743  033B  1D03               	goto	u2813
  8744  033C  2B43               	movf	(___fladd@a+1),w
  8745  033D  0829               	subwf	(___fladd@b+1),w
  8746  033E  0225               	skipz
  8747  033F  1D03               	goto	u2813
  8748  0340  2B43               	movf	(___fladd@a),w
  8749  0341  0828               	subwf	(___fladd@b),w
  8750  0342  0224               u2813:
  8751  0343                     	skipnc
  8752  0343  1803               	goto	u2811
  8753  0344  2B46               	goto	u2810
  8754  0345  2B47               u2811:
  8755  0346                     	goto	l2330
  8756  0346  2BAD               u2810:
  8757  0347                     	line	154
  8758                           	
  8759                           l2322:	
  8760  0347                     	movlw	0FFh
  8761  0347  30FF               	movwf	((??___fladd+0)+0)
  8762  0348  00AC               	movlw	0FFh
  8763  0349  30FF               	movwf	((??___fladd+0)+0+1)
  8764  034A  00AD               	movlw	0FFh
  8765  034B  30FF               	movwf	((??___fladd+0)+0+2)
  8766  034C  00AE               	movlw	0FFh
  8767  034D  30FF               	movwf	((??___fladd+0)+0+3)
  8768  034E  00AF               	movf	(___fladd@a),w
  8769  034F  0828               	movwf	(??___fladd+4)+0
  8770  0350  00B0               	movf	(___fladd@a+1),w
  8771  0351  0829               	movwf	((??___fladd+4)+0+1)
  8772  0352  00B1               	movf	(___fladd@a+2),w
  8773  0353  082A               	movwf	((??___fladd+4)+0+2)
  8774  0354  00B2               	movf	(___fladd@a+3),w
  8775  0355  082B               	movwf	((??___fladd+4)+0+3)
  8776  0356  00B3               	comf	(___fladd@b),w
  8777  0357  0924               	movwf	(??___fladd+8)+0
  8778  0358  00B4               	comf	(___fladd@b+1),w
  8779  0359  0925               	movwf	((??___fladd+8)+0+1)
  8780  035A  00B5               	comf	(___fladd@b+2),w
  8781  035B  0926               	movwf	((??___fladd+8)+0+2)
  8782  035C  00B6               	comf	(___fladd@b+3),w
  8783  035D  0927               	movwf	((??___fladd+8)+0+3)
  8784  035E  00B7               	incf	(??___fladd+8)+0,f
  8785  035F  0AB4               	skipnz
  8786  0360  1903               	incf	((??___fladd+8)+0+1),f
  8787  0361  0AB5               	skipnz
  8788  0362  1903               	incf	((??___fladd+8)+0+2),f
  8789  0363  0AB6               	skipnz
  8790  0364  1903               	incf	((??___fladd+8)+0+3),f
  8791  0365  0AB7               	movf	0+(??___fladd+8)+0,w
  8792  0366  0834               	addwf	(??___fladd+4)+0,f
  8793  0367  07B0               	movf	1+(??___fladd+8)+0,w
  8794  0368  0835               	skipnc
  8795  0369  1803               	incfsz	1+(??___fladd+8)+0,w
  8796  036A  0F35               	goto	u2820
  8797  036B  2B6D               	goto	u2821
  8798  036C  2B6E               u2820:
  8799  036D                     	addwf	(??___fladd+4)+1,f
  8800  036D  07B1               u2821:
  8801  036E                     	movf	2+(??___fladd+8)+0,w
  8802  036E  0836               	skipnc
  8803  036F  1803               	incfsz	2+(??___fladd+8)+0,w
  8804  0370  0F36               	goto	u2822
  8805  0371  2B73               	goto	u2823
  8806  0372  2B74               u2822:
  8807  0373                     	addwf	(??___fladd+4)+2,f
  8808  0373  07B2               u2823:
  8809  0374                     	movf	3+(??___fladd+8)+0,w
  8810  0374  0837               	skipnc
  8811  0375  1803               	incf	3+(??___fladd+8)+0,w
  8812  0376  0A37               	addwf	(??___fladd+4)+3,f
  8813  0377  07B3               	movf	0+(??___fladd+4)+0,w
  8814  0378  0830               	addwf	(??___fladd+0)+0,f
  8815  0379  07AC               	movf	1+(??___fladd+4)+0,w
  8816  037A  0831               	skipnc
  8817  037B  1803               	incfsz	1+(??___fladd+4)+0,w
  8818  037C  0F31               	goto	u2830
  8819  037D  2B7F               	goto	u2831
  8820  037E  2B80               u2830:
  8821  037F                     	addwf	(??___fladd+0)+1,f
  8822  037F  07AD               u2831:
  8823  0380                     	movf	2+(??___fladd+4)+0,w
  8824  0380  0832               	skipnc
  8825  0381  1803               	incfsz	2+(??___fladd+4)+0,w
  8826  0382  0F32               	goto	u2832
  8827  0383  2B85               	goto	u2833
  8828  0384  2B86               u2832:
  8829  0385                     	addwf	(??___fladd+0)+2,f
  8830  0385  07AE               u2833:
  8831  0386                     	movf	3+(??___fladd+4)+0,w
  8832  0386  0833               	skipnc
  8833  0387  1803               	incf	3+(??___fladd+4)+0,w
  8834  0388  0A33               	addwf	(??___fladd+0)+3,f
  8835  0389  07AF               	movf	3+(??___fladd+0)+0,w
  8836  038A  082F               	movwf	(___fladd@b+3)
  8837  038B  00A7               	movf	2+(??___fladd+0)+0,w
  8838  038C  082E               	movwf	(___fladd@b+2)
  8839  038D  00A6               	movf	1+(??___fladd+0)+0,w
  8840  038E  082D               	movwf	(___fladd@b+1)
  8841  038F  00A5               	movf	0+(??___fladd+0)+0,w
  8842  0390  082C               	movwf	(___fladd@b)
  8843  0391  00A4               
  8844                           	line	155
  8845                           	movlw	low(080h)
  8846  0392  3080               	movwf	(??___fladd+0)+0
  8847  0393  00AC               	movf	(??___fladd+0)+0,w
  8848  0394  082C               	xorwf	(___fladd@signs),f
  8849  0395  06B8               	line	156
  8850                           	
  8851                           l2324:	
  8852  0396                     	comf	(___fladd@grs),f
  8853  0396  09BB               	incf	(___fladd@grs),f
  8854  0397  0ABB               	line	157
  8855                           	
  8856                           l2326:	
  8857  0398                     	movf	((___fladd@grs)),w
  8858  0398  083B               	btfss	status,2
  8859  0399  1D03               	goto	u2841
  8860  039A  2B9C               	goto	u2840
  8861  039B  2B9D               u2841:
  8862  039C                     	goto	l641
  8863  039C  2BBB               u2840:
  8864  039D                     	line	158
  8865                           	
  8866                           l2328:	
  8867  039D                     	movlw	01h
  8868  039D  3001               	addwf	(___fladd@b),f
  8869  039E  07A4               	movlw	0
  8870  039F  3000               	skipnc
  8871  03A0  1803               movlw 1
  8872  03A1  3001               	addwf	(___fladd@b+1),f
  8873  03A2  07A5               	movlw	0
  8874  03A3  3000               	skipnc
  8875  03A4  1803               movlw 1
  8876  03A5  3001               	addwf	(___fladd@b+2),f
  8877  03A6  07A6               	movlw	0
  8878  03A7  3000               	skipnc
  8879  03A8  1803               movlw 1
  8880  03A9  3001               	addwf	(___fladd@b+3),f
  8881  03AA  07A7               	goto	l641
  8882  03AB  2BBB               	line	159
  8883                           	
  8884                           l640:	
  8885  03AC                     	line	160
  8886                           	goto	l641
  8887  03AC  2BBB               	line	161
  8888                           	
  8889                           l639:	
  8890  03AD                     	line	162
  8891                           	
  8892                           l2330:	
  8893  03AD                     	movf	(___fladd@a),w
  8894  03AD  0828               	subwf	(___fladd@b),f
  8895  03AE  02A4               	movf	(___fladd@a+1),w
  8896  03AF  0829               	skipc
  8897  03B0  1C03               	incfsz	(___fladd@a+1),w
  8898  03B1  0F29               	subwf	(___fladd@b+1),f
  8899  03B2  02A5               	movf	(___fladd@a+2),w
  8900  03B3  082A               	skipc
  8901  03B4  1C03               	incfsz	(___fladd@a+2),w
  8902  03B5  0F2A               	subwf	(___fladd@b+2),f
  8903  03B6  02A6               	movf	(___fladd@a+3),w
  8904  03B7  082B               	skipc
  8905  03B8  1C03               	incfsz	(___fladd@a+3),w
  8906  03B9  0F2B               	subwf	(___fladd@b+3),f
  8907  03BA  02A7               	line	163
  8908                           	
  8909                           l641:	
  8910  03BB                     	line	166
  8911                           	movf	(___fladd@b+3),w
  8912  03BB  0827               	iorwf	(___fladd@b+2),w
  8913  03BC  0426               	iorwf	(___fladd@b+1),w
  8914  03BD  0425               	iorwf	(___fladd@b),w
  8915  03BE  0424               	skipz
  8916  03BF  1D03               	goto	u2851
  8917  03C0  2BC2               	goto	u2850
  8918  03C1  2BC3               u2851:
  8919  03C2                     	goto	l2352
  8920  03C2  2BF4               u2850:
  8921  03C3                     	
  8922                           l2332:	
  8923  03C3                     	movf	((___fladd@grs)),w
  8924  03C3  083B               	btfss	status,2
  8925  03C4  1D03               	goto	u2861
  8926  03C5  2BC7               	goto	u2860
  8927  03C6  2BC8               u2861:
  8928  03C7                     	goto	l2352
  8929  03C7  2BF4               u2860:
  8930  03C8                     	line	167
  8931                           	
  8932                           l2334:	
  8933  03C8                     	movlw	0x0
  8934  03C8  3000               	movwf	(?___fladd+3)
  8935  03C9  00A7               	movlw	0x0
  8936  03CA  3000               	movwf	(?___fladd+2)
  8937  03CB  00A6               	movlw	0x0
  8938  03CC  3000               	movwf	(?___fladd+1)
  8939  03CD  00A5               	movlw	0x0
  8940  03CE  3000               	movwf	(?___fladd)
  8941  03CF  00A4               
  8942                           	goto	l633
  8943  03D0  2C7D               	
  8944                           l2336:	
  8945  03D1                     	goto	l633
  8946  03D1  2C7D               	line	168
  8947                           	
  8948                           l642:	
  8949  03D2                     	line	171
  8950                           	goto	l2352
  8951  03D2  2BF4               	
  8952                           l644:	
  8953  03D3                     	line	172
  8954                           	
  8955                           l2338:	
  8956  03D3                     	movlw	01h
  8957  03D3  3001               	movwf	(??___fladd+0)+0
  8958  03D4  00AC               u2875:
  8959  03D5                     	clrc
  8960  03D5  1003               	rlf	(___fladd@b),f
  8961  03D6  0DA4               	rlf	(___fladd@b+1),f
  8962  03D7  0DA5               	rlf	(___fladd@b+2),f
  8963  03D8  0DA6               	rlf	(___fladd@b+3),f
  8964  03D9  0DA7               	decfsz	(??___fladd+0)+0
  8965  03DA  0BAC               	goto	u2875
  8966  03DB  2BD5               	line	173
  8967                           	
  8968                           l2340:	
  8969  03DC                     	btfss	(___fladd@grs),(7)&7
  8970  03DC  1FBB               	goto	u2881
  8971  03DD  2BDF               	goto	u2880
  8972  03DE  2BE0               u2881:
  8973  03DF                     	goto	l645
  8974  03DF  2BE1               u2880:
  8975  03E0                     	line	174
  8976                           	
  8977                           l2342:	
  8978  03E0                     	bsf	(___fladd@b)+(0/8),(0)&7
  8979  03E0  1424               	line	175
  8980                           	
  8981                           l645:	
  8982  03E1                     	line	176
  8983                           	btfss	(___fladd@grs),(0)&7
  8984  03E1  1C3B               	goto	u2891
  8985  03E2  2BE4               	goto	u2890
  8986  03E3  2BE5               u2891:
  8987  03E4                     	goto	l2346
  8988  03E4  2BE8               u2890:
  8989  03E5                     	line	177
  8990                           	
  8991                           l2344:	
  8992  03E5                     	setc
  8993  03E5  1403               	rlf	(___fladd@grs),f
  8994  03E6  0DBB               	line	178
  8995                           	goto	l2348
  8996  03E7  2BEB               	line	179
  8997                           	
  8998                           l646:	
  8999  03E8                     	line	180
  9000                           	
  9001                           l2346:	
  9002  03E8                     	clrc
  9003  03E8  1003               	rlf	(___fladd@grs),f
  9004  03E9  0DBB               
  9005                           	goto	l2348
  9006  03EA  2BEB               	line	181
  9007                           	
  9008                           l647:	
  9009  03EB                     	line	182
  9010                           	
  9011                           l2348:	
  9012  03EB                     	movf	((___fladd@bexp)),w
  9013  03EB  083A               	btfsc	status,2
  9014  03EC  1903               	goto	u2901
  9015  03ED  2BEF               	goto	u2900
  9016  03EE  2BF0               u2901:
  9017  03EF                     	goto	l2352
  9018  03EF  2BF4               u2900:
  9019  03F0                     	line	183
  9020                           	
  9021                           l2350:	
  9022  03F0                     	movlw	01h
  9023  03F0  3001               	subwf	(___fladd@bexp),f
  9024  03F1  02BA               	goto	l2352
  9025  03F2  2BF4               	line	184
  9026                           	
  9027                           l648:	
  9028  03F3                     	goto	l2352
  9029  03F3  2BF4               	line	185
  9030                           	
  9031                           l643:	
  9032  03F4                     	line	171
  9033                           	
  9034                           l2352:	
  9035  03F4                     	btfss	(___fladd@b+2),(23)&7
  9036  03F4  1FA6               	goto	u2911
  9037  03F5  2BF7               	goto	u2910
  9038  03F6  2BF8               u2911:
  9039  03F7                     	goto	l2338
  9040  03F7  2BD3               u2910:
  9041  03F8                     	goto	l2354
  9042  03F8  2BFA               	
  9043                           l649:	
  9044  03F9                     	goto	l2354
  9045  03F9  2BFA               	line	186
  9046                           	
  9047                           l638:	
  9048  03FA                     	line	192
  9049                           	
  9050                           l2354:	
  9051  03FA                     	clrf	(___fladd@aexp)
  9052  03FA  01B9               	line	193
  9053                           	
  9054                           l2356:	
  9055  03FB                     	btfss	(___fladd@grs),(7)&7
  9056  03FB  1FBB               	goto	u2921
  9057  03FC  2BFE               	goto	u2920
  9058  03FD  2BFF               u2921:
  9059  03FE                     	goto	l2364
  9060  03FE  2C11               u2920:
  9061  03FF                     	line	194
  9062                           	
  9063                           l2358:	
  9064  03FF                     	movf	(___fladd@grs),w
  9065  03FF  083B               	andlw	07Fh
  9066  0400  397F               	btfsc	status,2
  9067  0401  1903               	goto	u2931
  9068  0402  2C04               	goto	u2930
  9069  0403  2C05               u2931:
  9070  0404                     	goto	l651
  9071  0404  2C08               u2930:
  9072  0405                     	line	195
  9073                           	
  9074                           l2360:	
  9075  0405                     	clrf	(___fladd@aexp)
  9076  0405  01B9               	incf	(___fladd@aexp),f
  9077  0406  0AB9               	line	196
  9078                           	goto	l2364
  9079  0407  2C11               	line	197
  9080                           	
  9081                           l651:	
  9082  0408                     	line	198
  9083                           	btfss	(___fladd@b),(0)&7
  9084  0408  1C24               	goto	u2941
  9085  0409  2C0B               	goto	u2940
  9086  040A  2C0C               u2941:
  9087  040B                     	goto	l2364
  9088  040B  2C11               u2940:
  9089  040C                     	line	199
  9090                           	
  9091                           l2362:	
  9092  040C                     	clrf	(___fladd@aexp)
  9093  040C  01B9               	incf	(___fladd@aexp),f
  9094  040D  0AB9               	goto	l2364
  9095  040E  2C11               	line	200
  9096                           	
  9097                           l653:	
  9098  040F                     	goto	l2364
  9099  040F  2C11               	line	201
  9100                           	
  9101                           l652:	
  9102  0410                     	goto	l2364
  9103  0410  2C11               	line	202
  9104                           	
  9105                           l650:	
  9106  0411                     	line	203
  9107                           	
  9108                           l2364:	
  9109  0411                     	movf	((___fladd@aexp)),w
  9110  0411  0839               	btfsc	status,2
  9111  0412  1903               	goto	u2951
  9112  0413  2C15               	goto	u2950
  9113  0414  2C16               u2951:
  9114  0415                     	goto	l654
  9115  0415  2C4C               u2950:
  9116  0416                     	line	204
  9117                           	
  9118                           l2366:	
  9119  0416                     	movlw	01h
  9120  0416  3001               	addwf	(___fladd@b),f
  9121  0417  07A4               	movlw	0
  9122  0418  3000               	skipnc
  9123  0419  1803               movlw 1
  9124  041A  3001               	addwf	(___fladd@b+1),f
  9125  041B  07A5               	movlw	0
  9126  041C  3000               	skipnc
  9127  041D  1803               movlw 1
  9128  041E  3001               	addwf	(___fladd@b+2),f
  9129  041F  07A6               	movlw	0
  9130  0420  3000               	skipnc
  9131  0421  1803               movlw 1
  9132  0422  3001               	addwf	(___fladd@b+3),f
  9133  0423  07A7               	line	205
  9134                           	
  9135                           l2368:	
  9136  0424                     	btfss	(___fladd@b+3),(24)&7
  9137  0424  1C27               	goto	u2961
  9138  0425  2C27               	goto	u2960
  9139  0426  2C28               u2961:
  9140  0427                     	goto	l654
  9141  0427  2C4C               u2960:
  9142  0428                     	line	206
  9143                           	
  9144                           l2370:	
  9145  0428                     	movf	(___fladd@b),w
  9146  0428  0824               	movwf	(??___fladd+0)+0
  9147  0429  00AC               	movf	(___fladd@b+1),w
  9148  042A  0825               	movwf	((??___fladd+0)+0+1)
  9149  042B  00AD               	movf	(___fladd@b+2),w
  9150  042C  0826               	movwf	((??___fladd+0)+0+2)
  9151  042D  00AE               	movf	(___fladd@b+3),w
  9152  042E  0827               	movwf	((??___fladd+0)+0+3)
  9153  042F  00AF               	movlw	01h
  9154  0430  3001               	movwf	(??___fladd+4)+0
  9155  0431  00B0               u2975:
  9156  0432                     	rlf	(??___fladd+0)+3,w
  9157  0432  0D2F               	rrf	(??___fladd+0)+3,f
  9158  0433  0CAF               	rrf	(??___fladd+0)+2,f
  9159  0434  0CAE               	rrf	(??___fladd+0)+1,f
  9160  0435  0CAD               	rrf	(??___fladd+0)+0,f
  9161  0436  0CAC               u2970:
  9162  0437                     	decfsz	(??___fladd+4)+0,f
  9163  0437  0BB0               	goto	u2975
  9164  0438  2C32               	movf	3+(??___fladd+0)+0,w
  9165  0439  082F               	movwf	(___fladd@b+3)
  9166  043A  00A7               	movf	2+(??___fladd+0)+0,w
  9167  043B  082E               	movwf	(___fladd@b+2)
  9168  043C  00A6               	movf	1+(??___fladd+0)+0,w
  9169  043D  082D               	movwf	(___fladd@b+1)
  9170  043E  00A5               	movf	0+(??___fladd+0)+0,w
  9171  043F  082C               	movwf	(___fladd@b)
  9172  0440  00A4               
  9173                           	line	207
  9174                           		incf	((___fladd@bexp)),w
  9175  0441  0A3A               	btfsc	status,2
  9176  0442  1903               	goto	u2981
  9177  0443  2C45               	goto	u2980
  9178  0444  2C46               u2981:
  9179  0445                     	goto	l654
  9180  0445  2C4C               u2980:
  9181  0446                     	line	208
  9182                           	
  9183                           l2372:	
  9184  0446                     	movlw	low(01h)
  9185  0446  3001               	movwf	(??___fladd+0)+0
  9186  0447  00AC               	movf	(??___fladd+0)+0,w
  9187  0448  082C               	addwf	(___fladd@bexp),f
  9188  0449  07BA               	goto	l654
  9189  044A  2C4C               	line	209
  9190                           	
  9191                           l656:	
  9192  044B                     	goto	l654
  9193  044B  2C4C               	line	210
  9194                           	
  9195                           l655:	
  9196  044C                     	line	211
  9197                           	
  9198                           l654:	
  9199  044C                     	line	215
  9200                           		incf	((___fladd@bexp)),w
  9201  044C  0A3A               	btfsc	status,2
  9202  044D  1903               	goto	u2991
  9203  044E  2C50               	goto	u2990
  9204  044F  2C51               u2991:
  9205  0450                     	goto	l2376
  9206  0450  2C57               u2990:
  9207  0451                     	
  9208                           l2374:	
  9209  0451                     	movf	((___fladd@bexp)),w
  9210  0451  083A               	btfss	status,2
  9211  0452  1D03               	goto	u3001
  9212  0453  2C55               	goto	u3000
  9213  0454  2C56               u3001:
  9214  0455                     	goto	l2382
  9215  0455  2C67               u3000:
  9216  0456                     	goto	l2376
  9217  0456  2C57               	
  9218                           l659:	
  9219  0457                     	line	216
  9220                           	
  9221                           l2376:	
  9222  0457                     	movlw	high highword(0)
  9223  0457  3000               	movwf	(___fladd@b+3)
  9224  0458  00A7               	movlw	low highword(0)
  9225  0459  3000               	movwf	(___fladd@b+2)
  9226  045A  00A6               	movlw	high(0)
  9227  045B  3000               	movwf	(___fladd@b+1)
  9228  045C  00A5               	movlw	low(0)
  9229  045D  3000               	movwf	(___fladd@b)
  9230  045E  00A4               
  9231                           	line	218
  9232                           	
  9233                           l2378:	
  9234  045F                     	movf	((___fladd@bexp)),w
  9235  045F  083A               	btfss	status,2
  9236  0460  1D03               	goto	u3011
  9237  0461  2C63               	goto	u3010
  9238  0462  2C64               u3011:
  9239  0463                     	goto	l2382
  9240  0463  2C67               u3010:
  9241  0464                     	line	219
  9242                           	
  9243                           l2380:	
  9244  0464                     	clrf	(___fladd@signs)
  9245  0464  01B8               	goto	l2382
  9246  0465  2C67               	line	220
  9247                           	
  9248                           l660:	
  9249  0466                     	goto	l2382
  9250  0466  2C67               	line	221
  9251                           	
  9252                           l657:	
  9253  0467                     	line	225
  9254                           	
  9255                           l2382:	
  9256  0467                     	btfss	(___fladd@bexp),(0)&7
  9257  0467  1C3A               	goto	u3021
  9258  0468  2C6A               	goto	u3020
  9259  0469  2C6B               u3021:
  9260  046A                     	goto	l2386
  9261  046A  2C6D               u3020:
  9262  046B                     	line	226
  9263                           	
  9264                           l2384:	
  9265  046B                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  9266  046B  17A6               	line	227
  9267                           	goto	l662
  9268  046C  2C71               	line	229
  9269                           	
  9270                           l661:	
  9271  046D                     	line	230
  9272                           	
  9273                           l2386:	
  9274  046D                     	movlw	low(07Fh)
  9275  046D  307F               	movwf	(??___fladd+0)+0
  9276  046E  00AC               	movf	(??___fladd+0)+0,w
  9277  046F  082C               	andwf	0+(___fladd@b)+02h,f
  9278  0470  05A6               	line	231
  9279                           	
  9280                           l662:	
  9281  0471                     	line	232
  9282                           	movf	(___fladd@bexp),w
  9283  0471  083A               	movwf	(??___fladd+0)+0
  9284  0472  00AC               	clrc
  9285  0473  1003               	rrf	(??___fladd+0)+0,w
  9286  0474  0C2C               	movwf	(??___fladd+1)+0
  9287  0475  00AD               	movf	(??___fladd+1)+0,w
  9288  0476  082D               	movwf	0+(___fladd@b)+03h
  9289  0477  00A7               	line	233
  9290                           	
  9291                           l2388:	
  9292  0478                     	btfss	(___fladd@signs),(7)&7
  9293  0478  1FB8               	goto	u3031
  9294  0479  2C7B               	goto	u3030
  9295  047A  2C7C               u3031:
  9296  047B                     	goto	l663
  9297  047B  2C7D               u3030:
  9298  047C                     	line	234
  9299                           	
  9300                           l2390:	
  9301  047C                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  9302  047C  17A7               	line	235
  9303                           	
  9304                           l663:	
  9305  047D                     	line	236
  9306                           	line	237
  9307                           	
  9308                           l633:	
  9309  047D                     	return
  9310  047D  0008               	opt stack 0
  9311                           GLOBAL	__end_of___fladd
  9312                           	__end_of___fladd:
  9313  047E                     	signat	___fladd,8316
  9314                           	global	___awmod
  9315                           
  9316 ;; *************** function ___awmod *****************
  9317 ;; Defined at:
  9318 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  9319 ;; Parameters:    Size  Location     Type
  9320 ;;  divisor         2    0[COMMON] int 
  9321 ;;  dividend        2    2[COMMON] int 
  9322 ;; Auto vars:     Size  Location     Type
  9323 ;;  sign            1    6[COMMON] unsigned char 
  9324 ;;  counter         1    5[COMMON] unsigned char 
  9325 ;; Return value:  Size  Location     Type
  9326 ;;                  2    0[COMMON] int 
  9327 ;; Registers used:
  9328 ;;		wreg, status,2, status,0
  9329 ;; Tracked objects:
  9330 ;;		On entry : 0/0
  9331 ;;		On exit  : 0/0
  9332 ;;		Unchanged: 0/0
  9333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9334 ;;      Params:         4       0       0       0       0
  9335 ;;      Locals:         2       0       0       0       0
  9336 ;;      Temps:          1       0       0       0       0
  9337 ;;      Totals:         7       0       0       0       0
  9338 ;;Total ram usage:        7 bytes
  9339 ;; Hardware stack levels used:    1
  9340 ;; This function calls:
  9341 ;;		Nothing
  9342 ;; This function is called by:
  9343 ;;		_main
  9344 ;; This function uses a non-reentrant model
  9345 ;;
  9346                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
  9347                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  9348                           	line	5
  9349                           global __ptext22
  9350                           __ptext22:	;psect for function ___awmod
  9351  0946                     psect	text22
  9352                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  9353                           	line	5
  9354                           	global	__size_of___awmod
  9355                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  9356  0063                     	
  9357                           ___awmod:	
  9358  0946                     ;incstack = 0
  9359                           	opt	stack 7
  9360                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  9361                           	line	12
  9362                           	
  9363                           l2116:	
  9364  0946                     	clrf	(___awmod@sign)
  9365  0946  01F6               	line	13
  9366                           	
  9367                           l2118:	
  9368  0947                     	btfss	(___awmod@dividend+1),7
  9369  0947  1FF3               	goto	u2381
  9370  0948  294A               	goto	u2380
  9371  0949  294B               u2381:
  9372  094A                     	goto	l2124
  9373  094A  2953               u2380:
  9374  094B                     	line	14
  9375                           	
  9376                           l2120:	
  9377  094B                     	comf	(___awmod@dividend),f
  9378  094B  09F2               	comf	(___awmod@dividend+1),f
  9379  094C  09F3               	incf	(___awmod@dividend),f
  9380  094D  0AF2               	skipnz
  9381  094E  1903               	incf	(___awmod@dividend+1),f
  9382  094F  0AF3               	line	15
  9383                           	
  9384                           l2122:	
  9385  0950                     	clrf	(___awmod@sign)
  9386  0950  01F6               	incf	(___awmod@sign),f
  9387  0951  0AF6               	goto	l2124
  9388  0952  2953               	line	16
  9389                           	
  9390                           l483:	
  9391  0953                     	line	17
  9392                           	
  9393                           l2124:	
  9394  0953                     	btfss	(___awmod@divisor+1),7
  9395  0953  1FF1               	goto	u2391
  9396  0954  2956               	goto	u2390
  9397  0955  2957               u2391:
  9398  0956                     	goto	l2128
  9399  0956  295D               u2390:
  9400  0957                     	line	18
  9401                           	
  9402                           l2126:	
  9403  0957                     	comf	(___awmod@divisor),f
  9404  0957  09F0               	comf	(___awmod@divisor+1),f
  9405  0958  09F1               	incf	(___awmod@divisor),f
  9406  0959  0AF0               	skipnz
  9407  095A  1903               	incf	(___awmod@divisor+1),f
  9408  095B  0AF1               	goto	l2128
  9409  095C  295D               	
  9410                           l484:	
  9411  095D                     	line	19
  9412                           	
  9413                           l2128:	
  9414  095D                     	movf	((___awmod@divisor)),w
  9415  095D  0870               iorwf	((___awmod@divisor+1)),w
  9416  095E  0471               	btfsc	status,2
  9417  095F  1903               	goto	u2401
  9418  0960  2962               	goto	u2400
  9419  0961  2963               u2401:
  9420  0962                     	goto	l2146
  9421  0962  2998               u2400:
  9422  0963                     	line	20
  9423                           	
  9424                           l2130:	
  9425  0963                     	clrf	(___awmod@counter)
  9426  0963  01F5               	incf	(___awmod@counter),f
  9427  0964  0AF5               	line	21
  9428                           	goto	l2136
  9429  0965  2972               	
  9430                           l487:	
  9431  0966                     	line	22
  9432                           	
  9433                           l2132:	
  9434  0966                     	movlw	01h
  9435  0966  3001               	
  9436                           u2415:
  9437  0967                     	clrc
  9438  0967  1003               	rlf	(___awmod@divisor),f
  9439  0968  0DF0               	rlf	(___awmod@divisor+1),f
  9440  0969  0DF1               	addlw	-1
  9441  096A  3EFF               	skipz
  9442  096B  1D03               	goto	u2415
  9443  096C  2967               	line	23
  9444                           	
  9445                           l2134:	
  9446  096D                     	movlw	low(01h)
  9447  096D  3001               	movwf	(??___awmod+0)+0
  9448  096E  00F4               	movf	(??___awmod+0)+0,w
  9449  096F  0874               	addwf	(___awmod@counter),f
  9450  0970  07F5               	goto	l2136
  9451  0971  2972               	line	24
  9452                           	
  9453                           l486:	
  9454  0972                     	line	21
  9455                           	
  9456                           l2136:	
  9457  0972                     	btfss	(___awmod@divisor+1),(15)&7
  9458  0972  1FF1               	goto	u2421
  9459  0973  2975               	goto	u2420
  9460  0974  2976               u2421:
  9461  0975                     	goto	l2132
  9462  0975  2966               u2420:
  9463  0976                     	goto	l2138
  9464  0976  2978               	
  9465                           l488:	
  9466  0977                     	goto	l2138
  9467  0977  2978               	line	25
  9468                           	
  9469                           l489:	
  9470  0978                     	line	26
  9471                           	
  9472                           l2138:	
  9473  0978                     	movf	(___awmod@divisor+1),w
  9474  0978  0871               	subwf	(___awmod@dividend+1),w
  9475  0979  0273               	skipz
  9476  097A  1D03               	goto	u2435
  9477  097B  297E               	movf	(___awmod@divisor),w
  9478  097C  0870               	subwf	(___awmod@dividend),w
  9479  097D  0272               u2435:
  9480  097E                     	skipc
  9481  097E  1C03               	goto	u2431
  9482  097F  2981               	goto	u2430
  9483  0980  2982               u2431:
  9484  0981                     	goto	l2142
  9485  0981  2989               u2430:
  9486  0982                     	line	27
  9487                           	
  9488                           l2140:	
  9489  0982                     	movf	(___awmod@divisor),w
  9490  0982  0870               	subwf	(___awmod@dividend),f
  9491  0983  02F2               	movf	(___awmod@divisor+1),w
  9492  0984  0871               	skipc
  9493  0985  1C03               	decf	(___awmod@dividend+1),f
  9494  0986  03F3               	subwf	(___awmod@dividend+1),f
  9495  0987  02F3               	goto	l2142
  9496  0988  2989               	
  9497                           l490:	
  9498  0989                     	line	28
  9499                           	
  9500                           l2142:	
  9501  0989                     	movlw	01h
  9502  0989  3001               	
  9503                           u2445:
  9504  098A                     	clrc
  9505  098A  1003               	rrf	(___awmod@divisor+1),f
  9506  098B  0CF1               	rrf	(___awmod@divisor),f
  9507  098C  0CF0               	addlw	-1
  9508  098D  3EFF               	skipz
  9509  098E  1D03               	goto	u2445
  9510  098F  298A               	line	29
  9511                           	
  9512                           l2144:	
  9513  0990                     	movlw	01h
  9514  0990  3001               	subwf	(___awmod@counter),f
  9515  0991  02F5               	btfss	status,2
  9516  0992  1D03               	goto	u2451
  9517  0993  2995               	goto	u2450
  9518  0994  2996               u2451:
  9519  0995                     	goto	l2138
  9520  0995  2978               u2450:
  9521  0996                     	goto	l2146
  9522  0996  2998               	
  9523                           l491:	
  9524  0997                     	goto	l2146
  9525  0997  2998               	line	30
  9526                           	
  9527                           l485:	
  9528  0998                     	line	31
  9529                           	
  9530                           l2146:	
  9531  0998                     	movf	((___awmod@sign)),w
  9532  0998  0876               	btfsc	status,2
  9533  0999  1903               	goto	u2461
  9534  099A  299C               	goto	u2460
  9535  099B  299D               u2461:
  9536  099C                     	goto	l2150
  9537  099C  29A3               u2460:
  9538  099D                     	line	32
  9539                           	
  9540                           l2148:	
  9541  099D                     	comf	(___awmod@dividend),f
  9542  099D  09F2               	comf	(___awmod@dividend+1),f
  9543  099E  09F3               	incf	(___awmod@dividend),f
  9544  099F  0AF2               	skipnz
  9545  09A0  1903               	incf	(___awmod@dividend+1),f
  9546  09A1  0AF3               	goto	l2150
  9547  09A2  29A3               	
  9548                           l492:	
  9549  09A3                     	line	33
  9550                           	
  9551                           l2150:	
  9552  09A3                     	movf	(___awmod@dividend+1),w
  9553  09A3  0873               	movwf	(?___awmod+1)
  9554  09A4  00F1               	movf	(___awmod@dividend),w
  9555  09A5  0872               	movwf	(?___awmod)
  9556  09A6  00F0               	goto	l493
  9557  09A7  29A8               	
  9558                           l2152:	
  9559  09A8                     	line	34
  9560                           	
  9561                           l493:	
  9562  09A8                     	return
  9563  09A8  0008               	opt stack 0
  9564                           GLOBAL	__end_of___awmod
  9565                           	__end_of___awmod:
  9566  09A9                     	signat	___awmod,8314
  9567                           	global	_I2C_Master_Write
  9568                           
  9569 ;; *************** function _I2C_Master_Write *****************
  9570 ;; Defined at:
  9571 ;;		line 65 in file "I2C.c"
  9572 ;; Parameters:    Size  Location     Type
  9573 ;;  d               2    0[COMMON] unsigned int 
  9574 ;; Auto vars:     Size  Location     Type
  9575 ;;		None
  9576 ;; Return value:  Size  Location     Type
  9577 ;;                  1    wreg      void 
  9578 ;; Registers used:
  9579 ;;		wreg, status,2, status,0, pclath, cstack
  9580 ;; Tracked objects:
  9581 ;;		On entry : 0/0
  9582 ;;		On exit  : 0/0
  9583 ;;		Unchanged: 0/0
  9584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9585 ;;      Params:         2       0       0       0       0
  9586 ;;      Locals:         0       0       0       0       0
  9587 ;;      Temps:          0       0       0       0       0
  9588 ;;      Totals:         2       0       0       0       0
  9589 ;;Total ram usage:        2 bytes
  9590 ;; Hardware stack levels used:    1
  9591 ;; Hardware stack levels required when called:    1
  9592 ;; This function calls:
  9593 ;;		_I2C_Master_Wait
  9594 ;; This function is called by:
  9595 ;;		_main
  9596 ;; This function uses a non-reentrant model
  9597 ;;
  9598                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  9599                           	file	"I2C.c"
  9600                           	line	65
  9601                           global __ptext23
  9602                           __ptext23:	;psect for function _I2C_Master_Write
  9603  16E1                     psect	text23
  9604                           	file	"I2C.c"
  9605                           	line	65
  9606                           	global	__size_of_I2C_Master_Write
  9607                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
  9608  000A                     	
  9609                           _I2C_Master_Write:	
  9610  16E1                     ;incstack = 0
  9611                           	opt	stack 6
  9612                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  9613                           	line	67
  9614                           	
  9615                           l2050:	
  9616  16E1                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
  9617                           	fcall	_I2C_Master_Wait
  9618  16E1  160A  118A  26EB  160A  118A  	line	68
  9619                           	
  9620                           l2052:	
  9621  16E6                     ;I2C.c: 68:     SSPBUF = d;
  9622                           	movf	(I2C_Master_Write@d),w
  9623  16E6  0870               	bcf	status, 5	;RP0=0, select bank0
  9624  16E7  1283               	bcf	status, 6	;RP1=0, select bank0
  9625  16E8  1303               	movwf	(19)	;volatile
  9626  16E9  0093               	line	69
  9627                           	
  9628                           l47:	
  9629  16EA                     	return
  9630  16EA  0008               	opt stack 0
  9631                           GLOBAL	__end_of_I2C_Master_Write
  9632                           	__end_of_I2C_Master_Write:
  9633  16EB                     	signat	_I2C_Master_Write,4217
  9634                           	global	_I2C_Master_Stop
  9635                           
  9636 ;; *************** function _I2C_Master_Stop *****************
  9637 ;; Defined at:
  9638 ;;		line 55 in file "I2C.c"
  9639 ;; Parameters:    Size  Location     Type
  9640 ;;		None
  9641 ;; Auto vars:     Size  Location     Type
  9642 ;;		None
  9643 ;; Return value:  Size  Location     Type
  9644 ;;                  1    wreg      void 
  9645 ;; Registers used:
  9646 ;;		wreg, status,2, status,0, pclath, cstack
  9647 ;; Tracked objects:
  9648 ;;		On entry : 0/0
  9649 ;;		On exit  : 0/0
  9650 ;;		Unchanged: 0/0
  9651 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9652 ;;      Params:         0       0       0       0       0
  9653 ;;      Locals:         0       0       0       0       0
  9654 ;;      Temps:          0       0       0       0       0
  9655 ;;      Totals:         0       0       0       0       0
  9656 ;;Total ram usage:        0 bytes
  9657 ;; Hardware stack levels used:    1
  9658 ;; Hardware stack levels required when called:    1
  9659 ;; This function calls:
  9660 ;;		_I2C_Master_Wait
  9661 ;; This function is called by:
  9662 ;;		_main
  9663 ;; This function uses a non-reentrant model
  9664 ;;
  9665                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  9666                           	line	55
  9667                           global __ptext24
  9668                           __ptext24:	;psect for function _I2C_Master_Stop
  9669  16D8                     psect	text24
  9670                           	file	"I2C.c"
  9671                           	line	55
  9672                           	global	__size_of_I2C_Master_Stop
  9673                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
  9674  0009                     	
  9675                           _I2C_Master_Stop:	
  9676  16D8                     ;incstack = 0
  9677                           	opt	stack 6
  9678                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9679                           	line	57
  9680                           	
  9681                           l2046:	
  9682  16D8                     ;I2C.c: 57:     I2C_Master_Wait();
  9683                           	fcall	_I2C_Master_Wait
  9684  16D8  160A  118A  26EB  160A  118A  	line	58
  9685                           	
  9686                           l2048:	
  9687  16DD                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  9688                           	bsf	status, 5	;RP0=1, select bank1
  9689  16DD  1683               	bcf	status, 6	;RP1=0, select bank1
  9690  16DE  1303               	bsf	(145)^080h,2	;volatile
  9691  16DF  1511               	line	59
  9692                           	
  9693                           l44:	
  9694  16E0                     	return
  9695  16E0  0008               	opt stack 0
  9696                           GLOBAL	__end_of_I2C_Master_Stop
  9697                           	__end_of_I2C_Master_Stop:
  9698  16E1                     	signat	_I2C_Master_Stop,89
  9699                           	global	_I2C_Master_Start
  9700                           
  9701 ;; *************** function _I2C_Master_Start *****************
  9702 ;; Defined at:
  9703 ;;		line 39 in file "I2C.c"
  9704 ;; Parameters:    Size  Location     Type
  9705 ;;		None
  9706 ;; Auto vars:     Size  Location     Type
  9707 ;;		None
  9708 ;; Return value:  Size  Location     Type
  9709 ;;                  1    wreg      void 
  9710 ;; Registers used:
  9711 ;;		wreg, status,2, status,0, pclath, cstack
  9712 ;; Tracked objects:
  9713 ;;		On entry : 0/0
  9714 ;;		On exit  : 0/0
  9715 ;;		Unchanged: 0/0
  9716 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9717 ;;      Params:         0       0       0       0       0
  9718 ;;      Locals:         0       0       0       0       0
  9719 ;;      Temps:          0       0       0       0       0
  9720 ;;      Totals:         0       0       0       0       0
  9721 ;;Total ram usage:        0 bytes
  9722 ;; Hardware stack levels used:    1
  9723 ;; Hardware stack levels required when called:    1
  9724 ;; This function calls:
  9725 ;;		_I2C_Master_Wait
  9726 ;; This function is called by:
  9727 ;;		_main
  9728 ;; This function uses a non-reentrant model
  9729 ;;
  9730                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9731                           	line	39
  9732                           global __ptext25
  9733                           __ptext25:	;psect for function _I2C_Master_Start
  9734  16CF                     psect	text25
  9735                           	file	"I2C.c"
  9736                           	line	39
  9737                           	global	__size_of_I2C_Master_Start
  9738                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
  9739  0009                     	
  9740                           _I2C_Master_Start:	
  9741  16CF                     ;incstack = 0
  9742                           	opt	stack 6
  9743                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9744                           	line	41
  9745                           	
  9746                           l2042:	
  9747  16CF                     ;I2C.c: 41:     I2C_Master_Wait();
  9748                           	fcall	_I2C_Master_Wait
  9749  16CF  160A  118A  26EB  160A  118A  	line	42
  9750                           	
  9751                           l2044:	
  9752  16D4                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  9753                           	bsf	status, 5	;RP0=1, select bank1
  9754  16D4  1683               	bcf	status, 6	;RP1=0, select bank1
  9755  16D5  1303               	bsf	(145)^080h,0	;volatile
  9756  16D6  1411               	line	43
  9757                           	
  9758                           l38:	
  9759  16D7                     	return
  9760  16D7  0008               	opt stack 0
  9761                           GLOBAL	__end_of_I2C_Master_Start
  9762                           	__end_of_I2C_Master_Start:
  9763  16D8                     	signat	_I2C_Master_Start,89
  9764                           	global	_I2C_Master_Read
  9765                           
  9766 ;; *************** function _I2C_Master_Read *****************
  9767 ;; Defined at:
  9768 ;;		line 74 in file "I2C.c"
  9769 ;; Parameters:    Size  Location     Type
  9770 ;;  a               2    0[COMMON] unsigned short 
  9771 ;; Auto vars:     Size  Location     Type
  9772 ;;  temp            2    4[COMMON] unsigned short 
  9773 ;; Return value:  Size  Location     Type
  9774 ;;                  2    0[COMMON] unsigned short 
  9775 ;; Registers used:
  9776 ;;		wreg, status,2, status,0, pclath, cstack
  9777 ;; Tracked objects:
  9778 ;;		On entry : 0/0
  9779 ;;		On exit  : 0/0
  9780 ;;		Unchanged: 0/0
  9781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9782 ;;      Params:         2       0       0       0       0
  9783 ;;      Locals:         2       0       0       0       0
  9784 ;;      Temps:          2       0       0       0       0
  9785 ;;      Totals:         6       0       0       0       0
  9786 ;;Total ram usage:        6 bytes
  9787 ;; Hardware stack levels used:    1
  9788 ;; Hardware stack levels required when called:    1
  9789 ;; This function calls:
  9790 ;;		_I2C_Master_Wait
  9791 ;; This function is called by:
  9792 ;;		_main
  9793 ;; This function uses a non-reentrant model
  9794 ;;
  9795                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9796                           	line	74
  9797                           global __ptext26
  9798                           __ptext26:	;psect for function _I2C_Master_Read
  9799  175F                     psect	text26
  9800                           	file	"I2C.c"
  9801                           	line	74
  9802                           	global	__size_of_I2C_Master_Read
  9803                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  9804  002F                     	
  9805                           _I2C_Master_Read:	
  9806  175F                     ;incstack = 0
  9807                           	opt	stack 6
  9808                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9809                           	line	77
  9810                           	
  9811                           l2054:	
  9812  175F                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  9813                           	fcall	_I2C_Master_Wait
  9814  175F  160A  118A  26EB  160A  118A  	line	78
  9815                           	
  9816                           l2056:	
  9817  1764                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  9818                           	bsf	status, 5	;RP0=1, select bank1
  9819  1764  1683               	bcf	status, 6	;RP1=0, select bank1
  9820  1765  1303               	bsf	(145)^080h,3	;volatile
  9821  1766  1591               	line	79
  9822                           ;I2C.c: 79:     I2C_Master_Wait();
  9823                           	fcall	_I2C_Master_Wait
  9824  1767  160A  118A  26EB  160A  118A  	line	80
  9825                           	
  9826                           l2058:	
  9827  176C                     ;I2C.c: 80:     temp = SSPBUF;
  9828                           	bcf	status, 5	;RP0=0, select bank0
  9829  176C  1283               	bcf	status, 6	;RP1=0, select bank0
  9830  176D  1303               	movf	(19),w	;volatile
  9831  176E  0813               	movwf	(??_I2C_Master_Read+0)+0
  9832  176F  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  9833  1770  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  9834  1771  0872               	movwf	(I2C_Master_Read@temp)
  9835  1772  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  9836  1773  0873               	movwf	(I2C_Master_Read@temp+1)
  9837  1774  00F5               	line	81
  9838                           	
  9839                           l2060:	
  9840  1775                     ;I2C.c: 81:     I2C_Master_Wait();
  9841                           	fcall	_I2C_Master_Wait
  9842  1775  160A  118A  26EB  160A  118A  	line	82
  9843                           	
  9844                           l2062:	
  9845  177A                     ;I2C.c: 82:     if(a == 1){
  9846                           		decf	((I2C_Master_Read@a)),w
  9847  177A  0370               iorwf	((I2C_Master_Read@a+1)),w
  9848  177B  0471               	btfss	status,2
  9849  177C  1D03               	goto	u2341
  9850  177D  2F7F               	goto	u2340
  9851  177E  2F80               u2341:
  9852  177F                     	goto	l50
  9853  177F  2F84               u2340:
  9854  1780                     	line	83
  9855                           	
  9856                           l2064:	
  9857  1780                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  9858                           	bsf	status, 5	;RP0=1, select bank1
  9859  1780  1683               	bcf	status, 6	;RP1=0, select bank1
  9860  1781  1303               	bcf	(145)^080h,5	;volatile
  9861  1782  1291               	line	84
  9862                           ;I2C.c: 84:     }else{
  9863                           	goto	l51
  9864  1783  2F87               	
  9865                           l50:	
  9866  1784                     	line	85
  9867                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  9868                           	bsf	status, 5	;RP0=1, select bank1
  9869  1784  1683               	bcf	status, 6	;RP1=0, select bank1
  9870  1785  1303               	bsf	(145)^080h,5	;volatile
  9871  1786  1691               	line	86
  9872                           ;I2C.c: 86:     }
  9873                           	
  9874                           l51:	
  9875  1787                     	line	87
  9876                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  9877                           	bsf	(145)^080h,4	;volatile
  9878  1787  1611               	line	88
  9879                           	
  9880                           l2066:	
  9881  1788                     ;I2C.c: 88:     return temp;
  9882                           	movf	(I2C_Master_Read@temp+1),w
  9883  1788  0875               	movwf	(?_I2C_Master_Read+1)
  9884  1789  00F1               	movf	(I2C_Master_Read@temp),w
  9885  178A  0874               	movwf	(?_I2C_Master_Read)
  9886  178B  00F0               	goto	l52
  9887  178C  2F8D               	
  9888                           l2068:	
  9889  178D                     	line	89
  9890                           	
  9891                           l52:	
  9892  178D                     	return
  9893  178D  0008               	opt stack 0
  9894                           GLOBAL	__end_of_I2C_Master_Read
  9895                           	__end_of_I2C_Master_Read:
  9896  178E                     	signat	_I2C_Master_Read,4218
  9897                           	global	_I2C_Master_Wait
  9898                           
  9899 ;; *************** function _I2C_Master_Wait *****************
  9900 ;; Defined at:
  9901 ;;		line 32 in file "I2C.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;		None
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;		None
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      void 
  9908 ;; Registers used:
  9909 ;;		wreg, status,2
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9915 ;;      Params:         0       0       0       0       0
  9916 ;;      Locals:         0       0       0       0       0
  9917 ;;      Temps:          0       0       0       0       0
  9918 ;;      Totals:         0       0       0       0       0
  9919 ;;Total ram usage:        0 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; This function calls:
  9922 ;;		Nothing
  9923 ;; This function is called by:
  9924 ;;		_I2C_Master_Start
  9925 ;;		_I2C_Master_Stop
  9926 ;;		_I2C_Master_Write
  9927 ;;		_I2C_Master_Read
  9928 ;;		_I2C_Master_RepeatedStart
  9929 ;; This function uses a non-reentrant model
  9930 ;;
  9931                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  9932                           	line	32
  9933                           global __ptext27
  9934                           __ptext27:	;psect for function _I2C_Master_Wait
  9935  16EB                     psect	text27
  9936                           	file	"I2C.c"
  9937                           	line	32
  9938                           	global	__size_of_I2C_Master_Wait
  9939                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
  9940  000F                     	
  9941                           _I2C_Master_Wait:	
  9942  16EB                     ;incstack = 0
  9943                           	opt	stack 6
  9944                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9945                           	line	34
  9946                           	
  9947                           l1994:	
  9948  16EB                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9949                           	goto	l32
  9950  16EB  2EEC               	
  9951                           l33:	
  9952  16EC                     	
  9953                           l32:	
  9954  16EC                     	bsf	status, 5	;RP0=1, select bank1
  9955  16EC  1683               	bcf	status, 6	;RP1=0, select bank1
  9956  16ED  1303               	btfsc	(148)^080h,(2)&7	;volatile
  9957  16EE  1914               	goto	u2281
  9958  16EF  2EF1               	goto	u2280
  9959  16F0  2EF2               u2281:
  9960  16F1                     	goto	l32
  9961  16F1  2EEC               u2280:
  9962  16F2                     	
  9963                           l1996:	
  9964  16F2                     	movf	(145)^080h,w	;volatile
  9965  16F2  0811               	andlw	01Fh
  9966  16F3  391F               	btfss	status,2
  9967  16F4  1D03               	goto	u2291
  9968  16F5  2EF7               	goto	u2290
  9969  16F6  2EF8               u2291:
  9970  16F7                     	goto	l32
  9971  16F7  2EEC               u2290:
  9972  16F8                     	goto	l35
  9973  16F8  2EF9               	
  9974                           l34:	
  9975  16F9                     	line	35
  9976                           	
  9977                           l35:	
  9978  16F9                     	return
  9979  16F9  0008               	opt stack 0
  9980                           GLOBAL	__end_of_I2C_Master_Wait
  9981                           	__end_of_I2C_Master_Wait:
  9982  16FA                     	signat	_I2C_Master_Wait,89
  9983                           global	___latbits
  9984                           ___latbits	equ	2
  9985  0002                     	global	btemp
  9986                           	btemp set 07Eh
  9987  007E                     
  9988                           	DABS	1,126,2	;btemp
  9989                           	global	wtemp0
  9990                           	wtemp0 set btemp+0
  9991  007E                     	end


Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         36
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      4      40
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 5
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _main->___fldiv
    _writeFloat->_writeIntLCD
    _writeIntLCD->_sprintf
    _setup->_I2C_Master_Init
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flneg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   16967
                                              0 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                         _writeFloat
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeFloat                                           4     2      2    3186
                                             21 BANK0      4     2      2
                       _setCursorLCD
                       _writeCharLCD
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    1964
                                             13 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    1872
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                       _setCursorLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2     568
                                              2 COMMON     7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1     848
                                              3 COMMON     3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             28 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             54 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                              4 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     600
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     501
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___awmod
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _setCursorLCD
       _cmdLCD
     _writeStrLCD
       _writeCharLCD
   _writeCharLCD
   _writeFloat
     _setCursorLCD
       _cmdLCD
     _writeCharLCD
     _writeIntLCD
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _writeStrLCD
         _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      86       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      28       7       50.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      86      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Sat Mar 07 12:02:34 2020

             ___fldiv@aexp 006F               ___fldiv@bexp 006E                          pc 0002  
             ___fldiv@sign 0067                __CFG_CP$OFF 0000            writeStrLCD@cont 0077  
                       l32 16EC                         l33 16EC                         l34 16F9  
                       l50 1784                         l35 16F9                         l51 1787  
                       l52 178D                         l44 16E0                         l29 17C5  
                       l38 16D7                         l47 16EA                         l74 1726  
                       l82 087E                         l91 17FF                         l75 172E  
                       l83 085B                         l76 1734                         l84 089B  
                       l85 089B                         l94 0816                         l79 0009  
                       l88 1717                         l97 0027                         _s3 00BA  
                       fsr 0004        __Umul8_16@word_mpld 0076                        l103 0A38  
                      l104 0A43                        l200 0DBC                        l105 0A70  
                      l201 0E0D                        l106 0A85                        l210 0FFD  
                      l202 0E38                        l203 0E21                        l204 0E37  
                      l213 0945                        l205 0E36                        l310 00DF  
                      l206 0E56                        l311 00E0                        l207 0E5A  
                      l304 01A8                        l320 0163                        l312 0100  
                      l208 0FFC                        l321 01A7                        l313 00E1  
                      l305 00CA                        l209 0FFD                        l322 01BB  
                      l314 011A                        l306 00DC                        l323 01C1  
                      l315 0124                        l307 00E3                        l316 014C  
                      l308 00DE                        l309 01BC                        l317 0141  
                      l318 015E                        l319 019D                        l520 00AA  
                      l512 0045                        l360 09D0                        l521 009F  
                      l513 00C1                        l361 09FB                        l522 00B0  
                      l514 008E                        l362 0A0B                        l602 0852  
                      l523 00C1                        l515 007A                        l363 0A15  
                      l603 082C                        l195 0D57                        l620 022B  
                      l612 01D5                        l700 0D3C                        l508 1707  
                      l516 007B                        l356 0A0C                        l604 0820  
                      l196 0D93                        l621 0277                        l613 01EB  
                      l509 1708                        l517 008D                        l357 09CA  
                      l605 0831                        l197 0DBE                        l630 02DE  
                      l622 023A                        l614 01E8                        l710 04D5  
                      l518 00B1                        l358 09BC                        l606 0832  
                      l198 0DA7                        l631 0331                        l623 02B0  
                      l615 01F4                        l711 04D3                        l519 009E  
                      l359 09CF                        l607 0843                        l199 0DBD  
                      l640 03AC                        l632 02F1                        l624 02DE  
                      l616 0201                        l720 0739                        l712 04DE  
                      l608 0851                        l641 03BB                        l633 047D  
                      l625 02D5                        l617 020D                        l721 075E  
                      l713 04F3                        l705 0491                        l609 0857  
                      l490 0989                        l650 0411                        l642 03D2  
                      l634 0330                        l626 02B1                        l618 0223  
                      l730 07E5                        l722 0755                        l706 04A6  
                      l491 0997                        l483 0953                        l651 0408  
                      l643 03F4                        l635 0319                        l627 02BE  
                      l619 0220                        l731 07DD                        l723 075D  
                      l715 04E9                        l707 04A4                        l492 09A3  
                      l484 095D                        l660 0466                        l652 0410  
                      l644 03D3                        l636 031C                        l628 02C1  
                      l724 075C                        l716 07F2                        l708 04AF  
                      l740 0AD4                        l493 09A8                        l485 0998  
                      l661 046D                        l653 040F                        l645 03E1  
                      l637 0322                        l629 02C7                        l725 0796  
                      l717 0734                        l709 04C0                        l741 0AF0  
                      l486 0972                        l662 0471                        l654 044C  
                      l638 03FA                        l646 03E8                        l670 0B71  
                      l726 0795                        l718 0715                        l750 0B3E  
                      l742 0AD5                        l734 0AA0                        l487 0966  
                      l663 047D                        l655 044C                        l647 03EB  
                      l639 03AD                        l671 0B6E                        l727 07AE  
                      l719 0724                        l743 0AF7                        l735 0AA8  
                      l488 0977                        l656 044B                        l648 03F3  
                      l680 0C61                        l672 0B7A                        l728 07E5  
                      l744 0B04                        l736 0ABA                        l592 08E1  
                      l489 0978                        l657 0467                        l649 03F9  
                      l681 0C13                        l673 0B8B                        l753 1740  
                      l729 07C9                        l745 0AF8                        l737 0B47  
                      l593 08B3                        l690 0C97                        l682 0C3A  
                      l674 0BA1                        l754 174A                        l738 0ACD  
                      l594 08A7                        l659 0457                        l691 0CBC  
                      l683 0C30                        l675 0B9E                        l755 1759  
                      l747 0B0F                        l739 0ABF                        l595 08B8  
                      l692 0CB3                        l684 0C5C                        l676 0BA9  
                      l756 175E                        l748 0B0F                        l596 08B9  
                      l693 0CBB                        l685 0C68                        l677 0BCB  
                      l669 0B5B                        l749 0B1B                        l597 08D2  
                      l694 0CBA                        l686 0C72                        l678 0D50  
                      l598 08E0                        l695 0CF4                        l687 0C92  
                      l679 0BE2                        l599 08E6                        l696 0CF3  
                      l688 0C73                        l697 0D10                        l689 0C82  
                      l698 0D2C                        l699 0D38                        _GIE 005F  
                      _RD0 0040                        _RD1 0041               __CFG_CPD$OFF 0000  
                      _mov 00B4                        _lux 00A0                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 004E  
             ___flmul@bexp 004F               ___flmul@sign 0049               ___flmul@temp 0054  
             ___flmul@prod 0050               __CFG_LVP$OFF 0000               ___fltol@exp1 007A  
                     l2000 171E                       l2010 17CF                       l2002 1726  
                     l2020 17ED                       l2012 17D5                       l2004 172E  
                     l2100 0900                       l2030 1738                       l2006 0003  
                     l2022 17F3                       l2014 17DB                       l2110 0927  
                     l2102 0905                       l2120 094B                       l2200 01C9  
                     l2040 175E                       l2032 1740                       l2024 17F9  
                     l2016 17E1                       l2008 17C6                       l2112 0930  
                     l2104 090A                       l2042 16CF                       l2050 16E1  
                     l2130 0963                       l2122 0950                       l2210 01DF  
                     l2202 01CF                       l2034 1744                       l2018 17E7  
                     l2114 093C                       l2106 0912                       l2026 000D  
                     l2060 1775                       l2044 16D4                       l2052 16E6  
                     l2140 0982                       l2132 0966                       l2124 0953  
                     l2116 0946                       l2300 02F0                       l2220 01F9  
                     l2212 01E8                       l2204 01D3                       l2036 1753  
                     l2028 1736                       l2108 091B                       l2062 177A  
                     l2054 175F                       l2046 16D8                       l2150 09A3  
                     l2142 0989                       l2134 096D                       l2126 0957  
                     l2118 0947                       l2310 0319                       l2302 02F1  
                     l2230 020D                       l2222 01FF                       l2214 01E9  
                     l2206 01D5                       l2038 1759                       l2070 0A19  
                     l2064 1780                       l2056 1764                       l2048 16DD  
                     l2152 09A8                       l2144 0990                       l2136 0972  
                     l2128 095D                       l2312 031C                       l2304 0308  
                     l2320 0331                       l2232 0212                       l2240 0223  
                     l2224 0201                       l2208 01DA                       l2216 01EB  
                     l2400 0B5B                       l2160 1708                       l2080 0A3E  
                     l2072 0A23                       l2066 1788                       l2058 176C  
                     l2138 0978                       l2146 0998                       l2322 0347  
                     l2330 03AD                       l2314 0320                       l2306 030C  
                     l2250 0242                       l2242 0231                       l2234 0217  
                     l2226 0207                       l2218 01F4                       l2402 0B60  
                     l2410 0B71                       l2154 16FA                       l2170 005A  
                     l2162 0028                       l2090 0A69                       l2082 0A43  
                     l2074 0A2B                       l2068 178D                       l2148 099D  
                     l2340 03DC                       l2332 03C3                       l2324 0396  
                     l2316 0322                       l2308 0310                       l2260 0256  
                     l2252 0246                       l2244 0235                       l2236 0220  
                     l2228 020B                       l2500 0CB7                       l2420 0B8B  
                     l2412 0B7A                       l2404 0B65                       l2156 1704  
                     l2180 0070                       l2172 005B                       l2164 003B  
                     l2092 0A70                       l2084 0A4E                       l2076 0A33  
                     l2350 03F0                       l2342 03E0                       l2334 03C8  
                     l2326 0398                       l2318 032B                       l2270 026A  
                     l2262 025A                       l2254 024A                       l2246 023A  
                     l2238 0221                       l2510 0CEC                       l2502 0CBC  
                     l2422 0B90                       l2430 0BA1                       l2414 0B7F  
                     l2406 0B6E                       l2158 1707                       l2190 009D  
                     l2182 0079                       l2174 0063                       l2166 0044  
                     l2094 0A78                       l2086 0A54                       l2078 0A38  
                     l2360 0405                       l2344 03E5                       l2336 03D1  
                     l2352 03F4                       l2328 039D                       l2280 0294  
                     l2272 026E                       l2264 025E                       l2256 024E  
                     l2248 023E                       l2520 0D23                       l2504 0CC1  
                     l2512 0CF4                       l2432 0BB1                       l2440 0BCB  
                     l2424 0B95                       l2416 0B85                       l2408 0B6F  
                     l2600 05F3                       l2192 009F                       l2184 007B  
                     l2176 0065                       l2168 0045                       l2096 08E7  
                     l2088 0A61                       l2370 0428                       l2362 040C  
                     l2346 03E8                       l2338 03D3                       l2354 03FA  
                     l2290 02C7                       l2282 02B5                       l2274 0272  
                     l2266 0262                       l2258 0252                       l2530 0D47  
                     l2522 0D2B                       l2514 0D01                       l2506 0CCF  
                     l2450 0C01                       l2442 0BD0                       l2434 0BBD  
                     l2426 0B9E                       l2418 0B89                       l2610 0683  
                     l2602 0610                       l2194 00B1                       l2178 0069  
                     l2186 008E                       l2098 08F3                       l2380 0464  
                     l2372 0446                       l2364 0411                       l2356 03FB  
                     l2348 03EB                       l2292 02D0                       l2284 02BE  
                     l2268 0266                       l2276 0277                       l2532 0D50  
                     l2524 0D32                       l2516 0D10                       l2508 0CD3  
                     l2460 0C2A                       l2452 0C09                       l2444 0BE1  
                     l2436 0BC1                       l2428 0B9F                       l2620 0715  
                     l2612 06B0                       l2604 0629                       l2540 048F  
                     l2196 00B6                       l2188 0094                       l2700 0B04  
                     l1900 00D0                       l2390 047C                       l2382 0467  
                     l2374 0451                       l2366 0416                       l2358 03FF  
                     l2286 02C1                       l2294 02D5                       l2278 0278  
                     l2198 01C2                       l2526 0D36                       l2518 0D1F  
                     l2470 0C4D                       l2462 0C2E                       l2454 0C11  
                     l2446 0BE2                       l2438 0BCA                       l2622 071E  
                     l2630 0734                       l2614 06D6                       l2606 0646  
                     l2550 04A6                       l2542 0491                       l2534 047E  
                     l2710 0B38                       l2702 0B08                       l1830 1714  
                     l1910 0100                       l1902 00D7                       l2384 046B  
                     l2376 0457                       l2368 0424                       l2296 02E2  
                     l2288 02C5                       l2528 0D38                       l2480 0C73  
                     l2472 0C5C                       l2464 0C30                       l2456 0C13  
                     l2448 0BF9                       l2392 0B48                       l2640 0759  
                     l2632 0739                       l2624 0722                       l2616 06FE  
                     l2608 0673                       l2560 04C0                       l2552 04AF  
                     l2544 0496                       l2536 0485                       l2712 0B3C  
                     l2704 0B13                       l1824 170A                       l1840 08AE  
                     l1832 089C                       l1920 011A                       l1912 0108  
                     l1904 00DC                       l2386 046D                       l2378 045F  
                     l2298 02E7                       l2482 0C7C                       l2490 0C92  
                     l2458 0C18                       l2466 0C3A                       l2474 0C61  
                     l2394 0B4F                       l2650 078E                       l2642 075E  
                     l2634 073A                       l2626 0724                       l2618 0707  
                     l2570 04DE                       l2562 04C5                       l2554 04B4  
                     l2546 049B                       l2538 048B                       l2714 0B3E  
                     l2706 0B1D                       l1826 170D                       l1850 08D2  
                     l1842 08B3                       l1834 089E                       l1930 0141  
                     l1922 011C                       l1914 010C                       l1906 00E2  
                     l2730 0D74                       l2388 0478                       l2492 0C97  
                     l2484 0C80                       l2476 0C68                       l2468 0C4C  
                     l2396 0B55                       l2660 07C7                       l2644 0763  
                     l2652 0796                       l2636 073E                       l2628 072D  
                     l2580 0503                       l2572 04E3                       l2564 04CA  
                     l2556 04BA                       l2548 04A4                       l2716 0B47  
                     l2708 0B33                       l1828 170F                       l1852 08D9  
                     l1844 08B9                       l1836 08A4                       l1860 081D  
                     l1940 0163                       l1924 0123                       l1932 014C  
                     l1916 0110                       l2820 00F5                       l1908 00E3  
                     l2740 0DA7                       l2732 0D7D                       l2724 0D51  
                     l2494 0C98                       l2486 0C82                       l2478 0C70  
                     l2398 0B59                       l2670 07E9                       l2662 07C9  
                     l2654 07A3                       l2646 0771                       l2638 0752  
                     l2590 0591                       l2582 0510                       l2574 04E9  
                     l2566 04D3                       l2558 04BE                       l1846 08CA  
                     l1838 08A7                       l1854 08E1                       l1870 083C  
                     l1862 0820                       l1942 0191                       l1934 0152  
                     l1926 0124                       l1918 0114                       l1950 01BC  
                     l2750 0DD1                       l2742 0DAD                       l2734 0D84  
                     l2726 0D57                       l2496 0C9C                       l2488 0C8B  
                     l2672 07F2                       l2664 07D7                       l2656 07AE  
                     l2648 0775                       l2592 05AD                       l2584 052D  
                     l2576 04F2                       l2568 04D5                       l2680 0AA0  
                     l1960 09B9                       l1880 0804                       l1856 08E6  
                     l1848 08D0                       l1872 0843                       l1864 0827  
                     l1952 01C1                       l1944 0198                       l1936 0159  
                     l1928 0140                       l2760 0E0D                       l2752 0DE9  
                     l2744 0DBE                       l2736 0D93                       l2728 0D6F  
                     l2498 0CB0                       l2666 07DB                       l2658 07BD  
                     l2594 05B6                       l2586 0549                       l2578 04F3  
                     l2690 0ACD                       l2682 0AB0                       l2674 0A87  
                     l1970 09EB                       l1962 09BC                       l1882 0807  
                     l1890 085B                       l1874 084A                       l1866 082C  
                     l1858 0817                       l1946 019D                       l1938 015E  
                     l2770 0E3C                       l2762 0E12                       l2754 0DEE  
                     l2746 0DC2                       l2738 0D98                       l2668 07DD  
                     l2596 05C6                       l2588 0575                       l2692 0AD5  
                     l2684 0AB9                       l2676 0A8C                       l1980 0A15  
                     l1972 09F9                       l1964 09CA                       l1884 0809  
                     l1892 0877                       l1868 0832                       l1876 0852  
                     l1948 01A8                       l2780 0EF4                       l2772 0E41  
                     l2764 0E21                       l2756 0DF7                       l2748 0DC7  
                     l2598 05E3                       l2694 0AD9                       l2686 0ABA  
                     l2678 0A90                       l1974 09FB                       l1966 09D0  
                     l1958 09A9                       l1990 17C3                       l1982 178E  
                     l1886 0813                       l1894 087E                       l1878 0857  
                     l2790 0FB2                       l2782 0F07                       l2774 0E4B  
                     l2766 0E27                       l2758 0DFE                       l2696 0AE7  
                     l2688 0ABF                       l1976 0A04                       l1968 09D9  
                     l1992 17C4                       l1984 1792                       l1888 0858  
                     l1896 00C5                       l2792 0FC6                       l2784 0F9E  
                     l2776 0E52                       l2768 0E38                       l1994 16EB  
                     l2698 0AF8                       l1978 0A0C                       l1986 1795  
                     l1898 00CA                       l2794 0FD2                       l2786 0FA6  
                     l2778 0E5A                       l1996 16F2                       l1988 17C2  
                     l2796 0FDA                       l2788 0FAC                       l1998 1719  
                     l2798 0FF2                       STR_1 1026                       STR_3 101A  
                     STR_4 101D                       STR_5 1020                       STR_6 1023  
                     u2000 08CA                       u2001 08C9                       u2100 0888  
                     u2020 08DF                       u2021 08DE                       u2005 08C6  
                     u2110 089A                       u2030 081D                       u2111 0899  
                     u2015 08D3                       u2031 081C                       u3000 0456  
                     u2200 09B9                       u2120 00D0                       u3001 0455  
                     u2201 09B8                       u2121 00CF                       u3010 0464  
                     u2050 0830                       u2130 0110                       u3011 0463  
                     u2051 082F                       u2131 010F                       u3020 046B  
                     u3100 0BB1                       u2220 09CE                       u2300 171E  
                     u2060 083C                       u2140 0122                       u3021 046A  
                     u3101 0BB0                       u2221 09CD                       u2301 171D  
                     u2061 083B                       u2045 0821                       u2141 0121  
                     u3030 047C                       u3110 0BD0                       u2310 1744  
                     u2150 013F                       u3031 047B                       u3111 0BCF  
                     u2311 1743                       u2215 09BE                       u2151 013E  
                     u2400 0963                       u3120 0C18                       u3040 0B59  
                     u2240 09EB                       u2080 0850                       u2160 014B  
                     u2401 0962                       u3121 0C17                       u3041 0B58  
                     u2241 09EA                       u2081 084F                       u2065 0838  
                     u2161 014A                       u3210 0C80                       u3050 0B60  
                     u2330 1758                       u2090 0865                       u2170 0152  
                     u3211 0C7F                       u3051 0B5F                       u2331 1757  
                     u2235 09D2                       u2075 0844                       u2171 0151  
                     u2155 013B                       u2340 1780                       u2420 0976  
                     u3300 0D01                       u3060 0B65                       u2500 0069  
                     u2260 0A0A                       u2180 01A6                       u2341 177F  
                     u2421 0975                       u3301 0D00                       u3205 0C75  
                     u3061 0B64                       u2325 174B                       u2501 0068  
                     u2261 0A09                       u2245 09E7                       u2181 01A5  
                     u2430 0982                       u3310 0D1F                       u3230 0C96  
                     u3150 0C2E                       u3070 0B89                       u2510 0070  
                     u2270 17A5                       u2190 01BA                       u2350 0A33  
                     u2431 0981                       u2415 0967                       u3311 0D1E  
                     u3231 0C95                       u3151 0C2D                       u3135 0C1A  
                     u3071 0B88                       u2511 006F                       u2255 09FC  
                     u2191 01B9                       u2351 0A32                       u2280 16F2  
                     u2600 01DF                       u3320 0D36                       u3240 0C9C  
                     u3080 0B90                       u3400 04E8                       u2360 0A3E  
                     u2281 16F1                       u2601 01DE                       u3321 0D35  
                     u3305 0CFD                       u3241 0C9B                       u3225 0C84  
                     u3145 0C23                       u3081 0B8F                       u3401 04E7  
                     u2361 0A3D                       u2290 16F8                       u2450 0996  
                     u2610 01FF                       u3250 0CB0                       u3170 0C4C  
                     u3090 0B95                       u3330 048F                       u2530 008C  
                     u2370 0A69                       u2291 16F7                       u2451 0995  
                     u2435 097E                       u2611 01FE                       u3315 0D1B  
                     u3251 0CAF                       u3171 0C4B                       u3091 0B94  
                     u3411 053B                       u3331 048E                       u2531 008B  
                     u2275 17A0                       u2371 0A68                       u2460 099D  
                     u2380 094B                       u2700 02B5                       u2620 020B  
                     u3260 0CB7                       u3180 0C67                       u3412 0542  
                     u3340 0496                       u2540 0094                       u2461 099C  
                     u2445 098A                       u2381 094A                       u2701 02B4  
                     u2621 020A                       u3261 0CB6                       u3181 0C66  
                     u3165 0C32                       u3501 0665                       u3421 0557  
                     u3413 0549                       u3341 0495                       u2541 0093  
                     u2525 007C                       u2390 0957                       u2710 02C5  
                     u2630 0212                       u3270 0CC1                       u3190 0C70  
                     u3502 066C                       u3422 055E                       u3350 049B  
                     u2470 1704                       u2391 0956                       u2711 02C4  
                     u2631 0211                       u3271 0CC0                       u3191 0C6F  
                     u3175 0C48                       u3511 0692                       u3503 0673  
                     u3431 0583                       u3423 0565                       u3351 049A  
                     u2471 1703                       u2640 0217                       u3280 0CD3  
                     u3600 0738                       u3520 06BC                       u3512 0699  
                     u3432 058A                       u3360 04BE                       u2560 00AF  
                     u2480 003B                       u2641 0216                       u3281 0CD2  
                     u3601 0737                       u3513 06A0                       u3441 059F  
                     u3433 0591                       u3361 04BD                       u2561 00AE  
                     u2481 003A                       u2810 0347                       u2730 02DD  
                     u2650 0231                       u3290 0CE2                       u3610 073E  
                     u3442 05A6                       u3370 04C5                       u2570 00B6  
                     u2490 0053                       u2811 0346                       u2731 02DC  
                     u2651 0230                       u3611 073D                       u3531 06C8  
                     u3443 05AD                       u3371 04C4                       u2571 00B5  
                     u2555 00A1                       u2900 03F0                       u2820 036D  
                     u2740 02E2                       u2660 0235                       u2580 01D3  
                     u3620 0752                       u3540 06E4                       u3532 06CF  
                     u3380 04CA                       u3700 0A8C                       u2901 03EF  
                     u2821 036E                       u2813 0343                       u2805 0324  
                     u2741 02E1                       u2725 02C9                       u2661 0234  
                     u2581 01D2                       u3621 0751                       u3533 06D6  
                     u3525 06B7                       u3461 05D5                       u3381 04C9  
                     u3701 0A8B                       u2910 03F8                       u2830 037F  
                     u2822 0373                       u2750 02E7                       u2670 0294  
                     u2590 01DA                       u3630 0759                       u3462 05DC  
                     u3390 04E3                       u3710 0A90                       u2911 03F7  
                     u2831 0380                       u2823 0374                       u2751 02E6  
                     u2671 0293                       u2591 01D9                       u3295 0CDD  
                     u3631 0758                       u3551 06F0                       u3471 0602  
                     u3463 05E3                       u3455 05AF                       u3391 04E2  
                     u2495 004E                       u3711 0A8F                       u2920 03FF  
                     u2840 039D                       u2832 0385                       u2680 029F  
                     u3640 0763                       u3552 06F7                       u3472 0609  
                     u3800 0B13                       u3720 0AB0                       u1960 08A4  
                     u2921 03FE                       u2841 039C                       u2833 0386  
                     u2761 02FA                       u2681 029D                       u3641 0762  
                     u3553 06FE                       u3545 06DF                       u3473 0610  
                     u3801 0B12                       u3721 0AAF                       u1961 08A3  
                     u2930 0405                       u2850 03C3                       u2770 030C  
                     u2762 0301                       u2690 02A0                       u3650 0775  
                     u3810 0B28                       u2931 0404                       u2851 03C2  
                     u2771 030B                       u2763 0308                       u2675 0290  
                     u3651 0774                       u3491 0638                       _PEIE 005E  
                     u2940 040C                       u2860 03C8                       u2780 0310  
                     u3660 0784                       u3580 0722                       u3492 063F  
                     u3820 0B38                       u3740 0AD3                       u1980 08B7  
                     u3900 0E52                       u2941 040B                       u2861 03C7  
                     u2781 030F                       u3581 0721                       u3565 0700  
                     u3493 0646                       u3485 0612                       u3821 0B37  
                     u3741 0AD2                       u1981 08B6                       u3901 0E51  
                     u2950 0416                       u2790 0320                       u3670 07A3  
                     u3830 0B3C                       u2951 0415                       u2791 031F  
                     u3671 07A2                       u3575 0717                       u3831 0B3B  
                     u3815 0B23                       u3735 0AC4                       u1975 08A8  
                     u2960 0428                       u2880 03E0                       u3680 07BD  
                     u3760 0AF6                       u3840 0D84                       u2961 0427  
                     u2881 03DF                       u3681 07BC                       u3665 077F  
                     u3761 0AF5                       u3841 0D83                       u2970 0437  
                     u2890 03E5                       u3690 07DB                       u3850 0D98  
                     u2891 03E4                       u2875 03D5                       u3691 07DA  
                     u3675 079F                       u3595 0726                       u3755 0AE8  
                     u1995 08BA                       u3851 0D97                       u2980 0446  
                     u3780 0B08                       u3860 0DAD                       u2981 0445  
                     u3685 07B9                       u3781 0B07                       u3917 0DCD  
                     u3861 0DAC                       u2990 0451                       u3790 0B0E  
                     u3870 0DFE                       u2991 0450                       u2975 0432  
                     u3791 0B0D                       u3775 0AFC                       u3927 0E47  
                     u3871 0DFD                       u3880 0E12                       u3937 1712  
                     u3881 0E11                       u3890 0E27                       u3947 17CA  
                     u3891 0E26                       u3957 080E               __CFG_WRT$OFF 0000  
                     _dec1 00C0                       _dec2 00BC                       _adcP 00B6  
                     _adcT 00C2          writeStrLCD@string 0072                       _hall 00BE  
                     _main 0D51                       btemp 007E                       start 0000  
            __CFG_IESO$OFF 0000            ___fldiv@new_exp 0068           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
              _writeIntLCD 000A              ___fltol@sign1 0079            __end_of___fladd 047E  
                    ?_main 0070            __end_of___fldiv 0D51            __end_of___flneg 1709  
            __CFG_WDTE$OFF 0000            __end_of___awmod 09A9            __end_of___flmul 07F3  
          __end_of___fltol 00C2                      _ANSEL 0188            __end_of___lldiv 0A16  
          __end_of___lwdiv 08E7            __end_of___lwmod 0858                _writeStrLCD 0858  
                    _PORTB 0006                      _PORTD 0008                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
           __CFG_FCMEN$OFF 0000            __end_of_initLCD 1800                      _alarm 00BF  
          __end_of_dpowers 101A                      _count 00B9                      _setup 08E7  
    __size_of_writeCharLCD 000F             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 01C2  
           __CFG_MCLRE$OFF 0000            __initialization 07F3               __end_of_main 1000  
                   ??_main 00C4               _writeCharLCD 1709          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072  
                   ?_setup 0070                     _ANSELH 0189                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 0B48             __CFG_PWRTE$OFF 0000  
        writeIntLCD@buffer 0030          writeIntLCD@numero 0034                     _clcLCD 0003  
                   _cmdLCD 0803                  ??___fladd 002C                  ??___fldiv 005E  
                ??___flneg 007E                  ??___awmod 0074                  ??___flmul 0044  
                ??___fltol 0074                  ??___lldiv 0078                  ??___lwdiv 0074  
                ??___lwmod 007C                     _float1 00AC                     _float2 00A4  
                   _count2 00B7                     _cursor 00C3            ___awmod@divisor 0070  
                   _signal 00B5            ___awmod@counter 0075                     _toggle 00BB  
                ??_initLCD 0073         __size_of__Umul8_16 002A                  ??_sprintf 0023  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
  __end_of__initialization 07FC          writeFloat@decimal 0035                 ___flneg@f1 0020  
               ___fltol@f1 0070          writeFloat@initPos 0036          writeFloat@integer 0038  
           __pcstackCOMMON 0070              __end_of_setup 0946                    ??_setup 0028  
               __pbssBANK1 00A0              ?_setCursorLCD 0073          __end_of__Umul8_16 175F  
               __pmaintext 0D51                    ?_clcLCD 0070                    ?_cmdLCD 0070  
             ?_writeIntLCD 0070               ?_writeStrLCD 0072                  ?___xxtofl 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 1000  
           ??_setCursorLCD 0074                    ___fladd 01C2              setCursorLCD@x 0073  
            setCursorLCD@y 0075                    ___fldiv 0B48            __size_of_clcLCD 0007  
                  ___flneg 16FA            __size_of_cmdLCD 0014                    ___awmod 0946  
                  ___flmul 047E                    ___fltol 0028                    ___lldiv 09A9  
                  ___lwdiv 089C                    ___lwmod 0817                    __ptext1 0A16  
                  __ptext2 000A                    __ptext3 00C2                    __ptext4 0817  
                  __ptext5 089C                    __ptext6 08E7                    __ptext7 0858  
                  __ptext8 1709                    __ptext9 1718                    _initLCD 17C6  
                  _entero1 00C1                    _entero2 00BD                    _dpowers 1010  
               ??___xxtofl 0074           ___awmod@dividend 0072   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002F   __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009  
                  _toggle2 00B8                    _sprintf 00C2                    clrloop0 16C8  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070                  _PORTDbits 0008                ___fladd@grs 003B  
            ___xxtofl@sign 0078                  _TRISCbits 0087                ___fldiv@grs 006A  
              ___fldiv@rem 0063                ___flmul@grs 004A                 _writeFloat 0A16  
           __end_of_clcLCD 000A             __end_of_cmdLCD 0817       __end_of_setCursorLCD 1735  
     __size_of_writeIntLCD 001E        start_initialization 07F3       __size_of_writeStrLCD 0044  
        ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070  
        ??_I2C_Master_Stop 0070   __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0073  
                 ??_cmdLCD 0070                  __Umul8_16 1735                  ___fladd@a 0028  
                ___fladd@b 0024                  ___fldiv@a 0056                  ___fldiv@b 005A  
                ___flmul@a 0040                  ___flmul@b 003C                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00C4          __size_of___xxtofl 00C2  
    writeCharLCD@character 0071                sprintf@flag 0027                sprintf@prec 0028  
         _I2C_Master_Start 16CF           _I2C_Master_Write 16E1           ___lwdiv@dividend 0072  
                cmdLCD@cmd 0072                   ?___fladd 0024                   ?___fldiv 0056  
                 ?___flneg 0020                   ?___awmod 0070                   ?___flmul 003C  
                 ?___fltol 0070                   ?___lldiv 0070                ?_writeFloat 0035  
               ?__Umul8_16 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
                __pstrings 1000                   ?_initLCD 0070              ?_writeCharLCD 0070  
         ___lwdiv@quotient 0075                   ?_sprintf 0020             __size_of_setup 005F  
                clear_ram0 16C7      __size_of_setCursorLCD 001D                __stringbase 100F  
           ??_writeCharLCD 0070        I2C_Master_Read@temp 0074        __size_of_writeFloat 0070  
             _setCursorLCD 1718                ??__Umul8_16 0072           __size_of___fladd 02BC  
         __size_of___fldiv 0209           __size_of___flneg 000F           __size_of___awmod 0063  
         __size_of___flmul 0375           __size_of___fltol 009A           __size_of___lldiv 006D  
         __size_of___lwdiv 004B           __size_of___lwmod 0041         __end_of__stringtab 1010  
               sprintf@val 0029            _I2C_Master_Init 178E            _I2C_Master_Read 175F  
         __size_of_initLCD 003A                   ___xxtofl 0A86            _I2C_Master_Wait 16EB  
          _I2C_Master_Stop 16D8            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 17C6                   __ptext11 0003                   __ptext20 0B48  
                 __ptext12 0803                   __ptext21 01C2                   __ptext13 178E  
                 __ptext22 0946                   __ptext14 09A9                   __ptext23 16E1  
                 __ptext15 0A86                   __ptext24 16D8                   __ptext16 0028  
                 __ptext25 16CF                   __ptext17 16FA                   __ptext26 175F  
                 __ptext18 047E                   __ptext27 16EB                   __ptext19 1735  
        __CFG_BOR4V$BOR40V 0000           __size_of_sprintf 0100              __size_of_main 02AF  
                 _sensorF1 00B0                   _sensorF2 00A8              ??_writeIntLCD 002D  
            ??_writeStrLCD 0074   __end_of_I2C_Master_Start 16D8   __end_of_I2C_Master_Write 16EB  
                sprintf@ap 0026                  sprintf@sp 002B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074       __end_of_writeCharLCD 1718                  stringcode 100A  
             ??_writeFloat 0037    __end_of_I2C_Master_Init 17C6    __end_of_I2C_Master_Read 178E  
  __end_of_I2C_Master_Wait 16FA    __end_of_I2C_Master_Stop 16E1     __Umul8_16@multiplicand 0070  
                 sprintf@c 002C                   sprintf@f 0020           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 100A                   stringtab 1000        __end_of_writeIntLCD 0028  
              _SSPCON2bits 0091        __end_of_writeStrLCD 089C              ___fladd@signs 0038  
       __end_of_writeFloat 0A86               ___fladd@aexp 0039               ___fladd@bexp 003A  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
