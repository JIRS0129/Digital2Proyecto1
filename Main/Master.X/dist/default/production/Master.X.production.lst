

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Mar 06 16:13:26 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_I2C_Master_Read
   712                           	FNCALL	_main,_I2C_Master_Start
   713                           	FNCALL	_main,_I2C_Master_Stop
   714                           	FNCALL	_main,_I2C_Master_Write
   715                           	FNCALL	_main,___awmod
   716                           	FNCALL	_main,___fladd
   717                           	FNCALL	_main,___flmul
   718                           	FNCALL	_main,___flneg
   719                           	FNCALL	_main,___fltol
   720                           	FNCALL	_main,___xxtofl
   721                           	FNCALL	_main,_setCursorLCD
   722                           	FNCALL	_main,_setup
   723                           	FNCALL	_main,_writeCharLCD
   724                           	FNCALL	_main,_writeFloat
   725                           	FNCALL	_main,_writeIntLCD
   726                           	FNCALL	_main,_writeStrLCD
   727                           	FNCALL	_writeFloat,_setCursorLCD
   728                           	FNCALL	_writeFloat,_writeCharLCD
   729                           	FNCALL	_writeFloat,_writeIntLCD
   730                           	FNCALL	_writeIntLCD,_sprintf
   731                           	FNCALL	_writeIntLCD,_writeStrLCD
   732                           	FNCALL	_sprintf,___lwdiv
   733                           	FNCALL	_sprintf,___lwmod
   734                           	FNCALL	_setup,_I2C_Master_Init
   735                           	FNCALL	_setup,_clcLCD
   736                           	FNCALL	_setup,_initLCD
   737                           	FNCALL	_setup,_setCursorLCD
   738                           	FNCALL	_setup,_writeStrLCD
   739                           	FNCALL	_writeStrLCD,_writeCharLCD
   740                           	FNCALL	_setCursorLCD,_cmdLCD
   741                           	FNCALL	_initLCD,_cmdLCD
   742                           	FNCALL	_clcLCD,_cmdLCD
   743                           	FNCALL	_I2C_Master_Init,___lldiv
   744                           	FNCALL	___flmul,__Umul8_16
   745                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   746                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   747                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   748                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   749                           	FNROOT	_main
   750                           	global	_dpowers
   751                           psect	strings,class=STRING,delta=2,noexec
   752                           global __pstrings
   753                           __pstrings:
   754  0800                     stringtab:
   755  0800                     	global    __stringtab
   756                           __stringtab:
   757  0800                     ;	String table - string pointers are 1 byte each
   758                           	btfsc	(btemp+1),7
   759  0800  1BFF               	ljmp	stringcode
   760  0801  280A               	bcf	status,7
   761  0802  1383               	btfsc	(btemp+1),0
   762  0803  187F               	bsf	status,7
   763  0804  1783               	movf	indf,w
   764  0805  0800               	incf fsr
   765  0806  0A84               skipnz
   766  0807  1903               incf btemp+1
   767  0808  0AFF               	return
   768  0809  0008               stringcode:stringdir:
   769  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
   770  080A  3008               movwf pclath
   771  080B  008A               movf fsr,w
   772  080C  0804               incf fsr
   773  080D  0A84               	addwf pc
   774  080E  0782               	global __stringbase
   775                           __stringbase:
   776  080F                     	retlw	0
   777  080F  3400               psect	strings
   778                           	global    __end_of__stringtab
   779                           __end_of__stringtab:
   780  0810                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   781                           	line	358
   782                           _dpowers:
   783  0810                     	retlw	01h
   784  0810  3401               	retlw	0
   785  0811  3400               
   786                           	retlw	0Ah
   787  0812  340A               	retlw	0
   788  0813  3400               
   789                           	retlw	064h
   790  0814  3464               	retlw	0
   791  0815  3400               
   792                           	retlw	0E8h
   793  0816  34E8               	retlw	03h
   794  0817  3403               
   795                           	retlw	010h
   796  0818  3410               	retlw	027h
   797  0819  3427               
   798                           	global __end_of_dpowers
   799                           __end_of_dpowers:
   800  081A                     	global	_dpowers
   801                           	global	_float1
   802                           	global	_sensorF1
   803                           	global	_writeADC
   804                           	global	_mov
   805                           	global	_count
   806                           	global	_toggle
   807                           	global	_counter
   808                           	global	_dec1
   809                           	global	_entero1
   810                           	global	_adcl
   811                           	global	_adc
   812                           	global	_cursor
   813                           	global	_PORTD
   814                           _PORTD	set	0x8
   815  0008                     	global	_PORTDbits
   816                           _PORTDbits	set	0x8
   817  0008                     	global	_PORTB
   818                           _PORTB	set	0x6
   819  0006                     	global	_SSPBUF
   820                           _SSPBUF	set	0x13
   821  0013                     	global	_SSPCON
   822                           _SSPCON	set	0x14
   823  0014                     	global	_RD1
   824                           _RD1	set	0x41
   825  0041                     	global	_RD0
   826                           _RD0	set	0x40
   827  0040                     	global	_SSPIF
   828                           _SSPIF	set	0x63
   829  0063                     	global	_PEIE
   830                           _PEIE	set	0x5E
   831  005E                     	global	_GIE
   832                           _GIE	set	0x5F
   833  005F                     	global	_TRISD
   834                           _TRISD	set	0x88
   835  0088                     	global	_TRISB
   836                           _TRISB	set	0x86
   837  0086                     	global	_SSPCON2bits
   838                           _SSPCON2bits	set	0x91
   839  0091                     	global	_TRISCbits
   840                           _TRISCbits	set	0x87
   841  0087                     	global	_SSPSTAT
   842                           _SSPSTAT	set	0x94
   843  0094                     	global	_SSPADD
   844                           _SSPADD	set	0x93
   845  0093                     	global	_SSPCON2
   846                           _SSPCON2	set	0x91
   847  0091                     	global	_SSPIE
   848                           _SSPIE	set	0x463
   849  0463                     	global	_TRISC4
   850                           _TRISC4	set	0x43C
   851  043C                     	global	_TRISC3
   852                           _TRISC3	set	0x43B
   853  043B                     	global	_ANSELH
   854                           _ANSELH	set	0x189
   855  0189                     	global	_ANSEL
   856                           _ANSEL	set	0x188
   857  0188                     	
   858                           STR_3:	
   859  081A                     	retlw	32	;' '
   860  081A  3420               	retlw	32	;' '
   861  081B  3420               	retlw	0
   862  081C  3400               psect	strings
   863                           	
   864                           STR_5:	
   865  081D                     	retlw	83	;'S'
   866  081D  3453               	retlw	49	;'1'
   867  081E  3431               	retlw	0
   868  081F  3400               psect	strings
   869                           	
   870                           STR_6:	
   871  0820                     	retlw	83	;'S'
   872  0820  3453               	retlw	50	;'2'
   873  0821  3432               	retlw	0
   874  0822  3400               psect	strings
   875                           	
   876                           STR_7:	
   877  0823                     	retlw	83	;'S'
   878  0823  3453               	retlw	51	;'3'
   879  0824  3433               	retlw	0
   880  0825  3400               psect	strings
   881                           	
   882                           STR_1:	
   883  0826                     	retlw	37	;'%'
   884  0826  3425               	retlw	100	;'d'
   885  0827  3464               	retlw	0
   886  0828  3400               psect	strings
   887                           STR_2	equ	STR_1+0
   888  0826                     STR_4	equ	STR_3+0
   889  081A                     ; #config settings
   890                           global __CFG_FOSC$INTRC_NOCLKOUT
   891                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   892  0000                     global __CFG_WDTE$OFF
   893                           __CFG_WDTE$OFF equ 0x0
   894  0000                     global __CFG_PWRTE$OFF
   895                           __CFG_PWRTE$OFF equ 0x0
   896  0000                     global __CFG_MCLRE$OFF
   897                           __CFG_MCLRE$OFF equ 0x0
   898  0000                     global __CFG_CP$OFF
   899                           __CFG_CP$OFF equ 0x0
   900  0000                     global __CFG_CPD$OFF
   901                           __CFG_CPD$OFF equ 0x0
   902  0000                     global __CFG_BOREN$OFF
   903                           __CFG_BOREN$OFF equ 0x0
   904  0000                     global __CFG_IESO$OFF
   905                           __CFG_IESO$OFF equ 0x0
   906  0000                     global __CFG_FCMEN$OFF
   907                           __CFG_FCMEN$OFF equ 0x0
   908  0000                     global __CFG_LVP$OFF
   909                           __CFG_LVP$OFF equ 0x0
   910  0000                     global __CFG_BOR4V$BOR40V
   911                           __CFG_BOR4V$BOR40V equ 0x0
   912  0000                     global __CFG_WRT$OFF
   913                           __CFG_WRT$OFF equ 0x0
   914  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\sev8."
   915                           	line	#
   916                           psect cinit,class=CODE,delta=2
   917                           global start_initialization
   918                           start_initialization:
   919  07EB                     
   920                           global __initialization
   921                           __initialization:
   922  07EB                     psect	bssBANK0,class=BANK0,space=1,noexec
   923                           global __pbssBANK0
   924                           __pbssBANK0:
   925  005A                     _float1:
   926  005A                            ds      4
   927  005A                     
   928                           _sensorF1:
   929  005E                            ds      4
   930  005E                     
   931                           _writeADC:
   932  0062                            ds      2
   933  0062                     
   934                           _mov:
   935  0064                            ds      1
   936  0064                     
   937                           _count:
   938  0065                            ds      1
   939  0065                     
   940                           _s3:
   941  0066                            ds      1
   942  0066                     
   943                           _toggle:
   944  0067                            ds      1
   945  0067                     
   946                           _dec2:
   947  0068                            ds      1
   948  0068                     
   949                           _entero2:
   950  0069                            ds      1
   951  0069                     
   952                           _counter:
   953  006A                            ds      1
   954  006A                     
   955                           _dec1:
   956  006B                            ds      1
   957  006B                     
   958                           _entero1:
   959  006C                            ds      1
   960  006C                     
   961                           _adcl:
   962  006D                            ds      1
   963  006D                     
   964                           _adc:
   965  006E                            ds      1
   966  006E                     
   967                           _cursor:
   968  006F                            ds      1
   969  006F                     
   970                           psect	bssBANK1,class=BANK1,space=1,noexec
   971                           global __pbssBANK1
   972                           __pbssBANK1:
   973  00A0                     _lux:
   974  00A0                            ds      4
   975  00A0                     
   976                           _float2:
   977  00A4                            ds      4
   978  00A4                     
   979                           _sensorF2:
   980  00A8                            ds      4
   981  00A8                     
   982                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\sev8."
   983                           	line	#
   984                           psect clrtext,class=CODE,delta=2
   985                           global clear_ram0
   986                           ;	Called with FSR containing the base address, and
   987                           ;	W with the last address+1
   988                           clear_ram0:
   989  09F2                     	clrwdt			;clear the watchdog before getting into this loop
   990  09F2  0064               clrloop0:
   991  09F3                     	clrf	indf		;clear RAM location pointed to by FSR
   992  09F3  0180               	incf	fsr,f		;increment pointer
   993  09F4  0A84               	xorwf	fsr,w		;XOR with final address
   994  09F5  0604               	btfsc	status,2	;have we reached the end yet?
   995  09F6  1903               	retlw	0		;all done for this memory range, return
   996  09F7  3400               	xorwf	fsr,w		;XOR again to restore value
   997  09F8  0604               	goto	clrloop0		;do the next byte
   998  09F9  29F3               
   999                           ; Clear objects allocated to BANK0
  1000                           psect cinit,class=CODE,delta=2,merge=1
  1001                           	bcf	status, 7	;select IRP bank0
  1002  07EB  1383               	movlw	low(__pbssBANK0)
  1003  07EC  305A               	movwf	fsr
  1004  07ED  0084               	movlw	low((__pbssBANK0)+016h)
  1005  07EE  3070               	fcall	clear_ram0
  1006  07EF  120A  158A  21F2  120A  118A  ; Clear objects allocated to BANK1
  1007                           psect cinit,class=CODE,delta=2,merge=1
  1008                           	movlw	low(__pbssBANK1)
  1009  07F4  30A0               	movwf	fsr
  1010  07F5  0084               	movlw	low((__pbssBANK1)+0Ch)
  1011  07F6  30AC               	fcall	clear_ram0
  1012  07F7  120A  158A  21F2  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1013                           global end_of_initialization,__end_of__initialization
  1014                           
  1015                           ;End of C runtime variable initialization code
  1016                           
  1017                           end_of_initialization:
  1018  07FC                     __end_of__initialization:
  1019  07FC                     clrf status
  1020  07FC  0183               ljmp _main	;jump to C main() function
  1021  07FD  120A  118A  282B   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1022                           global __pcstackCOMMON
  1023                           __pcstackCOMMON:
  1024  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1025  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1026  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1027  0070                     ??_writeCharLCD:	; 1 bytes @ 0x0
  1028  0070                     ?_setup:	; 1 bytes @ 0x0
  1029  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1030  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1031  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1032  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1033  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1034  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1035  0070                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1036  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1037  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1038  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1039  0070                     ?_main:	; 1 bytes @ 0x0
  1040  0070                     	global	?__Umul8_16
  1041                           ?__Umul8_16:	; 2 bytes @ 0x0
  1042  0070                     	global	?_I2C_Master_Read
  1043                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1044  0070                     	global	?___awmod
  1045                           ?___awmod:	; 2 bytes @ 0x0
  1046  0070                     	global	?___lwdiv
  1047                           ?___lwdiv:	; 2 bytes @ 0x0
  1048  0070                     	global	?___lldiv
  1049                           ?___lldiv:	; 4 bytes @ 0x0
  1050  0070                     	global	?___fltol
  1051                           ?___fltol:	; 4 bytes @ 0x0
  1052  0070                     	global	?___xxtofl
  1053                           ?___xxtofl:	; 4 bytes @ 0x0
  1054  0070                     	global	__Umul8_16@multiplicand
  1055                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1056  0070                     	global	I2C_Master_Write@d
  1057                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1058  0070                     	global	I2C_Master_Read@a
  1059                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1060  0070                     	global	___awmod@divisor
  1061                           ___awmod@divisor:	; 2 bytes @ 0x0
  1062  0070                     	global	___lwdiv@divisor
  1063                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1064  0070                     	global	___lldiv@divisor
  1065                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1066  0070                     	global	___fltol@f1
  1067                           ___fltol@f1:	; 4 bytes @ 0x0
  1068  0070                     	global	___xxtofl@val
  1069                           ___xxtofl@val:	; 4 bytes @ 0x0
  1070  0070                     	ds	1
  1071  0070                     	global	writeCharLCD@character
  1072                           writeCharLCD@character:	; 1 bytes @ 0x1
  1073  0071                     	ds	1
  1074  0071                     ??__Umul8_16:	; 1 bytes @ 0x2
  1075  0072                     ??_I2C_Master_Write:	; 1 bytes @ 0x2
  1076  0072                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1077  0072                     ?_writeStrLCD:	; 1 bytes @ 0x2
  1078  0072                     	global	cmdLCD@cmd
  1079                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1080  0072                     	global	writeStrLCD@string
  1081                           writeStrLCD@string:	; 2 bytes @ 0x2
  1082  0072                     	global	___awmod@dividend
  1083                           ___awmod@dividend:	; 2 bytes @ 0x2
  1084  0072                     	global	___lwdiv@dividend
  1085                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1086  0072                     	ds	1
  1087  0072                     ?_setCursorLCD:	; 1 bytes @ 0x3
  1088  0073                     ??_clcLCD:	; 1 bytes @ 0x3
  1089  0073                     ??_initLCD:	; 1 bytes @ 0x3
  1090  0073                     	global	setCursorLCD@x
  1091                           setCursorLCD@x:	; 1 bytes @ 0x3
  1092  0073                     	ds	1
  1093  0073                     ??_setCursorLCD:	; 1 bytes @ 0x4
  1094  0074                     ??_writeStrLCD:	; 1 bytes @ 0x4
  1095  0074                     ??___awmod:	; 1 bytes @ 0x4
  1096  0074                     ??___fltol:	; 1 bytes @ 0x4
  1097  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1098  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  1099  0074                     	global	I2C_Master_Read@temp
  1100                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1101  0074                     	global	__Umul8_16@product
  1102                           __Umul8_16@product:	; 2 bytes @ 0x4
  1103  0074                     	global	___lldiv@dividend
  1104                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1105  0074                     	ds	1
  1106  0074                     	global	setCursorLCD@y
  1107                           setCursorLCD@y:	; 1 bytes @ 0x5
  1108  0075                     	global	___awmod@counter
  1109                           ___awmod@counter:	; 1 bytes @ 0x5
  1110  0075                     	global	___lwdiv@quotient
  1111                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1112  0075                     	ds	1
  1113  0075                     	global	___awmod@sign
  1114                           ___awmod@sign:	; 1 bytes @ 0x6
  1115  0076                     	global	__Umul8_16@word_mpld
  1116                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1117  0076                     	ds	1
  1118  0076                     	global	___lwdiv@counter
  1119                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1120  0077                     	global	writeStrLCD@cont
  1121                           writeStrLCD@cont:	; 2 bytes @ 0x7
  1122  0077                     	ds	1
  1123  0077                     ??___lldiv:	; 1 bytes @ 0x8
  1124  0078                     	global	?___lwmod
  1125                           ?___lwmod:	; 2 bytes @ 0x8
  1126  0078                     	global	___xxtofl@sign
  1127                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1128  0078                     	global	__Umul8_16@multiplier
  1129                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1130  0078                     	global	___lwmod@divisor
  1131                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1132  0078                     	ds	1
  1133  0078                     	global	___fltol@sign1
  1134                           ___fltol@sign1:	; 1 bytes @ 0x9
  1135  0079                     	global	___xxtofl@exp
  1136                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1137  0079                     	global	___lldiv@quotient
  1138                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1139  0079                     	ds	1
  1140  0079                     	global	___fltol@exp1
  1141                           ___fltol@exp1:	; 1 bytes @ 0xA
  1142  007A                     	global	___lwmod@dividend
  1143                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1144  007A                     	global	___xxtofl@arg
  1145                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1146  007A                     	ds	2
  1147  007A                     ??___lwmod:	; 1 bytes @ 0xC
  1148  007C                     	ds	1
  1149  007C                     	global	___lldiv@counter
  1150                           ___lldiv@counter:	; 1 bytes @ 0xD
  1151  007D                     	global	___lwmod@counter
  1152                           ___lwmod@counter:	; 1 bytes @ 0xD
  1153  007D                     	ds	1
  1154  007D                     ??___flneg:	; 1 bytes @ 0xE
  1155  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1156                           global __pcstackBANK0
  1157                           __pcstackBANK0:
  1158  0020                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1159  0020                     	global	?_sprintf
  1160                           ?_sprintf:	; 2 bytes @ 0x0
  1161  0020                     	global	?___flneg
  1162                           ?___flneg:	; 4 bytes @ 0x0
  1163  0020                     	global	sprintf@f
  1164                           sprintf@f:	; 1 bytes @ 0x0
  1165  0020                     	global	I2C_Master_Init@c
  1166                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1167  0020                     	global	___flneg@f1
  1168                           ___flneg@f1:	; 4 bytes @ 0x0
  1169  0020                     	ds	3
  1170  0020                     ??_sprintf:	; 1 bytes @ 0x3
  1171  0023                     	ds	1
  1172  0023                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1173  0024                     	global	?___fladd
  1174                           ?___fladd:	; 4 bytes @ 0x4
  1175  0024                     	global	___fladd@b
  1176                           ___fladd@b:	; 4 bytes @ 0x4
  1177  0024                     	ds	2
  1178  0024                     	global	sprintf@ap
  1179                           sprintf@ap:	; 1 bytes @ 0x6
  1180  0026                     	ds	1
  1181  0026                     	global	sprintf@flag
  1182                           sprintf@flag:	; 1 bytes @ 0x7
  1183  0027                     	ds	1
  1184  0027                     ??_setup:	; 1 bytes @ 0x8
  1185  0028                     	global	sprintf@prec
  1186                           sprintf@prec:	; 1 bytes @ 0x8
  1187  0028                     	global	___fladd@a
  1188                           ___fladd@a:	; 4 bytes @ 0x8
  1189  0028                     	ds	1
  1190  0028                     	global	sprintf@val
  1191                           sprintf@val:	; 2 bytes @ 0x9
  1192  0029                     	ds	2
  1193  0029                     	global	sprintf@sp
  1194                           sprintf@sp:	; 1 bytes @ 0xB
  1195  002B                     	ds	1
  1196  002B                     ??___fladd:	; 1 bytes @ 0xC
  1197  002C                     	global	sprintf@c
  1198                           sprintf@c:	; 1 bytes @ 0xC
  1199  002C                     	ds	1
  1200  002C                     ??_writeIntLCD:	; 1 bytes @ 0xD
  1201  002D                     	ds	3
  1202  002D                     	global	writeIntLCD@buffer
  1203                           writeIntLCD@buffer:	; 4 bytes @ 0x10
  1204  0030                     	ds	4
  1205  0030                     	global	writeIntLCD@numero
  1206                           writeIntLCD@numero:	; 1 bytes @ 0x14
  1207  0034                     	ds	1
  1208  0034                     ?_writeFloat:	; 1 bytes @ 0x15
  1209  0035                     	global	writeFloat@decimal
  1210                           writeFloat@decimal:	; 1 bytes @ 0x15
  1211  0035                     	ds	1
  1212  0035                     	global	writeFloat@initPos
  1213                           writeFloat@initPos:	; 1 bytes @ 0x16
  1214  0036                     	ds	1
  1215  0036                     ??_writeFloat:	; 1 bytes @ 0x17
  1216  0037                     	ds	1
  1217  0037                     	global	writeFloat@integer
  1218                           writeFloat@integer:	; 1 bytes @ 0x18
  1219  0038                     	global	___fladd@signs
  1220                           ___fladd@signs:	; 1 bytes @ 0x18
  1221  0038                     	ds	1
  1222  0038                     	global	___fladd@aexp
  1223                           ___fladd@aexp:	; 1 bytes @ 0x19
  1224  0039                     	ds	1
  1225  0039                     	global	___fladd@bexp
  1226                           ___fladd@bexp:	; 1 bytes @ 0x1A
  1227  003A                     	ds	1
  1228  003A                     	global	___fladd@grs
  1229                           ___fladd@grs:	; 1 bytes @ 0x1B
  1230  003B                     	ds	1
  1231  003B                     	global	?___flmul
  1232                           ?___flmul:	; 4 bytes @ 0x1C
  1233  003C                     	global	___flmul@b
  1234                           ___flmul@b:	; 4 bytes @ 0x1C
  1235  003C                     	ds	4
  1236  003C                     	global	___flmul@a
  1237                           ___flmul@a:	; 4 bytes @ 0x20
  1238  0040                     	ds	4
  1239  0040                     ??___flmul:	; 1 bytes @ 0x24
  1240  0044                     	ds	5
  1241  0044                     	global	___flmul@sign
  1242                           ___flmul@sign:	; 1 bytes @ 0x29
  1243  0049                     	ds	1
  1244  0049                     	global	___flmul@grs
  1245                           ___flmul@grs:	; 4 bytes @ 0x2A
  1246  004A                     	ds	4
  1247  004A                     	global	___flmul@aexp
  1248                           ___flmul@aexp:	; 1 bytes @ 0x2E
  1249  004E                     	ds	1
  1250  004E                     	global	___flmul@bexp
  1251                           ___flmul@bexp:	; 1 bytes @ 0x2F
  1252  004F                     	ds	1
  1253  004F                     	global	___flmul@prod
  1254                           ___flmul@prod:	; 4 bytes @ 0x30
  1255  0050                     	ds	4
  1256  0050                     	global	___flmul@temp
  1257                           ___flmul@temp:	; 2 bytes @ 0x34
  1258  0054                     	ds	2
  1259  0054                     ??_main:	; 1 bytes @ 0x36
  1260  0056                     	ds	4
  1261  0056                     ;!
  1262                           ;!Data Sizes:
  1263                           ;!    Strings     15
  1264                           ;!    Constant    10
  1265                           ;!    Data        0
  1266                           ;!    BSS         34
  1267                           ;!    Persistent  0
  1268                           ;!    Stack       0
  1269                           ;!
  1270                           ;!Auto Spaces:
  1271                           ;!    Space          Size  Autos    Used
  1272                           ;!    COMMON           14     14      14
  1273                           ;!    BANK0            80     58      80
  1274                           ;!    BANK1            80      0      12
  1275                           ;!    BANK3            96      0       0
  1276                           ;!    BANK2            96      0       0
  1277                           
  1278                           ;!
  1279                           ;!Pointer List with Targets:
  1280                           ;!
  1281                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1282                           ;!		 -> STR_2(CODE[3]), STR_1(CODE[3]), 
  1283                           ;!
  1284                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
  1285                           ;!		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 
  1286                           ;!
  1287                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1288                           ;!		 -> ?_sprintf(BANK0[2]), 
  1289                           ;!
  1290                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 5
  1291                           ;!		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
  1292                           ;!		 -> STR_3(CODE[3]), writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 

  1293                           ;!
  1294                           
  1295                           
  1296                           ;!
  1297                           ;!Critical Paths under _main in COMMON
  1298                           ;!
  1299                           ;!    _main->___xxtofl
  1300                           ;!    _sprintf->___lwmod
  1301                           ;!    ___lwmod->___lwdiv
  1302                           ;!    _writeStrLCD->_writeCharLCD
  1303                           ;!    _setCursorLCD->_cmdLCD
  1304                           ;!    _initLCD->_cmdLCD
  1305                           ;!    _clcLCD->_cmdLCD
  1306                           ;!    _I2C_Master_Init->___lldiv
  1307                           ;!    ___flneg->___xxtofl
  1308                           ;!    ___flmul->___xxtofl
  1309                           ;!    ___fladd->___xxtofl
  1310                           ;!
  1311                           ;!Critical Paths under _main in BANK0
  1312                           ;!
  1313                           ;!    _main->___flmul
  1314                           ;!    _writeFloat->_writeIntLCD
  1315                           ;!    _writeIntLCD->_sprintf
  1316                           ;!    _setup->_I2C_Master_Init
  1317                           ;!    ___flmul->___fladd
  1318                           ;!    ___fladd->___flneg
  1319                           ;!
  1320                           ;!Critical Paths under _main in BANK1
  1321                           ;!
  1322                           ;!    None.
  1323                           ;!
  1324                           ;!Critical Paths under _main in BANK3
  1325                           ;!
  1326                           ;!    None.
  1327                           ;!
  1328                           ;!Critical Paths under _main in BANK2
  1329                           ;!
  1330                           ;!    None.
  1331                           
  1332 ;;
  1333 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1334 ;;
  1335                           
  1336                           ;!
  1337                           ;!Call Graph Tables:
  1338                           ;!
  1339                           ;! ---------------------------------------------------------------------------------
  1340                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1341                           ;! ---------------------------------------------------------------------------------
  1342                           ;! (0) _main                                                 4     4      0   15086
  1343                           ;!                                             54 BANK0      4     4      0
  1344                           ;!                    _I2C_Master_Read
  1345                           ;!                   _I2C_Master_Start
  1346                           ;!                    _I2C_Master_Stop
  1347                           ;!                   _I2C_Master_Write
  1348                           ;!                            ___awmod
  1349                           ;!                            ___fladd
  1350                           ;!                            ___flmul
  1351                           ;!                            ___flneg
  1352                           ;!                            ___fltol
  1353                           ;!                           ___xxtofl
  1354                           ;!                       _setCursorLCD
  1355                           ;!                              _setup
  1356                           ;!                       _writeCharLCD
  1357                           ;!                         _writeFloat
  1358                           ;!                        _writeIntLCD
  1359                           ;!                        _writeStrLCD
  1360                           ;! ---------------------------------------------------------------------------------
  1361                           ;! (1) _writeFloat                                           4     2      2    3186
  1362                           ;!                                             21 BANK0      4     2      2
  1363                           ;!                       _setCursorLCD
  1364                           ;!                       _writeCharLCD
  1365                           ;!                        _writeIntLCD
  1366                           ;! ---------------------------------------------------------------------------------
  1367                           ;! (1) _writeIntLCD                                          8     8      0    2040
  1368                           ;!                                             13 BANK0      8     8      0
  1369                           ;!                            _sprintf
  1370                           ;!                        _writeStrLCD
  1371                           ;! ---------------------------------------------------------------------------------
  1372                           ;! (2) _sprintf                                             21    18      3    1320
  1373                           ;!                                              0 BANK0     13    10      3
  1374                           ;!                            ___lwdiv
  1375                           ;!                            ___lwmod
  1376                           ;! ---------------------------------------------------------------------------------
  1377                           ;! (3) ___lwmod                                              6     2      4     311
  1378                           ;!                                              8 COMMON     6     2      4
  1379                           ;!                            ___lwdiv (ARG)
  1380                           ;! ---------------------------------------------------------------------------------
  1381                           ;! (3) ___lwdiv                                              8     4      4     314
  1382                           ;!                                              0 COMMON     8     4      4
  1383                           ;! ---------------------------------------------------------------------------------
  1384                           ;! (1) _setup                                                1     1      0    1872
  1385                           ;!                                              8 BANK0      1     1      0
  1386                           ;!                    _I2C_Master_Init
  1387                           ;!                             _clcLCD
  1388                           ;!                            _initLCD
  1389                           ;!                       _setCursorLCD
  1390                           ;!                        _writeStrLCD
  1391                           ;! ---------------------------------------------------------------------------------
  1392                           ;! (1) _writeStrLCD                                          7     5      2     644
  1393                           ;!                                              2 COMMON     7     5      2
  1394                           ;!                       _writeCharLCD
  1395                           ;! ---------------------------------------------------------------------------------
  1396                           ;! (2) _writeCharLCD                                         2     2      0      22
  1397                           ;!                                              0 COMMON     2     2      0
  1398                           ;! ---------------------------------------------------------------------------------
  1399                           ;! (2) _setCursorLCD                                         3     2      1     772
  1400                           ;!                                              3 COMMON     3     2      1
  1401                           ;!                             _cmdLCD
  1402                           ;! ---------------------------------------------------------------------------------
  1403                           ;! (2) _initLCD                                              2     2      0      22
  1404                           ;!                                              3 COMMON     2     2      0
  1405                           ;!                             _cmdLCD
  1406                           ;! ---------------------------------------------------------------------------------
  1407                           ;! (2) _clcLCD                                               0     0      0      22
  1408                           ;!                             _cmdLCD
  1409                           ;! ---------------------------------------------------------------------------------
  1410                           ;! (3) _cmdLCD                                               3     3      0      22
  1411                           ;!                                              0 COMMON     3     3      0
  1412                           ;! ---------------------------------------------------------------------------------
  1413                           ;! (2) _I2C_Master_Init                                      8     4      4     412
  1414                           ;!                                              0 BANK0      8     4      4
  1415                           ;!                            ___lldiv
  1416                           ;! ---------------------------------------------------------------------------------
  1417                           ;! (3) ___lldiv                                             14     6      8     314
  1418                           ;!                                              0 COMMON    14     6      8
  1419                           ;! ---------------------------------------------------------------------------------
  1420                           ;! (1) ___xxtofl                                            14    10      4     398
  1421                           ;!                                              0 COMMON    14    10      4
  1422                           ;! ---------------------------------------------------------------------------------
  1423                           ;! (1) ___fltol                                             11     7      4     381
  1424                           ;!                                              0 COMMON    11     7      4
  1425                           ;! ---------------------------------------------------------------------------------
  1426                           ;! (1) ___flneg                                              4     0      4     121
  1427                           ;!                                              0 BANK0      4     0      4
  1428                           ;!                           ___xxtofl (ARG)
  1429                           ;! ---------------------------------------------------------------------------------
  1430                           ;! (1) ___flmul                                             26    18      8    2417
  1431                           ;!                                             28 BANK0     26    18      8
  1432                           ;!                          __Umul8_16
  1433                           ;!                            ___fladd (ARG)
  1434                           ;!                            ___flneg (ARG)
  1435                           ;!                           ___xxtofl (ARG)
  1436                           ;! ---------------------------------------------------------------------------------
  1437                           ;! (2) __Umul8_16                                            9     7      2     799
  1438                           ;!                                              0 COMMON     9     7      2
  1439                           ;! ---------------------------------------------------------------------------------
  1440                           ;! (1) ___fladd                                             24    16      8    2262
  1441                           ;!                                              4 BANK0     24    16      8
  1442                           ;!                            ___flneg (ARG)
  1443                           ;!                           ___xxtofl (ARG)
  1444                           ;! ---------------------------------------------------------------------------------
  1445                           ;! (1) ___awmod                                              7     3      4     448
  1446                           ;!                                              0 COMMON     7     3      4
  1447                           ;! ---------------------------------------------------------------------------------
  1448                           ;! (1) _I2C_Master_Write                                     2     0      2     174
  1449                           ;!                                              0 COMMON     2     0      2
  1450                           ;!                    _I2C_Master_Wait
  1451                           ;! ---------------------------------------------------------------------------------
  1452                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  1453                           ;!                    _I2C_Master_Wait
  1454                           ;! ---------------------------------------------------------------------------------
  1455                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  1456                           ;!                    _I2C_Master_Wait
  1457                           ;! ---------------------------------------------------------------------------------
  1458                           ;! (1) _I2C_Master_Read                                      6     4      2     349
  1459                           ;!                                              0 COMMON     6     4      2
  1460                           ;!                    _I2C_Master_Wait
  1461                           ;! ---------------------------------------------------------------------------------
  1462                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  1463                           ;! ---------------------------------------------------------------------------------
  1464                           ;! Estimated maximum stack depth 3
  1465                           ;! ---------------------------------------------------------------------------------
  1466                           ;!
  1467                           ;! Call Graph Graphs:
  1468                           ;!
  1469                           ;! _main (ROOT)
  1470                           ;!   _I2C_Master_Read
  1471                           ;!     _I2C_Master_Wait
  1472                           ;!   _I2C_Master_Start
  1473                           ;!     _I2C_Master_Wait
  1474                           ;!   _I2C_Master_Stop
  1475                           ;!     _I2C_Master_Wait
  1476                           ;!   _I2C_Master_Write
  1477                           ;!     _I2C_Master_Wait
  1478                           ;!   ___awmod
  1479                           ;!   ___fladd
  1480                           ;!     ___flneg (ARG)
  1481                           ;!       ___xxtofl (ARG)
  1482                           ;!     ___xxtofl (ARG)
  1483                           ;!   ___flmul
  1484                           ;!     __Umul8_16
  1485                           ;!     ___fladd (ARG)
  1486                           ;!       ___flneg (ARG)
  1487                           ;!         ___xxtofl (ARG)
  1488                           ;!       ___xxtofl (ARG)
  1489                           ;!     ___flneg (ARG)
  1490                           ;!       ___xxtofl (ARG)
  1491                           ;!     ___xxtofl (ARG)
  1492                           ;!   ___flneg
  1493                           ;!     ___xxtofl (ARG)
  1494                           ;!   ___fltol
  1495                           ;!   ___xxtofl
  1496                           ;!   _setCursorLCD
  1497                           ;!     _cmdLCD
  1498                           ;!   _setup
  1499                           ;!     _I2C_Master_Init
  1500                           ;!       ___lldiv
  1501                           ;!     _clcLCD
  1502                           ;!       _cmdLCD
  1503                           ;!     _initLCD
  1504                           ;!       _cmdLCD
  1505                           ;!     _setCursorLCD
  1506                           ;!       _cmdLCD
  1507                           ;!     _writeStrLCD
  1508                           ;!       _writeCharLCD
  1509                           ;!   _writeCharLCD
  1510                           ;!   _writeFloat
  1511                           ;!     _setCursorLCD
  1512                           ;!       _cmdLCD
  1513                           ;!     _writeCharLCD
  1514                           ;!     _writeIntLCD
  1515                           ;!       _sprintf
  1516                           ;!         ___lwdiv
  1517                           ;!         ___lwmod
  1518                           ;!           ___lwdiv (ARG)
  1519                           ;!       _writeStrLCD
  1520                           ;!         _writeCharLCD
  1521                           ;!   _writeIntLCD
  1522                           ;!     _sprintf
  1523                           ;!       ___lwdiv
  1524                           ;!       ___lwmod
  1525                           ;!         ___lwdiv (ARG)
  1526                           ;!     _writeStrLCD
  1527                           ;!       _writeCharLCD
  1528                           ;!   _writeStrLCD
  1529                           ;!     _writeCharLCD
  1530                           ;!
  1531                           
  1532                           ;! Address spaces:
  1533                           
  1534                           ;!Name               Size   Autos  Total    Cost      Usage
  1535                           ;!BITCOMMON            E      0       0       0        0.0%
  1536                           ;!EEDATA             100      0       0       0        0.0%
  1537                           ;!NULL                 0      0       0       0        0.0%
  1538                           ;!CODE                 0      0       0       0        0.0%
  1539                           ;!COMMON               E      E       E       1      100.0%
  1540                           ;!BITSFR0              0      0       0       1        0.0%
  1541                           ;!SFR0                 0      0       0       1        0.0%
  1542                           ;!BITSFR1              0      0       0       2        0.0%
  1543                           ;!SFR1                 0      0       0       2        0.0%
  1544                           ;!STACK                0      0       0       2        0.0%
  1545                           ;!ABS                  0      0      6A       3        0.0%
  1546                           ;!BITBANK0            50      0       0       4        0.0%
  1547                           ;!BITSFR3              0      0       0       4        0.0%
  1548                           ;!SFR3                 0      0       0       4        0.0%
  1549                           ;!BANK0               50     3A      50       5      100.0%
  1550                           ;!BITSFR2              0      0       0       5        0.0%
  1551                           ;!SFR2                 0      0       0       5        0.0%
  1552                           ;!BITBANK1            50      0       0       6        0.0%
  1553                           ;!BANK1               50      0       C       7       15.0%
  1554                           ;!BITBANK3            60      0       0       8        0.0%
  1555                           ;!BANK3               60      0       0       9        0.0%
  1556                           ;!BITBANK2            60      0       0      10        0.0%
  1557                           ;!BANK2               60      0       0      11        0.0%
  1558                           ;!DATA                 0      0      6A      12        0.0%
  1559                           
  1560                           	global	_main
  1561                           
  1562 ;; *************** function _main *****************
  1563 ;; Defined at:
  1564 ;;		line 61 in file "mainM.c"
  1565 ;; Parameters:    Size  Location     Type
  1566 ;;		None
  1567 ;; Auto vars:     Size  Location     Type
  1568 ;;		None
  1569 ;; Return value:  Size  Location     Type
  1570 ;;                  1    wreg      void 
  1571 ;; Registers used:
  1572 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1573 ;; Tracked objects:
  1574 ;;		On entry : B00/0
  1575 ;;		On exit  : 0/0
  1576 ;;		Unchanged: 0/0
  1577 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1578 ;;      Params:         0       0       0       0       0
  1579 ;;      Locals:         0       0       0       0       0
  1580 ;;      Temps:          0       4       0       0       0
  1581 ;;      Totals:         0       4       0       0       0
  1582 ;;Total ram usage:        4 bytes
  1583 ;; Hardware stack levels required when called:    4
  1584 ;; This function calls:
  1585 ;;		_I2C_Master_Read
  1586 ;;		_I2C_Master_Start
  1587 ;;		_I2C_Master_Stop
  1588 ;;		_I2C_Master_Write
  1589 ;;		___awmod
  1590 ;;		___fladd
  1591 ;;		___flmul
  1592 ;;		___flneg
  1593 ;;		___fltol
  1594 ;;		___xxtofl
  1595 ;;		_setCursorLCD
  1596 ;;		_setup
  1597 ;;		_writeCharLCD
  1598 ;;		_writeFloat
  1599 ;;		_writeIntLCD
  1600 ;;		_writeStrLCD
  1601 ;; This function is called by:
  1602 ;;		Startup code after reset
  1603 ;; This function uses a non-reentrant model
  1604 ;;
  1605                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1606                           	file	"mainM.c"
  1607                           	line	61
  1608                           global __pmaintext
  1609                           __pmaintext:	;psect for function _main
  1610  002B                     psect	maintext
  1611                           	file	"mainM.c"
  1612                           	line	61
  1613                           	global	__size_of_main
  1614                           	__size_of_main	equ	__end_of_main-_main
  1615  018F                     	
  1616                           _main:	
  1617  002B                     ;incstack = 0
  1618                           	opt	stack 4
  1619                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1620                           	line	62
  1621                           	
  1622                           l2412:	
  1623  002B                     ;mainM.c: 62:     setup();
  1624                           	fcall	_setup
  1625  002B  120A  158A  2405  120A  118A  	goto	l2414
  1626  0030  2831               	line	63
  1627                           ;mainM.c: 63:     while(1){
  1628                           	
  1629                           l189:	
  1630  0031                     	line	66
  1631                           	
  1632                           l2414:	
  1633  0031                     ;mainM.c: 66:         count = toggle%3;
  1634                           	movlw	03h
  1635  0031  3003               	movwf	(___awmod@divisor)
  1636  0032  00F0               	movlw	0
  1637  0033  3000               	movwf	((___awmod@divisor))+1
  1638  0034  00F1               	bcf	status, 5	;RP0=0, select bank0
  1639  0035  1283               	bcf	status, 6	;RP1=0, select bank0
  1640  0036  1303               	movf	(_toggle),w
  1641  0037  0867               	movwf	(??_main+0)+0
  1642  0038  00D6               	clrf	(??_main+0)+0+1
  1643  0039  01D7               	movf	0+(??_main+0)+0,w
  1644  003A  0856               	movwf	(___awmod@dividend)
  1645  003B  00F2               	movf	1+(??_main+0)+0,w
  1646  003C  0857               	movwf	(___awmod@dividend+1)
  1647  003D  00F3               	fcall	___awmod
  1648  003E  120A  158A  2464  120A  118A  	movf	(0+(?___awmod)),w
  1649  0043  0870               	bcf	status, 5	;RP0=0, select bank0
  1650  0044  1283               	bcf	status, 6	;RP1=0, select bank0
  1651  0045  1303               	movwf	(??_main+2)+0
  1652  0046  00D8               	movf	(??_main+2)+0,w
  1653  0047  0858               	movwf	(_count)
  1654  0048  00E5               	line	67
  1655                           	
  1656                           l2416:	
  1657  0049                     ;mainM.c: 67:         I2C_Master_Start();
  1658                           	fcall	_I2C_Master_Start
  1659  0049  120A  158A  21FA  120A  118A  	line	68
  1660                           	
  1661                           l2418:	
  1662  004E                     ;mainM.c: 68:         I2C_Master_Write(0x69);
  1663                           	movlw	069h
  1664  004E  3069               	movwf	(I2C_Master_Write@d)
  1665  004F  00F0               	movlw	0
  1666  0050  3000               	movwf	((I2C_Master_Write@d))+1
  1667  0051  00F1               	fcall	_I2C_Master_Write
  1668  0052  120A  118A  2003  120A  118A  	line	69
  1669                           	
  1670                           l2420:	
  1671  0057                     ;mainM.c: 69:         if(count == 0){
  1672                           	bcf	status, 5	;RP0=0, select bank0
  1673  0057  1283               	bcf	status, 6	;RP1=0, select bank0
  1674  0058  1303               	movf	((_count)),w
  1675  0059  0865               	btfss	status,2
  1676  005A  1D03               	goto	u3231
  1677  005B  285D               	goto	u3230
  1678  005C  285E               u3231:
  1679  005D                     	goto	l2424
  1680  005D  286D               u3230:
  1681  005E                     	line	70
  1682                           	
  1683                           l2422:	
  1684  005E                     ;mainM.c: 70:             adc = I2C_Master_Read(0);
  1685                           	movlw	0
  1686  005E  3000               	movwf	(I2C_Master_Read@a)
  1687  005F  00F0               	movwf	(I2C_Master_Read@a+1)
  1688  0060  00F1               	fcall	_I2C_Master_Read
  1689  0061  120A  158A  2294  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1690  0066  0870               	bcf	status, 5	;RP0=0, select bank0
  1691  0067  1283               	bcf	status, 6	;RP1=0, select bank0
  1692  0068  1303               	movwf	(??_main+0)+0
  1693  0069  00D6               	movf	(??_main+0)+0,w
  1694  006A  0856               	movwf	(_adc)
  1695  006B  00EE               	line	71
  1696                           ;mainM.c: 71:         }else if(count == 1){
  1697                           	goto	l2432
  1698  006C  2898               	
  1699                           l190:	
  1700  006D                     	
  1701                           l2424:	
  1702  006D                     		decf	((_count)),w
  1703  006D  0365               	btfss	status,2
  1704  006E  1D03               	goto	u3241
  1705  006F  2871               	goto	u3240
  1706  0070  2872               u3241:
  1707  0071                     	goto	l2428
  1708  0071  2881               u3240:
  1709  0072                     	line	72
  1710                           	
  1711                           l2426:	
  1712  0072                     ;mainM.c: 72:             adcl = I2C_Master_Read(0);
  1713                           	movlw	0
  1714  0072  3000               	movwf	(I2C_Master_Read@a)
  1715  0073  00F0               	movwf	(I2C_Master_Read@a+1)
  1716  0074  00F1               	fcall	_I2C_Master_Read
  1717  0075  120A  158A  2294  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1718  007A  0870               	bcf	status, 5	;RP0=0, select bank0
  1719  007B  1283               	bcf	status, 6	;RP1=0, select bank0
  1720  007C  1303               	movwf	(??_main+0)+0
  1721  007D  00D6               	movf	(??_main+0)+0,w
  1722  007E  0856               	movwf	(_adcl)
  1723  007F  00ED               	line	73
  1724                           ;mainM.c: 73:         }else if(count == 2){
  1725                           	goto	l2432
  1726  0080  2898               	
  1727                           l192:	
  1728  0081                     	
  1729                           l2428:	
  1730  0081                     		movlw	2
  1731  0081  3002               	xorwf	((_count)),w
  1732  0082  0665               	btfss	status,2
  1733  0083  1D03               	goto	u3251
  1734  0084  2886               	goto	u3250
  1735  0085  2887               u3251:
  1736  0086                     	goto	l2432
  1737  0086  2898               u3250:
  1738  0087                     	line	74
  1739                           	
  1740                           l2430:	
  1741  0087                     ;mainM.c: 74:             counter = I2C_Master_Read(0);
  1742                           	movlw	0
  1743  0087  3000               	movwf	(I2C_Master_Read@a)
  1744  0088  00F0               	movwf	(I2C_Master_Read@a+1)
  1745  0089  00F1               	fcall	_I2C_Master_Read
  1746  008A  120A  158A  2294  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1747  008F  0870               	bcf	status, 5	;RP0=0, select bank0
  1748  0090  1283               	bcf	status, 6	;RP1=0, select bank0
  1749  0091  1303               	movwf	(??_main+0)+0
  1750  0092  00D6               	movf	(??_main+0)+0,w
  1751  0093  0856               	movwf	(_counter)
  1752  0094  00EA               	goto	l2432
  1753  0095  2898               	line	75
  1754                           ;mainM.c: 75:         }
  1755                           	
  1756                           l194:	
  1757  0096                     	goto	l2432
  1758  0096  2898               	
  1759                           l193:	
  1760  0097                     	goto	l2432
  1761  0097  2898               	
  1762                           l191:	
  1763  0098                     	line	76
  1764                           	
  1765                           l2432:	
  1766  0098                     ;mainM.c: 76:         toggle++;
  1767                           	movlw	low(01h)
  1768  0098  3001               	movwf	(??_main+0)+0
  1769  0099  00D6               	movf	(??_main+0)+0,w
  1770  009A  0856               	addwf	(_toggle),f
  1771  009B  07E7               	line	77
  1772                           	
  1773                           l2434:	
  1774  009C                     ;mainM.c: 77:         I2C_Master_Stop();
  1775                           	fcall	_I2C_Master_Stop
  1776  009C  120A  158A  2203  120A  118A  	line	78
  1777                           	
  1778                           l2436:	
  1779  00A1                     ;mainM.c: 78:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1780                           	opt asmopt_push
  1781                           opt asmopt_off
  1782                           movlw	13
  1783  00A1  300D               	bcf	status, 5	;RP0=0, select bank0
  1784  00A2  1283               	bcf	status, 6	;RP1=0, select bank0
  1785  00A3  1303               movwf	((??_main+0)+0+1),f
  1786  00A4  00D7               	movlw	251
  1787  00A5  30FB               movwf	((??_main+0)+0),f
  1788  00A6  00D6               	u3277:
  1789  00A7                     decfsz	((??_main+0)+0),f
  1790  00A7  0BD6               	goto	u3277
  1791  00A8  28A7               	decfsz	((??_main+0)+0+1),f
  1792  00A9  0BD7               	goto	u3277
  1793  00AA  28A7               opt asmopt_pop
  1794                           
  1795                           	line	81
  1796                           	
  1797                           l2438:	
  1798  00AB                     ;mainM.c: 81:         I2C_Master_Start();
  1799                           	fcall	_I2C_Master_Start
  1800  00AB  120A  158A  21FA  120A  118A  	line	82
  1801                           	
  1802                           l2440:	
  1803  00B0                     ;mainM.c: 82:         I2C_Master_Write(0x61);
  1804                           	movlw	061h
  1805  00B0  3061               	movwf	(I2C_Master_Write@d)
  1806  00B1  00F0               	movlw	0
  1807  00B2  3000               	movwf	((I2C_Master_Write@d))+1
  1808  00B3  00F1               	fcall	_I2C_Master_Write
  1809  00B4  120A  118A  2003  120A  118A  	line	83
  1810                           	
  1811                           l2442:	
  1812  00B9                     ;mainM.c: 83:         mov = I2C_Master_Read(0);
  1813                           	movlw	0
  1814  00B9  3000               	movwf	(I2C_Master_Read@a)
  1815  00BA  00F0               	movwf	(I2C_Master_Read@a+1)
  1816  00BB  00F1               	fcall	_I2C_Master_Read
  1817  00BC  120A  158A  2294  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1818  00C1  0870               	bcf	status, 5	;RP0=0, select bank0
  1819  00C2  1283               	bcf	status, 6	;RP1=0, select bank0
  1820  00C3  1303               	movwf	(??_main+0)+0
  1821  00C4  00D6               	movf	(??_main+0)+0,w
  1822  00C5  0856               	movwf	(_mov)
  1823  00C6  00E4               	line	84
  1824                           	
  1825                           l2444:	
  1826  00C7                     ;mainM.c: 84:         I2C_Master_Stop();
  1827                           	fcall	_I2C_Master_Stop
  1828  00C7  120A  158A  2203  120A  118A  	line	85
  1829                           	
  1830                           l2446:	
  1831  00CC                     ;mainM.c: 85:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1832                           	opt asmopt_push
  1833                           opt asmopt_off
  1834                           movlw	13
  1835  00CC  300D               	bcf	status, 5	;RP0=0, select bank0
  1836  00CD  1283               	bcf	status, 6	;RP1=0, select bank0
  1837  00CE  1303               movwf	((??_main+0)+0+1),f
  1838  00CF  00D7               	movlw	251
  1839  00D0  30FB               movwf	((??_main+0)+0),f
  1840  00D1  00D6               	u3287:
  1841  00D2                     decfsz	((??_main+0)+0),f
  1842  00D2  0BD6               	goto	u3287
  1843  00D3  28D2               	decfsz	((??_main+0)+0+1),f
  1844  00D4  0BD7               	goto	u3287
  1845  00D5  28D2               opt asmopt_pop
  1846                           
  1847                           	line	87
  1848                           ;mainM.c: 87:         if(mov){
  1849                           	bcf	status, 5	;RP0=0, select bank0
  1850  00D6  1283               	bcf	status, 6	;RP1=0, select bank0
  1851  00D7  1303               	movf	((_mov)),w
  1852  00D8  0864               	btfsc	status,2
  1853  00D9  1903               	goto	u3261
  1854  00DA  28DC               	goto	u3260
  1855  00DB  28DD               u3261:
  1856  00DC                     	goto	l2450
  1857  00DC  28E3               u3260:
  1858  00DD                     	line	88
  1859                           	
  1860                           l2448:	
  1861  00DD                     ;mainM.c: 88:             PORTDbits.RD2 = mov;
  1862                           	rrf	(_mov),w
  1863  00DD  0C64               	skipc
  1864  00DE  1C03               	bcf	(8),2	;volatile
  1865  00DF  1108               	skipnc
  1866  00E0  1803               	bsf	(8),2	;volatile
  1867  00E1  1508               	goto	l2450
  1868  00E2  28E3               	line	89
  1869                           ;mainM.c: 89:         }
  1870                           	
  1871                           l195:	
  1872  00E3                     	line	91
  1873                           	
  1874                           l2450:	
  1875  00E3                     ;mainM.c: 91:         setCursorLCD(2, 1);
  1876                           	clrf	(setCursorLCD@x)
  1877  00E3  01F3               	incf	(setCursorLCD@x),f
  1878  00E4  0AF3               	movlw	low(02h)
  1879  00E5  3002               	fcall	_setCursorLCD
  1880  00E6  120A  158A  224D  120A  118A  	line	93
  1881                           	
  1882                           l2452:	
  1883  00EB                     ;mainM.c: 93:         writeADC = adc*256+adcl;
  1884                           	bcf	status, 5	;RP0=0, select bank0
  1885  00EB  1283               	bcf	status, 6	;RP1=0, select bank0
  1886  00EC  1303               	movf	(_adc),w
  1887  00ED  086E               	movwf	(??_main+0)+0
  1888  00EE  00D6               	clrf	(??_main+0)+0+1
  1889  00EF  01D7               	movf	(??_main+0)+0,w
  1890  00F0  0856               	movwf	(??_main+0)+1
  1891  00F1  00D7               	clrf	(??_main+0)+0
  1892  00F2  01D6               	movf	(_adcl),w
  1893  00F3  086D               	addwf	0+(??_main+0)+0,w
  1894  00F4  0756               	movwf	(_writeADC)
  1895  00F5  00E2               	movlw	0
  1896  00F6  3000               	skipnc
  1897  00F7  1803               	movlw	1
  1898  00F8  3001               	addwf	1+(??_main+0)+0,w
  1899  00F9  0757               	movwf	1+(_writeADC)
  1900  00FA  00E3               	line	95
  1901                           	
  1902                           l2454:	
  1903  00FB                     ;mainM.c: 95:         writeStrLCD("  ");
  1904                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1905  00FB  300B               	movwf	(writeStrLCD@string)
  1906  00FC  00F2               	movlw	80h
  1907  00FD  3080               	movwf	(writeStrLCD@string+1)
  1908  00FE  00F3               	fcall	_writeStrLCD
  1909  00FF  120A  158A  2376  120A  118A  	line	98
  1910                           	
  1911                           l2456:	
  1912  0104                     ;mainM.c: 98:         entero1 = (int) sensorF1;
  1913                           	bcf	status, 5	;RP0=0, select bank0
  1914  0104  1283               	bcf	status, 6	;RP1=0, select bank0
  1915  0105  1303               	movf	(_sensorF1+3),w
  1916  0106  0861               	movwf	(___fltol@f1+3)
  1917  0107  00F3               	movf	(_sensorF1+2),w
  1918  0108  0860               	movwf	(___fltol@f1+2)
  1919  0109  00F2               	movf	(_sensorF1+1),w
  1920  010A  085F               	movwf	(___fltol@f1+1)
  1921  010B  00F1               	movf	(_sensorF1),w
  1922  010C  085E               	movwf	(___fltol@f1)
  1923  010D  00F0               
  1924                           	fcall	___fltol
  1925  010E  120A  158A  25A4  120A  118A  	movf	(0+(?___fltol)),w
  1926  0113  0870               	bcf	status, 5	;RP0=0, select bank0
  1927  0114  1283               	bcf	status, 6	;RP1=0, select bank0
  1928  0115  1303               	movwf	(??_main+0)+0
  1929  0116  00D6               	movf	(??_main+0)+0,w
  1930  0117  0856               	movwf	(_entero1)
  1931  0118  00EC               	line	99
  1932                           	
  1933                           l2458:	
  1934  0119                     ;mainM.c: 99:         float1 = (sensorF1 - entero1)*100;
  1935                           	movlw	0x42
  1936  0119  3042               	movwf	(___flmul@b+3)
  1937  011A  00BF               	movlw	0xc8
  1938  011B  30C8               	movwf	(___flmul@b+2)
  1939  011C  00BE               	movlw	0x0
  1940  011D  3000               	movwf	(___flmul@b+1)
  1941  011E  00BD               	movlw	0x0
  1942  011F  3000               	movwf	(___flmul@b)
  1943  0120  00BC               
  1944                           	movf	(_sensorF1+3),w
  1945  0121  0861               	movwf	(___fladd@b+3)
  1946  0122  00A7               	movf	(_sensorF1+2),w
  1947  0123  0860               	movwf	(___fladd@b+2)
  1948  0124  00A6               	movf	(_sensorF1+1),w
  1949  0125  085F               	movwf	(___fladd@b+1)
  1950  0126  00A5               	movf	(_sensorF1),w
  1951  0127  085E               	movwf	(___fladd@b)
  1952  0128  00A4               
  1953                           	movf	(_entero1),w
  1954  0129  086C               	movwf	(??_main+0)+0
  1955  012A  00D6               	clrf	(??_main+0)+0+1
  1956  012B  01D7               	clrf	(??_main+0)+0+2
  1957  012C  01D8               	clrf	(??_main+0)+0+3
  1958  012D  01D9               	movf	3+(??_main+0)+0,w
  1959  012E  0859               	movwf	(___xxtofl@val+3)
  1960  012F  00F3               	movf	2+(??_main+0)+0,w
  1961  0130  0858               	movwf	(___xxtofl@val+2)
  1962  0131  00F2               	movf	1+(??_main+0)+0,w
  1963  0132  0857               	movwf	(___xxtofl@val+1)
  1964  0133  00F1               	movf	0+(??_main+0)+0,w
  1965  0134  0856               	movwf	(___xxtofl@val)
  1966  0135  00F0               
  1967                           	movlw	low(01h)
  1968  0136  3001               	fcall	___xxtofl
  1969  0137  120A  158A  263E  120A  118A  	movf	(3+(?___xxtofl)),w
  1970  013C  0873               	bcf	status, 5	;RP0=0, select bank0
  1971  013D  1283               	bcf	status, 6	;RP1=0, select bank0
  1972  013E  1303               	movwf	(___flneg@f1+3)
  1973  013F  00A3               	movf	(2+(?___xxtofl)),w
  1974  0140  0872               	movwf	(___flneg@f1+2)
  1975  0141  00A2               	movf	(1+(?___xxtofl)),w
  1976  0142  0871               	movwf	(___flneg@f1+1)
  1977  0143  00A1               	movf	(0+(?___xxtofl)),w
  1978  0144  0870               	movwf	(___flneg@f1)
  1979  0145  00A0               
  1980                           	fcall	___flneg
  1981  0146  120A  158A  221B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1982  014B  1283               	bcf	status, 6	;RP1=0, select bank0
  1983  014C  1303               	movf	(3+(?___flneg)),w
  1984  014D  0823               	movwf	(___fladd@a+3)
  1985  014E  00AB               	movf	(2+(?___flneg)),w
  1986  014F  0822               	movwf	(___fladd@a+2)
  1987  0150  00AA               	movf	(1+(?___flneg)),w
  1988  0151  0821               	movwf	(___fladd@a+1)
  1989  0152  00A9               	movf	(0+(?___flneg)),w
  1990  0153  0820               	movwf	(___fladd@a)
  1991  0154  00A8               
  1992                           	fcall	___fladd
  1993  0155  120A  118A  21BA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1994  015A  1283               	bcf	status, 6	;RP1=0, select bank0
  1995  015B  1303               	movf	(3+(?___fladd)),w
  1996  015C  0827               	movwf	(___flmul@a+3)
  1997  015D  00C3               	movf	(2+(?___fladd)),w
  1998  015E  0826               	movwf	(___flmul@a+2)
  1999  015F  00C2               	movf	(1+(?___fladd)),w
  2000  0160  0825               	movwf	(___flmul@a+1)
  2001  0161  00C1               	movf	(0+(?___fladd)),w
  2002  0162  0824               	movwf	(___flmul@a)
  2003  0163  00C0               
  2004                           	fcall	___flmul
  2005  0164  120A  118A  2476  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2006  0169  1283               	bcf	status, 6	;RP1=0, select bank0
  2007  016A  1303               	movf	(3+(?___flmul)),w
  2008  016B  083F               	movwf	(_float1+3)
  2009  016C  00DD               	movf	(2+(?___flmul)),w
  2010  016D  083E               	movwf	(_float1+2)
  2011  016E  00DC               	movf	(1+(?___flmul)),w
  2012  016F  083D               	movwf	(_float1+1)
  2013  0170  00DB               	movf	(0+(?___flmul)),w
  2014  0171  083C               	movwf	(_float1)
  2015  0172  00DA               
  2016                           	line	100
  2017                           	
  2018                           l2460:	
  2019  0173                     ;mainM.c: 100:         dec1 = (int) float1;
  2020                           	movf	(_float1+3),w
  2021  0173  085D               	movwf	(___fltol@f1+3)
  2022  0174  00F3               	movf	(_float1+2),w
  2023  0175  085C               	movwf	(___fltol@f1+2)
  2024  0176  00F2               	movf	(_float1+1),w
  2025  0177  085B               	movwf	(___fltol@f1+1)
  2026  0178  00F1               	movf	(_float1),w
  2027  0179  085A               	movwf	(___fltol@f1)
  2028  017A  00F0               
  2029                           	fcall	___fltol
  2030  017B  120A  158A  25A4  120A  118A  	movf	(0+(?___fltol)),w
  2031  0180  0870               	bcf	status, 5	;RP0=0, select bank0
  2032  0181  1283               	bcf	status, 6	;RP1=0, select bank0
  2033  0182  1303               	movwf	(??_main+0)+0
  2034  0183  00D6               	movf	(??_main+0)+0,w
  2035  0184  0856               	movwf	(_dec1)
  2036  0185  00EB               	line	102
  2037                           	
  2038                           l2462:	
  2039  0186                     ;mainM.c: 102:         writeFloat(entero1, dec1, 1);
  2040                           	movf	(_dec1),w
  2041  0186  086B               	movwf	(??_main+0)+0
  2042  0187  00D6               	movf	(??_main+0)+0,w
  2043  0188  0856               	movwf	(writeFloat@decimal)
  2044  0189  00B5               	clrf	(writeFloat@initPos)
  2045  018A  01B6               	incf	(writeFloat@initPos),f
  2046  018B  0AB6               	movf	(_entero1),w
  2047  018C  086C               	fcall	_writeFloat
  2048  018D  120A  158A  2534  120A  118A  	line	103
  2049                           	
  2050                           l2464:	
  2051  0192                     ;mainM.c: 103:         setCursorLCD(2, 9);
  2052                           	movlw	low(09h)
  2053  0192  3009               	bcf	status, 5	;RP0=0, select bank0
  2054  0193  1283               	bcf	status, 6	;RP1=0, select bank0
  2055  0194  1303               	movwf	(??_main+0)+0
  2056  0195  00D6               	movf	(??_main+0)+0,w
  2057  0196  0856               	movwf	(setCursorLCD@x)
  2058  0197  00F3               	movlw	low(02h)
  2059  0198  3002               	fcall	_setCursorLCD
  2060  0199  120A  158A  224D  120A  118A  	line	104
  2061                           	
  2062                           l2466:	
  2063  019E                     ;mainM.c: 104:         writeIntLCD(counter);
  2064                           	bcf	status, 5	;RP0=0, select bank0
  2065  019E  1283               	bcf	status, 6	;RP1=0, select bank0
  2066  019F  1303               	movf	(_counter),w
  2067  01A0  086A               	fcall	_writeIntLCD
  2068  01A1  120A  118A  200D  120A  118A  	line	105
  2069                           	
  2070                           l2468:	
  2071  01A6                     ;mainM.c: 105:         writeCharLCD(' ');
  2072                           	movlw	low(020h)
  2073  01A6  3020               	fcall	_writeCharLCD
  2074  01A7  120A  158A  222A  120A  118A  	line	107
  2075                           	
  2076                           l2470:	
  2077  01AC                     ;mainM.c: 107:         writeStrLCD("  ");
  2078                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  2079  01AC  300B               	movwf	(writeStrLCD@string)
  2080  01AD  00F2               	movlw	80h
  2081  01AE  3080               	movwf	(writeStrLCD@string+1)
  2082  01AF  00F3               	fcall	_writeStrLCD
  2083  01B0  120A  158A  2376  120A  118A  	goto	l2414
  2084  01B5  2831               	line	108
  2085                           ;mainM.c: 108:     }
  2086                           	
  2087                           l196:	
  2088  01B6                     	goto	l2414
  2089  01B6  2831               	
  2090                           l197:	
  2091  01B7                     	line	110
  2092                           ;mainM.c: 109:     return;
  2093                           	
  2094                           l198:	
  2095  01B7                     	global	start
  2096                           	ljmp	start
  2097  01B7  120A  118A  2800   	opt stack 0
  2098                           GLOBAL	__end_of_main
  2099                           	__end_of_main:
  2100  01BA                     	signat	_main,89
  2101                           	global	_writeFloat
  2102                           
  2103 ;; *************** function _writeFloat *****************
  2104 ;; Defined at:
  2105 ;;		line 69 in file "LCD.c"
  2106 ;; Parameters:    Size  Location     Type
  2107 ;;  integer         1    wreg     unsigned char 
  2108 ;;  decimal         1   21[BANK0 ] unsigned char 
  2109 ;;  initPos         1   22[BANK0 ] unsigned char 
  2110 ;; Auto vars:     Size  Location     Type
  2111 ;;  integer         1   24[BANK0 ] unsigned char 
  2112 ;; Return value:  Size  Location     Type
  2113 ;;                  1    wreg      void 
  2114 ;; Registers used:
  2115 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2116 ;; Tracked objects:
  2117 ;;		On entry : 0/0
  2118 ;;		On exit  : 0/0
  2119 ;;		Unchanged: 0/0
  2120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2121 ;;      Params:         0       2       0       0       0
  2122 ;;      Locals:         0       1       0       0       0
  2123 ;;      Temps:          0       1       0       0       0
  2124 ;;      Totals:         0       4       0       0       0
  2125 ;;Total ram usage:        4 bytes
  2126 ;; Hardware stack levels used:    1
  2127 ;; Hardware stack levels required when called:    3
  2128 ;; This function calls:
  2129 ;;		_setCursorLCD
  2130 ;;		_writeCharLCD
  2131 ;;		_writeIntLCD
  2132 ;; This function is called by:
  2133 ;;		_main
  2134 ;; This function uses a non-reentrant model
  2135 ;;
  2136                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2137                           	file	"LCD.c"
  2138                           	line	69
  2139                           global __ptext1
  2140                           __ptext1:	;psect for function _writeFloat
  2141  0D34                     psect	text1
  2142                           	file	"LCD.c"
  2143                           	line	69
  2144                           	global	__size_of_writeFloat
  2145                           	__size_of_writeFloat	equ	__end_of_writeFloat-_writeFloat
  2146  0070                     	
  2147                           _writeFloat:	
  2148  0D34                     ;incstack = 0
  2149                           	opt	stack 4
  2150                           ; Regs used in _writeFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2151                           ;writeFloat@integer stored from wreg
  2152                           	bcf	status, 5	;RP0=0, select bank0
  2153  0D34  1283               	bcf	status, 6	;RP1=0, select bank0
  2154  0D35  1303               	movwf	(writeFloat@integer)
  2155  0D36  00B8               	line	72
  2156                           	
  2157                           l1900:	
  2158  0D37                     ;LCD.c: 72:     setCursorLCD(2, initPos);
  2159                           	movf	(writeFloat@initPos),w
  2160  0D37  0836               	movwf	(??_writeFloat+0)+0
  2161  0D38  00B7               	movf	(??_writeFloat+0)+0,w
  2162  0D39  0837               	movwf	(setCursorLCD@x)
  2163  0D3A  00F3               	movlw	low(02h)
  2164  0D3B  3002               	fcall	_setCursorLCD
  2165  0D3C  120A  158A  224D  120A  158A  	line	73
  2166                           	
  2167                           l1902:	
  2168  0D41                     ;LCD.c: 73:     writeIntLCD(integer);
  2169                           	bcf	status, 5	;RP0=0, select bank0
  2170  0D41  1283               	bcf	status, 6	;RP1=0, select bank0
  2171  0D42  1303               	movf	(writeFloat@integer),w
  2172  0D43  0838               	fcall	_writeIntLCD
  2173  0D44  120A  118A  200D  120A  158A  	line	74
  2174                           	
  2175                           l1904:	
  2176  0D49                     ;LCD.c: 74:     if(integer >= 10){
  2177                           	movlw	low(0Ah)
  2178  0D49  300A               	bcf	status, 5	;RP0=0, select bank0
  2179  0D4A  1283               	bcf	status, 6	;RP1=0, select bank0
  2180  0D4B  1303               	subwf	(writeFloat@integer),w
  2181  0D4C  0238               	skipc
  2182  0D4D  1C03               	goto	u2031
  2183  0D4E  2D50               	goto	u2030
  2184  0D4F  2D51               u2031:
  2185  0D50                     	goto	l1908
  2186  0D50  2D56               u2030:
  2187  0D51                     	line	75
  2188                           	
  2189                           l1906:	
  2190  0D51                     ;LCD.c: 75:         initPos++;
  2191                           	movlw	low(01h)
  2192  0D51  3001               	movwf	(??_writeFloat+0)+0
  2193  0D52  00B7               	movf	(??_writeFloat+0)+0,w
  2194  0D53  0837               	addwf	(writeFloat@initPos),f
  2195  0D54  07B6               	goto	l1908
  2196  0D55  2D56               	line	76
  2197                           ;LCD.c: 76:     }if(integer >= 100){
  2198                           	
  2199                           l103:	
  2200  0D56                     	
  2201                           l1908:	
  2202  0D56                     	movlw	low(064h)
  2203  0D56  3064               	subwf	(writeFloat@integer),w
  2204  0D57  0238               	skipc
  2205  0D58  1C03               	goto	u2041
  2206  0D59  2D5B               	goto	u2040
  2207  0D5A  2D5C               u2041:
  2208  0D5B                     	goto	l1912
  2209  0D5B  2D61               u2040:
  2210  0D5C                     	line	77
  2211                           	
  2212                           l1910:	
  2213  0D5C                     ;LCD.c: 77:         initPos++;
  2214                           	movlw	low(01h)
  2215  0D5C  3001               	movwf	(??_writeFloat+0)+0
  2216  0D5D  00B7               	movf	(??_writeFloat+0)+0,w
  2217  0D5E  0837               	addwf	(writeFloat@initPos),f
  2218  0D5F  07B6               	goto	l1912
  2219  0D60  2D61               	line	78
  2220                           ;LCD.c: 78:     }
  2221                           	
  2222                           l104:	
  2223  0D61                     	line	79
  2224                           	
  2225                           l1912:	
  2226  0D61                     ;LCD.c: 79:     setCursorLCD(2, initPos + 1);
  2227                           	movf	(writeFloat@initPos),w
  2228  0D61  0836               	addlw	01h
  2229  0D62  3E01               	movwf	(??_writeFloat+0)+0
  2230  0D63  00B7               	movf	(??_writeFloat+0)+0,w
  2231  0D64  0837               	movwf	(setCursorLCD@x)
  2232  0D65  00F3               	movlw	low(02h)
  2233  0D66  3002               	fcall	_setCursorLCD
  2234  0D67  120A  158A  224D  120A  158A  	line	80
  2235                           	
  2236                           l1914:	
  2237  0D6C                     ;LCD.c: 80:     writeCharLCD('.');
  2238                           	movlw	low(02Eh)
  2239  0D6C  302E               	fcall	_writeCharLCD
  2240  0D6D  120A  158A  222A  120A  158A  	line	81
  2241                           	
  2242                           l1916:	
  2243  0D72                     ;LCD.c: 81:     setCursorLCD(2, initPos + 2);
  2244                           	bcf	status, 5	;RP0=0, select bank0
  2245  0D72  1283               	bcf	status, 6	;RP1=0, select bank0
  2246  0D73  1303               	movf	(writeFloat@initPos),w
  2247  0D74  0836               	addlw	02h
  2248  0D75  3E02               	movwf	(??_writeFloat+0)+0
  2249  0D76  00B7               	movf	(??_writeFloat+0)+0,w
  2250  0D77  0837               	movwf	(setCursorLCD@x)
  2251  0D78  00F3               	movlw	low(02h)
  2252  0D79  3002               	fcall	_setCursorLCD
  2253  0D7A  120A  158A  224D  120A  158A  	line	83
  2254                           	
  2255                           l1918:	
  2256  0D7F                     ;LCD.c: 83:     if(decimal < 10){
  2257                           	movlw	low(0Ah)
  2258  0D7F  300A               	bcf	status, 5	;RP0=0, select bank0
  2259  0D80  1283               	bcf	status, 6	;RP1=0, select bank0
  2260  0D81  1303               	subwf	(writeFloat@decimal),w
  2261  0D82  0235               	skipnc
  2262  0D83  1803               	goto	u2051
  2263  0D84  2D86               	goto	u2050
  2264  0D85  2D87               u2051:
  2265  0D86                     	goto	l1922
  2266  0D86  2D8E               u2050:
  2267  0D87                     	line	84
  2268                           	
  2269                           l1920:	
  2270  0D87                     ;LCD.c: 84:         writeCharLCD('0');
  2271                           	movlw	low(030h)
  2272  0D87  3030               	fcall	_writeCharLCD
  2273  0D88  120A  158A  222A  120A  158A  	goto	l1922
  2274  0D8D  2D8E               	line	85
  2275                           ;LCD.c: 85:     }
  2276                           	
  2277                           l105:	
  2278  0D8E                     	line	86
  2279                           	
  2280                           l1922:	
  2281  0D8E                     ;LCD.c: 86:     writeIntLCD(decimal);
  2282                           	bcf	status, 5	;RP0=0, select bank0
  2283  0D8E  1283               	bcf	status, 6	;RP1=0, select bank0
  2284  0D8F  1303               	movf	(writeFloat@decimal),w
  2285  0D90  0835               	fcall	_writeIntLCD
  2286  0D91  120A  118A  200D  120A  158A  	line	88
  2287                           	
  2288                           l1924:	
  2289  0D96                     ;LCD.c: 88:     setCursorLCD(2, initPos + 4);
  2290                           	bcf	status, 5	;RP0=0, select bank0
  2291  0D96  1283               	bcf	status, 6	;RP1=0, select bank0
  2292  0D97  1303               	movf	(writeFloat@initPos),w
  2293  0D98  0836               	addlw	04h
  2294  0D99  3E04               	movwf	(??_writeFloat+0)+0
  2295  0D9A  00B7               	movf	(??_writeFloat+0)+0,w
  2296  0D9B  0837               	movwf	(setCursorLCD@x)
  2297  0D9C  00F3               	movlw	low(02h)
  2298  0D9D  3002               	fcall	_setCursorLCD
  2299  0D9E  120A  158A  224D  120A  158A  	line	90
  2300                           	
  2301                           l106:	
  2302  0DA3                     	return
  2303  0DA3  0008               	opt stack 0
  2304                           GLOBAL	__end_of_writeFloat
  2305                           	__end_of_writeFloat:
  2306  0DA4                     	signat	_writeFloat,12409
  2307                           	global	_writeIntLCD
  2308                           
  2309 ;; *************** function _writeIntLCD *****************
  2310 ;; Defined at:
  2311 ;;		line 57 in file "LCD.c"
  2312 ;; Parameters:    Size  Location     Type
  2313 ;;  numero          1    wreg     unsigned char 
  2314 ;; Auto vars:     Size  Location     Type
  2315 ;;  numero          1   20[BANK0 ] unsigned char 
  2316 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  2317 ;; Return value:  Size  Location     Type
  2318 ;;                  1    wreg      void 
  2319 ;; Registers used:
  2320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2321 ;; Tracked objects:
  2322 ;;		On entry : 0/0
  2323 ;;		On exit  : 0/0
  2324 ;;		Unchanged: 0/0
  2325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2326 ;;      Params:         0       0       0       0       0
  2327 ;;      Locals:         0       5       0       0       0
  2328 ;;      Temps:          0       3       0       0       0
  2329 ;;      Totals:         0       8       0       0       0
  2330 ;;Total ram usage:        8 bytes
  2331 ;; Hardware stack levels used:    1
  2332 ;; Hardware stack levels required when called:    2
  2333 ;; This function calls:
  2334 ;;		_sprintf
  2335 ;;		_writeStrLCD
  2336 ;; This function is called by:
  2337 ;;		_writeFloat
  2338 ;;		_main
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2342                           	line	57
  2343                           global __ptext2
  2344                           __ptext2:	;psect for function _writeIntLCD
  2345  000D                     psect	text2
  2346                           	file	"LCD.c"
  2347                           	line	57
  2348                           	global	__size_of_writeIntLCD
  2349                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  2350  001E                     	
  2351                           _writeIntLCD:	
  2352  000D                     ;incstack = 0
  2353                           	opt	stack 5
  2354                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2355                           ;writeIntLCD@numero stored from wreg
  2356                           	bcf	status, 5	;RP0=0, select bank0
  2357  000D  1283               	bcf	status, 6	;RP1=0, select bank0
  2358  000E  1303               	movwf	(writeIntLCD@numero)
  2359  000F  00B4               	line	59
  2360                           	
  2361                           l1856:	
  2362  0010                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  2363                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2364  0010  3017               	movwf	(??_writeIntLCD+0)+0
  2365  0011  00AD               	movf	(??_writeIntLCD+0)+0,w
  2366  0012  082D               	movwf	(sprintf@f)
  2367  0013  00A0               	movf	(writeIntLCD@numero),w
  2368  0014  0834               	movwf	(??_writeIntLCD+1)+0
  2369  0015  00AE               	clrf	(??_writeIntLCD+1)+0+1
  2370  0016  01AF               	movf	0+(??_writeIntLCD+1)+0,w
  2371  0017  082E               	movwf	0+(?_sprintf)+01h
  2372  0018  00A1               	movf	1+(??_writeIntLCD+1)+0,w
  2373  0019  082F               	movwf	1+(?_sprintf)+01h
  2374  001A  00A2               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  2375  001B  3030               	fcall	_sprintf
  2376  001C  120A  158A  2700  120A  118A  	line	60
  2377                           ;LCD.c: 60:     writeStrLCD(buffer);
  2378                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  2379  0021  3030               	movwf	(writeStrLCD@string)
  2380  0022  00F2               	movlw	(0x0)
  2381  0023  3000               	movwf	(writeStrLCD@string+1)
  2382  0024  00F3               	fcall	_writeStrLCD
  2383  0025  120A  158A  2376  120A  118A  	line	61
  2384                           	
  2385                           l97:	
  2386  002A                     	return
  2387  002A  0008               	opt stack 0
  2388                           GLOBAL	__end_of_writeIntLCD
  2389                           	__end_of_writeIntLCD:
  2390  002B                     	signat	_writeIntLCD,4217
  2391                           	global	_sprintf
  2392                           
  2393 ;; *************** function _sprintf *****************
  2394 ;; Defined at:
  2395 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2396 ;; Parameters:    Size  Location     Type
  2397 ;;  sp              1    wreg     PTR unsigned char 
  2398 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  2399 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2400 ;;		 -> STR_2(3), STR_1(3), 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2403 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  2404 ;;  tmpval          4    0        struct .
  2405 ;;  val             2    9[BANK0 ] unsigned int 
  2406 ;;  cp              2    0        PTR const unsigned char 
  2407 ;;  len             2    0        unsigned int 
  2408 ;;  c               1   12[BANK0 ] unsigned char 
  2409 ;;  prec            1    8[BANK0 ] char 
  2410 ;;  flag            1    7[BANK0 ] unsigned char 
  2411 ;;  ap              1    6[BANK0 ] PTR void [1]
  2412 ;;		 -> ?_sprintf(2), 
  2413 ;; Return value:  Size  Location     Type
  2414 ;;                  2    0[BANK0 ] int 
  2415 ;; Registers used:
  2416 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2417 ;; Tracked objects:
  2418 ;;		On entry : 0/0
  2419 ;;		On exit  : 0/0
  2420 ;;		Unchanged: 0/0
  2421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2422 ;;      Params:         0       3       0       0       0
  2423 ;;      Locals:         0       7       0       0       0
  2424 ;;      Temps:          0       3       0       0       0
  2425 ;;      Totals:         0      13       0       0       0
  2426 ;;Total ram usage:       13 bytes
  2427 ;; Hardware stack levels used:    1
  2428 ;; Hardware stack levels required when called:    1
  2429 ;; This function calls:
  2430 ;;		___lwdiv
  2431 ;;		___lwmod
  2432 ;; This function is called by:
  2433 ;;		_writeIntLCD
  2434 ;;		_writeIntLCD16
  2435 ;; This function uses a non-reentrant model
  2436 ;;
  2437                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2438                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2439                           	line	500
  2440                           global __ptext3
  2441                           __ptext3:	;psect for function _sprintf
  2442  0F00                     psect	text3
  2443                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2444                           	line	500
  2445                           	global	__size_of_sprintf
  2446                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2447  0100                     	
  2448                           _sprintf:	
  2449  0F00                     ;incstack = 0
  2450                           	opt	stack 5
  2451                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2452                           ;sprintf@sp stored from wreg
  2453                           	bcf	status, 5	;RP0=0, select bank0
  2454  0F00  1283               	bcf	status, 6	;RP1=0, select bank0
  2455  0F01  1303               	movwf	(sprintf@sp)
  2456  0F02  00AB               	line	545
  2457                           	
  2458                           l1726:	
  2459  0F03                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2460                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2461  0F03  3021               	movwf	(??_sprintf+0)+0
  2462  0F04  00A3               	movf	(??_sprintf+0)+0,w
  2463  0F05  0823               	movwf	(sprintf@ap)
  2464  0F06  00A6               	line	548
  2465                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2466                           	goto	l1778
  2467  0F07  2FE6               	
  2468                           l293:	
  2469  0F08                     	line	550
  2470                           	
  2471                           l1728:	
  2472  0F08                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2473                           		movlw	37
  2474  0F08  3025               	xorwf	((sprintf@c)),w
  2475  0F09  062C               	btfsc	status,2
  2476  0F0A  1903               	goto	u1801
  2477  0F0B  2F0D               	goto	u1800
  2478  0F0C  2F0E               u1801:
  2479  0F0D                     	goto	l1734
  2480  0F0D  2F1A               u1800:
  2481  0F0E                     	line	553
  2482                           	
  2483                           l1730:	
  2484  0F0E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  2485                           	movf	(sprintf@c),w
  2486  0F0E  082C               	movwf	(??_sprintf+0)+0
  2487  0F0F  00A3               	movf	(sprintf@sp),w
  2488  0F10  082B               	movwf	fsr0
  2489  0F11  0084               	movf	(??_sprintf+0)+0,w
  2490  0F12  0823               	bcf	status, 7	;select IRP bank0
  2491  0F13  1383               	movwf	indf
  2492  0F14  0080               	
  2493                           l1732:	
  2494  0F15                     	movlw	low(01h)
  2495  0F15  3001               	movwf	(??_sprintf+0)+0
  2496  0F16  00A3               	movf	(??_sprintf+0)+0,w
  2497  0F17  0823               	addwf	(sprintf@sp),f
  2498  0F18  07AB               	line	554
  2499                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2500                           	goto	l1778
  2501  0F19  2FE6               	line	555
  2502                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2503                           	
  2504                           l294:	
  2505  0F1A                     	line	560
  2506                           	
  2507                           l1734:	
  2508  0F1A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2509                           	clrf	(sprintf@flag)
  2510  0F1A  01A7               	line	654
  2511                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2512                           	goto	l1738
  2513  0F1B  2F21               	line	656
  2514                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2515                           	
  2516                           l296:	
  2517  0F1C                     	line	657
  2518                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2519                           	goto	l1780
  2520  0F1C  2FFA               	line	716
  2521                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2522                           	
  2523                           l298:	
  2524  0F1D                     	goto	l1740
  2525  0F1D  2F3E               	line	717
  2526                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2527                           	
  2528                           l299:	
  2529  0F1E                     	line	718
  2530                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2531                           	goto	l1740
  2532  0F1E  2F3E               	line	821
  2533                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2534                           	
  2535                           l301:	
  2536  0F1F                     	line	832
  2537                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2538                           	goto	l1778
  2539  0F1F  2FE6               	line	841
  2540                           	
  2541                           l1736:	
  2542  0F20                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2543                           	goto	l1740
  2544  0F20  2F3E               	
  2545                           l295:	
  2546  0F21                     	
  2547                           l1738:	
  2548  0F21                     	movlw	01h
  2549  0F21  3001               	addwf	(sprintf@f),f
  2550  0F22  07A0               	movlw	-01h
  2551  0F23  30FF               	addwf	(sprintf@f),w
  2552  0F24  0720               	movwf	fsr0
  2553  0F25  0084               	fcall	stringdir
  2554  0F26  120A  158A  200A  120A  158A  	movwf	(sprintf@c)
  2555  0F2B  00AC               	movwf	(??_sprintf+0)+0
  2556  0F2C  00A3               	clrf	(??_sprintf+0)+0+1
  2557  0F2D  01A4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2558                           ; Switch size 1, requested type "space"
  2559                           ; Number of cases is 1, Range of values is 0 to 0
  2560                           ; switch strategies available:
  2561                           ; Name         Instructions Cycles
  2562                           ; simple_byte            4     3 (average)
  2563                           ; direct_byte           11     8 (fixed)
  2564                           ; jumptable            260     6 (fixed)
  2565                           ;	Chosen strategy is simple_byte
  2566                           
  2567                           	movf 1+(??_sprintf+0)+0,w
  2568  0F2E  0824               	opt asmopt_push
  2569                           	opt asmopt_off
  2570                           	xorlw	0^0	; case 0
  2571  0F2F  3A00               	skipnz
  2572  0F30  1903               	goto	l2492
  2573  0F31  2F33               	goto	l1778
  2574  0F32  2FE6               	opt asmopt_pop
  2575                           	
  2576                           l2492:	
  2577  0F33                     ; Switch size 1, requested type "space"
  2578                           ; Number of cases is 3, Range of values is 0 to 105
  2579                           ; switch strategies available:
  2580                           ; Name         Instructions Cycles
  2581                           ; simple_byte           10     6 (average)
  2582                           ; jumptable            260     6 (fixed)
  2583                           ;	Chosen strategy is simple_byte
  2584                           
  2585                           	movf 0+(??_sprintf+0)+0,w
  2586  0F33  0823               	opt asmopt_push
  2587                           	opt asmopt_off
  2588                           	xorlw	0^0	; case 0
  2589  0F34  3A00               	skipnz
  2590  0F35  1903               	goto	l1780
  2591  0F36  2FFA               	xorlw	100^0	; case 100
  2592  0F37  3A64               	skipnz
  2593  0F38  1903               	goto	l1740
  2594  0F39  2F3E               	xorlw	105^100	; case 105
  2595  0F3A  3A0D               	skipnz
  2596  0F3B  1903               	goto	l1740
  2597  0F3C  2F3E               	goto	l1778
  2598  0F3D  2FE6               	opt asmopt_pop
  2599                           
  2600                           	
  2601                           l300:	
  2602  0F3E                     	line	1278
  2603                           	
  2604                           l1740:	
  2605  0F3E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2606                           	movf	(sprintf@ap),w
  2607  0F3E  0826               	movwf	fsr0
  2608  0F3F  0084               	bcf	status, 7	;select IRP bank0
  2609  0F40  1383               	movf	indf,w
  2610  0F41  0800               	movwf	(sprintf@val)
  2611  0F42  00A9               	incf	fsr0,f
  2612  0F43  0A84               	movf	indf,w
  2613  0F44  0800               	movwf	(sprintf@val+1)
  2614  0F45  00AA               	
  2615                           l1742:	
  2616  0F46                     	movlw	low(02h)
  2617  0F46  3002               	movwf	(??_sprintf+0)+0
  2618  0F47  00A3               	movf	(??_sprintf+0)+0,w
  2619  0F48  0823               	addwf	(sprintf@ap),f
  2620  0F49  07A6               	line	1280
  2621                           	
  2622                           l1744:	
  2623  0F4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2624                           	btfss	(sprintf@val+1),7
  2625  0F4A  1FAA               	goto	u1811
  2626  0F4B  2F4D               	goto	u1810
  2627  0F4C  2F4E               u1811:
  2628  0F4D                     	goto	l1750
  2629  0F4D  2F58               u1810:
  2630  0F4E                     	line	1281
  2631                           	
  2632                           l1746:	
  2633  0F4E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2634                           	movlw	low(03h)
  2635  0F4E  3003               	movwf	(??_sprintf+0)+0
  2636  0F4F  00A3               	movf	(??_sprintf+0)+0,w
  2637  0F50  0823               	iorwf	(sprintf@flag),f
  2638  0F51  04A7               	line	1282
  2639                           	
  2640                           l1748:	
  2641  0F52                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2642                           	comf	(sprintf@val),f
  2643  0F52  09A9               	comf	(sprintf@val+1),f
  2644  0F53  09AA               	incf	(sprintf@val),f
  2645  0F54  0AA9               	skipnz
  2646  0F55  1903               	incf	(sprintf@val+1),f
  2647  0F56  0AAA               	goto	l1750
  2648  0F57  2F58               	line	1283
  2649                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  2650                           	
  2651                           l302:	
  2652  0F58                     	line	1324
  2653                           	
  2654                           l1750:	
  2655  0F58                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2656                           	clrf	(sprintf@c)
  2657  0F58  01AC               	incf	(sprintf@c),f
  2658  0F59  0AAC               	
  2659                           l1752:	
  2660  0F5A                     		movlw	5
  2661  0F5A  3005               	xorwf	((sprintf@c)),w
  2662  0F5B  062C               	btfss	status,2
  2663  0F5C  1D03               	goto	u1821
  2664  0F5D  2F5F               	goto	u1820
  2665  0F5E  2F60               u1821:
  2666  0F5F                     	goto	l1756
  2667  0F5F  2F62               u1820:
  2668  0F60                     	goto	l1762
  2669  0F60  2F8A               	
  2670                           l1754:	
  2671  0F61                     	goto	l1762
  2672  0F61  2F8A               	
  2673                           l303:	
  2674  0F62                     	line	1325
  2675                           	
  2676                           l1756:	
  2677  0F62                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2678                           	movf	(sprintf@c),w
  2679  0F62  082C               	movwf	(??_sprintf+0)+0
  2680  0F63  00A3               	addwf	(??_sprintf+0)+0,w
  2681  0F64  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2682  0F65  3E01               	movwf	fsr0
  2683  0F66  0084               	fcall	stringdir
  2684  0F67  120A  158A  200A  120A  158A  	movwf	(??_sprintf+1)+0
  2685  0F6C  00A4               	fcall	stringdir
  2686  0F6D  120A  158A  200A  120A  158A  	movwf	(??_sprintf+1)+0+1
  2687  0F72  00A5               	movf	1+(??_sprintf+1)+0,w
  2688  0F73  0825               	subwf	(sprintf@val+1),w
  2689  0F74  022A               	skipz
  2690  0F75  1D03               	goto	u1835
  2691  0F76  2F79               	movf	0+(??_sprintf+1)+0,w
  2692  0F77  0824               	subwf	(sprintf@val),w
  2693  0F78  0229               u1835:
  2694  0F79                     	skipnc
  2695  0F79  1803               	goto	u1831
  2696  0F7A  2F7C               	goto	u1830
  2697  0F7B  2F7D               u1831:
  2698  0F7C                     	goto	l1760
  2699  0F7C  2F7F               u1830:
  2700  0F7D                     	goto	l1762
  2701  0F7D  2F8A               	line	1326
  2702                           	
  2703                           l1758:	
  2704  0F7E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2705                           	goto	l1762
  2706  0F7E  2F8A               	
  2707                           l305:	
  2708  0F7F                     	
  2709                           l1760:	
  2710  0F7F                     	movlw	low(01h)
  2711  0F7F  3001               	movwf	(??_sprintf+0)+0
  2712  0F80  00A3               	movf	(??_sprintf+0)+0,w
  2713  0F81  0823               	addwf	(sprintf@c),f
  2714  0F82  07AC               		movlw	5
  2715  0F83  3005               	xorwf	((sprintf@c)),w
  2716  0F84  062C               	btfss	status,2
  2717  0F85  1D03               	goto	u1841
  2718  0F86  2F88               	goto	u1840
  2719  0F87  2F89               u1841:
  2720  0F88                     	goto	l1756
  2721  0F88  2F62               u1840:
  2722  0F89                     	goto	l1762
  2723  0F89  2F8A               	
  2724                           l304:	
  2725  0F8A                     	line	1457
  2726                           	
  2727                           l1762:	
  2728  0F8A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  2729                           	movf	(sprintf@flag),w
  2730  0F8A  0827               	andlw	03h
  2731  0F8B  3903               	btfsc	status,2
  2732  0F8C  1903               	goto	u1851
  2733  0F8D  2F8F               	goto	u1850
  2734  0F8E  2F90               u1851:
  2735  0F8F                     	goto	l1768
  2736  0F8F  2F9C               u1850:
  2737  0F90                     	line	1458
  2738                           	
  2739                           l1764:	
  2740  0F90                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  2741                           	movlw	low(02Dh)
  2742  0F90  302D               	movwf	(??_sprintf+0)+0
  2743  0F91  00A3               	movf	(sprintf@sp),w
  2744  0F92  082B               	movwf	fsr0
  2745  0F93  0084               	movf	(??_sprintf+0)+0,w
  2746  0F94  0823               	bcf	status, 7	;select IRP bank0
  2747  0F95  1383               	movwf	indf
  2748  0F96  0080               	
  2749                           l1766:	
  2750  0F97                     	movlw	low(01h)
  2751  0F97  3001               	movwf	(??_sprintf+0)+0
  2752  0F98  00A3               	movf	(??_sprintf+0)+0,w
  2753  0F99  0823               	addwf	(sprintf@sp),f
  2754  0F9A  07AB               	goto	l1768
  2755  0F9B  2F9C               	
  2756                           l306:	
  2757  0F9C                     	line	1491
  2758                           	
  2759                           l1768:	
  2760  0F9C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  2761                           	movf	(sprintf@c),w
  2762  0F9C  082C               	movwf	(??_sprintf+0)+0
  2763  0F9D  00A3               	movf	(??_sprintf+0)+0,w
  2764  0F9E  0823               	movwf	(sprintf@prec)
  2765  0F9F  00A8               	line	1493
  2766                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2767                           	goto	l1776
  2768  0FA0  2FDB               	
  2769                           l308:	
  2770  0FA1                     	line	1508
  2771                           	
  2772                           l1770:	
  2773  0FA1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  2774                           	movlw	0Ah
  2775  0FA1  300A               	movwf	(___lwmod@divisor)
  2776  0FA2  00F8               	movlw	0
  2777  0FA3  3000               	movwf	((___lwmod@divisor))+1
  2778  0FA4  00F9               	movf	(sprintf@prec),w
  2779  0FA5  0828               	movwf	(??_sprintf+0)+0
  2780  0FA6  00A3               	addwf	(??_sprintf+0)+0,w
  2781  0FA7  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2782  0FA8  3E01               	movwf	fsr0
  2783  0FA9  0084               	fcall	stringdir
  2784  0FAA  120A  158A  200A  120A  158A  	movwf	(___lwdiv@divisor)
  2785  0FAF  00F0               	fcall	stringdir
  2786  0FB0  120A  158A  200A  120A  158A  	movwf	(___lwdiv@divisor+1)
  2787  0FB5  00F1               	movf	(sprintf@val+1),w
  2788  0FB6  082A               	movwf	(___lwdiv@dividend+1)
  2789  0FB7  00F3               	movf	(sprintf@val),w
  2790  0FB8  0829               	movwf	(___lwdiv@dividend)
  2791  0FB9  00F2               	fcall	___lwdiv
  2792  0FBA  120A  158A  23BA  120A  158A  	movf	(1+(?___lwdiv)),w
  2793  0FBF  0871               	movwf	(___lwmod@dividend+1)
  2794  0FC0  00FB               	movf	(0+(?___lwdiv)),w
  2795  0FC1  0870               	movwf	(___lwmod@dividend)
  2796  0FC2  00FA               	fcall	___lwmod
  2797  0FC3  120A  158A  2335  120A  158A  	movf	(0+(?___lwmod)),w
  2798  0FC8  0878               	addlw	030h
  2799  0FC9  3E30               	bcf	status, 5	;RP0=0, select bank0
  2800  0FCA  1283               	bcf	status, 6	;RP1=0, select bank0
  2801  0FCB  1303               	movwf	(??_sprintf+1)+0
  2802  0FCC  00A4               	movf	(??_sprintf+1)+0,w
  2803  0FCD  0824               	movwf	(sprintf@c)
  2804  0FCE  00AC               	line	1543
  2805                           	
  2806                           l1772:	
  2807  0FCF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  2808                           	movf	(sprintf@c),w
  2809  0FCF  082C               	movwf	(??_sprintf+0)+0
  2810  0FD0  00A3               	movf	(sprintf@sp),w
  2811  0FD1  082B               	movwf	fsr0
  2812  0FD2  0084               	movf	(??_sprintf+0)+0,w
  2813  0FD3  0823               	bcf	status, 7	;select IRP bank0
  2814  0FD4  1383               	movwf	indf
  2815  0FD5  0080               	
  2816                           l1774:	
  2817  0FD6                     	movlw	low(01h)
  2818  0FD6  3001               	movwf	(??_sprintf+0)+0
  2819  0FD7  00A3               	movf	(??_sprintf+0)+0,w
  2820  0FD8  0823               	addwf	(sprintf@sp),f
  2821  0FD9  07AB               	goto	l1776
  2822  0FDA  2FDB               	line	1544
  2823                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2824                           	
  2825                           l307:	
  2826  0FDB                     	line	1493
  2827                           	
  2828                           l1776:	
  2829  0FDB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2830                           	movlw	low(-1)
  2831  0FDB  30FF               	movwf	(??_sprintf+0)+0
  2832  0FDC  00A3               	movf	(??_sprintf+0)+0,w
  2833  0FDD  0823               	addwf	(sprintf@prec),f
  2834  0FDE  07A8               		incf	(((sprintf@prec))),w
  2835  0FDF  0A28               	btfss	status,2
  2836  0FE0  1D03               	goto	u1861
  2837  0FE1  2FE3               	goto	u1860
  2838  0FE2  2FE4               u1861:
  2839  0FE3                     	goto	l1770
  2840  0FE3  2FA1               u1860:
  2841  0FE4                     	goto	l1778
  2842  0FE4  2FE6               	
  2843                           l309:	
  2844  0FE5                     	goto	l1778
  2845  0FE5  2FE6               	line	1552
  2846                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2847                           	
  2848                           l292:	
  2849  0FE6                     	line	548
  2850                           	
  2851                           l1778:	
  2852  0FE6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2853                           	movlw	01h
  2854  0FE6  3001               	addwf	(sprintf@f),f
  2855  0FE7  07A0               	movlw	-01h
  2856  0FE8  30FF               	addwf	(sprintf@f),w
  2857  0FE9  0720               	movwf	fsr0
  2858  0FEA  0084               	fcall	stringdir
  2859  0FEB  120A  158A  200A  120A  158A  	movwf	(??_sprintf+0)+0
  2860  0FF0  00A3               	movf	(??_sprintf+0)+0,w
  2861  0FF1  0823               	movwf	(sprintf@c)
  2862  0FF2  00AC               	movf	(((sprintf@c))),w
  2863  0FF3  082C               	btfss	status,2
  2864  0FF4  1D03               	goto	u1871
  2865  0FF5  2FF7               	goto	u1870
  2866  0FF6  2FF8               u1871:
  2867  0FF7                     	goto	l1728
  2868  0FF7  2F08               u1870:
  2869  0FF8                     	goto	l1780
  2870  0FF8  2FFA               	
  2871                           l310:	
  2872  0FF9                     	goto	l1780
  2873  0FF9  2FFA               	line	1554
  2874                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  2875                           	
  2876                           l297:	
  2877  0FFA                     	line	1557
  2878                           	
  2879                           l1780:	
  2880  0FFA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  2881                           	movf	(sprintf@sp),w
  2882  0FFA  082B               	movwf	fsr0
  2883  0FFB  0084               	bcf	status, 7	;select IRP bank0
  2884  0FFC  1383               	clrf	indf
  2885  0FFD  0180               	goto	l311
  2886  0FFE  2FFF               	line	1559
  2887                           	
  2888                           l1782:	
  2889  0FFF                     	line	1560
  2890                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  2891                           	
  2892                           l311:	
  2893  0FFF                     	return
  2894  0FFF  0008               	opt stack 0
  2895                           GLOBAL	__end_of_sprintf
  2896                           	__end_of_sprintf:
  2897  1000                     	signat	_sprintf,4698
  2898                           	global	___lwmod
  2899                           
  2900 ;; *************** function ___lwmod *****************
  2901 ;; Defined at:
  2902 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2903 ;; Parameters:    Size  Location     Type
  2904 ;;  divisor         2    8[COMMON] unsigned int 
  2905 ;;  dividend        2   10[COMMON] unsigned int 
  2906 ;; Auto vars:     Size  Location     Type
  2907 ;;  counter         1   13[COMMON] unsigned char 
  2908 ;; Return value:  Size  Location     Type
  2909 ;;                  2    8[COMMON] unsigned int 
  2910 ;; Registers used:
  2911 ;;		wreg, status,2, status,0
  2912 ;; Tracked objects:
  2913 ;;		On entry : 0/0
  2914 ;;		On exit  : 0/0
  2915 ;;		Unchanged: 0/0
  2916 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2917 ;;      Params:         4       0       0       0       0
  2918 ;;      Locals:         1       0       0       0       0
  2919 ;;      Temps:          1       0       0       0       0
  2920 ;;      Totals:         6       0       0       0       0
  2921 ;;Total ram usage:        6 bytes
  2922 ;; Hardware stack levels used:    1
  2923 ;; This function calls:
  2924 ;;		Nothing
  2925 ;; This function is called by:
  2926 ;;		_sprintf
  2927 ;; This function uses a non-reentrant model
  2928 ;;
  2929                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2930                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2931                           	line	5
  2932                           global __ptext4
  2933                           __ptext4:	;psect for function ___lwmod
  2934  0B35                     psect	text4
  2935                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2936                           	line	5
  2937                           	global	__size_of___lwmod
  2938                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2939  0041                     	
  2940                           ___lwmod:	
  2941  0B35                     ;incstack = 0
  2942                           	opt	stack 5
  2943                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2944                           	line	12
  2945                           	
  2946                           l1688:	
  2947  0B35                     	movf	((___lwmod@divisor)),w
  2948  0B35  0878               iorwf	((___lwmod@divisor+1)),w
  2949  0B36  0479               	btfsc	status,2
  2950  0B37  1903               	goto	u1711
  2951  0B38  2B3A               	goto	u1710
  2952  0B39  2B3B               u1711:
  2953  0B3A                     	goto	l1706
  2954  0B3A  2B70               u1710:
  2955  0B3B                     	line	13
  2956                           	
  2957                           l1690:	
  2958  0B3B                     	clrf	(___lwmod@counter)
  2959  0B3B  01FD               	incf	(___lwmod@counter),f
  2960  0B3C  0AFD               	line	14
  2961                           	goto	l1696
  2962  0B3D  2B4A               	
  2963                           l592:	
  2964  0B3E                     	line	15
  2965                           	
  2966                           l1692:	
  2967  0B3E                     	movlw	01h
  2968  0B3E  3001               	
  2969                           u1725:
  2970  0B3F                     	clrc
  2971  0B3F  1003               	rlf	(___lwmod@divisor),f
  2972  0B40  0DF8               	rlf	(___lwmod@divisor+1),f
  2973  0B41  0DF9               	addlw	-1
  2974  0B42  3EFF               	skipz
  2975  0B43  1D03               	goto	u1725
  2976  0B44  2B3F               	line	16
  2977                           	
  2978                           l1694:	
  2979  0B45                     	movlw	low(01h)
  2980  0B45  3001               	movwf	(??___lwmod+0)+0
  2981  0B46  00FC               	movf	(??___lwmod+0)+0,w
  2982  0B47  087C               	addwf	(___lwmod@counter),f
  2983  0B48  07FD               	goto	l1696
  2984  0B49  2B4A               	line	17
  2985                           	
  2986                           l591:	
  2987  0B4A                     	line	14
  2988                           	
  2989                           l1696:	
  2990  0B4A                     	btfss	(___lwmod@divisor+1),(15)&7
  2991  0B4A  1FF9               	goto	u1731
  2992  0B4B  2B4D               	goto	u1730
  2993  0B4C  2B4E               u1731:
  2994  0B4D                     	goto	l1692
  2995  0B4D  2B3E               u1730:
  2996  0B4E                     	goto	l1698
  2997  0B4E  2B50               	
  2998                           l593:	
  2999  0B4F                     	goto	l1698
  3000  0B4F  2B50               	line	18
  3001                           	
  3002                           l594:	
  3003  0B50                     	line	19
  3004                           	
  3005                           l1698:	
  3006  0B50                     	movf	(___lwmod@divisor+1),w
  3007  0B50  0879               	subwf	(___lwmod@dividend+1),w
  3008  0B51  027B               	skipz
  3009  0B52  1D03               	goto	u1745
  3010  0B53  2B56               	movf	(___lwmod@divisor),w
  3011  0B54  0878               	subwf	(___lwmod@dividend),w
  3012  0B55  027A               u1745:
  3013  0B56                     	skipc
  3014  0B56  1C03               	goto	u1741
  3015  0B57  2B59               	goto	u1740
  3016  0B58  2B5A               u1741:
  3017  0B59                     	goto	l1702
  3018  0B59  2B61               u1740:
  3019  0B5A                     	line	20
  3020                           	
  3021                           l1700:	
  3022  0B5A                     	movf	(___lwmod@divisor),w
  3023  0B5A  0878               	subwf	(___lwmod@dividend),f
  3024  0B5B  02FA               	movf	(___lwmod@divisor+1),w
  3025  0B5C  0879               	skipc
  3026  0B5D  1C03               	decf	(___lwmod@dividend+1),f
  3027  0B5E  03FB               	subwf	(___lwmod@dividend+1),f
  3028  0B5F  02FB               	goto	l1702
  3029  0B60  2B61               	
  3030                           l595:	
  3031  0B61                     	line	21
  3032                           	
  3033                           l1702:	
  3034  0B61                     	movlw	01h
  3035  0B61  3001               	
  3036                           u1755:
  3037  0B62                     	clrc
  3038  0B62  1003               	rrf	(___lwmod@divisor+1),f
  3039  0B63  0CF9               	rrf	(___lwmod@divisor),f
  3040  0B64  0CF8               	addlw	-1
  3041  0B65  3EFF               	skipz
  3042  0B66  1D03               	goto	u1755
  3043  0B67  2B62               	line	22
  3044                           	
  3045                           l1704:	
  3046  0B68                     	movlw	01h
  3047  0B68  3001               	subwf	(___lwmod@counter),f
  3048  0B69  02FD               	btfss	status,2
  3049  0B6A  1D03               	goto	u1761
  3050  0B6B  2B6D               	goto	u1760
  3051  0B6C  2B6E               u1761:
  3052  0B6D                     	goto	l1698
  3053  0B6D  2B50               u1760:
  3054  0B6E                     	goto	l1706
  3055  0B6E  2B70               	
  3056                           l596:	
  3057  0B6F                     	goto	l1706
  3058  0B6F  2B70               	line	23
  3059                           	
  3060                           l590:	
  3061  0B70                     	line	24
  3062                           	
  3063                           l1706:	
  3064  0B70                     	movf	(___lwmod@dividend+1),w
  3065  0B70  087B               	movwf	(?___lwmod+1)
  3066  0B71  00F9               	movf	(___lwmod@dividend),w
  3067  0B72  087A               	movwf	(?___lwmod)
  3068  0B73  00F8               	goto	l597
  3069  0B74  2B75               	
  3070                           l1708:	
  3071  0B75                     	line	25
  3072                           	
  3073                           l597:	
  3074  0B75                     	return
  3075  0B75  0008               	opt stack 0
  3076                           GLOBAL	__end_of___lwmod
  3077                           	__end_of___lwmod:
  3078  0B76                     	signat	___lwmod,8314
  3079                           	global	___lwdiv
  3080                           
  3081 ;; *************** function ___lwdiv *****************
  3082 ;; Defined at:
  3083 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3084 ;; Parameters:    Size  Location     Type
  3085 ;;  divisor         2    0[COMMON] unsigned int 
  3086 ;;  dividend        2    2[COMMON] unsigned int 
  3087 ;; Auto vars:     Size  Location     Type
  3088 ;;  quotient        2    5[COMMON] unsigned int 
  3089 ;;  counter         1    7[COMMON] unsigned char 
  3090 ;; Return value:  Size  Location     Type
  3091 ;;                  2    0[COMMON] unsigned int 
  3092 ;; Registers used:
  3093 ;;		wreg, status,2, status,0
  3094 ;; Tracked objects:
  3095 ;;		On entry : 0/0
  3096 ;;		On exit  : 0/0
  3097 ;;		Unchanged: 0/0
  3098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3099 ;;      Params:         4       0       0       0       0
  3100 ;;      Locals:         3       0       0       0       0
  3101 ;;      Temps:          1       0       0       0       0
  3102 ;;      Totals:         8       0       0       0       0
  3103 ;;Total ram usage:        8 bytes
  3104 ;; Hardware stack levels used:    1
  3105 ;; This function calls:
  3106 ;;		Nothing
  3107 ;; This function is called by:
  3108 ;;		_sprintf
  3109 ;; This function uses a non-reentrant model
  3110 ;;
  3111                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3112                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3113                           	line	5
  3114                           global __ptext5
  3115                           __ptext5:	;psect for function ___lwdiv
  3116  0BBA                     psect	text5
  3117                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3118                           	line	5
  3119                           	global	__size_of___lwdiv
  3120                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3121  004B                     	
  3122                           ___lwdiv:	
  3123  0BBA                     ;incstack = 0
  3124                           	opt	stack 5
  3125                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3126                           	line	13
  3127                           	
  3128                           l1662:	
  3129  0BBA                     	clrf	(___lwdiv@quotient)
  3130  0BBA  01F5               	clrf	(___lwdiv@quotient+1)
  3131  0BBB  01F6               	line	14
  3132                           	
  3133                           l1664:	
  3134  0BBC                     	movf	((___lwdiv@divisor)),w
  3135  0BBC  0870               iorwf	((___lwdiv@divisor+1)),w
  3136  0BBD  0471               	btfsc	status,2
  3137  0BBE  1903               	goto	u1641
  3138  0BBF  2BC1               	goto	u1640
  3139  0BC0  2BC2               u1641:
  3140  0BC1                     	goto	l1684
  3141  0BC1  2BFF               u1640:
  3142  0BC2                     	line	15
  3143                           	
  3144                           l1666:	
  3145  0BC2                     	clrf	(___lwdiv@counter)
  3146  0BC2  01F7               	incf	(___lwdiv@counter),f
  3147  0BC3  0AF7               	line	16
  3148                           	goto	l1672
  3149  0BC4  2BD1               	
  3150                           l582:	
  3151  0BC5                     	line	17
  3152                           	
  3153                           l1668:	
  3154  0BC5                     	movlw	01h
  3155  0BC5  3001               	
  3156                           u1655:
  3157  0BC6                     	clrc
  3158  0BC6  1003               	rlf	(___lwdiv@divisor),f
  3159  0BC7  0DF0               	rlf	(___lwdiv@divisor+1),f
  3160  0BC8  0DF1               	addlw	-1
  3161  0BC9  3EFF               	skipz
  3162  0BCA  1D03               	goto	u1655
  3163  0BCB  2BC6               	line	18
  3164                           	
  3165                           l1670:	
  3166  0BCC                     	movlw	low(01h)
  3167  0BCC  3001               	movwf	(??___lwdiv+0)+0
  3168  0BCD  00F4               	movf	(??___lwdiv+0)+0,w
  3169  0BCE  0874               	addwf	(___lwdiv@counter),f
  3170  0BCF  07F7               	goto	l1672
  3171  0BD0  2BD1               	line	19
  3172                           	
  3173                           l581:	
  3174  0BD1                     	line	16
  3175                           	
  3176                           l1672:	
  3177  0BD1                     	btfss	(___lwdiv@divisor+1),(15)&7
  3178  0BD1  1FF1               	goto	u1661
  3179  0BD2  2BD4               	goto	u1660
  3180  0BD3  2BD5               u1661:
  3181  0BD4                     	goto	l1668
  3182  0BD4  2BC5               u1660:
  3183  0BD5                     	goto	l1674
  3184  0BD5  2BD7               	
  3185                           l583:	
  3186  0BD6                     	goto	l1674
  3187  0BD6  2BD7               	line	20
  3188                           	
  3189                           l584:	
  3190  0BD7                     	line	21
  3191                           	
  3192                           l1674:	
  3193  0BD7                     	movlw	01h
  3194  0BD7  3001               	
  3195                           u1675:
  3196  0BD8                     	clrc
  3197  0BD8  1003               	rlf	(___lwdiv@quotient),f
  3198  0BD9  0DF5               	rlf	(___lwdiv@quotient+1),f
  3199  0BDA  0DF6               	addlw	-1
  3200  0BDB  3EFF               	skipz
  3201  0BDC  1D03               	goto	u1675
  3202  0BDD  2BD8               	line	22
  3203                           	movf	(___lwdiv@divisor+1),w
  3204  0BDE  0871               	subwf	(___lwdiv@dividend+1),w
  3205  0BDF  0273               	skipz
  3206  0BE0  1D03               	goto	u1685
  3207  0BE1  2BE4               	movf	(___lwdiv@divisor),w
  3208  0BE2  0870               	subwf	(___lwdiv@dividend),w
  3209  0BE3  0272               u1685:
  3210  0BE4                     	skipc
  3211  0BE4  1C03               	goto	u1681
  3212  0BE5  2BE7               	goto	u1680
  3213  0BE6  2BE8               u1681:
  3214  0BE7                     	goto	l1680
  3215  0BE7  2BF0               u1680:
  3216  0BE8                     	line	23
  3217                           	
  3218                           l1676:	
  3219  0BE8                     	movf	(___lwdiv@divisor),w
  3220  0BE8  0870               	subwf	(___lwdiv@dividend),f
  3221  0BE9  02F2               	movf	(___lwdiv@divisor+1),w
  3222  0BEA  0871               	skipc
  3223  0BEB  1C03               	decf	(___lwdiv@dividend+1),f
  3224  0BEC  03F3               	subwf	(___lwdiv@dividend+1),f
  3225  0BED  02F3               	line	24
  3226                           	
  3227                           l1678:	
  3228  0BEE                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3229  0BEE  1475               	goto	l1680
  3230  0BEF  2BF0               	line	25
  3231                           	
  3232                           l585:	
  3233  0BF0                     	line	26
  3234                           	
  3235                           l1680:	
  3236  0BF0                     	movlw	01h
  3237  0BF0  3001               	
  3238                           u1695:
  3239  0BF1                     	clrc
  3240  0BF1  1003               	rrf	(___lwdiv@divisor+1),f
  3241  0BF2  0CF1               	rrf	(___lwdiv@divisor),f
  3242  0BF3  0CF0               	addlw	-1
  3243  0BF4  3EFF               	skipz
  3244  0BF5  1D03               	goto	u1695
  3245  0BF6  2BF1               	line	27
  3246                           	
  3247                           l1682:	
  3248  0BF7                     	movlw	01h
  3249  0BF7  3001               	subwf	(___lwdiv@counter),f
  3250  0BF8  02F7               	btfss	status,2
  3251  0BF9  1D03               	goto	u1701
  3252  0BFA  2BFC               	goto	u1700
  3253  0BFB  2BFD               u1701:
  3254  0BFC                     	goto	l1674
  3255  0BFC  2BD7               u1700:
  3256  0BFD                     	goto	l1684
  3257  0BFD  2BFF               	
  3258                           l586:	
  3259  0BFE                     	goto	l1684
  3260  0BFE  2BFF               	line	28
  3261                           	
  3262                           l580:	
  3263  0BFF                     	line	29
  3264                           	
  3265                           l1684:	
  3266  0BFF                     	movf	(___lwdiv@quotient+1),w
  3267  0BFF  0876               	movwf	(?___lwdiv+1)
  3268  0C00  00F1               	movf	(___lwdiv@quotient),w
  3269  0C01  0875               	movwf	(?___lwdiv)
  3270  0C02  00F0               	goto	l587
  3271  0C03  2C04               	
  3272                           l1686:	
  3273  0C04                     	line	30
  3274                           	
  3275                           l587:	
  3276  0C04                     	return
  3277  0C04  0008               	opt stack 0
  3278                           GLOBAL	__end_of___lwdiv
  3279                           	__end_of___lwdiv:
  3280  0C05                     	signat	___lwdiv,8314
  3281                           	global	_setup
  3282                           
  3283 ;; *************** function _setup *****************
  3284 ;; Defined at:
  3285 ;;		line 114 in file "mainM.c"
  3286 ;; Parameters:    Size  Location     Type
  3287 ;;		None
  3288 ;; Auto vars:     Size  Location     Type
  3289 ;;		None
  3290 ;; Return value:  Size  Location     Type
  3291 ;;                  1    wreg      void 
  3292 ;; Registers used:
  3293 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3294 ;; Tracked objects:
  3295 ;;		On entry : 0/0
  3296 ;;		On exit  : 0/0
  3297 ;;		Unchanged: 0/0
  3298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3299 ;;      Params:         0       0       0       0       0
  3300 ;;      Locals:         0       0       0       0       0
  3301 ;;      Temps:          0       1       0       0       0
  3302 ;;      Totals:         0       1       0       0       0
  3303 ;;Total ram usage:        1 bytes
  3304 ;; Hardware stack levels used:    1
  3305 ;; Hardware stack levels required when called:    2
  3306 ;; This function calls:
  3307 ;;		_I2C_Master_Init
  3308 ;;		_clcLCD
  3309 ;;		_initLCD
  3310 ;;		_setCursorLCD
  3311 ;;		_writeStrLCD
  3312 ;; This function is called by:
  3313 ;;		_main
  3314 ;; This function uses a non-reentrant model
  3315 ;;
  3316                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3317                           	file	"mainM.c"
  3318                           	line	114
  3319                           global __ptext6
  3320                           __ptext6:	;psect for function _setup
  3321  0C05                     psect	text6
  3322                           	file	"mainM.c"
  3323                           	line	114
  3324                           	global	__size_of_setup
  3325                           	__size_of_setup	equ	__end_of_setup-_setup
  3326  005F                     	
  3327                           _setup:	
  3328  0C05                     ;incstack = 0
  3329                           	opt	stack 5
  3330                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3331                           	line	116
  3332                           	
  3333                           l1926:	
  3334  0C05                     ;mainM.c: 116:     ANSEL = 0;
  3335                           	bsf	status, 5	;RP0=1, select bank3
  3336  0C05  1683               	bsf	status, 6	;RP1=1, select bank3
  3337  0C06  1703               	clrf	(392)^0180h	;volatile
  3338  0C07  0188               	line	117
  3339                           ;mainM.c: 117:     ANSELH = 0;
  3340                           	clrf	(393)^0180h	;volatile
  3341  0C08  0189               	line	118
  3342                           ;mainM.c: 118:     TRISB = 0;
  3343                           	bsf	status, 5	;RP0=1, select bank1
  3344  0C09  1683               	bcf	status, 6	;RP1=0, select bank1
  3345  0C0A  1303               	clrf	(134)^080h	;volatile
  3346  0C0B  0186               	line	119
  3347                           ;mainM.c: 119:     TRISD = 0;
  3348                           	clrf	(136)^080h	;volatile
  3349  0C0C  0188               	line	120
  3350                           ;mainM.c: 120:     PORTB = 0;
  3351                           	bcf	status, 5	;RP0=0, select bank0
  3352  0C0D  1283               	bcf	status, 6	;RP1=0, select bank0
  3353  0C0E  1303               	clrf	(6)	;volatile
  3354  0C0F  0186               	line	121
  3355                           ;mainM.c: 121:     PORTD = 0;
  3356                           	clrf	(8)	;volatile
  3357  0C10  0188               	line	122
  3358                           	
  3359                           l1928:	
  3360  0C11                     ;mainM.c: 122:     I2C_Master_Init(100000);
  3361                           	movlw	0
  3362  0C11  3000               	movwf	(I2C_Master_Init@c+3)
  3363  0C12  00A3               	movlw	01h
  3364  0C13  3001               	movwf	(I2C_Master_Init@c+2)
  3365  0C14  00A2               	movlw	086h
  3366  0C15  3086               	movwf	(I2C_Master_Init@c+1)
  3367  0C16  00A1               	movlw	0A0h
  3368  0C17  30A0               	movwf	(I2C_Master_Init@c)
  3369  0C18  00A0               
  3370                           	fcall	_I2C_Master_Init
  3371  0C19  120A  158A  22C3  120A  158A  	line	124
  3372                           	
  3373                           l1930:	
  3374  0C1E                     ;mainM.c: 124:     initLCD();
  3375                           	fcall	_initLCD
  3376  0C1E  120A  158A  22FB  120A  158A  	line	125
  3377                           	
  3378                           l1932:	
  3379  0C23                     ;mainM.c: 125:     clcLCD();
  3380                           	fcall	_clcLCD
  3381  0C23  120A  158A  21EB  120A  158A  	line	128
  3382                           	
  3383                           l1934:	
  3384  0C28                     ;mainM.c: 128:     setCursorLCD(1, 1);
  3385                           	clrf	(setCursorLCD@x)
  3386  0C28  01F3               	incf	(setCursorLCD@x),f
  3387  0C29  0AF3               	movlw	low(01h)
  3388  0C2A  3001               	fcall	_setCursorLCD
  3389  0C2B  120A  158A  224D  120A  158A  	line	129
  3390                           	
  3391                           l1936:	
  3392  0C30                     ;mainM.c: 129:     writeStrLCD("S1");
  3393                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3394  0C30  300E               	movwf	(writeStrLCD@string)
  3395  0C31  00F2               	movlw	80h
  3396  0C32  3080               	movwf	(writeStrLCD@string+1)
  3397  0C33  00F3               	fcall	_writeStrLCD
  3398  0C34  120A  158A  2376  120A  158A  	line	130
  3399                           	
  3400                           l1938:	
  3401  0C39                     ;mainM.c: 130:     setCursorLCD(1, 7);
  3402                           	movlw	low(07h)
  3403  0C39  3007               	bcf	status, 5	;RP0=0, select bank0
  3404  0C3A  1283               	bcf	status, 6	;RP1=0, select bank0
  3405  0C3B  1303               	movwf	(??_setup+0)+0
  3406  0C3C  00A8               	movf	(??_setup+0)+0,w
  3407  0C3D  0828               	movwf	(setCursorLCD@x)
  3408  0C3E  00F3               	movlw	low(01h)
  3409  0C3F  3001               	fcall	_setCursorLCD
  3410  0C40  120A  158A  224D  120A  158A  	line	131
  3411                           	
  3412                           l1940:	
  3413  0C45                     ;mainM.c: 131:     writeStrLCD("S2");
  3414                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3415  0C45  3011               	movwf	(writeStrLCD@string)
  3416  0C46  00F2               	movlw	80h
  3417  0C47  3080               	movwf	(writeStrLCD@string+1)
  3418  0C48  00F3               	fcall	_writeStrLCD
  3419  0C49  120A  158A  2376  120A  158A  	line	132
  3420                           	
  3421                           l1942:	
  3422  0C4E                     ;mainM.c: 132:     setCursorLCD(1, 13);
  3423                           	movlw	low(0Dh)
  3424  0C4E  300D               	bcf	status, 5	;RP0=0, select bank0
  3425  0C4F  1283               	bcf	status, 6	;RP1=0, select bank0
  3426  0C50  1303               	movwf	(??_setup+0)+0
  3427  0C51  00A8               	movf	(??_setup+0)+0,w
  3428  0C52  0828               	movwf	(setCursorLCD@x)
  3429  0C53  00F3               	movlw	low(01h)
  3430  0C54  3001               	fcall	_setCursorLCD
  3431  0C55  120A  158A  224D  120A  158A  	line	133
  3432                           	
  3433                           l1944:	
  3434  0C5A                     ;mainM.c: 133:     writeStrLCD("S3");
  3435                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  3436  0C5A  3014               	movwf	(writeStrLCD@string)
  3437  0C5B  00F2               	movlw	80h
  3438  0C5C  3080               	movwf	(writeStrLCD@string+1)
  3439  0C5D  00F3               	fcall	_writeStrLCD
  3440  0C5E  120A  158A  2376  120A  158A  	line	134
  3441                           	
  3442                           l201:	
  3443  0C63                     	return
  3444  0C63  0008               	opt stack 0
  3445                           GLOBAL	__end_of_setup
  3446                           	__end_of_setup:
  3447  0C64                     	signat	_setup,89
  3448                           	global	_writeStrLCD
  3449                           
  3450 ;; *************** function _writeStrLCD *****************
  3451 ;; Defined at:
  3452 ;;		line 21 in file "LCD.c"
  3453 ;; Parameters:    Size  Location     Type
  3454 ;;  string          2    2[COMMON] PTR unsigned char 
  3455 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  3456 ;;		 -> STR_3(3), writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  3457 ;; Auto vars:     Size  Location     Type
  3458 ;;  cont            2    7[COMMON] int 
  3459 ;; Return value:  Size  Location     Type
  3460 ;;                  1    wreg      void 
  3461 ;; Registers used:
  3462 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3463 ;; Tracked objects:
  3464 ;;		On entry : 0/0
  3465 ;;		On exit  : 0/0
  3466 ;;		Unchanged: 0/0
  3467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3468 ;;      Params:         2       0       0       0       0
  3469 ;;      Locals:         2       0       0       0       0
  3470 ;;      Temps:          3       0       0       0       0
  3471 ;;      Totals:         7       0       0       0       0
  3472 ;;Total ram usage:        7 bytes
  3473 ;; Hardware stack levels used:    1
  3474 ;; Hardware stack levels required when called:    1
  3475 ;; This function calls:
  3476 ;;		_writeCharLCD
  3477 ;; This function is called by:
  3478 ;;		_writeIntLCD
  3479 ;;		_main
  3480 ;;		_setup
  3481 ;;		_writeIntLCD16
  3482 ;; This function uses a non-reentrant model
  3483 ;;
  3484                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3485                           	file	"LCD.c"
  3486                           	line	21
  3487                           global __ptext7
  3488                           __ptext7:	;psect for function _writeStrLCD
  3489  0B76                     psect	text7
  3490                           	file	"LCD.c"
  3491                           	line	21
  3492                           	global	__size_of_writeStrLCD
  3493                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  3494  0044                     	
  3495                           _writeStrLCD:	
  3496  0B76                     ;incstack = 0
  3497                           	opt	stack 6
  3498                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3499                           	line	23
  3500                           	
  3501                           l1718:	
  3502  0B76                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  3503                           	clrf	(writeStrLCD@cont)
  3504  0B76  01F7               	clrf	(writeStrLCD@cont+1)
  3505  0B77  01F8               	goto	l1724
  3506  0B78  2B9C               	
  3507                           l83:	
  3508  0B79                     	line	24
  3509                           	
  3510                           l1720:	
  3511  0B79                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  3512                           	movf	(writeStrLCD@cont),w
  3513  0B79  0877               	addwf	(writeStrLCD@string),w
  3514  0B7A  0772               	movwf	(??_writeStrLCD+1)+0
  3515  0B7B  00F5               	movf	(writeStrLCD@string+1),w
  3516  0B7C  0873               	movwf	(??_writeStrLCD+0)+0
  3517  0B7D  00F4               	skipnc
  3518  0B7E  1803               	incf	(??_writeStrLCD+0)+0,f
  3519  0B7F  0AF4               	btfss	(writeStrLCD@cont),7
  3520  0B80  1FF7               	goto	u1770
  3521  0B81  2B83               	decf	(??_writeStrLCD+0)+0,f
  3522  0B82  03F4               u1770:
  3523  0B83                     	movf	(??_writeStrLCD+0)+0,w
  3524  0B83  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3525  0B84  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3526  0B85  0876               	bcf	status, 5	;RP0=0, select bank0
  3527  0B86  1283               	bcf	status, 6	;RP1=0, select bank0
  3528  0B87  1303               	movwf	btemp+1
  3529  0B88  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3530  0B89  0875               	movwf	fsr0
  3531  0B8A  0084               	fcall	stringtab
  3532  0B8B  120A  158A  2000  120A  158A  	fcall	_writeCharLCD
  3533  0B90  120A  158A  222A  120A  158A  	line	25
  3534                           	
  3535                           l1722:	
  3536  0B95                     ;LCD.c: 25:     }
  3537                           	movlw	01h
  3538  0B95  3001               	addwf	(writeStrLCD@cont),f
  3539  0B96  07F7               	skipnc
  3540  0B97  1803               	incf	(writeStrLCD@cont+1),f
  3541  0B98  0AF8               	movlw	0
  3542  0B99  3000               	addwf	(writeStrLCD@cont+1),f
  3543  0B9A  07F8               	goto	l1724
  3544  0B9B  2B9C               	
  3545                           l82:	
  3546  0B9C                     	
  3547                           l1724:	
  3548  0B9C                     	movf	(writeStrLCD@cont),w
  3549  0B9C  0877               	addwf	(writeStrLCD@string),w
  3550  0B9D  0772               	movwf	(??_writeStrLCD+1)+0
  3551  0B9E  00F5               	movf	(writeStrLCD@string+1),w
  3552  0B9F  0873               	movwf	(??_writeStrLCD+0)+0
  3553  0BA0  00F4               	skipnc
  3554  0BA1  1803               	incf	(??_writeStrLCD+0)+0,f
  3555  0BA2  0AF4               	btfss	(writeStrLCD@cont),7
  3556  0BA3  1FF7               	goto	u1780
  3557  0BA4  2BA6               	decf	(??_writeStrLCD+0)+0,f
  3558  0BA5  03F4               u1780:
  3559  0BA6                     	movf	(??_writeStrLCD+0)+0,w
  3560  0BA6  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3561  0BA7  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3562  0BA8  0876               	bcf	status, 5	;RP0=0, select bank0
  3563  0BA9  1283               	bcf	status, 6	;RP1=0, select bank0
  3564  0BAA  1303               	movwf	btemp+1
  3565  0BAB  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3566  0BAC  0875               	movwf	fsr0
  3567  0BAD  0084               	fcall	stringtab
  3568  0BAE  120A  158A  2000  120A  158A  	xorlw	0
  3569  0BB3  3A00               	skipz
  3570  0BB4  1D03               	goto	u1791
  3571  0BB5  2BB7               	goto	u1790
  3572  0BB6  2BB8               u1791:
  3573  0BB7                     	goto	l1720
  3574  0BB7  2B79               u1790:
  3575  0BB8                     	goto	l85
  3576  0BB8  2BB9               	
  3577                           l84:	
  3578  0BB9                     	line	26
  3579                           	
  3580                           l85:	
  3581  0BB9                     	return
  3582  0BB9  0008               	opt stack 0
  3583                           GLOBAL	__end_of_writeStrLCD
  3584                           	__end_of_writeStrLCD:
  3585  0BBA                     	signat	_writeStrLCD,4217
  3586                           	global	_writeCharLCD
  3587                           
  3588 ;; *************** function _writeCharLCD *****************
  3589 ;; Defined at:
  3590 ;;		line 28 in file "LCD.c"
  3591 ;; Parameters:    Size  Location     Type
  3592 ;;  character       1    wreg     unsigned char 
  3593 ;; Auto vars:     Size  Location     Type
  3594 ;;  character       1    1[COMMON] unsigned char 
  3595 ;; Return value:  Size  Location     Type
  3596 ;;                  1    wreg      void 
  3597 ;; Registers used:
  3598 ;;		wreg
  3599 ;; Tracked objects:
  3600 ;;		On entry : 0/0
  3601 ;;		On exit  : 0/0
  3602 ;;		Unchanged: 0/0
  3603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3604 ;;      Params:         0       0       0       0       0
  3605 ;;      Locals:         1       0       0       0       0
  3606 ;;      Temps:          1       0       0       0       0
  3607 ;;      Totals:         2       0       0       0       0
  3608 ;;Total ram usage:        2 bytes
  3609 ;; Hardware stack levels used:    1
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_writeStrLCD
  3614 ;;		_writeFloat
  3615 ;;		_main
  3616 ;; This function uses a non-reentrant model
  3617 ;;
  3618                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3619                           	line	28
  3620                           global __ptext8
  3621                           __ptext8:	;psect for function _writeCharLCD
  3622  0A2A                     psect	text8
  3623                           	file	"LCD.c"
  3624                           	line	28
  3625                           	global	__size_of_writeCharLCD
  3626                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  3627  000F                     	
  3628                           _writeCharLCD:	
  3629  0A2A                     ;incstack = 0
  3630                           	opt	stack 6
  3631                           ; Regs used in _writeCharLCD: [wreg]
  3632                           ;writeCharLCD@character stored from wreg
  3633                           	movwf	(writeCharLCD@character)
  3634  0A2A  00F1               	line	29
  3635                           	
  3636                           l1654:	
  3637  0A2B                     ;LCD.c: 29:    RD0 = 1;
  3638                           	bcf	status, 5	;RP0=0, select bank0
  3639  0A2B  1283               	bcf	status, 6	;RP1=0, select bank0
  3640  0A2C  1303               	bsf	(64/8),(64)&7	;volatile
  3641  0A2D  1408               	line	30
  3642                           	
  3643                           l1656:	
  3644  0A2E                     ;LCD.c: 30:    PORTB = character;
  3645                           	movf	(writeCharLCD@character),w
  3646  0A2E  0871               	movwf	(6)	;volatile
  3647  0A2F  0086               	line	31
  3648                           	
  3649                           l1658:	
  3650  0A30                     ;LCD.c: 31:    RD1 = 1;
  3651                           	bsf	(65/8),(65)&7	;volatile
  3652  0A30  1488               	line	32
  3653                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3654                           	opt asmopt_push
  3655                           opt asmopt_off
  3656                           	movlw	13
  3657  0A31  300D               movwf	((??_writeCharLCD+0)+0),f
  3658  0A32  00F0               	u3297:
  3659  0A33                     decfsz	(??_writeCharLCD+0)+0,f
  3660  0A33  0BF0               	goto	u3297
  3661  0A34  2A33               opt asmopt_pop
  3662                           
  3663                           	line	33
  3664                           	
  3665                           l1660:	
  3666  0A35                     ;LCD.c: 33:    RD1 = 0;
  3667                           	bcf	status, 5	;RP0=0, select bank0
  3668  0A35  1283               	bcf	status, 6	;RP1=0, select bank0
  3669  0A36  1303               	bcf	(65/8),(65)&7	;volatile
  3670  0A37  1088               	line	34
  3671                           	
  3672                           l88:	
  3673  0A38                     	return
  3674  0A38  0008               	opt stack 0
  3675                           GLOBAL	__end_of_writeCharLCD
  3676                           	__end_of_writeCharLCD:
  3677  0A39                     	signat	_writeCharLCD,4217
  3678                           	global	_setCursorLCD
  3679                           
  3680 ;; *************** function _setCursorLCD *****************
  3681 ;; Defined at:
  3682 ;;		line 8 in file "LCD.c"
  3683 ;; Parameters:    Size  Location     Type
  3684 ;;  y               1    wreg     unsigned char 
  3685 ;;  x               1    3[COMMON] unsigned char 
  3686 ;; Auto vars:     Size  Location     Type
  3687 ;;  y               1    5[COMMON] unsigned char 
  3688 ;; Return value:  Size  Location     Type
  3689 ;;                  1    wreg      void 
  3690 ;; Registers used:
  3691 ;;		wreg, status,2, status,0, pclath, cstack
  3692 ;; Tracked objects:
  3693 ;;		On entry : 0/0
  3694 ;;		On exit  : 0/0
  3695 ;;		Unchanged: 0/0
  3696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3697 ;;      Params:         1       0       0       0       0
  3698 ;;      Locals:         1       0       0       0       0
  3699 ;;      Temps:          1       0       0       0       0
  3700 ;;      Totals:         3       0       0       0       0
  3701 ;;Total ram usage:        3 bytes
  3702 ;; Hardware stack levels used:    1
  3703 ;; Hardware stack levels required when called:    1
  3704 ;; This function calls:
  3705 ;;		_cmdLCD
  3706 ;; This function is called by:
  3707 ;;		_writeFloat
  3708 ;;		_main
  3709 ;;		_setup
  3710 ;; This function uses a non-reentrant model
  3711 ;;
  3712                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3713                           	line	8
  3714                           global __ptext9
  3715                           __ptext9:	;psect for function _setCursorLCD
  3716  0A4D                     psect	text9
  3717                           	file	"LCD.c"
  3718                           	line	8
  3719                           	global	__size_of_setCursorLCD
  3720                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  3721  001D                     	
  3722                           _setCursorLCD:	
  3723  0A4D                     ;incstack = 0
  3724                           	opt	stack 5
  3725                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  3726                           ;setCursorLCD@y stored from wreg
  3727                           	movwf	(setCursorLCD@y)
  3728  0A4D  00F5               	line	9
  3729                           	
  3730                           l1828:	
  3731  0A4E                     ;LCD.c: 9:     if(y == 1){
  3732                           		decf	((setCursorLCD@y)),w
  3733  0A4E  0375               	btfss	status,2
  3734  0A4F  1D03               	goto	u1981
  3735  0A50  2A52               	goto	u1980
  3736  0A51  2A53               u1981:
  3737  0A52                     	goto	l1832
  3738  0A52  2A5B               u1980:
  3739  0A53                     	line	10
  3740                           	
  3741                           l1830:	
  3742  0A53                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  3743                           	movf	(setCursorLCD@x),w
  3744  0A53  0873               	addlw	07Fh
  3745  0A54  3E7F               	movwf	(??_setCursorLCD+0)+0
  3746  0A55  00F4               	movf	(??_setCursorLCD+0)+0,w
  3747  0A56  0874               	bcf	status, 5	;RP0=0, select bank0
  3748  0A57  1283               	bcf	status, 6	;RP1=0, select bank0
  3749  0A58  1303               	movwf	(_cursor)
  3750  0A59  00EF               	line	11
  3751                           ;LCD.c: 11:     }else{
  3752                           	goto	l1834
  3753  0A5A  2A63               	
  3754                           l74:	
  3755  0A5B                     	line	12
  3756                           	
  3757                           l1832:	
  3758  0A5B                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  3759                           	movf	(setCursorLCD@x),w
  3760  0A5B  0873               	addlw	0BFh
  3761  0A5C  3EBF               	movwf	(??_setCursorLCD+0)+0
  3762  0A5D  00F4               	movf	(??_setCursorLCD+0)+0,w
  3763  0A5E  0874               	bcf	status, 5	;RP0=0, select bank0
  3764  0A5F  1283               	bcf	status, 6	;RP1=0, select bank0
  3765  0A60  1303               	movwf	(_cursor)
  3766  0A61  00EF               	goto	l1834
  3767  0A62  2A63               	line	13
  3768                           ;LCD.c: 13:     }
  3769                           	
  3770                           l75:	
  3771  0A63                     	line	14
  3772                           	
  3773                           l1834:	
  3774  0A63                     ;LCD.c: 14:     cmdLCD(cursor);
  3775                           	movf	(_cursor),w
  3776  0A63  086F               	fcall	_cmdLCD
  3777  0A64  120A  158A  2239  120A  158A  	line	15
  3778                           	
  3779                           l76:	
  3780  0A69                     	return
  3781  0A69  0008               	opt stack 0
  3782                           GLOBAL	__end_of_setCursorLCD
  3783                           	__end_of_setCursorLCD:
  3784  0A6A                     	signat	_setCursorLCD,8313
  3785                           	global	_initLCD
  3786                           
  3787 ;; *************** function _initLCD *****************
  3788 ;; Defined at:
  3789 ;;		line 36 in file "LCD.c"
  3790 ;; Parameters:    Size  Location     Type
  3791 ;;		None
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;		None
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  1    wreg      void 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, pclath, cstack
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3803 ;;      Params:         0       0       0       0       0
  3804 ;;      Locals:         0       0       0       0       0
  3805 ;;      Temps:          2       0       0       0       0
  3806 ;;      Totals:         2       0       0       0       0
  3807 ;;Total ram usage:        2 bytes
  3808 ;; Hardware stack levels used:    1
  3809 ;; Hardware stack levels required when called:    1
  3810 ;; This function calls:
  3811 ;;		_cmdLCD
  3812 ;; This function is called by:
  3813 ;;		_setup
  3814 ;; This function uses a non-reentrant model
  3815 ;;
  3816                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3817                           	line	36
  3818                           global __ptext10
  3819                           __ptext10:	;psect for function _initLCD
  3820  0AFB                     psect	text10
  3821                           	file	"LCD.c"
  3822                           	line	36
  3823                           	global	__size_of_initLCD
  3824                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3825  003A                     	
  3826                           _initLCD:	
  3827  0AFB                     ;incstack = 0
  3828                           	opt	stack 5
  3829                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3830                           	line	37
  3831                           	
  3832                           l1838:	
  3833  0AFB                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  3834                           	opt asmopt_push
  3835                           opt asmopt_off
  3836                           movlw	20
  3837  0AFB  3014               movwf	((??_initLCD+0)+0+1),f
  3838  0AFC  00F4               	movlw	121
  3839  0AFD  3079               movwf	((??_initLCD+0)+0),f
  3840  0AFE  00F3               	u3307:
  3841  0AFF                     decfsz	((??_initLCD+0)+0),f
  3842  0AFF  0BF3               	goto	u3307
  3843  0B00  2AFF               	decfsz	((??_initLCD+0)+0+1),f
  3844  0B01  0BF4               	goto	u3307
  3845  0B02  2AFF               	nop2
  3846  0B03  2B04               opt asmopt_pop
  3847                           
  3848                           	line	38
  3849                           	
  3850                           l1840:	
  3851  0B04                     ;LCD.c: 38:     cmdLCD(0x030);
  3852                           	movlw	low(030h)
  3853  0B04  3030               	fcall	_cmdLCD
  3854  0B05  120A  158A  2239  120A  158A  	line	39
  3855                           	
  3856                           l1842:	
  3857  0B0A                     ;LCD.c: 39:     cmdLCD(0x030);
  3858                           	movlw	low(030h)
  3859  0B0A  3030               	fcall	_cmdLCD
  3860  0B0B  120A  158A  2239  120A  158A  	line	40
  3861                           	
  3862                           l1844:	
  3863  0B10                     ;LCD.c: 40:     cmdLCD(0x030);
  3864                           	movlw	low(030h)
  3865  0B10  3030               	fcall	_cmdLCD
  3866  0B11  120A  158A  2239  120A  158A  	line	42
  3867                           	
  3868                           l1846:	
  3869  0B16                     ;LCD.c: 42:     cmdLCD(0x38);
  3870                           	movlw	low(038h)
  3871  0B16  3038               	fcall	_cmdLCD
  3872  0B17  120A  158A  2239  120A  158A  	line	43
  3873                           	
  3874                           l1848:	
  3875  0B1C                     ;LCD.c: 43:     cmdLCD(0x10);
  3876                           	movlw	low(010h)
  3877  0B1C  3010               	fcall	_cmdLCD
  3878  0B1D  120A  158A  2239  120A  158A  	line	44
  3879                           	
  3880                           l1850:	
  3881  0B22                     ;LCD.c: 44:     cmdLCD(0x01);
  3882                           	movlw	low(01h)
  3883  0B22  3001               	fcall	_cmdLCD
  3884  0B23  120A  158A  2239  120A  158A  	line	45
  3885                           	
  3886                           l1852:	
  3887  0B28                     ;LCD.c: 45:     cmdLCD(0x06);
  3888                           	movlw	low(06h)
  3889  0B28  3006               	fcall	_cmdLCD
  3890  0B29  120A  158A  2239  120A  158A  	line	46
  3891                           	
  3892                           l1854:	
  3893  0B2E                     ;LCD.c: 46:     cmdLCD(0x0E);
  3894                           	movlw	low(0Eh)
  3895  0B2E  300E               	fcall	_cmdLCD
  3896  0B2F  120A  158A  2239  120A  158A  	line	47
  3897                           	
  3898                           l91:	
  3899  0B34                     	return
  3900  0B34  0008               	opt stack 0
  3901                           GLOBAL	__end_of_initLCD
  3902                           	__end_of_initLCD:
  3903  0B35                     	signat	_initLCD,89
  3904                           	global	_clcLCD
  3905                           
  3906 ;; *************** function _clcLCD *****************
  3907 ;; Defined at:
  3908 ;;		line 17 in file "LCD.c"
  3909 ;; Parameters:    Size  Location     Type
  3910 ;;		None
  3911 ;; Auto vars:     Size  Location     Type
  3912 ;;		None
  3913 ;; Return value:  Size  Location     Type
  3914 ;;                  1    wreg      void 
  3915 ;; Registers used:
  3916 ;;		wreg, status,2, status,0, pclath, cstack
  3917 ;; Tracked objects:
  3918 ;;		On entry : 0/0
  3919 ;;		On exit  : 0/0
  3920 ;;		Unchanged: 0/0
  3921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3922 ;;      Params:         0       0       0       0       0
  3923 ;;      Locals:         0       0       0       0       0
  3924 ;;      Temps:          0       0       0       0       0
  3925 ;;      Totals:         0       0       0       0       0
  3926 ;;Total ram usage:        0 bytes
  3927 ;; Hardware stack levels used:    1
  3928 ;; Hardware stack levels required when called:    1
  3929 ;; This function calls:
  3930 ;;		_cmdLCD
  3931 ;; This function is called by:
  3932 ;;		_setup
  3933 ;; This function uses a non-reentrant model
  3934 ;;
  3935                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3936                           	line	17
  3937                           global __ptext11
  3938                           __ptext11:	;psect for function _clcLCD
  3939  09EB                     psect	text11
  3940                           	file	"LCD.c"
  3941                           	line	17
  3942                           	global	__size_of_clcLCD
  3943                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  3944  0007                     	
  3945                           _clcLCD:	
  3946  09EB                     ;incstack = 0
  3947                           	opt	stack 5
  3948                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  3949                           	line	18
  3950                           	
  3951                           l1836:	
  3952  09EB                     ;LCD.c: 18:     cmdLCD(0x01);
  3953                           	movlw	low(01h)
  3954  09EB  3001               	fcall	_cmdLCD
  3955  09EC  120A  158A  2239  120A  158A  	line	19
  3956                           	
  3957                           l79:	
  3958  09F1                     	return
  3959  09F1  0008               	opt stack 0
  3960                           GLOBAL	__end_of_clcLCD
  3961                           	__end_of_clcLCD:
  3962  09F2                     	signat	_clcLCD,89
  3963                           	global	_cmdLCD
  3964                           
  3965 ;; *************** function _cmdLCD *****************
  3966 ;; Defined at:
  3967 ;;		line 49 in file "LCD.c"
  3968 ;; Parameters:    Size  Location     Type
  3969 ;;  cmd             1    wreg     unsigned char 
  3970 ;; Auto vars:     Size  Location     Type
  3971 ;;  cmd             1    2[COMMON] unsigned char 
  3972 ;; Return value:  Size  Location     Type
  3973 ;;                  1    wreg      void 
  3974 ;; Registers used:
  3975 ;;		wreg
  3976 ;; Tracked objects:
  3977 ;;		On entry : 0/0
  3978 ;;		On exit  : 0/0
  3979 ;;		Unchanged: 0/0
  3980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3981 ;;      Params:         0       0       0       0       0
  3982 ;;      Locals:         1       0       0       0       0
  3983 ;;      Temps:          2       0       0       0       0
  3984 ;;      Totals:         3       0       0       0       0
  3985 ;;Total ram usage:        3 bytes
  3986 ;; Hardware stack levels used:    1
  3987 ;; This function calls:
  3988 ;;		Nothing
  3989 ;; This function is called by:
  3990 ;;		_setCursorLCD
  3991 ;;		_clcLCD
  3992 ;;		_initLCD
  3993 ;; This function uses a non-reentrant model
  3994 ;;
  3995                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3996                           	line	49
  3997                           global __ptext12
  3998                           __ptext12:	;psect for function _cmdLCD
  3999  0A39                     psect	text12
  4000                           	file	"LCD.c"
  4001                           	line	49
  4002                           	global	__size_of_cmdLCD
  4003                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  4004  0014                     	
  4005                           _cmdLCD:	
  4006  0A39                     ;incstack = 0
  4007                           	opt	stack 5
  4008                           ; Regs used in _cmdLCD: [wreg]
  4009                           ;cmdLCD@cmd stored from wreg
  4010                           	movwf	(cmdLCD@cmd)
  4011  0A39  00F2               	line	50
  4012                           	
  4013                           l1710:	
  4014  0A3A                     ;LCD.c: 50:     RD0 = 0;
  4015                           	bcf	status, 5	;RP0=0, select bank0
  4016  0A3A  1283               	bcf	status, 6	;RP1=0, select bank0
  4017  0A3B  1303               	bcf	(64/8),(64)&7	;volatile
  4018  0A3C  1008               	line	51
  4019                           	
  4020                           l1712:	
  4021  0A3D                     ;LCD.c: 51:  PORTB = cmd;
  4022                           	movf	(cmdLCD@cmd),w
  4023  0A3D  0872               	movwf	(6)	;volatile
  4024  0A3E  0086               	line	52
  4025                           	
  4026                           l1714:	
  4027  0A3F                     ;LCD.c: 52:  RD1 = 1;
  4028                           	bsf	(65/8),(65)&7	;volatile
  4029  0A3F  1488               	line	53
  4030                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4031                           	opt asmopt_push
  4032                           opt asmopt_off
  4033                           movlw	6
  4034  0A40  3006               movwf	((??_cmdLCD+0)+0+1),f
  4035  0A41  00F1               	movlw	48
  4036  0A42  3030               movwf	((??_cmdLCD+0)+0),f
  4037  0A43  00F0               	u3317:
  4038  0A44                     decfsz	((??_cmdLCD+0)+0),f
  4039  0A44  0BF0               	goto	u3317
  4040  0A45  2A44               	decfsz	((??_cmdLCD+0)+0+1),f
  4041  0A46  0BF1               	goto	u3317
  4042  0A47  2A44               	nop
  4043  0A48  0000               opt asmopt_pop
  4044                           
  4045                           	line	54
  4046                           	
  4047                           l1716:	
  4048  0A49                     ;LCD.c: 54:     RD1 = 0;
  4049                           	bcf	status, 5	;RP0=0, select bank0
  4050  0A49  1283               	bcf	status, 6	;RP1=0, select bank0
  4051  0A4A  1303               	bcf	(65/8),(65)&7	;volatile
  4052  0A4B  1088               	line	55
  4053                           	
  4054                           l94:	
  4055  0A4C                     	return
  4056  0A4C  0008               	opt stack 0
  4057                           GLOBAL	__end_of_cmdLCD
  4058                           	__end_of_cmdLCD:
  4059  0A4D                     	signat	_cmdLCD,4217
  4060                           	global	_I2C_Master_Init
  4061                           
  4062 ;; *************** function _I2C_Master_Init *****************
  4063 ;; Defined at:
  4064 ;;		line 16 in file "I2C.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;  c               4    0[BANK0 ] const unsigned long 
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;		None
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, status,2, status,0, pclath, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4078 ;;      Params:         0       4       0       0       0
  4079 ;;      Locals:         0       0       0       0       0
  4080 ;;      Temps:          0       4       0       0       0
  4081 ;;      Totals:         0       8       0       0       0
  4082 ;;Total ram usage:        8 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    1
  4085 ;; This function calls:
  4086 ;;		___lldiv
  4087 ;; This function is called by:
  4088 ;;		_setup
  4089 ;; This function uses a non-reentrant model
  4090 ;;
  4091                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4092                           	file	"I2C.c"
  4093                           	line	16
  4094                           global __ptext13
  4095                           __ptext13:	;psect for function _I2C_Master_Init
  4096  0AC3                     psect	text13
  4097                           	file	"I2C.c"
  4098                           	line	16
  4099                           	global	__size_of_I2C_Master_Init
  4100                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  4101  0038                     	
  4102                           _I2C_Master_Init:	
  4103  0AC3                     ;incstack = 0
  4104                           	opt	stack 5
  4105                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4106                           	line	18
  4107                           	
  4108                           l1812:	
  4109  0AC3                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  4110                           	movlw	low(028h)
  4111  0AC3  3028               	bcf	status, 5	;RP0=0, select bank0
  4112  0AC4  1283               	bcf	status, 6	;RP1=0, select bank0
  4113  0AC5  1303               	movwf	(20)	;volatile
  4114  0AC6  0094               	line	19
  4115                           	
  4116                           l1814:	
  4117  0AC7                     ;I2C.c: 19:     SSPCON2 = 0;
  4118                           	bsf	status, 5	;RP0=1, select bank1
  4119  0AC7  1683               	bcf	status, 6	;RP1=0, select bank1
  4120  0AC8  1303               	clrf	(145)^080h	;volatile
  4121  0AC9  0191               	line	20
  4122                           	
  4123                           l1816:	
  4124  0ACA                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  4125                           	bcf	status, 5	;RP0=0, select bank0
  4126  0ACA  1283               	bcf	status, 6	;RP1=0, select bank0
  4127  0ACB  1303               	movf	(I2C_Master_Init@c),w
  4128  0ACC  0820               	movwf	(??_I2C_Master_Init+0)+0
  4129  0ACD  00A4               	movf	(I2C_Master_Init@c+1),w
  4130  0ACE  0821               	movwf	((??_I2C_Master_Init+0)+0+1)
  4131  0ACF  00A5               	movf	(I2C_Master_Init@c+2),w
  4132  0AD0  0822               	movwf	((??_I2C_Master_Init+0)+0+2)
  4133  0AD1  00A6               	movf	(I2C_Master_Init@c+3),w
  4134  0AD2  0823               	movwf	((??_I2C_Master_Init+0)+0+3)
  4135  0AD3  00A7               	movlw	02h
  4136  0AD4  3002               u1955:
  4137  0AD5                     	clrc
  4138  0AD5  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  4139  0AD6  0DA4               	rlf	(??_I2C_Master_Init+0)+1,f
  4140  0AD7  0DA5               	rlf	(??_I2C_Master_Init+0)+2,f
  4141  0AD8  0DA6               	rlf	(??_I2C_Master_Init+0)+3,f
  4142  0AD9  0DA7               u1950:
  4143  0ADA                     	addlw	-1
  4144  0ADA  3EFF               	skipz
  4145  0ADB  1D03               	goto	u1955
  4146  0ADC  2AD5               	movf	3+(??_I2C_Master_Init+0)+0,w
  4147  0ADD  0827               	movwf	(___lldiv@divisor+3)
  4148  0ADE  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  4149  0ADF  0826               	movwf	(___lldiv@divisor+2)
  4150  0AE0  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  4151  0AE1  0825               	movwf	(___lldiv@divisor+1)
  4152  0AE2  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  4153  0AE3  0824               	movwf	(___lldiv@divisor)
  4154  0AE4  00F0               
  4155                           	movlw	0
  4156  0AE5  3000               	movwf	(___lldiv@dividend+3)
  4157  0AE6  00F7               	movlw	03Dh
  4158  0AE7  303D               	movwf	(___lldiv@dividend+2)
  4159  0AE8  00F6               	movlw	09h
  4160  0AE9  3009               	movwf	(___lldiv@dividend+1)
  4161  0AEA  00F5               	movlw	0
  4162  0AEB  3000               	movwf	(___lldiv@dividend)
  4163  0AEC  00F4               
  4164                           	fcall	___lldiv
  4165  0AED  120A  158A  24C7  120A  158A  	movf	(0+(?___lldiv)),w
  4166  0AF2  0870               	addlw	0FFh
  4167  0AF3  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4168  0AF4  1683               	bcf	status, 6	;RP1=0, select bank1
  4169  0AF5  1303               	movwf	(147)^080h	;volatile
  4170  0AF6  0093               	line	21
  4171                           	
  4172                           l1818:	
  4173  0AF7                     ;I2C.c: 21:     SSPSTAT = 0;
  4174                           	clrf	(148)^080h	;volatile
  4175  0AF7  0194               	line	22
  4176                           	
  4177                           l1820:	
  4178  0AF8                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4179                           	bsf	(135)^080h,3	;volatile
  4180  0AF8  1587               	line	23
  4181                           	
  4182                           l1822:	
  4183  0AF9                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4184                           	bsf	(135)^080h,4	;volatile
  4185  0AF9  1607               	line	24
  4186                           	
  4187                           l29:	
  4188  0AFA                     	return
  4189  0AFA  0008               	opt stack 0
  4190                           GLOBAL	__end_of_I2C_Master_Init
  4191                           	__end_of_I2C_Master_Init:
  4192  0AFB                     	signat	_I2C_Master_Init,4217
  4193                           	global	___lldiv
  4194                           
  4195 ;; *************** function ___lldiv *****************
  4196 ;; Defined at:
  4197 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4198 ;; Parameters:    Size  Location     Type
  4199 ;;  divisor         4    0[COMMON] unsigned long 
  4200 ;;  dividend        4    4[COMMON] unsigned long 
  4201 ;; Auto vars:     Size  Location     Type
  4202 ;;  quotient        4    9[COMMON] unsigned long 
  4203 ;;  counter         1   13[COMMON] unsigned char 
  4204 ;; Return value:  Size  Location     Type
  4205 ;;                  4    0[COMMON] unsigned long 
  4206 ;; Registers used:
  4207 ;;		wreg, status,2, status,0
  4208 ;; Tracked objects:
  4209 ;;		On entry : 0/0
  4210 ;;		On exit  : 0/0
  4211 ;;		Unchanged: 0/0
  4212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4213 ;;      Params:         8       0       0       0       0
  4214 ;;      Locals:         5       0       0       0       0
  4215 ;;      Temps:          1       0       0       0       0
  4216 ;;      Totals:        14       0       0       0       0
  4217 ;;Total ram usage:       14 bytes
  4218 ;; Hardware stack levels used:    1
  4219 ;; This function calls:
  4220 ;;		Nothing
  4221 ;; This function is called by:
  4222 ;;		_I2C_Master_Init
  4223 ;; This function uses a non-reentrant model
  4224 ;;
  4225                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  4226                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4227                           	line	5
  4228                           global __ptext14
  4229                           __ptext14:	;psect for function ___lldiv
  4230  0CC7                     psect	text14
  4231                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4232                           	line	5
  4233                           	global	__size_of___lldiv
  4234                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4235  006D                     	
  4236                           ___lldiv:	
  4237  0CC7                     ;incstack = 0
  4238                           	opt	stack 5
  4239                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4240                           	line	13
  4241                           	
  4242                           l1788:	
  4243  0CC7                     	movlw	high highword(0)
  4244  0CC7  3000               	movwf	(___lldiv@quotient+3)
  4245  0CC8  00FC               	movlw	low highword(0)
  4246  0CC9  3000               	movwf	(___lldiv@quotient+2)
  4247  0CCA  00FB               	movlw	high(0)
  4248  0CCB  3000               	movwf	(___lldiv@quotient+1)
  4249  0CCC  00FA               	movlw	low(0)
  4250  0CCD  3000               	movwf	(___lldiv@quotient)
  4251  0CCE  00F9               
  4252                           	line	14
  4253                           	movf	(___lldiv@divisor+3),w
  4254  0CCF  0873               	iorwf	(___lldiv@divisor+2),w
  4255  0CD0  0472               	iorwf	(___lldiv@divisor+1),w
  4256  0CD1  0471               	iorwf	(___lldiv@divisor),w
  4257  0CD2  0470               	skipnz
  4258  0CD3  1903               	goto	u1881
  4259  0CD4  2CD6               	goto	u1880
  4260  0CD5  2CD7               u1881:
  4261  0CD6                     	goto	l1808
  4262  0CD6  2D2A               u1880:
  4263  0CD7                     	line	15
  4264                           	
  4265                           l1790:	
  4266  0CD7                     	clrf	(___lldiv@counter)
  4267  0CD7  01FD               	incf	(___lldiv@counter),f
  4268  0CD8  0AFD               	line	16
  4269                           	goto	l1794
  4270  0CD9  2CE8               	
  4271                           l346:	
  4272  0CDA                     	line	17
  4273                           	
  4274                           l1792:	
  4275  0CDA                     	movlw	01h
  4276  0CDA  3001               	movwf	(??___lldiv+0)+0
  4277  0CDB  00F8               u1895:
  4278  0CDC                     	clrc
  4279  0CDC  1003               	rlf	(___lldiv@divisor),f
  4280  0CDD  0DF0               	rlf	(___lldiv@divisor+1),f
  4281  0CDE  0DF1               	rlf	(___lldiv@divisor+2),f
  4282  0CDF  0DF2               	rlf	(___lldiv@divisor+3),f
  4283  0CE0  0DF3               	decfsz	(??___lldiv+0)+0
  4284  0CE1  0BF8               	goto	u1895
  4285  0CE2  2CDC               	line	18
  4286                           	movlw	low(01h)
  4287  0CE3  3001               	movwf	(??___lldiv+0)+0
  4288  0CE4  00F8               	movf	(??___lldiv+0)+0,w
  4289  0CE5  0878               	addwf	(___lldiv@counter),f
  4290  0CE6  07FD               	goto	l1794
  4291  0CE7  2CE8               	line	19
  4292                           	
  4293                           l345:	
  4294  0CE8                     	line	16
  4295                           	
  4296                           l1794:	
  4297  0CE8                     	btfss	(___lldiv@divisor+3),(31)&7
  4298  0CE8  1FF3               	goto	u1901
  4299  0CE9  2CEB               	goto	u1900
  4300  0CEA  2CEC               u1901:
  4301  0CEB                     	goto	l1792
  4302  0CEB  2CDA               u1900:
  4303  0CEC                     	goto	l1796
  4304  0CEC  2CEE               	
  4305                           l347:	
  4306  0CED                     	goto	l1796
  4307  0CED  2CEE               	line	20
  4308                           	
  4309                           l348:	
  4310  0CEE                     	line	21
  4311                           	
  4312                           l1796:	
  4313  0CEE                     	movlw	01h
  4314  0CEE  3001               	movwf	(??___lldiv+0)+0
  4315  0CEF  00F8               u1915:
  4316  0CF0                     	clrc
  4317  0CF0  1003               	rlf	(___lldiv@quotient),f
  4318  0CF1  0DF9               	rlf	(___lldiv@quotient+1),f
  4319  0CF2  0DFA               	rlf	(___lldiv@quotient+2),f
  4320  0CF3  0DFB               	rlf	(___lldiv@quotient+3),f
  4321  0CF4  0DFC               	decfsz	(??___lldiv+0)+0
  4322  0CF5  0BF8               	goto	u1915
  4323  0CF6  2CF0               	line	22
  4324                           	
  4325                           l1798:	
  4326  0CF7                     	movf	(___lldiv@divisor+3),w
  4327  0CF7  0873               	subwf	(___lldiv@dividend+3),w
  4328  0CF8  0277               	skipz
  4329  0CF9  1D03               	goto	u1925
  4330  0CFA  2D05               	movf	(___lldiv@divisor+2),w
  4331  0CFB  0872               	subwf	(___lldiv@dividend+2),w
  4332  0CFC  0276               	skipz
  4333  0CFD  1D03               	goto	u1925
  4334  0CFE  2D05               	movf	(___lldiv@divisor+1),w
  4335  0CFF  0871               	subwf	(___lldiv@dividend+1),w
  4336  0D00  0275               	skipz
  4337  0D01  1D03               	goto	u1925
  4338  0D02  2D05               	movf	(___lldiv@divisor),w
  4339  0D03  0870               	subwf	(___lldiv@dividend),w
  4340  0D04  0274               u1925:
  4341  0D05                     	skipc
  4342  0D05  1C03               	goto	u1921
  4343  0D06  2D08               	goto	u1920
  4344  0D07  2D09               u1921:
  4345  0D08                     	goto	l1804
  4346  0D08  2D19               u1920:
  4347  0D09                     	line	23
  4348                           	
  4349                           l1800:	
  4350  0D09                     	movf	(___lldiv@divisor),w
  4351  0D09  0870               	subwf	(___lldiv@dividend),f
  4352  0D0A  02F4               	movf	(___lldiv@divisor+1),w
  4353  0D0B  0871               	skipc
  4354  0D0C  1C03               	incfsz	(___lldiv@divisor+1),w
  4355  0D0D  0F71               	subwf	(___lldiv@dividend+1),f
  4356  0D0E  02F5               	movf	(___lldiv@divisor+2),w
  4357  0D0F  0872               	skipc
  4358  0D10  1C03               	incfsz	(___lldiv@divisor+2),w
  4359  0D11  0F72               	subwf	(___lldiv@dividend+2),f
  4360  0D12  02F6               	movf	(___lldiv@divisor+3),w
  4361  0D13  0873               	skipc
  4362  0D14  1C03               	incfsz	(___lldiv@divisor+3),w
  4363  0D15  0F73               	subwf	(___lldiv@dividend+3),f
  4364  0D16  02F7               	line	24
  4365                           	
  4366                           l1802:	
  4367  0D17                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4368  0D17  1479               	goto	l1804
  4369  0D18  2D19               	line	25
  4370                           	
  4371                           l349:	
  4372  0D19                     	line	26
  4373                           	
  4374                           l1804:	
  4375  0D19                     	movlw	01h
  4376  0D19  3001               u1935:
  4377  0D1A                     	clrc
  4378  0D1A  1003               	rrf	(___lldiv@divisor+3),f
  4379  0D1B  0CF3               	rrf	(___lldiv@divisor+2),f
  4380  0D1C  0CF2               	rrf	(___lldiv@divisor+1),f
  4381  0D1D  0CF1               	rrf	(___lldiv@divisor),f
  4382  0D1E  0CF0               	addlw	-1
  4383  0D1F  3EFF               	skipz
  4384  0D20  1D03               	goto	u1935
  4385  0D21  2D1A               
  4386                           	line	27
  4387                           	
  4388                           l1806:	
  4389  0D22                     	movlw	01h
  4390  0D22  3001               	subwf	(___lldiv@counter),f
  4391  0D23  02FD               	btfss	status,2
  4392  0D24  1D03               	goto	u1941
  4393  0D25  2D27               	goto	u1940
  4394  0D26  2D28               u1941:
  4395  0D27                     	goto	l1796
  4396  0D27  2CEE               u1940:
  4397  0D28                     	goto	l1808
  4398  0D28  2D2A               	
  4399                           l350:	
  4400  0D29                     	goto	l1808
  4401  0D29  2D2A               	line	28
  4402                           	
  4403                           l344:	
  4404  0D2A                     	line	29
  4405                           	
  4406                           l1808:	
  4407  0D2A                     	movf	(___lldiv@quotient+3),w
  4408  0D2A  087C               	movwf	(?___lldiv+3)
  4409  0D2B  00F3               	movf	(___lldiv@quotient+2),w
  4410  0D2C  087B               	movwf	(?___lldiv+2)
  4411  0D2D  00F2               	movf	(___lldiv@quotient+1),w
  4412  0D2E  087A               	movwf	(?___lldiv+1)
  4413  0D2F  00F1               	movf	(___lldiv@quotient),w
  4414  0D30  0879               	movwf	(?___lldiv)
  4415  0D31  00F0               
  4416                           	goto	l351
  4417  0D32  2D33               	
  4418                           l1810:	
  4419  0D33                     	line	30
  4420                           	
  4421                           l351:	
  4422  0D33                     	return
  4423  0D33  0008               	opt stack 0
  4424                           GLOBAL	__end_of___lldiv
  4425                           	__end_of___lldiv:
  4426  0D34                     	signat	___lldiv,8316
  4427                           	global	___xxtofl
  4428                           
  4429 ;; *************** function ___xxtofl *****************
  4430 ;; Defined at:
  4431 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4432 ;; Parameters:    Size  Location     Type
  4433 ;;  sign            1    wreg     unsigned char 
  4434 ;;  val             4    0[COMMON] long 
  4435 ;; Auto vars:     Size  Location     Type
  4436 ;;  sign            1    8[COMMON] unsigned char 
  4437 ;;  arg             4   10[COMMON] unsigned long 
  4438 ;;  exp             1    9[COMMON] unsigned char 
  4439 ;; Return value:  Size  Location     Type
  4440 ;;                  4    0[COMMON] unsigned char 
  4441 ;; Registers used:
  4442 ;;		wreg, status,2, status,0
  4443 ;; Tracked objects:
  4444 ;;		On entry : 0/0
  4445 ;;		On exit  : 0/0
  4446 ;;		Unchanged: 0/0
  4447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4448 ;;      Params:         4       0       0       0       0
  4449 ;;      Locals:         6       0       0       0       0
  4450 ;;      Temps:          4       0       0       0       0
  4451 ;;      Totals:        14       0       0       0       0
  4452 ;;Total ram usage:       14 bytes
  4453 ;; Hardware stack levels used:    1
  4454 ;; This function calls:
  4455 ;;		Nothing
  4456 ;; This function is called by:
  4457 ;;		_main
  4458 ;; This function uses a non-reentrant model
  4459 ;;
  4460                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  4461                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4462                           	line	10
  4463                           global __ptext15
  4464                           __ptext15:	;psect for function ___xxtofl
  4465  0E3E                     psect	text15
  4466                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4467                           	line	10
  4468                           	global	__size_of___xxtofl
  4469                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  4470  00C2                     	
  4471                           ___xxtofl:	
  4472  0E3E                     ;incstack = 0
  4473                           	opt	stack 7
  4474                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4475                           ;___xxtofl@sign stored from wreg
  4476                           	movwf	(___xxtofl@sign)
  4477  0E3E  00F8               	line	15
  4478                           	
  4479                           l2362:	
  4480  0E3F                     	movf	((___xxtofl@sign)),w
  4481  0E3F  0878               	btfsc	status,2
  4482  0E40  1903               	goto	u3091
  4483  0E41  2E43               	goto	u3090
  4484  0E42  2E44               u3091:
  4485  0E43                     	goto	l2368
  4486  0E43  2E58               u3090:
  4487  0E44                     	
  4488                           l2364:	
  4489  0E44                     	btfss	(___xxtofl@val+3),7
  4490  0E44  1FF3               	goto	u3101
  4491  0E45  2E47               	goto	u3100
  4492  0E46  2E48               u3101:
  4493  0E47                     	goto	l2368
  4494  0E47  2E58               u3100:
  4495  0E48                     	line	16
  4496                           	
  4497                           l2366:	
  4498  0E48                     	comf	(___xxtofl@val)+0,w
  4499  0E48  0970               	movwf	(___xxtofl@arg)
  4500  0E49  00FA               	comf	(___xxtofl@val)+1,w
  4501  0E4A  0971               	movwf	(___xxtofl@arg+1)
  4502  0E4B  00FB               	comf	(___xxtofl@val)+2,w
  4503  0E4C  0972               	movwf	(___xxtofl@arg+2)
  4504  0E4D  00FC               	comf	(___xxtofl@val)+3,w
  4505  0E4E  0973               	movwf	(___xxtofl@arg+3)
  4506  0E4F  00FD               	incf	(___xxtofl@arg),f
  4507  0E50  0AFA               	skipnz
  4508  0E51  1903               	incf	(___xxtofl@arg+1),f
  4509  0E52  0AFB               	skipnz
  4510  0E53  1903               	incf	(___xxtofl@arg+2),f
  4511  0E54  0AFC               	skipnz
  4512  0E55  1903               	incf	(___xxtofl@arg+3),f
  4513  0E56  0AFD               	line	17
  4514                           	goto	l723
  4515  0E57  2E60               	line	18
  4516                           	
  4517                           l722:	
  4518  0E58                     	line	19
  4519                           	
  4520                           l2368:	
  4521  0E58                     	movf	(___xxtofl@val+3),w
  4522  0E58  0873               	movwf	(___xxtofl@arg+3)
  4523  0E59  00FD               	movf	(___xxtofl@val+2),w
  4524  0E5A  0872               	movwf	(___xxtofl@arg+2)
  4525  0E5B  00FC               	movf	(___xxtofl@val+1),w
  4526  0E5C  0871               	movwf	(___xxtofl@arg+1)
  4527  0E5D  00FB               	movf	(___xxtofl@val),w
  4528  0E5E  0870               	movwf	(___xxtofl@arg)
  4529  0E5F  00FA               
  4530                           	line	20
  4531                           	
  4532                           l723:	
  4533  0E60                     	line	21
  4534                           	movf	(___xxtofl@val+3),w
  4535  0E60  0873               	iorwf	(___xxtofl@val+2),w
  4536  0E61  0472               	iorwf	(___xxtofl@val+1),w
  4537  0E62  0471               	iorwf	(___xxtofl@val),w
  4538  0E63  0470               	skipz
  4539  0E64  1D03               	goto	u3111
  4540  0E65  2E67               	goto	u3110
  4541  0E66  2E68               u3111:
  4542  0E67                     	goto	l2374
  4543  0E67  2E72               u3110:
  4544  0E68                     	line	22
  4545                           	
  4546                           l2370:	
  4547  0E68                     	movlw	0x0
  4548  0E68  3000               	movwf	(?___xxtofl+3)
  4549  0E69  00F3               	movlw	0x0
  4550  0E6A  3000               	movwf	(?___xxtofl+2)
  4551  0E6B  00F2               	movlw	0x0
  4552  0E6C  3000               	movwf	(?___xxtofl+1)
  4553  0E6D  00F1               	movlw	0x0
  4554  0E6E  3000               	movwf	(?___xxtofl)
  4555  0E6F  00F0               
  4556                           	goto	l725
  4557  0E70  2EFF               	
  4558                           l2372:	
  4559  0E71                     	goto	l725
  4560  0E71  2EFF               	
  4561                           l724:	
  4562  0E72                     	line	23
  4563                           	
  4564                           l2374:	
  4565  0E72                     	movlw	low(096h)
  4566  0E72  3096               	movwf	(??___xxtofl+0)+0
  4567  0E73  00F4               	movf	(??___xxtofl+0)+0,w
  4568  0E74  0874               	movwf	(___xxtofl@exp)
  4569  0E75  00F9               	line	24
  4570                           	goto	l2378
  4571  0E76  2E85               	
  4572                           l727:	
  4573  0E77                     	line	25
  4574                           	
  4575                           l2376:	
  4576  0E77                     	movlw	low(01h)
  4577  0E77  3001               	movwf	(??___xxtofl+0)+0
  4578  0E78  00F4               	movf	(??___xxtofl+0)+0,w
  4579  0E79  0874               	addwf	(___xxtofl@exp),f
  4580  0E7A  07F9               	line	26
  4581                           	movlw	01h
  4582  0E7B  3001               u3125:
  4583  0E7C                     	clrc
  4584  0E7C  1003               	rrf	(___xxtofl@arg+3),f
  4585  0E7D  0CFD               	rrf	(___xxtofl@arg+2),f
  4586  0E7E  0CFC               	rrf	(___xxtofl@arg+1),f
  4587  0E7F  0CFB               	rrf	(___xxtofl@arg),f
  4588  0E80  0CFA               	addlw	-1
  4589  0E81  3EFF               	skipz
  4590  0E82  1D03               	goto	u3125
  4591  0E83  2E7C               
  4592                           	goto	l2378
  4593  0E84  2E85               	line	27
  4594                           	
  4595                           l726:	
  4596  0E85                     	line	24
  4597                           	
  4598                           l2378:	
  4599  0E85                     	movlw	high highword(0FE000000h)
  4600  0E85  30FE               	andwf	(___xxtofl@arg+3),w
  4601  0E86  057D               	btfss	status,2
  4602  0E87  1D03               	goto	u3131
  4603  0E88  2E8A               	goto	u3130
  4604  0E89  2E8B               u3131:
  4605  0E8A                     	goto	l2376
  4606  0E8A  2E77               u3130:
  4607  0E8B                     	goto	l729
  4608  0E8B  2EA8               	
  4609                           l728:	
  4610  0E8C                     	line	28
  4611                           	goto	l729
  4612  0E8C  2EA8               	
  4613                           l730:	
  4614  0E8D                     	line	29
  4615                           	
  4616                           l2380:	
  4617  0E8D                     	movlw	low(01h)
  4618  0E8D  3001               	movwf	(??___xxtofl+0)+0
  4619  0E8E  00F4               	movf	(??___xxtofl+0)+0,w
  4620  0E8F  0874               	addwf	(___xxtofl@exp),f
  4621  0E90  07F9               	line	30
  4622                           	
  4623                           l2382:	
  4624  0E91                     	movlw	01h
  4625  0E91  3001               	addwf	(___xxtofl@arg),f
  4626  0E92  07FA               	movlw	0
  4627  0E93  3000               	skipnc
  4628  0E94  1803               movlw 1
  4629  0E95  3001               	addwf	(___xxtofl@arg+1),f
  4630  0E96  07FB               	movlw	0
  4631  0E97  3000               	skipnc
  4632  0E98  1803               movlw 1
  4633  0E99  3001               	addwf	(___xxtofl@arg+2),f
  4634  0E9A  07FC               	movlw	0
  4635  0E9B  3000               	skipnc
  4636  0E9C  1803               movlw 1
  4637  0E9D  3001               	addwf	(___xxtofl@arg+3),f
  4638  0E9E  07FD               	line	31
  4639                           	
  4640                           l2384:	
  4641  0E9F                     	movlw	01h
  4642  0E9F  3001               u3145:
  4643  0EA0                     	clrc
  4644  0EA0  1003               	rrf	(___xxtofl@arg+3),f
  4645  0EA1  0CFD               	rrf	(___xxtofl@arg+2),f
  4646  0EA2  0CFC               	rrf	(___xxtofl@arg+1),f
  4647  0EA3  0CFB               	rrf	(___xxtofl@arg),f
  4648  0EA4  0CFA               	addlw	-1
  4649  0EA5  3EFF               	skipz
  4650  0EA6  1D03               	goto	u3145
  4651  0EA7  2EA0               
  4652                           	line	32
  4653                           	
  4654                           l729:	
  4655  0EA8                     	line	28
  4656                           	movlw	high highword(0FF000000h)
  4657  0EA8  30FF               	andwf	(___xxtofl@arg+3),w
  4658  0EA9  057D               	btfss	status,2
  4659  0EAA  1D03               	goto	u3151
  4660  0EAB  2EAD               	goto	u3150
  4661  0EAC  2EAE               u3151:
  4662  0EAD                     	goto	l2380
  4663  0EAD  2E8D               u3150:
  4664  0EAE                     	goto	l2388
  4665  0EAE  2EBC               	
  4666                           l731:	
  4667  0EAF                     	line	33
  4668                           	goto	l2388
  4669  0EAF  2EBC               	
  4670                           l733:	
  4671  0EB0                     	line	34
  4672                           	
  4673                           l2386:	
  4674  0EB0                     	movlw	01h
  4675  0EB0  3001               	subwf	(___xxtofl@exp),f
  4676  0EB1  02F9               	line	35
  4677                           	movlw	01h
  4678  0EB2  3001               	movwf	(??___xxtofl+0)+0
  4679  0EB3  00F4               u3165:
  4680  0EB4                     	clrc
  4681  0EB4  1003               	rlf	(___xxtofl@arg),f
  4682  0EB5  0DFA               	rlf	(___xxtofl@arg+1),f
  4683  0EB6  0DFB               	rlf	(___xxtofl@arg+2),f
  4684  0EB7  0DFC               	rlf	(___xxtofl@arg+3),f
  4685  0EB8  0DFD               	decfsz	(??___xxtofl+0)+0
  4686  0EB9  0BF4               	goto	u3165
  4687  0EBA  2EB4               	goto	l2388
  4688  0EBB  2EBC               	line	36
  4689                           	
  4690                           l732:	
  4691  0EBC                     	line	33
  4692                           	
  4693                           l2388:	
  4694  0EBC                     	btfsc	(___xxtofl@arg+2),(23)&7
  4695  0EBC  1BFC               	goto	u3171
  4696  0EBD  2EBF               	goto	u3170
  4697  0EBE  2EC0               u3171:
  4698  0EBF                     	goto	l736
  4699  0EBF  2EC7               u3170:
  4700  0EC0                     	
  4701                           l2390:	
  4702  0EC0                     	movlw	low(02h)
  4703  0EC0  3002               	subwf	(___xxtofl@exp),w
  4704  0EC1  0279               	skipnc
  4705  0EC2  1803               	goto	u3181
  4706  0EC3  2EC5               	goto	u3180
  4707  0EC4  2EC6               u3181:
  4708  0EC5                     	goto	l2386
  4709  0EC5  2EB0               u3180:
  4710  0EC6                     	goto	l736
  4711  0EC6  2EC7               	
  4712                           l735:	
  4713  0EC7                     	
  4714                           l736:	
  4715  0EC7                     	line	37
  4716                           	btfsc	(___xxtofl@exp),(0)&7
  4717  0EC7  1879               	goto	u3191
  4718  0EC8  2ECA               	goto	u3190
  4719  0EC9  2ECB               u3191:
  4720  0ECA                     	goto	l737
  4721  0ECA  2ED3               u3190:
  4722  0ECB                     	line	38
  4723                           	
  4724                           l2392:	
  4725  0ECB                     	movlw	0FFh
  4726  0ECB  30FF               	andwf	(___xxtofl@arg),f
  4727  0ECC  05FA               	movlw	0FFh
  4728  0ECD  30FF               	andwf	(___xxtofl@arg+1),f
  4729  0ECE  05FB               	movlw	07Fh
  4730  0ECF  307F               	andwf	(___xxtofl@arg+2),f
  4731  0ED0  05FC               	movlw	0FFh
  4732  0ED1  30FF               	andwf	(___xxtofl@arg+3),f
  4733  0ED2  05FD               	
  4734                           l737:	
  4735  0ED3                     	line	39
  4736                           	clrc
  4737  0ED3  1003               	rrf	(___xxtofl@exp),f
  4738  0ED4  0CF9               
  4739                           	line	40
  4740                           	
  4741                           l2394:	
  4742  0ED5                     	movf	(___xxtofl@exp),w
  4743  0ED5  0879               	movwf	(??___xxtofl+0)+0
  4744  0ED6  00F4               	clrf	(??___xxtofl+0)+0+1
  4745  0ED7  01F5               	clrf	(??___xxtofl+0)+0+2
  4746  0ED8  01F6               	clrf	(??___xxtofl+0)+0+3
  4747  0ED9  01F7               	movlw	018h
  4748  0EDA  3018               u3205:
  4749  0EDB                     	clrc
  4750  0EDB  1003               	rlf	(??___xxtofl+0)+0,f
  4751  0EDC  0DF4               	rlf	(??___xxtofl+0)+1,f
  4752  0EDD  0DF5               	rlf	(??___xxtofl+0)+2,f
  4753  0EDE  0DF6               	rlf	(??___xxtofl+0)+3,f
  4754  0EDF  0DF7               u3200:
  4755  0EE0                     	addlw	-1
  4756  0EE0  3EFF               	skipz
  4757  0EE1  1D03               	goto	u3205
  4758  0EE2  2EDB               	movf	0+(??___xxtofl+0)+0,w
  4759  0EE3  0874               	iorwf	(___xxtofl@arg),f
  4760  0EE4  04FA               	movf	1+(??___xxtofl+0)+0,w
  4761  0EE5  0875               	iorwf	(___xxtofl@arg+1),f
  4762  0EE6  04FB               	movf	2+(??___xxtofl+0)+0,w
  4763  0EE7  0876               	iorwf	(___xxtofl@arg+2),f
  4764  0EE8  04FC               	movf	3+(??___xxtofl+0)+0,w
  4765  0EE9  0877               	iorwf	(___xxtofl@arg+3),f
  4766  0EEA  04FD               	line	41
  4767                           	
  4768                           l2396:	
  4769  0EEB                     	movf	((___xxtofl@sign)),w
  4770  0EEB  0878               	btfsc	status,2
  4771  0EEC  1903               	goto	u3211
  4772  0EED  2EEF               	goto	u3210
  4773  0EEE  2EF0               u3211:
  4774  0EEF                     	goto	l2402
  4775  0EEF  2EF6               u3210:
  4776  0EF0                     	
  4777                           l2398:	
  4778  0EF0                     	btfss	(___xxtofl@val+3),7
  4779  0EF0  1FF3               	goto	u3221
  4780  0EF1  2EF3               	goto	u3220
  4781  0EF2  2EF4               u3221:
  4782  0EF3                     	goto	l2402
  4783  0EF3  2EF6               u3220:
  4784  0EF4                     	line	42
  4785                           	
  4786                           l2400:	
  4787  0EF4                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  4788  0EF4  17FD               	goto	l2402
  4789  0EF5  2EF6               	
  4790                           l738:	
  4791  0EF6                     	line	43
  4792                           	
  4793                           l2402:	
  4794  0EF6                     	movf	(___xxtofl@arg+3),w
  4795  0EF6  087D               	movwf	(?___xxtofl+3)
  4796  0EF7  00F3               	movf	(___xxtofl@arg+2),w
  4797  0EF8  087C               	movwf	(?___xxtofl+2)
  4798  0EF9  00F2               	movf	(___xxtofl@arg+1),w
  4799  0EFA  087B               	movwf	(?___xxtofl+1)
  4800  0EFB  00F1               	movf	(___xxtofl@arg),w
  4801  0EFC  087A               	movwf	(?___xxtofl)
  4802  0EFD  00F0               
  4803                           	goto	l725
  4804  0EFE  2EFF               	
  4805                           l2404:	
  4806  0EFF                     	line	44
  4807                           	
  4808                           l725:	
  4809  0EFF                     	return
  4810  0EFF  0008               	opt stack 0
  4811                           GLOBAL	__end_of___xxtofl
  4812                           	__end_of___xxtofl:
  4813  0F00                     	signat	___xxtofl,8316
  4814                           	global	___fltol
  4815                           
  4816 ;; *************** function ___fltol *****************
  4817 ;; Defined at:
  4818 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4819 ;; Parameters:    Size  Location     Type
  4820 ;;  f1              4    0[COMMON] unsigned char 
  4821 ;; Auto vars:     Size  Location     Type
  4822 ;;  exp1            1   10[COMMON] unsigned char 
  4823 ;;  sign1           1    9[COMMON] unsigned char 
  4824 ;; Return value:  Size  Location     Type
  4825 ;;                  4    0[COMMON] long 
  4826 ;; Registers used:
  4827 ;;		wreg, status,2, status,0
  4828 ;; Tracked objects:
  4829 ;;		On entry : 0/0
  4830 ;;		On exit  : 0/0
  4831 ;;		Unchanged: 0/0
  4832 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4833 ;;      Params:         4       0       0       0       0
  4834 ;;      Locals:         2       0       0       0       0
  4835 ;;      Temps:          5       0       0       0       0
  4836 ;;      Totals:        11       0       0       0       0
  4837 ;;Total ram usage:       11 bytes
  4838 ;; Hardware stack levels used:    1
  4839 ;; This function calls:
  4840 ;;		Nothing
  4841 ;; This function is called by:
  4842 ;;		_main
  4843 ;; This function uses a non-reentrant model
  4844 ;;
  4845                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  4846                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4847                           	line	43
  4848                           global __ptext16
  4849                           __ptext16:	;psect for function ___fltol
  4850  0DA4                     psect	text16
  4851                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4852                           	line	43
  4853                           	global	__size_of___fltol
  4854                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  4855  009A                     	
  4856                           ___fltol:	
  4857  0DA4                     ;incstack = 0
  4858                           	opt	stack 7
  4859                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4860                           	line	47
  4861                           	
  4862                           l1992:	
  4863  0DA4                     	movf	(___fltol@f1),w
  4864  0DA4  0870               	movwf	(??___fltol+0)+0
  4865  0DA5  00F4               	movf	(___fltol@f1+1),w
  4866  0DA6  0871               	movwf	((??___fltol+0)+0+1)
  4867  0DA7  00F5               	movf	(___fltol@f1+2),w
  4868  0DA8  0872               	movwf	((??___fltol+0)+0+2)
  4869  0DA9  00F6               	movf	(___fltol@f1+3),w
  4870  0DAA  0873               	movwf	((??___fltol+0)+0+3)
  4871  0DAB  00F7               	clrc
  4872  0DAC  1003               	rlf	(??___fltol+0)+2,w
  4873  0DAD  0D76               	rlf	(??___fltol+0)+3,w
  4874  0DAE  0D77               	movwf	(??___fltol+4)+0
  4875  0DAF  00F8               	movf	(??___fltol+4)+0,w
  4876  0DB0  0878               	movwf	(___fltol@exp1)
  4877  0DB1  00FA               	movf	(((___fltol@exp1))),w
  4878  0DB2  087A               	btfss	status,2
  4879  0DB3  1D03               	goto	u2161
  4880  0DB4  2DB6               	goto	u2160
  4881  0DB5  2DB7               u2161:
  4882  0DB6                     	goto	l1998
  4883  0DB6  2DC1               u2160:
  4884  0DB7                     	line	48
  4885                           	
  4886                           l1994:	
  4887  0DB7                     	movlw	high highword(0)
  4888  0DB7  3000               	movwf	(?___fltol+3)
  4889  0DB8  00F3               	movlw	low highword(0)
  4890  0DB9  3000               	movwf	(?___fltol+2)
  4891  0DBA  00F2               	movlw	high(0)
  4892  0DBB  3000               	movwf	(?___fltol+1)
  4893  0DBC  00F1               	movlw	low(0)
  4894  0DBD  3000               	movwf	(?___fltol)
  4895  0DBE  00F0               
  4896                           	goto	l501
  4897  0DBF  2E3D               	
  4898                           l1996:	
  4899  0DC0                     	goto	l501
  4900  0DC0  2E3D               	
  4901                           l500:	
  4902  0DC1                     	line	49
  4903                           	
  4904                           l1998:	
  4905  0DC1                     	movf	(___fltol@f1),w
  4906  0DC1  0870               	movwf	(??___fltol+0)+0
  4907  0DC2  00F4               	movf	(___fltol@f1+1),w
  4908  0DC3  0871               	movwf	((??___fltol+0)+0+1)
  4909  0DC4  00F5               	movf	(___fltol@f1+2),w
  4910  0DC5  0872               	movwf	((??___fltol+0)+0+2)
  4911  0DC6  00F6               	movf	(___fltol@f1+3),w
  4912  0DC7  0873               	movwf	((??___fltol+0)+0+3)
  4913  0DC8  00F7               	movlw	01Fh
  4914  0DC9  301F               u2175:
  4915  0DCA                     	clrc
  4916  0DCA  1003               	rrf	(??___fltol+0)+3,f
  4917  0DCB  0CF7               	rrf	(??___fltol+0)+2,f
  4918  0DCC  0CF6               	rrf	(??___fltol+0)+1,f
  4919  0DCD  0CF5               	rrf	(??___fltol+0)+0,f
  4920  0DCE  0CF4               u2170:
  4921  0DCF                     	addlw	-1
  4922  0DCF  3EFF               	skipz
  4923  0DD0  1D03               	goto	u2175
  4924  0DD1  2DCA               	movf	0+(??___fltol+0)+0,w
  4925  0DD2  0874               	movwf	(??___fltol+4)+0
  4926  0DD3  00F8               	movf	(??___fltol+4)+0,w
  4927  0DD4  0878               	movwf	(___fltol@sign1)
  4928  0DD5  00F9               	line	50
  4929                           	
  4930                           l2000:	
  4931  0DD6                     	bsf	(___fltol@f1)+(23/8),(23)&7
  4932  0DD6  17F2               	line	51
  4933                           	
  4934                           l2002:	
  4935  0DD7                     	movlw	0FFh
  4936  0DD7  30FF               	andwf	(___fltol@f1),f
  4937  0DD8  05F0               	movlw	0FFh
  4938  0DD9  30FF               	andwf	(___fltol@f1+1),f
  4939  0DDA  05F1               	movlw	0FFh
  4940  0DDB  30FF               	andwf	(___fltol@f1+2),f
  4941  0DDC  05F2               	movlw	0
  4942  0DDD  3000               	andwf	(___fltol@f1+3),f
  4943  0DDE  05F3               	line	52
  4944                           	
  4945                           l2004:	
  4946  0DDF                     	movlw	096h
  4947  0DDF  3096               	subwf	(___fltol@exp1),f
  4948  0DE0  02FA               	line	53
  4949                           	
  4950                           l2006:	
  4951  0DE1                     	btfss	(___fltol@exp1),7
  4952  0DE1  1FFA               	goto	u2181
  4953  0DE2  2DE4               	goto	u2180
  4954  0DE3  2DE5               u2181:
  4955  0DE4                     	goto	l2016
  4956  0DE4  2E0A               u2180:
  4957  0DE5                     	line	54
  4958                           	
  4959                           l2008:	
  4960  0DE5                     	movf	(___fltol@exp1),w
  4961  0DE5  087A               	xorlw	80h
  4962  0DE6  3A80               	addlw	-((-23)^80h)
  4963  0DE7  3E97               	skipnc
  4964  0DE8  1803               	goto	u2191
  4965  0DE9  2DEB               	goto	u2190
  4966  0DEA  2DEC               u2191:
  4967  0DEB                     	goto	l2014
  4968  0DEB  2DF7               u2190:
  4969  0DEC                     	line	55
  4970                           	
  4971                           l2010:	
  4972  0DEC                     	movlw	high highword(0)
  4973  0DEC  3000               	movwf	(?___fltol+3)
  4974  0DED  00F3               	movlw	low highword(0)
  4975  0DEE  3000               	movwf	(?___fltol+2)
  4976  0DEF  00F2               	movlw	high(0)
  4977  0DF0  3000               	movwf	(?___fltol+1)
  4978  0DF1  00F1               	movlw	low(0)
  4979  0DF2  3000               	movwf	(?___fltol)
  4980  0DF3  00F0               
  4981                           	goto	l501
  4982  0DF4  2E3D               	
  4983                           l2012:	
  4984  0DF5                     	goto	l501
  4985  0DF5  2E3D               	
  4986                           l503:	
  4987  0DF6                     	goto	l2014
  4988  0DF6  2DF7               	line	56
  4989                           	
  4990                           l504:	
  4991  0DF7                     	line	57
  4992                           	
  4993                           l2014:	
  4994  0DF7                     	movlw	01h
  4995  0DF7  3001               u2205:
  4996  0DF8                     	clrc
  4997  0DF8  1003               	rrf	(___fltol@f1+3),f
  4998  0DF9  0CF3               	rrf	(___fltol@f1+2),f
  4999  0DFA  0CF2               	rrf	(___fltol@f1+1),f
  5000  0DFB  0CF1               	rrf	(___fltol@f1),f
  5001  0DFC  0CF0               	addlw	-1
  5002  0DFD  3EFF               	skipz
  5003  0DFE  1D03               	goto	u2205
  5004  0DFF  2DF8               
  5005                           	line	58
  5006                           	movlw	low(01h)
  5007  0E00  3001               	movwf	(??___fltol+0)+0
  5008  0E01  00F4               	movf	(??___fltol+0)+0,w
  5009  0E02  0874               	addwf	(___fltol@exp1),f
  5010  0E03  07FA               	btfss	status,2
  5011  0E04  1D03               	goto	u2211
  5012  0E05  2E07               	goto	u2210
  5013  0E06  2E08               u2211:
  5014  0E07                     	goto	l2014
  5015  0E07  2DF7               u2210:
  5016  0E08                     	goto	l2024
  5017  0E08  2E2D               	
  5018                           l505:	
  5019  0E09                     	line	59
  5020                           	goto	l2024
  5021  0E09  2E2D               	
  5022                           l502:	
  5023  0E0A                     	line	60
  5024                           	
  5025                           l2016:	
  5026  0E0A                     	movlw	low(020h)
  5027  0E0A  3020               	subwf	(___fltol@exp1),w
  5028  0E0B  027A               	skipc
  5029  0E0C  1C03               	goto	u2221
  5030  0E0D  2E0F               	goto	u2220
  5031  0E0E  2E10               u2221:
  5032  0E0F                     	goto	l508
  5033  0E0F  2E26               u2220:
  5034  0E10                     	line	61
  5035                           	
  5036                           l2018:	
  5037  0E10                     	movlw	high highword(0)
  5038  0E10  3000               	movwf	(?___fltol+3)
  5039  0E11  00F3               	movlw	low highword(0)
  5040  0E12  3000               	movwf	(?___fltol+2)
  5041  0E13  00F2               	movlw	high(0)
  5042  0E14  3000               	movwf	(?___fltol+1)
  5043  0E15  00F1               	movlw	low(0)
  5044  0E16  3000               	movwf	(?___fltol)
  5045  0E17  00F0               
  5046                           	goto	l501
  5047  0E18  2E3D               	
  5048                           l2020:	
  5049  0E19                     	goto	l501
  5050  0E19  2E3D               	
  5051                           l507:	
  5052  0E1A                     	line	62
  5053                           	goto	l508
  5054  0E1A  2E26               	
  5055                           l509:	
  5056  0E1B                     	line	63
  5057                           	
  5058                           l2022:	
  5059  0E1B                     	movlw	01h
  5060  0E1B  3001               	movwf	(??___fltol+0)+0
  5061  0E1C  00F4               u2235:
  5062  0E1D                     	clrc
  5063  0E1D  1003               	rlf	(___fltol@f1),f
  5064  0E1E  0DF0               	rlf	(___fltol@f1+1),f
  5065  0E1F  0DF1               	rlf	(___fltol@f1+2),f
  5066  0E20  0DF2               	rlf	(___fltol@f1+3),f
  5067  0E21  0DF3               	decfsz	(??___fltol+0)+0
  5068  0E22  0BF4               	goto	u2235
  5069  0E23  2E1D               	line	64
  5070                           	movlw	01h
  5071  0E24  3001               	subwf	(___fltol@exp1),f
  5072  0E25  02FA               	line	65
  5073                           	
  5074                           l508:	
  5075  0E26                     	line	62
  5076                           	movf	((___fltol@exp1)),w
  5077  0E26  087A               	btfss	status,2
  5078  0E27  1D03               	goto	u2241
  5079  0E28  2E2A               	goto	u2240
  5080  0E29  2E2B               u2241:
  5081  0E2A                     	goto	l2022
  5082  0E2A  2E1B               u2240:
  5083  0E2B                     	goto	l2024
  5084  0E2B  2E2D               	
  5085                           l510:	
  5086  0E2C                     	goto	l2024
  5087  0E2C  2E2D               	line	66
  5088                           	
  5089                           l506:	
  5090  0E2D                     	line	67
  5091                           	
  5092                           l2024:	
  5093  0E2D                     	movf	((___fltol@sign1)),w
  5094  0E2D  0879               	btfsc	status,2
  5095  0E2E  1903               	goto	u2251
  5096  0E2F  2E31               	goto	u2250
  5097  0E30  2E32               u2251:
  5098  0E31                     	goto	l511
  5099  0E31  2E3D               u2250:
  5100  0E32                     	line	68
  5101                           	
  5102                           l2026:	
  5103  0E32                     	comf	(___fltol@f1),f
  5104  0E32  09F0               	comf	(___fltol@f1+1),f
  5105  0E33  09F1               	comf	(___fltol@f1+2),f
  5106  0E34  09F2               	comf	(___fltol@f1+3),f
  5107  0E35  09F3               	incf	(___fltol@f1),f
  5108  0E36  0AF0               	skipnz
  5109  0E37  1903               	incf	(___fltol@f1+1),f
  5110  0E38  0AF1               	skipnz
  5111  0E39  1903               	incf	(___fltol@f1+2),f
  5112  0E3A  0AF2               	skipnz
  5113  0E3B  1903               	incf	(___fltol@f1+3),f
  5114  0E3C  0AF3               	
  5115                           l511:	
  5116  0E3D                     	line	69
  5117                           	line	70
  5118                           	
  5119                           l501:	
  5120  0E3D                     	return
  5121  0E3D  0008               	opt stack 0
  5122                           GLOBAL	__end_of___fltol
  5123                           	__end_of___fltol:
  5124  0E3E                     	signat	___fltol,4220
  5125                           	global	___flneg
  5126                           
  5127 ;; *************** function ___flneg *****************
  5128 ;; Defined at:
  5129 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;  f1              4    0[BANK0 ] long 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  4    0[BANK0 ] long 
  5136 ;; Registers used:
  5137 ;;		wreg
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5143 ;;      Params:         0       4       0       0       0
  5144 ;;      Locals:         0       0       0       0       0
  5145 ;;      Temps:          0       0       0       0       0
  5146 ;;      Totals:         0       4       0       0       0
  5147 ;;Total ram usage:        4 bytes
  5148 ;; Hardware stack levels used:    1
  5149 ;; This function calls:
  5150 ;;		Nothing
  5151 ;; This function is called by:
  5152 ;;		_main
  5153 ;; This function uses a non-reentrant model
  5154 ;;
  5155                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5156                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5157                           	line	15
  5158                           global __ptext17
  5159                           __ptext17:	;psect for function ___flneg
  5160  0A1B                     psect	text17
  5161                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5162                           	line	15
  5163                           	global	__size_of___flneg
  5164                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  5165  000F                     	
  5166                           ___flneg:	
  5167  0A1B                     ;incstack = 0
  5168                           	opt	stack 7
  5169                           ; Regs used in ___flneg: [wreg]
  5170                           	line	17
  5171                           	
  5172                           l1984:	
  5173  0A1B                     	bcf	status, 5	;RP0=0, select bank0
  5174  0A1B  1283               	bcf	status, 6	;RP1=0, select bank0
  5175  0A1C  1303               	movf	(___flneg@f1+3),w
  5176  0A1D  0823               	iorwf	(___flneg@f1+2),w
  5177  0A1E  0422               	iorwf	(___flneg@f1+1),w
  5178  0A1F  0421               	iorwf	(___flneg@f1),w
  5179  0A20  0420               	skipnz
  5180  0A21  1903               	goto	u2151
  5181  0A22  2A24               	goto	u2150
  5182  0A23  2A25               u2151:
  5183  0A24                     	goto	l1988
  5184  0A24  2A28               u2150:
  5185  0A25                     	line	18
  5186                           	
  5187                           l1986:	
  5188  0A25                     	movlw	080h
  5189  0A25  3080               	xorwf	(___flneg@f1+3),f
  5190  0A26  06A3               	goto	l1988
  5191  0A27  2A28               	
  5192                           l496:	
  5193  0A28                     	line	19
  5194                           	
  5195                           l1988:	
  5196  0A28                     	goto	l497
  5197  0A28  2A29               	
  5198                           l1990:	
  5199  0A29                     	line	20
  5200                           	
  5201                           l497:	
  5202  0A29                     	return
  5203  0A29  0008               	opt stack 0
  5204                           GLOBAL	__end_of___flneg
  5205                           	__end_of___flneg:
  5206  0A2A                     	signat	___flneg,4220
  5207                           	global	___flmul
  5208                           
  5209 ;; *************** function ___flmul *****************
  5210 ;; Defined at:
  5211 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5212 ;; Parameters:    Size  Location     Type
  5213 ;;  b               4   28[BANK0 ] long 
  5214 ;;  a               4   32[BANK0 ] long 
  5215 ;; Auto vars:     Size  Location     Type
  5216 ;;  prod            4   48[BANK0 ] struct .
  5217 ;;  grs             4   42[BANK0 ] unsigned long 
  5218 ;;  temp            2   52[BANK0 ] struct .
  5219 ;;  bexp            1   47[BANK0 ] unsigned char 
  5220 ;;  aexp            1   46[BANK0 ] unsigned char 
  5221 ;;  sign            1   41[BANK0 ] unsigned char 
  5222 ;; Return value:  Size  Location     Type
  5223 ;;                  4   28[BANK0 ] unsigned char 
  5224 ;; Registers used:
  5225 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5226 ;; Tracked objects:
  5227 ;;		On entry : 0/0
  5228 ;;		On exit  : 0/0
  5229 ;;		Unchanged: 0/0
  5230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5231 ;;      Params:         0       8       0       0       0
  5232 ;;      Locals:         0      13       0       0       0
  5233 ;;      Temps:          0       5       0       0       0
  5234 ;;      Totals:         0      26       0       0       0
  5235 ;;Total ram usage:       26 bytes
  5236 ;; Hardware stack levels used:    1
  5237 ;; Hardware stack levels required when called:    1
  5238 ;; This function calls:
  5239 ;;		__Umul8_16
  5240 ;; This function is called by:
  5241 ;;		_main
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5245                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5246                           	line	8
  5247                           global __ptext18
  5248                           __ptext18:	;psect for function ___flmul
  5249  0476                     psect	text18
  5250                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5251                           	line	8
  5252                           	global	__size_of___flmul
  5253                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  5254  0375                     	
  5255                           ___flmul:	
  5256  0476                     ;incstack = 0
  5257                           	opt	stack 6
  5258                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5259                           	line	17
  5260                           	
  5261                           l2222:	
  5262  0476                     	bcf	status, 5	;RP0=0, select bank0
  5263  0476  1283               	bcf	status, 6	;RP1=0, select bank0
  5264  0477  1303               	movf	0+(___flmul@b)+03h,w
  5265  0478  083F               	andlw	080h
  5266  0479  3980               	movwf	(??___flmul+0)+0
  5267  047A  00C4               	movf	(??___flmul+0)+0,w
  5268  047B  0844               	movwf	(___flmul@sign)
  5269  047C  00C9               	line	18
  5270                           	
  5271                           l2224:	
  5272  047D                     	movf	0+(___flmul@b)+03h,w
  5273  047D  083F               	movwf	(??___flmul+0)+0
  5274  047E  00C4               	addwf	(??___flmul+0)+0,w
  5275  047F  0744               	movwf	(??___flmul+1)+0
  5276  0480  00C5               	movf	(??___flmul+1)+0,w
  5277  0481  0845               	movwf	(___flmul@bexp)
  5278  0482  00CF               	line	19
  5279                           	
  5280                           l2226:	
  5281  0483                     	btfss	0+(___flmul@b)+02h,(7)&7
  5282  0483  1FBE               	goto	u2721
  5283  0484  2C86               	goto	u2720
  5284  0485  2C87               u2721:
  5285  0486                     	goto	l2230
  5286  0486  2C89               u2720:
  5287  0487                     	line	20
  5288                           	
  5289                           l2228:	
  5290  0487                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  5291  0487  144F               	goto	l2230
  5292  0488  2C89               	line	21
  5293                           	
  5294                           l693:	
  5295  0489                     	line	24
  5296                           	
  5297                           l2230:	
  5298  0489                     	movf	((___flmul@bexp)),w
  5299  0489  084F               	btfsc	status,2
  5300  048A  1903               	goto	u2731
  5301  048B  2C8D               	goto	u2730
  5302  048C  2C8E               u2731:
  5303  048D                     	goto	l2238
  5304  048D  2C9E               u2730:
  5305  048E                     	line	26
  5306                           	
  5307                           l2232:	
  5308  048E                     		incf	((___flmul@bexp)),w
  5309  048E  0A4F               	btfss	status,2
  5310  048F  1D03               	goto	u2741
  5311  0490  2C92               	goto	u2740
  5312  0491  2C93               u2741:
  5313  0492                     	goto	l2236
  5314  0492  2C9C               u2740:
  5315  0493                     	line	28
  5316                           	
  5317                           l2234:	
  5318  0493                     	movlw	0x0
  5319  0493  3000               	movwf	(___flmul@b+3)
  5320  0494  00BF               	movlw	0x0
  5321  0495  3000               	movwf	(___flmul@b+2)
  5322  0496  00BE               	movlw	0x0
  5323  0497  3000               	movwf	(___flmul@b+1)
  5324  0498  00BD               	movlw	0x0
  5325  0499  3000               	movwf	(___flmul@b)
  5326  049A  00BC               
  5327                           	goto	l2236
  5328  049B  2C9C               	line	29
  5329                           	
  5330                           l695:	
  5331  049C                     	line	31
  5332                           	
  5333                           l2236:	
  5334  049C                     	bsf	(___flmul@b)+(23/8),(23)&7
  5335  049C  17BE               	line	33
  5336                           	goto	l2240
  5337  049D  2CA7               	line	34
  5338                           	
  5339                           l694:	
  5340  049E                     	line	36
  5341                           	
  5342                           l2238:	
  5343  049E                     	movlw	0x0
  5344  049E  3000               	movwf	(___flmul@b+3)
  5345  049F  00BF               	movlw	0x0
  5346  04A0  3000               	movwf	(___flmul@b+2)
  5347  04A1  00BE               	movlw	0x0
  5348  04A2  3000               	movwf	(___flmul@b+1)
  5349  04A3  00BD               	movlw	0x0
  5350  04A4  3000               	movwf	(___flmul@b)
  5351  04A5  00BC               
  5352                           	goto	l2240
  5353  04A6  2CA7               	line	37
  5354                           	
  5355                           l696:	
  5356  04A7                     	line	39
  5357                           	
  5358                           l2240:	
  5359  04A7                     	movf	0+(___flmul@a)+03h,w
  5360  04A7  0843               	andlw	080h
  5361  04A8  3980               	movwf	(??___flmul+0)+0
  5362  04A9  00C4               	movf	(??___flmul+0)+0,w
  5363  04AA  0844               	xorwf	(___flmul@sign),f
  5364  04AB  06C9               	line	40
  5365                           	
  5366                           l2242:	
  5367  04AC                     	movf	0+(___flmul@a)+03h,w
  5368  04AC  0843               	movwf	(??___flmul+0)+0
  5369  04AD  00C4               	addwf	(??___flmul+0)+0,w
  5370  04AE  0744               	movwf	(??___flmul+1)+0
  5371  04AF  00C5               	movf	(??___flmul+1)+0,w
  5372  04B0  0845               	movwf	(___flmul@aexp)
  5373  04B1  00CE               	line	41
  5374                           	
  5375                           l2244:	
  5376  04B2                     	btfss	0+(___flmul@a)+02h,(7)&7
  5377  04B2  1FC2               	goto	u2751
  5378  04B3  2CB5               	goto	u2750
  5379  04B4  2CB6               u2751:
  5380  04B5                     	goto	l2248
  5381  04B5  2CB8               u2750:
  5382  04B6                     	line	42
  5383                           	
  5384                           l2246:	
  5385  04B6                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  5386  04B6  144E               	goto	l2248
  5387  04B7  2CB8               	line	43
  5388                           	
  5389                           l697:	
  5390  04B8                     	line	45
  5391                           	
  5392                           l2248:	
  5393  04B8                     	movf	((___flmul@aexp)),w
  5394  04B8  084E               	btfsc	status,2
  5395  04B9  1903               	goto	u2761
  5396  04BA  2CBC               	goto	u2760
  5397  04BB  2CBD               u2761:
  5398  04BC                     	goto	l2256
  5399  04BC  2CCD               u2760:
  5400  04BD                     	line	48
  5401                           	
  5402                           l2250:	
  5403  04BD                     		incf	((___flmul@aexp)),w
  5404  04BD  0A4E               	btfss	status,2
  5405  04BE  1D03               	goto	u2771
  5406  04BF  2CC1               	goto	u2770
  5407  04C0  2CC2               u2771:
  5408  04C1                     	goto	l2254
  5409  04C1  2CCB               u2770:
  5410  04C2                     	line	50
  5411                           	
  5412                           l2252:	
  5413  04C2                     	movlw	0x0
  5414  04C2  3000               	movwf	(___flmul@a+3)
  5415  04C3  00C3               	movlw	0x0
  5416  04C4  3000               	movwf	(___flmul@a+2)
  5417  04C5  00C2               	movlw	0x0
  5418  04C6  3000               	movwf	(___flmul@a+1)
  5419  04C7  00C1               	movlw	0x0
  5420  04C8  3000               	movwf	(___flmul@a)
  5421  04C9  00C0               
  5422                           	goto	l2254
  5423  04CA  2CCB               	line	51
  5424                           	
  5425                           l699:	
  5426  04CB                     	line	53
  5427                           	
  5428                           l2254:	
  5429  04CB                     	bsf	(___flmul@a)+(23/8),(23)&7
  5430  04CB  17C2               	line	54
  5431                           	goto	l2258
  5432  04CC  2CD6               	line	55
  5433                           	
  5434                           l698:	
  5435  04CD                     	line	57
  5436                           	
  5437                           l2256:	
  5438  04CD                     	movlw	0x0
  5439  04CD  3000               	movwf	(___flmul@a+3)
  5440  04CE  00C3               	movlw	0x0
  5441  04CF  3000               	movwf	(___flmul@a+2)
  5442  04D0  00C2               	movlw	0x0
  5443  04D1  3000               	movwf	(___flmul@a+1)
  5444  04D2  00C1               	movlw	0x0
  5445  04D3  3000               	movwf	(___flmul@a)
  5446  04D4  00C0               
  5447                           	goto	l2258
  5448  04D5  2CD6               	line	58
  5449                           	
  5450                           l700:	
  5451  04D6                     	line	65
  5452                           	
  5453                           l2258:	
  5454  04D6                     	movf	((___flmul@aexp)),w
  5455  04D6  084E               	btfsc	status,2
  5456  04D7  1903               	goto	u2781
  5457  04D8  2CDA               	goto	u2780
  5458  04D9  2CDB               u2781:
  5459  04DA                     	goto	l2262
  5460  04DA  2CE1               u2780:
  5461  04DB                     	
  5462                           l2260:	
  5463  04DB                     	movf	((___flmul@bexp)),w
  5464  04DB  084F               	btfss	status,2
  5465  04DC  1D03               	goto	u2791
  5466  04DD  2CDF               	goto	u2790
  5467  04DE  2CE0               u2791:
  5468  04DF                     	goto	l2266
  5469  04DF  2CEB               u2790:
  5470  04E0                     	goto	l2262
  5471  04E0  2CE1               	
  5472                           l703:	
  5473  04E1                     	line	66
  5474                           	
  5475                           l2262:	
  5476  04E1                     	movlw	0x0
  5477  04E1  3000               	movwf	(?___flmul+3)
  5478  04E2  00BF               	movlw	0x0
  5479  04E3  3000               	movwf	(?___flmul+2)
  5480  04E4  00BE               	movlw	0x0
  5481  04E5  3000               	movwf	(?___flmul+1)
  5482  04E6  00BD               	movlw	0x0
  5483  04E7  3000               	movwf	(?___flmul)
  5484  04E8  00BC               
  5485                           	goto	l704
  5486  04E9  2FEA               	
  5487                           l2264:	
  5488  04EA                     	goto	l704
  5489  04EA  2FEA               	line	67
  5490                           	
  5491                           l701:	
  5492  04EB                     	line	119
  5493                           	
  5494                           l2266:	
  5495  04EB                     	movf	(___flmul@b),w
  5496  04EB  083C               	movwf	(??___flmul+0)+0
  5497  04EC  00C4               	movf	(??___flmul+0)+0,w
  5498  04ED  0844               	movwf	(__Umul8_16@multiplicand)
  5499  04EE  00F0               	movf	0+(___flmul@a)+02h,w
  5500  04EF  0842               	fcall	__Umul8_16
  5501  04F0  120A  158A  226A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5502  04F5  0871               	bcf	status, 5	;RP0=0, select bank0
  5503  04F6  1283               	bcf	status, 6	;RP1=0, select bank0
  5504  04F7  1303               	movwf	(___flmul@temp+1)
  5505  04F8  00D5               	movf	(0+(?__Umul8_16)),w
  5506  04F9  0870               	movwf	(___flmul@temp)
  5507  04FA  00D4               	line	120
  5508                           	
  5509                           l2268:	
  5510  04FB                     	movf	(___flmul@temp),w
  5511  04FB  0854               	movwf	(??___flmul+0)+0
  5512  04FC  00C4               	clrf	(??___flmul+0)+0+1
  5513  04FD  01C5               	clrf	(??___flmul+0)+0+2
  5514  04FE  01C6               	clrf	(??___flmul+0)+0+3
  5515  04FF  01C7               	movf	3+(??___flmul+0)+0,w
  5516  0500  0847               	movwf	(___flmul@grs+3)
  5517  0501  00CD               	movf	2+(??___flmul+0)+0,w
  5518  0502  0846               	movwf	(___flmul@grs+2)
  5519  0503  00CC               	movf	1+(??___flmul+0)+0,w
  5520  0504  0845               	movwf	(___flmul@grs+1)
  5521  0505  00CB               	movf	0+(??___flmul+0)+0,w
  5522  0506  0844               	movwf	(___flmul@grs)
  5523  0507  00CA               
  5524                           	line	121
  5525                           	
  5526                           l2270:	
  5527  0508                     	movf	0+(___flmul@temp)+01h,w
  5528  0508  0855               	movwf	(??___flmul+0)+0
  5529  0509  00C4               	clrf	(??___flmul+0)+0+1
  5530  050A  01C5               	clrf	(??___flmul+0)+0+2
  5531  050B  01C6               	clrf	(??___flmul+0)+0+3
  5532  050C  01C7               	movf	3+(??___flmul+0)+0,w
  5533  050D  0847               	movwf	(___flmul@prod+3)
  5534  050E  00D3               	movf	2+(??___flmul+0)+0,w
  5535  050F  0846               	movwf	(___flmul@prod+2)
  5536  0510  00D2               	movf	1+(??___flmul+0)+0,w
  5537  0511  0845               	movwf	(___flmul@prod+1)
  5538  0512  00D1               	movf	0+(??___flmul+0)+0,w
  5539  0513  0844               	movwf	(___flmul@prod)
  5540  0514  00D0               
  5541                           	line	122
  5542                           	movf	0+(___flmul@b)+01h,w
  5543  0515  083D               	movwf	(??___flmul+0)+0
  5544  0516  00C4               	movf	(??___flmul+0)+0,w
  5545  0517  0844               	movwf	(__Umul8_16@multiplicand)
  5546  0518  00F0               	movf	0+(___flmul@a)+01h,w
  5547  0519  0841               	fcall	__Umul8_16
  5548  051A  120A  158A  226A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5549  051F  0871               	bcf	status, 5	;RP0=0, select bank0
  5550  0520  1283               	bcf	status, 6	;RP1=0, select bank0
  5551  0521  1303               	movwf	(___flmul@temp+1)
  5552  0522  00D5               	movf	(0+(?__Umul8_16)),w
  5553  0523  0870               	movwf	(___flmul@temp)
  5554  0524  00D4               	line	123
  5555                           	
  5556                           l2272:	
  5557  0525                     	movf	(___flmul@temp),w
  5558  0525  0854               	movwf	(??___flmul+0)+0
  5559  0526  00C4               	clrf	(??___flmul+0)+0+1
  5560  0527  01C5               	clrf	(??___flmul+0)+0+2
  5561  0528  01C6               	clrf	(??___flmul+0)+0+3
  5562  0529  01C7               	movf	0+(??___flmul+0)+0,w
  5563  052A  0844               	addwf	(___flmul@grs),f
  5564  052B  07CA               	movf	1+(??___flmul+0)+0,w
  5565  052C  0845               	clrz
  5566  052D  1103               	skipnc
  5567  052E  1803               	addlw	1
  5568  052F  3E01               	skipnz
  5569  0530  1903               	goto	u2801
  5570  0531  2D33               	addwf	(___flmul@grs+1),f
  5571  0532  07CB               u2801:
  5572  0533                     	movf	2+(??___flmul+0)+0,w
  5573  0533  0846               	clrz
  5574  0534  1103               	skipnc
  5575  0535  1803               	addlw	1
  5576  0536  3E01               	skipnz
  5577  0537  1903               	goto	u2802
  5578  0538  2D3A               	addwf	(___flmul@grs+2),f
  5579  0539  07CC               u2802:
  5580  053A                     	movf	3+(??___flmul+0)+0,w
  5581  053A  0847               	clrz
  5582  053B  1103               	skipnc
  5583  053C  1803               	addlw	1
  5584  053D  3E01               	skipnz
  5585  053E  1903               	goto	u2803
  5586  053F  2D41               	addwf	(___flmul@grs+3),f
  5587  0540  07CD               u2803:
  5588  0541                     
  5589                           	line	124
  5590                           	
  5591                           l2274:	
  5592  0541                     	movf	0+(___flmul@temp)+01h,w
  5593  0541  0855               	movwf	(??___flmul+0)+0
  5594  0542  00C4               	clrf	(??___flmul+0)+0+1
  5595  0543  01C5               	clrf	(??___flmul+0)+0+2
  5596  0544  01C6               	clrf	(??___flmul+0)+0+3
  5597  0545  01C7               	movf	0+(??___flmul+0)+0,w
  5598  0546  0844               	addwf	(___flmul@prod),f
  5599  0547  07D0               	movf	1+(??___flmul+0)+0,w
  5600  0548  0845               	clrz
  5601  0549  1103               	skipnc
  5602  054A  1803               	addlw	1
  5603  054B  3E01               	skipnz
  5604  054C  1903               	goto	u2811
  5605  054D  2D4F               	addwf	(___flmul@prod+1),f
  5606  054E  07D1               u2811:
  5607  054F                     	movf	2+(??___flmul+0)+0,w
  5608  054F  0846               	clrz
  5609  0550  1103               	skipnc
  5610  0551  1803               	addlw	1
  5611  0552  3E01               	skipnz
  5612  0553  1903               	goto	u2812
  5613  0554  2D56               	addwf	(___flmul@prod+2),f
  5614  0555  07D2               u2812:
  5615  0556                     	movf	3+(??___flmul+0)+0,w
  5616  0556  0847               	clrz
  5617  0557  1103               	skipnc
  5618  0558  1803               	addlw	1
  5619  0559  3E01               	skipnz
  5620  055A  1903               	goto	u2813
  5621  055B  2D5D               	addwf	(___flmul@prod+3),f
  5622  055C  07D3               u2813:
  5623  055D                     
  5624                           	line	125
  5625                           	movf	0+(___flmul@b)+02h,w
  5626  055D  083E               	movwf	(??___flmul+0)+0
  5627  055E  00C4               	movf	(??___flmul+0)+0,w
  5628  055F  0844               	movwf	(__Umul8_16@multiplicand)
  5629  0560  00F0               	movf	(___flmul@a),w
  5630  0561  0840               	fcall	__Umul8_16
  5631  0562  120A  158A  226A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5632  0567  0871               	bcf	status, 5	;RP0=0, select bank0
  5633  0568  1283               	bcf	status, 6	;RP1=0, select bank0
  5634  0569  1303               	movwf	(___flmul@temp+1)
  5635  056A  00D5               	movf	(0+(?__Umul8_16)),w
  5636  056B  0870               	movwf	(___flmul@temp)
  5637  056C  00D4               	line	126
  5638                           	
  5639                           l2276:	
  5640  056D                     	movf	(___flmul@temp),w
  5641  056D  0854               	movwf	(??___flmul+0)+0
  5642  056E  00C4               	clrf	(??___flmul+0)+0+1
  5643  056F  01C5               	clrf	(??___flmul+0)+0+2
  5644  0570  01C6               	clrf	(??___flmul+0)+0+3
  5645  0571  01C7               	movf	0+(??___flmul+0)+0,w
  5646  0572  0844               	addwf	(___flmul@grs),f
  5647  0573  07CA               	movf	1+(??___flmul+0)+0,w
  5648  0574  0845               	clrz
  5649  0575  1103               	skipnc
  5650  0576  1803               	addlw	1
  5651  0577  3E01               	skipnz
  5652  0578  1903               	goto	u2821
  5653  0579  2D7B               	addwf	(___flmul@grs+1),f
  5654  057A  07CB               u2821:
  5655  057B                     	movf	2+(??___flmul+0)+0,w
  5656  057B  0846               	clrz
  5657  057C  1103               	skipnc
  5658  057D  1803               	addlw	1
  5659  057E  3E01               	skipnz
  5660  057F  1903               	goto	u2822
  5661  0580  2D82               	addwf	(___flmul@grs+2),f
  5662  0581  07CC               u2822:
  5663  0582                     	movf	3+(??___flmul+0)+0,w
  5664  0582  0847               	clrz
  5665  0583  1103               	skipnc
  5666  0584  1803               	addlw	1
  5667  0585  3E01               	skipnz
  5668  0586  1903               	goto	u2823
  5669  0587  2D89               	addwf	(___flmul@grs+3),f
  5670  0588  07CD               u2823:
  5671  0589                     
  5672                           	line	127
  5673                           	
  5674                           l2278:	
  5675  0589                     	movf	0+(___flmul@temp)+01h,w
  5676  0589  0855               	movwf	(??___flmul+0)+0
  5677  058A  00C4               	clrf	(??___flmul+0)+0+1
  5678  058B  01C5               	clrf	(??___flmul+0)+0+2
  5679  058C  01C6               	clrf	(??___flmul+0)+0+3
  5680  058D  01C7               	movf	0+(??___flmul+0)+0,w
  5681  058E  0844               	addwf	(___flmul@prod),f
  5682  058F  07D0               	movf	1+(??___flmul+0)+0,w
  5683  0590  0845               	clrz
  5684  0591  1103               	skipnc
  5685  0592  1803               	addlw	1
  5686  0593  3E01               	skipnz
  5687  0594  1903               	goto	u2831
  5688  0595  2D97               	addwf	(___flmul@prod+1),f
  5689  0596  07D1               u2831:
  5690  0597                     	movf	2+(??___flmul+0)+0,w
  5691  0597  0846               	clrz
  5692  0598  1103               	skipnc
  5693  0599  1803               	addlw	1
  5694  059A  3E01               	skipnz
  5695  059B  1903               	goto	u2832
  5696  059C  2D9E               	addwf	(___flmul@prod+2),f
  5697  059D  07D2               u2832:
  5698  059E                     	movf	3+(??___flmul+0)+0,w
  5699  059E  0847               	clrz
  5700  059F  1103               	skipnc
  5701  05A0  1803               	addlw	1
  5702  05A1  3E01               	skipnz
  5703  05A2  1903               	goto	u2833
  5704  05A3  2DA5               	addwf	(___flmul@prod+3),f
  5705  05A4  07D3               u2833:
  5706  05A5                     
  5707                           	line	128
  5708                           	
  5709                           l2280:	
  5710  05A5                     	movlw	08h
  5711  05A5  3008               	movwf	(??___flmul+0)+0
  5712  05A6  00C4               u2845:
  5713  05A7                     	clrc
  5714  05A7  1003               	rlf	(___flmul@grs),f
  5715  05A8  0DCA               	rlf	(___flmul@grs+1),f
  5716  05A9  0DCB               	rlf	(___flmul@grs+2),f
  5717  05AA  0DCC               	rlf	(___flmul@grs+3),f
  5718  05AB  0DCD               	decfsz	(??___flmul+0)+0
  5719  05AC  0BC4               	goto	u2845
  5720  05AD  2DA7               	line	129
  5721                           	
  5722                           l2282:	
  5723  05AE                     	movf	0+(___flmul@b)+01h,w
  5724  05AE  083D               	movwf	(??___flmul+0)+0
  5725  05AF  00C4               	movf	(??___flmul+0)+0,w
  5726  05B0  0844               	movwf	(__Umul8_16@multiplicand)
  5727  05B1  00F0               	movf	(___flmul@a),w
  5728  05B2  0840               	fcall	__Umul8_16
  5729  05B3  120A  158A  226A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5730  05B8  0871               	bcf	status, 5	;RP0=0, select bank0
  5731  05B9  1283               	bcf	status, 6	;RP1=0, select bank0
  5732  05BA  1303               	movwf	(___flmul@temp+1)
  5733  05BB  00D5               	movf	(0+(?__Umul8_16)),w
  5734  05BC  0870               	movwf	(___flmul@temp)
  5735  05BD  00D4               	line	130
  5736                           	
  5737                           l2284:	
  5738  05BE                     	movf	(___flmul@temp),w
  5739  05BE  0854               	movwf	((??___flmul+0)+0)
  5740  05BF  00C4               	movf	(___flmul@temp+1),w
  5741  05C0  0855               	movwf	((??___flmul+0)+0+1)
  5742  05C1  00C5               	clrf	((??___flmul+0)+0+2)
  5743  05C2  01C6               	clrf	((??___flmul+0)+0+3)
  5744  05C3  01C7               	movf	0+(??___flmul+0)+0,w
  5745  05C4  0844               	addwf	(___flmul@grs),f
  5746  05C5  07CA               	movf	1+(??___flmul+0)+0,w
  5747  05C6  0845               	clrz
  5748  05C7  1103               	skipnc
  5749  05C8  1803               	addlw	1
  5750  05C9  3E01               	skipnz
  5751  05CA  1903               	goto	u2851
  5752  05CB  2DCD               	addwf	(___flmul@grs+1),f
  5753  05CC  07CB               u2851:
  5754  05CD                     	movf	2+(??___flmul+0)+0,w
  5755  05CD  0846               	clrz
  5756  05CE  1103               	skipnc
  5757  05CF  1803               	addlw	1
  5758  05D0  3E01               	skipnz
  5759  05D1  1903               	goto	u2852
  5760  05D2  2DD4               	addwf	(___flmul@grs+2),f
  5761  05D3  07CC               u2852:
  5762  05D4                     	movf	3+(??___flmul+0)+0,w
  5763  05D4  0847               	clrz
  5764  05D5  1103               	skipnc
  5765  05D6  1803               	addlw	1
  5766  05D7  3E01               	skipnz
  5767  05D8  1903               	goto	u2853
  5768  05D9  2DDB               	addwf	(___flmul@grs+3),f
  5769  05DA  07CD               u2853:
  5770  05DB                     
  5771                           	line	131
  5772                           	
  5773                           l2286:	
  5774  05DB                     	movf	(___flmul@b),w
  5775  05DB  083C               	movwf	(??___flmul+0)+0
  5776  05DC  00C4               	movf	(??___flmul+0)+0,w
  5777  05DD  0844               	movwf	(__Umul8_16@multiplicand)
  5778  05DE  00F0               	movf	0+(___flmul@a)+01h,w
  5779  05DF  0841               	fcall	__Umul8_16
  5780  05E0  120A  158A  226A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5781  05E5  0871               	bcf	status, 5	;RP0=0, select bank0
  5782  05E6  1283               	bcf	status, 6	;RP1=0, select bank0
  5783  05E7  1303               	movwf	(___flmul@temp+1)
  5784  05E8  00D5               	movf	(0+(?__Umul8_16)),w
  5785  05E9  0870               	movwf	(___flmul@temp)
  5786  05EA  00D4               	line	132
  5787                           	
  5788                           l2288:	
  5789  05EB                     	movf	(___flmul@temp),w
  5790  05EB  0854               	movwf	((??___flmul+0)+0)
  5791  05EC  00C4               	movf	(___flmul@temp+1),w
  5792  05ED  0855               	movwf	((??___flmul+0)+0+1)
  5793  05EE  00C5               	clrf	((??___flmul+0)+0+2)
  5794  05EF  01C6               	clrf	((??___flmul+0)+0+3)
  5795  05F0  01C7               	movf	0+(??___flmul+0)+0,w
  5796  05F1  0844               	addwf	(___flmul@grs),f
  5797  05F2  07CA               	movf	1+(??___flmul+0)+0,w
  5798  05F3  0845               	clrz
  5799  05F4  1103               	skipnc
  5800  05F5  1803               	addlw	1
  5801  05F6  3E01               	skipnz
  5802  05F7  1903               	goto	u2861
  5803  05F8  2DFA               	addwf	(___flmul@grs+1),f
  5804  05F9  07CB               u2861:
  5805  05FA                     	movf	2+(??___flmul+0)+0,w
  5806  05FA  0846               	clrz
  5807  05FB  1103               	skipnc
  5808  05FC  1803               	addlw	1
  5809  05FD  3E01               	skipnz
  5810  05FE  1903               	goto	u2862
  5811  05FF  2E01               	addwf	(___flmul@grs+2),f
  5812  0600  07CC               u2862:
  5813  0601                     	movf	3+(??___flmul+0)+0,w
  5814  0601  0847               	clrz
  5815  0602  1103               	skipnc
  5816  0603  1803               	addlw	1
  5817  0604  3E01               	skipnz
  5818  0605  1903               	goto	u2863
  5819  0606  2E08               	addwf	(___flmul@grs+3),f
  5820  0607  07CD               u2863:
  5821  0608                     
  5822                           	line	133
  5823                           	
  5824                           l2290:	
  5825  0608                     	movlw	08h
  5826  0608  3008               	movwf	(??___flmul+0)+0
  5827  0609  00C4               u2875:
  5828  060A                     	clrc
  5829  060A  1003               	rlf	(___flmul@grs),f
  5830  060B  0DCA               	rlf	(___flmul@grs+1),f
  5831  060C  0DCB               	rlf	(___flmul@grs+2),f
  5832  060D  0DCC               	rlf	(___flmul@grs+3),f
  5833  060E  0DCD               	decfsz	(??___flmul+0)+0
  5834  060F  0BC4               	goto	u2875
  5835  0610  2E0A               	line	134
  5836                           	movf	(___flmul@b),w
  5837  0611  083C               	movwf	(??___flmul+0)+0
  5838  0612  00C4               	movf	(??___flmul+0)+0,w
  5839  0613  0844               	movwf	(__Umul8_16@multiplicand)
  5840  0614  00F0               	movf	(___flmul@a),w
  5841  0615  0840               	fcall	__Umul8_16
  5842  0616  120A  158A  226A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5843  061B  0871               	bcf	status, 5	;RP0=0, select bank0
  5844  061C  1283               	bcf	status, 6	;RP1=0, select bank0
  5845  061D  1303               	movwf	(___flmul@temp+1)
  5846  061E  00D5               	movf	(0+(?__Umul8_16)),w
  5847  061F  0870               	movwf	(___flmul@temp)
  5848  0620  00D4               	line	135
  5849                           	
  5850                           l2292:	
  5851  0621                     	movf	(___flmul@temp),w
  5852  0621  0854               	movwf	((??___flmul+0)+0)
  5853  0622  00C4               	movf	(___flmul@temp+1),w
  5854  0623  0855               	movwf	((??___flmul+0)+0+1)
  5855  0624  00C5               	clrf	((??___flmul+0)+0+2)
  5856  0625  01C6               	clrf	((??___flmul+0)+0+3)
  5857  0626  01C7               	movf	0+(??___flmul+0)+0,w
  5858  0627  0844               	addwf	(___flmul@grs),f
  5859  0628  07CA               	movf	1+(??___flmul+0)+0,w
  5860  0629  0845               	clrz
  5861  062A  1103               	skipnc
  5862  062B  1803               	addlw	1
  5863  062C  3E01               	skipnz
  5864  062D  1903               	goto	u2881
  5865  062E  2E30               	addwf	(___flmul@grs+1),f
  5866  062F  07CB               u2881:
  5867  0630                     	movf	2+(??___flmul+0)+0,w
  5868  0630  0846               	clrz
  5869  0631  1103               	skipnc
  5870  0632  1803               	addlw	1
  5871  0633  3E01               	skipnz
  5872  0634  1903               	goto	u2882
  5873  0635  2E37               	addwf	(___flmul@grs+2),f
  5874  0636  07CC               u2882:
  5875  0637                     	movf	3+(??___flmul+0)+0,w
  5876  0637  0847               	clrz
  5877  0638  1103               	skipnc
  5878  0639  1803               	addlw	1
  5879  063A  3E01               	skipnz
  5880  063B  1903               	goto	u2883
  5881  063C  2E3E               	addwf	(___flmul@grs+3),f
  5882  063D  07CD               u2883:
  5883  063E                     
  5884                           	line	136
  5885                           	
  5886                           l2294:	
  5887  063E                     	movf	0+(___flmul@b)+01h,w
  5888  063E  083D               	movwf	(??___flmul+0)+0
  5889  063F  00C4               	movf	(??___flmul+0)+0,w
  5890  0640  0844               	movwf	(__Umul8_16@multiplicand)
  5891  0641  00F0               	movf	0+(___flmul@a)+02h,w
  5892  0642  0842               	fcall	__Umul8_16
  5893  0643  120A  158A  226A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5894  0648  0871               	bcf	status, 5	;RP0=0, select bank0
  5895  0649  1283               	bcf	status, 6	;RP1=0, select bank0
  5896  064A  1303               	movwf	(___flmul@temp+1)
  5897  064B  00D5               	movf	(0+(?__Umul8_16)),w
  5898  064C  0870               	movwf	(___flmul@temp)
  5899  064D  00D4               	line	137
  5900                           	movf	(___flmul@temp),w
  5901  064E  0854               	movwf	((??___flmul+0)+0)
  5902  064F  00C4               	movf	(___flmul@temp+1),w
  5903  0650  0855               	movwf	((??___flmul+0)+0+1)
  5904  0651  00C5               	clrf	((??___flmul+0)+0+2)
  5905  0652  01C6               	clrf	((??___flmul+0)+0+3)
  5906  0653  01C7               	movf	0+(??___flmul+0)+0,w
  5907  0654  0844               	addwf	(___flmul@prod),f
  5908  0655  07D0               	movf	1+(??___flmul+0)+0,w
  5909  0656  0845               	clrz
  5910  0657  1103               	skipnc
  5911  0658  1803               	addlw	1
  5912  0659  3E01               	skipnz
  5913  065A  1903               	goto	u2891
  5914  065B  2E5D               	addwf	(___flmul@prod+1),f
  5915  065C  07D1               u2891:
  5916  065D                     	movf	2+(??___flmul+0)+0,w
  5917  065D  0846               	clrz
  5918  065E  1103               	skipnc
  5919  065F  1803               	addlw	1
  5920  0660  3E01               	skipnz
  5921  0661  1903               	goto	u2892
  5922  0662  2E64               	addwf	(___flmul@prod+2),f
  5923  0663  07D2               u2892:
  5924  0664                     	movf	3+(??___flmul+0)+0,w
  5925  0664  0847               	clrz
  5926  0665  1103               	skipnc
  5927  0666  1803               	addlw	1
  5928  0667  3E01               	skipnz
  5929  0668  1903               	goto	u2893
  5930  0669  2E6B               	addwf	(___flmul@prod+3),f
  5931  066A  07D3               u2893:
  5932  066B                     
  5933                           	line	138
  5934                           	
  5935                           l2296:	
  5936  066B                     	movf	0+(___flmul@b)+02h,w
  5937  066B  083E               	movwf	(??___flmul+0)+0
  5938  066C  00C4               	movf	(??___flmul+0)+0,w
  5939  066D  0844               	movwf	(__Umul8_16@multiplicand)
  5940  066E  00F0               	movf	0+(___flmul@a)+01h,w
  5941  066F  0841               	fcall	__Umul8_16
  5942  0670  120A  158A  226A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5943  0675  0871               	bcf	status, 5	;RP0=0, select bank0
  5944  0676  1283               	bcf	status, 6	;RP1=0, select bank0
  5945  0677  1303               	movwf	(___flmul@temp+1)
  5946  0678  00D5               	movf	(0+(?__Umul8_16)),w
  5947  0679  0870               	movwf	(___flmul@temp)
  5948  067A  00D4               	line	139
  5949                           	
  5950                           l2298:	
  5951  067B                     	movf	(___flmul@temp),w
  5952  067B  0854               	movwf	((??___flmul+0)+0)
  5953  067C  00C4               	movf	(___flmul@temp+1),w
  5954  067D  0855               	movwf	((??___flmul+0)+0+1)
  5955  067E  00C5               	clrf	((??___flmul+0)+0+2)
  5956  067F  01C6               	clrf	((??___flmul+0)+0+3)
  5957  0680  01C7               	movf	0+(??___flmul+0)+0,w
  5958  0681  0844               	addwf	(___flmul@prod),f
  5959  0682  07D0               	movf	1+(??___flmul+0)+0,w
  5960  0683  0845               	clrz
  5961  0684  1103               	skipnc
  5962  0685  1803               	addlw	1
  5963  0686  3E01               	skipnz
  5964  0687  1903               	goto	u2901
  5965  0688  2E8A               	addwf	(___flmul@prod+1),f
  5966  0689  07D1               u2901:
  5967  068A                     	movf	2+(??___flmul+0)+0,w
  5968  068A  0846               	clrz
  5969  068B  1103               	skipnc
  5970  068C  1803               	addlw	1
  5971  068D  3E01               	skipnz
  5972  068E  1903               	goto	u2902
  5973  068F  2E91               	addwf	(___flmul@prod+2),f
  5974  0690  07D2               u2902:
  5975  0691                     	movf	3+(??___flmul+0)+0,w
  5976  0691  0847               	clrz
  5977  0692  1103               	skipnc
  5978  0693  1803               	addlw	1
  5979  0694  3E01               	skipnz
  5980  0695  1903               	goto	u2903
  5981  0696  2E98               	addwf	(___flmul@prod+3),f
  5982  0697  07D3               u2903:
  5983  0698                     
  5984                           	line	140
  5985                           	movf	0+(___flmul@b)+02h,w
  5986  0698  083E               	movwf	(??___flmul+0)+0
  5987  0699  00C4               	movf	(??___flmul+0)+0,w
  5988  069A  0844               	movwf	(__Umul8_16@multiplicand)
  5989  069B  00F0               	movf	0+(___flmul@a)+02h,w
  5990  069C  0842               	fcall	__Umul8_16
  5991  069D  120A  158A  226A  120A  118A  	movf	(1+(?__Umul8_16)),w
  5992  06A2  0871               	bcf	status, 5	;RP0=0, select bank0
  5993  06A3  1283               	bcf	status, 6	;RP1=0, select bank0
  5994  06A4  1303               	movwf	(___flmul@temp+1)
  5995  06A5  00D5               	movf	(0+(?__Umul8_16)),w
  5996  06A6  0870               	movwf	(___flmul@temp)
  5997  06A7  00D4               	line	141
  5998                           	
  5999                           l2300:	
  6000  06A8                     	movf	(___flmul@temp),w
  6001  06A8  0854               	movwf	((??___flmul+0)+0)
  6002  06A9  00C4               	movf	(___flmul@temp+1),w
  6003  06AA  0855               	movwf	((??___flmul+0)+0+1)
  6004  06AB  00C5               	clrf	((??___flmul+0)+0+2)
  6005  06AC  01C6               	clrf	((??___flmul+0)+0+3)
  6006  06AD  01C7               	movlw	08h
  6007  06AE  3008               u2915:
  6008  06AF                     	clrc
  6009  06AF  1003               	rlf	(??___flmul+0)+0,f
  6010  06B0  0DC4               	rlf	(??___flmul+0)+1,f
  6011  06B1  0DC5               	rlf	(??___flmul+0)+2,f
  6012  06B2  0DC6               	rlf	(??___flmul+0)+3,f
  6013  06B3  0DC7               u2910:
  6014  06B4                     	addlw	-1
  6015  06B4  3EFF               	skipz
  6016  06B5  1D03               	goto	u2915
  6017  06B6  2EAF               	movf	0+(??___flmul+0)+0,w
  6018  06B7  0844               	addwf	(___flmul@prod),f
  6019  06B8  07D0               	movf	1+(??___flmul+0)+0,w
  6020  06B9  0845               	clrz
  6021  06BA  1103               	skipnc
  6022  06BB  1803               	addlw	1
  6023  06BC  3E01               	skipnz
  6024  06BD  1903               	goto	u2921
  6025  06BE  2EC0               	addwf	(___flmul@prod+1),f
  6026  06BF  07D1               u2921:
  6027  06C0                     	movf	2+(??___flmul+0)+0,w
  6028  06C0  0846               	clrz
  6029  06C1  1103               	skipnc
  6030  06C2  1803               	addlw	1
  6031  06C3  3E01               	skipnz
  6032  06C4  1903               	goto	u2922
  6033  06C5  2EC7               	addwf	(___flmul@prod+2),f
  6034  06C6  07D2               u2922:
  6035  06C7                     	movf	3+(??___flmul+0)+0,w
  6036  06C7  0847               	clrz
  6037  06C8  1103               	skipnc
  6038  06C9  1803               	addlw	1
  6039  06CA  3E01               	skipnz
  6040  06CB  1903               	goto	u2923
  6041  06CC  2ECE               	addwf	(___flmul@prod+3),f
  6042  06CD  07D3               u2923:
  6043  06CE                     
  6044                           	line	145
  6045                           	
  6046                           l2302:	
  6047  06CE                     	movf	(___flmul@grs),w
  6048  06CE  084A               	movwf	(??___flmul+0)+0
  6049  06CF  00C4               	movf	(___flmul@grs+1),w
  6050  06D0  084B               	movwf	((??___flmul+0)+0+1)
  6051  06D1  00C5               	movf	(___flmul@grs+2),w
  6052  06D2  084C               	movwf	((??___flmul+0)+0+2)
  6053  06D3  00C6               	movf	(___flmul@grs+3),w
  6054  06D4  084D               	movwf	((??___flmul+0)+0+3)
  6055  06D5  00C7               	movlw	018h
  6056  06D6  3018               u2935:
  6057  06D7                     	clrc
  6058  06D7  1003               	rrf	(??___flmul+0)+3,f
  6059  06D8  0CC7               	rrf	(??___flmul+0)+2,f
  6060  06D9  0CC6               	rrf	(??___flmul+0)+1,f
  6061  06DA  0CC5               	rrf	(??___flmul+0)+0,f
  6062  06DB  0CC4               u2930:
  6063  06DC                     	addlw	-1
  6064  06DC  3EFF               	skipz
  6065  06DD  1D03               	goto	u2935
  6066  06DE  2ED7               	movf	0+(??___flmul+0)+0,w
  6067  06DF  0844               	addwf	(___flmul@prod),f
  6068  06E0  07D0               	movf	1+(??___flmul+0)+0,w
  6069  06E1  0845               	clrz
  6070  06E2  1103               	skipnc
  6071  06E3  1803               	addlw	1
  6072  06E4  3E01               	skipnz
  6073  06E5  1903               	goto	u2941
  6074  06E6  2EE8               	addwf	(___flmul@prod+1),f
  6075  06E7  07D1               u2941:
  6076  06E8                     	movf	2+(??___flmul+0)+0,w
  6077  06E8  0846               	clrz
  6078  06E9  1103               	skipnc
  6079  06EA  1803               	addlw	1
  6080  06EB  3E01               	skipnz
  6081  06EC  1903               	goto	u2942
  6082  06ED  2EEF               	addwf	(___flmul@prod+2),f
  6083  06EE  07D2               u2942:
  6084  06EF                     	movf	3+(??___flmul+0)+0,w
  6085  06EF  0847               	clrz
  6086  06F0  1103               	skipnc
  6087  06F1  1803               	addlw	1
  6088  06F2  3E01               	skipnz
  6089  06F3  1903               	goto	u2943
  6090  06F4  2EF6               	addwf	(___flmul@prod+3),f
  6091  06F5  07D3               u2943:
  6092  06F6                     
  6093                           	line	146
  6094                           	
  6095                           l2304:	
  6096  06F6                     	movlw	08h
  6097  06F6  3008               	movwf	(??___flmul+0)+0
  6098  06F7  00C4               u2955:
  6099  06F8                     	clrc
  6100  06F8  1003               	rlf	(___flmul@grs),f
  6101  06F9  0DCA               	rlf	(___flmul@grs+1),f
  6102  06FA  0DCB               	rlf	(___flmul@grs+2),f
  6103  06FB  0DCC               	rlf	(___flmul@grs+3),f
  6104  06FC  0DCD               	decfsz	(??___flmul+0)+0
  6105  06FD  0BC4               	goto	u2955
  6106  06FE  2EF8               	line	149
  6107                           	
  6108                           l2306:	
  6109  06FF                     	movf	(___flmul@bexp),w
  6110  06FF  084F               	addwf	(___flmul@aexp),w
  6111  0700  074E               	movwf	(??___flmul+0)+0
  6112  0701  00C4               	clrf	(??___flmul+0)+0+1
  6113  0702  01C5               	rlf	1+(??___flmul+0)+0,f
  6114  0703  0DC5               	
  6115                           	movf	0+(??___flmul+0)+0,w
  6116  0704  0844               	addlw	low(-126)
  6117  0705  3E82               	movwf	(___flmul@temp)
  6118  0706  00D4               	movf	1+(??___flmul+0)+0,w
  6119  0707  0845               	skipnc
  6120  0708  1803               	addlw	1
  6121  0709  3E01               	addlw	high(-126)
  6122  070A  3EFF               	movwf	1+(___flmul@temp)
  6123  070B  00D5               	line	152
  6124                           	goto	l2318
  6125  070C  2F2C               	
  6126                           l706:	
  6127  070D                     	line	153
  6128                           	
  6129                           l2308:	
  6130  070D                     	movlw	01h
  6131  070D  3001               	movwf	(??___flmul+0)+0
  6132  070E  00C4               u2965:
  6133  070F                     	clrc
  6134  070F  1003               	rlf	(___flmul@prod),f
  6135  0710  0DD0               	rlf	(___flmul@prod+1),f
  6136  0711  0DD1               	rlf	(___flmul@prod+2),f
  6137  0712  0DD2               	rlf	(___flmul@prod+3),f
  6138  0713  0DD3               	decfsz	(??___flmul+0)+0
  6139  0714  0BC4               	goto	u2965
  6140  0715  2F0F               	line	154
  6141                           	
  6142                           l2310:	
  6143  0716                     	btfss	(___flmul@grs+3),(31)&7
  6144  0716  1FCD               	goto	u2971
  6145  0717  2F19               	goto	u2970
  6146  0718  2F1A               u2971:
  6147  0719                     	goto	l2314
  6148  0719  2F1C               u2970:
  6149  071A                     	line	155
  6150                           	
  6151                           l2312:	
  6152  071A                     	bsf	(___flmul@prod)+(0/8),(0)&7
  6153  071A  1450               	goto	l2314
  6154  071B  2F1C               	line	156
  6155                           	
  6156                           l707:	
  6157  071C                     	line	157
  6158                           	
  6159                           l2314:	
  6160  071C                     	movlw	01h
  6161  071C  3001               	movwf	(??___flmul+0)+0
  6162  071D  00C4               u2985:
  6163  071E                     	clrc
  6164  071E  1003               	rlf	(___flmul@grs),f
  6165  071F  0DCA               	rlf	(___flmul@grs+1),f
  6166  0720  0DCB               	rlf	(___flmul@grs+2),f
  6167  0721  0DCC               	rlf	(___flmul@grs+3),f
  6168  0722  0DCD               	decfsz	(??___flmul+0)+0
  6169  0723  0BC4               	goto	u2985
  6170  0724  2F1E               	line	158
  6171                           	
  6172                           l2316:	
  6173  0725                     	movlw	0FFh
  6174  0725  30FF               	addwf	(___flmul@temp),f
  6175  0726  07D4               	skipnc
  6176  0727  1803               	incf	(___flmul@temp+1),f
  6177  0728  0AD5               	movlw	0FFh
  6178  0729  30FF               	addwf	(___flmul@temp+1),f
  6179  072A  07D5               	goto	l2318
  6180  072B  2F2C               	line	159
  6181                           	
  6182                           l705:	
  6183  072C                     	line	152
  6184                           	
  6185                           l2318:	
  6186  072C                     	btfss	(___flmul@prod+2),(23)&7
  6187  072C  1FD2               	goto	u2991
  6188  072D  2F2F               	goto	u2990
  6189  072E  2F30               u2991:
  6190  072F                     	goto	l2308
  6191  072F  2F0D               u2990:
  6192  0730                     	goto	l2320
  6193  0730  2F31               	
  6194                           l708:	
  6195  0731                     	line	163
  6196                           	
  6197                           l2320:	
  6198  0731                     	clrf	(___flmul@aexp)
  6199  0731  01CE               	line	164
  6200                           	
  6201                           l2322:	
  6202  0732                     	btfss	(___flmul@grs+3),(31)&7
  6203  0732  1FCD               	goto	u3001
  6204  0733  2F35               	goto	u3000
  6205  0734  2F36               u3001:
  6206  0735                     	goto	l2330
  6207  0735  2F56               u3000:
  6208  0736                     	line	165
  6209                           	
  6210                           l2324:	
  6211  0736                     	movlw	0FFh
  6212  0736  30FF               	andwf	(___flmul@grs),w
  6213  0737  054A               	movwf	(??___flmul+0)+0
  6214  0738  00C4               	movlw	0FFh
  6215  0739  30FF               	andwf	(___flmul@grs+1),w
  6216  073A  054B               	movwf	((??___flmul+0)+0+1)
  6217  073B  00C5               	movlw	0FFh
  6218  073C  30FF               	andwf	(___flmul@grs+2),w
  6219  073D  054C               	movwf	((??___flmul+0)+0+2)
  6220  073E  00C6               	movlw	07Fh
  6221  073F  307F               	andwf	(___flmul@grs+3),w
  6222  0740  054D               	movwf	((??___flmul+0)+0+3)
  6223  0741  00C7               	movf	3+(??___flmul+0)+0,w
  6224  0742  0847               	iorwf	2+(??___flmul+0)+0,w
  6225  0743  0446               	iorwf	1+(??___flmul+0)+0,w
  6226  0744  0445               	iorwf	0+(??___flmul+0)+0,w
  6227  0745  0444               	skipnz
  6228  0746  1903               	goto	u3011
  6229  0747  2F49               	goto	u3010
  6230  0748  2F4A               u3011:
  6231  0749                     	goto	l710
  6232  0749  2F4D               u3010:
  6233  074A                     	line	166
  6234                           	
  6235                           l2326:	
  6236  074A                     	clrf	(___flmul@aexp)
  6237  074A  01CE               	incf	(___flmul@aexp),f
  6238  074B  0ACE               	line	167
  6239                           	goto	l2330
  6240  074C  2F56               	line	168
  6241                           	
  6242                           l710:	
  6243  074D                     	line	169
  6244                           	btfss	(___flmul@prod),(0)&7
  6245  074D  1C50               	goto	u3021
  6246  074E  2F50               	goto	u3020
  6247  074F  2F51               u3021:
  6248  0750                     	goto	l2330
  6249  0750  2F56               u3020:
  6250  0751                     	line	170
  6251                           	
  6252                           l2328:	
  6253  0751                     	clrf	(___flmul@aexp)
  6254  0751  01CE               	incf	(___flmul@aexp),f
  6255  0752  0ACE               	goto	l2330
  6256  0753  2F56               	line	171
  6257                           	
  6258                           l712:	
  6259  0754                     	goto	l2330
  6260  0754  2F56               	line	172
  6261                           	
  6262                           l711:	
  6263  0755                     	goto	l2330
  6264  0755  2F56               	line	173
  6265                           	
  6266                           l709:	
  6267  0756                     	line	174
  6268                           	
  6269                           l2330:	
  6270  0756                     	movf	((___flmul@aexp)),w
  6271  0756  084E               	btfsc	status,2
  6272  0757  1903               	goto	u3031
  6273  0758  2F5A               	goto	u3030
  6274  0759  2F5B               u3031:
  6275  075A                     	goto	l2340
  6276  075A  2F8E               u3030:
  6277  075B                     	line	175
  6278                           	
  6279                           l2332:	
  6280  075B                     	movlw	01h
  6281  075B  3001               	addwf	(___flmul@prod),f
  6282  075C  07D0               	movlw	0
  6283  075D  3000               	skipnc
  6284  075E  1803               movlw 1
  6285  075F  3001               	addwf	(___flmul@prod+1),f
  6286  0760  07D1               	movlw	0
  6287  0761  3000               	skipnc
  6288  0762  1803               movlw 1
  6289  0763  3001               	addwf	(___flmul@prod+2),f
  6290  0764  07D2               	movlw	0
  6291  0765  3000               	skipnc
  6292  0766  1803               movlw 1
  6293  0767  3001               	addwf	(___flmul@prod+3),f
  6294  0768  07D3               	line	176
  6295                           	
  6296                           l2334:	
  6297  0769                     	btfss	(___flmul@prod+3),(24)&7
  6298  0769  1C53               	goto	u3041
  6299  076A  2F6C               	goto	u3040
  6300  076B  2F6D               u3041:
  6301  076C                     	goto	l2340
  6302  076C  2F8E               u3040:
  6303  076D                     	line	177
  6304                           	
  6305                           l2336:	
  6306  076D                     	movf	(___flmul@prod),w
  6307  076D  0850               	movwf	(??___flmul+0)+0
  6308  076E  00C4               	movf	(___flmul@prod+1),w
  6309  076F  0851               	movwf	((??___flmul+0)+0+1)
  6310  0770  00C5               	movf	(___flmul@prod+2),w
  6311  0771  0852               	movwf	((??___flmul+0)+0+2)
  6312  0772  00C6               	movf	(___flmul@prod+3),w
  6313  0773  0853               	movwf	((??___flmul+0)+0+3)
  6314  0774  00C7               	movlw	01h
  6315  0775  3001               	movwf	(??___flmul+4)+0
  6316  0776  00C8               u3055:
  6317  0777                     	rlf	(??___flmul+0)+3,w
  6318  0777  0D47               	rrf	(??___flmul+0)+3,f
  6319  0778  0CC7               	rrf	(??___flmul+0)+2,f
  6320  0779  0CC6               	rrf	(??___flmul+0)+1,f
  6321  077A  0CC5               	rrf	(??___flmul+0)+0,f
  6322  077B  0CC4               u3050:
  6323  077C                     	decfsz	(??___flmul+4)+0,f
  6324  077C  0BC8               	goto	u3055
  6325  077D  2F77               	movf	3+(??___flmul+0)+0,w
  6326  077E  0847               	movwf	(___flmul@prod+3)
  6327  077F  00D3               	movf	2+(??___flmul+0)+0,w
  6328  0780  0846               	movwf	(___flmul@prod+2)
  6329  0781  00D2               	movf	1+(??___flmul+0)+0,w
  6330  0782  0845               	movwf	(___flmul@prod+1)
  6331  0783  00D1               	movf	0+(??___flmul+0)+0,w
  6332  0784  0844               	movwf	(___flmul@prod)
  6333  0785  00D0               
  6334                           	line	178
  6335                           	
  6336                           l2338:	
  6337  0786                     	movlw	01h
  6338  0786  3001               	addwf	(___flmul@temp),f
  6339  0787  07D4               	skipnc
  6340  0788  1803               	incf	(___flmul@temp+1),f
  6341  0789  0AD5               	movlw	0
  6342  078A  3000               	addwf	(___flmul@temp+1),f
  6343  078B  07D5               	goto	l2340
  6344  078C  2F8E               	line	179
  6345                           	
  6346                           l714:	
  6347  078D                     	goto	l2340
  6348  078D  2F8E               	line	180
  6349                           	
  6350                           l713:	
  6351  078E                     	line	183
  6352                           	
  6353                           l2340:	
  6354  078E                     	movf	(___flmul@temp+1),w
  6355  078E  0855               	xorlw	80h
  6356  078F  3A80               	movwf	btemp+1
  6357  0790  00FF               	movlw	(0)^80h
  6358  0791  3080               	subwf	btemp+1,w
  6359  0792  027F               	skipz
  6360  0793  1D03               	goto	u3065
  6361  0794  2F97               	movlw	0FFh
  6362  0795  30FF               	subwf	(___flmul@temp),w
  6363  0796  0254               u3065:
  6364  0797                     
  6365                           	skipc
  6366  0797  1C03               	goto	u3061
  6367  0798  2F9A               	goto	u3060
  6368  0799  2F9B               u3061:
  6369  079A                     	goto	l2344
  6370  079A  2FA6               u3060:
  6371  079B                     	line	184
  6372                           	
  6373                           l2342:	
  6374  079B                     	movlw	07Fh
  6375  079B  307F               	bcf	status, 5	;RP0=0, select bank0
  6376  079C  1283               	bcf	status, 6	;RP1=0, select bank0
  6377  079D  1303               	movwf	(___flmul@prod+3)
  6378  079E  00D3               	movlw	080h
  6379  079F  3080               	movwf	(___flmul@prod+2)
  6380  07A0  00D2               	movlw	0
  6381  07A1  3000               	movwf	(___flmul@prod+1)
  6382  07A2  00D1               	movlw	0
  6383  07A3  3000               	movwf	(___flmul@prod)
  6384  07A4  00D0               
  6385                           	line	185
  6386                           	goto	l716
  6387  07A5  2FDD               	line	187
  6388                           	
  6389                           l715:	
  6390  07A6                     	
  6391                           l2344:	
  6392  07A6                     	bcf	status, 5	;RP0=0, select bank0
  6393  07A6  1283               	bcf	status, 6	;RP1=0, select bank0
  6394  07A7  1303               	movf	(___flmul@temp+1),w
  6395  07A8  0855               	xorlw	80h
  6396  07A9  3A80               	movwf	btemp+1
  6397  07AA  00FF               	movlw	(0)^80h
  6398  07AB  3080               	subwf	btemp+1,w
  6399  07AC  027F               	skipz
  6400  07AD  1D03               	goto	u3075
  6401  07AE  2FB1               	movlw	01h
  6402  07AF  3001               	subwf	(___flmul@temp),w
  6403  07B0  0254               u3075:
  6404  07B1                     
  6405                           	skipnc
  6406  07B1  1803               	goto	u3071
  6407  07B2  2FB4               	goto	u3070
  6408  07B3  2FB5               u3071:
  6409  07B4                     	goto	l2350
  6410  07B4  2FC1               u3070:
  6411  07B5                     	line	188
  6412                           	
  6413                           l2346:	
  6414  07B5                     	movlw	high highword(0)
  6415  07B5  3000               	bcf	status, 5	;RP0=0, select bank0
  6416  07B6  1283               	bcf	status, 6	;RP1=0, select bank0
  6417  07B7  1303               	movwf	(___flmul@prod+3)
  6418  07B8  00D3               	movlw	low highword(0)
  6419  07B9  3000               	movwf	(___flmul@prod+2)
  6420  07BA  00D2               	movlw	high(0)
  6421  07BB  3000               	movwf	(___flmul@prod+1)
  6422  07BC  00D1               	movlw	low(0)
  6423  07BD  3000               	movwf	(___flmul@prod)
  6424  07BE  00D0               
  6425                           	line	190
  6426                           	
  6427                           l2348:	
  6428  07BF                     	clrf	(___flmul@sign)
  6429  07BF  01C9               	line	191
  6430                           	goto	l716
  6431  07C0  2FDD               	line	192
  6432                           	
  6433                           l717:	
  6434  07C1                     	line	194
  6435                           	
  6436                           l2350:	
  6437  07C1                     	bcf	status, 5	;RP0=0, select bank0
  6438  07C1  1283               	bcf	status, 6	;RP1=0, select bank0
  6439  07C2  1303               	movf	(___flmul@temp),w
  6440  07C3  0854               	movwf	(??___flmul+0)+0
  6441  07C4  00C4               	movf	(??___flmul+0)+0,w
  6442  07C5  0844               	movwf	(___flmul@bexp)
  6443  07C6  00CF               	line	195
  6444                           	movlw	0FFh
  6445  07C7  30FF               	andwf	(___flmul@prod),f
  6446  07C8  05D0               	movlw	0FFh
  6447  07C9  30FF               	andwf	(___flmul@prod+1),f
  6448  07CA  05D1               	movlw	07Fh
  6449  07CB  307F               	andwf	(___flmul@prod+2),f
  6450  07CC  05D2               	movlw	0
  6451  07CD  3000               	andwf	(___flmul@prod+3),f
  6452  07CE  05D3               	line	196
  6453                           	
  6454                           l2352:	
  6455  07CF                     	btfss	(___flmul@bexp),(0)&7
  6456  07CF  1C4F               	goto	u3081
  6457  07D0  2FD2               	goto	u3080
  6458  07D1  2FD3               u3081:
  6459  07D2                     	goto	l2356
  6460  07D2  2FD5               u3080:
  6461  07D3                     	line	197
  6462                           	
  6463                           l2354:	
  6464  07D3                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  6465  07D3  17D2               	goto	l2356
  6466  07D4  2FD5               	line	198
  6467                           	
  6468                           l719:	
  6469  07D5                     	line	199
  6470                           	
  6471                           l2356:	
  6472  07D5                     	movf	(___flmul@bexp),w
  6473  07D5  084F               	movwf	(??___flmul+0)+0
  6474  07D6  00C4               	clrc
  6475  07D7  1003               	rrf	(??___flmul+0)+0,w
  6476  07D8  0C44               	movwf	(??___flmul+1)+0
  6477  07D9  00C5               	movf	(??___flmul+1)+0,w
  6478  07DA  0845               	movwf	0+(___flmul@prod)+03h
  6479  07DB  00D3               	goto	l716
  6480  07DC  2FDD               	line	200
  6481                           	
  6482                           l718:	
  6483  07DD                     	
  6484                           l716:	
  6485  07DD                     	line	201
  6486                           	movf	(___flmul@sign),w
  6487  07DD  0849               	movwf	(??___flmul+0)+0
  6488  07DE  00C4               	movf	(??___flmul+0)+0,w
  6489  07DF  0844               	iorwf	0+(___flmul@prod)+03h,f
  6490  07E0  04D3               	line	203
  6491                           	
  6492                           l2358:	
  6493  07E1                     	movf	(___flmul@prod+3),w
  6494  07E1  0853               	movwf	(?___flmul+3)
  6495  07E2  00BF               	movf	(___flmul@prod+2),w
  6496  07E3  0852               	movwf	(?___flmul+2)
  6497  07E4  00BE               	movf	(___flmul@prod+1),w
  6498  07E5  0851               	movwf	(?___flmul+1)
  6499  07E6  00BD               	movf	(___flmul@prod),w
  6500  07E7  0850               	movwf	(?___flmul)
  6501  07E8  00BC               
  6502                           	goto	l704
  6503  07E9  2FEA               	
  6504                           l2360:	
  6505  07EA                     	line	205
  6506                           	
  6507                           l704:	
  6508  07EA                     	return
  6509  07EA  0008               	opt stack 0
  6510                           GLOBAL	__end_of___flmul
  6511                           	__end_of___flmul:
  6512  07EB                     	signat	___flmul,8316
  6513                           	global	__Umul8_16
  6514                           
  6515 ;; *************** function __Umul8_16 *****************
  6516 ;; Defined at:
  6517 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  multiplier      1    wreg     unsigned char 
  6520 ;;  multiplicand    1    0[COMMON] unsigned char 
  6521 ;; Auto vars:     Size  Location     Type
  6522 ;;  multiplier      1    8[COMMON] unsigned char 
  6523 ;;  word_mpld       2    6[COMMON] unsigned int 
  6524 ;;  product         2    4[COMMON] unsigned int 
  6525 ;; Return value:  Size  Location     Type
  6526 ;;                  2    0[COMMON] unsigned int 
  6527 ;; Registers used:
  6528 ;;		wreg, status,2, status,0
  6529 ;; Tracked objects:
  6530 ;;		On entry : 0/0
  6531 ;;		On exit  : 0/0
  6532 ;;		Unchanged: 0/0
  6533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6534 ;;      Params:         2       0       0       0       0
  6535 ;;      Locals:         5       0       0       0       0
  6536 ;;      Temps:          2       0       0       0       0
  6537 ;;      Totals:         9       0       0       0       0
  6538 ;;Total ram usage:        9 bytes
  6539 ;; Hardware stack levels used:    1
  6540 ;; This function calls:
  6541 ;;		Nothing
  6542 ;; This function is called by:
  6543 ;;		___flmul
  6544 ;; This function uses a non-reentrant model
  6545 ;;
  6546                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  6547                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6548                           	line	4
  6549                           global __ptext19
  6550                           __ptext19:	;psect for function __Umul8_16
  6551  0A6A                     psect	text19
  6552                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6553                           	line	4
  6554                           	global	__size_of__Umul8_16
  6555                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  6556  002A                     	
  6557                           __Umul8_16:	
  6558  0A6A                     ;incstack = 0
  6559                           	opt	stack 6
  6560                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6561                           ;__Umul8_16@multiplier stored from wreg
  6562                           	movwf	(__Umul8_16@multiplier)
  6563  0A6A  00F8               	line	5
  6564                           	
  6565                           l1858:	
  6566  0A6B                     	clrf	(__Umul8_16@product)
  6567  0A6B  01F4               	clrf	(__Umul8_16@product+1)
  6568  0A6C  01F5               	line	6
  6569                           	
  6570                           l1860:	
  6571  0A6D                     	movf	(__Umul8_16@multiplicand),w
  6572  0A6D  0870               	movwf	(??__Umul8_16+0)+0
  6573  0A6E  00F2               	clrf	(??__Umul8_16+0)+0+1
  6574  0A6F  01F3               	movf	0+(??__Umul8_16+0)+0,w
  6575  0A70  0872               	movwf	(__Umul8_16@word_mpld)
  6576  0A71  00F6               	movf	1+(??__Umul8_16+0)+0,w
  6577  0A72  0873               	movwf	(__Umul8_16@word_mpld+1)
  6578  0A73  00F7               	goto	l1862
  6579  0A74  2A75               	line	50
  6580                           	
  6581                           l741:	
  6582  0A75                     	line	51
  6583                           	
  6584                           l1862:	
  6585  0A75                     	btfss	(__Umul8_16@multiplier),(0)&7
  6586  0A75  1C78               	goto	u1991
  6587  0A76  2A78               	goto	u1990
  6588  0A77  2A79               u1991:
  6589  0A78                     	goto	l742
  6590  0A78  2A7F               u1990:
  6591  0A79                     	line	52
  6592                           	
  6593                           l1864:	
  6594  0A79                     	movf	(__Umul8_16@word_mpld),w
  6595  0A79  0876               	addwf	(__Umul8_16@product),f
  6596  0A7A  07F4               	skipnc
  6597  0A7B  1803               	incf	(__Umul8_16@product+1),f
  6598  0A7C  0AF5               	movf	(__Umul8_16@word_mpld+1),w
  6599  0A7D  0877               	addwf	(__Umul8_16@product+1),f
  6600  0A7E  07F5               	line	53
  6601                           	
  6602                           l742:	
  6603  0A7F                     	line	54
  6604                           	movlw	01h
  6605  0A7F  3001               	
  6606                           u2005:
  6607  0A80                     	clrc
  6608  0A80  1003               	rlf	(__Umul8_16@word_mpld),f
  6609  0A81  0DF6               	rlf	(__Umul8_16@word_mpld+1),f
  6610  0A82  0DF7               	addlw	-1
  6611  0A83  3EFF               	skipz
  6612  0A84  1D03               	goto	u2005
  6613  0A85  2A80               	line	55
  6614                           	clrc
  6615  0A86  1003               	rrf	(__Umul8_16@multiplier),f
  6616  0A87  0CF8               
  6617                           	line	56
  6618                           	
  6619                           l1866:	
  6620  0A88                     	movf	((__Umul8_16@multiplier)),w
  6621  0A88  0878               	btfss	status,2
  6622  0A89  1D03               	goto	u2011
  6623  0A8A  2A8C               	goto	u2010
  6624  0A8B  2A8D               u2011:
  6625  0A8C                     	goto	l1862
  6626  0A8C  2A75               u2010:
  6627  0A8D                     	goto	l1868
  6628  0A8D  2A8E               	
  6629                           l743:	
  6630  0A8E                     	line	59
  6631                           	
  6632                           l1868:	
  6633  0A8E                     	movf	(__Umul8_16@product+1),w
  6634  0A8E  0875               	movwf	(?__Umul8_16+1)
  6635  0A8F  00F1               	movf	(__Umul8_16@product),w
  6636  0A90  0874               	movwf	(?__Umul8_16)
  6637  0A91  00F0               	goto	l744
  6638  0A92  2A93               	
  6639                           l1870:	
  6640  0A93                     	line	60
  6641                           	
  6642                           l744:	
  6643  0A93                     	return
  6644  0A93  0008               	opt stack 0
  6645                           GLOBAL	__end_of__Umul8_16
  6646                           	__end_of__Umul8_16:
  6647  0A94                     	signat	__Umul8_16,8314
  6648                           	global	___fladd
  6649                           
  6650 ;; *************** function ___fladd *****************
  6651 ;; Defined at:
  6652 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  6653 ;; Parameters:    Size  Location     Type
  6654 ;;  b               4    4[BANK0 ] unsigned int 
  6655 ;;  a               4    8[BANK0 ] unsigned int 
  6656 ;; Auto vars:     Size  Location     Type
  6657 ;;  grs             1   27[BANK0 ] unsigned char 
  6658 ;;  bexp            1   26[BANK0 ] unsigned char 
  6659 ;;  aexp            1   25[BANK0 ] unsigned char 
  6660 ;;  signs           1   24[BANK0 ] unsigned char 
  6661 ;; Return value:  Size  Location     Type
  6662 ;;                  4    4[BANK0 ] unsigned char 
  6663 ;; Registers used:
  6664 ;;		wreg, status,2, status,0, btemp+1
  6665 ;; Tracked objects:
  6666 ;;		On entry : 0/0
  6667 ;;		On exit  : 0/0
  6668 ;;		Unchanged: 0/0
  6669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6670 ;;      Params:         0       8       0       0       0
  6671 ;;      Locals:         0       4       0       0       0
  6672 ;;      Temps:          0      12       0       0       0
  6673 ;;      Totals:         0      24       0       0       0
  6674 ;;Total ram usage:       24 bytes
  6675 ;; Hardware stack levels used:    1
  6676 ;; This function calls:
  6677 ;;		Nothing
  6678 ;; This function is called by:
  6679 ;;		_main
  6680 ;; This function uses a non-reentrant model
  6681 ;;
  6682                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  6683                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  6684                           	line	10
  6685                           global __ptext20
  6686                           __ptext20:	;psect for function ___fladd
  6687  01BA                     psect	text20
  6688                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  6689                           	line	10
  6690                           	global	__size_of___fladd
  6691                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  6692  02BC                     	
  6693                           ___fladd:	
  6694  01BA                     ;incstack = 0
  6695                           	opt	stack 7
  6696                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6697                           	line	21
  6698                           	
  6699                           l2028:	
  6700  01BA                     	bcf	status, 5	;RP0=0, select bank0
  6701  01BA  1283               	bcf	status, 6	;RP1=0, select bank0
  6702  01BB  1303               	movf	0+(___fladd@b)+03h,w
  6703  01BC  0827               	andlw	080h
  6704  01BD  3980               	movwf	(??___fladd+0)+0
  6705  01BE  00AC               	movf	(??___fladd+0)+0,w
  6706  01BF  082C               	movwf	(___fladd@signs)
  6707  01C0  00B8               	line	22
  6708                           	
  6709                           l2030:	
  6710  01C1                     	movf	0+(___fladd@b)+03h,w
  6711  01C1  0827               	movwf	(??___fladd+0)+0
  6712  01C2  00AC               	addwf	(??___fladd+0)+0,w
  6713  01C3  072C               	movwf	(??___fladd+1)+0
  6714  01C4  00AD               	movf	(??___fladd+1)+0,w
  6715  01C5  082D               	movwf	(___fladd@bexp)
  6716  01C6  00BA               	line	23
  6717                           	
  6718                           l2032:	
  6719  01C7                     	btfss	0+(___fladd@b)+02h,(7)&7
  6720  01C7  1FA6               	goto	u2261
  6721  01C8  29CA               	goto	u2260
  6722  01C9  29CB               u2261:
  6723  01CA                     	goto	l2036
  6724  01CA  29CD               u2260:
  6725  01CB                     	line	24
  6726                           	
  6727                           l2034:	
  6728  01CB                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  6729  01CB  143A               	goto	l2036
  6730  01CC  29CD               	line	25
  6731                           	
  6732                           l600:	
  6733  01CD                     	line	28
  6734                           	
  6735                           l2036:	
  6736  01CD                     	movf	((___fladd@bexp)),w
  6737  01CD  083A               	btfsc	status,2
  6738  01CE  1903               	goto	u2271
  6739  01CF  29D1               	goto	u2270
  6740  01D0  29D2               u2271:
  6741  01D1                     	goto	l2046
  6742  01D1  29E3               u2270:
  6743  01D2                     	line	30
  6744                           	
  6745                           l2038:	
  6746  01D2                     		incf	((___fladd@bexp)),w
  6747  01D2  0A3A               	btfss	status,2
  6748  01D3  1D03               	goto	u2281
  6749  01D4  29D6               	goto	u2280
  6750  01D5  29D7               u2281:
  6751  01D6                     	goto	l2042
  6752  01D6  29E0               u2280:
  6753  01D7                     	line	32
  6754                           	
  6755                           l2040:	
  6756  01D7                     	movlw	0x0
  6757  01D7  3000               	movwf	(___fladd@b+3)
  6758  01D8  00A7               	movlw	0x0
  6759  01D9  3000               	movwf	(___fladd@b+2)
  6760  01DA  00A6               	movlw	0x0
  6761  01DB  3000               	movwf	(___fladd@b+1)
  6762  01DC  00A5               	movlw	0x0
  6763  01DD  3000               	movwf	(___fladd@b)
  6764  01DE  00A4               
  6765                           	goto	l2042
  6766  01DF  29E0               	line	33
  6767                           	
  6768                           l602:	
  6769  01E0                     	line	35
  6770                           	
  6771                           l2042:	
  6772  01E0                     	bsf	(___fladd@b)+(23/8),(23)&7
  6773  01E0  17A6               	line	37
  6774                           	
  6775                           l2044:	
  6776  01E1                     	clrf	0+(___fladd@b)+03h
  6777  01E1  01A7               	line	38
  6778                           	goto	l2048
  6779  01E2  29EC               	line	39
  6780                           	
  6781                           l601:	
  6782  01E3                     	line	41
  6783                           	
  6784                           l2046:	
  6785  01E3                     	movlw	0x0
  6786  01E3  3000               	movwf	(___fladd@b+3)
  6787  01E4  00A7               	movlw	0x0
  6788  01E5  3000               	movwf	(___fladd@b+2)
  6789  01E6  00A6               	movlw	0x0
  6790  01E7  3000               	movwf	(___fladd@b+1)
  6791  01E8  00A5               	movlw	0x0
  6792  01E9  3000               	movwf	(___fladd@b)
  6793  01EA  00A4               
  6794                           	goto	l2048
  6795  01EB  29EC               	line	42
  6796                           	
  6797                           l603:	
  6798  01EC                     	line	44
  6799                           	
  6800                           l2048:	
  6801  01EC                     	movf	0+(___fladd@a)+03h,w
  6802  01EC  082B               	andlw	080h
  6803  01ED  3980               	movwf	(??___fladd+0)+0
  6804  01EE  00AC               	movf	(??___fladd+0)+0,w
  6805  01EF  082C               	movwf	(___fladd@aexp)
  6806  01F0  00B9               	line	46
  6807                           	
  6808                           l2050:	
  6809  01F1                     	movf	(___fladd@aexp),w
  6810  01F1  0839               	xorwf	(___fladd@signs),w
  6811  01F2  0638               	skipnz
  6812  01F3  1903               	goto	u2291
  6813  01F4  29F6               	goto	u2290
  6814  01F5  29F7               u2291:
  6815  01F6                     	goto	l2054
  6816  01F6  29F9               u2290:
  6817  01F7                     	line	47
  6818                           	
  6819                           l2052:	
  6820  01F7                     	bsf	(___fladd@signs)+(6/8),(6)&7
  6821  01F7  1738               	goto	l2054
  6822  01F8  29F9               	line	48
  6823                           	
  6824                           l604:	
  6825  01F9                     	line	49
  6826                           	
  6827                           l2054:	
  6828  01F9                     	movf	0+(___fladd@a)+03h,w
  6829  01F9  082B               	movwf	(??___fladd+0)+0
  6830  01FA  00AC               	addwf	(??___fladd+0)+0,w
  6831  01FB  072C               	movwf	(??___fladd+1)+0
  6832  01FC  00AD               	movf	(??___fladd+1)+0,w
  6833  01FD  082D               	movwf	(___fladd@aexp)
  6834  01FE  00B9               	line	50
  6835                           	
  6836                           l2056:	
  6837  01FF                     	btfss	0+(___fladd@a)+02h,(7)&7
  6838  01FF  1FAA               	goto	u2301
  6839  0200  2A02               	goto	u2300
  6840  0201  2A03               u2301:
  6841  0202                     	goto	l2060
  6842  0202  2A05               u2300:
  6843  0203                     	line	51
  6844                           	
  6845                           l2058:	
  6846  0203                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  6847  0203  1439               	goto	l2060
  6848  0204  2A05               	line	52
  6849                           	
  6850                           l605:	
  6851  0205                     	line	55
  6852                           	
  6853                           l2060:	
  6854  0205                     	movf	((___fladd@aexp)),w
  6855  0205  0839               	btfsc	status,2
  6856  0206  1903               	goto	u2311
  6857  0207  2A09               	goto	u2310
  6858  0208  2A0A               u2311:
  6859  0209                     	goto	l2070
  6860  0209  2A1B               u2310:
  6861  020A                     	line	57
  6862                           	
  6863                           l2062:	
  6864  020A                     		incf	((___fladd@aexp)),w
  6865  020A  0A39               	btfss	status,2
  6866  020B  1D03               	goto	u2321
  6867  020C  2A0E               	goto	u2320
  6868  020D  2A0F               u2321:
  6869  020E                     	goto	l2066
  6870  020E  2A18               u2320:
  6871  020F                     	line	59
  6872                           	
  6873                           l2064:	
  6874  020F                     	movlw	0x0
  6875  020F  3000               	movwf	(___fladd@a+3)
  6876  0210  00AB               	movlw	0x0
  6877  0211  3000               	movwf	(___fladd@a+2)
  6878  0212  00AA               	movlw	0x0
  6879  0213  3000               	movwf	(___fladd@a+1)
  6880  0214  00A9               	movlw	0x0
  6881  0215  3000               	movwf	(___fladd@a)
  6882  0216  00A8               
  6883                           	goto	l2066
  6884  0217  2A18               	line	60
  6885                           	
  6886                           l607:	
  6887  0218                     	line	62
  6888                           	
  6889                           l2066:	
  6890  0218                     	bsf	(___fladd@a)+(23/8),(23)&7
  6891  0218  17AA               	line	64
  6892                           	
  6893                           l2068:	
  6894  0219                     	clrf	0+(___fladd@a)+03h
  6895  0219  01AB               	line	65
  6896                           	goto	l608
  6897  021A  2A23               	line	66
  6898                           	
  6899                           l606:	
  6900  021B                     	line	68
  6901                           	
  6902                           l2070:	
  6903  021B                     	movlw	0x0
  6904  021B  3000               	movwf	(___fladd@a+3)
  6905  021C  00AB               	movlw	0x0
  6906  021D  3000               	movwf	(___fladd@a+2)
  6907  021E  00AA               	movlw	0x0
  6908  021F  3000               	movwf	(___fladd@a+1)
  6909  0220  00A9               	movlw	0x0
  6910  0221  3000               	movwf	(___fladd@a)
  6911  0222  00A8               
  6912                           	line	69
  6913                           	
  6914                           l608:	
  6915  0223                     	line	75
  6916                           	movf	(___fladd@bexp),w
  6917  0223  083A               	subwf	(___fladd@aexp),w
  6918  0224  0239               	skipnc
  6919  0225  1803               	goto	u2331
  6920  0226  2A28               	goto	u2330
  6921  0227  2A29               u2331:
  6922  0228                     	goto	l2106
  6923  0228  2A6F               u2330:
  6924  0229                     	line	77
  6925                           	
  6926                           l2072:	
  6927  0229                     	btfss	(___fladd@signs),(6)&7
  6928  0229  1F38               	goto	u2341
  6929  022A  2A2C               	goto	u2340
  6930  022B  2A2D               u2341:
  6931  022C                     	goto	l2076
  6932  022C  2A32               u2340:
  6933  022D                     	line	78
  6934                           	
  6935                           l2074:	
  6936  022D                     	movlw	low(080h)
  6937  022D  3080               	movwf	(??___fladd+0)+0
  6938  022E  00AC               	movf	(??___fladd+0)+0,w
  6939  022F  082C               	xorwf	(___fladd@signs),f
  6940  0230  06B8               	goto	l2076
  6941  0231  2A32               	line	79
  6942                           	
  6943                           l610:	
  6944  0232                     	line	81
  6945                           	
  6946                           l2076:	
  6947  0232                     	movf	(___fladd@bexp),w
  6948  0232  083A               	movwf	(??___fladd+0)+0
  6949  0233  00AC               	movf	(??___fladd+0)+0,w
  6950  0234  082C               	movwf	(___fladd@grs)
  6951  0235  00BB               	line	82
  6952                           	
  6953                           l2078:	
  6954  0236                     	movf	(___fladd@aexp),w
  6955  0236  0839               	movwf	(??___fladd+0)+0
  6956  0237  00AC               	movf	(??___fladd+0)+0,w
  6957  0238  082C               	movwf	(___fladd@bexp)
  6958  0239  00BA               	line	83
  6959                           	
  6960                           l2080:	
  6961  023A                     	movf	(___fladd@grs),w
  6962  023A  083B               	movwf	(??___fladd+0)+0
  6963  023B  00AC               	movf	(??___fladd+0)+0,w
  6964  023C  082C               	movwf	(___fladd@aexp)
  6965  023D  00B9               	line	84
  6966                           	
  6967                           l2082:	
  6968  023E                     	movf	(___fladd@b),w
  6969  023E  0824               	movwf	(??___fladd+0)+0
  6970  023F  00AC               	movf	(??___fladd+0)+0,w
  6971  0240  082C               	movwf	(___fladd@grs)
  6972  0241  00BB               	line	85
  6973                           	
  6974                           l2084:	
  6975  0242                     	movf	(___fladd@a),w
  6976  0242  0828               	movwf	(??___fladd+0)+0
  6977  0243  00AC               	movf	(??___fladd+0)+0,w
  6978  0244  082C               	movwf	(___fladd@b)
  6979  0245  00A4               	line	86
  6980                           	
  6981                           l2086:	
  6982  0246                     	movf	(___fladd@grs),w
  6983  0246  083B               	movwf	(??___fladd+0)+0
  6984  0247  00AC               	movf	(??___fladd+0)+0,w
  6985  0248  082C               	movwf	(___fladd@a)
  6986  0249  00A8               	line	87
  6987                           	
  6988                           l2088:	
  6989  024A                     	movf	0+(___fladd@b)+01h,w
  6990  024A  0825               	movwf	(??___fladd+0)+0
  6991  024B  00AC               	movf	(??___fladd+0)+0,w
  6992  024C  082C               	movwf	(___fladd@grs)
  6993  024D  00BB               	line	88
  6994                           	
  6995                           l2090:	
  6996  024E                     	movf	0+(___fladd@a)+01h,w
  6997  024E  0829               	movwf	(??___fladd+0)+0
  6998  024F  00AC               	movf	(??___fladd+0)+0,w
  6999  0250  082C               	movwf	0+(___fladd@b)+01h
  7000  0251  00A5               	line	89
  7001                           	
  7002                           l2092:	
  7003  0252                     	movf	(___fladd@grs),w
  7004  0252  083B               	movwf	(??___fladd+0)+0
  7005  0253  00AC               	movf	(??___fladd+0)+0,w
  7006  0254  082C               	movwf	0+(___fladd@a)+01h
  7007  0255  00A9               	line	90
  7008                           	
  7009                           l2094:	
  7010  0256                     	movf	0+(___fladd@b)+02h,w
  7011  0256  0826               	movwf	(??___fladd+0)+0
  7012  0257  00AC               	movf	(??___fladd+0)+0,w
  7013  0258  082C               	movwf	(___fladd@grs)
  7014  0259  00BB               	line	91
  7015                           	
  7016                           l2096:	
  7017  025A                     	movf	0+(___fladd@a)+02h,w
  7018  025A  082A               	movwf	(??___fladd+0)+0
  7019  025B  00AC               	movf	(??___fladd+0)+0,w
  7020  025C  082C               	movwf	0+(___fladd@b)+02h
  7021  025D  00A6               	line	92
  7022                           	
  7023                           l2098:	
  7024  025E                     	movf	(___fladd@grs),w
  7025  025E  083B               	movwf	(??___fladd+0)+0
  7026  025F  00AC               	movf	(??___fladd+0)+0,w
  7027  0260  082C               	movwf	0+(___fladd@a)+02h
  7028  0261  00AA               	line	93
  7029                           	
  7030                           l2100:	
  7031  0262                     	movf	0+(___fladd@b)+03h,w
  7032  0262  0827               	movwf	(??___fladd+0)+0
  7033  0263  00AC               	movf	(??___fladd+0)+0,w
  7034  0264  082C               	movwf	(___fladd@grs)
  7035  0265  00BB               	line	94
  7036                           	
  7037                           l2102:	
  7038  0266                     	movf	0+(___fladd@a)+03h,w
  7039  0266  082B               	movwf	(??___fladd+0)+0
  7040  0267  00AC               	movf	(??___fladd+0)+0,w
  7041  0268  082C               	movwf	0+(___fladd@b)+03h
  7042  0269  00A7               	line	95
  7043                           	
  7044                           l2104:	
  7045  026A                     	movf	(___fladd@grs),w
  7046  026A  083B               	movwf	(??___fladd+0)+0
  7047  026B  00AC               	movf	(??___fladd+0)+0,w
  7048  026C  082C               	movwf	0+(___fladd@a)+03h
  7049  026D  00AB               	goto	l2106
  7050  026E  2A6F               	line	96
  7051                           	
  7052                           l609:	
  7053  026F                     	line	98
  7054                           	
  7055                           l2106:	
  7056  026F                     	clrf	(___fladd@grs)
  7057  026F  01BB               	line	100
  7058                           	
  7059                           l2108:	
  7060  0270                     	movf	(___fladd@bexp),w
  7061  0270  083A               	movwf	(??___fladd+0)+0
  7062  0271  00AC               	clrf	(??___fladd+0)+0+1
  7063  0272  01AD               	comf	(??___fladd+0)+0,f
  7064  0273  09AC               	comf	(??___fladd+0)+1,f
  7065  0274  09AD               	incf	(??___fladd+0)+0,f
  7066  0275  0AAC               	skipnz
  7067  0276  1903               	incf	(??___fladd+0)+1,f
  7068  0277  0AAD               	movf	(___fladd@aexp),w
  7069  0278  0839               	addwf	0+(??___fladd+0)+0,w
  7070  0279  072C               	movwf	(??___fladd+2)+0
  7071  027A  00AE               	movf	1+(??___fladd+0)+0,w
  7072  027B  082D               	skipnc
  7073  027C  1803               	incf	1+(??___fladd+0)+0,w
  7074  027D  0A2D               	movwf	((??___fladd+2)+0)+1
  7075  027E  00AF               	movf	1+(??___fladd+2)+0,w
  7076  027F  082F               	xorlw	80h
  7077  0280  3A80               	movwf	btemp+1
  7078  0281  00FF               	movlw	(0)^80h
  7079  0282  3080               	subwf	btemp+1,w
  7080  0283  027F               	skipz
  7081  0284  1D03               	goto	u2355
  7082  0285  2A88               	movlw	01Ah
  7083  0286  301A               	subwf	0+(??___fladd+2)+0,w
  7084  0287  022E               u2355:
  7085  0288                     
  7086                           	skipc
  7087  0288  1C03               	goto	u2351
  7088  0289  2A8B               	goto	u2350
  7089  028A  2A8C               u2351:
  7090  028B                     	goto	l2124
  7091  028B  2ACD               u2350:
  7092  028C                     	line	101
  7093                           	
  7094                           l2110:	
  7095  028C                     	bcf	status, 5	;RP0=0, select bank0
  7096  028C  1283               	bcf	status, 6	;RP1=0, select bank0
  7097  028D  1303               	movf	(___fladd@b+3),w
  7098  028E  0827               	iorwf	(___fladd@b+2),w
  7099  028F  0426               	iorwf	(___fladd@b+1),w
  7100  0290  0425               	iorwf	(___fladd@b),w
  7101  0291  0424               	skipz
  7102  0292  1D03               	goto	u2361
  7103  0293  2A95               	goto	u2360
  7104  0294  2A97               u2361:
  7105  0295                     	movlw	1
  7106  0295  3001               	goto	u2370
  7107  0296  2A98               u2360:
  7108  0297                     	movlw	0
  7109  0297  3000               u2370:
  7110  0298                     	movwf	(??___fladd+0)+0
  7111  0298  00AC               	movf	(??___fladd+0)+0,w
  7112  0299  082C               	movwf	(___fladd@grs)
  7113  029A  00BB               	line	102
  7114                           	movlw	high highword(0)
  7115  029B  3000               	movwf	(___fladd@b+3)
  7116  029C  00A7               	movlw	low highword(0)
  7117  029D  3000               	movwf	(___fladd@b+2)
  7118  029E  00A6               	movlw	high(0)
  7119  029F  3000               	movwf	(___fladd@b+1)
  7120  02A0  00A5               	movlw	low(0)
  7121  02A1  3000               	movwf	(___fladd@b)
  7122  02A2  00A4               
  7123                           	line	103
  7124                           	movf	(___fladd@aexp),w
  7125  02A3  0839               	movwf	(??___fladd+0)+0
  7126  02A4  00AC               	movf	(??___fladd+0)+0,w
  7127  02A5  082C               	movwf	(___fladd@bexp)
  7128  02A6  00BA               	line	104
  7129                           	goto	l612
  7130  02A7  2AD6               	line	105
  7131                           	
  7132                           l611:	
  7133  02A8                     	line	106
  7134                           	goto	l2124
  7135  02A8  2ACD               	
  7136                           l614:	
  7137  02A9                     	line	109
  7138                           	btfss	(___fladd@grs),(0)&7
  7139  02A9  1C3B               	goto	u2381
  7140  02AA  2AAC               	goto	u2380
  7141  02AB  2AAD               u2381:
  7142  02AC                     	goto	l2114
  7143  02AC  2AB6               u2380:
  7144  02AD                     	line	110
  7145                           	
  7146                           l2112:	
  7147  02AD                     	movf	(___fladd@grs),w
  7148  02AD  083B               	movwf	(??___fladd+0)+0
  7149  02AE  00AC               	clrc
  7150  02AF  1003               	rrf	(??___fladd+0)+0,w
  7151  02B0  0C2C               	iorlw	01h
  7152  02B1  3801               	movwf	(??___fladd+1)+0
  7153  02B2  00AD               	movf	(??___fladd+1)+0,w
  7154  02B3  082D               	movwf	(___fladd@grs)
  7155  02B4  00BB               	line	111
  7156                           	goto	l2116
  7157  02B5  2AB9               	line	112
  7158                           	
  7159                           l615:	
  7160  02B6                     	line	113
  7161                           	
  7162                           l2114:	
  7163  02B6                     	clrc
  7164  02B6  1003               	rrf	(___fladd@grs),f
  7165  02B7  0CBB               
  7166                           	goto	l2116
  7167  02B8  2AB9               	line	114
  7168                           	
  7169                           l616:	
  7170  02B9                     	line	115
  7171                           	
  7172                           l2116:	
  7173  02B9                     	btfss	(___fladd@b),(0)&7
  7174  02B9  1C24               	goto	u2391
  7175  02BA  2ABC               	goto	u2390
  7176  02BB  2ABD               u2391:
  7177  02BC                     	goto	l2120
  7178  02BC  2ABF               u2390:
  7179  02BD                     	line	116
  7180                           	
  7181                           l2118:	
  7182  02BD                     	bsf	(___fladd@grs)+(7/8),(7)&7
  7183  02BD  17BB               	goto	l2120
  7184  02BE  2ABF               	line	117
  7185                           	
  7186                           l617:	
  7187  02BF                     	line	118
  7188                           	
  7189                           l2120:	
  7190  02BF                     	movlw	01h
  7191  02BF  3001               	movwf	(??___fladd+0)+0
  7192  02C0  00AC               u2405:
  7193  02C1                     	rlf	(___fladd@b+3),w
  7194  02C1  0D27               	rrf	(___fladd@b+3),f
  7195  02C2  0CA7               	rrf	(___fladd@b+2),f
  7196  02C3  0CA6               	rrf	(___fladd@b+1),f
  7197  02C4  0CA5               	rrf	(___fladd@b),f
  7198  02C5  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  7199  02C6  0BAC               	goto	u2405
  7200  02C7  2AC1               
  7201                           	line	119
  7202                           	
  7203                           l2122:	
  7204  02C8                     	movlw	low(01h)
  7205  02C8  3001               	movwf	(??___fladd+0)+0
  7206  02C9  00AC               	movf	(??___fladd+0)+0,w
  7207  02CA  082C               	addwf	(___fladd@bexp),f
  7208  02CB  07BA               	goto	l2124
  7209  02CC  2ACD               	line	120
  7210                           	
  7211                           l613:	
  7212  02CD                     	line	106
  7213                           	
  7214                           l2124:	
  7215  02CD                     	bcf	status, 5	;RP0=0, select bank0
  7216  02CD  1283               	bcf	status, 6	;RP1=0, select bank0
  7217  02CE  1303               	movf	(___fladd@aexp),w
  7218  02CF  0839               	subwf	(___fladd@bexp),w
  7219  02D0  023A               	skipc
  7220  02D1  1C03               	goto	u2411
  7221  02D2  2AD4               	goto	u2410
  7222  02D3  2AD5               u2411:
  7223  02D4                     	goto	l614
  7224  02D4  2AA9               u2410:
  7225  02D5                     	goto	l612
  7226  02D5  2AD6               	
  7227                           l618:	
  7228  02D6                     	line	121
  7229                           	
  7230                           l612:	
  7231  02D6                     	line	124
  7232                           	btfsc	(___fladd@signs),(6)&7
  7233  02D6  1B38               	goto	u2421
  7234  02D7  2AD9               	goto	u2420
  7235  02D8  2ADA               u2421:
  7236  02D9                     	goto	l2150
  7237  02D9  2B29               u2420:
  7238  02DA                     	line	127
  7239                           	
  7240                           l2126:	
  7241  02DA                     	movf	((___fladd@bexp)),w
  7242  02DA  083A               	btfss	status,2
  7243  02DB  1D03               	goto	u2431
  7244  02DC  2ADE               	goto	u2430
  7245  02DD  2ADF               u2431:
  7246  02DE                     	goto	l2132
  7247  02DE  2AE9               u2430:
  7248  02DF                     	line	128
  7249                           	
  7250                           l2128:	
  7251  02DF                     	movlw	0x0
  7252  02DF  3000               	movwf	(?___fladd+3)
  7253  02E0  00A7               	movlw	0x0
  7254  02E1  3000               	movwf	(?___fladd+2)
  7255  02E2  00A6               	movlw	0x0
  7256  02E3  3000               	movwf	(?___fladd+1)
  7257  02E4  00A5               	movlw	0x0
  7258  02E5  3000               	movwf	(?___fladd)
  7259  02E6  00A4               
  7260                           	goto	l621
  7261  02E7  2C75               	
  7262                           l2130:	
  7263  02E8                     	goto	l621
  7264  02E8  2C75               	line	129
  7265                           	
  7266                           l620:	
  7267  02E9                     	line	132
  7268                           	
  7269                           l2132:	
  7270  02E9                     	movf	(___fladd@a),w
  7271  02E9  0828               	addwf	(___fladd@b),f
  7272  02EA  07A4               	movf	(___fladd@a+1),w
  7273  02EB  0829               	clrz
  7274  02EC  1103               	skipnc
  7275  02ED  1803               	addlw	1
  7276  02EE  3E01               	skipnz
  7277  02EF  1903               	goto	u2441
  7278  02F0  2AF2               	addwf	(___fladd@b+1),f
  7279  02F1  07A5               u2441:
  7280  02F2                     	movf	(___fladd@a+2),w
  7281  02F2  082A               	clrz
  7282  02F3  1103               	skipnc
  7283  02F4  1803               	addlw	1
  7284  02F5  3E01               	skipnz
  7285  02F6  1903               	goto	u2442
  7286  02F7  2AF9               	addwf	(___fladd@b+2),f
  7287  02F8  07A6               u2442:
  7288  02F9                     	movf	(___fladd@a+3),w
  7289  02F9  082B               	clrz
  7290  02FA  1103               	skipnc
  7291  02FB  1803               	addlw	1
  7292  02FC  3E01               	skipnz
  7293  02FD  1903               	goto	u2443
  7294  02FE  2B00               	addwf	(___fladd@b+3),f
  7295  02FF  07A7               u2443:
  7296  0300                     
  7297                           	line	134
  7298                           	
  7299                           l2134:	
  7300  0300                     	btfss	(___fladd@b+3),(24)&7
  7301  0300  1C27               	goto	u2451
  7302  0301  2B03               	goto	u2450
  7303  0302  2B04               u2451:
  7304  0303                     	goto	l2184
  7305  0303  2BF2               u2450:
  7306  0304                     	line	135
  7307                           	
  7308                           l2136:	
  7309  0304                     	btfss	(___fladd@grs),(0)&7
  7310  0304  1C3B               	goto	u2461
  7311  0305  2B07               	goto	u2460
  7312  0306  2B08               u2461:
  7313  0307                     	goto	l2140
  7314  0307  2B11               u2460:
  7315  0308                     	line	136
  7316                           	
  7317                           l2138:	
  7318  0308                     	movf	(___fladd@grs),w
  7319  0308  083B               	movwf	(??___fladd+0)+0
  7320  0309  00AC               	clrc
  7321  030A  1003               	rrf	(??___fladd+0)+0,w
  7322  030B  0C2C               	iorlw	01h
  7323  030C  3801               	movwf	(??___fladd+1)+0
  7324  030D  00AD               	movf	(??___fladd+1)+0,w
  7325  030E  082D               	movwf	(___fladd@grs)
  7326  030F  00BB               	line	137
  7327                           	goto	l2142
  7328  0310  2B14               	line	138
  7329                           	
  7330                           l623:	
  7331  0311                     	line	139
  7332                           	
  7333                           l2140:	
  7334  0311                     	clrc
  7335  0311  1003               	rrf	(___fladd@grs),f
  7336  0312  0CBB               
  7337                           	goto	l2142
  7338  0313  2B14               	line	140
  7339                           	
  7340                           l624:	
  7341  0314                     	line	141
  7342                           	
  7343                           l2142:	
  7344  0314                     	btfss	(___fladd@b),(0)&7
  7345  0314  1C24               	goto	u2471
  7346  0315  2B17               	goto	u2470
  7347  0316  2B18               u2471:
  7348  0317                     	goto	l2146
  7349  0317  2B1A               u2470:
  7350  0318                     	line	142
  7351                           	
  7352                           l2144:	
  7353  0318                     	bsf	(___fladd@grs)+(7/8),(7)&7
  7354  0318  17BB               	goto	l2146
  7355  0319  2B1A               	line	143
  7356                           	
  7357                           l625:	
  7358  031A                     	line	144
  7359                           	
  7360                           l2146:	
  7361  031A                     	movlw	01h
  7362  031A  3001               	movwf	(??___fladd+0)+0
  7363  031B  00AC               u2485:
  7364  031C                     	rlf	(___fladd@b+3),w
  7365  031C  0D27               	rrf	(___fladd@b+3),f
  7366  031D  0CA7               	rrf	(___fladd@b+2),f
  7367  031E  0CA6               	rrf	(___fladd@b+1),f
  7368  031F  0CA5               	rrf	(___fladd@b),f
  7369  0320  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  7370  0321  0BAC               	goto	u2485
  7371  0322  2B1C               
  7372                           	line	145
  7373                           	
  7374                           l2148:	
  7375  0323                     	movlw	low(01h)
  7376  0323  3001               	movwf	(??___fladd+0)+0
  7377  0324  00AC               	movf	(??___fladd+0)+0,w
  7378  0325  082C               	addwf	(___fladd@bexp),f
  7379  0326  07BA               	goto	l2184
  7380  0327  2BF2               	line	146
  7381                           	
  7382                           l622:	
  7383  0328                     	line	148
  7384                           	goto	l2184
  7385  0328  2BF2               	line	149
  7386                           	
  7387                           l619:	
  7388  0329                     	line	153
  7389                           	
  7390                           l2150:	
  7391  0329                     	movf	(___fladd@b+3),w
  7392  0329  0827               	xorlw	80h
  7393  032A  3A80               	movwf	btemp+1
  7394  032B  00FF               	movf	(___fladd@a+3),w
  7395  032C  082B               	xorlw	80h
  7396  032D  3A80               	subwf	btemp+1,w
  7397  032E  027F               	
  7398                           	skipz
  7399  032F  1D03               	goto	u2493
  7400  0330  2B3B               	movf	(___fladd@a+2),w
  7401  0331  082A               	subwf	(___fladd@b+2),w
  7402  0332  0226               	skipz
  7403  0333  1D03               	goto	u2493
  7404  0334  2B3B               	movf	(___fladd@a+1),w
  7405  0335  0829               	subwf	(___fladd@b+1),w
  7406  0336  0225               	skipz
  7407  0337  1D03               	goto	u2493
  7408  0338  2B3B               	movf	(___fladd@a),w
  7409  0339  0828               	subwf	(___fladd@b),w
  7410  033A  0224               u2493:
  7411  033B                     	skipnc
  7412  033B  1803               	goto	u2491
  7413  033C  2B3E               	goto	u2490
  7414  033D  2B3F               u2491:
  7415  033E                     	goto	l2160
  7416  033E  2BA5               u2490:
  7417  033F                     	line	154
  7418                           	
  7419                           l2152:	
  7420  033F                     	movlw	0FFh
  7421  033F  30FF               	movwf	((??___fladd+0)+0)
  7422  0340  00AC               	movlw	0FFh
  7423  0341  30FF               	movwf	((??___fladd+0)+0+1)
  7424  0342  00AD               	movlw	0FFh
  7425  0343  30FF               	movwf	((??___fladd+0)+0+2)
  7426  0344  00AE               	movlw	0FFh
  7427  0345  30FF               	movwf	((??___fladd+0)+0+3)
  7428  0346  00AF               	movf	(___fladd@a),w
  7429  0347  0828               	movwf	(??___fladd+4)+0
  7430  0348  00B0               	movf	(___fladd@a+1),w
  7431  0349  0829               	movwf	((??___fladd+4)+0+1)
  7432  034A  00B1               	movf	(___fladd@a+2),w
  7433  034B  082A               	movwf	((??___fladd+4)+0+2)
  7434  034C  00B2               	movf	(___fladd@a+3),w
  7435  034D  082B               	movwf	((??___fladd+4)+0+3)
  7436  034E  00B3               	comf	(___fladd@b),w
  7437  034F  0924               	movwf	(??___fladd+8)+0
  7438  0350  00B4               	comf	(___fladd@b+1),w
  7439  0351  0925               	movwf	((??___fladd+8)+0+1)
  7440  0352  00B5               	comf	(___fladd@b+2),w
  7441  0353  0926               	movwf	((??___fladd+8)+0+2)
  7442  0354  00B6               	comf	(___fladd@b+3),w
  7443  0355  0927               	movwf	((??___fladd+8)+0+3)
  7444  0356  00B7               	incf	(??___fladd+8)+0,f
  7445  0357  0AB4               	skipnz
  7446  0358  1903               	incf	((??___fladd+8)+0+1),f
  7447  0359  0AB5               	skipnz
  7448  035A  1903               	incf	((??___fladd+8)+0+2),f
  7449  035B  0AB6               	skipnz
  7450  035C  1903               	incf	((??___fladd+8)+0+3),f
  7451  035D  0AB7               	movf	0+(??___fladd+8)+0,w
  7452  035E  0834               	addwf	(??___fladd+4)+0,f
  7453  035F  07B0               	movf	1+(??___fladd+8)+0,w
  7454  0360  0835               	skipnc
  7455  0361  1803               	incfsz	1+(??___fladd+8)+0,w
  7456  0362  0F35               	goto	u2500
  7457  0363  2B65               	goto	u2501
  7458  0364  2B66               u2500:
  7459  0365                     	addwf	(??___fladd+4)+1,f
  7460  0365  07B1               u2501:
  7461  0366                     	movf	2+(??___fladd+8)+0,w
  7462  0366  0836               	skipnc
  7463  0367  1803               	incfsz	2+(??___fladd+8)+0,w
  7464  0368  0F36               	goto	u2502
  7465  0369  2B6B               	goto	u2503
  7466  036A  2B6C               u2502:
  7467  036B                     	addwf	(??___fladd+4)+2,f
  7468  036B  07B2               u2503:
  7469  036C                     	movf	3+(??___fladd+8)+0,w
  7470  036C  0837               	skipnc
  7471  036D  1803               	incf	3+(??___fladd+8)+0,w
  7472  036E  0A37               	addwf	(??___fladd+4)+3,f
  7473  036F  07B3               	movf	0+(??___fladd+4)+0,w
  7474  0370  0830               	addwf	(??___fladd+0)+0,f
  7475  0371  07AC               	movf	1+(??___fladd+4)+0,w
  7476  0372  0831               	skipnc
  7477  0373  1803               	incfsz	1+(??___fladd+4)+0,w
  7478  0374  0F31               	goto	u2510
  7479  0375  2B77               	goto	u2511
  7480  0376  2B78               u2510:
  7481  0377                     	addwf	(??___fladd+0)+1,f
  7482  0377  07AD               u2511:
  7483  0378                     	movf	2+(??___fladd+4)+0,w
  7484  0378  0832               	skipnc
  7485  0379  1803               	incfsz	2+(??___fladd+4)+0,w
  7486  037A  0F32               	goto	u2512
  7487  037B  2B7D               	goto	u2513
  7488  037C  2B7E               u2512:
  7489  037D                     	addwf	(??___fladd+0)+2,f
  7490  037D  07AE               u2513:
  7491  037E                     	movf	3+(??___fladd+4)+0,w
  7492  037E  0833               	skipnc
  7493  037F  1803               	incf	3+(??___fladd+4)+0,w
  7494  0380  0A33               	addwf	(??___fladd+0)+3,f
  7495  0381  07AF               	movf	3+(??___fladd+0)+0,w
  7496  0382  082F               	movwf	(___fladd@b+3)
  7497  0383  00A7               	movf	2+(??___fladd+0)+0,w
  7498  0384  082E               	movwf	(___fladd@b+2)
  7499  0385  00A6               	movf	1+(??___fladd+0)+0,w
  7500  0386  082D               	movwf	(___fladd@b+1)
  7501  0387  00A5               	movf	0+(??___fladd+0)+0,w
  7502  0388  082C               	movwf	(___fladd@b)
  7503  0389  00A4               
  7504                           	line	155
  7505                           	movlw	low(080h)
  7506  038A  3080               	movwf	(??___fladd+0)+0
  7507  038B  00AC               	movf	(??___fladd+0)+0,w
  7508  038C  082C               	xorwf	(___fladd@signs),f
  7509  038D  06B8               	line	156
  7510                           	
  7511                           l2154:	
  7512  038E                     	comf	(___fladd@grs),f
  7513  038E  09BB               	incf	(___fladd@grs),f
  7514  038F  0ABB               	line	157
  7515                           	
  7516                           l2156:	
  7517  0390                     	movf	((___fladd@grs)),w
  7518  0390  083B               	btfss	status,2
  7519  0391  1D03               	goto	u2521
  7520  0392  2B94               	goto	u2520
  7521  0393  2B95               u2521:
  7522  0394                     	goto	l629
  7523  0394  2BB3               u2520:
  7524  0395                     	line	158
  7525                           	
  7526                           l2158:	
  7527  0395                     	movlw	01h
  7528  0395  3001               	addwf	(___fladd@b),f
  7529  0396  07A4               	movlw	0
  7530  0397  3000               	skipnc
  7531  0398  1803               movlw 1
  7532  0399  3001               	addwf	(___fladd@b+1),f
  7533  039A  07A5               	movlw	0
  7534  039B  3000               	skipnc
  7535  039C  1803               movlw 1
  7536  039D  3001               	addwf	(___fladd@b+2),f
  7537  039E  07A6               	movlw	0
  7538  039F  3000               	skipnc
  7539  03A0  1803               movlw 1
  7540  03A1  3001               	addwf	(___fladd@b+3),f
  7541  03A2  07A7               	goto	l629
  7542  03A3  2BB3               	line	159
  7543                           	
  7544                           l628:	
  7545  03A4                     	line	160
  7546                           	goto	l629
  7547  03A4  2BB3               	line	161
  7548                           	
  7549                           l627:	
  7550  03A5                     	line	162
  7551                           	
  7552                           l2160:	
  7553  03A5                     	movf	(___fladd@a),w
  7554  03A5  0828               	subwf	(___fladd@b),f
  7555  03A6  02A4               	movf	(___fladd@a+1),w
  7556  03A7  0829               	skipc
  7557  03A8  1C03               	incfsz	(___fladd@a+1),w
  7558  03A9  0F29               	subwf	(___fladd@b+1),f
  7559  03AA  02A5               	movf	(___fladd@a+2),w
  7560  03AB  082A               	skipc
  7561  03AC  1C03               	incfsz	(___fladd@a+2),w
  7562  03AD  0F2A               	subwf	(___fladd@b+2),f
  7563  03AE  02A6               	movf	(___fladd@a+3),w
  7564  03AF  082B               	skipc
  7565  03B0  1C03               	incfsz	(___fladd@a+3),w
  7566  03B1  0F2B               	subwf	(___fladd@b+3),f
  7567  03B2  02A7               	line	163
  7568                           	
  7569                           l629:	
  7570  03B3                     	line	166
  7571                           	movf	(___fladd@b+3),w
  7572  03B3  0827               	iorwf	(___fladd@b+2),w
  7573  03B4  0426               	iorwf	(___fladd@b+1),w
  7574  03B5  0425               	iorwf	(___fladd@b),w
  7575  03B6  0424               	skipz
  7576  03B7  1D03               	goto	u2531
  7577  03B8  2BBA               	goto	u2530
  7578  03B9  2BBB               u2531:
  7579  03BA                     	goto	l2182
  7580  03BA  2BEC               u2530:
  7581  03BB                     	
  7582                           l2162:	
  7583  03BB                     	movf	((___fladd@grs)),w
  7584  03BB  083B               	btfss	status,2
  7585  03BC  1D03               	goto	u2541
  7586  03BD  2BBF               	goto	u2540
  7587  03BE  2BC0               u2541:
  7588  03BF                     	goto	l2182
  7589  03BF  2BEC               u2540:
  7590  03C0                     	line	167
  7591                           	
  7592                           l2164:	
  7593  03C0                     	movlw	0x0
  7594  03C0  3000               	movwf	(?___fladd+3)
  7595  03C1  00A7               	movlw	0x0
  7596  03C2  3000               	movwf	(?___fladd+2)
  7597  03C3  00A6               	movlw	0x0
  7598  03C4  3000               	movwf	(?___fladd+1)
  7599  03C5  00A5               	movlw	0x0
  7600  03C6  3000               	movwf	(?___fladd)
  7601  03C7  00A4               
  7602                           	goto	l621
  7603  03C8  2C75               	
  7604                           l2166:	
  7605  03C9                     	goto	l621
  7606  03C9  2C75               	line	168
  7607                           	
  7608                           l630:	
  7609  03CA                     	line	171
  7610                           	goto	l2182
  7611  03CA  2BEC               	
  7612                           l632:	
  7613  03CB                     	line	172
  7614                           	
  7615                           l2168:	
  7616  03CB                     	movlw	01h
  7617  03CB  3001               	movwf	(??___fladd+0)+0
  7618  03CC  00AC               u2555:
  7619  03CD                     	clrc
  7620  03CD  1003               	rlf	(___fladd@b),f
  7621  03CE  0DA4               	rlf	(___fladd@b+1),f
  7622  03CF  0DA5               	rlf	(___fladd@b+2),f
  7623  03D0  0DA6               	rlf	(___fladd@b+3),f
  7624  03D1  0DA7               	decfsz	(??___fladd+0)+0
  7625  03D2  0BAC               	goto	u2555
  7626  03D3  2BCD               	line	173
  7627                           	
  7628                           l2170:	
  7629  03D4                     	btfss	(___fladd@grs),(7)&7
  7630  03D4  1FBB               	goto	u2561
  7631  03D5  2BD7               	goto	u2560
  7632  03D6  2BD8               u2561:
  7633  03D7                     	goto	l633
  7634  03D7  2BD9               u2560:
  7635  03D8                     	line	174
  7636                           	
  7637                           l2172:	
  7638  03D8                     	bsf	(___fladd@b)+(0/8),(0)&7
  7639  03D8  1424               	line	175
  7640                           	
  7641                           l633:	
  7642  03D9                     	line	176
  7643                           	btfss	(___fladd@grs),(0)&7
  7644  03D9  1C3B               	goto	u2571
  7645  03DA  2BDC               	goto	u2570
  7646  03DB  2BDD               u2571:
  7647  03DC                     	goto	l2176
  7648  03DC  2BE0               u2570:
  7649  03DD                     	line	177
  7650                           	
  7651                           l2174:	
  7652  03DD                     	setc
  7653  03DD  1403               	rlf	(___fladd@grs),f
  7654  03DE  0DBB               	line	178
  7655                           	goto	l2178
  7656  03DF  2BE3               	line	179
  7657                           	
  7658                           l634:	
  7659  03E0                     	line	180
  7660                           	
  7661                           l2176:	
  7662  03E0                     	clrc
  7663  03E0  1003               	rlf	(___fladd@grs),f
  7664  03E1  0DBB               
  7665                           	goto	l2178
  7666  03E2  2BE3               	line	181
  7667                           	
  7668                           l635:	
  7669  03E3                     	line	182
  7670                           	
  7671                           l2178:	
  7672  03E3                     	movf	((___fladd@bexp)),w
  7673  03E3  083A               	btfsc	status,2
  7674  03E4  1903               	goto	u2581
  7675  03E5  2BE7               	goto	u2580
  7676  03E6  2BE8               u2581:
  7677  03E7                     	goto	l2182
  7678  03E7  2BEC               u2580:
  7679  03E8                     	line	183
  7680                           	
  7681                           l2180:	
  7682  03E8                     	movlw	01h
  7683  03E8  3001               	subwf	(___fladd@bexp),f
  7684  03E9  02BA               	goto	l2182
  7685  03EA  2BEC               	line	184
  7686                           	
  7687                           l636:	
  7688  03EB                     	goto	l2182
  7689  03EB  2BEC               	line	185
  7690                           	
  7691                           l631:	
  7692  03EC                     	line	171
  7693                           	
  7694                           l2182:	
  7695  03EC                     	btfss	(___fladd@b+2),(23)&7
  7696  03EC  1FA6               	goto	u2591
  7697  03ED  2BEF               	goto	u2590
  7698  03EE  2BF0               u2591:
  7699  03EF                     	goto	l2168
  7700  03EF  2BCB               u2590:
  7701  03F0                     	goto	l2184
  7702  03F0  2BF2               	
  7703                           l637:	
  7704  03F1                     	goto	l2184
  7705  03F1  2BF2               	line	186
  7706                           	
  7707                           l626:	
  7708  03F2                     	line	192
  7709                           	
  7710                           l2184:	
  7711  03F2                     	clrf	(___fladd@aexp)
  7712  03F2  01B9               	line	193
  7713                           	
  7714                           l2186:	
  7715  03F3                     	btfss	(___fladd@grs),(7)&7
  7716  03F3  1FBB               	goto	u2601
  7717  03F4  2BF6               	goto	u2600
  7718  03F5  2BF7               u2601:
  7719  03F6                     	goto	l2194
  7720  03F6  2C09               u2600:
  7721  03F7                     	line	194
  7722                           	
  7723                           l2188:	
  7724  03F7                     	movf	(___fladd@grs),w
  7725  03F7  083B               	andlw	07Fh
  7726  03F8  397F               	btfsc	status,2
  7727  03F9  1903               	goto	u2611
  7728  03FA  2BFC               	goto	u2610
  7729  03FB  2BFD               u2611:
  7730  03FC                     	goto	l639
  7731  03FC  2C00               u2610:
  7732  03FD                     	line	195
  7733                           	
  7734                           l2190:	
  7735  03FD                     	clrf	(___fladd@aexp)
  7736  03FD  01B9               	incf	(___fladd@aexp),f
  7737  03FE  0AB9               	line	196
  7738                           	goto	l2194
  7739  03FF  2C09               	line	197
  7740                           	
  7741                           l639:	
  7742  0400                     	line	198
  7743                           	btfss	(___fladd@b),(0)&7
  7744  0400  1C24               	goto	u2621
  7745  0401  2C03               	goto	u2620
  7746  0402  2C04               u2621:
  7747  0403                     	goto	l2194
  7748  0403  2C09               u2620:
  7749  0404                     	line	199
  7750                           	
  7751                           l2192:	
  7752  0404                     	clrf	(___fladd@aexp)
  7753  0404  01B9               	incf	(___fladd@aexp),f
  7754  0405  0AB9               	goto	l2194
  7755  0406  2C09               	line	200
  7756                           	
  7757                           l641:	
  7758  0407                     	goto	l2194
  7759  0407  2C09               	line	201
  7760                           	
  7761                           l640:	
  7762  0408                     	goto	l2194
  7763  0408  2C09               	line	202
  7764                           	
  7765                           l638:	
  7766  0409                     	line	203
  7767                           	
  7768                           l2194:	
  7769  0409                     	movf	((___fladd@aexp)),w
  7770  0409  0839               	btfsc	status,2
  7771  040A  1903               	goto	u2631
  7772  040B  2C0D               	goto	u2630
  7773  040C  2C0E               u2631:
  7774  040D                     	goto	l642
  7775  040D  2C44               u2630:
  7776  040E                     	line	204
  7777                           	
  7778                           l2196:	
  7779  040E                     	movlw	01h
  7780  040E  3001               	addwf	(___fladd@b),f
  7781  040F  07A4               	movlw	0
  7782  0410  3000               	skipnc
  7783  0411  1803               movlw 1
  7784  0412  3001               	addwf	(___fladd@b+1),f
  7785  0413  07A5               	movlw	0
  7786  0414  3000               	skipnc
  7787  0415  1803               movlw 1
  7788  0416  3001               	addwf	(___fladd@b+2),f
  7789  0417  07A6               	movlw	0
  7790  0418  3000               	skipnc
  7791  0419  1803               movlw 1
  7792  041A  3001               	addwf	(___fladd@b+3),f
  7793  041B  07A7               	line	205
  7794                           	
  7795                           l2198:	
  7796  041C                     	btfss	(___fladd@b+3),(24)&7
  7797  041C  1C27               	goto	u2641
  7798  041D  2C1F               	goto	u2640
  7799  041E  2C20               u2641:
  7800  041F                     	goto	l642
  7801  041F  2C44               u2640:
  7802  0420                     	line	206
  7803                           	
  7804                           l2200:	
  7805  0420                     	movf	(___fladd@b),w
  7806  0420  0824               	movwf	(??___fladd+0)+0
  7807  0421  00AC               	movf	(___fladd@b+1),w
  7808  0422  0825               	movwf	((??___fladd+0)+0+1)
  7809  0423  00AD               	movf	(___fladd@b+2),w
  7810  0424  0826               	movwf	((??___fladd+0)+0+2)
  7811  0425  00AE               	movf	(___fladd@b+3),w
  7812  0426  0827               	movwf	((??___fladd+0)+0+3)
  7813  0427  00AF               	movlw	01h
  7814  0428  3001               	movwf	(??___fladd+4)+0
  7815  0429  00B0               u2655:
  7816  042A                     	rlf	(??___fladd+0)+3,w
  7817  042A  0D2F               	rrf	(??___fladd+0)+3,f
  7818  042B  0CAF               	rrf	(??___fladd+0)+2,f
  7819  042C  0CAE               	rrf	(??___fladd+0)+1,f
  7820  042D  0CAD               	rrf	(??___fladd+0)+0,f
  7821  042E  0CAC               u2650:
  7822  042F                     	decfsz	(??___fladd+4)+0,f
  7823  042F  0BB0               	goto	u2655
  7824  0430  2C2A               	movf	3+(??___fladd+0)+0,w
  7825  0431  082F               	movwf	(___fladd@b+3)
  7826  0432  00A7               	movf	2+(??___fladd+0)+0,w
  7827  0433  082E               	movwf	(___fladd@b+2)
  7828  0434  00A6               	movf	1+(??___fladd+0)+0,w
  7829  0435  082D               	movwf	(___fladd@b+1)
  7830  0436  00A5               	movf	0+(??___fladd+0)+0,w
  7831  0437  082C               	movwf	(___fladd@b)
  7832  0438  00A4               
  7833                           	line	207
  7834                           		incf	((___fladd@bexp)),w
  7835  0439  0A3A               	btfsc	status,2
  7836  043A  1903               	goto	u2661
  7837  043B  2C3D               	goto	u2660
  7838  043C  2C3E               u2661:
  7839  043D                     	goto	l642
  7840  043D  2C44               u2660:
  7841  043E                     	line	208
  7842                           	
  7843                           l2202:	
  7844  043E                     	movlw	low(01h)
  7845  043E  3001               	movwf	(??___fladd+0)+0
  7846  043F  00AC               	movf	(??___fladd+0)+0,w
  7847  0440  082C               	addwf	(___fladd@bexp),f
  7848  0441  07BA               	goto	l642
  7849  0442  2C44               	line	209
  7850                           	
  7851                           l644:	
  7852  0443                     	goto	l642
  7853  0443  2C44               	line	210
  7854                           	
  7855                           l643:	
  7856  0444                     	line	211
  7857                           	
  7858                           l642:	
  7859  0444                     	line	215
  7860                           		incf	((___fladd@bexp)),w
  7861  0444  0A3A               	btfsc	status,2
  7862  0445  1903               	goto	u2671
  7863  0446  2C48               	goto	u2670
  7864  0447  2C49               u2671:
  7865  0448                     	goto	l2206
  7866  0448  2C4F               u2670:
  7867  0449                     	
  7868                           l2204:	
  7869  0449                     	movf	((___fladd@bexp)),w
  7870  0449  083A               	btfss	status,2
  7871  044A  1D03               	goto	u2681
  7872  044B  2C4D               	goto	u2680
  7873  044C  2C4E               u2681:
  7874  044D                     	goto	l2212
  7875  044D  2C5F               u2680:
  7876  044E                     	goto	l2206
  7877  044E  2C4F               	
  7878                           l647:	
  7879  044F                     	line	216
  7880                           	
  7881                           l2206:	
  7882  044F                     	movlw	high highword(0)
  7883  044F  3000               	movwf	(___fladd@b+3)
  7884  0450  00A7               	movlw	low highword(0)
  7885  0451  3000               	movwf	(___fladd@b+2)
  7886  0452  00A6               	movlw	high(0)
  7887  0453  3000               	movwf	(___fladd@b+1)
  7888  0454  00A5               	movlw	low(0)
  7889  0455  3000               	movwf	(___fladd@b)
  7890  0456  00A4               
  7891                           	line	218
  7892                           	
  7893                           l2208:	
  7894  0457                     	movf	((___fladd@bexp)),w
  7895  0457  083A               	btfss	status,2
  7896  0458  1D03               	goto	u2691
  7897  0459  2C5B               	goto	u2690
  7898  045A  2C5C               u2691:
  7899  045B                     	goto	l2212
  7900  045B  2C5F               u2690:
  7901  045C                     	line	219
  7902                           	
  7903                           l2210:	
  7904  045C                     	clrf	(___fladd@signs)
  7905  045C  01B8               	goto	l2212
  7906  045D  2C5F               	line	220
  7907                           	
  7908                           l648:	
  7909  045E                     	goto	l2212
  7910  045E  2C5F               	line	221
  7911                           	
  7912                           l645:	
  7913  045F                     	line	225
  7914                           	
  7915                           l2212:	
  7916  045F                     	btfss	(___fladd@bexp),(0)&7
  7917  045F  1C3A               	goto	u2701
  7918  0460  2C62               	goto	u2700
  7919  0461  2C63               u2701:
  7920  0462                     	goto	l2216
  7921  0462  2C65               u2700:
  7922  0463                     	line	226
  7923                           	
  7924                           l2214:	
  7925  0463                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  7926  0463  17A6               	line	227
  7927                           	goto	l650
  7928  0464  2C69               	line	229
  7929                           	
  7930                           l649:	
  7931  0465                     	line	230
  7932                           	
  7933                           l2216:	
  7934  0465                     	movlw	low(07Fh)
  7935  0465  307F               	movwf	(??___fladd+0)+0
  7936  0466  00AC               	movf	(??___fladd+0)+0,w
  7937  0467  082C               	andwf	0+(___fladd@b)+02h,f
  7938  0468  05A6               	line	231
  7939                           	
  7940                           l650:	
  7941  0469                     	line	232
  7942                           	movf	(___fladd@bexp),w
  7943  0469  083A               	movwf	(??___fladd+0)+0
  7944  046A  00AC               	clrc
  7945  046B  1003               	rrf	(??___fladd+0)+0,w
  7946  046C  0C2C               	movwf	(??___fladd+1)+0
  7947  046D  00AD               	movf	(??___fladd+1)+0,w
  7948  046E  082D               	movwf	0+(___fladd@b)+03h
  7949  046F  00A7               	line	233
  7950                           	
  7951                           l2218:	
  7952  0470                     	btfss	(___fladd@signs),(7)&7
  7953  0470  1FB8               	goto	u2711
  7954  0471  2C73               	goto	u2710
  7955  0472  2C74               u2711:
  7956  0473                     	goto	l651
  7957  0473  2C75               u2710:
  7958  0474                     	line	234
  7959                           	
  7960                           l2220:	
  7961  0474                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  7962  0474  17A7               	line	235
  7963                           	
  7964                           l651:	
  7965  0475                     	line	236
  7966                           	line	237
  7967                           	
  7968                           l621:	
  7969  0475                     	return
  7970  0475  0008               	opt stack 0
  7971                           GLOBAL	__end_of___fladd
  7972                           	__end_of___fladd:
  7973  0476                     	signat	___fladd,8316
  7974                           	global	___awmod
  7975                           
  7976 ;; *************** function ___awmod *****************
  7977 ;; Defined at:
  7978 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  7979 ;; Parameters:    Size  Location     Type
  7980 ;;  divisor         2    0[COMMON] int 
  7981 ;;  dividend        2    2[COMMON] int 
  7982 ;; Auto vars:     Size  Location     Type
  7983 ;;  sign            1    6[COMMON] unsigned char 
  7984 ;;  counter         1    5[COMMON] unsigned char 
  7985 ;; Return value:  Size  Location     Type
  7986 ;;                  2    0[COMMON] int 
  7987 ;; Registers used:
  7988 ;;		wreg, status,2, status,0
  7989 ;; Tracked objects:
  7990 ;;		On entry : 0/0
  7991 ;;		On exit  : 0/0
  7992 ;;		Unchanged: 0/0
  7993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7994 ;;      Params:         4       0       0       0       0
  7995 ;;      Locals:         2       0       0       0       0
  7996 ;;      Temps:          1       0       0       0       0
  7997 ;;      Totals:         7       0       0       0       0
  7998 ;;Total ram usage:        7 bytes
  7999 ;; Hardware stack levels used:    1
  8000 ;; This function calls:
  8001 ;;		Nothing
  8002 ;; This function is called by:
  8003 ;;		_main
  8004 ;; This function uses a non-reentrant model
  8005 ;;
  8006                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  8007                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  8008                           	line	5
  8009                           global __ptext21
  8010                           __ptext21:	;psect for function ___awmod
  8011  0C64                     psect	text21
  8012                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  8013                           	line	5
  8014                           	global	__size_of___awmod
  8015                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  8016  0063                     	
  8017                           ___awmod:	
  8018  0C64                     ;incstack = 0
  8019                           	opt	stack 7
  8020                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8021                           	line	12
  8022                           	
  8023                           l1946:	
  8024  0C64                     	clrf	(___awmod@sign)
  8025  0C64  01F6               	line	13
  8026                           	
  8027                           l1948:	
  8028  0C65                     	btfss	(___awmod@dividend+1),7
  8029  0C65  1FF3               	goto	u2061
  8030  0C66  2C68               	goto	u2060
  8031  0C67  2C69               u2061:
  8032  0C68                     	goto	l1954
  8033  0C68  2C71               u2060:
  8034  0C69                     	line	14
  8035                           	
  8036                           l1950:	
  8037  0C69                     	comf	(___awmod@dividend),f
  8038  0C69  09F2               	comf	(___awmod@dividend+1),f
  8039  0C6A  09F3               	incf	(___awmod@dividend),f
  8040  0C6B  0AF2               	skipnz
  8041  0C6C  1903               	incf	(___awmod@dividend+1),f
  8042  0C6D  0AF3               	line	15
  8043                           	
  8044                           l1952:	
  8045  0C6E                     	clrf	(___awmod@sign)
  8046  0C6E  01F6               	incf	(___awmod@sign),f
  8047  0C6F  0AF6               	goto	l1954
  8048  0C70  2C71               	line	16
  8049                           	
  8050                           l471:	
  8051  0C71                     	line	17
  8052                           	
  8053                           l1954:	
  8054  0C71                     	btfss	(___awmod@divisor+1),7
  8055  0C71  1FF1               	goto	u2071
  8056  0C72  2C74               	goto	u2070
  8057  0C73  2C75               u2071:
  8058  0C74                     	goto	l1958
  8059  0C74  2C7B               u2070:
  8060  0C75                     	line	18
  8061                           	
  8062                           l1956:	
  8063  0C75                     	comf	(___awmod@divisor),f
  8064  0C75  09F0               	comf	(___awmod@divisor+1),f
  8065  0C76  09F1               	incf	(___awmod@divisor),f
  8066  0C77  0AF0               	skipnz
  8067  0C78  1903               	incf	(___awmod@divisor+1),f
  8068  0C79  0AF1               	goto	l1958
  8069  0C7A  2C7B               	
  8070                           l472:	
  8071  0C7B                     	line	19
  8072                           	
  8073                           l1958:	
  8074  0C7B                     	movf	((___awmod@divisor)),w
  8075  0C7B  0870               iorwf	((___awmod@divisor+1)),w
  8076  0C7C  0471               	btfsc	status,2
  8077  0C7D  1903               	goto	u2081
  8078  0C7E  2C80               	goto	u2080
  8079  0C7F  2C81               u2081:
  8080  0C80                     	goto	l1976
  8081  0C80  2CB6               u2080:
  8082  0C81                     	line	20
  8083                           	
  8084                           l1960:	
  8085  0C81                     	clrf	(___awmod@counter)
  8086  0C81  01F5               	incf	(___awmod@counter),f
  8087  0C82  0AF5               	line	21
  8088                           	goto	l1966
  8089  0C83  2C90               	
  8090                           l475:	
  8091  0C84                     	line	22
  8092                           	
  8093                           l1962:	
  8094  0C84                     	movlw	01h
  8095  0C84  3001               	
  8096                           u2095:
  8097  0C85                     	clrc
  8098  0C85  1003               	rlf	(___awmod@divisor),f
  8099  0C86  0DF0               	rlf	(___awmod@divisor+1),f
  8100  0C87  0DF1               	addlw	-1
  8101  0C88  3EFF               	skipz
  8102  0C89  1D03               	goto	u2095
  8103  0C8A  2C85               	line	23
  8104                           	
  8105                           l1964:	
  8106  0C8B                     	movlw	low(01h)
  8107  0C8B  3001               	movwf	(??___awmod+0)+0
  8108  0C8C  00F4               	movf	(??___awmod+0)+0,w
  8109  0C8D  0874               	addwf	(___awmod@counter),f
  8110  0C8E  07F5               	goto	l1966
  8111  0C8F  2C90               	line	24
  8112                           	
  8113                           l474:	
  8114  0C90                     	line	21
  8115                           	
  8116                           l1966:	
  8117  0C90                     	btfss	(___awmod@divisor+1),(15)&7
  8118  0C90  1FF1               	goto	u2101
  8119  0C91  2C93               	goto	u2100
  8120  0C92  2C94               u2101:
  8121  0C93                     	goto	l1962
  8122  0C93  2C84               u2100:
  8123  0C94                     	goto	l1968
  8124  0C94  2C96               	
  8125                           l476:	
  8126  0C95                     	goto	l1968
  8127  0C95  2C96               	line	25
  8128                           	
  8129                           l477:	
  8130  0C96                     	line	26
  8131                           	
  8132                           l1968:	
  8133  0C96                     	movf	(___awmod@divisor+1),w
  8134  0C96  0871               	subwf	(___awmod@dividend+1),w
  8135  0C97  0273               	skipz
  8136  0C98  1D03               	goto	u2115
  8137  0C99  2C9C               	movf	(___awmod@divisor),w
  8138  0C9A  0870               	subwf	(___awmod@dividend),w
  8139  0C9B  0272               u2115:
  8140  0C9C                     	skipc
  8141  0C9C  1C03               	goto	u2111
  8142  0C9D  2C9F               	goto	u2110
  8143  0C9E  2CA0               u2111:
  8144  0C9F                     	goto	l1972
  8145  0C9F  2CA7               u2110:
  8146  0CA0                     	line	27
  8147                           	
  8148                           l1970:	
  8149  0CA0                     	movf	(___awmod@divisor),w
  8150  0CA0  0870               	subwf	(___awmod@dividend),f
  8151  0CA1  02F2               	movf	(___awmod@divisor+1),w
  8152  0CA2  0871               	skipc
  8153  0CA3  1C03               	decf	(___awmod@dividend+1),f
  8154  0CA4  03F3               	subwf	(___awmod@dividend+1),f
  8155  0CA5  02F3               	goto	l1972
  8156  0CA6  2CA7               	
  8157                           l478:	
  8158  0CA7                     	line	28
  8159                           	
  8160                           l1972:	
  8161  0CA7                     	movlw	01h
  8162  0CA7  3001               	
  8163                           u2125:
  8164  0CA8                     	clrc
  8165  0CA8  1003               	rrf	(___awmod@divisor+1),f
  8166  0CA9  0CF1               	rrf	(___awmod@divisor),f
  8167  0CAA  0CF0               	addlw	-1
  8168  0CAB  3EFF               	skipz
  8169  0CAC  1D03               	goto	u2125
  8170  0CAD  2CA8               	line	29
  8171                           	
  8172                           l1974:	
  8173  0CAE                     	movlw	01h
  8174  0CAE  3001               	subwf	(___awmod@counter),f
  8175  0CAF  02F5               	btfss	status,2
  8176  0CB0  1D03               	goto	u2131
  8177  0CB1  2CB3               	goto	u2130
  8178  0CB2  2CB4               u2131:
  8179  0CB3                     	goto	l1968
  8180  0CB3  2C96               u2130:
  8181  0CB4                     	goto	l1976
  8182  0CB4  2CB6               	
  8183                           l479:	
  8184  0CB5                     	goto	l1976
  8185  0CB5  2CB6               	line	30
  8186                           	
  8187                           l473:	
  8188  0CB6                     	line	31
  8189                           	
  8190                           l1976:	
  8191  0CB6                     	movf	((___awmod@sign)),w
  8192  0CB6  0876               	btfsc	status,2
  8193  0CB7  1903               	goto	u2141
  8194  0CB8  2CBA               	goto	u2140
  8195  0CB9  2CBB               u2141:
  8196  0CBA                     	goto	l1980
  8197  0CBA  2CC1               u2140:
  8198  0CBB                     	line	32
  8199                           	
  8200                           l1978:	
  8201  0CBB                     	comf	(___awmod@dividend),f
  8202  0CBB  09F2               	comf	(___awmod@dividend+1),f
  8203  0CBC  09F3               	incf	(___awmod@dividend),f
  8204  0CBD  0AF2               	skipnz
  8205  0CBE  1903               	incf	(___awmod@dividend+1),f
  8206  0CBF  0AF3               	goto	l1980
  8207  0CC0  2CC1               	
  8208                           l480:	
  8209  0CC1                     	line	33
  8210                           	
  8211                           l1980:	
  8212  0CC1                     	movf	(___awmod@dividend+1),w
  8213  0CC1  0873               	movwf	(?___awmod+1)
  8214  0CC2  00F1               	movf	(___awmod@dividend),w
  8215  0CC3  0872               	movwf	(?___awmod)
  8216  0CC4  00F0               	goto	l481
  8217  0CC5  2CC6               	
  8218                           l1982:	
  8219  0CC6                     	line	34
  8220                           	
  8221                           l481:	
  8222  0CC6                     	return
  8223  0CC6  0008               	opt stack 0
  8224                           GLOBAL	__end_of___awmod
  8225                           	__end_of___awmod:
  8226  0CC7                     	signat	___awmod,8314
  8227                           	global	_I2C_Master_Write
  8228                           
  8229 ;; *************** function _I2C_Master_Write *****************
  8230 ;; Defined at:
  8231 ;;		line 65 in file "I2C.c"
  8232 ;; Parameters:    Size  Location     Type
  8233 ;;  d               2    0[COMMON] unsigned int 
  8234 ;; Auto vars:     Size  Location     Type
  8235 ;;		None
  8236 ;; Return value:  Size  Location     Type
  8237 ;;                  1    wreg      void 
  8238 ;; Registers used:
  8239 ;;		wreg, status,2, status,0, pclath, cstack
  8240 ;; Tracked objects:
  8241 ;;		On entry : 0/0
  8242 ;;		On exit  : 0/0
  8243 ;;		Unchanged: 0/0
  8244 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8245 ;;      Params:         2       0       0       0       0
  8246 ;;      Locals:         0       0       0       0       0
  8247 ;;      Temps:          0       0       0       0       0
  8248 ;;      Totals:         2       0       0       0       0
  8249 ;;Total ram usage:        2 bytes
  8250 ;; Hardware stack levels used:    1
  8251 ;; Hardware stack levels required when called:    1
  8252 ;; This function calls:
  8253 ;;		_I2C_Master_Wait
  8254 ;; This function is called by:
  8255 ;;		_main
  8256 ;; This function uses a non-reentrant model
  8257 ;;
  8258                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8259                           	file	"I2C.c"
  8260                           	line	65
  8261                           global __ptext22
  8262                           __ptext22:	;psect for function _I2C_Master_Write
  8263  0003                     psect	text22
  8264                           	file	"I2C.c"
  8265                           	line	65
  8266                           	global	__size_of_I2C_Master_Write
  8267                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
  8268  000A                     	
  8269                           _I2C_Master_Write:	
  8270  0003                     ;incstack = 0
  8271                           	opt	stack 6
  8272                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8273                           	line	67
  8274                           	
  8275                           l1880:	
  8276  0003                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
  8277                           	fcall	_I2C_Master_Wait
  8278  0003  120A  158A  220C  120A  118A  	line	68
  8279                           	
  8280                           l1882:	
  8281  0008                     ;I2C.c: 68:     SSPBUF = d;
  8282                           	movf	(I2C_Master_Write@d),w
  8283  0008  0870               	bcf	status, 5	;RP0=0, select bank0
  8284  0009  1283               	bcf	status, 6	;RP1=0, select bank0
  8285  000A  1303               	movwf	(19)	;volatile
  8286  000B  0093               	line	69
  8287                           	
  8288                           l47:	
  8289  000C                     	return
  8290  000C  0008               	opt stack 0
  8291                           GLOBAL	__end_of_I2C_Master_Write
  8292                           	__end_of_I2C_Master_Write:
  8293  000D                     	signat	_I2C_Master_Write,4217
  8294                           	global	_I2C_Master_Stop
  8295                           
  8296 ;; *************** function _I2C_Master_Stop *****************
  8297 ;; Defined at:
  8298 ;;		line 55 in file "I2C.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;		None
  8301 ;; Auto vars:     Size  Location     Type
  8302 ;;		None
  8303 ;; Return value:  Size  Location     Type
  8304 ;;                  1    wreg      void 
  8305 ;; Registers used:
  8306 ;;		wreg, status,2, status,0, pclath, cstack
  8307 ;; Tracked objects:
  8308 ;;		On entry : 0/0
  8309 ;;		On exit  : 0/0
  8310 ;;		Unchanged: 0/0
  8311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8312 ;;      Params:         0       0       0       0       0
  8313 ;;      Locals:         0       0       0       0       0
  8314 ;;      Temps:          0       0       0       0       0
  8315 ;;      Totals:         0       0       0       0       0
  8316 ;;Total ram usage:        0 bytes
  8317 ;; Hardware stack levels used:    1
  8318 ;; Hardware stack levels required when called:    1
  8319 ;; This function calls:
  8320 ;;		_I2C_Master_Wait
  8321 ;; This function is called by:
  8322 ;;		_main
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8326                           	line	55
  8327                           global __ptext23
  8328                           __ptext23:	;psect for function _I2C_Master_Stop
  8329  0A03                     psect	text23
  8330                           	file	"I2C.c"
  8331                           	line	55
  8332                           	global	__size_of_I2C_Master_Stop
  8333                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
  8334  0009                     	
  8335                           _I2C_Master_Stop:	
  8336  0A03                     ;incstack = 0
  8337                           	opt	stack 6
  8338                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8339                           	line	57
  8340                           	
  8341                           l1876:	
  8342  0A03                     ;I2C.c: 57:     I2C_Master_Wait();
  8343                           	fcall	_I2C_Master_Wait
  8344  0A03  120A  158A  220C  120A  158A  	line	58
  8345                           	
  8346                           l1878:	
  8347  0A08                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  8348                           	bsf	status, 5	;RP0=1, select bank1
  8349  0A08  1683               	bcf	status, 6	;RP1=0, select bank1
  8350  0A09  1303               	bsf	(145)^080h,2	;volatile
  8351  0A0A  1511               	line	59
  8352                           	
  8353                           l44:	
  8354  0A0B                     	return
  8355  0A0B  0008               	opt stack 0
  8356                           GLOBAL	__end_of_I2C_Master_Stop
  8357                           	__end_of_I2C_Master_Stop:
  8358  0A0C                     	signat	_I2C_Master_Stop,89
  8359                           	global	_I2C_Master_Start
  8360                           
  8361 ;; *************** function _I2C_Master_Start *****************
  8362 ;; Defined at:
  8363 ;;		line 39 in file "I2C.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;		None
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg, status,2, status,0, pclath, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8377 ;;      Params:         0       0       0       0       0
  8378 ;;      Locals:         0       0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0
  8380 ;;      Totals:         0       0       0       0       0
  8381 ;;Total ram usage:        0 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    1
  8384 ;; This function calls:
  8385 ;;		_I2C_Master_Wait
  8386 ;; This function is called by:
  8387 ;;		_main
  8388 ;; This function uses a non-reentrant model
  8389 ;;
  8390                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8391                           	line	39
  8392                           global __ptext24
  8393                           __ptext24:	;psect for function _I2C_Master_Start
  8394  09FA                     psect	text24
  8395                           	file	"I2C.c"
  8396                           	line	39
  8397                           	global	__size_of_I2C_Master_Start
  8398                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
  8399  0009                     	
  8400                           _I2C_Master_Start:	
  8401  09FA                     ;incstack = 0
  8402                           	opt	stack 6
  8403                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8404                           	line	41
  8405                           	
  8406                           l1872:	
  8407  09FA                     ;I2C.c: 41:     I2C_Master_Wait();
  8408                           	fcall	_I2C_Master_Wait
  8409  09FA  120A  158A  220C  120A  158A  	line	42
  8410                           	
  8411                           l1874:	
  8412  09FF                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  8413                           	bsf	status, 5	;RP0=1, select bank1
  8414  09FF  1683               	bcf	status, 6	;RP1=0, select bank1
  8415  0A00  1303               	bsf	(145)^080h,0	;volatile
  8416  0A01  1411               	line	43
  8417                           	
  8418                           l38:	
  8419  0A02                     	return
  8420  0A02  0008               	opt stack 0
  8421                           GLOBAL	__end_of_I2C_Master_Start
  8422                           	__end_of_I2C_Master_Start:
  8423  0A03                     	signat	_I2C_Master_Start,89
  8424                           	global	_I2C_Master_Read
  8425                           
  8426 ;; *************** function _I2C_Master_Read *****************
  8427 ;; Defined at:
  8428 ;;		line 74 in file "I2C.c"
  8429 ;; Parameters:    Size  Location     Type
  8430 ;;  a               2    0[COMMON] unsigned short 
  8431 ;; Auto vars:     Size  Location     Type
  8432 ;;  temp            2    4[COMMON] unsigned short 
  8433 ;; Return value:  Size  Location     Type
  8434 ;;                  2    0[COMMON] unsigned short 
  8435 ;; Registers used:
  8436 ;;		wreg, status,2, status,0, pclath, cstack
  8437 ;; Tracked objects:
  8438 ;;		On entry : 0/0
  8439 ;;		On exit  : 0/0
  8440 ;;		Unchanged: 0/0
  8441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8442 ;;      Params:         2       0       0       0       0
  8443 ;;      Locals:         2       0       0       0       0
  8444 ;;      Temps:          2       0       0       0       0
  8445 ;;      Totals:         6       0       0       0       0
  8446 ;;Total ram usage:        6 bytes
  8447 ;; Hardware stack levels used:    1
  8448 ;; Hardware stack levels required when called:    1
  8449 ;; This function calls:
  8450 ;;		_I2C_Master_Wait
  8451 ;; This function is called by:
  8452 ;;		_main
  8453 ;; This function uses a non-reentrant model
  8454 ;;
  8455                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  8456                           	line	74
  8457                           global __ptext25
  8458                           __ptext25:	;psect for function _I2C_Master_Read
  8459  0A94                     psect	text25
  8460                           	file	"I2C.c"
  8461                           	line	74
  8462                           	global	__size_of_I2C_Master_Read
  8463                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  8464  002F                     	
  8465                           _I2C_Master_Read:	
  8466  0A94                     ;incstack = 0
  8467                           	opt	stack 6
  8468                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8469                           	line	77
  8470                           	
  8471                           l1884:	
  8472  0A94                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  8473                           	fcall	_I2C_Master_Wait
  8474  0A94  120A  158A  220C  120A  158A  	line	78
  8475                           	
  8476                           l1886:	
  8477  0A99                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  8478                           	bsf	status, 5	;RP0=1, select bank1
  8479  0A99  1683               	bcf	status, 6	;RP1=0, select bank1
  8480  0A9A  1303               	bsf	(145)^080h,3	;volatile
  8481  0A9B  1591               	line	79
  8482                           ;I2C.c: 79:     I2C_Master_Wait();
  8483                           	fcall	_I2C_Master_Wait
  8484  0A9C  120A  158A  220C  120A  158A  	line	80
  8485                           	
  8486                           l1888:	
  8487  0AA1                     ;I2C.c: 80:     temp = SSPBUF;
  8488                           	bcf	status, 5	;RP0=0, select bank0
  8489  0AA1  1283               	bcf	status, 6	;RP1=0, select bank0
  8490  0AA2  1303               	movf	(19),w	;volatile
  8491  0AA3  0813               	movwf	(??_I2C_Master_Read+0)+0
  8492  0AA4  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  8493  0AA5  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  8494  0AA6  0872               	movwf	(I2C_Master_Read@temp)
  8495  0AA7  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  8496  0AA8  0873               	movwf	(I2C_Master_Read@temp+1)
  8497  0AA9  00F5               	line	81
  8498                           	
  8499                           l1890:	
  8500  0AAA                     ;I2C.c: 81:     I2C_Master_Wait();
  8501                           	fcall	_I2C_Master_Wait
  8502  0AAA  120A  158A  220C  120A  158A  	line	82
  8503                           	
  8504                           l1892:	
  8505  0AAF                     ;I2C.c: 82:     if(a == 1){
  8506                           		decf	((I2C_Master_Read@a)),w
  8507  0AAF  0370               iorwf	((I2C_Master_Read@a+1)),w
  8508  0AB0  0471               	btfss	status,2
  8509  0AB1  1D03               	goto	u2021
  8510  0AB2  2AB4               	goto	u2020
  8511  0AB3  2AB5               u2021:
  8512  0AB4                     	goto	l50
  8513  0AB4  2AB9               u2020:
  8514  0AB5                     	line	83
  8515                           	
  8516                           l1894:	
  8517  0AB5                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  8518                           	bsf	status, 5	;RP0=1, select bank1
  8519  0AB5  1683               	bcf	status, 6	;RP1=0, select bank1
  8520  0AB6  1303               	bcf	(145)^080h,5	;volatile
  8521  0AB7  1291               	line	84
  8522                           ;I2C.c: 84:     }else{
  8523                           	goto	l51
  8524  0AB8  2ABC               	
  8525                           l50:	
  8526  0AB9                     	line	85
  8527                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  8528                           	bsf	status, 5	;RP0=1, select bank1
  8529  0AB9  1683               	bcf	status, 6	;RP1=0, select bank1
  8530  0ABA  1303               	bsf	(145)^080h,5	;volatile
  8531  0ABB  1691               	line	86
  8532                           ;I2C.c: 86:     }
  8533                           	
  8534                           l51:	
  8535  0ABC                     	line	87
  8536                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  8537                           	bsf	(145)^080h,4	;volatile
  8538  0ABC  1611               	line	88
  8539                           	
  8540                           l1896:	
  8541  0ABD                     ;I2C.c: 88:     return temp;
  8542                           	movf	(I2C_Master_Read@temp+1),w
  8543  0ABD  0875               	movwf	(?_I2C_Master_Read+1)
  8544  0ABE  00F1               	movf	(I2C_Master_Read@temp),w
  8545  0ABF  0874               	movwf	(?_I2C_Master_Read)
  8546  0AC0  00F0               	goto	l52
  8547  0AC1  2AC2               	
  8548                           l1898:	
  8549  0AC2                     	line	89
  8550                           	
  8551                           l52:	
  8552  0AC2                     	return
  8553  0AC2  0008               	opt stack 0
  8554                           GLOBAL	__end_of_I2C_Master_Read
  8555                           	__end_of_I2C_Master_Read:
  8556  0AC3                     	signat	_I2C_Master_Read,4218
  8557                           	global	_I2C_Master_Wait
  8558                           
  8559 ;; *************** function _I2C_Master_Wait *****************
  8560 ;; Defined at:
  8561 ;;		line 32 in file "I2C.c"
  8562 ;; Parameters:    Size  Location     Type
  8563 ;;		None
  8564 ;; Auto vars:     Size  Location     Type
  8565 ;;		None
  8566 ;; Return value:  Size  Location     Type
  8567 ;;                  1    wreg      void 
  8568 ;; Registers used:
  8569 ;;		wreg, status,2
  8570 ;; Tracked objects:
  8571 ;;		On entry : 0/0
  8572 ;;		On exit  : 0/0
  8573 ;;		Unchanged: 0/0
  8574 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8575 ;;      Params:         0       0       0       0       0
  8576 ;;      Locals:         0       0       0       0       0
  8577 ;;      Temps:          0       0       0       0       0
  8578 ;;      Totals:         0       0       0       0       0
  8579 ;;Total ram usage:        0 bytes
  8580 ;; Hardware stack levels used:    1
  8581 ;; This function calls:
  8582 ;;		Nothing
  8583 ;; This function is called by:
  8584 ;;		_I2C_Master_Start
  8585 ;;		_I2C_Master_Stop
  8586 ;;		_I2C_Master_Write
  8587 ;;		_I2C_Master_Read
  8588 ;;		_I2C_Master_RepeatedStart
  8589 ;; This function uses a non-reentrant model
  8590 ;;
  8591                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  8592                           	line	32
  8593                           global __ptext26
  8594                           __ptext26:	;psect for function _I2C_Master_Wait
  8595  0A0C                     psect	text26
  8596                           	file	"I2C.c"
  8597                           	line	32
  8598                           	global	__size_of_I2C_Master_Wait
  8599                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
  8600  000F                     	
  8601                           _I2C_Master_Wait:	
  8602  0A0C                     ;incstack = 0
  8603                           	opt	stack 6
  8604                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8605                           	line	34
  8606                           	
  8607                           l1824:	
  8608  0A0C                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8609                           	goto	l32
  8610  0A0C  2A0D               	
  8611                           l33:	
  8612  0A0D                     	
  8613                           l32:	
  8614  0A0D                     	bsf	status, 5	;RP0=1, select bank1
  8615  0A0D  1683               	bcf	status, 6	;RP1=0, select bank1
  8616  0A0E  1303               	btfsc	(148)^080h,(2)&7	;volatile
  8617  0A0F  1914               	goto	u1961
  8618  0A10  2A12               	goto	u1960
  8619  0A11  2A13               u1961:
  8620  0A12                     	goto	l32
  8621  0A12  2A0D               u1960:
  8622  0A13                     	
  8623                           l1826:	
  8624  0A13                     	movf	(145)^080h,w	;volatile
  8625  0A13  0811               	andlw	01Fh
  8626  0A14  391F               	btfss	status,2
  8627  0A15  1D03               	goto	u1971
  8628  0A16  2A18               	goto	u1970
  8629  0A17  2A19               u1971:
  8630  0A18                     	goto	l32
  8631  0A18  2A0D               u1970:
  8632  0A19                     	goto	l35
  8633  0A19  2A1A               	
  8634                           l34:	
  8635  0A1A                     	line	35
  8636                           	
  8637                           l35:	
  8638  0A1A                     	return
  8639  0A1A  0008               	opt stack 0
  8640                           GLOBAL	__end_of_I2C_Master_Wait
  8641                           	__end_of_I2C_Master_Wait:
  8642  0A1B                     	signat	_I2C_Master_Wait,89
  8643                           global	___latbits
  8644                           ___latbits	equ	2
  8645  0002                     	global	btemp
  8646                           	btemp set 07Eh
  8647  007E                     
  8648                           	DABS	1,126,2	;btemp
  8649                           	global	wtemp0
  8650                           	wtemp0 set btemp+0
  8651  007E                     	end


Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      80
    BANK1            80      0      12
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 5
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _main->___flmul
    _writeFloat->_writeIntLCD
    _writeIntLCD->_sprintf
    _setup->_I2C_Master_Init
    ___flmul->___fladd
    ___fladd->___flneg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15086
                                             54 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awmod
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                         _writeFloat
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeFloat                                           4     2      2    3186
                                             21 BANK0      4     2      2
                       _setCursorLCD
                       _writeCharLCD
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    2040
                                             13 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    1872
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                       _setCursorLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2     644
                                              2 COMMON     7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1     772
                                              3 COMMON     3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                             28 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                              4 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     174
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     349
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___awmod
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _setCursorLCD
       _cmdLCD
     _writeStrLCD
       _writeCharLCD
   _writeCharLCD
   _writeFloat
     _setCursorLCD
       _cmdLCD
     _writeCharLCD
     _writeIntLCD
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _writeStrLCD
         _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      6A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       C       7       15.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      6A      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Mar 06 16:13:26 2020

                        pc 0002                __CFG_CP$OFF 0000            writeStrLCD@cont 0077  
                       l32 0A0D                         l33 0A0D                         l34 0A1A  
                       l50 0AB9                         l35 0A1A                         l51 0ABC  
                       l52 0AC2                         l44 0A0B                         l29 0AFA  
                       l38 0A02                         l47 000C                         l74 0A5B  
                       l82 0B9C                         l91 0B34                         l75 0A63  
                       l83 0B79                         l76 0A69                         l84 0BB9  
                       l85 0BB9                         l94 0A4C                         l79 09F1  
                       l88 0A38                         l97 002A                         _s3 0066  
                       fsr 0004        __Umul8_16@word_mpld 0076                        l103 0D56  
                      l104 0D61                        l201 0C63                        l105 0D8E  
                      l106 0DA3                        l300 0F3E                        l301 0F1F  
                      l310 0FF9                        l302 0F58                        l311 0FFF  
                      l303 0F62                        l304 0F8A                        l305 0F7F  
                      l306 0F9C                        l307 0FDB                        l500 0DC1  
                      l308 0FA1                        l501 0E3D                        l309 0FE5  
                      l510 0E2C                        l502 0E0A                        l350 0D29  
                      l190 006D                        l511 0E3D                        l503 0DF6  
                      l351 0D33                        l191 0098                        l600 01CD  
                      l504 0DF7                        l344 0D2A                        l192 0081  
                      l601 01E3                        l505 0E09                        l345 0CE8  
                      l193 0097                        l610 0232                        l602 01E0  
                      l506 0E2D                        l346 0CDA                        l194 0096  
                      l611 02A8                        l603 01EC                        l507 0E1A  
                      l347 0CED                        l195 00E3                        l620 02E9  
                      l612 02D6                        l604 01F9                        l700 04D6  
                      l508 0E26                        l348 0CEE                        l292 0FE6  
                      l196 01B6                        l621 0475                        l613 02CD  
                      l605 0205                        l701 04EB                        l509 0E1B  
                      l349 0D19                        l293 0F08                        l197 01B7  
                      l189 0031                        l630 03CA                        l622 0328  
                      l614 02A9                        l606 021B                        l710 074D  
                      l294 0F1A                        l198 01B7                        l471 0C71  
                      l631 03EC                        l623 0311                        l615 02B6  
                      l607 0218                        l711 0755                        l703 04E1  
                      l295 0F21                        l480 0CC1                        l472 0C7B  
                      l640 0408                        l632 03CB                        l624 0314  
                      l616 02B9                        l608 0223                        l712 0754  
                      l704 07EA                        l296 0F1C                        l481 0CC6  
                      l473 0CB6                        l641 0407                        l633 03D9  
                      l625 031A                        l617 02BF                        l609 026F  
                      l713 078E                        l705 072C                        l297 0FFA  
                      l474 0C90                        l650 0469                        l642 0444  
                      l626 03F2                        l634 03E0                        l618 02D6  
                      l714 078D                        l706 070D                        l730 0E8D  
                      l722 0E58                        l298 0F1D                        l475 0C84  
                      l651 0475                        l643 0444                        l635 03E3  
                      l627 03A5                        l619 0329                        l715 07A6  
                      l707 071C                        l731 0EAF                        l723 0E60  
                      l299 0F1E                        l476 0C95                        l644 0443  
                      l636 03EB                        l628 03A4                        l716 07DD  
                      l708 0731                        l732 0EBC                        l724 0E72  
                      l580 0BFF                        l477 0C96                        l645 045F  
                      l637 03F1                        l629 03B3                        l741 0A75  
                      l717 07C1                        l709 0756                        l733 0EB0  
                      l725 0EFF                        l581 0BD1                        l478 0CA7  
                      l638 0409                        l742 0A7F                        l718 07DD  
                      l726 0E85                        l582 0BC5                        l590 0B70  
                      l479 0CB5                        l647 044F                        l639 0400  
                      l743 0A8E                        l719 07D5                        l735 0EC7  
                      l727 0E77                        l583 0BD6                        l591 0B4A  
                      l648 045E                        l744 0A93                        l496 0A28  
                      l736 0EC7                        l728 0E8C                        l584 0BD7  
                      l592 0B3E                        l649 0465                        l497 0A29  
                      l737 0ED3                        l729 0EA8                        l585 0BF0  
                      l593 0B4F                        l738 0EF6                        l586 0BFE  
                      l594 0B50                        l587 0C04                        l595 0B61  
                      l596 0B6F                        l693 0489                        l597 0B75  
                      l694 049E                        l695 049C                        l696 04A7  
                      l697 04B8                        l698 04CD                        l699 04CB  
                      _GIE 005F                        _RD0 0040                        _RD1 0041  
             __CFG_CPD$OFF 0000                        _adc 006E                        _mov 0064  
                      _lux 00A0                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               ___flmul@aexp 004E               ___flmul@bexp 004F  
             ___flmul@sign 0049               ___flmul@temp 0054               ___flmul@prod 0050  
             __CFG_LVP$OFF 0000               ___fltol@exp1 007A                       l2000 0DD6  
                     l2010 0DEC                       l2002 0DD7                       l2100 0262  
                     l2020 0E19                       l2012 0DF5                       l2004 0DDF  
                     l2110 028C                       l2102 0266                       l2030 01C1  
                     l2022 0E1B                       l2014 0DF7                       l2006 0DE1  
                     l2200 0420                       l2120 02BF                       l2112 02AD  
                     l2104 026A                       l2040 01D7                       l2032 01C7  
                     l2024 0E2D                       l2008 0DE5                       l2016 0E0A  
                     l2210 045C                       l2202 043E                       l2130 02E8  
                     l2122 02C8                       l2114 02B6                       l2106 026F  
                     l2050 01F1                       l2042 01E0                       l2034 01CB  
                     l2026 0E32                       l2018 0E10                       l2220 0474  
                     l2212 045F                       l2204 0449                       l2140 0311  
                     l2132 02E9                       l2116 02B9                       l2124 02CD  
                     l2108 0270                       l2060 0205                       l2052 01F7  
                     l2044 01E1                       l2036 01CD                       l2028 01BA  
                     l2300 06A8                       l2214 0463                       l2206 044F  
                     l2142 0314                       l2134 0300                       l2126 02DA  
                     l2150 0329                       l2118 02BD                       l2062 020A  
                     l2070 021B                       l2054 01F9                       l2038 01D2  
                     l2046 01E3                       l2310 0716                       l2302 06CE  
                     l2230 0489                       l2222 0476                       l2216 0465  
                     l2208 0457                       l2152 033F                       l2160 03A5  
                     l2144 0318                       l2136 0304                       l2128 02DF  
                     l2080 023A                       l2072 0229                       l2064 020F  
                     l2056 01FF                       l2048 01EC                       l2320 0731  
                     l2312 071A                       l2304 06F6                       l2240 04A7  
                     l2232 048E                       l2224 047D                       l2400 0EF4  
                     l2218 0470                       l2170 03D4                       l2162 03BB  
                     l2154 038E                       l2146 031A                       l2138 0308  
                     l2090 024E                       l2082 023E                       l2074 022D  
                     l2066 0218                       l2058 0203                       l2330 0756  
                     l2322 0732                       l2314 071C                       l2306 06FF  
                     l2250 04BD                       l2242 04AC                       l2234 0493  
                     l2226 0483                       l2402 0EF6                       l2180 03E8  
                     l2172 03D8                       l2164 03C0                       l2156 0390  
                     l2148 0323                       l2092 0252                       l2084 0242  
                     l2076 0232                       l2068 0219                       l2332 075B  
                     l2340 078E                       l2324 0736                       l2316 0725  
                     l2308 070D                       l2260 04DB                       l2252 04C2  
                     l2244 04B2                       l2236 049C                       l2228 0487  
                     l2404 0EFF                       l1700 0B5A                       l2420 0057  
                     l2412 002B                       l2190 03FD                       l2174 03DD  
                     l2166 03C9                       l2182 03EC                       l2158 0395  
                     l2094 0256                       l2086 0246                       l2078 0236  
                     l2350 07C1                       l2342 079B                       l2334 0769  
                     l2326 074A                       l2318 072C                       l2270 0508  
                     l2262 04E1                       l2254 04CB                       l2246 04B6  
                     l2238 049E                       l1710 0A3A                       l1702 0B61  
                     l2430 0087                       l2422 005E                       l2414 0031  
                     l2192 0404                       l2176 03E0                       l2168 03CB  
                     l2184 03F2                       l2096 025A                       l2088 024A  
                     l2360 07EA                       l2352 07CF                       l2344 07A6  
                     l2336 076D                       l2328 0751                       l2280 05A5  
                     l2272 0525                       l2264 04EA                       l2256 04CD  
                     l2248 04B8                       l1800 0D09                       l1712 0A3D  
                     l1720 0B79                       l1704 0B68                       l2440 00B0  
                     l2432 0098                       l2424 006D                       l2416 0049  
                     l2194 0409                       l2186 03F3                       l2178 03E3  
                     l2098 025E                       l2354 07D3                       l2346 07B5  
                     l2338 0786                       l2290 0608                       l2282 05AE  
                     l2274 0541                       l2266 04EB                       l2258 04D6  
                     l2370 0E68                       l2362 0E3F                       l1810 0D33  
                     l1802 0D17                       l1714 0A3F                       l1722 0B95  
                     l1706 0B70                       l1730 0F0E                       l2450 00E3  
                     l2442 00B9                       l2434 009C                       l2426 0072  
                     l2418 004E                       l2196 040E                       l2188 03F7  
                     l2356 07D5                       l2348 07BF                       l2292 0621  
                     l2284 05BE                       l2276 056D                       l2268 04FB  
                     l2380 0E8D                       l2372 0E71                       l2364 0E44  
                     l1804 0D19                       l1820 0AF8                       l1812 0AC3  
                     l1716 0A49                       l1660 0A35                       l1724 0B9C  
                     l1708 0B75                       l1740 0F3E                       l1732 0F15  
                     l1900 0D37                       l2460 0173                       l2452 00EB  
                     l2444 00C7                       l2436 00A1                       l2428 0081  
                     l2198 041C                       l2358 07E1                       l2294 063E  
                     l2286 05DB                       l2278 0589                       l2390 0EC0  
                     l2382 0E91                       l2374 0E72                       l2366 0E48  
                     l1806 0D22                       l1822 0AF9                       l1814 0AC7  
                     l1830 0A53                       l1654 0A2B                       l1718 0B76  
                     l1670 0BCC                       l1662 0BBA                       l1750 0F58  
                     l1742 0F46                       l1734 0F1A                       l1726 0F03  
                     l1910 0D5C                       l1902 0D41                       l2470 01AC  
                     l2462 0186                       l2454 00FB                       l2446 00CC  
                     l2438 00AB                       l1824 0A0C                       l2296 066B  
                     l2288 05EB                       l2392 0ECB                       l2384 0E9F  
                     l2376 0E77                       l2368 0E58                       l1808 0D2A  
                     l1816 0ACA                       l1840 0B04                       l1832 0A5B  
                     l1656 0A2E                       l1680 0BF0                       l1672 0BD1  
                     l1664 0BBC                       l1760 0F7F                       l1752 0F5A  
                     l1744 0F4A                       l1736 0F20                       l1728 0F08  
                     l1920 0D87                       l1912 0D61                       l1904 0D49  
                     l2464 0192                       l2456 0104                       l2448 00DD  
                     l1826 0A13                       l2298 067B                       l2394 0ED5  
                     l2386 0EB0                       l2378 0E85                       l1818 0AF7  
                     l1850 0B22                       l1842 0B0A                       l1834 0A63  
                     l1658 0A30                       l1930 0C1E                       l1682 0BF7  
                     l1674 0BD7                       l1666 0BC2                       l1690 0B3B  
                     l1770 0FA1                       l1754 0F61                       l1762 0F8A  
                     l1746 0F4E                       l1738 0F21                       l1922 0D8E  
                     l1914 0D6C                       l1906 0D51                       l2466 019E  
                     l2458 0119                       l1860 0A6D                       l2396 0EEB  
                     l2388 0EBC                       l1836 09EB                       l1852 0B28  
                     l1844 0B10                       l1828 0A4E                       l1940 0C45  
                     l1932 0C23                       l1676 0BE8                       l1668 0BC5  
                     l1684 0BFF                       l1692 0B3E                       l1772 0FCF  
                     l1764 0F90                       l1756 0F62                       l1748 0F52  
                     l2492 0F33                       l1780 0FFA                       l1924 0D96  
                     l1916 0D72                       l1908 0D56                       l2468 01A6  
                     l1950 0C69                       l1870 0A93                       l1862 0A75  
                     l2398 0EF0                       l1790 0CD7                       l1854 0B2E  
                     l1846 0B16                       l1838 0AFB                       l1942 0C4E  
                     l1934 0C28                       l1926 0C05                       l1686 0C04  
                     l1678 0BEE                       l1694 0B45                       l1782 0FFF  
                     l1774 0FD6                       l1766 0F97                       l1758 0F7E  
                     l1918 0D7F                       l1872 09FA                       l1880 0003  
                     l1960 0C81                       l1952 0C6E                       l1864 0A79  
                     l1792 0CDA                       l1848 0B1C                       l1944 0C5A  
                     l1936 0C30                       l1928 0C11                       l1696 0B4A  
                     l1688 0B35                       l1776 0FDB                       l1768 0F9C  
                     l1856 0010                       l1890 0AAA                       l1874 09FF  
                     l1882 0008                       l1970 0CA0                       l1962 0C84  
                     l1954 0C71                       l1946 0C64                       l1866 0A88  
                     l1858 0A6B                       l1794 0CE8                       l1938 0C39  
                     l1698 0B50                       l1778 0FE6                       l1892 0AAF  
                     l1884 0A94                       l1876 0A03                       l1980 0CC1  
                     l1972 0CA7                       l1964 0C8B                       l1956 0C75  
                     l1948 0C65                       l1868 0A8E                       l1796 0CEE  
                     l1788 0CC7                       l1894 0AB5                       l1886 0A99  
                     l1878 0A08                       l1982 0CC6                       l1974 0CAE  
                     l1966 0C90                       l1958 0C7B                       l1990 0A29  
                     l1798 0CF7                       l1896 0ABD                       l1888 0AA1  
                     l1968 0C96                       l1976 0CB6                       l1984 0A1B  
                     l1992 0DA4                       l1898 0AC2                       l1978 0CBB  
                     l1986 0A25                       l1994 0DB7                       l1988 0A28  
                     l1996 0DC0                       l1998 0DC1                       STR_1 0826  
                     STR_3 081A                       STR_4 081A                       STR_5 081D  
                     STR_6 0820                       STR_7 0823                       u2010 0A8D  
                     u2011 0A8C                       u2020 0AB5                       u2100 0C94  
                     u2021 0AB4                       u2101 0C93                       u2005 0A80  
                     u2110 0CA0                       u2030 0D51                       u2111 0C9F  
                     u2031 0D50                       u3000 0736                       u2040 0D5C  
                     u3001 0735                       u2041 0D5B                       u2130 0CB4  
                     u3010 074A                       u2210 0E08                       u2050 0D87  
                     u2131 0CB3                       u2115 0C9C                       u3011 0749  
                     u2211 0E07                       u2051 0D86                       u2140 0CBB  
                     u2060 0C69                       u2300 0203                       u3020 0751  
                     u2220 0E10                       u3100 0E48                       u2141 0CBA  
                     u2125 0CA8                       u2061 0C68                       u2301 0202  
                     u3021 0750                       u2221 0E0F                       u2205 0DF8  
                     u3101 0E47                       u2070 0C75                       u2310 020A  
                     u3030 075B                       u2150 0A25                       u3110 0E68  
                     u2071 0C74                       u2311 0209                       u3031 075A  
                     u2151 0A24                       u3111 0E67                       u2080 0C81  
                     u2320 020F                       u3040 076D                       u2240 0E2B  
                     u2160 0DB7                       u3200 0EE0                       u2081 0C80  
                     u2321 020E                       u3041 076C                       u2241 0E2A  
                     u2161 0DB6                       u2410 02D5                       u2330 0229  
                     u3050 077C                       u2250 0E32                       u2170 0DCF  
                     u3210 0EF0                       u3130 0E8B                       u2411 02D4  
                     u2331 0228                       u2251 0E31                       u2235 0E1D  
                     u3211 0EEF                       u3131 0E8A                       u2500 0365  
                     u2420 02DA                       u2340 022D                       u2260 01CB  
                     u3060 079B                       u2180 0DE5                       u3220 0EF4  
                     u1700 0BFD                       u2501 0366                       u2421 02D9  
                     u2405 02C1                       u2341 022C                       u2261 01CA  
                     u3061 079A                       u2181 0DE4                       u3221 0EF3  
                     u3205 0EDB                       u3125 0E7C                       u1701 0BFC  
                     u2510 0377                       u2502 036B                       u2430 02DF  
                     u2350 028C                       u2270 01D2                       u3070 07B5  
                     u2190 0DEC                       u3150 0EAE                       u1710 0B3B  
                     u3230 005E                       u2095 0C85                       u2511 0378  
                     u2503 036C                       u2431 02DE                       u2351 028B  
                     u2271 01D1                       u3071 07B4                       u3055 0777  
                     u2191 0DEB                       u2175 0DCA                       u3151 0EAD  
                     u1711 0B3A                       u3231 005D                       u2600 03F7  
                     u2520 0395                       u2512 037D                       u2360 0297  
                     u2280 01D7                       u3080 07D3                       u1640 0BC2  
                     u1800 0F0E                       u3240 0072                       u2601 03F6  
                     u2521 0394                       u2513 037E                       u2441 02F2  
                     u2361 0295                       u2281 01D6                       u3081 07D2  
                     u3065 0797                       u3145 0EA0                       u1641 0BC1  
                     u1801 0F0D                       u3241 0071                       u2610 03FD  
                     u2530 03BB                       u2450 0304                       u2442 02F9  
                     u2370 0298                       u2290 01F7                       u3170 0EC0  
                     u3090 0E44                       u1730 0B4E                       u1810 0F4E  
                     u3250 0087                       u2611 03FC                       u2531 03BA  
                     u2451 0303                       u2443 0300                       u2355 0288  
                     u2291 01F6                       u3075 07B1                       u3171 0EBF  
                     u3091 0E43                       u3307 0AFF                       u1731 0B4D  
                     u1811 0F4D                       u3251 0086                       u2700 0463  
                     u2620 0404                       u2540 03C0                       u2460 0308  
                     u2380 02AD                       u3180 0EC6                       u1900 0CEC  
                     u1660 0BD5                       u1740 0B5A                       u1820 0F60  
                     u3260 00DD                       u2701 0462                       u2621 0403  
                     u2541 03BF                       u2461 0307                       u2381 02AC  
                     u3181 0EC5                       u3165 0EB4                       u1901 0CEB  
                     u3317 0A44                       u1661 0BD4                       u1741 0B59  
                     u1725 0B3F                       u1821 0F5F                       u3261 00DC  
                     u2710 0474                       u2630 040E                       u2470 0318  
                     u2390 02BD                       u3190 0ECB                       u1830 0F7D  
                     u2711 0473                       u2631 040D                       u2471 0317  
                     u2391 02BC                       u3191 0ECA                       u1655 0BC6  
                     u1831 0F7C                       u2640 0420                       u2560 03D8  
                     u2720 0487                       u1920 0D09                       u1680 0BE8  
                     u1760 0B6E                       u1840 0F89                       u2641 041F  
                     u2561 03D7                       u2801 0533                       u2721 0486  
                     u1921 0D08                       u1681 0BE7                       u1761 0B6D  
                     u1745 0B56                       u1841 0F88                       u2650 042F  
                     u2570 03DD                       u2490 033F                       u2802 053A  
                     u2730 048E                       u1770 0B83                       u1850 0F90  
                     u2571 03DC                       u2555 03CD                       u2491 033E  
                     u2811 054F                       u2803 0541                       u2731 048D  
                     u1915 0CF0                       u1675 0BD8                       u1755 0B62  
                     u1851 0F8F                       u1835 0F79                       u2660 043E  
                     u2580 03E8                       u2812 0556                       u2740 0493  
                     u1940 0D28                       u1780 0BA6                       u1860 0FE4  
                     u2661 043D                       u2581 03E7                       u2493 033B  
                     u2485 031C                       u2901 068A                       u2821 057B  
                     u2813 055D                       u2741 0492                       u1941 0D27  
                     u1925 0D05                       u1685 0BE4                       u1861 0FE3  
                     u3277 00A7                       u2670 0449                       u2590 03F0  
                     u2910 06B4                       u2902 0691                       u2822 0582  
                     u2750 04B6                       u1950 0ADA                       u1790 0BB8  
                     u1870 0FF8                       u2671 0448                       u2655 042A  
                     u2591 03EF                       u2903 0698                       u2831 0597  
                     u2823 0589                       u2751 04B5                       u1935 0D1A  
                     u1791 0BB7                       u1695 0BF1                       u1871 0FF7  
                     u3287 00D2                       u1960 0A13                       u2680 044E  
                     u2832 059E                       u2760 04BD                       u1880 0CD7  
                     u1961 0A12                       u2681 044D                       u2921 06C0  
                     u2833 05A5                       u2761 04BC                       u1881 0CD6  
                     u3297 0A33                       u1970 0A19                       u2690 045C  
                     u2930 06DC                       u2922 06C7                       u2770 04C2  
                     u1971 0A18                       u2691 045B                       u2923 06CE  
                     u2915 06AF                       u2851 05CD                       u2771 04C1  
                     u1955 0AD5                       _PEIE 005E                       u2852 05D4  
                     u2780 04DB                       u1980 0A53                       u2941 06E8  
                     u2861 05FA                       u2853 05DB                       u2845 05A7  
                     u2781 04DA                       u1981 0A52                       u1990 0A79  
                     u2942 06EF                       u2862 0601                       u2790 04E0  
                     u1991 0A78                       u2943 06F6                       u2935 06D7  
                     u2863 0608                       u2791 04DF                       u1895 0CDC  
                     u2881 0630                       u2970 071A                       u2882 0637  
                     u2971 0719                       u2955 06F8                       u2891 065D  
                     u2883 063E                       u2875 060A                       u2892 0664  
                     u2965 070F                       u2893 066B                       u2990 0730  
                     u2991 072F                       u2985 071E               __CFG_WRT$OFF 0000  
                     _dec1 006B                       _dec2 0068                       _adcl 006D  
        writeStrLCD@string 0072                       _main 002B                       btemp 007E  
                     start 0000              __CFG_IESO$OFF 0000           ?_I2C_Master_Init 0020  
         ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
              _writeIntLCD 000D              ___fltol@sign1 0079            __end_of___fladd 0476  
                    ?_main 0070            __end_of___flneg 0A2A              __CFG_WDTE$OFF 0000  
          __end_of___awmod 0CC7            __end_of___flmul 07EB            __end_of___fltol 0E3E  
                    _ANSEL 0188            __end_of___lldiv 0D34            __end_of___lwdiv 0C05  
          __end_of___lwmod 0B76                _writeStrLCD 0B76                      _PORTB 0006  
                    _PORTD 0008                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063             __CFG_FCMEN$OFF 0000  
          __end_of_initLCD 0B35            __end_of_dpowers 081A                      _count 0065  
                    _setup 0C05      __size_of_writeCharLCD 000F             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 1000             __CFG_MCLRE$OFF 0000            __initialization 07EB  
             __end_of_main 01BA                     ??_main 0056               _writeCharLCD 0A2A  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072                     ?_setup 0070                     _ANSELH 0189  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 0F00  
           __CFG_PWRTE$OFF 0000          writeIntLCD@buffer 0030          writeIntLCD@numero 0034  
                   _clcLCD 09EB                     _cmdLCD 0A39                  ??___fladd 002C  
                ??___flneg 007E                  ??___awmod 0074                  ??___flmul 0044  
                ??___fltol 0074                  ??___lldiv 0078                  ??___lwdiv 0074  
                ??___lwmod 007C                     _float1 005A                     _float2 00A4  
                   _cursor 006F            ___awmod@divisor 0070            ___awmod@counter 0075  
                   _toggle 0067                  ??_initLCD 0073         __size_of__Umul8_16 002A  
                ??_sprintf 0023               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070    __end_of__initialization 07FC          writeFloat@decimal 0035  
               ___flneg@f1 0020                 ___fltol@f1 0070          writeFloat@initPos 0036  
        writeFloat@integer 0038             __pcstackCOMMON 0070              __end_of_setup 0C64  
                  ??_setup 0028                 __pbssBANK0 005A                 __pbssBANK1 00A0  
            ?_setCursorLCD 0073          __end_of__Umul8_16 0A94                 __pmaintext 002B  
                  ?_clcLCD 0070                    ?_cmdLCD 0070               ?_writeIntLCD 0070  
             ?_writeStrLCD 0072                  ?___xxtofl 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0800             ??_setCursorLCD 0074  
                  ___fladd 01BA              setCursorLCD@x 0073              setCursorLCD@y 0075  
          __size_of_clcLCD 0007                    ___flneg 0A1B            __size_of_cmdLCD 0014  
                  ___awmod 0C64                    ___flmul 0476                    ___fltol 0DA4  
                  ___lldiv 0CC7                    ___lwdiv 0BBA                    ___lwmod 0B35  
                  __ptext1 0D34                    __ptext2 000D                    __ptext3 0F00  
                  __ptext4 0B35                    __ptext5 0BBA                    __ptext6 0C05  
                  __ptext7 0B76                    __ptext8 0A2A                    __ptext9 0A4D  
                  _initLCD 0AFB                    _entero1 006C                    _entero2 0069  
                  _counter 006A                    _dpowers 0810                 ??___xxtofl 0074  
         ___awmod@dividend 0072   __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002F  
 __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009                    _sprintf 0F00  
                  clrloop0 09F3       end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070            ___lldiv@counter 007D  
         I2C_Master_Init@c 0020           I2C_Master_Read@a 0070                  _PORTDbits 0008  
              ___fladd@grs 003B              ___xxtofl@sign 0078                  _TRISCbits 0087  
              ___flmul@grs 004A                 _writeFloat 0D34             __end_of_clcLCD 09F2  
           __end_of_cmdLCD 0A4D       __end_of_setCursorLCD 0A6A       __size_of_writeIntLCD 001E  
      start_initialization 07EB       __size_of_writeStrLCD 0044          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0073                   ??_cmdLCD 0070  
                __Umul8_16 0A6A                  ___fladd@a 0028                  ___fladd@b 0024  
                ___flmul@a 0040                  ___flmul@b 003C                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00C2      writeCharLCD@character 0071  
              sprintf@flag 0027                sprintf@prec 0028           _I2C_Master_Start 09FA  
         _I2C_Master_Write 0003           ___lwdiv@dividend 0072                  cmdLCD@cmd 0072  
                 ?___fladd 0024                   ?___flneg 0020                   ?___awmod 0070  
                 ?___flmul 003C                   ?___fltol 0070                   ?___lldiv 0070  
              ?_writeFloat 0035                 ?__Umul8_16 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                  __pstrings 0800                   ?_initLCD 0070  
            ?_writeCharLCD 0070           ___lwdiv@quotient 0075                   ?_sprintf 0020  
           __size_of_setup 005F                  clear_ram0 09F2      __size_of_setCursorLCD 001D  
              __stringbase 080F             ??_writeCharLCD 0070        I2C_Master_Read@temp 0074  
      __size_of_writeFloat 0070               _setCursorLCD 0A4D                ??__Umul8_16 0072  
         __size_of___fladd 02BC           __size_of___flneg 000F           __size_of___awmod 0063  
         __size_of___flmul 0375           __size_of___fltol 009A           __size_of___lldiv 006D  
         __size_of___lwdiv 004B           __size_of___lwmod 0041         __end_of__stringtab 0810  
               sprintf@val 0029            _I2C_Master_Init 0AC3            _I2C_Master_Read 0A94  
         __size_of_initLCD 003A                   ___xxtofl 0E3E            _I2C_Master_Wait 0A0C  
          _I2C_Master_Stop 0A03            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0AFB                   __ptext11 09EB                   __ptext20 01BA  
                 __ptext12 0A39                   __ptext21 0C64                   __ptext13 0AC3  
                 __ptext22 0003                   __ptext14 0CC7                   __ptext23 0A03  
                 __ptext15 0E3E                   __ptext24 09FA                   __ptext16 0DA4  
                 __ptext25 0A94                   __ptext17 0A1B                   __ptext26 0A0C  
                 __ptext18 0476                   __ptext19 0A6A          __CFG_BOR4V$BOR40V 0000  
         __size_of_sprintf 0100              __size_of_main 018F                   _sensorF1 005E  
                 _sensorF2 00A8              ??_writeIntLCD 002D                   _writeADC 0062  
            ??_writeStrLCD 0074   __end_of_I2C_Master_Start 0A03   __end_of_I2C_Master_Write 000D  
                sprintf@ap 0026                  sprintf@sp 002B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074       __end_of_writeCharLCD 0A39                  stringcode 080A  
             ??_writeFloat 0037    __end_of_I2C_Master_Init 0AFB    __end_of_I2C_Master_Read 0AC3  
  __end_of_I2C_Master_Wait 0A1B    __end_of_I2C_Master_Stop 0A0C     __Umul8_16@multiplicand 0070  
                 sprintf@c 002C                   sprintf@f 0020           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 080A                   stringtab 0800        __end_of_writeIntLCD 002B  
              _SSPCON2bits 0091        __end_of_writeStrLCD 0BBA              ___fladd@signs 0038  
       __end_of_writeFloat 0DA4               ___fladd@aexp 0039               ___fladd@bexp 003A  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
