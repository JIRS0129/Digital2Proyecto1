

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Mar 09 16:19:33 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,_I2C_Master_Read
  1024                           	FNCALL	_main,_I2C_Master_Start
  1025                           	FNCALL	_main,_I2C_Master_Stop
  1026                           	FNCALL	_main,_I2C_Master_Write
  1027                           	FNCALL	_main,___awdiv
  1028                           	FNCALL	_main,___awmod
  1029                           	FNCALL	_main,___fladd
  1030                           	FNCALL	_main,___fldiv
  1031                           	FNCALL	_main,___flmul
  1032                           	FNCALL	_main,___flneg
  1033                           	FNCALL	_main,___fltol
  1034                           	FNCALL	_main,___wmul
  1035                           	FNCALL	_main,___xxtofl
  1036                           	FNCALL	_main,_sendUSART
  1037                           	FNCALL	_main,_setCursorLCD
  1038                           	FNCALL	_main,_setup
  1039                           	FNCALL	_main,_writeCharLCD
  1040                           	FNCALL	_main,_writeIntLCD
  1041                           	FNCALL	_main,_writeStrLCD
  1042                           	FNCALL	_writeIntLCD,_sprintf
  1043                           	FNCALL	_writeIntLCD,_writeStrLCD
  1044                           	FNCALL	_writeStrLCD,_writeCharLCD
  1045                           	FNCALL	_sprintf,___lwdiv
  1046                           	FNCALL	_sprintf,___lwmod
  1047                           	FNCALL	_setup,_I2C_Master_Init
  1048                           	FNCALL	_setup,_clcLCD
  1049                           	FNCALL	_setup,_initLCD
  1050                           	FNCALL	_setup,_initUSART
  1051                           	FNCALL	_initLCD,_cmdLCD
  1052                           	FNCALL	_clcLCD,_cmdLCD
  1053                           	FNCALL	_I2C_Master_Init,___lldiv
  1054                           	FNCALL	_setCursorLCD,_cmdLCD
  1055                           	FNCALL	___flmul,__Umul8_16
  1056                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
  1057                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
  1058                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
  1059                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
  1060                           	FNROOT	_main
  1061                           	FNCALL	_isr,_readADC
  1062                           	FNCALL	intlevel1,_isr
  1063                           	global	intlevel1
  1064                           	FNROOT	intlevel1
  1065                           	global	_dpowers
  1066                           psect	strings,class=STRING,delta=2,noexec
  1067                           global __pstrings
  1068                           __pstrings:
  1069  0800                     stringtab:
  1070  0800                     	global    __stringtab
  1071                           __stringtab:
  1072  0800                     ;	String table - string pointers are 1 byte each
  1073                           	btfsc	(btemp+1),7
  1074  0800  1BFF               	ljmp	stringcode
  1075  0801  280A               	bcf	status,7
  1076  0802  1383               	btfsc	(btemp+1),0
  1077  0803  187F               	bsf	status,7
  1078  0804  1783               	movf	indf,w
  1079  0805  0800               	incf fsr
  1080  0806  0A84               skipnz
  1081  0807  1903               incf btemp+1
  1082  0808  0AFF               	return
  1083  0809  0008               stringcode:stringdir:
  1084  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
  1085  080A  3008               movwf pclath
  1086  080B  008A               movf fsr,w
  1087  080C  0804               incf fsr
  1088  080D  0A84               	addwf pc
  1089  080E  0782               	global __stringbase
  1090                           __stringbase:
  1091  080F                     	retlw	0
  1092  080F  3400               psect	strings
  1093                           	global    __end_of__stringtab
  1094                           __end_of__stringtab:
  1095  0810                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1096                           	line	358
  1097                           _dpowers:
  1098  0810                     	retlw	01h
  1099  0810  3401               	retlw	0
  1100  0811  3400               
  1101                           	retlw	0Ah
  1102  0812  340A               	retlw	0
  1103  0813  3400               
  1104                           	retlw	064h
  1105  0814  3464               	retlw	0
  1106  0815  3400               
  1107                           	retlw	0E8h
  1108  0816  34E8               	retlw	03h
  1109  0817  3403               
  1110                           	retlw	010h
  1111  0818  3410               	retlw	027h
  1112  0819  3427               
  1113                           	global __end_of_dpowers
  1114                           __end_of_dpowers:
  1115  081A                     	global	_dpowers
  1116                           	global	_count2
  1117                           	global	_count
  1118                           	global	_hall
  1119                           	global	_receiveUSART
  1120                           	global	_screenCounter
  1121                           	global	_entero1
  1122                           	global	_sensorF2
  1123                           	global	_float1
  1124                           	global	_sensorF1
  1125                           	global	_screenState
  1126                           	global	_antibounce2
  1127                           	global	_antibounce
  1128                           	global	_garage
  1129                           	global	_ir
  1130                           	global	_count3
  1131                           	global	_toggle3
  1132                           	global	_mov
  1133                           	global	_signal
  1134                           	global	_adcP
  1135                           	global	_toggle2
  1136                           	global	_toggle
  1137                           	global	_alarm
  1138                           	global	_dec1
  1139                           	global	_adc
  1140                           	global	_adcT
  1141                           	global	_cursor
  1142                           	global	_TXREG
  1143                           _TXREG	set	0x19
  1144  0019                     	global	_RCSTAbits
  1145                           _RCSTAbits	set	0x18
  1146  0018                     	global	_INTCONbits
  1147                           _INTCONbits	set	0xB
  1148  000B                     	global	_ADRESH
  1149                           _ADRESH	set	0x1E
  1150  001E                     	global	_PORTD
  1151                           _PORTD	set	0x8
  1152  0008                     	global	_RCREG
  1153                           _RCREG	set	0x1A
  1154  001A                     	global	_PORTAbits
  1155                           _PORTAbits	set	0x5
  1156  0005                     	global	_PIR1bits
  1157                           _PIR1bits	set	0xC
  1158  000C                     	global	_ADCON0bits
  1159                           _ADCON0bits	set	0x1F
  1160  001F                     	global	_PORTB
  1161                           _PORTB	set	0x6
  1162  0006                     	global	_SSPBUF
  1163                           _SSPBUF	set	0x13
  1164  0013                     	global	_SSPCON
  1165                           _SSPCON	set	0x14
  1166  0014                     	global	_RD1
  1167                           _RD1	set	0x41
  1168  0041                     	global	_RD0
  1169                           _RD0	set	0x40
  1170  0040                     	global	_SSPIF
  1171                           _SSPIF	set	0x63
  1172  0063                     	global	_PEIE
  1173                           _PEIE	set	0x5E
  1174  005E                     	global	_GIE
  1175                           _GIE	set	0x5F
  1176  005F                     	global	_SPBRGH
  1177                           _SPBRGH	set	0x9A
  1178  009A                     	global	_SPBRG
  1179                           _SPBRG	set	0x99
  1180  0099                     	global	_TXSTAbits
  1181                           _TXSTAbits	set	0x98
  1182  0098                     	global	_ADCON1bits
  1183                           _ADCON1bits	set	0x9F
  1184  009F                     	global	_PIE1bits
  1185                           _PIE1bits	set	0x8C
  1186  008C                     	global	_TRISBbits
  1187                           _TRISBbits	set	0x86
  1188  0086                     	global	_TRISEbits
  1189                           _TRISEbits	set	0x89
  1190  0089                     	global	_TRISAbits
  1191                           _TRISAbits	set	0x85
  1192  0085                     	global	_TRISD
  1193                           _TRISD	set	0x88
  1194  0088                     	global	_TRISB
  1195                           _TRISB	set	0x86
  1196  0086                     	global	_SSPCON2bits
  1197                           _SSPCON2bits	set	0x91
  1198  0091                     	global	_TRISCbits
  1199                           _TRISCbits	set	0x87
  1200  0087                     	global	_SSPSTAT
  1201                           _SSPSTAT	set	0x94
  1202  0094                     	global	_SSPADD
  1203                           _SSPADD	set	0x93
  1204  0093                     	global	_SSPCON2
  1205                           _SSPCON2	set	0x91
  1206  0091                     	global	_SSPIE
  1207                           _SSPIE	set	0x463
  1208  0463                     	global	_TRISC4
  1209                           _TRISC4	set	0x43C
  1210  043C                     	global	_TRISC3
  1211                           _TRISC3	set	0x43B
  1212  043B                     	global	_BAUDCTLbits
  1213                           _BAUDCTLbits	set	0x187
  1214  0187                     	global	_ANSELHbits
  1215                           _ANSELHbits	set	0x189
  1216  0189                     	global	_ANSELbits
  1217                           _ANSELbits	set	0x188
  1218  0188                     	global	_ANSELH
  1219                           _ANSELH	set	0x189
  1220  0189                     	global	_ANSEL
  1221                           _ANSEL	set	0x188
  1222  0188                     	
  1223                           STR_23:	
  1224  081A                     	retlw	80	;'P'
  1225  081A  3450               	retlw	85	;'U'
  1226  081B  3455               	retlw	69	;'E'
  1227  081C  3445               	retlw	82	;'R'
  1228  081D  3452               	retlw	84	;'T'
  1229  081E  3454               	retlw	65	;'A'
  1230  081F  3441               	retlw	32	;' '
  1231  0820  3420               	retlw	67	;'C'
  1232  0821  3443               	retlw	69	;'E'
  1233  0822  3445               	retlw	82	;'R'
  1234  0823  3452               	retlw	82	;'R'
  1235  0824  3452               	retlw	65	;'A'
  1236  0825  3441               	retlw	68	;'D'
  1237  0826  3444               	retlw	65	;'A'
  1238  0827  3441               	retlw	0
  1239  0828  3400               psect	strings
  1240                           	
  1241                           STR_22:	
  1242  0829                     	retlw	80	;'P'
  1243  0829  3450               	retlw	85	;'U'
  1244  082A  3455               	retlw	69	;'E'
  1245  082B  3445               	retlw	82	;'R'
  1246  082C  3452               	retlw	84	;'T'
  1247  082D  3454               	retlw	65	;'A'
  1248  082E  3441               	retlw	32	;' '
  1249  082F  3420               	retlw	65	;'A'
  1250  0830  3441               	retlw	66	;'B'
  1251  0831  3442               	retlw	73	;'I'
  1252  0832  3449               	retlw	69	;'E'
  1253  0833  3445               	retlw	82	;'R'
  1254  0834  3452               	retlw	84	;'T'
  1255  0835  3454               	retlw	65	;'A'
  1256  0836  3441               	retlw	0
  1257  0837  3400               psect	strings
  1258                           	
  1259                           STR_12:	
  1260  0838                     	retlw	71	;'G'
  1261  0838  3447               	retlw	65	;'A'
  1262  0839  3441               	retlw	82	;'R'
  1263  083A  3452               	retlw	65	;'A'
  1264  083B  3441               	retlw	71	;'G'
  1265  083C  3447               	retlw	69	;'E'
  1266  083D  3445               	retlw	32	;' '
  1267  083E  3420               	retlw	67	;'C'
  1268  083F  3443               	retlw	69	;'E'
  1269  0840  3445               	retlw	82	;'R'
  1270  0841  3452               	retlw	82	;'R'
  1271  0842  3452               	retlw	65	;'A'
  1272  0843  3441               	retlw	68	;'D'
  1273  0844  3444               	retlw	79	;'O'
  1274  0845  344F               	retlw	0
  1275  0846  3400               psect	strings
  1276                           	
  1277                           STR_10:	
  1278  0847                     	retlw	83	;'S'
  1279  0847  3453               	retlw	73	;'I'
  1280  0848  3449               	retlw	78	;'N'
  1281  0849  344E               	retlw	32	;' '
  1282  084A  3420               	retlw	77	;'M'
  1283  084B  344D               	retlw	79	;'O'
  1284  084C  344F               	retlw	86	;'V'
  1285  084D  3456               	retlw	73	;'I'
  1286  084E  3449               	retlw	77	;'M'
  1287  084F  344D               	retlw	73	;'I'
  1288  0850  3449               	retlw	69	;'E'
  1289  0851  3445               	retlw	78	;'N'
  1290  0852  344E               	retlw	84	;'T'
  1291  0853  3454               	retlw	79	;'O'
  1292  0854  344F               	retlw	0
  1293  0855  3400               psect	strings
  1294                           	
  1295                           STR_11:	
  1296  0856                     	retlw	71	;'G'
  1297  0856  3447               	retlw	65	;'A'
  1298  0857  3441               	retlw	82	;'R'
  1299  0858  3452               	retlw	65	;'A'
  1300  0859  3441               	retlw	71	;'G'
  1301  085A  3447               	retlw	69	;'E'
  1302  085B  3445               	retlw	32	;' '
  1303  085C  3420               	retlw	65	;'A'
  1304  085D  3441               	retlw	66	;'B'
  1305  085E  3442               	retlw	73	;'I'
  1306  085F  3449               	retlw	69	;'E'
  1307  0860  3445               	retlw	82	;'R'
  1308  0861  3452               	retlw	84	;'T'
  1309  0862  3454               	retlw	79	;'O'
  1310  0863  344F               	retlw	0
  1311  0864  3400               psect	strings
  1312                           	
  1313                           STR_5:	
  1314  0865                     	retlw	32	;' '
  1315  0865  3420               	retlw	32	;' '
  1316  0866  3420               	retlw	32	;' '
  1317  0867  3420               	retlw	32	;' '
  1318  0868  3420               	retlw	32	;' '
  1319  0869  3420               	retlw	32	;' '
  1320  086A  3420               	retlw	32	;' '
  1321  086B  3420               	retlw	32	;' '
  1322  086C  3420               	retlw	32	;' '
  1323  086D  3420               	retlw	32	;' '
  1324  086E  3420               	retlw	32	;' '
  1325  086F  3420               	retlw	0
  1326  0870  3400               psect	strings
  1327                           	
  1328                           STR_21:	
  1329  0871                     	retlw	68	;'D'
  1330  0871  3444               	retlw	69	;'E'
  1331  0872  3445               	retlw	83	;'S'
  1332  0873  3453               	retlw	67	;'C'
  1333  0874  3443               	retlw	65	;'A'
  1334  0875  3441               	retlw	84	;'T'
  1335  0876  3454               	retlw	73	;'I'
  1336  0877  3449               	retlw	86	;'V'
  1337  0878  3456               	retlw	65	;'A'
  1338  0879  3441               	retlw	68	;'D'
  1339  087A  3444               	retlw	65	;'A'
  1340  087B  3441               	retlw	0
  1341  087C  3400               psect	strings
  1342                           	
  1343                           STR_19:	
  1344  087D                     	retlw	65	;'A'
  1345  087D  3441               	retlw	76	;'L'
  1346  087E  344C               	retlw	65	;'A'
  1347  087F  3441               	retlw	82	;'R'
  1348  0880  3452               	retlw	77	;'M'
  1349  0881  344D               	retlw	65	;'A'
  1350  0882  3441               	retlw	32	;' '
  1351  0883  3420               	retlw	0
  1352  0884  3400               psect	strings
  1353                           	
  1354                           STR_6:	
  1355  0885                     	retlw	80	;'P'
  1356  0885  3450               	retlw	85	;'U'
  1357  0886  3455               	retlw	69	;'E'
  1358  0887  3445               	retlw	82	;'R'
  1359  0888  3452               	retlw	84	;'T'
  1360  0889  3454               	retlw	65	;'A'
  1361  088A  3441               	retlw	32	;' '
  1362  088B  3420               	retlw	0
  1363  088C  3400               psect	strings
  1364                           	
  1365                           STR_20:	
  1366  088D                     	retlw	65	;'A'
  1367  088D  3441               	retlw	67	;'C'
  1368  088E  3443               	retlw	84	;'T'
  1369  088F  3454               	retlw	73	;'I'
  1370  0890  3449               	retlw	86	;'V'
  1371  0891  3456               	retlw	65	;'A'
  1372  0892  3441               	retlw	0
  1373  0893  3400               psect	strings
  1374                           	
  1375                           STR_3:	
  1376  0894                     	retlw	84	;'T'
  1377  0894  3454               	retlw	69	;'E'
  1378  0895  3445               	retlw	77	;'M'
  1379  0896  344D               	retlw	80	;'P'
  1380  0897  3450               	retlw	32	;' '
  1381  0898  3420               	retlw	0
  1382  0899  3400               psect	strings
  1383                           	
  1384                           STR_4:	
  1385  089A                     	retlw	76	;'L'
  1386  089A  344C               	retlw	85	;'U'
  1387  089B  3455               	retlw	90	;'Z'
  1388  089C  345A               	retlw	32	;' '
  1389  089D  3420               	retlw	0
  1390  089E  3400               psect	strings
  1391                           	
  1392                           STR_1:	
  1393  089F                     	retlw	37	;'%'
  1394  089F  3425               	retlw	100	;'d'
  1395  08A0  3464               	retlw	0
  1396  08A1  3400               psect	strings
  1397                           STR_2	equ	STR_1+0
  1398  089F                     STR_24	equ	STR_11+0
  1399  0856                     STR_18	equ	STR_10+0
  1400  0847                     STR_9	equ	STR_10+4
  1401  084B                     STR_17	equ	STR_10+4
  1402  084B                     STR_25	equ	STR_12+0
  1403  0838                     STR_7	equ	STR_22+7
  1404  0830                     STR_15	equ	STR_22+7
  1405  0830                     STR_8	equ	STR_23+7
  1406  0821                     STR_16	equ	STR_23+7
  1407  0821                     STR_14	equ	STR_6+0
  1408  0885                     STR_13	equ	STR_5+0
  1409  0865                     ; #config settings
  1410                           global __CFG_FOSC$INTRC_NOCLKOUT
  1411                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1412  0000                     global __CFG_WDTE$OFF
  1413                           __CFG_WDTE$OFF equ 0x0
  1414  0000                     global __CFG_PWRTE$OFF
  1415                           __CFG_PWRTE$OFF equ 0x0
  1416  0000                     global __CFG_MCLRE$OFF
  1417                           __CFG_MCLRE$OFF equ 0x0
  1418  0000                     global __CFG_CP$OFF
  1419                           __CFG_CP$OFF equ 0x0
  1420  0000                     global __CFG_CPD$OFF
  1421                           __CFG_CPD$OFF equ 0x0
  1422  0000                     global __CFG_BOREN$OFF
  1423                           __CFG_BOREN$OFF equ 0x0
  1424  0000                     global __CFG_IESO$OFF
  1425                           __CFG_IESO$OFF equ 0x0
  1426  0000                     global __CFG_FCMEN$OFF
  1427                           __CFG_FCMEN$OFF equ 0x0
  1428  0000                     global __CFG_LVP$OFF
  1429                           __CFG_LVP$OFF equ 0x0
  1430  0000                     global __CFG_BOR4V$BOR40V
  1431                           __CFG_BOR4V$BOR40V equ 0x0
  1432  0000                     global __CFG_WRT$OFF
  1433                           __CFG_WRT$OFF equ 0x0
  1434  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\saek."
  1435                           	line	#
  1436                           psect cinit,class=CODE,delta=2
  1437                           global start_initialization
  1438                           start_initialization:
  1439  000F                     
  1440                           global __initialization
  1441                           __initialization:
  1442  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1443                           global __pbssCOMMON
  1444                           __pbssCOMMON:
  1445  0078                     _count2:
  1446  0078                            ds      1
  1447  0078                     
  1448                           _count:
  1449  0079                            ds      1
  1450  0079                     
  1451                           _hall:
  1452  007A                            ds      1
  1453  007A                     
  1454                           psect	bssBANK0,class=BANK0,space=1,noexec
  1455                           global __pbssBANK0
  1456                           __pbssBANK0:
  1457  006D                     _receiveUSART:
  1458  006D                            ds      1
  1459  006D                     
  1460                           _screenCounter:
  1461  006E                            ds      1
  1462  006E                     
  1463                           _entero1:
  1464  006F                            ds      1
  1465  006F                     
  1466                           psect	bssBANK1,class=BANK1,space=1,noexec
  1467                           global __pbssBANK1
  1468                           __pbssBANK1:
  1469  00A0                     _float2:
  1470  00A0                            ds      4
  1471  00A0                     
  1472                           _sensorF2:
  1473  00A4                            ds      4
  1474  00A4                     
  1475                           _float1:
  1476  00A8                            ds      4
  1477  00A8                     
  1478                           _sensorF1:
  1479  00AC                            ds      4
  1480  00AC                     
  1481                           _screenState:
  1482  00B0                            ds      1
  1483  00B0                     
  1484                           _antibounce2:
  1485  00B1                            ds      1
  1486  00B1                     
  1487                           _antibounce:
  1488  00B2                            ds      1
  1489  00B2                     
  1490                           _garage:
  1491  00B3                            ds      1
  1492  00B3                     
  1493                           _ir:
  1494  00B4                            ds      1
  1495  00B4                     
  1496                           _count3:
  1497  00B5                            ds      1
  1498  00B5                     
  1499                           _toggle3:
  1500  00B6                            ds      1
  1501  00B6                     
  1502                           _mov:
  1503  00B7                            ds      1
  1504  00B7                     
  1505                           _signal:
  1506  00B8                            ds      1
  1507  00B8                     
  1508                           _adcP:
  1509  00B9                            ds      1
  1510  00B9                     
  1511                           _toggle2:
  1512  00BA                            ds      1
  1513  00BA                     
  1514                           _s3:
  1515  00BB                            ds      1
  1516  00BB                     
  1517                           _toggle:
  1518  00BC                            ds      1
  1519  00BC                     
  1520                           _dec2:
  1521  00BD                            ds      1
  1522  00BD                     
  1523                           _entero2:
  1524  00BE                            ds      1
  1525  00BE                     
  1526                           _alarm:
  1527  00BF                            ds      1
  1528  00BF                     
  1529                           _dec1:
  1530  00C0                            ds      1
  1531  00C0                     
  1532                           _adc:
  1533  00C1                            ds      1
  1534  00C1                     
  1535                           _adcT:
  1536  00C2                            ds      1
  1537  00C2                     
  1538                           _adcValue:
  1539  00C3                            ds      1
  1540  00C3                     
  1541                           _cursor:
  1542  00C4                            ds      1
  1543  00C4                     
  1544                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\saek."
  1545                           	line	#
  1546                           psect clrtext,class=CODE,delta=2
  1547                           global clear_ram0
  1548                           ;	Called with FSR containing the base address, and
  1549                           ;	W with the last address+1
  1550                           clear_ram0:
  1551  1184                     	clrwdt			;clear the watchdog before getting into this loop
  1552  1184  0064               clrloop0:
  1553  1185                     	clrf	indf		;clear RAM location pointed to by FSR
  1554  1185  0180               	incf	fsr,f		;increment pointer
  1555  1186  0A84               	xorwf	fsr,w		;XOR with final address
  1556  1187  0604               	btfsc	status,2	;have we reached the end yet?
  1557  1188  1903               	retlw	0		;all done for this memory range, return
  1558  1189  3400               	xorwf	fsr,w		;XOR again to restore value
  1559  118A  0604               	goto	clrloop0		;do the next byte
  1560  118B  2985               
  1561                           ; Clear objects allocated to COMMON
  1562                           psect cinit,class=CODE,delta=2,merge=1
  1563                           	clrf	((__pbssCOMMON)+0)&07Fh
  1564  000F  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
  1565  0010  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
  1566  0011  01FA               ; Clear objects allocated to BANK0
  1567                           psect cinit,class=CODE,delta=2,merge=1
  1568                           	bcf	status, 5	;RP0=0, select bank0
  1569  0012  1283               	bcf	status, 6	;RP1=0, select bank0
  1570  0013  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1571  0014  01ED               	clrf	((__pbssBANK0)+1)&07Fh
  1572  0015  01EE               	clrf	((__pbssBANK0)+2)&07Fh
  1573  0016  01EF               ; Clear objects allocated to BANK1
  1574                           psect cinit,class=CODE,delta=2,merge=1
  1575                           	bcf	status, 7	;select IRP bank0
  1576  0017  1383               	movlw	low(__pbssBANK1)
  1577  0018  30A0               	movwf	fsr
  1578  0019  0084               	movlw	low((__pbssBANK1)+025h)
  1579  001A  30C5               	fcall	clear_ram0
  1580  001B  160A  118A  2184  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1581                           global end_of_initialization,__end_of__initialization
  1582                           
  1583                           ;End of C runtime variable initialization code
  1584                           
  1585                           end_of_initialization:
  1586  0020                     __end_of__initialization:
  1587  0020                     clrf status
  1588  0020  0183               ljmp _main	;jump to C main() function
  1589  0021  120A  118A  2824   psect	cstackBANK1,class=BANK1,space=1,noexec
  1590                           global __pcstackBANK1
  1591                           __pcstackBANK1:
  1592  00C5                     	global	___fldiv@rem
  1593                           ___fldiv@rem:	; 4 bytes @ 0x0
  1594  00C5                     	ds	4
  1595  00C5                     	global	___fldiv@sign
  1596                           ___fldiv@sign:	; 1 bytes @ 0x4
  1597  00C9                     	ds	1
  1598  00C9                     	global	___fldiv@new_exp
  1599                           ___fldiv@new_exp:	; 2 bytes @ 0x5
  1600  00CA                     	ds	2
  1601  00CA                     	global	___fldiv@grs
  1602                           ___fldiv@grs:	; 4 bytes @ 0x7
  1603  00CC                     	ds	4
  1604  00CC                     	global	___fldiv@bexp
  1605                           ___fldiv@bexp:	; 1 bytes @ 0xB
  1606  00D0                     	ds	1
  1607  00D0                     	global	___fldiv@aexp
  1608                           ___fldiv@aexp:	; 1 bytes @ 0xC
  1609  00D1                     	ds	1
  1610  00D1                     ??_main:	; 1 bytes @ 0xD
  1611  00D2                     	ds	4
  1612  00D2                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1613                           global __pcstackCOMMON
  1614                           __pcstackCOMMON:
  1615  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1616  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1617  0070                     ?_readADC:	; 1 bytes @ 0x0
  1618  0070                     ??_readADC:	; 1 bytes @ 0x0
  1619  0070                     ?_setup:	; 1 bytes @ 0x0
  1620  0070                     ?_sendUSART:	; 1 bytes @ 0x0
  1621  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1622  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1623  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1624  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1625  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1626  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1627  0070                     ?_isr:	; 1 bytes @ 0x0
  1628  0070                     ??_isr:	; 1 bytes @ 0x0
  1629  0070                     ?_main:	; 1 bytes @ 0x0
  1630  0070                     	ds	3
  1631  0070                     ??_cmdLCD:	; 1 bytes @ 0x3
  1632  0073                     ??_writeCharLCD:	; 1 bytes @ 0x3
  1633  0073                     ??_sendUSART:	; 1 bytes @ 0x3
  1634  0073                     ?_initUSART:	; 1 bytes @ 0x3
  1635  0073                     ??_I2C_Master_Wait:	; 1 bytes @ 0x3
  1636  0073                     ??_I2C_Master_Start:	; 1 bytes @ 0x3
  1637  0073                     ??_I2C_Master_Stop:	; 1 bytes @ 0x3
  1638  0073                     ?_I2C_Master_Write:	; 1 bytes @ 0x3
  1639  0073                     ??___lldiv:	; 1 bytes @ 0x3
  1640  0073                     	global	?__Umul8_16
  1641                           ?__Umul8_16:	; 2 bytes @ 0x3
  1642  0073                     	global	?_I2C_Master_Read
  1643                           ?_I2C_Master_Read:	; 2 bytes @ 0x3
  1644  0073                     	global	?___wmul
  1645                           ?___wmul:	; 2 bytes @ 0x3
  1646  0073                     	global	?___awmod
  1647                           ?___awmod:	; 2 bytes @ 0x3
  1648  0073                     	global	?___lwdiv
  1649                           ?___lwdiv:	; 2 bytes @ 0x3
  1650  0073                     	global	?___fltol
  1651                           ?___fltol:	; 4 bytes @ 0x3
  1652  0073                     	global	?___xxtofl
  1653                           ?___xxtofl:	; 4 bytes @ 0x3
  1654  0073                     	global	__Umul8_16@multiplicand
  1655                           __Umul8_16@multiplicand:	; 1 bytes @ 0x3
  1656  0073                     	global	I2C_Master_Write@d
  1657                           I2C_Master_Write@d:	; 2 bytes @ 0x3
  1658  0073                     	global	I2C_Master_Read@a
  1659                           I2C_Master_Read@a:	; 2 bytes @ 0x3
  1660  0073                     	global	initUSART@baudrate
  1661                           initUSART@baudrate:	; 2 bytes @ 0x3
  1662  0073                     	global	___wmul@multiplier
  1663                           ___wmul@multiplier:	; 2 bytes @ 0x3
  1664  0073                     	global	___awmod@divisor
  1665                           ___awmod@divisor:	; 2 bytes @ 0x3
  1666  0073                     	global	___lwdiv@divisor
  1667                           ___lwdiv@divisor:	; 2 bytes @ 0x3
  1668  0073                     	global	___fltol@f1
  1669                           ___fltol@f1:	; 4 bytes @ 0x3
  1670  0073                     	global	___xxtofl@val
  1671                           ___xxtofl@val:	; 4 bytes @ 0x3
  1672  0073                     	ds	1
  1673  0073                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1674  0074                     	global	writeCharLCD@character
  1675                           writeCharLCD@character:	; 1 bytes @ 0x4
  1676  0074                     	global	sendUSART@data
  1677                           sendUSART@data:	; 1 bytes @ 0x4
  1678  0074                     	ds	1
  1679  0074                     ??__Umul8_16:	; 1 bytes @ 0x5
  1680  0075                     ??_I2C_Master_Write:	; 1 bytes @ 0x5
  1681  0075                     ??_I2C_Master_Read:	; 1 bytes @ 0x5
  1682  0075                     ?_writeStrLCD:	; 1 bytes @ 0x5
  1683  0075                     	global	cmdLCD@cmd
  1684                           cmdLCD@cmd:	; 1 bytes @ 0x5
  1685  0075                     	global	initUSART@txint
  1686                           initUSART@txint:	; 1 bytes @ 0x5
  1687  0075                     	global	writeStrLCD@string
  1688                           writeStrLCD@string:	; 2 bytes @ 0x5
  1689  0075                     	global	___wmul@multiplicand
  1690                           ___wmul@multiplicand:	; 2 bytes @ 0x5
  1691  0075                     	global	___awmod@dividend
  1692                           ___awmod@dividend:	; 2 bytes @ 0x5
  1693  0075                     	global	___lwdiv@dividend
  1694                           ___lwdiv@dividend:	; 2 bytes @ 0x5
  1695  0075                     	ds	1
  1696  0075                     ?_setCursorLCD:	; 1 bytes @ 0x6
  1697  0076                     ??_clcLCD:	; 1 bytes @ 0x6
  1698  0076                     ??_initLCD:	; 1 bytes @ 0x6
  1699  0076                     	global	setCursorLCD@x
  1700                           setCursorLCD@x:	; 1 bytes @ 0x6
  1701  0076                     	global	initUSART@rcint
  1702                           initUSART@rcint:	; 1 bytes @ 0x6
  1703  0076                     	ds	1
  1704  0076                     ??_setCursorLCD:	; 1 bytes @ 0x7
  1705  0077                     ??___wmul:	; 1 bytes @ 0x7
  1706  0077                     ??___awdiv:	; 1 bytes @ 0x7
  1707  0077                     ??___awmod:	; 1 bytes @ 0x7
  1708  0077                     ??___flneg:	; 1 bytes @ 0x7
  1709  0077                     ??___lwdiv:	; 1 bytes @ 0x7
  1710  0077                     	global	initUSART@syncrono
  1711                           initUSART@syncrono:	; 1 bytes @ 0x7
  1712  0077                     	ds	1
  1713  0077                     ??_setup:	; 1 bytes @ 0x8
  1714  0078                     ??_initUSART:	; 1 bytes @ 0x8
  1715  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1716                           global __pcstackBANK0
  1717                           __pcstackBANK0:
  1718  0020                     ??_writeStrLCD:	; 1 bytes @ 0x0
  1719  0020                     ??___fltol:	; 1 bytes @ 0x0
  1720  0020                     ??___xxtofl:	; 1 bytes @ 0x0
  1721  0020                     	global	?___lldiv
  1722                           ?___lldiv:	; 4 bytes @ 0x0
  1723  0020                     	global	setCursorLCD@y
  1724                           setCursorLCD@y:	; 1 bytes @ 0x0
  1725  0020                     	global	___awmod@counter
  1726                           ___awmod@counter:	; 1 bytes @ 0x0
  1727  0020                     	global	___lwdiv@counter
  1728                           ___lwdiv@counter:	; 1 bytes @ 0x0
  1729  0020                     	global	I2C_Master_Read@temp
  1730                           I2C_Master_Read@temp:	; 2 bytes @ 0x0
  1731  0020                     	global	___wmul@product
  1732                           ___wmul@product:	; 2 bytes @ 0x0
  1733  0020                     	global	__Umul8_16@product
  1734                           __Umul8_16@product:	; 2 bytes @ 0x0
  1735  0020                     	global	___lldiv@divisor
  1736                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1737  0020                     	ds	1
  1738  0020                     	global	___awmod@sign
  1739                           ___awmod@sign:	; 1 bytes @ 0x1
  1740  0021                     	global	___lwdiv@quotient
  1741                           ___lwdiv@quotient:	; 2 bytes @ 0x1
  1742  0021                     	ds	1
  1743  0021                     	global	?___awdiv
  1744                           ?___awdiv:	; 2 bytes @ 0x2
  1745  0022                     	global	___awdiv@divisor
  1746                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1747  0022                     	global	__Umul8_16@word_mpld
  1748                           __Umul8_16@word_mpld:	; 2 bytes @ 0x2
  1749  0022                     	ds	1
  1750  0022                     	global	?___lwmod
  1751                           ?___lwmod:	; 2 bytes @ 0x3
  1752  0023                     	global	writeStrLCD@cont
  1753                           writeStrLCD@cont:	; 2 bytes @ 0x3
  1754  0023                     	global	___lwmod@divisor
  1755                           ___lwmod@divisor:	; 2 bytes @ 0x3
  1756  0023                     	ds	1
  1757  0023                     	global	___xxtofl@sign
  1758                           ___xxtofl@sign:	; 1 bytes @ 0x4
  1759  0024                     	global	__Umul8_16@multiplier
  1760                           __Umul8_16@multiplier:	; 1 bytes @ 0x4
  1761  0024                     	global	___awdiv@dividend
  1762                           ___awdiv@dividend:	; 2 bytes @ 0x4
  1763  0024                     	global	___lldiv@dividend
  1764                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1765  0024                     	ds	1
  1766  0024                     	global	___fltol@sign1
  1767                           ___fltol@sign1:	; 1 bytes @ 0x5
  1768  0025                     	global	___xxtofl@exp
  1769                           ___xxtofl@exp:	; 1 bytes @ 0x5
  1770  0025                     	global	___lwmod@dividend
  1771                           ___lwmod@dividend:	; 2 bytes @ 0x5
  1772  0025                     	ds	1
  1773  0025                     	global	___awdiv@counter
  1774                           ___awdiv@counter:	; 1 bytes @ 0x6
  1775  0026                     	global	___fltol@exp1
  1776                           ___fltol@exp1:	; 1 bytes @ 0x6
  1777  0026                     	global	___xxtofl@arg
  1778                           ___xxtofl@arg:	; 4 bytes @ 0x6
  1779  0026                     	ds	1
  1780  0026                     ??___lwmod:	; 1 bytes @ 0x7
  1781  0027                     	global	___awdiv@sign
  1782                           ___awdiv@sign:	; 1 bytes @ 0x7
  1783  0027                     	ds	1
  1784  0027                     	global	___lwmod@counter
  1785                           ___lwmod@counter:	; 1 bytes @ 0x8
  1786  0028                     	global	___awdiv@quotient
  1787                           ___awdiv@quotient:	; 2 bytes @ 0x8
  1788  0028                     	global	___lldiv@quotient
  1789                           ___lldiv@quotient:	; 4 bytes @ 0x8
  1790  0028                     	ds	1
  1791  0028                     	global	?_sprintf
  1792                           ?_sprintf:	; 2 bytes @ 0x9
  1793  0029                     	global	sprintf@f
  1794                           sprintf@f:	; 1 bytes @ 0x9
  1795  0029                     	ds	1
  1796  0029                     	global	?___flneg
  1797                           ?___flneg:	; 4 bytes @ 0xA
  1798  002A                     	global	___flneg@f1
  1799                           ___flneg@f1:	; 4 bytes @ 0xA
  1800  002A                     	ds	2
  1801  002A                     ??_sprintf:	; 1 bytes @ 0xC
  1802  002C                     	global	___lldiv@counter
  1803                           ___lldiv@counter:	; 1 bytes @ 0xC
  1804  002C                     	ds	1
  1805  002C                     ?_I2C_Master_Init:	; 1 bytes @ 0xD
  1806  002D                     	global	I2C_Master_Init@c
  1807                           I2C_Master_Init@c:	; 4 bytes @ 0xD
  1808  002D                     	ds	1
  1809  002D                     	global	?___fladd
  1810                           ?___fladd:	; 4 bytes @ 0xE
  1811  002E                     	global	___fladd@b
  1812                           ___fladd@b:	; 4 bytes @ 0xE
  1813  002E                     	ds	1
  1814  002E                     	global	sprintf@ap
  1815                           sprintf@ap:	; 1 bytes @ 0xF
  1816  002F                     	ds	1
  1817  002F                     	global	sprintf@flag
  1818                           sprintf@flag:	; 1 bytes @ 0x10
  1819  0030                     	ds	1
  1820  0030                     	global	sprintf@prec
  1821                           sprintf@prec:	; 1 bytes @ 0x11
  1822  0031                     	ds	1
  1823  0031                     	global	sprintf@val
  1824                           sprintf@val:	; 2 bytes @ 0x12
  1825  0032                     	global	___fladd@a
  1826                           ___fladd@a:	; 4 bytes @ 0x12
  1827  0032                     	ds	2
  1828  0032                     	global	sprintf@sp
  1829                           sprintf@sp:	; 1 bytes @ 0x14
  1830  0034                     	ds	1
  1831  0034                     	global	sprintf@c
  1832                           sprintf@c:	; 1 bytes @ 0x15
  1833  0035                     	ds	1
  1834  0035                     ??_writeIntLCD:	; 1 bytes @ 0x16
  1835  0036                     ??___fladd:	; 1 bytes @ 0x16
  1836  0036                     	ds	3
  1837  0036                     	global	writeIntLCD@buffer
  1838                           writeIntLCD@buffer:	; 4 bytes @ 0x19
  1839  0039                     	ds	4
  1840  0039                     	global	writeIntLCD@numero
  1841                           writeIntLCD@numero:	; 1 bytes @ 0x1D
  1842  003D                     	ds	5
  1843  003D                     	global	___fladd@signs
  1844                           ___fladd@signs:	; 1 bytes @ 0x22
  1845  0042                     	ds	1
  1846  0042                     	global	___fladd@aexp
  1847                           ___fladd@aexp:	; 1 bytes @ 0x23
  1848  0043                     	ds	1
  1849  0043                     	global	___fladd@bexp
  1850                           ___fladd@bexp:	; 1 bytes @ 0x24
  1851  0044                     	ds	1
  1852  0044                     	global	___fladd@grs
  1853                           ___fladd@grs:	; 1 bytes @ 0x25
  1854  0045                     	ds	1
  1855  0045                     	global	?___flmul
  1856                           ?___flmul:	; 4 bytes @ 0x26
  1857  0046                     	global	___flmul@b
  1858                           ___flmul@b:	; 4 bytes @ 0x26
  1859  0046                     	ds	4
  1860  0046                     	global	___flmul@a
  1861                           ___flmul@a:	; 4 bytes @ 0x2A
  1862  004A                     	ds	4
  1863  004A                     ??___flmul:	; 1 bytes @ 0x2E
  1864  004E                     	ds	5
  1865  004E                     	global	___flmul@sign
  1866                           ___flmul@sign:	; 1 bytes @ 0x33
  1867  0053                     	ds	1
  1868  0053                     	global	___flmul@grs
  1869                           ___flmul@grs:	; 4 bytes @ 0x34
  1870  0054                     	ds	4
  1871  0054                     	global	___flmul@aexp
  1872                           ___flmul@aexp:	; 1 bytes @ 0x38
  1873  0058                     	ds	1
  1874  0058                     	global	___flmul@bexp
  1875                           ___flmul@bexp:	; 1 bytes @ 0x39
  1876  0059                     	ds	1
  1877  0059                     	global	___flmul@prod
  1878                           ___flmul@prod:	; 4 bytes @ 0x3A
  1879  005A                     	ds	4
  1880  005A                     	global	___flmul@temp
  1881                           ___flmul@temp:	; 2 bytes @ 0x3E
  1882  005E                     	ds	2
  1883  005E                     	global	?___fldiv
  1884                           ?___fldiv:	; 4 bytes @ 0x40
  1885  0060                     	global	___fldiv@a
  1886                           ___fldiv@a:	; 4 bytes @ 0x40
  1887  0060                     	ds	4
  1888  0060                     	global	___fldiv@b
  1889                           ___fldiv@b:	; 4 bytes @ 0x44
  1890  0064                     	ds	4
  1891  0064                     ??___fldiv:	; 1 bytes @ 0x48
  1892  0068                     	ds	5
  1893  0068                     ;!
  1894                           ;!Data Sizes:
  1895                           ;!    Strings     136
  1896                           ;!    Constant    10
  1897                           ;!    Data        0
  1898                           ;!    BSS         43
  1899                           ;!    Persistent  0
  1900                           ;!    Stack       0
  1901                           ;!
  1902                           ;!Auto Spaces:
  1903                           ;!    Space          Size  Autos    Used
  1904                           ;!    COMMON           14      8      11
  1905                           ;!    BANK0            80     77      80
  1906                           ;!    BANK1            80     17      54
  1907                           ;!    BANK3            96      0       0
  1908                           ;!    BANK2            96      0       0
  1909                           
  1910                           ;!
  1911                           ;!Pointer List with Targets:
  1912                           ;!
  1913                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1914                           ;!		 -> STR_2(CODE[3]), STR_1(CODE[3]), 
  1915                           ;!
  1916                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
  1917                           ;!		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 
  1918                           ;!
  1919                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1920                           ;!		 -> ?_sprintf(BANK0[2]), 
  1921                           ;!
  1922                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 15
  1923                           ;!		 -> STR_25(CODE[15]), STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), 
  1924                           ;!		 -> STR_21(CODE[12]), STR_20(CODE[7]), STR_19(CODE[8]), STR_18(CODE[15]), 
  1925                           ;!		 -> STR_17(CODE[11]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
  1926                           ;!		 -> STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[15]), STR_10(CODE[15]), 
  1927                           ;!		 -> STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[8]), STR_6(CODE[8]), 
  1928                           ;!		 -> STR_5(CODE[12]), STR_4(CODE[5]), STR_3(CODE[6]), writeIntLCD16@buffer(COMMON[5])
                                 , 
  1929                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1930                           ;!
  1931                           
  1932                           
  1933                           ;!
  1934                           ;!Critical Paths under _main in COMMON
  1935                           ;!
  1936                           ;!    _main->___awdiv
  1937                           ;!    _main->___awmod
  1938                           ;!    _main->_setCursorLCD
  1939                           ;!    _writeStrLCD->_writeCharLCD
  1940                           ;!    _sprintf->___lwdiv
  1941                           ;!    ___lwmod->___lwdiv
  1942                           ;!    _setup->_I2C_Master_Init
  1943                           ;!    _setup->_initLCD
  1944                           ;!    _setup->_initUSART
  1945                           ;!    _initLCD->_cmdLCD
  1946                           ;!    _clcLCD->_cmdLCD
  1947                           ;!    _I2C_Master_Init->___lldiv
  1948                           ;!    _setCursorLCD->_cmdLCD
  1949                           ;!    ___flneg->___xxtofl
  1950                           ;!    ___flmul->__Umul8_16
  1951                           ;!    ___flmul->___xxtofl
  1952                           ;!    ___fldiv->___xxtofl
  1953                           ;!    ___fladd->___xxtofl
  1954                           ;!    ___awdiv->___wmul
  1955                           ;!
  1956                           ;!Critical Paths under _isr in COMMON
  1957                           ;!
  1958                           ;!    None.
  1959                           ;!
  1960                           ;!Critical Paths under _main in BANK0
  1961                           ;!
  1962                           ;!    _main->___fldiv
  1963                           ;!    _writeIntLCD->_sprintf
  1964                           ;!    _sprintf->___lwmod
  1965                           ;!    ___lwmod->___lwdiv
  1966                           ;!    _setup->_I2C_Master_Init
  1967                           ;!    _I2C_Master_Init->___lldiv
  1968                           ;!    ___flneg->___xxtofl
  1969                           ;!    ___flmul->___fladd
  1970                           ;!    ___fldiv->___flmul
  1971                           ;!    ___fladd->___flneg
  1972                           ;!    ___awdiv->___wmul
  1973                           ;!
  1974                           ;!Critical Paths under _isr in BANK0
  1975                           ;!
  1976                           ;!    None.
  1977                           ;!
  1978                           ;!Critical Paths under _main in BANK1
  1979                           ;!
  1980                           ;!    _main->___fldiv
  1981                           ;!
  1982                           ;!Critical Paths under _isr in BANK1
  1983                           ;!
  1984                           ;!    None.
  1985                           ;!
  1986                           ;!Critical Paths under _main in BANK3
  1987                           ;!
  1988                           ;!    None.
  1989                           ;!
  1990                           ;!Critical Paths under _isr in BANK3
  1991                           ;!
  1992                           ;!    None.
  1993                           ;!
  1994                           ;!Critical Paths under _main in BANK2
  1995                           ;!
  1996                           ;!    None.
  1997                           ;!
  1998                           ;!Critical Paths under _isr in BANK2
  1999                           ;!
  2000                           ;!    None.
  2001                           
  2002 ;;
  2003 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  2004 ;;
  2005                           
  2006                           ;!
  2007                           ;!Call Graph Tables:
  2008                           ;!
  2009                           ;! ---------------------------------------------------------------------------------
  2010                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2011                           ;! ---------------------------------------------------------------------------------
  2012                           ;! (0) _main                                                 4     4      0   19310
  2013                           ;!                                             13 BANK1      4     4      0
  2014                           ;!                    _I2C_Master_Read
  2015                           ;!                   _I2C_Master_Start
  2016                           ;!                    _I2C_Master_Stop
  2017                           ;!                   _I2C_Master_Write
  2018                           ;!                            ___awdiv
  2019                           ;!                            ___awmod
  2020                           ;!                            ___fladd
  2021                           ;!                            ___fldiv
  2022                           ;!                            ___flmul
  2023                           ;!                            ___flneg
  2024                           ;!                            ___fltol
  2025                           ;!                             ___wmul
  2026                           ;!                           ___xxtofl
  2027                           ;!                          _sendUSART
  2028                           ;!                       _setCursorLCD
  2029                           ;!                              _setup
  2030                           ;!                       _writeCharLCD
  2031                           ;!                        _writeIntLCD
  2032                           ;!                        _writeStrLCD
  2033                           ;! ---------------------------------------------------------------------------------
  2034                           ;! (1) _writeIntLCD                                          8     8      0    4205
  2035                           ;!                                             22 BANK0      8     8      0
  2036                           ;!                            _sprintf
  2037                           ;!                        _writeStrLCD
  2038                           ;! ---------------------------------------------------------------------------------
  2039                           ;! (1) _writeStrLCD                                          7     5      2    2402
  2040                           ;!                                              5 COMMON     2     0      2
  2041                           ;!                                              0 BANK0      5     5      0
  2042                           ;!                       _writeCharLCD
  2043                           ;! ---------------------------------------------------------------------------------
  2044                           ;! (2) _writeCharLCD                                         2     2      0      22
  2045                           ;!                                              3 COMMON     2     2      0
  2046                           ;! ---------------------------------------------------------------------------------
  2047                           ;! (2) _sprintf                                             21    18      3    1680
  2048                           ;!                                              9 BANK0     13    10      3
  2049                           ;!                            ___lwdiv
  2050                           ;!                            ___lwmod
  2051                           ;! ---------------------------------------------------------------------------------
  2052                           ;! (3) ___lwmod                                              6     2      4     311
  2053                           ;!                                              3 BANK0      6     2      4
  2054                           ;!                            ___lwdiv (ARG)
  2055                           ;! ---------------------------------------------------------------------------------
  2056                           ;! (3) ___lwdiv                                              8     4      4     421
  2057                           ;!                                              3 COMMON     5     1      4
  2058                           ;!                                              0 BANK0      3     3      0
  2059                           ;! ---------------------------------------------------------------------------------
  2060                           ;! (1) _setup                                                0     0      0    1106
  2061                           ;!                    _I2C_Master_Init
  2062                           ;!                             _clcLCD
  2063                           ;!                            _initLCD
  2064                           ;!                          _initUSART
  2065                           ;! ---------------------------------------------------------------------------------
  2066                           ;! (2) _initUSART                                            5     0      5     502
  2067                           ;!                                              3 COMMON     5     0      5
  2068                           ;! ---------------------------------------------------------------------------------
  2069                           ;! (2) _initLCD                                              2     2      0      31
  2070                           ;!                                              6 COMMON     2     2      0
  2071                           ;!                             _cmdLCD
  2072                           ;! ---------------------------------------------------------------------------------
  2073                           ;! (2) _clcLCD                                               0     0      0      31
  2074                           ;!                             _cmdLCD
  2075                           ;! ---------------------------------------------------------------------------------
  2076                           ;! (2) _I2C_Master_Init                                      8     4      4     542
  2077                           ;!                                              4 COMMON     4     4      0
  2078                           ;!                                             13 BANK0      4     0      4
  2079                           ;!                            ___lldiv
  2080                           ;! ---------------------------------------------------------------------------------
  2081                           ;! (3) ___lldiv                                             14     6      8     421
  2082                           ;!                                              3 COMMON     1     1      0
  2083                           ;!                                              0 BANK0     13     5      8
  2084                           ;! ---------------------------------------------------------------------------------
  2085                           ;! (1) _setCursorLCD                                         3     2      1     844
  2086                           ;!                                              6 COMMON     2     1      1
  2087                           ;!                                              0 BANK0      1     1      0
  2088                           ;!                             _cmdLCD
  2089                           ;! ---------------------------------------------------------------------------------
  2090                           ;! (3) _cmdLCD                                               3     3      0      31
  2091                           ;!                                              3 COMMON     3     3      0
  2092                           ;! ---------------------------------------------------------------------------------
  2093                           ;! (1) _sendUSART                                            2     2      0      22
  2094                           ;!                                              3 COMMON     2     2      0
  2095                           ;! ---------------------------------------------------------------------------------
  2096                           ;! (1) ___xxtofl                                            14    10      4     656
  2097                           ;!                                              3 COMMON     4     0      4
  2098                           ;!                                              0 BANK0     10    10      0
  2099                           ;! ---------------------------------------------------------------------------------
  2100                           ;! (1) ___wmul                                               6     2      4     496
  2101                           ;!                                              3 COMMON     4     0      4
  2102                           ;!                                              0 BANK0      2     2      0
  2103                           ;! ---------------------------------------------------------------------------------
  2104                           ;! (1) ___fltol                                             11     7      4     517
  2105                           ;!                                              3 COMMON     4     0      4
  2106                           ;!                                              0 BANK0      7     7      0
  2107                           ;! ---------------------------------------------------------------------------------
  2108                           ;! (1) ___flneg                                              4     0      4     121
  2109                           ;!                                             10 BANK0      4     0      4
  2110                           ;!                           ___xxtofl (ARG)
  2111                           ;! ---------------------------------------------------------------------------------
  2112                           ;! (1) ___flmul                                             26    18      8    2569
  2113                           ;!                                             38 BANK0     26    18      8
  2114                           ;!                          __Umul8_16
  2115                           ;!                            ___fladd (ARG)
  2116                           ;!                            ___flneg (ARG)
  2117                           ;!                           ___xxtofl (ARG)
  2118                           ;! ---------------------------------------------------------------------------------
  2119                           ;! (2) __Umul8_16                                            9     7      2     799
  2120                           ;!                                              3 COMMON     4     2      2
  2121                           ;!                                              0 BANK0      5     5      0
  2122                           ;! ---------------------------------------------------------------------------------
  2123                           ;! (1) ___fldiv                                             26    18      8    1425
  2124                           ;!                                             64 BANK0     13     5      8
  2125                           ;!                                              0 BANK1     13    13      0
  2126                           ;!                            ___flmul (ARG)
  2127                           ;!                           ___xxtofl (ARG)
  2128                           ;! ---------------------------------------------------------------------------------
  2129                           ;! (1) ___fladd                                             24    16      8    2262
  2130                           ;!                                             14 BANK0     24    16      8
  2131                           ;!                            ___flneg (ARG)
  2132                           ;!                           ___xxtofl (ARG)
  2133                           ;! ---------------------------------------------------------------------------------
  2134                           ;! (1) ___awmod                                              7     3      4     973
  2135                           ;!                                              3 COMMON     5     1      4
  2136                           ;!                                              0 BANK0      2     2      0
  2137                           ;! ---------------------------------------------------------------------------------
  2138                           ;! (1) ___awdiv                                              9     5      4     604
  2139                           ;!                                              7 COMMON     1     1      0
  2140                           ;!                                              2 BANK0      8     4      4
  2141                           ;!                             ___wmul (ARG)
  2142                           ;! ---------------------------------------------------------------------------------
  2143                           ;! (1) _I2C_Master_Write                                     2     0      2     301
  2144                           ;!                                              3 COMMON     2     0      2
  2145                           ;!                    _I2C_Master_Wait
  2146                           ;! ---------------------------------------------------------------------------------
  2147                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  2148                           ;!                    _I2C_Master_Wait
  2149                           ;! ---------------------------------------------------------------------------------
  2150                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  2151                           ;!                    _I2C_Master_Wait
  2152                           ;! ---------------------------------------------------------------------------------
  2153                           ;! (1) _I2C_Master_Read                                      6     4      2     785
  2154                           ;!                                              3 COMMON     4     2      2
  2155                           ;!                                              0 BANK0      2     2      0
  2156                           ;!                    _I2C_Master_Wait
  2157                           ;! ---------------------------------------------------------------------------------
  2158                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  2159                           ;! ---------------------------------------------------------------------------------
  2160                           ;! Estimated maximum stack depth 3
  2161                           ;! ---------------------------------------------------------------------------------
  2162                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2163                           ;! ---------------------------------------------------------------------------------
  2164                           ;! (4) _isr                                                  3     3      0       0
  2165                           ;!                                              0 COMMON     3     3      0
  2166                           ;!                            _readADC
  2167                           ;! ---------------------------------------------------------------------------------
  2168                           ;! (5) _readADC                                              0     0      0       0
  2169                           ;! ---------------------------------------------------------------------------------
  2170                           ;! Estimated maximum stack depth 5
  2171                           ;! ---------------------------------------------------------------------------------
  2172                           ;!
  2173                           ;! Call Graph Graphs:
  2174                           ;!
  2175                           ;! _main (ROOT)
  2176                           ;!   _I2C_Master_Read
  2177                           ;!     _I2C_Master_Wait
  2178                           ;!   _I2C_Master_Start
  2179                           ;!     _I2C_Master_Wait
  2180                           ;!   _I2C_Master_Stop
  2181                           ;!     _I2C_Master_Wait
  2182                           ;!   _I2C_Master_Write
  2183                           ;!     _I2C_Master_Wait
  2184                           ;!   ___awdiv
  2185                           ;!     ___wmul (ARG)
  2186                           ;!   ___awmod
  2187                           ;!   ___fladd
  2188                           ;!     ___flneg (ARG)
  2189                           ;!       ___xxtofl (ARG)
  2190                           ;!     ___xxtofl (ARG)
  2191                           ;!   ___fldiv
  2192                           ;!     ___flmul (ARG)
  2193                           ;!       __Umul8_16
  2194                           ;!       ___fladd (ARG)
  2195                           ;!         ___flneg (ARG)
  2196                           ;!           ___xxtofl (ARG)
  2197                           ;!         ___xxtofl (ARG)
  2198                           ;!       ___flneg (ARG)
  2199                           ;!         ___xxtofl (ARG)
  2200                           ;!       ___xxtofl (ARG)
  2201                           ;!     ___xxtofl (ARG)
  2202                           ;!   ___flmul
  2203                           ;!     __Umul8_16
  2204                           ;!     ___fladd (ARG)
  2205                           ;!       ___flneg (ARG)
  2206                           ;!         ___xxtofl (ARG)
  2207                           ;!       ___xxtofl (ARG)
  2208                           ;!     ___flneg (ARG)
  2209                           ;!       ___xxtofl (ARG)
  2210                           ;!     ___xxtofl (ARG)
  2211                           ;!   ___flneg
  2212                           ;!     ___xxtofl (ARG)
  2213                           ;!   ___fltol
  2214                           ;!   ___wmul
  2215                           ;!   ___xxtofl
  2216                           ;!   _sendUSART
  2217                           ;!   _setCursorLCD
  2218                           ;!     _cmdLCD
  2219                           ;!   _setup
  2220                           ;!     _I2C_Master_Init
  2221                           ;!       ___lldiv
  2222                           ;!     _clcLCD
  2223                           ;!       _cmdLCD
  2224                           ;!     _initLCD
  2225                           ;!       _cmdLCD
  2226                           ;!     _initUSART
  2227                           ;!   _writeCharLCD
  2228                           ;!   _writeIntLCD
  2229                           ;!     _sprintf
  2230                           ;!       ___lwdiv
  2231                           ;!       ___lwmod
  2232                           ;!         ___lwdiv (ARG)
  2233                           ;!     _writeStrLCD
  2234                           ;!       _writeCharLCD
  2235                           ;!   _writeStrLCD
  2236                           ;!     _writeCharLCD
  2237                           ;!
  2238                           ;! _isr (ROOT)
  2239                           ;!   _readADC
  2240                           ;!
  2241                           
  2242                           ;! Address spaces:
  2243                           
  2244                           ;!Name               Size   Autos  Total    Cost      Usage
  2245                           ;!BITCOMMON            E      0       0       0        0.0%
  2246                           ;!EEDATA             100      0       0       0        0.0%
  2247                           ;!NULL                 0      0       0       0        0.0%
  2248                           ;!CODE                 0      0       0       0        0.0%
  2249                           ;!COMMON               E      8       B       1       78.6%
  2250                           ;!BITSFR0              0      0       0       1        0.0%
  2251                           ;!SFR0                 0      0       0       1        0.0%
  2252                           ;!BITSFR1              0      0       0       2        0.0%
  2253                           ;!SFR1                 0      0       0       2        0.0%
  2254                           ;!STACK                0      0       0       2        0.0%
  2255                           ;!ABS                  0      0      91       3        0.0%
  2256                           ;!BITBANK0            50      0       0       4        0.0%
  2257                           ;!BITSFR3              0      0       0       4        0.0%
  2258                           ;!SFR3                 0      0       0       4        0.0%
  2259                           ;!BANK0               50     4D      50       5      100.0%
  2260                           ;!BITSFR2              0      0       0       5        0.0%
  2261                           ;!SFR2                 0      0       0       5        0.0%
  2262                           ;!BITBANK1            50      0       0       6        0.0%
  2263                           ;!BANK1               50     11      36       7       67.5%
  2264                           ;!BITBANK3            60      0       0       8        0.0%
  2265                           ;!BANK3               60      0       0       9        0.0%
  2266                           ;!BITBANK2            60      0       0      10        0.0%
  2267                           ;!BANK2               60      0       0      11        0.0%
  2268                           ;!DATA                 0      0      91      12        0.0%
  2269                           
  2270                           	global	_main
  2271                           
  2272 ;; *************** function _main *****************
  2273 ;; Defined at:
  2274 ;;		line 78 in file "mainM.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2283 ;; Tracked objects:
  2284 ;;		On entry : B00/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0
  2290 ;;      Temps:          0       0       4       0       0
  2291 ;;      Totals:         0       0       4       0       0
  2292 ;;Total ram usage:        4 bytes
  2293 ;; Hardware stack levels required when called:    5
  2294 ;; This function calls:
  2295 ;;		_I2C_Master_Read
  2296 ;;		_I2C_Master_Start
  2297 ;;		_I2C_Master_Stop
  2298 ;;		_I2C_Master_Write
  2299 ;;		___awdiv
  2300 ;;		___awmod
  2301 ;;		___fladd
  2302 ;;		___fldiv
  2303 ;;		___flmul
  2304 ;;		___flneg
  2305 ;;		___fltol
  2306 ;;		___wmul
  2307 ;;		___xxtofl
  2308 ;;		_sendUSART
  2309 ;;		_setCursorLCD
  2310 ;;		_setup
  2311 ;;		_writeCharLCD
  2312 ;;		_writeIntLCD
  2313 ;;		_writeStrLCD
  2314 ;; This function is called by:
  2315 ;;		Startup code after reset
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2319                           	file	"mainM.c"
  2320                           	line	78
  2321                           global __pmaintext
  2322                           __pmaintext:	;psect for function _main
  2323  0024                     psect	maintext
  2324                           	file	"mainM.c"
  2325                           	line	78
  2326                           	global	__size_of_main
  2327                           	__size_of_main	equ	__end_of_main-_main
  2328  05A1                     	
  2329                           _main:	
  2330  0024                     ;incstack = 0
  2331                           	opt	stack 3
  2332                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2333                           	line	79
  2334                           	
  2335                           l4006:	
  2336  0024                     ;mainM.c: 79:     setup();
  2337                           	fcall	_setup
  2338  0024  160A  118A  22EB  120A  118A  	goto	l4008
  2339  0029  282A               	line	80
  2340                           ;mainM.c: 80:     while(1){
  2341                           	
  2342                           l234:	
  2343  002A                     	line	81
  2344                           	
  2345                           l4008:	
  2346  002A                     ;mainM.c: 81:         if(ADCON0bits.GO_DONE == 0){
  2347                           	bcf	status, 5	;RP0=0, select bank0
  2348  002A  1283               	bcf	status, 6	;RP1=0, select bank0
  2349  002B  1303               	btfsc	(31),1	;volatile
  2350  002C  189F               	goto	u5861
  2351  002D  282F               	goto	u5860
  2352  002E  2830               u5861:
  2353  002F                     	goto	l4012
  2354  002F  2832               u5860:
  2355  0030                     	line	82
  2356                           	
  2357                           l4010:	
  2358  0030                     ;mainM.c: 82:            ADCON0bits.GO_DONE = 1;
  2359                           	bsf	(31),1	;volatile
  2360  0030  149F               	goto	l4012
  2361  0031  2832               	line	83
  2362                           ;mainM.c: 83:         }
  2363                           	
  2364                           l235:	
  2365  0032                     	line	85
  2366                           	
  2367                           l4012:	
  2368  0032                     ;mainM.c: 85:         count = toggle%3;
  2369                           	movlw	03h
  2370  0032  3003               	movwf	(___awmod@divisor)
  2371  0033  00F3               	movlw	0
  2372  0034  3000               	movwf	((___awmod@divisor))+1
  2373  0035  00F4               	bsf	status, 5	;RP0=1, select bank1
  2374  0036  1683               	bcf	status, 6	;RP1=0, select bank1
  2375  0037  1303               	movf	(_toggle)^080h,w
  2376  0038  083C               	movwf	(??_main+0)^080h+0
  2377  0039  00D2               	clrf	(??_main+0)^080h+0+1
  2378  003A  01D3               	movf	0+(??_main+0)^080h+0,w
  2379  003B  0852               	movwf	(___awmod@dividend)
  2380  003C  00F5               	movf	1+(??_main+0)^080h+0,w
  2381  003D  0853               	movwf	(___awmod@dividend+1)
  2382  003E  00F6               	fcall	___awmod
  2383  003F  160A  118A  2470  120A  118A  	movf	(0+(?___awmod)),w
  2384  0044  0873               	bsf	status, 5	;RP0=1, select bank1
  2385  0045  1683               	bcf	status, 6	;RP1=0, select bank1
  2386  0046  1303               	movwf	(??_main+2)^080h+0
  2387  0047  00D4               	movf	(??_main+2)^080h+0,w
  2388  0048  0854               	movwf	(_count)
  2389  0049  00F9               	line	86
  2390                           ;mainM.c: 86:         I2C_Master_Start();
  2391                           	fcall	_I2C_Master_Start
  2392  004A  160A  118A  218C  120A  118A  	line	87
  2393                           ;mainM.c: 87:         I2C_Master_Write(0x69);
  2394                           	movlw	069h
  2395  004F  3069               	movwf	(I2C_Master_Write@d)
  2396  0050  00F3               	movlw	0
  2397  0051  3000               	movwf	((I2C_Master_Write@d))+1
  2398  0052  00F4               	fcall	_I2C_Master_Write
  2399  0053  160A  118A  219E  120A  118A  	line	88
  2400                           	
  2401                           l4014:	
  2402  0058                     ;mainM.c: 88:         if(count == 0){
  2403                           	movf	((_count)),w
  2404  0058  0879               	btfss	status,2
  2405  0059  1D03               	goto	u5871
  2406  005A  285C               	goto	u5870
  2407  005B  285D               u5871:
  2408  005C                     	goto	l4018
  2409  005C  286C               u5870:
  2410  005D                     	line	89
  2411                           	
  2412                           l4016:	
  2413  005D                     ;mainM.c: 89:             adcT = I2C_Master_Read(0);
  2414                           	movlw	0
  2415  005D  3000               	movwf	(I2C_Master_Read@a)
  2416  005E  00F3               	movwf	(I2C_Master_Read@a+1)
  2417  005F  00F4               	fcall	_I2C_Master_Read
  2418  0060  160A  118A  22BA  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2419  0065  0873               	bsf	status, 5	;RP0=1, select bank1
  2420  0066  1683               	bcf	status, 6	;RP1=0, select bank1
  2421  0067  1303               	movwf	(??_main+0)^080h+0
  2422  0068  00D2               	movf	(??_main+0)^080h+0,w
  2423  0069  0852               	movwf	(_adcT)^080h
  2424  006A  00C2               	line	90
  2425                           ;mainM.c: 90:         }else if(count == 1){
  2426                           	goto	l4026
  2427  006B  2897               	
  2428                           l236:	
  2429  006C                     	
  2430                           l4018:	
  2431  006C                     		decf	((_count)),w
  2432  006C  0379               	btfss	status,2
  2433  006D  1D03               	goto	u5881
  2434  006E  2870               	goto	u5880
  2435  006F  2871               u5881:
  2436  0070                     	goto	l4022
  2437  0070  2880               u5880:
  2438  0071                     	line	91
  2439                           	
  2440                           l4020:	
  2441  0071                     ;mainM.c: 91:             alarm = I2C_Master_Read(0);
  2442                           	movlw	0
  2443  0071  3000               	movwf	(I2C_Master_Read@a)
  2444  0072  00F3               	movwf	(I2C_Master_Read@a+1)
  2445  0073  00F4               	fcall	_I2C_Master_Read
  2446  0074  160A  118A  22BA  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2447  0079  0873               	bsf	status, 5	;RP0=1, select bank1
  2448  007A  1683               	bcf	status, 6	;RP1=0, select bank1
  2449  007B  1303               	movwf	(??_main+0)^080h+0
  2450  007C  00D2               	movf	(??_main+0)^080h+0,w
  2451  007D  0852               	movwf	(_alarm)^080h
  2452  007E  00BF               	line	92
  2453                           ;mainM.c: 92:         }else if(count == 2){
  2454                           	goto	l4026
  2455  007F  2897               	
  2456                           l238:	
  2457  0080                     	
  2458                           l4022:	
  2459  0080                     		movlw	2
  2460  0080  3002               	xorwf	((_count)),w
  2461  0081  0679               	btfss	status,2
  2462  0082  1D03               	goto	u5891
  2463  0083  2885               	goto	u5890
  2464  0084  2886               u5891:
  2465  0085                     	goto	l4026
  2466  0085  2897               u5890:
  2467  0086                     	line	93
  2468                           	
  2469                           l4024:	
  2470  0086                     ;mainM.c: 93:             hall = I2C_Master_Read(0);
  2471                           	movlw	0
  2472  0086  3000               	movwf	(I2C_Master_Read@a)
  2473  0087  00F3               	movwf	(I2C_Master_Read@a+1)
  2474  0088  00F4               	fcall	_I2C_Master_Read
  2475  0089  160A  118A  22BA  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2476  008E  0873               	bsf	status, 5	;RP0=1, select bank1
  2477  008F  1683               	bcf	status, 6	;RP1=0, select bank1
  2478  0090  1303               	movwf	(??_main+0)^080h+0
  2479  0091  00D2               	movf	(??_main+0)^080h+0,w
  2480  0092  0852               	movwf	(_hall)
  2481  0093  00FA               	goto	l4026
  2482  0094  2897               	line	94
  2483                           ;mainM.c: 94:         }
  2484                           	
  2485                           l240:	
  2486  0095                     	goto	l4026
  2487  0095  2897               	
  2488                           l239:	
  2489  0096                     	goto	l4026
  2490  0096  2897               	
  2491                           l237:	
  2492  0097                     	line	95
  2493                           	
  2494                           l4026:	
  2495  0097                     ;mainM.c: 95:         toggle++;
  2496                           	movlw	low(01h)
  2497  0097  3001               	bsf	status, 5	;RP0=1, select bank1
  2498  0098  1683               	bcf	status, 6	;RP1=0, select bank1
  2499  0099  1303               	movwf	(??_main+0)^080h+0
  2500  009A  00D2               	movf	(??_main+0)^080h+0,w
  2501  009B  0852               	addwf	(_toggle)^080h,f
  2502  009C  07BC               	line	96
  2503                           	
  2504                           l4028:	
  2505  009D                     ;mainM.c: 96:         I2C_Master_Stop();
  2506                           	fcall	_I2C_Master_Stop
  2507  009D  160A  118A  2195  120A  118A  	line	97
  2508                           	
  2509                           l4030:	
  2510  00A2                     ;mainM.c: 97:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2511                           	opt asmopt_push
  2512                           opt asmopt_off
  2513                           movlw	13
  2514  00A2  300D               	bsf	status, 5	;RP0=1, select bank1
  2515  00A3  1683               	bcf	status, 6	;RP1=0, select bank1
  2516  00A4  1303               movwf	((??_main+0)^080h+0+1),f
  2517  00A5  00D3               	movlw	251
  2518  00A6  30FB               movwf	((??_main+0)^080h+0),f
  2519  00A7  00D2               	u6307:
  2520  00A8                     decfsz	((??_main+0)^080h+0),f
  2521  00A8  0BD2               	goto	u6307
  2522  00A9  28A8               	decfsz	((??_main+0)^080h+0+1),f
  2523  00AA  0BD3               	goto	u6307
  2524  00AB  28A8               opt asmopt_pop
  2525                           
  2526                           	line	100
  2527                           	
  2528                           l4032:	
  2529  00AC                     ;mainM.c: 100:         count2 = toggle2%3;
  2530                           	movlw	03h
  2531  00AC  3003               	movwf	(___awmod@divisor)
  2532  00AD  00F3               	movlw	0
  2533  00AE  3000               	movwf	((___awmod@divisor))+1
  2534  00AF  00F4               	bsf	status, 5	;RP0=1, select bank1
  2535  00B0  1683               	bcf	status, 6	;RP1=0, select bank1
  2536  00B1  1303               	movf	(_toggle2)^080h,w
  2537  00B2  083A               	movwf	(??_main+0)^080h+0
  2538  00B3  00D2               	clrf	(??_main+0)^080h+0+1
  2539  00B4  01D3               	movf	0+(??_main+0)^080h+0,w
  2540  00B5  0852               	movwf	(___awmod@dividend)
  2541  00B6  00F5               	movf	1+(??_main+0)^080h+0,w
  2542  00B7  0853               	movwf	(___awmod@dividend+1)
  2543  00B8  00F6               	fcall	___awmod
  2544  00B9  160A  118A  2470  120A  118A  	movf	(0+(?___awmod)),w
  2545  00BE  0873               	bsf	status, 5	;RP0=1, select bank1
  2546  00BF  1683               	bcf	status, 6	;RP1=0, select bank1
  2547  00C0  1303               	movwf	(??_main+2)^080h+0
  2548  00C1  00D4               	movf	(??_main+2)^080h+0,w
  2549  00C2  0854               	movwf	(_count2)
  2550  00C3  00F8               	line	101
  2551                           	
  2552                           l4034:	
  2553  00C4                     ;mainM.c: 101:         I2C_Master_Start();
  2554                           	fcall	_I2C_Master_Start
  2555  00C4  160A  118A  218C  120A  118A  	line	102
  2556                           	
  2557                           l4036:	
  2558  00C9                     ;mainM.c: 102:         I2C_Master_Write(0x61);
  2559                           	movlw	061h
  2560  00C9  3061               	movwf	(I2C_Master_Write@d)
  2561  00CA  00F3               	movlw	0
  2562  00CB  3000               	movwf	((I2C_Master_Write@d))+1
  2563  00CC  00F4               	fcall	_I2C_Master_Write
  2564  00CD  160A  118A  219E  120A  118A  	line	103
  2565                           	
  2566                           l4038:	
  2567  00D2                     ;mainM.c: 103:         if(count2 == 0){
  2568                           	movf	((_count2)),w
  2569  00D2  0878               	btfss	status,2
  2570  00D3  1D03               	goto	u5901
  2571  00D4  28D6               	goto	u5900
  2572  00D5  28D7               u5901:
  2573  00D6                     	goto	l4042
  2574  00D6  28E6               u5900:
  2575  00D7                     	line	104
  2576                           	
  2577                           l4040:	
  2578  00D7                     ;mainM.c: 104:             signal = I2C_Master_Read(0);
  2579                           	movlw	0
  2580  00D7  3000               	movwf	(I2C_Master_Read@a)
  2581  00D8  00F3               	movwf	(I2C_Master_Read@a+1)
  2582  00D9  00F4               	fcall	_I2C_Master_Read
  2583  00DA  160A  118A  22BA  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2584  00DF  0873               	bsf	status, 5	;RP0=1, select bank1
  2585  00E0  1683               	bcf	status, 6	;RP1=0, select bank1
  2586  00E1  1303               	movwf	(??_main+0)^080h+0
  2587  00E2  00D2               	movf	(??_main+0)^080h+0,w
  2588  00E3  0852               	movwf	(_signal)^080h
  2589  00E4  00B8               	line	105
  2590                           ;mainM.c: 105:         }else if(count2 == 1){
  2591                           	goto	l4050
  2592  00E5  2911               	
  2593                           l241:	
  2594  00E6                     	
  2595                           l4042:	
  2596  00E6                     		decf	((_count2)),w
  2597  00E6  0378               	btfss	status,2
  2598  00E7  1D03               	goto	u5911
  2599  00E8  28EA               	goto	u5910
  2600  00E9  28EB               u5911:
  2601  00EA                     	goto	l4046
  2602  00EA  28FA               u5910:
  2603  00EB                     	line	106
  2604                           	
  2605                           l4044:	
  2606  00EB                     ;mainM.c: 106:             adcP = I2C_Master_Read(0);
  2607                           	movlw	0
  2608  00EB  3000               	movwf	(I2C_Master_Read@a)
  2609  00EC  00F3               	movwf	(I2C_Master_Read@a+1)
  2610  00ED  00F4               	fcall	_I2C_Master_Read
  2611  00EE  160A  118A  22BA  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2612  00F3  0873               	bsf	status, 5	;RP0=1, select bank1
  2613  00F4  1683               	bcf	status, 6	;RP1=0, select bank1
  2614  00F5  1303               	movwf	(??_main+0)^080h+0
  2615  00F6  00D2               	movf	(??_main+0)^080h+0,w
  2616  00F7  0852               	movwf	(_adcP)^080h
  2617  00F8  00B9               	line	107
  2618                           ;mainM.c: 107:         }else if(count2 == 2){
  2619                           	goto	l4050
  2620  00F9  2911               	
  2621                           l243:	
  2622  00FA                     	
  2623                           l4046:	
  2624  00FA                     		movlw	2
  2625  00FA  3002               	xorwf	((_count2)),w
  2626  00FB  0678               	btfss	status,2
  2627  00FC  1D03               	goto	u5921
  2628  00FD  28FF               	goto	u5920
  2629  00FE  2900               u5921:
  2630  00FF                     	goto	l4050
  2631  00FF  2911               u5920:
  2632  0100                     	line	108
  2633                           	
  2634                           l4048:	
  2635  0100                     ;mainM.c: 108:             mov = I2C_Master_Read(0);
  2636                           	movlw	0
  2637  0100  3000               	movwf	(I2C_Master_Read@a)
  2638  0101  00F3               	movwf	(I2C_Master_Read@a+1)
  2639  0102  00F4               	fcall	_I2C_Master_Read
  2640  0103  160A  118A  22BA  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2641  0108  0873               	bsf	status, 5	;RP0=1, select bank1
  2642  0109  1683               	bcf	status, 6	;RP1=0, select bank1
  2643  010A  1303               	movwf	(??_main+0)^080h+0
  2644  010B  00D2               	movf	(??_main+0)^080h+0,w
  2645  010C  0852               	movwf	(_mov)^080h
  2646  010D  00B7               	goto	l4050
  2647  010E  2911               	line	109
  2648                           ;mainM.c: 109:         }
  2649                           	
  2650                           l245:	
  2651  010F                     	goto	l4050
  2652  010F  2911               	
  2653                           l244:	
  2654  0110                     	goto	l4050
  2655  0110  2911               	
  2656                           l242:	
  2657  0111                     	line	110
  2658                           	
  2659                           l4050:	
  2660  0111                     ;mainM.c: 110:         toggle2++;
  2661                           	movlw	low(01h)
  2662  0111  3001               	bsf	status, 5	;RP0=1, select bank1
  2663  0112  1683               	bcf	status, 6	;RP1=0, select bank1
  2664  0113  1303               	movwf	(??_main+0)^080h+0
  2665  0114  00D2               	movf	(??_main+0)^080h+0,w
  2666  0115  0852               	addwf	(_toggle2)^080h,f
  2667  0116  07BA               	line	111
  2668                           	
  2669                           l4052:	
  2670  0117                     ;mainM.c: 111:         I2C_Master_Stop();
  2671                           	fcall	_I2C_Master_Stop
  2672  0117  160A  118A  2195  120A  118A  	line	112
  2673                           	
  2674                           l4054:	
  2675  011C                     ;mainM.c: 112:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2676                           	opt asmopt_push
  2677                           opt asmopt_off
  2678                           movlw	13
  2679  011C  300D               	bsf	status, 5	;RP0=1, select bank1
  2680  011D  1683               	bcf	status, 6	;RP1=0, select bank1
  2681  011E  1303               movwf	((??_main+0)^080h+0+1),f
  2682  011F  00D3               	movlw	251
  2683  0120  30FB               movwf	((??_main+0)^080h+0),f
  2684  0121  00D2               	u6317:
  2685  0122                     decfsz	((??_main+0)^080h+0),f
  2686  0122  0BD2               	goto	u6317
  2687  0123  2922               	decfsz	((??_main+0)^080h+0+1),f
  2688  0124  0BD3               	goto	u6317
  2689  0125  2922               opt asmopt_pop
  2690                           
  2691                           	line	115
  2692                           	
  2693                           l4056:	
  2694  0126                     ;mainM.c: 115:         count3 = toggle3%2;
  2695                           	bsf	status, 5	;RP0=1, select bank1
  2696  0126  1683               	bcf	status, 6	;RP1=0, select bank1
  2697  0127  1303               	movf	(_toggle3)^080h,w
  2698  0128  0836               	andlw	01h
  2699  0129  3901               	movwf	(??_main+0)^080h+0
  2700  012A  00D2               	movf	(??_main+0)^080h+0,w
  2701  012B  0852               	movwf	(_count3)^080h
  2702  012C  00B5               	line	116
  2703                           	
  2704                           l4058:	
  2705  012D                     ;mainM.c: 116:         I2C_Master_Start();
  2706                           	fcall	_I2C_Master_Start
  2707  012D  160A  118A  218C  120A  118A  	line	117
  2708                           	
  2709                           l4060:	
  2710  0132                     ;mainM.c: 117:         I2C_Master_Write(0x71);
  2711                           	movlw	071h
  2712  0132  3071               	movwf	(I2C_Master_Write@d)
  2713  0133  00F3               	movlw	0
  2714  0134  3000               	movwf	((I2C_Master_Write@d))+1
  2715  0135  00F4               	fcall	_I2C_Master_Write
  2716  0136  160A  118A  219E  120A  118A  	line	118
  2717                           	
  2718                           l4062:	
  2719  013B                     ;mainM.c: 118:         if(count3 == 0){
  2720                           	bsf	status, 5	;RP0=1, select bank1
  2721  013B  1683               	bcf	status, 6	;RP1=0, select bank1
  2722  013C  1303               	movf	((_count3)^080h),w
  2723  013D  0835               	btfss	status,2
  2724  013E  1D03               	goto	u5931
  2725  013F  2941               	goto	u5930
  2726  0140  2942               u5931:
  2727  0141                     	goto	l4066
  2728  0141  2951               u5930:
  2729  0142                     	line	119
  2730                           	
  2731                           l4064:	
  2732  0142                     ;mainM.c: 119:             ir = I2C_Master_Read(0);
  2733                           	movlw	0
  2734  0142  3000               	movwf	(I2C_Master_Read@a)
  2735  0143  00F3               	movwf	(I2C_Master_Read@a+1)
  2736  0144  00F4               	fcall	_I2C_Master_Read
  2737  0145  160A  118A  22BA  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2738  014A  0873               	bsf	status, 5	;RP0=1, select bank1
  2739  014B  1683               	bcf	status, 6	;RP1=0, select bank1
  2740  014C  1303               	movwf	(??_main+0)^080h+0
  2741  014D  00D2               	movf	(??_main+0)^080h+0,w
  2742  014E  0852               	movwf	(_ir)^080h
  2743  014F  00B4               	line	120
  2744                           ;mainM.c: 120:         }else if(count3 == 1){
  2745                           	goto	l4070
  2746  0150  2966               	
  2747                           l246:	
  2748  0151                     	
  2749                           l4066:	
  2750  0151                     		decf	((_count3)^080h),w
  2751  0151  0335               	btfss	status,2
  2752  0152  1D03               	goto	u5941
  2753  0153  2955               	goto	u5940
  2754  0154  2956               u5941:
  2755  0155                     	goto	l4070
  2756  0155  2966               u5940:
  2757  0156                     	line	121
  2758                           	
  2759                           l4068:	
  2760  0156                     ;mainM.c: 121:             garage = I2C_Master_Read(0);
  2761                           	movlw	0
  2762  0156  3000               	movwf	(I2C_Master_Read@a)
  2763  0157  00F3               	movwf	(I2C_Master_Read@a+1)
  2764  0158  00F4               	fcall	_I2C_Master_Read
  2765  0159  160A  118A  22BA  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2766  015E  0873               	bsf	status, 5	;RP0=1, select bank1
  2767  015F  1683               	bcf	status, 6	;RP1=0, select bank1
  2768  0160  1303               	movwf	(??_main+0)^080h+0
  2769  0161  00D2               	movf	(??_main+0)^080h+0,w
  2770  0162  0852               	movwf	(_garage)^080h
  2771  0163  00B3               	goto	l4070
  2772  0164  2966               	line	122
  2773                           ;mainM.c: 122:         }
  2774                           	
  2775                           l248:	
  2776  0165                     	goto	l4070
  2777  0165  2966               	
  2778                           l247:	
  2779  0166                     	line	123
  2780                           	
  2781                           l4070:	
  2782  0166                     ;mainM.c: 123:         toggle3++;
  2783                           	movlw	low(01h)
  2784  0166  3001               	movwf	(??_main+0)^080h+0
  2785  0167  00D2               	movf	(??_main+0)^080h+0,w
  2786  0168  0852               	addwf	(_toggle3)^080h,f
  2787  0169  07B6               	line	124
  2788                           	
  2789                           l4072:	
  2790  016A                     ;mainM.c: 124:         I2C_Master_Stop();
  2791                           	fcall	_I2C_Master_Stop
  2792  016A  160A  118A  2195  120A  118A  	line	125
  2793                           	
  2794                           l4074:	
  2795  016F                     ;mainM.c: 125:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2796                           	opt asmopt_push
  2797                           opt asmopt_off
  2798                           movlw	13
  2799  016F  300D               	bsf	status, 5	;RP0=1, select bank1
  2800  0170  1683               	bcf	status, 6	;RP1=0, select bank1
  2801  0171  1303               movwf	((??_main+0)^080h+0+1),f
  2802  0172  00D3               	movlw	251
  2803  0173  30FB               movwf	((??_main+0)^080h+0),f
  2804  0174  00D2               	u6327:
  2805  0175                     decfsz	((??_main+0)^080h+0),f
  2806  0175  0BD2               	goto	u6327
  2807  0176  2975               	decfsz	((??_main+0)^080h+0+1),f
  2808  0177  0BD3               	goto	u6327
  2809  0178  2975               opt asmopt_pop
  2810                           
  2811                           	line	129
  2812                           	
  2813                           l4076:	
  2814  0179                     ;mainM.c: 129:         sensorF1 = (float) adcT * 5/255;
  2815                           	movlw	0x43
  2816  0179  3043               	bcf	status, 5	;RP0=0, select bank0
  2817  017A  1283               	bcf	status, 6	;RP1=0, select bank0
  2818  017B  1303               	movwf	(___fldiv@a+3)
  2819  017C  00E3               	movlw	0x7f
  2820  017D  307F               	movwf	(___fldiv@a+2)
  2821  017E  00E2               	movlw	0x0
  2822  017F  3000               	movwf	(___fldiv@a+1)
  2823  0180  00E1               	movlw	0x0
  2824  0181  3000               	movwf	(___fldiv@a)
  2825  0182  00E0               
  2826                           	movlw	0x40
  2827  0183  3040               	movwf	(___flmul@b+3)
  2828  0184  00C9               	movlw	0xa0
  2829  0185  30A0               	movwf	(___flmul@b+2)
  2830  0186  00C8               	movlw	0x0
  2831  0187  3000               	movwf	(___flmul@b+1)
  2832  0188  00C7               	movlw	0x0
  2833  0189  3000               	movwf	(___flmul@b)
  2834  018A  00C6               
  2835                           	bsf	status, 5	;RP0=1, select bank1
  2836  018B  1683               	bcf	status, 6	;RP1=0, select bank1
  2837  018C  1303               	movf	(_adcT)^080h,w
  2838  018D  0842               	movwf	(??_main+0)^080h+0
  2839  018E  00D2               	clrf	(??_main+0)^080h+0+1
  2840  018F  01D3               	clrf	(??_main+0)^080h+0+2
  2841  0190  01D4               	clrf	(??_main+0)^080h+0+3
  2842  0191  01D5               	movf	3+(??_main+0)^080h+0,w
  2843  0192  0855               	movwf	(___xxtofl@val+3)
  2844  0193  00F6               	movf	2+(??_main+0)^080h+0,w
  2845  0194  0854               	movwf	(___xxtofl@val+2)
  2846  0195  00F5               	movf	1+(??_main+0)^080h+0,w
  2847  0196  0853               	movwf	(___xxtofl@val+1)
  2848  0197  00F4               	movf	0+(??_main+0)^080h+0,w
  2849  0198  0852               	movwf	(___xxtofl@val)
  2850  0199  00F3               
  2851                           	movlw	low(0)
  2852  019A  3000               	fcall	___xxtofl
  2853  019B  120A  118A  26C7  120A  118A  	movf	(3+(?___xxtofl)),w
  2854  01A0  0876               	bcf	status, 5	;RP0=0, select bank0
  2855  01A1  1283               	bcf	status, 6	;RP1=0, select bank0
  2856  01A2  1303               	movwf	(___flmul@a+3)
  2857  01A3  00CD               	movf	(2+(?___xxtofl)),w
  2858  01A4  0875               	movwf	(___flmul@a+2)
  2859  01A5  00CC               	movf	(1+(?___xxtofl)),w
  2860  01A6  0874               	movwf	(___flmul@a+1)
  2861  01A7  00CB               	movf	(0+(?___xxtofl)),w
  2862  01A8  0873               	movwf	(___flmul@a)
  2863  01A9  00CA               
  2864                           	fcall	___flmul
  2865  01AA  120A  158A  248B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2866  01AF  1283               	bcf	status, 6	;RP1=0, select bank0
  2867  01B0  1303               	movf	(3+(?___flmul)),w
  2868  01B1  0849               	movwf	(___fldiv@b+3)
  2869  01B2  00E7               	movf	(2+(?___flmul)),w
  2870  01B3  0848               	movwf	(___fldiv@b+2)
  2871  01B4  00E6               	movf	(1+(?___flmul)),w
  2872  01B5  0847               	movwf	(___fldiv@b+1)
  2873  01B6  00E5               	movf	(0+(?___flmul)),w
  2874  01B7  0846               	movwf	(___fldiv@b)
  2875  01B8  00E4               
  2876                           	fcall	___fldiv
  2877  01B9  120A  158A  21BD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2878  01BE  1283               	bcf	status, 6	;RP1=0, select bank0
  2879  01BF  1303               	movf	(3+(?___fldiv)),w
  2880  01C0  0863               	bsf	status, 5	;RP0=1, select bank1
  2881  01C1  1683               	bcf	status, 6	;RP1=0, select bank1
  2882  01C2  1303               	movwf	(_sensorF1+3)^080h
  2883  01C3  00AF               	bcf	status, 5	;RP0=0, select bank0
  2884  01C4  1283               	bcf	status, 6	;RP1=0, select bank0
  2885  01C5  1303               	movf	(2+(?___fldiv)),w
  2886  01C6  0862               	bsf	status, 5	;RP0=1, select bank1
  2887  01C7  1683               	bcf	status, 6	;RP1=0, select bank1
  2888  01C8  1303               	movwf	(_sensorF1+2)^080h
  2889  01C9  00AE               	bcf	status, 5	;RP0=0, select bank0
  2890  01CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2891  01CB  1303               	movf	(1+(?___fldiv)),w
  2892  01CC  0861               	bsf	status, 5	;RP0=1, select bank1
  2893  01CD  1683               	bcf	status, 6	;RP1=0, select bank1
  2894  01CE  1303               	movwf	(_sensorF1+1)^080h
  2895  01CF  00AD               	bcf	status, 5	;RP0=0, select bank0
  2896  01D0  1283               	bcf	status, 6	;RP1=0, select bank0
  2897  01D1  1303               	movf	(0+(?___fldiv)),w
  2898  01D2  0860               	bsf	status, 5	;RP0=1, select bank1
  2899  01D3  1683               	bcf	status, 6	;RP1=0, select bank1
  2900  01D4  1303               	movwf	(_sensorF1)^080h
  2901  01D5  00AC               
  2902                           	line	130
  2903                           	
  2904                           l4078:	
  2905  01D6                     ;mainM.c: 130:         sensorF2 = (float) sensorF1/0.01;
  2906                           	movlw	0x3c
  2907  01D6  303C               	bcf	status, 5	;RP0=0, select bank0
  2908  01D7  1283               	bcf	status, 6	;RP1=0, select bank0
  2909  01D8  1303               	movwf	(___fldiv@a+3)
  2910  01D9  00E3               	movlw	0x23
  2911  01DA  3023               	movwf	(___fldiv@a+2)
  2912  01DB  00E2               	movlw	0xd7
  2913  01DC  30D7               	movwf	(___fldiv@a+1)
  2914  01DD  00E1               	movlw	0xa
  2915  01DE  300A               	movwf	(___fldiv@a)
  2916  01DF  00E0               
  2917                           	bsf	status, 5	;RP0=1, select bank1
  2918  01E0  1683               	bcf	status, 6	;RP1=0, select bank1
  2919  01E1  1303               	movf	(_sensorF1+3)^080h,w
  2920  01E2  082F               	bcf	status, 5	;RP0=0, select bank0
  2921  01E3  1283               	bcf	status, 6	;RP1=0, select bank0
  2922  01E4  1303               	movwf	(___fldiv@b+3)
  2923  01E5  00E7               	bsf	status, 5	;RP0=1, select bank1
  2924  01E6  1683               	bcf	status, 6	;RP1=0, select bank1
  2925  01E7  1303               	movf	(_sensorF1+2)^080h,w
  2926  01E8  082E               	bcf	status, 5	;RP0=0, select bank0
  2927  01E9  1283               	bcf	status, 6	;RP1=0, select bank0
  2928  01EA  1303               	movwf	(___fldiv@b+2)
  2929  01EB  00E6               	bsf	status, 5	;RP0=1, select bank1
  2930  01EC  1683               	bcf	status, 6	;RP1=0, select bank1
  2931  01ED  1303               	movf	(_sensorF1+1)^080h,w
  2932  01EE  082D               	bcf	status, 5	;RP0=0, select bank0
  2933  01EF  1283               	bcf	status, 6	;RP1=0, select bank0
  2934  01F0  1303               	movwf	(___fldiv@b+1)
  2935  01F1  00E5               	bsf	status, 5	;RP0=1, select bank1
  2936  01F2  1683               	bcf	status, 6	;RP1=0, select bank1
  2937  01F3  1303               	movf	(_sensorF1)^080h,w
  2938  01F4  082C               	bcf	status, 5	;RP0=0, select bank0
  2939  01F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2940  01F6  1303               	movwf	(___fldiv@b)
  2941  01F7  00E4               
  2942                           	fcall	___fldiv
  2943  01F8  120A  158A  21BD  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2944  01FD  1283               	bcf	status, 6	;RP1=0, select bank0
  2945  01FE  1303               	movf	(3+(?___fldiv)),w
  2946  01FF  0863               	bsf	status, 5	;RP0=1, select bank1
  2947  0200  1683               	bcf	status, 6	;RP1=0, select bank1
  2948  0201  1303               	movwf	(_sensorF2+3)^080h
  2949  0202  00A7               	bcf	status, 5	;RP0=0, select bank0
  2950  0203  1283               	bcf	status, 6	;RP1=0, select bank0
  2951  0204  1303               	movf	(2+(?___fldiv)),w
  2952  0205  0862               	bsf	status, 5	;RP0=1, select bank1
  2953  0206  1683               	bcf	status, 6	;RP1=0, select bank1
  2954  0207  1303               	movwf	(_sensorF2+2)^080h
  2955  0208  00A6               	bcf	status, 5	;RP0=0, select bank0
  2956  0209  1283               	bcf	status, 6	;RP1=0, select bank0
  2957  020A  1303               	movf	(1+(?___fldiv)),w
  2958  020B  0861               	bsf	status, 5	;RP0=1, select bank1
  2959  020C  1683               	bcf	status, 6	;RP1=0, select bank1
  2960  020D  1303               	movwf	(_sensorF2+1)^080h
  2961  020E  00A5               	bcf	status, 5	;RP0=0, select bank0
  2962  020F  1283               	bcf	status, 6	;RP1=0, select bank0
  2963  0210  1303               	movf	(0+(?___fldiv)),w
  2964  0211  0860               	bsf	status, 5	;RP0=1, select bank1
  2965  0212  1683               	bcf	status, 6	;RP1=0, select bank1
  2966  0213  1303               	movwf	(_sensorF2)^080h
  2967  0214  00A4               
  2968                           	line	131
  2969                           	
  2970                           l4080:	
  2971  0215                     ;mainM.c: 131:         entero1 = (int) sensorF2;
  2972                           	movf	(_sensorF2+3)^080h,w
  2973  0215  0827               	movwf	(___fltol@f1+3)
  2974  0216  00F6               	movf	(_sensorF2+2)^080h,w
  2975  0217  0826               	movwf	(___fltol@f1+2)
  2976  0218  00F5               	movf	(_sensorF2+1)^080h,w
  2977  0219  0825               	movwf	(___fltol@f1+1)
  2978  021A  00F4               	movf	(_sensorF2)^080h,w
  2979  021B  0824               	movwf	(___fltol@f1)
  2980  021C  00F3               
  2981                           	fcall	___fltol
  2982  021D  120A  158A  2121  120A  118A  	movf	(0+(?___fltol)),w
  2983  0222  0873               	bsf	status, 5	;RP0=1, select bank1
  2984  0223  1683               	bcf	status, 6	;RP1=0, select bank1
  2985  0224  1303               	movwf	(??_main+0)^080h+0
  2986  0225  00D2               	movf	(??_main+0)^080h+0,w
  2987  0226  0852               	bcf	status, 5	;RP0=0, select bank0
  2988  0227  1283               	bcf	status, 6	;RP1=0, select bank0
  2989  0228  1303               	movwf	(_entero1)
  2990  0229  00EF               	line	132
  2991                           	
  2992                           l4082:	
  2993  022A                     ;mainM.c: 132:         float1 = (sensorF2 - entero1)*100;
  2994                           	movlw	0x42
  2995  022A  3042               	movwf	(___flmul@b+3)
  2996  022B  00C9               	movlw	0xc8
  2997  022C  30C8               	movwf	(___flmul@b+2)
  2998  022D  00C8               	movlw	0x0
  2999  022E  3000               	movwf	(___flmul@b+1)
  3000  022F  00C7               	movlw	0x0
  3001  0230  3000               	movwf	(___flmul@b)
  3002  0231  00C6               
  3003                           	bsf	status, 5	;RP0=1, select bank1
  3004  0232  1683               	bcf	status, 6	;RP1=0, select bank1
  3005  0233  1303               	movf	(_sensorF2+3)^080h,w
  3006  0234  0827               	bcf	status, 5	;RP0=0, select bank0
  3007  0235  1283               	bcf	status, 6	;RP1=0, select bank0
  3008  0236  1303               	movwf	(___fladd@b+3)
  3009  0237  00B1               	bsf	status, 5	;RP0=1, select bank1
  3010  0238  1683               	bcf	status, 6	;RP1=0, select bank1
  3011  0239  1303               	movf	(_sensorF2+2)^080h,w
  3012  023A  0826               	bcf	status, 5	;RP0=0, select bank0
  3013  023B  1283               	bcf	status, 6	;RP1=0, select bank0
  3014  023C  1303               	movwf	(___fladd@b+2)
  3015  023D  00B0               	bsf	status, 5	;RP0=1, select bank1
  3016  023E  1683               	bcf	status, 6	;RP1=0, select bank1
  3017  023F  1303               	movf	(_sensorF2+1)^080h,w
  3018  0240  0825               	bcf	status, 5	;RP0=0, select bank0
  3019  0241  1283               	bcf	status, 6	;RP1=0, select bank0
  3020  0242  1303               	movwf	(___fladd@b+1)
  3021  0243  00AF               	bsf	status, 5	;RP0=1, select bank1
  3022  0244  1683               	bcf	status, 6	;RP1=0, select bank1
  3023  0245  1303               	movf	(_sensorF2)^080h,w
  3024  0246  0824               	bcf	status, 5	;RP0=0, select bank0
  3025  0247  1283               	bcf	status, 6	;RP1=0, select bank0
  3026  0248  1303               	movwf	(___fladd@b)
  3027  0249  00AE               
  3028                           	movf	(_entero1),w
  3029  024A  086F               	bsf	status, 5	;RP0=1, select bank1
  3030  024B  1683               	bcf	status, 6	;RP1=0, select bank1
  3031  024C  1303               	movwf	(??_main+0)^080h+0
  3032  024D  00D2               	clrf	(??_main+0)^080h+0+1
  3033  024E  01D3               	clrf	(??_main+0)^080h+0+2
  3034  024F  01D4               	clrf	(??_main+0)^080h+0+3
  3035  0250  01D5               	movf	3+(??_main+0)^080h+0,w
  3036  0251  0855               	movwf	(___xxtofl@val+3)
  3037  0252  00F6               	movf	2+(??_main+0)^080h+0,w
  3038  0253  0854               	movwf	(___xxtofl@val+2)
  3039  0254  00F5               	movf	1+(??_main+0)^080h+0,w
  3040  0255  0853               	movwf	(___xxtofl@val+1)
  3041  0256  00F4               	movf	0+(??_main+0)^080h+0,w
  3042  0257  0852               	movwf	(___xxtofl@val)
  3043  0258  00F3               
  3044                           	movlw	low(01h)
  3045  0259  3001               	fcall	___xxtofl
  3046  025A  120A  118A  26C7  120A  118A  	movf	(3+(?___xxtofl)),w
  3047  025F  0876               	bcf	status, 5	;RP0=0, select bank0
  3048  0260  1283               	bcf	status, 6	;RP1=0, select bank0
  3049  0261  1303               	movwf	(___flneg@f1+3)
  3050  0262  00AD               	movf	(2+(?___xxtofl)),w
  3051  0263  0875               	movwf	(___flneg@f1+2)
  3052  0264  00AC               	movf	(1+(?___xxtofl)),w
  3053  0265  0874               	movwf	(___flneg@f1+1)
  3054  0266  00AB               	movf	(0+(?___xxtofl)),w
  3055  0267  0873               	movwf	(___flneg@f1)
  3056  0268  00AA               
  3057                           	fcall	___flneg
  3058  0269  160A  118A  21B7  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3059  026E  1283               	bcf	status, 6	;RP1=0, select bank0
  3060  026F  1303               	movf	(3+(?___flneg)),w
  3061  0270  082D               	movwf	(___fladd@a+3)
  3062  0271  00B5               	movf	(2+(?___flneg)),w
  3063  0272  082C               	movwf	(___fladd@a+2)
  3064  0273  00B4               	movf	(1+(?___flneg)),w
  3065  0274  082B               	movwf	(___fladd@a+1)
  3066  0275  00B3               	movf	(0+(?___flneg)),w
  3067  0276  082A               	movwf	(___fladd@a)
  3068  0277  00B2               
  3069                           	fcall	___fladd
  3070  0278  160A  118A  2544  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3071  027D  1283               	bcf	status, 6	;RP1=0, select bank0
  3072  027E  1303               	movf	(3+(?___fladd)),w
  3073  027F  0831               	movwf	(___flmul@a+3)
  3074  0280  00CD               	movf	(2+(?___fladd)),w
  3075  0281  0830               	movwf	(___flmul@a+2)
  3076  0282  00CC               	movf	(1+(?___fladd)),w
  3077  0283  082F               	movwf	(___flmul@a+1)
  3078  0284  00CB               	movf	(0+(?___fladd)),w
  3079  0285  082E               	movwf	(___flmul@a)
  3080  0286  00CA               
  3081                           	fcall	___flmul
  3082  0287  120A  158A  248B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3083  028C  1283               	bcf	status, 6	;RP1=0, select bank0
  3084  028D  1303               	movf	(3+(?___flmul)),w
  3085  028E  0849               	bsf	status, 5	;RP0=1, select bank1
  3086  028F  1683               	bcf	status, 6	;RP1=0, select bank1
  3087  0290  1303               	movwf	(_float1+3)^080h
  3088  0291  00AB               	bcf	status, 5	;RP0=0, select bank0
  3089  0292  1283               	bcf	status, 6	;RP1=0, select bank0
  3090  0293  1303               	movf	(2+(?___flmul)),w
  3091  0294  0848               	bsf	status, 5	;RP0=1, select bank1
  3092  0295  1683               	bcf	status, 6	;RP1=0, select bank1
  3093  0296  1303               	movwf	(_float1+2)^080h
  3094  0297  00AA               	bcf	status, 5	;RP0=0, select bank0
  3095  0298  1283               	bcf	status, 6	;RP1=0, select bank0
  3096  0299  1303               	movf	(1+(?___flmul)),w
  3097  029A  0847               	bsf	status, 5	;RP0=1, select bank1
  3098  029B  1683               	bcf	status, 6	;RP1=0, select bank1
  3099  029C  1303               	movwf	(_float1+1)^080h
  3100  029D  00A9               	bcf	status, 5	;RP0=0, select bank0
  3101  029E  1283               	bcf	status, 6	;RP1=0, select bank0
  3102  029F  1303               	movf	(0+(?___flmul)),w
  3103  02A0  0846               	bsf	status, 5	;RP0=1, select bank1
  3104  02A1  1683               	bcf	status, 6	;RP1=0, select bank1
  3105  02A2  1303               	movwf	(_float1)^080h
  3106  02A3  00A8               
  3107                           	line	133
  3108                           	
  3109                           l4084:	
  3110  02A4                     ;mainM.c: 133:         dec1 = (int) float1;
  3111                           	movf	(_float1+3)^080h,w
  3112  02A4  082B               	movwf	(___fltol@f1+3)
  3113  02A5  00F6               	movf	(_float1+2)^080h,w
  3114  02A6  082A               	movwf	(___fltol@f1+2)
  3115  02A7  00F5               	movf	(_float1+1)^080h,w
  3116  02A8  0829               	movwf	(___fltol@f1+1)
  3117  02A9  00F4               	movf	(_float1)^080h,w
  3118  02AA  0828               	movwf	(___fltol@f1)
  3119  02AB  00F3               
  3120                           	fcall	___fltol
  3121  02AC  120A  158A  2121  120A  118A  	movf	(0+(?___fltol)),w
  3122  02B1  0873               	bsf	status, 5	;RP0=1, select bank1
  3123  02B2  1683               	bcf	status, 6	;RP1=0, select bank1
  3124  02B3  1303               	movwf	(??_main+0)^080h+0
  3125  02B4  00D2               	movf	(??_main+0)^080h+0,w
  3126  02B5  0852               	movwf	(_dec1)^080h
  3127  02B6  00C0               	line	136
  3128                           	
  3129                           l4086:	
  3130  02B7                     ;mainM.c: 136:         if(PORTAbits.RA1){
  3131                           	bcf	status, 5	;RP0=0, select bank0
  3132  02B7  1283               	bcf	status, 6	;RP1=0, select bank0
  3133  02B8  1303               	btfss	(5),1	;volatile
  3134  02B9  1C85               	goto	u5951
  3135  02BA  2ABC               	goto	u5950
  3136  02BB  2ABD               u5951:
  3137  02BC                     	goto	l249
  3138  02BC  2AC1               u5950:
  3139  02BD                     	line	137
  3140                           	
  3141                           l4088:	
  3142  02BD                     ;mainM.c: 137:             antibounce = 1;
  3143                           	bsf	status, 5	;RP0=1, select bank1
  3144  02BD  1683               	bcf	status, 6	;RP1=0, select bank1
  3145  02BE  1303               	clrf	(_antibounce)^080h
  3146  02BF  01B2               	incf	(_antibounce)^080h,f
  3147  02C0  0AB2               	line	138
  3148                           ;mainM.c: 138:         }
  3149                           	
  3150                           l249:	
  3151  02C1                     	line	139
  3152                           ;mainM.c: 139:         if(PORTAbits.RA1 == 0 && antibounce){
  3153                           	bcf	status, 5	;RP0=0, select bank0
  3154  02C1  1283               	btfsc	(5),1	;volatile
  3155  02C2  1885               	goto	u5961
  3156  02C3  2AC5               	goto	u5960
  3157  02C4  2AC6               u5961:
  3158  02C5                     	goto	l4098
  3159  02C5  2AF1               u5960:
  3160  02C6                     	
  3161                           l4090:	
  3162  02C6                     	bsf	status, 5	;RP0=1, select bank1
  3163  02C6  1683               	bcf	status, 6	;RP1=0, select bank1
  3164  02C7  1303               	movf	((_antibounce)^080h),w
  3165  02C8  0832               	btfsc	status,2
  3166  02C9  1903               	goto	u5971
  3167  02CA  2ACC               	goto	u5970
  3168  02CB  2ACD               u5971:
  3169  02CC                     	goto	l4098
  3170  02CC  2AF1               u5970:
  3171  02CD                     	line	140
  3172                           	
  3173                           l4092:	
  3174  02CD                     ;mainM.c: 140:             screenCounter++;
  3175                           	movlw	low(01h)
  3176  02CD  3001               	movwf	(??_main+0)^080h+0
  3177  02CE  00D2               	movf	(??_main+0)^080h+0,w
  3178  02CF  0852               	bcf	status, 5	;RP0=0, select bank0
  3179  02D0  1283               	bcf	status, 6	;RP1=0, select bank0
  3180  02D1  1303               	addwf	(_screenCounter),f
  3181  02D2  07EE               	line	141
  3182                           	
  3183                           l4094:	
  3184  02D3                     ;mainM.c: 141:             screenCounter = screenCounter%3;
  3185                           	movlw	03h
  3186  02D3  3003               	movwf	(___awmod@divisor)
  3187  02D4  00F3               	movlw	0
  3188  02D5  3000               	movwf	((___awmod@divisor))+1
  3189  02D6  00F4               	movf	(_screenCounter),w
  3190  02D7  086E               	bsf	status, 5	;RP0=1, select bank1
  3191  02D8  1683               	bcf	status, 6	;RP1=0, select bank1
  3192  02D9  1303               	movwf	(??_main+0)^080h+0
  3193  02DA  00D2               	clrf	(??_main+0)^080h+0+1
  3194  02DB  01D3               	movf	0+(??_main+0)^080h+0,w
  3195  02DC  0852               	movwf	(___awmod@dividend)
  3196  02DD  00F5               	movf	1+(??_main+0)^080h+0,w
  3197  02DE  0853               	movwf	(___awmod@dividend+1)
  3198  02DF  00F6               	fcall	___awmod
  3199  02E0  160A  118A  2470  120A  118A  	movf	(0+(?___awmod)),w
  3200  02E5  0873               	bsf	status, 5	;RP0=1, select bank1
  3201  02E6  1683               	bcf	status, 6	;RP1=0, select bank1
  3202  02E7  1303               	movwf	(??_main+2)^080h+0
  3203  02E8  00D4               	movf	(??_main+2)^080h+0,w
  3204  02E9  0854               	bcf	status, 5	;RP0=0, select bank0
  3205  02EA  1283               	bcf	status, 6	;RP1=0, select bank0
  3206  02EB  1303               	movwf	(_screenCounter)
  3207  02EC  00EE               	line	142
  3208                           	
  3209                           l4096:	
  3210  02ED                     ;mainM.c: 142:             antibounce = 0;
  3211                           	bsf	status, 5	;RP0=1, select bank1
  3212  02ED  1683               	bcf	status, 6	;RP1=0, select bank1
  3213  02EE  1303               	clrf	(_antibounce)^080h
  3214  02EF  01B2               	goto	l4098
  3215  02F0  2AF1               	line	143
  3216                           ;mainM.c: 143:         }
  3217                           	
  3218                           l250:	
  3219  02F1                     	line	146
  3220                           	
  3221                           l4098:	
  3222  02F1                     ;mainM.c: 146:         if(PORTAbits.RA2){
  3223                           	bcf	status, 5	;RP0=0, select bank0
  3224  02F1  1283               	btfss	(5),2	;volatile
  3225  02F2  1D05               	goto	u5981
  3226  02F3  2AF5               	goto	u5980
  3227  02F4  2AF6               u5981:
  3228  02F5                     	goto	l251
  3229  02F5  2AFA               u5980:
  3230  02F6                     	line	147
  3231                           	
  3232                           l4100:	
  3233  02F6                     ;mainM.c: 147:             antibounce2 = 1;
  3234                           	bsf	status, 5	;RP0=1, select bank1
  3235  02F6  1683               	bcf	status, 6	;RP1=0, select bank1
  3236  02F7  1303               	clrf	(_antibounce2)^080h
  3237  02F8  01B1               	incf	(_antibounce2)^080h,f
  3238  02F9  0AB1               	line	148
  3239                           ;mainM.c: 148:         }
  3240                           	
  3241                           l251:	
  3242  02FA                     	line	149
  3243                           ;mainM.c: 149:         if(PORTAbits.RA2 == 0 && antibounce2){
  3244                           	bcf	status, 5	;RP0=0, select bank0
  3245  02FA  1283               	btfsc	(5),2	;volatile
  3246  02FB  1905               	goto	u5991
  3247  02FC  2AFE               	goto	u5990
  3248  02FD  2AFF               u5991:
  3249  02FE                     	goto	l4110
  3250  02FE  2B11               u5990:
  3251  02FF                     	
  3252                           l4102:	
  3253  02FF                     	bsf	status, 5	;RP0=1, select bank1
  3254  02FF  1683               	bcf	status, 6	;RP1=0, select bank1
  3255  0300  1303               	movf	((_antibounce2)^080h),w
  3256  0301  0831               	btfsc	status,2
  3257  0302  1903               	goto	u6001
  3258  0303  2B05               	goto	u6000
  3259  0304  2B06               u6001:
  3260  0305                     	goto	l4110
  3261  0305  2B11               u6000:
  3262  0306                     	line	150
  3263                           	
  3264                           l4104:	
  3265  0306                     ;mainM.c: 150:             screenState++;
  3266                           	movlw	low(01h)
  3267  0306  3001               	movwf	(??_main+0)^080h+0
  3268  0307  00D2               	movf	(??_main+0)^080h+0,w
  3269  0308  0852               	addwf	(_screenState)^080h,f
  3270  0309  07B0               	line	151
  3271                           	
  3272                           l4106:	
  3273  030A                     ;mainM.c: 151:             screenState = screenState%2;
  3274                           	movf	(_screenState)^080h,w
  3275  030A  0830               	andlw	01h
  3276  030B  3901               	movwf	(??_main+0)^080h+0
  3277  030C  00D2               	movf	(??_main+0)^080h+0,w
  3278  030D  0852               	movwf	(_screenState)^080h
  3279  030E  00B0               	line	152
  3280                           	
  3281                           l4108:	
  3282  030F                     ;mainM.c: 152:             antibounce2 = 0;
  3283                           	clrf	(_antibounce2)^080h
  3284  030F  01B1               	goto	l4110
  3285  0310  2B11               	line	153
  3286                           ;mainM.c: 153:         }
  3287                           	
  3288                           l252:	
  3289  0311                     	line	155
  3290                           	
  3291                           l4110:	
  3292  0311                     ;mainM.c: 155:         if(signal){
  3293                           	bsf	status, 5	;RP0=1, select bank1
  3294  0311  1683               	bcf	status, 6	;RP1=0, select bank1
  3295  0312  1303               	movf	((_signal)^080h),w
  3296  0313  0838               	btfsc	status,2
  3297  0314  1903               	goto	u6011
  3298  0315  2B17               	goto	u6010
  3299  0316  2B18               u6011:
  3300  0317                     	goto	l253
  3301  0317  2B1C               u6010:
  3302  0318                     	line	156
  3303                           	
  3304                           l4112:	
  3305  0318                     ;mainM.c: 156:             PORTAbits.RA0 = 1;
  3306                           	bcf	status, 5	;RP0=0, select bank0
  3307  0318  1283               	bcf	status, 6	;RP1=0, select bank0
  3308  0319  1303               	bsf	(5),0	;volatile
  3309  031A  1405               	line	157
  3310                           ;mainM.c: 157:         }else{
  3311                           	goto	l4114
  3312  031B  2B20               	
  3313                           l253:	
  3314  031C                     	line	158
  3315                           ;mainM.c: 158:             PORTAbits.RA0 = 0;
  3316                           	bcf	status, 5	;RP0=0, select bank0
  3317  031C  1283               	bcf	status, 6	;RP1=0, select bank0
  3318  031D  1303               	bcf	(5),0	;volatile
  3319  031E  1005               	goto	l4114
  3320  031F  2B20               	line	159
  3321                           ;mainM.c: 159:         }
  3322                           	
  3323                           l254:	
  3324  0320                     	line	161
  3325                           	
  3326                           l4114:	
  3327  0320                     ;mainM.c: 161:         if(entero1 >= 60){
  3328                           	movlw	low(03Ch)
  3329  0320  303C               	subwf	(_entero1),w
  3330  0321  026F               	skipc
  3331  0322  1C03               	goto	u6021
  3332  0323  2B25               	goto	u6020
  3333  0324  2B26               u6021:
  3334  0325                     	goto	l255
  3335  0325  2B28               u6020:
  3336  0326                     	line	162
  3337                           	
  3338                           l4116:	
  3339  0326                     ;mainM.c: 162:             PORTAbits.RA4 = 1;
  3340                           	bsf	(5),4	;volatile
  3341  0326  1605               	line	163
  3342                           ;mainM.c: 163:         }else{
  3343                           	goto	l4118
  3344  0327  2B2A               	
  3345                           l255:	
  3346  0328                     	line	164
  3347                           ;mainM.c: 164:             PORTAbits.RA4 = 0;
  3348                           	bcf	(5),4	;volatile
  3349  0328  1205               	goto	l4118
  3350  0329  2B2A               	line	165
  3351                           ;mainM.c: 165:         }
  3352                           	
  3353                           l256:	
  3354  032A                     	line	168
  3355                           	
  3356                           l4118:	
  3357  032A                     ;mainM.c: 168:         if(receiveUSART==0){
  3358                           	movf	((_receiveUSART)),w
  3359  032A  086D               	btfss	status,2
  3360  032B  1D03               	goto	u6031
  3361  032C  2B2E               	goto	u6030
  3362  032D  2B2F               u6031:
  3363  032E                     	goto	l4122
  3364  032E  2B38               u6030:
  3365  032F                     	line	169
  3366                           	
  3367                           l4120:	
  3368  032F                     ;mainM.c: 169:             sendUSART(signal);
  3369                           	bsf	status, 5	;RP0=1, select bank1
  3370  032F  1683               	bcf	status, 6	;RP1=0, select bank1
  3371  0330  1303               	movf	(_signal)^080h,w
  3372  0331  0838               	fcall	_sendUSART
  3373  0332  160A  118A  21E9  120A  118A  	line	170
  3374                           ;mainM.c: 170:         }else if(receiveUSART==1){
  3375                           	goto	l4150
  3376  0337  2BD1               	
  3377                           l257:	
  3378  0338                     	
  3379                           l4122:	
  3380  0338                     	bcf	status, 5	;RP0=0, select bank0
  3381  0338  1283               	bcf	status, 6	;RP1=0, select bank0
  3382  0339  1303               		decf	((_receiveUSART)),w
  3383  033A  036D               	btfss	status,2
  3384  033B  1D03               	goto	u6041
  3385  033C  2B3E               	goto	u6040
  3386  033D  2B3F               u6041:
  3387  033E                     	goto	l4126
  3388  033E  2B47               u6040:
  3389  033F                     	line	171
  3390                           	
  3391                           l4124:	
  3392  033F                     ;mainM.c: 171:             sendUSART(PORTAbits.RA4);
  3393                           	swapf	(5),w	;volatile
  3394  033F  0E05               	andlw	(1<<1)-1
  3395  0340  3901               	fcall	_sendUSART
  3396  0341  160A  118A  21E9  120A  118A  	line	172
  3397                           ;mainM.c: 172:         }else if(receiveUSART==2){
  3398                           	goto	l4150
  3399  0346  2BD1               	
  3400                           l259:	
  3401  0347                     	
  3402                           l4126:	
  3403  0347                     		movlw	2
  3404  0347  3002               	bcf	status, 5	;RP0=0, select bank0
  3405  0348  1283               	bcf	status, 6	;RP1=0, select bank0
  3406  0349  1303               	xorwf	((_receiveUSART)),w
  3407  034A  066D               	btfss	status,2
  3408  034B  1D03               	goto	u6051
  3409  034C  2B4E               	goto	u6050
  3410  034D  2B4F               u6051:
  3411  034E                     	goto	l4130
  3412  034E  2B58               u6050:
  3413  034F                     	line	173
  3414                           	
  3415                           l4128:	
  3416  034F                     ;mainM.c: 173:             sendUSART(garage);
  3417                           	bsf	status, 5	;RP0=1, select bank1
  3418  034F  1683               	bcf	status, 6	;RP1=0, select bank1
  3419  0350  1303               	movf	(_garage)^080h,w
  3420  0351  0833               	fcall	_sendUSART
  3421  0352  160A  118A  21E9  120A  118A  	line	174
  3422                           ;mainM.c: 174:         }else if(receiveUSART==3){
  3423                           	goto	l4150
  3424  0357  2BD1               	
  3425                           l261:	
  3426  0358                     	
  3427                           l4130:	
  3428  0358                     		movlw	3
  3429  0358  3003               	bcf	status, 5	;RP0=0, select bank0
  3430  0359  1283               	bcf	status, 6	;RP1=0, select bank0
  3431  035A  1303               	xorwf	((_receiveUSART)),w
  3432  035B  066D               	btfss	status,2
  3433  035C  1D03               	goto	u6061
  3434  035D  2B5F               	goto	u6060
  3435  035E  2B60               u6061:
  3436  035F                     	goto	l4134
  3437  035F  2B67               u6060:
  3438  0360                     	line	175
  3439                           	
  3440                           l4132:	
  3441  0360                     ;mainM.c: 175:             sendUSART(hall);
  3442                           	movf	(_hall),w
  3443  0360  087A               	fcall	_sendUSART
  3444  0361  160A  118A  21E9  120A  118A  	line	176
  3445                           ;mainM.c: 176:         }else if(receiveUSART==4){
  3446                           	goto	l4150
  3447  0366  2BD1               	
  3448                           l263:	
  3449  0367                     	
  3450                           l4134:	
  3451  0367                     		movlw	4
  3452  0367  3004               	bcf	status, 5	;RP0=0, select bank0
  3453  0368  1283               	bcf	status, 6	;RP1=0, select bank0
  3454  0369  1303               	xorwf	((_receiveUSART)),w
  3455  036A  066D               	btfss	status,2
  3456  036B  1D03               	goto	u6071
  3457  036C  2B6E               	goto	u6070
  3458  036D  2B6F               u6071:
  3459  036E                     	goto	l4138
  3460  036E  2B76               u6070:
  3461  036F                     	line	177
  3462                           	
  3463                           l4136:	
  3464  036F                     ;mainM.c: 177:             sendUSART(entero1);
  3465                           	movf	(_entero1),w
  3466  036F  086F               	fcall	_sendUSART
  3467  0370  160A  118A  21E9  120A  118A  	line	178
  3468                           ;mainM.c: 178:         }else if(receiveUSART==5){
  3469                           	goto	l4150
  3470  0375  2BD1               	
  3471                           l265:	
  3472  0376                     	
  3473                           l4138:	
  3474  0376                     		movlw	5
  3475  0376  3005               	bcf	status, 5	;RP0=0, select bank0
  3476  0377  1283               	bcf	status, 6	;RP1=0, select bank0
  3477  0378  1303               	xorwf	((_receiveUSART)),w
  3478  0379  066D               	btfss	status,2
  3479  037A  1D03               	goto	u6081
  3480  037B  2B7D               	goto	u6080
  3481  037C  2B7E               u6081:
  3482  037D                     	goto	l4142
  3483  037D  2BA8               u6080:
  3484  037E                     	line	179
  3485                           	
  3486                           l4140:	
  3487  037E                     ;mainM.c: 179:             sendUSART((uint8_t) adcP*100/255);
  3488                           	movlw	0FFh
  3489  037E  30FF               	movwf	(___awdiv@divisor)
  3490  037F  00A2               	movlw	0
  3491  0380  3000               	movwf	((___awdiv@divisor))+1
  3492  0381  00A3               	bsf	status, 5	;RP0=1, select bank1
  3493  0382  1683               	bcf	status, 6	;RP1=0, select bank1
  3494  0383  1303               	movf	(_adcP)^080h,w
  3495  0384  0839               	movwf	(??_main+0)^080h+0
  3496  0385  00D2               	clrf	(??_main+0)^080h+0+1
  3497  0386  01D3               	movf	0+(??_main+0)^080h+0,w
  3498  0387  0852               	movwf	(___wmul@multiplier)
  3499  0388  00F3               	movf	1+(??_main+0)^080h+0,w
  3500  0389  0853               	movwf	(___wmul@multiplier+1)
  3501  038A  00F4               	movlw	064h
  3502  038B  3064               	movwf	(___wmul@multiplicand)
  3503  038C  00F5               	movlw	0
  3504  038D  3000               	movwf	((___wmul@multiplicand))+1
  3505  038E  00F6               	fcall	___wmul
  3506  038F  160A  118A  228C  120A  118A  	movf	(1+(?___wmul)),w
  3507  0394  0874               	bcf	status, 5	;RP0=0, select bank0
  3508  0395  1283               	bcf	status, 6	;RP1=0, select bank0
  3509  0396  1303               	movwf	(___awdiv@dividend+1)
  3510  0397  00A5               	movf	(0+(?___wmul)),w
  3511  0398  0873               	movwf	(___awdiv@dividend)
  3512  0399  00A4               	fcall	___awdiv
  3513  039A  120A  118A  278B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3514  039F  1283               	bcf	status, 6	;RP1=0, select bank0
  3515  03A0  1303               	movf	(0+(?___awdiv)),w
  3516  03A1  0822               	fcall	_sendUSART
  3517  03A2  160A  118A  21E9  120A  118A  	line	180
  3518                           ;mainM.c: 180:         }else if(receiveUSART==6){
  3519                           	goto	l4150
  3520  03A7  2BD1               	
  3521                           l267:	
  3522  03A8                     	
  3523                           l4142:	
  3524  03A8                     		movlw	6
  3525  03A8  3006               	bcf	status, 5	;RP0=0, select bank0
  3526  03A9  1283               	bcf	status, 6	;RP1=0, select bank0
  3527  03AA  1303               	xorwf	((_receiveUSART)),w
  3528  03AB  066D               	btfss	status,2
  3529  03AC  1D03               	goto	u6091
  3530  03AD  2BAF               	goto	u6090
  3531  03AE  2BB0               u6091:
  3532  03AF                     	goto	l4146
  3533  03AF  2BB9               u6090:
  3534  03B0                     	line	181
  3535                           	
  3536                           l4144:	
  3537  03B0                     ;mainM.c: 181:             sendUSART(mov);
  3538                           	bsf	status, 5	;RP0=1, select bank1
  3539  03B0  1683               	bcf	status, 6	;RP1=0, select bank1
  3540  03B1  1303               	movf	(_mov)^080h,w
  3541  03B2  0837               	fcall	_sendUSART
  3542  03B3  160A  118A  21E9  120A  118A  	line	182
  3543                           ;mainM.c: 182:         }else if(receiveUSART==7){
  3544                           	goto	l4150
  3545  03B8  2BD1               	
  3546                           l269:	
  3547  03B9                     	
  3548                           l4146:	
  3549  03B9                     		movlw	7
  3550  03B9  3007               	bcf	status, 5	;RP0=0, select bank0
  3551  03BA  1283               	bcf	status, 6	;RP1=0, select bank0
  3552  03BB  1303               	xorwf	((_receiveUSART)),w
  3553  03BC  066D               	btfss	status,2
  3554  03BD  1D03               	goto	u6101
  3555  03BE  2BC0               	goto	u6100
  3556  03BF  2BC1               u6101:
  3557  03C0                     	goto	l4150
  3558  03C0  2BD1               u6100:
  3559  03C1                     	line	183
  3560                           	
  3561                           l4148:	
  3562  03C1                     ;mainM.c: 183:             sendUSART(alarm);
  3563                           	bsf	status, 5	;RP0=1, select bank1
  3564  03C1  1683               	bcf	status, 6	;RP1=0, select bank1
  3565  03C2  1303               	movf	(_alarm)^080h,w
  3566  03C3  083F               	fcall	_sendUSART
  3567  03C4  160A  118A  21E9  120A  118A  	goto	l4150
  3568  03C9  2BD1               	line	184
  3569                           ;mainM.c: 184:         }
  3570                           	
  3571                           l271:	
  3572  03CA                     	goto	l4150
  3573  03CA  2BD1               	
  3574                           l270:	
  3575  03CB                     	goto	l4150
  3576  03CB  2BD1               	
  3577                           l268:	
  3578  03CC                     	goto	l4150
  3579  03CC  2BD1               	
  3580                           l266:	
  3581  03CD                     	goto	l4150
  3582  03CD  2BD1               	
  3583                           l264:	
  3584  03CE                     	goto	l4150
  3585  03CE  2BD1               	
  3586                           l262:	
  3587  03CF                     	goto	l4150
  3588  03CF  2BD1               	
  3589                           l260:	
  3590  03D0                     	goto	l4150
  3591  03D0  2BD1               	
  3592                           l258:	
  3593  03D1                     	line	189
  3594                           	
  3595                           l4150:	
  3596  03D1                     ;mainM.c: 189:         if(screenState == 0){
  3597                           	bsf	status, 5	;RP0=1, select bank1
  3598  03D1  1683               	bcf	status, 6	;RP1=0, select bank1
  3599  03D2  1303               	movf	((_screenState)^080h),w
  3600  03D3  0830               	btfss	status,2
  3601  03D4  1D03               	goto	u6111
  3602  03D5  2BD7               	goto	u6110
  3603  03D6  2BD8               u6111:
  3604  03D7                     	goto	l4200
  3605  03D7  2CE0               u6110:
  3606  03D8                     	line	190
  3607                           	
  3608                           l4152:	
  3609  03D8                     ;mainM.c: 190:             setCursorLCD(1, 1);
  3610                           	clrf	(setCursorLCD@x)
  3611  03D8  01F6               	incf	(setCursorLCD@x),f
  3612  03D9  0AF6               	movlw	low(01h)
  3613  03DA  3001               	fcall	_setCursorLCD
  3614  03DB  160A  118A  221C  120A  118A  	line	191
  3615                           	
  3616                           l4154:	
  3617  03E0                     ;mainM.c: 191:             if(screenCounter == 0){
  3618                           	bcf	status, 5	;RP0=0, select bank0
  3619  03E0  1283               	bcf	status, 6	;RP1=0, select bank0
  3620  03E1  1303               	movf	((_screenCounter)),w
  3621  03E2  086E               	btfss	status,2
  3622  03E3  1D03               	goto	u6121
  3623  03E4  2BE6               	goto	u6120
  3624  03E5  2BE7               u6121:
  3625  03E6                     	goto	l4162
  3626  03E6  2C05               u6120:
  3627  03E7                     	line	192
  3628                           	
  3629                           l4156:	
  3630  03E7                     ;mainM.c: 192:                 writeStrLCD("TEMP ");
  3631                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3632  03E7  3085               	movwf	(writeStrLCD@string)
  3633  03E8  00F5               	movlw	80h
  3634  03E9  3080               	movwf	(writeStrLCD@string+1)
  3635  03EA  00F6               	fcall	_writeStrLCD
  3636  03EB  160A  118A  23DB  120A  118A  	line	193
  3637                           ;mainM.c: 193:                 writeIntLCD(entero1);
  3638                           	bcf	status, 5	;RP0=0, select bank0
  3639  03F0  1283               	bcf	status, 6	;RP1=0, select bank0
  3640  03F1  1303               	movf	(_entero1),w
  3641  03F2  086F               	fcall	_writeIntLCD
  3642  03F3  160A  118A  21FE  120A  118A  	line	194
  3643                           	
  3644                           l4158:	
  3645  03F8                     ;mainM.c: 194:                 writeCharLCD('°');
  3646                           	movlw	low(0B0h)
  3647  03F8  30B0               	fcall	_writeCharLCD
  3648  03F9  160A  118A  21C6  120A  118A  	line	195
  3649                           	
  3650                           l4160:	
  3651  03FE                     ;mainM.c: 195:                 writeCharLCD('C');
  3652                           	movlw	low(043h)
  3653  03FE  3043               	fcall	_writeCharLCD
  3654  03FF  160A  118A  21C6  120A  118A  	line	196
  3655                           ;mainM.c: 196:             }else if(screenCounter == 1){
  3656                           	goto	l274
  3657  0404  2C4D               	
  3658                           l273:	
  3659  0405                     	
  3660                           l4162:	
  3661  0405                     	bcf	status, 5	;RP0=0, select bank0
  3662  0405  1283               	bcf	status, 6	;RP1=0, select bank0
  3663  0406  1303               		decf	((_screenCounter)),w
  3664  0407  036E               	btfss	status,2
  3665  0408  1D03               	goto	u6131
  3666  0409  2C0B               	goto	u6130
  3667  040A  2C0C               u6131:
  3668  040B                     	goto	l274
  3669  040B  2C4D               u6130:
  3670  040C                     	line	197
  3671                           	
  3672                           l4164:	
  3673  040C                     ;mainM.c: 197:                 writeStrLCD("LUZ ");
  3674                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3675  040C  308B               	movwf	(writeStrLCD@string)
  3676  040D  00F5               	movlw	80h
  3677  040E  3080               	movwf	(writeStrLCD@string+1)
  3678  040F  00F6               	fcall	_writeStrLCD
  3679  0410  160A  118A  23DB  120A  118A  	line	198
  3680                           ;mainM.c: 198:                 writeIntLCD((uint8_t) adcP*100/255);
  3681                           	movlw	0FFh
  3682  0415  30FF               	bcf	status, 5	;RP0=0, select bank0
  3683  0416  1283               	bcf	status, 6	;RP1=0, select bank0
  3684  0417  1303               	movwf	(___awdiv@divisor)
  3685  0418  00A2               	movlw	0
  3686  0419  3000               	movwf	((___awdiv@divisor))+1
  3687  041A  00A3               	bsf	status, 5	;RP0=1, select bank1
  3688  041B  1683               	bcf	status, 6	;RP1=0, select bank1
  3689  041C  1303               	movf	(_adcP)^080h,w
  3690  041D  0839               	movwf	(??_main+0)^080h+0
  3691  041E  00D2               	clrf	(??_main+0)^080h+0+1
  3692  041F  01D3               	movf	0+(??_main+0)^080h+0,w
  3693  0420  0852               	movwf	(___wmul@multiplier)
  3694  0421  00F3               	movf	1+(??_main+0)^080h+0,w
  3695  0422  0853               	movwf	(___wmul@multiplier+1)
  3696  0423  00F4               	movlw	064h
  3697  0424  3064               	movwf	(___wmul@multiplicand)
  3698  0425  00F5               	movlw	0
  3699  0426  3000               	movwf	((___wmul@multiplicand))+1
  3700  0427  00F6               	fcall	___wmul
  3701  0428  160A  118A  228C  120A  118A  	movf	(1+(?___wmul)),w
  3702  042D  0874               	bcf	status, 5	;RP0=0, select bank0
  3703  042E  1283               	bcf	status, 6	;RP1=0, select bank0
  3704  042F  1303               	movwf	(___awdiv@dividend+1)
  3705  0430  00A5               	movf	(0+(?___wmul)),w
  3706  0431  0873               	movwf	(___awdiv@dividend)
  3707  0432  00A4               	fcall	___awdiv
  3708  0433  120A  118A  278B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3709  0438  1283               	bcf	status, 6	;RP1=0, select bank0
  3710  0439  1303               	movf	(0+(?___awdiv)),w
  3711  043A  0822               	fcall	_writeIntLCD
  3712  043B  160A  118A  21FE  120A  118A  	line	199
  3713                           	
  3714                           l4166:	
  3715  0440                     ;mainM.c: 199:                 writeCharLCD(' ');
  3716                           	movlw	low(020h)
  3717  0440  3020               	fcall	_writeCharLCD
  3718  0441  160A  118A  21C6  120A  118A  	line	200
  3719                           	
  3720                           l4168:	
  3721  0446                     ;mainM.c: 200:                 writeCharLCD('%');
  3722                           	movlw	low(025h)
  3723  0446  3025               	fcall	_writeCharLCD
  3724  0447  160A  118A  21C6  120A  118A  	goto	l274
  3725  044C  2C4D               	line	201
  3726                           ;mainM.c: 201:             }
  3727                           	
  3728                           l275:	
  3729  044D                     	
  3730                           l274:	
  3731  044D                     	line	202
  3732                           ;mainM.c: 202:             writeStrLCD("           ");
  3733                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3734  044D  3056               	movwf	(writeStrLCD@string)
  3735  044E  00F5               	movlw	80h
  3736  044F  3080               	movwf	(writeStrLCD@string+1)
  3737  0450  00F6               	fcall	_writeStrLCD
  3738  0451  160A  118A  23DB  120A  118A  	line	205
  3739                           	
  3740                           l4170:	
  3741  0456                     ;mainM.c: 205:             setCursorLCD(2, 1);
  3742                           	clrf	(setCursorLCD@x)
  3743  0456  01F6               	incf	(setCursorLCD@x),f
  3744  0457  0AF6               	movlw	low(02h)
  3745  0458  3002               	fcall	_setCursorLCD
  3746  0459  160A  118A  221C  120A  118A  	line	206
  3747                           	
  3748                           l4172:	
  3749  045E                     ;mainM.c: 206:             if(screenCounter == 0){
  3750                           	bcf	status, 5	;RP0=0, select bank0
  3751  045E  1283               	bcf	status, 6	;RP1=0, select bank0
  3752  045F  1303               	movf	((_screenCounter)),w
  3753  0460  086E               	btfss	status,2
  3754  0461  1D03               	goto	u6141
  3755  0462  2C64               	goto	u6140
  3756  0463  2C65               u6141:
  3757  0464                     	goto	l4184
  3758  0464  2C8E               u6140:
  3759  0465                     	line	207
  3760                           	
  3761                           l4174:	
  3762  0465                     ;mainM.c: 207:                 writeStrLCD("PUERTA ");
  3763                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3764  0465  3076               	movwf	(writeStrLCD@string)
  3765  0466  00F5               	movlw	80h
  3766  0467  3080               	movwf	(writeStrLCD@string+1)
  3767  0468  00F6               	fcall	_writeStrLCD
  3768  0469  160A  118A  23DB  120A  118A  	line	208
  3769                           	
  3770                           l4176:	
  3771  046E                     ;mainM.c: 208:                 if(hall){
  3772                           	movf	((_hall)),w
  3773  046E  087A               	btfsc	status,2
  3774  046F  1903               	goto	u6151
  3775  0470  2C72               	goto	u6150
  3776  0471  2C73               u6151:
  3777  0472                     	goto	l4180
  3778  0472  2C7D               u6150:
  3779  0473                     	line	209
  3780                           	
  3781                           l4178:	
  3782  0473                     ;mainM.c: 209:                     writeStrLCD("ABIERTA");
  3783                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  3784  0473  3021               	movwf	(writeStrLCD@string)
  3785  0474  00F5               	movlw	80h
  3786  0475  3080               	movwf	(writeStrLCD@string+1)
  3787  0476  00F6               	fcall	_writeStrLCD
  3788  0477  160A  118A  23DB  120A  118A  	line	210
  3789                           ;mainM.c: 210:                 }else{
  3790                           	goto	l4182
  3791  047C  2C87               	
  3792                           l277:	
  3793  047D                     	line	211
  3794                           	
  3795                           l4180:	
  3796  047D                     ;mainM.c: 211:                     writeStrLCD("CERRADA");
  3797                           	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  3798  047D  3012               	movwf	(writeStrLCD@string)
  3799  047E  00F5               	movlw	80h
  3800  047F  3080               	movwf	(writeStrLCD@string+1)
  3801  0480  00F6               	fcall	_writeStrLCD
  3802  0481  160A  118A  23DB  120A  118A  	goto	l4182
  3803  0486  2C87               	line	212
  3804                           ;mainM.c: 212:                 }
  3805                           	
  3806                           l278:	
  3807  0487                     	line	213
  3808                           	
  3809                           l4182:	
  3810  0487                     ;mainM.c: 213:                 writeCharLCD(' ');
  3811                           	movlw	low(020h)
  3812  0487  3020               	fcall	_writeCharLCD
  3813  0488  160A  118A  21C6  120A  118A  	line	214
  3814                           ;mainM.c: 214:             }else if(screenCounter == 1){
  3815                           	goto	l279
  3816  048D  2CD6               	
  3817                           l276:	
  3818  048E                     	
  3819                           l4184:	
  3820  048E                     	bcf	status, 5	;RP0=0, select bank0
  3821  048E  1283               	bcf	status, 6	;RP1=0, select bank0
  3822  048F  1303               		decf	((_screenCounter)),w
  3823  0490  036E               	btfss	status,2
  3824  0491  1D03               	goto	u6161
  3825  0492  2C94               	goto	u6160
  3826  0493  2C95               u6161:
  3827  0494                     	goto	l4192
  3828  0494  2CB1               u6160:
  3829  0495                     	line	215
  3830                           	
  3831                           l4186:	
  3832  0495                     ;mainM.c: 215:                 if(mov){
  3833                           	bsf	status, 5	;RP0=1, select bank1
  3834  0495  1683               	bcf	status, 6	;RP1=0, select bank1
  3835  0496  1303               	movf	((_mov)^080h),w
  3836  0497  0837               	btfsc	status,2
  3837  0498  1903               	goto	u6171
  3838  0499  2C9B               	goto	u6170
  3839  049A  2C9C               u6171:
  3840  049B                     	goto	l4190
  3841  049B  2CA6               u6170:
  3842  049C                     	line	216
  3843                           	
  3844                           l4188:	
  3845  049C                     ;mainM.c: 216:                     writeStrLCD("MOVIMIENTO");
  3846                           	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  3847  049C  303C               	movwf	(writeStrLCD@string)
  3848  049D  00F5               	movlw	80h
  3849  049E  3080               	movwf	(writeStrLCD@string+1)
  3850  049F  00F6               	fcall	_writeStrLCD
  3851  04A0  160A  118A  23DB  120A  118A  	line	217
  3852                           ;mainM.c: 217:                 }else{
  3853                           	goto	l279
  3854  04A5  2CD6               	
  3855                           l281:	
  3856  04A6                     	line	218
  3857                           	
  3858                           l4190:	
  3859  04A6                     ;mainM.c: 218:                     writeStrLCD("SIN MOVIMIENTO");
  3860                           	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  3861  04A6  3038               	movwf	(writeStrLCD@string)
  3862  04A7  00F5               	movlw	80h
  3863  04A8  3080               	movwf	(writeStrLCD@string+1)
  3864  04A9  00F6               	fcall	_writeStrLCD
  3865  04AA  160A  118A  23DB  120A  118A  	goto	l279
  3866  04AF  2CD6               	line	219
  3867                           ;mainM.c: 219:                 }
  3868                           	
  3869                           l282:	
  3870  04B0                     	line	220
  3871                           ;mainM.c: 220:             }else if(screenCounter == 2){
  3872                           	goto	l279
  3873  04B0  2CD6               	
  3874                           l280:	
  3875  04B1                     	
  3876                           l4192:	
  3877  04B1                     		movlw	2
  3878  04B1  3002               	bcf	status, 5	;RP0=0, select bank0
  3879  04B2  1283               	bcf	status, 6	;RP1=0, select bank0
  3880  04B3  1303               	xorwf	((_screenCounter)),w
  3881  04B4  066E               	btfss	status,2
  3882  04B5  1D03               	goto	u6181
  3883  04B6  2CB8               	goto	u6180
  3884  04B7  2CB9               u6181:
  3885  04B8                     	goto	l279
  3886  04B8  2CD6               u6180:
  3887  04B9                     	line	221
  3888                           	
  3889                           l4194:	
  3890  04B9                     ;mainM.c: 221:                 if(garage){
  3891                           	bsf	status, 5	;RP0=1, select bank1
  3892  04B9  1683               	bcf	status, 6	;RP1=0, select bank1
  3893  04BA  1303               	movf	((_garage)^080h),w
  3894  04BB  0833               	btfsc	status,2
  3895  04BC  1903               	goto	u6191
  3896  04BD  2CBF               	goto	u6190
  3897  04BE  2CC0               u6191:
  3898  04BF                     	goto	l4198
  3899  04BF  2CCA               u6190:
  3900  04C0                     	line	222
  3901                           	
  3902                           l4196:	
  3903  04C0                     ;mainM.c: 222:                     writeStrLCD("GARAGE ABIERTO");
  3904                           	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
  3905  04C0  3047               	movwf	(writeStrLCD@string)
  3906  04C1  00F5               	movlw	80h
  3907  04C2  3080               	movwf	(writeStrLCD@string+1)
  3908  04C3  00F6               	fcall	_writeStrLCD
  3909  04C4  160A  118A  23DB  120A  118A  	line	223
  3910                           ;mainM.c: 223:                 }else{
  3911                           	goto	l279
  3912  04C9  2CD6               	
  3913                           l285:	
  3914  04CA                     	line	224
  3915                           	
  3916                           l4198:	
  3917  04CA                     ;mainM.c: 224:                     writeStrLCD("GARAGE CERRADO");
  3918                           	movlw	(low((((STR_12)-__stringbase)|8000h)))&0ffh
  3919  04CA  3029               	movwf	(writeStrLCD@string)
  3920  04CB  00F5               	movlw	80h
  3921  04CC  3080               	movwf	(writeStrLCD@string+1)
  3922  04CD  00F6               	fcall	_writeStrLCD
  3923  04CE  160A  118A  23DB  120A  118A  	goto	l279
  3924  04D3  2CD6               	line	225
  3925                           ;mainM.c: 225:                 }
  3926                           	
  3927                           l286:	
  3928  04D4                     	goto	l279
  3929  04D4  2CD6               	line	226
  3930                           ;mainM.c: 226:             }
  3931                           	
  3932                           l284:	
  3933  04D5                     	goto	l279
  3934  04D5  2CD6               	
  3935                           l283:	
  3936  04D6                     	
  3937                           l279:	
  3938  04D6                     	line	227
  3939                           ;mainM.c: 227:             writeStrLCD("           ");
  3940                           	movlw	(low((((STR_13)-__stringbase)|8000h)))&0ffh
  3941  04D6  3056               	movwf	(writeStrLCD@string)
  3942  04D7  00F5               	movlw	80h
  3943  04D8  3080               	movwf	(writeStrLCD@string+1)
  3944  04D9  00F6               	fcall	_writeStrLCD
  3945  04DA  160A  118A  23DB  120A  118A  	line	228
  3946                           ;mainM.c: 228:         }else{
  3947                           	goto	l4008
  3948  04DF  282A               	
  3949                           l272:	
  3950  04E0                     	line	229
  3951                           	
  3952                           l4200:	
  3953  04E0                     ;mainM.c: 229:             setCursorLCD(1, 1);
  3954                           	clrf	(setCursorLCD@x)
  3955  04E0  01F6               	incf	(setCursorLCD@x),f
  3956  04E1  0AF6               	movlw	low(01h)
  3957  04E2  3001               	fcall	_setCursorLCD
  3958  04E3  160A  118A  221C  120A  118A  	line	230
  3959                           	
  3960                           l4202:	
  3961  04E8                     ;mainM.c: 230:             if(screenCounter == 0){
  3962                           	bcf	status, 5	;RP0=0, select bank0
  3963  04E8  1283               	bcf	status, 6	;RP1=0, select bank0
  3964  04E9  1303               	movf	((_screenCounter)),w
  3965  04EA  086E               	btfss	status,2
  3966  04EB  1D03               	goto	u6201
  3967  04EC  2CEE               	goto	u6200
  3968  04ED  2CEF               u6201:
  3969  04EE                     	goto	l4214
  3970  04EE  2D18               u6200:
  3971  04EF                     	line	231
  3972                           	
  3973                           l4204:	
  3974  04EF                     ;mainM.c: 231:                 writeStrLCD("PUERTA ");
  3975                           	movlw	(low((((STR_14)-__stringbase)|8000h)))&0ffh
  3976  04EF  3076               	movwf	(writeStrLCD@string)
  3977  04F0  00F5               	movlw	80h
  3978  04F1  3080               	movwf	(writeStrLCD@string+1)
  3979  04F2  00F6               	fcall	_writeStrLCD
  3980  04F3  160A  118A  23DB  120A  118A  	line	232
  3981                           	
  3982                           l4206:	
  3983  04F8                     ;mainM.c: 232:                 if(hall){
  3984                           	movf	((_hall)),w
  3985  04F8  087A               	btfsc	status,2
  3986  04F9  1903               	goto	u6211
  3987  04FA  2CFC               	goto	u6210
  3988  04FB  2CFD               u6211:
  3989  04FC                     	goto	l4210
  3990  04FC  2D07               u6210:
  3991  04FD                     	line	233
  3992                           	
  3993                           l4208:	
  3994  04FD                     ;mainM.c: 233:                     writeStrLCD("ABIERTA");
  3995                           	movlw	(low((((STR_15)-__stringbase)|8000h)))&0ffh
  3996  04FD  3021               	movwf	(writeStrLCD@string)
  3997  04FE  00F5               	movlw	80h
  3998  04FF  3080               	movwf	(writeStrLCD@string+1)
  3999  0500  00F6               	fcall	_writeStrLCD
  4000  0501  160A  118A  23DB  120A  118A  	line	234
  4001                           ;mainM.c: 234:                 }else{
  4002                           	goto	l4212
  4003  0506  2D11               	
  4004                           l289:	
  4005  0507                     	line	235
  4006                           	
  4007                           l4210:	
  4008  0507                     ;mainM.c: 235:                     writeStrLCD("CERRADA");
  4009                           	movlw	(low((((STR_16)-__stringbase)|8000h)))&0ffh
  4010  0507  3012               	movwf	(writeStrLCD@string)
  4011  0508  00F5               	movlw	80h
  4012  0509  3080               	movwf	(writeStrLCD@string+1)
  4013  050A  00F6               	fcall	_writeStrLCD
  4014  050B  160A  118A  23DB  120A  118A  	goto	l4212
  4015  0510  2D11               	line	236
  4016                           ;mainM.c: 236:                 }
  4017                           	
  4018                           l290:	
  4019  0511                     	line	237
  4020                           	
  4021                           l4212:	
  4022  0511                     ;mainM.c: 237:                 writeCharLCD(' ');
  4023                           	movlw	low(020h)
  4024  0511  3020               	fcall	_writeCharLCD
  4025  0512  160A  118A  21C6  120A  118A  	line	238
  4026                           ;mainM.c: 238:             }else if(screenCounter == 1){
  4027                           	goto	l4222
  4028  0517  2D3C               	
  4029                           l288:	
  4030  0518                     	
  4031                           l4214:	
  4032  0518                     	bcf	status, 5	;RP0=0, select bank0
  4033  0518  1283               	bcf	status, 6	;RP1=0, select bank0
  4034  0519  1303               		decf	((_screenCounter)),w
  4035  051A  036E               	btfss	status,2
  4036  051B  1D03               	goto	u6221
  4037  051C  2D1E               	goto	u6220
  4038  051D  2D1F               u6221:
  4039  051E                     	goto	l4222
  4040  051E  2D3C               u6220:
  4041  051F                     	line	239
  4042                           	
  4043                           l4216:	
  4044  051F                     ;mainM.c: 239:                 if(mov){
  4045                           	bsf	status, 5	;RP0=1, select bank1
  4046  051F  1683               	bcf	status, 6	;RP1=0, select bank1
  4047  0520  1303               	movf	((_mov)^080h),w
  4048  0521  0837               	btfsc	status,2
  4049  0522  1903               	goto	u6231
  4050  0523  2D25               	goto	u6230
  4051  0524  2D26               u6231:
  4052  0525                     	goto	l4220
  4053  0525  2D30               u6230:
  4054  0526                     	line	240
  4055                           	
  4056                           l4218:	
  4057  0526                     ;mainM.c: 240:                     writeStrLCD("MOVIMIENTO");
  4058                           	movlw	(low((((STR_17)-__stringbase)|8000h)))&0ffh
  4059  0526  303C               	movwf	(writeStrLCD@string)
  4060  0527  00F5               	movlw	80h
  4061  0528  3080               	movwf	(writeStrLCD@string+1)
  4062  0529  00F6               	fcall	_writeStrLCD
  4063  052A  160A  118A  23DB  120A  118A  	line	241
  4064                           ;mainM.c: 241:                 }else{
  4065                           	goto	l4222
  4066  052F  2D3C               	
  4067                           l293:	
  4068  0530                     	line	242
  4069                           	
  4070                           l4220:	
  4071  0530                     ;mainM.c: 242:                     writeStrLCD("SIN MOVIMIENTO");
  4072                           	movlw	(low((((STR_18)-__stringbase)|8000h)))&0ffh
  4073  0530  3038               	movwf	(writeStrLCD@string)
  4074  0531  00F5               	movlw	80h
  4075  0532  3080               	movwf	(writeStrLCD@string+1)
  4076  0533  00F6               	fcall	_writeStrLCD
  4077  0534  160A  118A  23DB  120A  118A  	goto	l4222
  4078  0539  2D3C               	line	243
  4079                           ;mainM.c: 243:                 }
  4080                           	
  4081                           l294:	
  4082  053A                     	goto	l4222
  4083  053A  2D3C               	line	244
  4084                           ;mainM.c: 244:             }
  4085                           	
  4086                           l292:	
  4087  053B                     	goto	l4222
  4088  053B  2D3C               	
  4089                           l291:	
  4090  053C                     	line	245
  4091                           	
  4092                           l4222:	
  4093  053C                     ;mainM.c: 245:             setCursorLCD(2, 1);
  4094                           	clrf	(setCursorLCD@x)
  4095  053C  01F6               	incf	(setCursorLCD@x),f
  4096  053D  0AF6               	movlw	low(02h)
  4097  053E  3002               	fcall	_setCursorLCD
  4098  053F  160A  118A  221C  120A  118A  	line	246
  4099                           	
  4100                           l4224:	
  4101  0544                     ;mainM.c: 246:             if(screenCounter == 0){
  4102                           	bcf	status, 5	;RP0=0, select bank0
  4103  0544  1283               	bcf	status, 6	;RP1=0, select bank0
  4104  0545  1303               	movf	((_screenCounter)),w
  4105  0546  086E               	btfss	status,2
  4106  0547  1D03               	goto	u6241
  4107  0548  2D4A               	goto	u6240
  4108  0549  2D4B               u6241:
  4109  054A                     	goto	l4236
  4110  054A  2D76               u6240:
  4111  054B                     	line	247
  4112                           	
  4113                           l4226:	
  4114  054B                     ;mainM.c: 247:                 writeStrLCD("ALARMA ");
  4115                           	movlw	(low((((STR_19)-__stringbase)|8000h)))&0ffh
  4116  054B  306E               	movwf	(writeStrLCD@string)
  4117  054C  00F5               	movlw	80h
  4118  054D  3080               	movwf	(writeStrLCD@string+1)
  4119  054E  00F6               	fcall	_writeStrLCD
  4120  054F  160A  118A  23DB  120A  118A  	line	248
  4121                           	
  4122                           l4228:	
  4123  0554                     ;mainM.c: 248:                 if(alarm){
  4124                           	bsf	status, 5	;RP0=1, select bank1
  4125  0554  1683               	bcf	status, 6	;RP1=0, select bank1
  4126  0555  1303               	movf	((_alarm)^080h),w
  4127  0556  083F               	btfsc	status,2
  4128  0557  1903               	goto	u6251
  4129  0558  2D5A               	goto	u6250
  4130  0559  2D5B               u6251:
  4131  055A                     	goto	l4232
  4132  055A  2D65               u6250:
  4133  055B                     	line	249
  4134                           	
  4135                           l4230:	
  4136  055B                     ;mainM.c: 249:                     writeStrLCD("ACTIVA");
  4137                           	movlw	(low((((STR_20)-__stringbase)|8000h)))&0ffh
  4138  055B  307E               	movwf	(writeStrLCD@string)
  4139  055C  00F5               	movlw	80h
  4140  055D  3080               	movwf	(writeStrLCD@string+1)
  4141  055E  00F6               	fcall	_writeStrLCD
  4142  055F  160A  118A  23DB  120A  118A  	line	250
  4143                           ;mainM.c: 250:                 }else{
  4144                           	goto	l4234
  4145  0564  2D6F               	
  4146                           l296:	
  4147  0565                     	line	251
  4148                           	
  4149                           l4232:	
  4150  0565                     ;mainM.c: 251:                     writeStrLCD("DESCATIVADA");
  4151                           	movlw	(low((((STR_21)-__stringbase)|8000h)))&0ffh
  4152  0565  3062               	movwf	(writeStrLCD@string)
  4153  0566  00F5               	movlw	80h
  4154  0567  3080               	movwf	(writeStrLCD@string+1)
  4155  0568  00F6               	fcall	_writeStrLCD
  4156  0569  160A  118A  23DB  120A  118A  	goto	l4234
  4157  056E  2D6F               	line	252
  4158                           ;mainM.c: 252:                 }
  4159                           	
  4160                           l297:	
  4161  056F                     	line	253
  4162                           	
  4163                           l4234:	
  4164  056F                     ;mainM.c: 253:                 writeCharLCD(' ');
  4165                           	movlw	low(020h)
  4166  056F  3020               	fcall	_writeCharLCD
  4167  0570  160A  118A  21C6  120A  118A  	line	254
  4168                           ;mainM.c: 254:             }else if(screenCounter == 1){
  4169                           	goto	l4008
  4170  0575  282A               	
  4171                           l295:	
  4172  0576                     	
  4173                           l4236:	
  4174  0576                     	bcf	status, 5	;RP0=0, select bank0
  4175  0576  1283               	bcf	status, 6	;RP1=0, select bank0
  4176  0577  1303               		decf	((_screenCounter)),w
  4177  0578  036E               	btfss	status,2
  4178  0579  1D03               	goto	u6261
  4179  057A  2D7C               	goto	u6260
  4180  057B  2D7D               u6261:
  4181  057C                     	goto	l4244
  4182  057C  2D99               u6260:
  4183  057D                     	line	255
  4184                           	
  4185                           l4238:	
  4186  057D                     ;mainM.c: 255:                 if(signal){
  4187                           	bsf	status, 5	;RP0=1, select bank1
  4188  057D  1683               	bcf	status, 6	;RP1=0, select bank1
  4189  057E  1303               	movf	((_signal)^080h),w
  4190  057F  0838               	btfsc	status,2
  4191  0580  1903               	goto	u6271
  4192  0581  2D83               	goto	u6270
  4193  0582  2D84               u6271:
  4194  0583                     	goto	l4242
  4195  0583  2D8E               u6270:
  4196  0584                     	line	256
  4197                           	
  4198                           l4240:	
  4199  0584                     ;mainM.c: 256:                     writeStrLCD("PUERTA ABIERTA");
  4200                           	movlw	(low((((STR_22)-__stringbase)|8000h)))&0ffh
  4201  0584  301A               	movwf	(writeStrLCD@string)
  4202  0585  00F5               	movlw	80h
  4203  0586  3080               	movwf	(writeStrLCD@string+1)
  4204  0587  00F6               	fcall	_writeStrLCD
  4205  0588  160A  118A  23DB  120A  118A  	line	257
  4206                           ;mainM.c: 257:                 }else{
  4207                           	goto	l4008
  4208  058D  282A               	
  4209                           l300:	
  4210  058E                     	line	258
  4211                           	
  4212                           l4242:	
  4213  058E                     ;mainM.c: 258:                     writeStrLCD("PUERTA CERRADA");
  4214                           	movlw	(low((((STR_23)-__stringbase)|8000h)))&0ffh
  4215  058E  300B               	movwf	(writeStrLCD@string)
  4216  058F  00F5               	movlw	80h
  4217  0590  3080               	movwf	(writeStrLCD@string+1)
  4218  0591  00F6               	fcall	_writeStrLCD
  4219  0592  160A  118A  23DB  120A  118A  	goto	l4008
  4220  0597  282A               	line	259
  4221                           ;mainM.c: 259:                 }
  4222                           	
  4223                           l301:	
  4224  0598                     	line	260
  4225                           ;mainM.c: 260:             }else if(screenCounter == 2){
  4226                           	goto	l4008
  4227  0598  282A               	
  4228                           l299:	
  4229  0599                     	
  4230                           l4244:	
  4231  0599                     		movlw	2
  4232  0599  3002               	bcf	status, 5	;RP0=0, select bank0
  4233  059A  1283               	bcf	status, 6	;RP1=0, select bank0
  4234  059B  1303               	xorwf	((_screenCounter)),w
  4235  059C  066E               	btfss	status,2
  4236  059D  1D03               	goto	u6281
  4237  059E  2DA0               	goto	u6280
  4238  059F  2DA1               u6281:
  4239  05A0                     	goto	l4008
  4240  05A0  282A               u6280:
  4241  05A1                     	line	261
  4242                           	
  4243                           l4246:	
  4244  05A1                     ;mainM.c: 261:                 if(garage){
  4245                           	bsf	status, 5	;RP0=1, select bank1
  4246  05A1  1683               	bcf	status, 6	;RP1=0, select bank1
  4247  05A2  1303               	movf	((_garage)^080h),w
  4248  05A3  0833               	btfsc	status,2
  4249  05A4  1903               	goto	u6291
  4250  05A5  2DA7               	goto	u6290
  4251  05A6  2DA8               u6291:
  4252  05A7                     	goto	l4250
  4253  05A7  2DB2               u6290:
  4254  05A8                     	line	262
  4255                           	
  4256                           l4248:	
  4257  05A8                     ;mainM.c: 262:                     writeStrLCD("GARAGE ABIERTO");
  4258                           	movlw	(low((((STR_24)-__stringbase)|8000h)))&0ffh
  4259  05A8  3047               	movwf	(writeStrLCD@string)
  4260  05A9  00F5               	movlw	80h
  4261  05AA  3080               	movwf	(writeStrLCD@string+1)
  4262  05AB  00F6               	fcall	_writeStrLCD
  4263  05AC  160A  118A  23DB  120A  118A  	line	263
  4264                           ;mainM.c: 263:                 }else{
  4265                           	goto	l4008
  4266  05B1  282A               	
  4267                           l304:	
  4268  05B2                     	line	264
  4269                           	
  4270                           l4250:	
  4271  05B2                     ;mainM.c: 264:                     writeStrLCD("GARAGE CERRADO");
  4272                           	movlw	(low((((STR_25)-__stringbase)|8000h)))&0ffh
  4273  05B2  3029               	movwf	(writeStrLCD@string)
  4274  05B3  00F5               	movlw	80h
  4275  05B4  3080               	movwf	(writeStrLCD@string+1)
  4276  05B5  00F6               	fcall	_writeStrLCD
  4277  05B6  160A  118A  23DB  120A  118A  	goto	l4008
  4278  05BB  282A               	line	265
  4279                           ;mainM.c: 265:                 }
  4280                           	
  4281                           l305:	
  4282  05BC                     	goto	l4008
  4283  05BC  282A               	line	266
  4284                           ;mainM.c: 266:             }
  4285                           	
  4286                           l303:	
  4287  05BD                     	goto	l4008
  4288  05BD  282A               	
  4289                           l302:	
  4290  05BE                     	goto	l4008
  4291  05BE  282A               	
  4292                           l298:	
  4293  05BF                     	goto	l4008
  4294  05BF  282A               	line	267
  4295                           ;mainM.c: 267:         }
  4296                           	
  4297                           l287:	
  4298  05C0                     	goto	l4008
  4299  05C0  282A               	line	268
  4300                           ;mainM.c: 268:     }
  4301                           	
  4302                           l306:	
  4303  05C1                     	goto	l4008
  4304  05C1  282A               	
  4305                           l307:	
  4306  05C2                     	line	270
  4307                           ;mainM.c: 269:     return;
  4308                           	
  4309                           l308:	
  4310  05C2                     	global	start
  4311                           	ljmp	start
  4312  05C2  120A  118A  280C   	opt stack 0
  4313                           GLOBAL	__end_of_main
  4314                           	__end_of_main:
  4315  05C5                     	signat	_main,89
  4316                           	global	_writeIntLCD
  4317                           
  4318 ;; *************** function _writeIntLCD *****************
  4319 ;; Defined at:
  4320 ;;		line 57 in file "LCD.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;  numero          1    wreg     unsigned char 
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;  numero          1   29[BANK0 ] unsigned char 
  4325 ;;  buffer          4   25[BANK0 ] unsigned char [4]
  4326 ;; Return value:  Size  Location     Type
  4327 ;;                  1    wreg      void 
  4328 ;; Registers used:
  4329 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4330 ;; Tracked objects:
  4331 ;;		On entry : 0/0
  4332 ;;		On exit  : 0/0
  4333 ;;		Unchanged: 0/0
  4334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4335 ;;      Params:         0       0       0       0       0
  4336 ;;      Locals:         0       5       0       0       0
  4337 ;;      Temps:          0       3       0       0       0
  4338 ;;      Totals:         0       8       0       0       0
  4339 ;;Total ram usage:        8 bytes
  4340 ;; Hardware stack levels used:    1
  4341 ;; Hardware stack levels required when called:    4
  4342 ;; This function calls:
  4343 ;;		_sprintf
  4344 ;;		_writeStrLCD
  4345 ;; This function is called by:
  4346 ;;		_main
  4347 ;;		_writeFloat
  4348 ;; This function uses a non-reentrant model
  4349 ;;
  4350                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4351                           	file	"LCD.c"
  4352                           	line	57
  4353                           global __ptext1
  4354                           __ptext1:	;psect for function _writeIntLCD
  4355  11FE                     psect	text1
  4356                           	file	"LCD.c"
  4357                           	line	57
  4358                           	global	__size_of_writeIntLCD
  4359                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  4360  001E                     	
  4361                           _writeIntLCD:	
  4362  11FE                     ;incstack = 0
  4363                           	opt	stack 3
  4364                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4365                           ;writeIntLCD@numero stored from wreg
  4366                           	bcf	status, 5	;RP0=0, select bank0
  4367  11FE  1283               	bcf	status, 6	;RP1=0, select bank0
  4368  11FF  1303               	movwf	(writeIntLCD@numero)
  4369  1200  00BD               	line	59
  4370                           	
  4371                           l3820:	
  4372  1201                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  4373                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  4374  1201  3090               	movwf	(??_writeIntLCD+0)+0
  4375  1202  00B6               	movf	(??_writeIntLCD+0)+0,w
  4376  1203  0836               	movwf	(sprintf@f)
  4377  1204  00A9               	movf	(writeIntLCD@numero),w
  4378  1205  083D               	movwf	(??_writeIntLCD+1)+0
  4379  1206  00B7               	clrf	(??_writeIntLCD+1)+0+1
  4380  1207  01B8               	movf	0+(??_writeIntLCD+1)+0,w
  4381  1208  0837               	movwf	0+(?_sprintf)+01h
  4382  1209  00AA               	movf	1+(??_writeIntLCD+1)+0,w
  4383  120A  0838               	movwf	1+(?_sprintf)+01h
  4384  120B  00AB               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  4385  120C  3039               	fcall	_sprintf
  4386  120D  120A  118A  25C5  160A  118A  	line	60
  4387                           ;LCD.c: 60:     writeStrLCD(buffer);
  4388                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  4389  1212  3039               	movwf	(writeStrLCD@string)
  4390  1213  00F5               	movlw	(0x0)
  4391  1214  3000               	movwf	(writeStrLCD@string+1)
  4392  1215  00F6               	fcall	_writeStrLCD
  4393  1216  160A  118A  23DB  160A  118A  	line	61
  4394                           	
  4395                           l97:	
  4396  121B                     	return
  4397  121B  0008               	opt stack 0
  4398                           GLOBAL	__end_of_writeIntLCD
  4399                           	__end_of_writeIntLCD:
  4400  121C                     	signat	_writeIntLCD,4217
  4401                           	global	_writeStrLCD
  4402                           
  4403 ;; *************** function _writeStrLCD *****************
  4404 ;; Defined at:
  4405 ;;		line 21 in file "LCD.c"
  4406 ;; Parameters:    Size  Location     Type
  4407 ;;  string          2    5[COMMON] PTR unsigned char 
  4408 ;;		 -> STR_25(15), STR_24(15), STR_23(15), STR_22(15), 
  4409 ;;		 -> STR_21(12), STR_20(7), STR_19(8), STR_18(15), 
  4410 ;;		 -> STR_17(11), STR_16(8), STR_15(8), STR_14(8), 
  4411 ;;		 -> STR_13(12), STR_12(15), STR_11(15), STR_10(15), 
  4412 ;;		 -> STR_9(11), STR_8(8), STR_7(8), STR_6(8), 
  4413 ;;		 -> STR_5(12), STR_4(5), STR_3(6), writeIntLCD16@buffer(5), 
  4414 ;;		 -> writeIntLCD@buffer(4), 
  4415 ;; Auto vars:     Size  Location     Type
  4416 ;;  cont            2    3[BANK0 ] int 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  1    wreg      void 
  4419 ;; Registers used:
  4420 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4426 ;;      Params:         2       0       0       0       0
  4427 ;;      Locals:         0       2       0       0       0
  4428 ;;      Temps:          0       3       0       0       0
  4429 ;;      Totals:         2       5       0       0       0
  4430 ;;Total ram usage:        7 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; Hardware stack levels required when called:    3
  4433 ;; This function calls:
  4434 ;;		_writeCharLCD
  4435 ;; This function is called by:
  4436 ;;		_writeIntLCD
  4437 ;;		_main
  4438 ;;		_writeIntLCD16
  4439 ;; This function uses a non-reentrant model
  4440 ;;
  4441                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4442                           	line	21
  4443                           global __ptext2
  4444                           __ptext2:	;psect for function _writeStrLCD
  4445  13DB                     psect	text2
  4446                           	file	"LCD.c"
  4447                           	line	21
  4448                           	global	__size_of_writeStrLCD
  4449                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  4450  0048                     	
  4451                           _writeStrLCD:	
  4452  13DB                     ;incstack = 0
  4453                           	opt	stack 4
  4454                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4455                           	line	23
  4456                           	
  4457                           l3696:	
  4458  13DB                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  4459                           	bcf	status, 5	;RP0=0, select bank0
  4460  13DB  1283               	bcf	status, 6	;RP1=0, select bank0
  4461  13DC  1303               	clrf	(writeStrLCD@cont)
  4462  13DD  01A3               	clrf	(writeStrLCD@cont+1)
  4463  13DE  01A4               	goto	l3702
  4464  13DF  2C05               	
  4465                           l83:	
  4466  13E0                     	line	24
  4467                           	
  4468                           l3698:	
  4469  13E0                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  4470                           	movf	(writeStrLCD@cont),w
  4471  13E0  0823               	addwf	(writeStrLCD@string),w
  4472  13E1  0775               	movwf	(??_writeStrLCD+1)+0
  4473  13E2  00A1               	movf	(writeStrLCD@string+1),w
  4474  13E3  0876               	movwf	(??_writeStrLCD+0)+0
  4475  13E4  00A0               	skipnc
  4476  13E5  1803               	incf	(??_writeStrLCD+0)+0,f
  4477  13E6  0AA0               	btfss	(writeStrLCD@cont),7
  4478  13E7  1FA3               	goto	u5330
  4479  13E8  2BEA               	decf	(??_writeStrLCD+0)+0,f
  4480  13E9  03A0               u5330:
  4481  13EA                     	bcf	status, 5	;RP0=0, select bank0
  4482  13EA  1283               	bcf	status, 6	;RP1=0, select bank0
  4483  13EB  1303               	movf	(??_writeStrLCD+0)+0,w
  4484  13EC  0820               	movwf	0+((??_writeStrLCD+1)+0)+1
  4485  13ED  00A2               	movf	1+(??_writeStrLCD+1)+0,w
  4486  13EE  0822               	movwf	btemp+1
  4487  13EF  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  4488  13F0  0821               	movwf	fsr0
  4489  13F1  0084               	fcall	stringtab
  4490  13F2  120A  158A  2000  160A  118A  	fcall	_writeCharLCD
  4491  13F7  160A  118A  21C6  160A  118A  	line	25
  4492                           	
  4493                           l3700:	
  4494  13FC                     ;LCD.c: 25:     }
  4495                           	movlw	01h
  4496  13FC  3001               	bcf	status, 5	;RP0=0, select bank0
  4497  13FD  1283               	bcf	status, 6	;RP1=0, select bank0
  4498  13FE  1303               	addwf	(writeStrLCD@cont),f
  4499  13FF  07A3               	skipnc
  4500  1400  1803               	incf	(writeStrLCD@cont+1),f
  4501  1401  0AA4               	movlw	0
  4502  1402  3000               	addwf	(writeStrLCD@cont+1),f
  4503  1403  07A4               	goto	l3702
  4504  1404  2C05               	
  4505                           l82:	
  4506  1405                     	
  4507                           l3702:	
  4508  1405                     	movf	(writeStrLCD@cont),w
  4509  1405  0823               	addwf	(writeStrLCD@string),w
  4510  1406  0775               	movwf	(??_writeStrLCD+1)+0
  4511  1407  00A1               	movf	(writeStrLCD@string+1),w
  4512  1408  0876               	movwf	(??_writeStrLCD+0)+0
  4513  1409  00A0               	skipnc
  4514  140A  1803               	incf	(??_writeStrLCD+0)+0,f
  4515  140B  0AA0               	btfss	(writeStrLCD@cont),7
  4516  140C  1FA3               	goto	u5340
  4517  140D  2C0F               	decf	(??_writeStrLCD+0)+0,f
  4518  140E  03A0               u5340:
  4519  140F                     	bcf	status, 5	;RP0=0, select bank0
  4520  140F  1283               	bcf	status, 6	;RP1=0, select bank0
  4521  1410  1303               	movf	(??_writeStrLCD+0)+0,w
  4522  1411  0820               	movwf	0+((??_writeStrLCD+1)+0)+1
  4523  1412  00A2               	movf	1+(??_writeStrLCD+1)+0,w
  4524  1413  0822               	movwf	btemp+1
  4525  1414  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  4526  1415  0821               	movwf	fsr0
  4527  1416  0084               	fcall	stringtab
  4528  1417  120A  158A  2000  160A  118A  	xorlw	0
  4529  141C  3A00               	skipz
  4530  141D  1D03               	goto	u5351
  4531  141E  2C20               	goto	u5350
  4532  141F  2C21               u5351:
  4533  1420                     	goto	l3698
  4534  1420  2BE0               u5350:
  4535  1421                     	goto	l85
  4536  1421  2C22               	
  4537                           l84:	
  4538  1422                     	line	26
  4539                           	
  4540                           l85:	
  4541  1422                     	return
  4542  1422  0008               	opt stack 0
  4543                           GLOBAL	__end_of_writeStrLCD
  4544                           	__end_of_writeStrLCD:
  4545  1423                     	signat	_writeStrLCD,4217
  4546                           	global	_writeCharLCD
  4547                           
  4548 ;; *************** function _writeCharLCD *****************
  4549 ;; Defined at:
  4550 ;;		line 28 in file "LCD.c"
  4551 ;; Parameters:    Size  Location     Type
  4552 ;;  character       1    wreg     unsigned char 
  4553 ;; Auto vars:     Size  Location     Type
  4554 ;;  character       1    4[COMMON] unsigned char 
  4555 ;; Return value:  Size  Location     Type
  4556 ;;                  1    wreg      void 
  4557 ;; Registers used:
  4558 ;;		wreg
  4559 ;; Tracked objects:
  4560 ;;		On entry : 0/0
  4561 ;;		On exit  : 0/0
  4562 ;;		Unchanged: 0/0
  4563 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4564 ;;      Params:         0       0       0       0       0
  4565 ;;      Locals:         1       0       0       0       0
  4566 ;;      Temps:          1       0       0       0       0
  4567 ;;      Totals:         2       0       0       0       0
  4568 ;;Total ram usage:        2 bytes
  4569 ;; Hardware stack levels used:    1
  4570 ;; Hardware stack levels required when called:    2
  4571 ;; This function calls:
  4572 ;;		Nothing
  4573 ;; This function is called by:
  4574 ;;		_writeStrLCD
  4575 ;;		_main
  4576 ;;		_writeFloat
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4580                           	line	28
  4581                           global __ptext3
  4582                           __ptext3:	;psect for function _writeCharLCD
  4583  11C6                     psect	text3
  4584                           	file	"LCD.c"
  4585                           	line	28
  4586                           	global	__size_of_writeCharLCD
  4587                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  4588  000F                     	
  4589                           _writeCharLCD:	
  4590  11C6                     ;incstack = 0
  4591                           	opt	stack 4
  4592                           ; Regs used in _writeCharLCD: [wreg]
  4593                           ;writeCharLCD@character stored from wreg
  4594                           	movwf	(writeCharLCD@character)
  4595  11C6  00F4               	line	29
  4596                           	
  4597                           l2344:	
  4598  11C7                     ;LCD.c: 29:    RD0 = 1;
  4599                           	bcf	status, 5	;RP0=0, select bank0
  4600  11C7  1283               	bcf	status, 6	;RP1=0, select bank0
  4601  11C8  1303               	bsf	(64/8),(64)&7	;volatile
  4602  11C9  1408               	line	30
  4603                           	
  4604                           l2346:	
  4605  11CA                     ;LCD.c: 30:    PORTB = character;
  4606                           	movf	(writeCharLCD@character),w
  4607  11CA  0874               	movwf	(6)	;volatile
  4608  11CB  0086               	line	31
  4609                           	
  4610                           l2348:	
  4611  11CC                     ;LCD.c: 31:    RD1 = 1;
  4612                           	bsf	(65/8),(65)&7	;volatile
  4613  11CC  1488               	line	32
  4614                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4615                           	opt asmopt_push
  4616                           opt asmopt_off
  4617                           	movlw	13
  4618  11CD  300D               movwf	((??_writeCharLCD+0)+0),f
  4619  11CE  00F3               	u6337:
  4620  11CF                     decfsz	(??_writeCharLCD+0)+0,f
  4621  11CF  0BF3               	goto	u6337
  4622  11D0  29CF               opt asmopt_pop
  4623                           
  4624                           	line	33
  4625                           	
  4626                           l2350:	
  4627  11D1                     ;LCD.c: 33:    RD1 = 0;
  4628                           	bcf	status, 5	;RP0=0, select bank0
  4629  11D1  1283               	bcf	status, 6	;RP1=0, select bank0
  4630  11D2  1303               	bcf	(65/8),(65)&7	;volatile
  4631  11D3  1088               	line	34
  4632                           	
  4633                           l88:	
  4634  11D4                     	return
  4635  11D4  0008               	opt stack 0
  4636                           GLOBAL	__end_of_writeCharLCD
  4637                           	__end_of_writeCharLCD:
  4638  11D5                     	signat	_writeCharLCD,4217
  4639                           	global	_sprintf
  4640                           
  4641 ;; *************** function _sprintf *****************
  4642 ;; Defined at:
  4643 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4644 ;; Parameters:    Size  Location     Type
  4645 ;;  sp              1    wreg     PTR unsigned char 
  4646 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  4647 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  4648 ;;		 -> STR_2(3), STR_1(3), 
  4649 ;; Auto vars:     Size  Location     Type
  4650 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  4651 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  4652 ;;  tmpval          4    0        struct .
  4653 ;;  val             2   18[BANK0 ] unsigned int 
  4654 ;;  cp              2    0        PTR const unsigned char 
  4655 ;;  len             2    0        unsigned int 
  4656 ;;  c               1   21[BANK0 ] unsigned char 
  4657 ;;  prec            1   17[BANK0 ] char 
  4658 ;;  flag            1   16[BANK0 ] unsigned char 
  4659 ;;  ap              1   15[BANK0 ] PTR void [1]
  4660 ;;		 -> ?_sprintf(2), 
  4661 ;; Return value:  Size  Location     Type
  4662 ;;                  2    9[BANK0 ] int 
  4663 ;; Registers used:
  4664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4665 ;; Tracked objects:
  4666 ;;		On entry : 0/0
  4667 ;;		On exit  : 0/0
  4668 ;;		Unchanged: 0/0
  4669 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4670 ;;      Params:         0       3       0       0       0
  4671 ;;      Locals:         0       7       0       0       0
  4672 ;;      Temps:          0       3       0       0       0
  4673 ;;      Totals:         0      13       0       0       0
  4674 ;;Total ram usage:       13 bytes
  4675 ;; Hardware stack levels used:    1
  4676 ;; Hardware stack levels required when called:    3
  4677 ;; This function calls:
  4678 ;;		___lwdiv
  4679 ;;		___lwmod
  4680 ;; This function is called by:
  4681 ;;		_writeIntLCD
  4682 ;;		_writeIntLCD16
  4683 ;; This function uses a non-reentrant model
  4684 ;;
  4685                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4686                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4687                           	line	500
  4688                           global __ptext4
  4689                           __ptext4:	;psect for function _sprintf
  4690  05C5                     psect	text4
  4691                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4692                           	line	500
  4693                           	global	__size_of_sprintf
  4694                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4695  0102                     	
  4696                           _sprintf:	
  4697  05C5                     ;incstack = 0
  4698                           	opt	stack 3
  4699                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4700                           ;sprintf@sp stored from wreg
  4701                           	bcf	status, 5	;RP0=0, select bank0
  4702  05C5  1283               	bcf	status, 6	;RP1=0, select bank0
  4703  05C6  1303               	movwf	(sprintf@sp)
  4704  05C7  00B4               	line	545
  4705                           	
  4706                           l3722:	
  4707  05C8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  4708                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  4709  05C8  302A               	movwf	(??_sprintf+0)+0
  4710  05C9  00AC               	movf	(??_sprintf+0)+0,w
  4711  05CA  082C               	movwf	(sprintf@ap)
  4712  05CB  00AF               	line	548
  4713                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4714                           	goto	l3774
  4715  05CC  2EAD               	
  4716                           l505:	
  4717  05CD                     	line	550
  4718                           	
  4719                           l3724:	
  4720  05CD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  4721                           		movlw	37
  4722  05CD  3025               	xorwf	((sprintf@c)),w
  4723  05CE  0635               	btfsc	status,2
  4724  05CF  1903               	goto	u5361
  4725  05D0  2DD2               	goto	u5360
  4726  05D1  2DD3               u5361:
  4727  05D2                     	goto	l3730
  4728  05D2  2DDF               u5360:
  4729  05D3                     	line	553
  4730                           	
  4731                           l3726:	
  4732  05D3                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  4733                           	movf	(sprintf@c),w
  4734  05D3  0835               	movwf	(??_sprintf+0)+0
  4735  05D4  00AC               	movf	(sprintf@sp),w
  4736  05D5  0834               	movwf	fsr0
  4737  05D6  0084               	movf	(??_sprintf+0)+0,w
  4738  05D7  082C               	bcf	status, 7	;select IRP bank0
  4739  05D8  1383               	movwf	indf
  4740  05D9  0080               	
  4741                           l3728:	
  4742  05DA                     	movlw	low(01h)
  4743  05DA  3001               	movwf	(??_sprintf+0)+0
  4744  05DB  00AC               	movf	(??_sprintf+0)+0,w
  4745  05DC  082C               	addwf	(sprintf@sp),f
  4746  05DD  07B4               	line	554
  4747                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  4748                           	goto	l3774
  4749  05DE  2EAD               	line	555
  4750                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  4751                           	
  4752                           l506:	
  4753  05DF                     	line	560
  4754                           	
  4755                           l3730:	
  4756  05DF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  4757                           	clrf	(sprintf@flag)
  4758  05DF  01B0               	line	654
  4759                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  4760                           	goto	l3734
  4761  05E0  2DE6               	line	656
  4762                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  4763                           	
  4764                           l508:	
  4765  05E1                     	line	657
  4766                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  4767                           	goto	l3776
  4768  05E1  2EC1               	line	716
  4769                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  4770                           	
  4771                           l510:	
  4772  05E2                     	goto	l3736
  4773  05E2  2E03               	line	717
  4774                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  4775                           	
  4776                           l511:	
  4777  05E3                     	line	718
  4778                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  4779                           	goto	l3736
  4780  05E3  2E03               	line	821
  4781                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  4782                           	
  4783                           l513:	
  4784  05E4                     	line	832
  4785                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  4786                           	goto	l3774
  4787  05E4  2EAD               	line	841
  4788                           	
  4789                           l3732:	
  4790  05E5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  4791                           	goto	l3736
  4792  05E5  2E03               	
  4793                           l507:	
  4794  05E6                     	
  4795                           l3734:	
  4796  05E6                     	movlw	01h
  4797  05E6  3001               	addwf	(sprintf@f),f
  4798  05E7  07A9               	movlw	-01h
  4799  05E8  30FF               	addwf	(sprintf@f),w
  4800  05E9  0729               	movwf	fsr0
  4801  05EA  0084               	fcall	stringdir
  4802  05EB  120A  158A  200A  120A  118A  	movwf	(sprintf@c)
  4803  05F0  00B5               	movwf	(??_sprintf+0)+0
  4804  05F1  00AC               	clrf	(??_sprintf+0)+0+1
  4805  05F2  01AD               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4806                           ; Switch size 1, requested type "space"
  4807                           ; Number of cases is 1, Range of values is 0 to 0
  4808                           ; switch strategies available:
  4809                           ; Name         Instructions Cycles
  4810                           ; simple_byte            4     3 (average)
  4811                           ; direct_byte           11     8 (fixed)
  4812                           ; jumptable            260     6 (fixed)
  4813                           ;	Chosen strategy is simple_byte
  4814                           
  4815                           	movf 1+(??_sprintf+0)+0,w
  4816  05F3  082D               	opt asmopt_push
  4817                           	opt asmopt_off
  4818                           	xorlw	0^0	; case 0
  4819  05F4  3A00               	skipnz
  4820  05F5  1903               	goto	l4272
  4821  05F6  2DF8               	goto	l3774
  4822  05F7  2EAD               	opt asmopt_pop
  4823                           	
  4824                           l4272:	
  4825  05F8                     ; Switch size 1, requested type "space"
  4826                           ; Number of cases is 3, Range of values is 0 to 105
  4827                           ; switch strategies available:
  4828                           ; Name         Instructions Cycles
  4829                           ; simple_byte           10     6 (average)
  4830                           ; jumptable            260     6 (fixed)
  4831                           ;	Chosen strategy is simple_byte
  4832                           
  4833                           	movf 0+(??_sprintf+0)+0,w
  4834  05F8  082C               	opt asmopt_push
  4835                           	opt asmopt_off
  4836                           	xorlw	0^0	; case 0
  4837  05F9  3A00               	skipnz
  4838  05FA  1903               	goto	l3776
  4839  05FB  2EC1               	xorlw	100^0	; case 100
  4840  05FC  3A64               	skipnz
  4841  05FD  1903               	goto	l3736
  4842  05FE  2E03               	xorlw	105^100	; case 105
  4843  05FF  3A0D               	skipnz
  4844  0600  1903               	goto	l3736
  4845  0601  2E03               	goto	l3774
  4846  0602  2EAD               	opt asmopt_pop
  4847                           
  4848                           	
  4849                           l512:	
  4850  0603                     	line	1278
  4851                           	
  4852                           l3736:	
  4853  0603                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4854                           	movf	(sprintf@ap),w
  4855  0603  082F               	movwf	fsr0
  4856  0604  0084               	bcf	status, 7	;select IRP bank0
  4857  0605  1383               	movf	indf,w
  4858  0606  0800               	movwf	(sprintf@val)
  4859  0607  00B2               	incf	fsr0,f
  4860  0608  0A84               	movf	indf,w
  4861  0609  0800               	movwf	(sprintf@val+1)
  4862  060A  00B3               	
  4863                           l3738:	
  4864  060B                     	movlw	low(02h)
  4865  060B  3002               	movwf	(??_sprintf+0)+0
  4866  060C  00AC               	movf	(??_sprintf+0)+0,w
  4867  060D  082C               	addwf	(sprintf@ap),f
  4868  060E  07AF               	line	1280
  4869                           	
  4870                           l3740:	
  4871  060F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  4872                           	btfss	(sprintf@val+1),7
  4873  060F  1FB3               	goto	u5371
  4874  0610  2E12               	goto	u5370
  4875  0611  2E13               u5371:
  4876  0612                     	goto	l3746
  4877  0612  2E1D               u5370:
  4878  0613                     	line	1281
  4879                           	
  4880                           l3742:	
  4881  0613                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  4882                           	movlw	low(03h)
  4883  0613  3003               	movwf	(??_sprintf+0)+0
  4884  0614  00AC               	movf	(??_sprintf+0)+0,w
  4885  0615  082C               	iorwf	(sprintf@flag),f
  4886  0616  04B0               	line	1282
  4887                           	
  4888                           l3744:	
  4889  0617                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  4890                           	comf	(sprintf@val),f
  4891  0617  09B2               	comf	(sprintf@val+1),f
  4892  0618  09B3               	incf	(sprintf@val),f
  4893  0619  0AB2               	skipnz
  4894  061A  1903               	incf	(sprintf@val+1),f
  4895  061B  0AB3               	goto	l3746
  4896  061C  2E1D               	line	1283
  4897                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  4898                           	
  4899                           l514:	
  4900  061D                     	line	1324
  4901                           	
  4902                           l3746:	
  4903  061D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4904                           	clrf	(sprintf@c)
  4905  061D  01B5               	incf	(sprintf@c),f
  4906  061E  0AB5               	
  4907                           l3748:	
  4908  061F                     		movlw	5
  4909  061F  3005               	xorwf	((sprintf@c)),w
  4910  0620  0635               	btfss	status,2
  4911  0621  1D03               	goto	u5381
  4912  0622  2E24               	goto	u5380
  4913  0623  2E25               u5381:
  4914  0624                     	goto	l3752
  4915  0624  2E27               u5380:
  4916  0625                     	goto	l3758
  4917  0625  2E4F               	
  4918                           l3750:	
  4919  0626                     	goto	l3758
  4920  0626  2E4F               	
  4921                           l515:	
  4922  0627                     	line	1325
  4923                           	
  4924                           l3752:	
  4925  0627                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  4926                           	movf	(sprintf@c),w
  4927  0627  0835               	movwf	(??_sprintf+0)+0
  4928  0628  00AC               	addwf	(??_sprintf+0)+0,w
  4929  0629  072C               	addlw	low((((_dpowers)-__stringbase)|8000h))
  4930  062A  3E01               	movwf	fsr0
  4931  062B  0084               	fcall	stringdir
  4932  062C  120A  158A  200A  120A  118A  	movwf	(??_sprintf+1)+0
  4933  0631  00AD               	fcall	stringdir
  4934  0632  120A  158A  200A  120A  118A  	movwf	(??_sprintf+1)+0+1
  4935  0637  00AE               	movf	1+(??_sprintf+1)+0,w
  4936  0638  082E               	subwf	(sprintf@val+1),w
  4937  0639  0233               	skipz
  4938  063A  1D03               	goto	u5395
  4939  063B  2E3E               	movf	0+(??_sprintf+1)+0,w
  4940  063C  082D               	subwf	(sprintf@val),w
  4941  063D  0232               u5395:
  4942  063E                     	skipnc
  4943  063E  1803               	goto	u5391
  4944  063F  2E41               	goto	u5390
  4945  0640  2E42               u5391:
  4946  0641                     	goto	l3756
  4947  0641  2E44               u5390:
  4948  0642                     	goto	l3758
  4949  0642  2E4F               	line	1326
  4950                           	
  4951                           l3754:	
  4952  0643                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  4953                           	goto	l3758
  4954  0643  2E4F               	
  4955                           l517:	
  4956  0644                     	
  4957                           l3756:	
  4958  0644                     	movlw	low(01h)
  4959  0644  3001               	movwf	(??_sprintf+0)+0
  4960  0645  00AC               	movf	(??_sprintf+0)+0,w
  4961  0646  082C               	addwf	(sprintf@c),f
  4962  0647  07B5               		movlw	5
  4963  0648  3005               	xorwf	((sprintf@c)),w
  4964  0649  0635               	btfss	status,2
  4965  064A  1D03               	goto	u5401
  4966  064B  2E4D               	goto	u5400
  4967  064C  2E4E               u5401:
  4968  064D                     	goto	l3752
  4969  064D  2E27               u5400:
  4970  064E                     	goto	l3758
  4971  064E  2E4F               	
  4972                           l516:	
  4973  064F                     	line	1457
  4974                           	
  4975                           l3758:	
  4976  064F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  4977                           	movf	(sprintf@flag),w
  4978  064F  0830               	andlw	03h
  4979  0650  3903               	btfsc	status,2
  4980  0651  1903               	goto	u5411
  4981  0652  2E54               	goto	u5410
  4982  0653  2E55               u5411:
  4983  0654                     	goto	l3764
  4984  0654  2E61               u5410:
  4985  0655                     	line	1458
  4986                           	
  4987                           l3760:	
  4988  0655                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  4989                           	movlw	low(02Dh)
  4990  0655  302D               	movwf	(??_sprintf+0)+0
  4991  0656  00AC               	movf	(sprintf@sp),w
  4992  0657  0834               	movwf	fsr0
  4993  0658  0084               	movf	(??_sprintf+0)+0,w
  4994  0659  082C               	bcf	status, 7	;select IRP bank0
  4995  065A  1383               	movwf	indf
  4996  065B  0080               	
  4997                           l3762:	
  4998  065C                     	movlw	low(01h)
  4999  065C  3001               	movwf	(??_sprintf+0)+0
  5000  065D  00AC               	movf	(??_sprintf+0)+0,w
  5001  065E  082C               	addwf	(sprintf@sp),f
  5002  065F  07B4               	goto	l3764
  5003  0660  2E61               	
  5004                           l518:	
  5005  0661                     	line	1491
  5006                           	
  5007                           l3764:	
  5008  0661                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  5009                           	movf	(sprintf@c),w
  5010  0661  0835               	movwf	(??_sprintf+0)+0
  5011  0662  00AC               	movf	(??_sprintf+0)+0,w
  5012  0663  082C               	movwf	(sprintf@prec)
  5013  0664  00B1               	line	1493
  5014                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  5015                           	goto	l3772
  5016  0665  2EA2               	
  5017                           l520:	
  5018  0666                     	line	1508
  5019                           	
  5020                           l3766:	
  5021  0666                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  5022                           	movlw	0Ah
  5023  0666  300A               	movwf	(___lwmod@divisor)
  5024  0667  00A3               	movlw	0
  5025  0668  3000               	movwf	((___lwmod@divisor))+1
  5026  0669  00A4               	movf	(sprintf@prec),w
  5027  066A  0831               	movwf	(??_sprintf+0)+0
  5028  066B  00AC               	addwf	(??_sprintf+0)+0,w
  5029  066C  072C               	addlw	low((((_dpowers)-__stringbase)|8000h))
  5030  066D  3E01               	movwf	fsr0
  5031  066E  0084               	fcall	stringdir
  5032  066F  120A  158A  200A  120A  118A  	movwf	(___lwdiv@divisor)
  5033  0674  00F3               	fcall	stringdir
  5034  0675  120A  158A  200A  120A  118A  	movwf	(___lwdiv@divisor+1)
  5035  067A  00F4               	movf	(sprintf@val+1),w
  5036  067B  0833               	movwf	(___lwdiv@dividend+1)
  5037  067C  00F6               	movf	(sprintf@val),w
  5038  067D  0832               	movwf	(___lwdiv@dividend)
  5039  067E  00F5               	fcall	___lwdiv
  5040  067F  160A  118A  2423  120A  118A  	movf	(1+(?___lwdiv)),w
  5041  0684  0874               	bcf	status, 5	;RP0=0, select bank0
  5042  0685  1283               	bcf	status, 6	;RP1=0, select bank0
  5043  0686  1303               	movwf	(___lwmod@dividend+1)
  5044  0687  00A6               	movf	(0+(?___lwdiv)),w
  5045  0688  0873               	movwf	(___lwmod@dividend)
  5046  0689  00A5               	fcall	___lwmod
  5047  068A  160A  118A  2398  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  5048  068F  1283               	bcf	status, 6	;RP1=0, select bank0
  5049  0690  1303               	movf	(0+(?___lwmod)),w
  5050  0691  0823               	addlw	030h
  5051  0692  3E30               	movwf	(??_sprintf+1)+0
  5052  0693  00AD               	movf	(??_sprintf+1)+0,w
  5053  0694  082D               	movwf	(sprintf@c)
  5054  0695  00B5               	line	1543
  5055                           	
  5056                           l3768:	
  5057  0696                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  5058                           	movf	(sprintf@c),w
  5059  0696  0835               	movwf	(??_sprintf+0)+0
  5060  0697  00AC               	movf	(sprintf@sp),w
  5061  0698  0834               	movwf	fsr0
  5062  0699  0084               	movf	(??_sprintf+0)+0,w
  5063  069A  082C               	bcf	status, 7	;select IRP bank0
  5064  069B  1383               	movwf	indf
  5065  069C  0080               	
  5066                           l3770:	
  5067  069D                     	movlw	low(01h)
  5068  069D  3001               	movwf	(??_sprintf+0)+0
  5069  069E  00AC               	movf	(??_sprintf+0)+0,w
  5070  069F  082C               	addwf	(sprintf@sp),f
  5071  06A0  07B4               	goto	l3772
  5072  06A1  2EA2               	line	1544
  5073                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  5074                           	
  5075                           l519:	
  5076  06A2                     	line	1493
  5077                           	
  5078                           l3772:	
  5079  06A2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  5080                           	movlw	low(-1)
  5081  06A2  30FF               	movwf	(??_sprintf+0)+0
  5082  06A3  00AC               	movf	(??_sprintf+0)+0,w
  5083  06A4  082C               	addwf	(sprintf@prec),f
  5084  06A5  07B1               		incf	(((sprintf@prec))),w
  5085  06A6  0A31               	btfss	status,2
  5086  06A7  1D03               	goto	u5421
  5087  06A8  2EAA               	goto	u5420
  5088  06A9  2EAB               u5421:
  5089  06AA                     	goto	l3766
  5090  06AA  2E66               u5420:
  5091  06AB                     	goto	l3774
  5092  06AB  2EAD               	
  5093                           l521:	
  5094  06AC                     	goto	l3774
  5095  06AC  2EAD               	line	1552
  5096                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  5097                           	
  5098                           l504:	
  5099  06AD                     	line	548
  5100                           	
  5101                           l3774:	
  5102  06AD                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  5103                           	movlw	01h
  5104  06AD  3001               	addwf	(sprintf@f),f
  5105  06AE  07A9               	movlw	-01h
  5106  06AF  30FF               	addwf	(sprintf@f),w
  5107  06B0  0729               	movwf	fsr0
  5108  06B1  0084               	fcall	stringdir
  5109  06B2  120A  158A  200A  120A  118A  	movwf	(??_sprintf+0)+0
  5110  06B7  00AC               	movf	(??_sprintf+0)+0,w
  5111  06B8  082C               	movwf	(sprintf@c)
  5112  06B9  00B5               	movf	(((sprintf@c))),w
  5113  06BA  0835               	btfss	status,2
  5114  06BB  1D03               	goto	u5431
  5115  06BC  2EBE               	goto	u5430
  5116  06BD  2EBF               u5431:
  5117  06BE                     	goto	l3724
  5118  06BE  2DCD               u5430:
  5119  06BF                     	goto	l3776
  5120  06BF  2EC1               	
  5121                           l522:	
  5122  06C0                     	goto	l3776
  5123  06C0  2EC1               	line	1554
  5124                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  5125                           	
  5126                           l509:	
  5127  06C1                     	line	1557
  5128                           	
  5129                           l3776:	
  5130  06C1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  5131                           	movf	(sprintf@sp),w
  5132  06C1  0834               	movwf	fsr0
  5133  06C2  0084               	bcf	status, 7	;select IRP bank0
  5134  06C3  1383               	clrf	indf
  5135  06C4  0180               	goto	l523
  5136  06C5  2EC6               	line	1559
  5137                           	
  5138                           l3778:	
  5139  06C6                     	line	1560
  5140                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  5141                           	
  5142                           l523:	
  5143  06C6                     	return
  5144  06C6  0008               	opt stack 0
  5145                           GLOBAL	__end_of_sprintf
  5146                           	__end_of_sprintf:
  5147  06C7                     	signat	_sprintf,4698
  5148                           	global	___lwmod
  5149                           
  5150 ;; *************** function ___lwmod *****************
  5151 ;; Defined at:
  5152 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  5153 ;; Parameters:    Size  Location     Type
  5154 ;;  divisor         2    3[BANK0 ] unsigned int 
  5155 ;;  dividend        2    5[BANK0 ] unsigned int 
  5156 ;; Auto vars:     Size  Location     Type
  5157 ;;  counter         1    8[BANK0 ] unsigned char 
  5158 ;; Return value:  Size  Location     Type
  5159 ;;                  2    3[BANK0 ] unsigned int 
  5160 ;; Registers used:
  5161 ;;		wreg, status,2, status,0
  5162 ;; Tracked objects:
  5163 ;;		On entry : 0/0
  5164 ;;		On exit  : 0/0
  5165 ;;		Unchanged: 0/0
  5166 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5167 ;;      Params:         0       4       0       0       0
  5168 ;;      Locals:         0       1       0       0       0
  5169 ;;      Temps:          0       1       0       0       0
  5170 ;;      Totals:         0       6       0       0       0
  5171 ;;Total ram usage:        6 bytes
  5172 ;; Hardware stack levels used:    1
  5173 ;; Hardware stack levels required when called:    2
  5174 ;; This function calls:
  5175 ;;		Nothing
  5176 ;; This function is called by:
  5177 ;;		_sprintf
  5178 ;; This function uses a non-reentrant model
  5179 ;;
  5180                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  5181                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  5182                           	line	5
  5183                           global __ptext5
  5184                           __ptext5:	;psect for function ___lwmod
  5185  1398                     psect	text5
  5186                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  5187                           	line	5
  5188                           	global	__size_of___lwmod
  5189                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  5190  0043                     	
  5191                           ___lwmod:	
  5192  1398                     ;incstack = 0
  5193                           	opt	stack 3
  5194                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5195                           	line	12
  5196                           	
  5197                           l2402:	
  5198  1398                     	bcf	status, 5	;RP0=0, select bank0
  5199  1398  1283               	bcf	status, 6	;RP1=0, select bank0
  5200  1399  1303               	movf	((___lwmod@divisor)),w
  5201  139A  0823               iorwf	((___lwmod@divisor+1)),w
  5202  139B  0424               	btfsc	status,2
  5203  139C  1903               	goto	u2721
  5204  139D  2B9F               	goto	u2720
  5205  139E  2BA0               u2721:
  5206  139F                     	goto	l2420
  5207  139F  2BD5               u2720:
  5208  13A0                     	line	13
  5209                           	
  5210                           l2404:	
  5211  13A0                     	clrf	(___lwmod@counter)
  5212  13A0  01A8               	incf	(___lwmod@counter),f
  5213  13A1  0AA8               	line	14
  5214                           	goto	l2410
  5215  13A2  2BAF               	
  5216                           l804:	
  5217  13A3                     	line	15
  5218                           	
  5219                           l2406:	
  5220  13A3                     	movlw	01h
  5221  13A3  3001               	
  5222                           u2735:
  5223  13A4                     	clrc
  5224  13A4  1003               	rlf	(___lwmod@divisor),f
  5225  13A5  0DA3               	rlf	(___lwmod@divisor+1),f
  5226  13A6  0DA4               	addlw	-1
  5227  13A7  3EFF               	skipz
  5228  13A8  1D03               	goto	u2735
  5229  13A9  2BA4               	line	16
  5230                           	
  5231                           l2408:	
  5232  13AA                     	movlw	low(01h)
  5233  13AA  3001               	movwf	(??___lwmod+0)+0
  5234  13AB  00A7               	movf	(??___lwmod+0)+0,w
  5235  13AC  0827               	addwf	(___lwmod@counter),f
  5236  13AD  07A8               	goto	l2410
  5237  13AE  2BAF               	line	17
  5238                           	
  5239                           l803:	
  5240  13AF                     	line	14
  5241                           	
  5242                           l2410:	
  5243  13AF                     	btfss	(___lwmod@divisor+1),(15)&7
  5244  13AF  1FA4               	goto	u2741
  5245  13B0  2BB2               	goto	u2740
  5246  13B1  2BB3               u2741:
  5247  13B2                     	goto	l2406
  5248  13B2  2BA3               u2740:
  5249  13B3                     	goto	l2412
  5250  13B3  2BB5               	
  5251                           l805:	
  5252  13B4                     	goto	l2412
  5253  13B4  2BB5               	line	18
  5254                           	
  5255                           l806:	
  5256  13B5                     	line	19
  5257                           	
  5258                           l2412:	
  5259  13B5                     	movf	(___lwmod@divisor+1),w
  5260  13B5  0824               	subwf	(___lwmod@dividend+1),w
  5261  13B6  0226               	skipz
  5262  13B7  1D03               	goto	u2755
  5263  13B8  2BBB               	movf	(___lwmod@divisor),w
  5264  13B9  0823               	subwf	(___lwmod@dividend),w
  5265  13BA  0225               u2755:
  5266  13BB                     	skipc
  5267  13BB  1C03               	goto	u2751
  5268  13BC  2BBE               	goto	u2750
  5269  13BD  2BBF               u2751:
  5270  13BE                     	goto	l2416
  5271  13BE  2BC6               u2750:
  5272  13BF                     	line	20
  5273                           	
  5274                           l2414:	
  5275  13BF                     	movf	(___lwmod@divisor),w
  5276  13BF  0823               	subwf	(___lwmod@dividend),f
  5277  13C0  02A5               	movf	(___lwmod@divisor+1),w
  5278  13C1  0824               	skipc
  5279  13C2  1C03               	decf	(___lwmod@dividend+1),f
  5280  13C3  03A6               	subwf	(___lwmod@dividend+1),f
  5281  13C4  02A6               	goto	l2416
  5282  13C5  2BC6               	
  5283                           l807:	
  5284  13C6                     	line	21
  5285                           	
  5286                           l2416:	
  5287  13C6                     	movlw	01h
  5288  13C6  3001               	
  5289                           u2765:
  5290  13C7                     	clrc
  5291  13C7  1003               	rrf	(___lwmod@divisor+1),f
  5292  13C8  0CA4               	rrf	(___lwmod@divisor),f
  5293  13C9  0CA3               	addlw	-1
  5294  13CA  3EFF               	skipz
  5295  13CB  1D03               	goto	u2765
  5296  13CC  2BC7               	line	22
  5297                           	
  5298                           l2418:	
  5299  13CD                     	movlw	01h
  5300  13CD  3001               	subwf	(___lwmod@counter),f
  5301  13CE  02A8               	btfss	status,2
  5302  13CF  1D03               	goto	u2771
  5303  13D0  2BD2               	goto	u2770
  5304  13D1  2BD3               u2771:
  5305  13D2                     	goto	l2412
  5306  13D2  2BB5               u2770:
  5307  13D3                     	goto	l2420
  5308  13D3  2BD5               	
  5309                           l808:	
  5310  13D4                     	goto	l2420
  5311  13D4  2BD5               	line	23
  5312                           	
  5313                           l802:	
  5314  13D5                     	line	24
  5315                           	
  5316                           l2420:	
  5317  13D5                     	movf	(___lwmod@dividend+1),w
  5318  13D5  0826               	movwf	(?___lwmod+1)
  5319  13D6  00A4               	movf	(___lwmod@dividend),w
  5320  13D7  0825               	movwf	(?___lwmod)
  5321  13D8  00A3               	goto	l809
  5322  13D9  2BDA               	
  5323                           l2422:	
  5324  13DA                     	line	25
  5325                           	
  5326                           l809:	
  5327  13DA                     	return
  5328  13DA  0008               	opt stack 0
  5329                           GLOBAL	__end_of___lwmod
  5330                           	__end_of___lwmod:
  5331  13DB                     	signat	___lwmod,8314
  5332                           	global	___lwdiv
  5333                           
  5334 ;; *************** function ___lwdiv *****************
  5335 ;; Defined at:
  5336 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  5337 ;; Parameters:    Size  Location     Type
  5338 ;;  divisor         2    3[COMMON] unsigned int 
  5339 ;;  dividend        2    5[COMMON] unsigned int 
  5340 ;; Auto vars:     Size  Location     Type
  5341 ;;  quotient        2    1[BANK0 ] unsigned int 
  5342 ;;  counter         1    0[BANK0 ] unsigned char 
  5343 ;; Return value:  Size  Location     Type
  5344 ;;                  2    3[COMMON] unsigned int 
  5345 ;; Registers used:
  5346 ;;		wreg, status,2, status,0
  5347 ;; Tracked objects:
  5348 ;;		On entry : 0/0
  5349 ;;		On exit  : 0/0
  5350 ;;		Unchanged: 0/0
  5351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5352 ;;      Params:         4       0       0       0       0
  5353 ;;      Locals:         0       3       0       0       0
  5354 ;;      Temps:          1       0       0       0       0
  5355 ;;      Totals:         5       3       0       0       0
  5356 ;;Total ram usage:        8 bytes
  5357 ;; Hardware stack levels used:    1
  5358 ;; Hardware stack levels required when called:    2
  5359 ;; This function calls:
  5360 ;;		Nothing
  5361 ;; This function is called by:
  5362 ;;		_sprintf
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  5366                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  5367                           	line	5
  5368                           global __ptext6
  5369                           __ptext6:	;psect for function ___lwdiv
  5370  1423                     psect	text6
  5371                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  5372                           	line	5
  5373                           	global	__size_of___lwdiv
  5374                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  5375  004D                     	
  5376                           ___lwdiv:	
  5377  1423                     ;incstack = 0
  5378                           	opt	stack 3
  5379                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5380                           	line	13
  5381                           	
  5382                           l3652:	
  5383  1423                     	bcf	status, 5	;RP0=0, select bank0
  5384  1423  1283               	bcf	status, 6	;RP1=0, select bank0
  5385  1424  1303               	clrf	(___lwdiv@quotient)
  5386  1425  01A1               	clrf	(___lwdiv@quotient+1)
  5387  1426  01A2               	line	14
  5388                           	
  5389                           l3654:	
  5390  1427                     	movf	((___lwdiv@divisor)),w
  5391  1427  0873               iorwf	((___lwdiv@divisor+1)),w
  5392  1428  0474               	btfsc	status,2
  5393  1429  1903               	goto	u5231
  5394  142A  2C2C               	goto	u5230
  5395  142B  2C2D               u5231:
  5396  142C                     	goto	l3674
  5397  142C  2C6A               u5230:
  5398  142D                     	line	15
  5399                           	
  5400                           l3656:	
  5401  142D                     	clrf	(___lwdiv@counter)
  5402  142D  01A0               	incf	(___lwdiv@counter),f
  5403  142E  0AA0               	line	16
  5404                           	goto	l3662
  5405  142F  2C3C               	
  5406                           l794:	
  5407  1430                     	line	17
  5408                           	
  5409                           l3658:	
  5410  1430                     	movlw	01h
  5411  1430  3001               	
  5412                           u5245:
  5413  1431                     	clrc
  5414  1431  1003               	rlf	(___lwdiv@divisor),f
  5415  1432  0DF3               	rlf	(___lwdiv@divisor+1),f
  5416  1433  0DF4               	addlw	-1
  5417  1434  3EFF               	skipz
  5418  1435  1D03               	goto	u5245
  5419  1436  2C31               	line	18
  5420                           	
  5421                           l3660:	
  5422  1437                     	movlw	low(01h)
  5423  1437  3001               	movwf	(??___lwdiv+0)+0
  5424  1438  00F7               	movf	(??___lwdiv+0)+0,w
  5425  1439  0877               	addwf	(___lwdiv@counter),f
  5426  143A  07A0               	goto	l3662
  5427  143B  2C3C               	line	19
  5428                           	
  5429                           l793:	
  5430  143C                     	line	16
  5431                           	
  5432                           l3662:	
  5433  143C                     	btfss	(___lwdiv@divisor+1),(15)&7
  5434  143C  1FF4               	goto	u5251
  5435  143D  2C3F               	goto	u5250
  5436  143E  2C40               u5251:
  5437  143F                     	goto	l3658
  5438  143F  2C30               u5250:
  5439  1440                     	goto	l3664
  5440  1440  2C42               	
  5441                           l795:	
  5442  1441                     	goto	l3664
  5443  1441  2C42               	line	20
  5444                           	
  5445                           l796:	
  5446  1442                     	line	21
  5447                           	
  5448                           l3664:	
  5449  1442                     	movlw	01h
  5450  1442  3001               	
  5451                           u5265:
  5452  1443                     	clrc
  5453  1443  1003               	rlf	(___lwdiv@quotient),f
  5454  1444  0DA1               	rlf	(___lwdiv@quotient+1),f
  5455  1445  0DA2               	addlw	-1
  5456  1446  3EFF               	skipz
  5457  1447  1D03               	goto	u5265
  5458  1448  2C43               	line	22
  5459                           	movf	(___lwdiv@divisor+1),w
  5460  1449  0874               	subwf	(___lwdiv@dividend+1),w
  5461  144A  0276               	skipz
  5462  144B  1D03               	goto	u5275
  5463  144C  2C4F               	movf	(___lwdiv@divisor),w
  5464  144D  0873               	subwf	(___lwdiv@dividend),w
  5465  144E  0275               u5275:
  5466  144F                     	skipc
  5467  144F  1C03               	goto	u5271
  5468  1450  2C52               	goto	u5270
  5469  1451  2C53               u5271:
  5470  1452                     	goto	l3670
  5471  1452  2C5B               u5270:
  5472  1453                     	line	23
  5473                           	
  5474                           l3666:	
  5475  1453                     	movf	(___lwdiv@divisor),w
  5476  1453  0873               	subwf	(___lwdiv@dividend),f
  5477  1454  02F5               	movf	(___lwdiv@divisor+1),w
  5478  1455  0874               	skipc
  5479  1456  1C03               	decf	(___lwdiv@dividend+1),f
  5480  1457  03F6               	subwf	(___lwdiv@dividend+1),f
  5481  1458  02F6               	line	24
  5482                           	
  5483                           l3668:	
  5484  1459                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  5485  1459  1421               	goto	l3670
  5486  145A  2C5B               	line	25
  5487                           	
  5488                           l797:	
  5489  145B                     	line	26
  5490                           	
  5491                           l3670:	
  5492  145B                     	movlw	01h
  5493  145B  3001               	
  5494                           u5285:
  5495  145C                     	clrc
  5496  145C  1003               	rrf	(___lwdiv@divisor+1),f
  5497  145D  0CF4               	rrf	(___lwdiv@divisor),f
  5498  145E  0CF3               	addlw	-1
  5499  145F  3EFF               	skipz
  5500  1460  1D03               	goto	u5285
  5501  1461  2C5C               	line	27
  5502                           	
  5503                           l3672:	
  5504  1462                     	movlw	01h
  5505  1462  3001               	subwf	(___lwdiv@counter),f
  5506  1463  02A0               	btfss	status,2
  5507  1464  1D03               	goto	u5291
  5508  1465  2C67               	goto	u5290
  5509  1466  2C68               u5291:
  5510  1467                     	goto	l3664
  5511  1467  2C42               u5290:
  5512  1468                     	goto	l3674
  5513  1468  2C6A               	
  5514                           l798:	
  5515  1469                     	goto	l3674
  5516  1469  2C6A               	line	28
  5517                           	
  5518                           l792:	
  5519  146A                     	line	29
  5520                           	
  5521                           l3674:	
  5522  146A                     	movf	(___lwdiv@quotient+1),w
  5523  146A  0822               	movwf	(?___lwdiv+1)
  5524  146B  00F4               	movf	(___lwdiv@quotient),w
  5525  146C  0821               	movwf	(?___lwdiv)
  5526  146D  00F3               	goto	l799
  5527  146E  2C6F               	
  5528                           l3676:	
  5529  146F                     	line	30
  5530                           	
  5531                           l799:	
  5532  146F                     	return
  5533  146F  0008               	opt stack 0
  5534                           GLOBAL	__end_of___lwdiv
  5535                           	__end_of___lwdiv:
  5536  1470                     	signat	___lwdiv,8314
  5537                           	global	_setup
  5538                           
  5539 ;; *************** function _setup *****************
  5540 ;; Defined at:
  5541 ;;		line 274 in file "mainM.c"
  5542 ;; Parameters:    Size  Location     Type
  5543 ;;		None
  5544 ;; Auto vars:     Size  Location     Type
  5545 ;;		None
  5546 ;; Return value:  Size  Location     Type
  5547 ;;                  1    wreg      void 
  5548 ;; Registers used:
  5549 ;;		wreg, status,2, status,0, pclath, cstack
  5550 ;; Tracked objects:
  5551 ;;		On entry : 0/0
  5552 ;;		On exit  : 0/0
  5553 ;;		Unchanged: 0/0
  5554 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5555 ;;      Params:         0       0       0       0       0
  5556 ;;      Locals:         0       0       0       0       0
  5557 ;;      Temps:          0       0       0       0       0
  5558 ;;      Totals:         0       0       0       0       0
  5559 ;;Total ram usage:        0 bytes
  5560 ;; Hardware stack levels used:    1
  5561 ;; Hardware stack levels required when called:    4
  5562 ;; This function calls:
  5563 ;;		_I2C_Master_Init
  5564 ;;		_clcLCD
  5565 ;;		_initLCD
  5566 ;;		_initUSART
  5567 ;; This function is called by:
  5568 ;;		_main
  5569 ;; This function uses a non-reentrant model
  5570 ;;
  5571                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5572                           	file	"mainM.c"
  5573                           	line	274
  5574                           global __ptext7
  5575                           __ptext7:	;psect for function _setup
  5576  12EB                     psect	text7
  5577                           	file	"mainM.c"
  5578                           	line	274
  5579                           	global	__size_of_setup
  5580                           	__size_of_setup	equ	__end_of_setup-_setup
  5581  0039                     	
  5582                           _setup:	
  5583  12EB                     ;incstack = 0
  5584                           	opt	stack 3
  5585                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  5586                           	line	276
  5587                           	
  5588                           l3822:	
  5589  12EB                     ;mainM.c: 276:     ANSEL = 0;
  5590                           	bsf	status, 5	;RP0=1, select bank3
  5591  12EB  1683               	bsf	status, 6	;RP1=1, select bank3
  5592  12EC  1703               	clrf	(392)^0180h	;volatile
  5593  12ED  0188               	line	277
  5594                           ;mainM.c: 277:     ANSELH = 0;
  5595                           	clrf	(393)^0180h	;volatile
  5596  12EE  0189               	line	278
  5597                           ;mainM.c: 278:     TRISB = 0;
  5598                           	bsf	status, 5	;RP0=1, select bank1
  5599  12EF  1683               	bcf	status, 6	;RP1=0, select bank1
  5600  12F0  1303               	clrf	(134)^080h	;volatile
  5601  12F1  0186               	line	279
  5602                           ;mainM.c: 279:     TRISD = 0;
  5603                           	clrf	(136)^080h	;volatile
  5604  12F2  0188               	line	280
  5605                           ;mainM.c: 280:     PORTB = 0;
  5606                           	bcf	status, 5	;RP0=0, select bank0
  5607  12F3  1283               	bcf	status, 6	;RP1=0, select bank0
  5608  12F4  1303               	clrf	(6)	;volatile
  5609  12F5  0186               	line	281
  5610                           ;mainM.c: 281:     PORTD = 0;
  5611                           	clrf	(8)	;volatile
  5612  12F6  0188               	line	282
  5613                           	
  5614                           l3824:	
  5615  12F7                     ;mainM.c: 282:     I2C_Master_Init(100000);
  5616                           	movlw	0
  5617  12F7  3000               	movwf	(I2C_Master_Init@c+3)
  5618  12F8  00B0               	movlw	01h
  5619  12F9  3001               	movwf	(I2C_Master_Init@c+2)
  5620  12FA  00AF               	movlw	086h
  5621  12FB  3086               	movwf	(I2C_Master_Init@c+1)
  5622  12FC  00AE               	movlw	0A0h
  5623  12FD  30A0               	movwf	(I2C_Master_Init@c)
  5624  12FE  00AD               
  5625                           	fcall	_I2C_Master_Init
  5626  12FF  160A  118A  2324  160A  118A  	line	284
  5627                           	
  5628                           l3826:	
  5629  1304                     ;mainM.c: 284:     initUSART(9600, 1, 1, 0);
  5630                           	movlw	080h
  5631  1304  3080               	movwf	(initUSART@baudrate)
  5632  1305  00F3               	movlw	025h
  5633  1306  3025               	movwf	((initUSART@baudrate))+1
  5634  1307  00F4               	clrf	(initUSART@txint)
  5635  1308  01F5               	incf	(initUSART@txint),f
  5636  1309  0AF5               	clrf	(initUSART@rcint)
  5637  130A  01F6               	incf	(initUSART@rcint),f
  5638  130B  0AF6               	clrf	(initUSART@syncrono)
  5639  130C  01F7               	fcall	_initUSART
  5640  130D  120A  158A  20A6  160A  118A  	line	286
  5641                           	
  5642                           l3828:	
  5643  1312                     ;mainM.c: 286:     initLCD();
  5644                           	fcall	_initLCD
  5645  1312  160A  118A  235E  160A  118A  	line	287
  5646                           	
  5647                           l3830:	
  5648  1317                     ;mainM.c: 287:     clcLCD();
  5649                           	fcall	_clcLCD
  5650  1317  160A  118A  217D  160A  118A  	line	289
  5651                           	
  5652                           l3832:	
  5653  131C                     ;mainM.c: 289:     TRISAbits.TRISA1 = 1;
  5654                           	bsf	status, 5	;RP0=1, select bank1
  5655  131C  1683               	bcf	status, 6	;RP1=0, select bank1
  5656  131D  1303               	bsf	(133)^080h,1	;volatile
  5657  131E  1485               	line	290
  5658                           	
  5659                           l3834:	
  5660  131F                     ;mainM.c: 290:     TRISAbits.TRISA2 = 1;
  5661                           	bsf	(133)^080h,2	;volatile
  5662  131F  1505               	line	291
  5663                           	
  5664                           l3836:	
  5665  1320                     ;mainM.c: 291:     TRISAbits.TRISA0 = 0;
  5666                           	bcf	(133)^080h,0	;volatile
  5667  1320  1005               	line	292
  5668                           	
  5669                           l3838:	
  5670  1321                     ;mainM.c: 292:     TRISAbits.TRISA4 = 0;
  5671                           	bcf	(133)^080h,4	;volatile
  5672  1321  1205               	line	293
  5673                           	
  5674                           l3840:	
  5675  1322                     ;mainM.c: 293:     TRISAbits.TRISA5 = 0;
  5676                           	bcf	(133)^080h,5	;volatile
  5677  1322  1285               	line	294
  5678                           	
  5679                           l311:	
  5680  1323                     	return
  5681  1323  0008               	opt stack 0
  5682                           GLOBAL	__end_of_setup
  5683                           	__end_of_setup:
  5684  1324                     	signat	_setup,89
  5685                           	global	_initUSART
  5686                           
  5687 ;; *************** function _initUSART *****************
  5688 ;; Defined at:
  5689 ;;		line 5 in file "USART.c"
  5690 ;; Parameters:    Size  Location     Type
  5691 ;;  baudrate        2    3[COMMON] unsigned int 
  5692 ;;  txint           1    5[COMMON] unsigned char 
  5693 ;;  rcint           1    6[COMMON] unsigned char 
  5694 ;;  syncrono        1    7[COMMON] unsigned char 
  5695 ;; Auto vars:     Size  Location     Type
  5696 ;;		None
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  1    wreg      void 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5706 ;;      Params:         5       0       0       0       0
  5707 ;;      Locals:         0       0       0       0       0
  5708 ;;      Temps:          0       0       0       0       0
  5709 ;;      Totals:         5       0       0       0       0
  5710 ;;Total ram usage:        5 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    2
  5713 ;; This function calls:
  5714 ;;		Nothing
  5715 ;; This function is called by:
  5716 ;;		_setup
  5717 ;; This function uses a non-reentrant model
  5718 ;;
  5719                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5720                           	file	"USART.c"
  5721                           	line	5
  5722                           global __ptext8
  5723                           __ptext8:	;psect for function _initUSART
  5724  08A6                     psect	text8
  5725                           	file	"USART.c"
  5726                           	line	5
  5727                           	global	__size_of_initUSART
  5728                           	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  5729  007B                     	
  5730                           _initUSART:	
  5731  08A6                     ;incstack = 0
  5732                           	opt	stack 4
  5733                           ; Regs used in _initUSART: [wreg+status,2+status,0]
  5734                           	line	6
  5735                           	
  5736                           l2530:	
  5737  08A6                     ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  5738                           	bsf	status, 5	;RP0=1, select bank1
  5739  08A6  1683               	bcf	status, 6	;RP1=0, select bank1
  5740  08A7  1303               	bsf	(135)^080h,7	;volatile
  5741  08A8  1787               	line	8
  5742                           ;USART.c: 8:     PIE1bits.RCIE = 0;
  5743                           	bcf	(140)^080h,5	;volatile
  5744  08A9  128C               	line	10
  5745                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  5746                           	bcf	status, 5	;RP0=0, select bank0
  5747  08AA  1283               	bcf	status, 6	;RP1=0, select bank0
  5748  08AB  1303               	bsf	(24),7	;volatile
  5749  08AC  1798               	line	11
  5750                           	
  5751                           l2532:	
  5752  08AD                     ;USART.c: 11:     TXSTAbits.SYNC = syncrono;
  5753                           	rrf	(initUSART@syncrono),w
  5754  08AD  0C77               	bsf	status, 5	;RP0=1, select bank1
  5755  08AE  1683               	bcf	status, 6	;RP1=0, select bank1
  5756  08AF  1303               	skipc
  5757  08B0  1C03               	bcf	(152)^080h,4	;volatile
  5758  08B1  1218               	skipnc
  5759  08B2  1803               	bsf	(152)^080h,4	;volatile
  5760  08B3  1618               	line	13
  5761                           	
  5762                           l2534:	
  5763  08B4                     ;USART.c: 13:     if(rcint){
  5764                           	movf	((initUSART@rcint)),w
  5765  08B4  0876               	btfsc	status,2
  5766  08B5  1903               	goto	u2921
  5767  08B6  28B8               	goto	u2920
  5768  08B7  28B9               u2921:
  5769  08B8                     	goto	l2538
  5770  08B8  28C3               u2920:
  5771  08B9                     	line	14
  5772                           	
  5773                           l2536:	
  5774  08B9                     ;USART.c: 14:         RCSTAbits.CREN = 1;
  5775                           	bcf	status, 5	;RP0=0, select bank0
  5776  08B9  1283               	bcf	status, 6	;RP1=0, select bank0
  5777  08BA  1303               	bsf	(24),4	;volatile
  5778  08BB  1618               	line	15
  5779                           ;USART.c: 15:         PIE1bits.RCIE = 1;
  5780                           	bsf	status, 5	;RP0=1, select bank1
  5781  08BC  1683               	bcf	status, 6	;RP1=0, select bank1
  5782  08BD  1303               	bsf	(140)^080h,5	;volatile
  5783  08BE  168C               	line	16
  5784                           ;USART.c: 16:         PIR1bits.RCIF = 0;
  5785                           	bcf	status, 5	;RP0=0, select bank0
  5786  08BF  1283               	bcf	status, 6	;RP1=0, select bank0
  5787  08C0  1303               	bcf	(12),5	;volatile
  5788  08C1  128C               	goto	l2538
  5789  08C2  28C3               	line	17
  5790                           ;USART.c: 17:     }
  5791                           	
  5792                           l394:	
  5793  08C3                     	line	18
  5794                           	
  5795                           l2538:	
  5796  08C3                     ;USART.c: 18:     if(txint){
  5797                           	movf	((initUSART@txint)),w
  5798  08C3  0875               	btfsc	status,2
  5799  08C4  1903               	goto	u2931
  5800  08C5  28C7               	goto	u2930
  5801  08C6  28C8               u2931:
  5802  08C7                     	goto	l395
  5803  08C7  28CB               u2930:
  5804  08C8                     	line	19
  5805                           	
  5806                           l2540:	
  5807  08C8                     ;USART.c: 19:         TXSTAbits.TXEN = 1;
  5808                           	bsf	status, 5	;RP0=1, select bank1
  5809  08C8  1683               	bcf	status, 6	;RP1=0, select bank1
  5810  08C9  1303               	bsf	(152)^080h,5	;volatile
  5811  08CA  1698               	line	20
  5812                           ;USART.c: 20:     }
  5813                           	
  5814                           l395:	
  5815  08CB                     	line	22
  5816                           ;USART.c: 22:     BAUDCTLbits.BRG16 = 1;
  5817                           	bsf	status, 5	;RP0=1, select bank3
  5818  08CB  1683               	bsf	status, 6	;RP1=1, select bank3
  5819  08CC  1703               	bsf	(391)^0180h,3	;volatile
  5820  08CD  1587               	line	23
  5821                           ;USART.c: 23:     TXSTAbits.BRGH = 0;
  5822                           	bsf	status, 5	;RP0=1, select bank1
  5823  08CE  1683               	bcf	status, 6	;RP1=0, select bank1
  5824  08CF  1303               	bcf	(152)^080h,2	;volatile
  5825  08D0  1118               	line	25
  5826                           	
  5827                           l2542:	
  5828  08D1                     ;USART.c: 25:     if(baudrate == 300){
  5829                           		movlw	44
  5830  08D1  302C               	xorwf	((initUSART@baudrate)),w
  5831  08D2  0673               	skipz
  5832  08D3  1D03               	goto	u2941
  5833  08D4  28D9               	decf	((initUSART@baudrate+1)),w
  5834  08D5  0374               	btfss	status,2
  5835  08D6  1D03               	goto	u2941
  5836  08D7  28D9               	goto	u2940
  5837  08D8  28DA               u2941:
  5838  08D9                     	goto	l2546
  5839  08D9  28DF               u2940:
  5840  08DA                     	line	26
  5841                           	
  5842                           l2544:	
  5843  08DA                     ;USART.c: 26:         SPBRG = 0x40;
  5844                           	movlw	low(040h)
  5845  08DA  3040               	movwf	(153)^080h	;volatile
  5846  08DB  0099               	line	27
  5847                           ;USART.c: 27:         SPBRGH = 0x03;
  5848                           	movlw	low(03h)
  5849  08DC  3003               	movwf	(154)^080h	;volatile
  5850  08DD  009A               	line	28
  5851                           ;USART.c: 28:     } else if (baudrate == 1200){
  5852                           	goto	l2566
  5853  08DE  291E               	
  5854                           l396:	
  5855  08DF                     	
  5856                           l2546:	
  5857  08DF                     		movlw	176
  5858  08DF  30B0               	xorwf	((initUSART@baudrate)),w
  5859  08E0  0673               	movlw	4
  5860  08E1  3004               	skipnz
  5861  08E2  1903               	xorwf	((initUSART@baudrate+1)),w
  5862  08E3  0674               	btfss	status,2
  5863  08E4  1D03               	goto	u2951
  5864  08E5  28E7               	goto	u2950
  5865  08E6  28E8               u2951:
  5866  08E7                     	goto	l2550
  5867  08E7  28EB               u2950:
  5868  08E8                     	line	29
  5869                           	
  5870                           l2548:	
  5871  08E8                     ;USART.c: 29:         SPBRG = 207;
  5872                           	movlw	low(0CFh)
  5873  08E8  30CF               	movwf	(153)^080h	;volatile
  5874  08E9  0099               	line	30
  5875                           ;USART.c: 30:     } else if (baudrate == 2400){
  5876                           	goto	l2566
  5877  08EA  291E               	
  5878                           l398:	
  5879  08EB                     	
  5880                           l2550:	
  5881  08EB                     		movlw	96
  5882  08EB  3060               	xorwf	((initUSART@baudrate)),w
  5883  08EC  0673               	movlw	9
  5884  08ED  3009               	skipnz
  5885  08EE  1903               	xorwf	((initUSART@baudrate+1)),w
  5886  08EF  0674               	btfss	status,2
  5887  08F0  1D03               	goto	u2961
  5888  08F1  28F3               	goto	u2960
  5889  08F2  28F4               u2961:
  5890  08F3                     	goto	l2554
  5891  08F3  28F7               u2960:
  5892  08F4                     	line	31
  5893                           	
  5894                           l2552:	
  5895  08F4                     ;USART.c: 31:         SPBRG = 103;
  5896                           	movlw	low(067h)
  5897  08F4  3067               	movwf	(153)^080h	;volatile
  5898  08F5  0099               	line	32
  5899                           ;USART.c: 32:     } else if (baudrate == 9600){
  5900                           	goto	l2566
  5901  08F6  291E               	
  5902                           l400:	
  5903  08F7                     	
  5904                           l2554:	
  5905  08F7                     		movlw	128
  5906  08F7  3080               	xorwf	((initUSART@baudrate)),w
  5907  08F8  0673               	movlw	37
  5908  08F9  3025               	skipnz
  5909  08FA  1903               	xorwf	((initUSART@baudrate+1)),w
  5910  08FB  0674               	btfss	status,2
  5911  08FC  1D03               	goto	u2971
  5912  08FD  28FF               	goto	u2970
  5913  08FE  2900               u2971:
  5914  08FF                     	goto	l2558
  5915  08FF  2903               u2970:
  5916  0900                     	line	33
  5917                           	
  5918                           l2556:	
  5919  0900                     ;USART.c: 33:         SPBRG = 25;
  5920                           	movlw	low(019h)
  5921  0900  3019               	movwf	(153)^080h	;volatile
  5922  0901  0099               	line	34
  5923                           ;USART.c: 34:     } else if (baudrate == 10417){
  5924                           	goto	l2566
  5925  0902  291E               	
  5926                           l402:	
  5927  0903                     	
  5928                           l2558:	
  5929  0903                     		movlw	177
  5930  0903  30B1               	xorwf	((initUSART@baudrate)),w
  5931  0904  0673               	movlw	40
  5932  0905  3028               	skipnz
  5933  0906  1903               	xorwf	((initUSART@baudrate+1)),w
  5934  0907  0674               	btfss	status,2
  5935  0908  1D03               	goto	u2981
  5936  0909  290B               	goto	u2980
  5937  090A  290C               u2981:
  5938  090B                     	goto	l2562
  5939  090B  290F               u2980:
  5940  090C                     	line	35
  5941                           	
  5942                           l2560:	
  5943  090C                     ;USART.c: 35:         SPBRG = 23;
  5944                           	movlw	low(017h)
  5945  090C  3017               	movwf	(153)^080h	;volatile
  5946  090D  0099               	line	36
  5947                           ;USART.c: 36:     } else if (baudrate == 19200){
  5948                           	goto	l2566
  5949  090E  291E               	
  5950                           l404:	
  5951  090F                     	
  5952                           l2562:	
  5953  090F                     		movlw	75
  5954  090F  304B               	xorwf	((initUSART@baudrate+1)),w
  5955  0910  0674               iorwf	((initUSART@baudrate)),w
  5956  0911  0473               	btfss	status,2
  5957  0912  1D03               	goto	u2991
  5958  0913  2915               	goto	u2990
  5959  0914  2916               u2991:
  5960  0915                     	goto	l2566
  5961  0915  291E               u2990:
  5962  0916                     	line	37
  5963                           	
  5964                           l2564:	
  5965  0916                     ;USART.c: 37:         SPBRG = 12;
  5966                           	movlw	low(0Ch)
  5967  0916  300C               	movwf	(153)^080h	;volatile
  5968  0917  0099               	goto	l2566
  5969  0918  291E               	line	38
  5970                           ;USART.c: 38:     }
  5971                           	
  5972                           l406:	
  5973  0919                     	goto	l2566
  5974  0919  291E               	
  5975                           l405:	
  5976  091A                     	goto	l2566
  5977  091A  291E               	
  5978                           l403:	
  5979  091B                     	goto	l2566
  5980  091B  291E               	
  5981                           l401:	
  5982  091C                     	goto	l2566
  5983  091C  291E               	
  5984                           l399:	
  5985  091D                     	goto	l2566
  5986  091D  291E               	
  5987                           l397:	
  5988  091E                     	line	39
  5989                           	
  5990                           l2566:	
  5991  091E                     ;USART.c: 39:     INTCONbits.PEIE = 1;
  5992                           	bsf	(11),6	;volatile
  5993  091E  170B               	line	40
  5994                           	
  5995                           l2568:	
  5996  091F                     ;USART.c: 40:     INTCONbits.GIE = 1;
  5997                           	bsf	(11),7	;volatile
  5998  091F  178B               	line	41
  5999                           	
  6000                           l407:	
  6001  0920                     	return
  6002  0920  0008               	opt stack 0
  6003                           GLOBAL	__end_of_initUSART
  6004                           	__end_of_initUSART:
  6005  0921                     	signat	_initUSART,16505
  6006                           	global	_initLCD
  6007                           
  6008 ;; *************** function _initLCD *****************
  6009 ;; Defined at:
  6010 ;;		line 36 in file "LCD.c"
  6011 ;; Parameters:    Size  Location     Type
  6012 ;;		None
  6013 ;; Auto vars:     Size  Location     Type
  6014 ;;		None
  6015 ;; Return value:  Size  Location     Type
  6016 ;;                  1    wreg      void 
  6017 ;; Registers used:
  6018 ;;		wreg, status,2, status,0, pclath, cstack
  6019 ;; Tracked objects:
  6020 ;;		On entry : 0/0
  6021 ;;		On exit  : 0/0
  6022 ;;		Unchanged: 0/0
  6023 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6024 ;;      Params:         0       0       0       0       0
  6025 ;;      Locals:         0       0       0       0       0
  6026 ;;      Temps:          2       0       0       0       0
  6027 ;;      Totals:         2       0       0       0       0
  6028 ;;Total ram usage:        2 bytes
  6029 ;; Hardware stack levels used:    1
  6030 ;; Hardware stack levels required when called:    3
  6031 ;; This function calls:
  6032 ;;		_cmdLCD
  6033 ;; This function is called by:
  6034 ;;		_setup
  6035 ;; This function uses a non-reentrant model
  6036 ;;
  6037                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  6038                           	file	"LCD.c"
  6039                           	line	36
  6040                           global __ptext9
  6041                           __ptext9:	;psect for function _initLCD
  6042  135E                     psect	text9
  6043                           	file	"LCD.c"
  6044                           	line	36
  6045                           	global	__size_of_initLCD
  6046                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  6047  003A                     	
  6048                           _initLCD:	
  6049  135E                     ;incstack = 0
  6050                           	opt	stack 3
  6051                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  6052                           	line	37
  6053                           	
  6054                           l3704:	
  6055  135E                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  6056                           	opt asmopt_push
  6057                           opt asmopt_off
  6058                           movlw	20
  6059  135E  3014               movwf	((??_initLCD+0)+0+1),f
  6060  135F  00F7               	movlw	121
  6061  1360  3079               movwf	((??_initLCD+0)+0),f
  6062  1361  00F6               	u6347:
  6063  1362                     decfsz	((??_initLCD+0)+0),f
  6064  1362  0BF6               	goto	u6347
  6065  1363  2B62               	decfsz	((??_initLCD+0)+0+1),f
  6066  1364  0BF7               	goto	u6347
  6067  1365  2B62               	nop2
  6068  1366  2B67               opt asmopt_pop
  6069                           
  6070                           	line	38
  6071                           	
  6072                           l3706:	
  6073  1367                     ;LCD.c: 38:     cmdLCD(0x030);
  6074                           	movlw	low(030h)
  6075  1367  3030               	fcall	_cmdLCD
  6076  1368  160A  118A  21D5  160A  118A  	line	39
  6077                           	
  6078                           l3708:	
  6079  136D                     ;LCD.c: 39:     cmdLCD(0x030);
  6080                           	movlw	low(030h)
  6081  136D  3030               	fcall	_cmdLCD
  6082  136E  160A  118A  21D5  160A  118A  	line	40
  6083                           	
  6084                           l3710:	
  6085  1373                     ;LCD.c: 40:     cmdLCD(0x030);
  6086                           	movlw	low(030h)
  6087  1373  3030               	fcall	_cmdLCD
  6088  1374  160A  118A  21D5  160A  118A  	line	42
  6089                           	
  6090                           l3712:	
  6091  1379                     ;LCD.c: 42:     cmdLCD(0x38);
  6092                           	movlw	low(038h)
  6093  1379  3038               	fcall	_cmdLCD
  6094  137A  160A  118A  21D5  160A  118A  	line	43
  6095                           	
  6096                           l3714:	
  6097  137F                     ;LCD.c: 43:     cmdLCD(0x10);
  6098                           	movlw	low(010h)
  6099  137F  3010               	fcall	_cmdLCD
  6100  1380  160A  118A  21D5  160A  118A  	line	44
  6101                           	
  6102                           l3716:	
  6103  1385                     ;LCD.c: 44:     cmdLCD(0x01);
  6104                           	movlw	low(01h)
  6105  1385  3001               	fcall	_cmdLCD
  6106  1386  160A  118A  21D5  160A  118A  	line	45
  6107                           	
  6108                           l3718:	
  6109  138B                     ;LCD.c: 45:     cmdLCD(0x06);
  6110                           	movlw	low(06h)
  6111  138B  3006               	fcall	_cmdLCD
  6112  138C  160A  118A  21D5  160A  118A  	line	46
  6113                           	
  6114                           l3720:	
  6115  1391                     ;LCD.c: 46:     cmdLCD(0x0E);
  6116                           	movlw	low(0Eh)
  6117  1391  300E               	fcall	_cmdLCD
  6118  1392  160A  118A  21D5  160A  118A  	line	47
  6119                           	
  6120                           l91:	
  6121  1397                     	return
  6122  1397  0008               	opt stack 0
  6123                           GLOBAL	__end_of_initLCD
  6124                           	__end_of_initLCD:
  6125  1398                     	signat	_initLCD,89
  6126                           	global	_clcLCD
  6127                           
  6128 ;; *************** function _clcLCD *****************
  6129 ;; Defined at:
  6130 ;;		line 17 in file "LCD.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;		None
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, status,2, status,0, pclath, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6144 ;;      Params:         0       0       0       0       0
  6145 ;;      Locals:         0       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0
  6147 ;;      Totals:         0       0       0       0       0
  6148 ;;Total ram usage:        0 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    3
  6151 ;; This function calls:
  6152 ;;		_cmdLCD
  6153 ;; This function is called by:
  6154 ;;		_setup
  6155 ;; This function uses a non-reentrant model
  6156 ;;
  6157                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  6158                           	line	17
  6159                           global __ptext10
  6160                           __ptext10:	;psect for function _clcLCD
  6161  117D                     psect	text10
  6162                           	file	"LCD.c"
  6163                           	line	17
  6164                           	global	__size_of_clcLCD
  6165                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  6166  0007                     	
  6167                           _clcLCD:	
  6168  117D                     ;incstack = 0
  6169                           	opt	stack 3
  6170                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  6171                           	line	18
  6172                           	
  6173                           l3694:	
  6174  117D                     ;LCD.c: 18:     cmdLCD(0x01);
  6175                           	movlw	low(01h)
  6176  117D  3001               	fcall	_cmdLCD
  6177  117E  160A  118A  21D5  160A  118A  	line	19
  6178                           	
  6179                           l79:	
  6180  1183                     	return
  6181  1183  0008               	opt stack 0
  6182                           GLOBAL	__end_of_clcLCD
  6183                           	__end_of_clcLCD:
  6184  1184                     	signat	_clcLCD,89
  6185                           	global	_I2C_Master_Init
  6186                           
  6187 ;; *************** function _I2C_Master_Init *****************
  6188 ;; Defined at:
  6189 ;;		line 16 in file "I2C.c"
  6190 ;; Parameters:    Size  Location     Type
  6191 ;;  c               4   13[BANK0 ] const unsigned long 
  6192 ;; Auto vars:     Size  Location     Type
  6193 ;;		None
  6194 ;; Return value:  Size  Location     Type
  6195 ;;                  1    wreg      void 
  6196 ;; Registers used:
  6197 ;;		wreg, status,2, status,0, pclath, cstack
  6198 ;; Tracked objects:
  6199 ;;		On entry : 0/0
  6200 ;;		On exit  : 0/0
  6201 ;;		Unchanged: 0/0
  6202 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6203 ;;      Params:         0       4       0       0       0
  6204 ;;      Locals:         0       0       0       0       0
  6205 ;;      Temps:          4       0       0       0       0
  6206 ;;      Totals:         4       4       0       0       0
  6207 ;;Total ram usage:        8 bytes
  6208 ;; Hardware stack levels used:    1
  6209 ;; Hardware stack levels required when called:    3
  6210 ;; This function calls:
  6211 ;;		___lldiv
  6212 ;; This function is called by:
  6213 ;;		_setup
  6214 ;; This function uses a non-reentrant model
  6215 ;;
  6216                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6217                           	file	"I2C.c"
  6218                           	line	16
  6219                           global __ptext11
  6220                           __ptext11:	;psect for function _I2C_Master_Init
  6221  1324                     psect	text11
  6222                           	file	"I2C.c"
  6223                           	line	16
  6224                           	global	__size_of_I2C_Master_Init
  6225                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  6226  003A                     	
  6227                           _I2C_Master_Init:	
  6228  1324                     ;incstack = 0
  6229                           	opt	stack 3
  6230                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6231                           	line	18
  6232                           	
  6233                           l3678:	
  6234  1324                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  6235                           	movlw	low(028h)
  6236  1324  3028               	bcf	status, 5	;RP0=0, select bank0
  6237  1325  1283               	bcf	status, 6	;RP1=0, select bank0
  6238  1326  1303               	movwf	(20)	;volatile
  6239  1327  0094               	line	19
  6240                           	
  6241                           l3680:	
  6242  1328                     ;I2C.c: 19:     SSPCON2 = 0;
  6243                           	bsf	status, 5	;RP0=1, select bank1
  6244  1328  1683               	bcf	status, 6	;RP1=0, select bank1
  6245  1329  1303               	clrf	(145)^080h	;volatile
  6246  132A  0191               	line	20
  6247                           	
  6248                           l3682:	
  6249  132B                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  6250                           	bcf	status, 5	;RP0=0, select bank0
  6251  132B  1283               	bcf	status, 6	;RP1=0, select bank0
  6252  132C  1303               	movf	(I2C_Master_Init@c),w
  6253  132D  082D               	movwf	(??_I2C_Master_Init+0)+0
  6254  132E  00F4               	movf	(I2C_Master_Init@c+1),w
  6255  132F  082E               	movwf	((??_I2C_Master_Init+0)+0+1)
  6256  1330  00F5               	movf	(I2C_Master_Init@c+2),w
  6257  1331  082F               	movwf	((??_I2C_Master_Init+0)+0+2)
  6258  1332  00F6               	movf	(I2C_Master_Init@c+3),w
  6259  1333  0830               	movwf	((??_I2C_Master_Init+0)+0+3)
  6260  1334  00F7               	movlw	02h
  6261  1335  3002               u5305:
  6262  1336                     	clrc
  6263  1336  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  6264  1337  0DF4               	rlf	(??_I2C_Master_Init+0)+1,f
  6265  1338  0DF5               	rlf	(??_I2C_Master_Init+0)+2,f
  6266  1339  0DF6               	rlf	(??_I2C_Master_Init+0)+3,f
  6267  133A  0DF7               u5300:
  6268  133B                     	addlw	-1
  6269  133B  3EFF               	skipz
  6270  133C  1D03               	goto	u5305
  6271  133D  2B36               	movf	3+(??_I2C_Master_Init+0)+0,w
  6272  133E  0877               	movwf	(___lldiv@divisor+3)
  6273  133F  00A3               	movf	2+(??_I2C_Master_Init+0)+0,w
  6274  1340  0876               	movwf	(___lldiv@divisor+2)
  6275  1341  00A2               	movf	1+(??_I2C_Master_Init+0)+0,w
  6276  1342  0875               	movwf	(___lldiv@divisor+1)
  6277  1343  00A1               	movf	0+(??_I2C_Master_Init+0)+0,w
  6278  1344  0874               	movwf	(___lldiv@divisor)
  6279  1345  00A0               
  6280                           	movlw	0
  6281  1346  3000               	movwf	(___lldiv@dividend+3)
  6282  1347  00A7               	movlw	03Dh
  6283  1348  303D               	movwf	(___lldiv@dividend+2)
  6284  1349  00A6               	movlw	09h
  6285  134A  3009               	movwf	(___lldiv@dividend+1)
  6286  134B  00A5               	movlw	0
  6287  134C  3000               	movwf	(___lldiv@dividend)
  6288  134D  00A4               
  6289                           	fcall	___lldiv
  6290  134E  160A  118A  24D5  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  6291  1353  1283               	bcf	status, 6	;RP1=0, select bank0
  6292  1354  1303               	movf	(0+(?___lldiv)),w
  6293  1355  0820               	addlw	0FFh
  6294  1356  3EFF               	bsf	status, 5	;RP0=1, select bank1
  6295  1357  1683               	bcf	status, 6	;RP1=0, select bank1
  6296  1358  1303               	movwf	(147)^080h	;volatile
  6297  1359  0093               	line	21
  6298                           	
  6299                           l3684:	
  6300  135A                     ;I2C.c: 21:     SSPSTAT = 0;
  6301                           	clrf	(148)^080h	;volatile
  6302  135A  0194               	line	22
  6303                           	
  6304                           l3686:	
  6305  135B                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  6306                           	bsf	(135)^080h,3	;volatile
  6307  135B  1587               	line	23
  6308                           	
  6309                           l3688:	
  6310  135C                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  6311                           	bsf	(135)^080h,4	;volatile
  6312  135C  1607               	line	24
  6313                           	
  6314                           l29:	
  6315  135D                     	return
  6316  135D  0008               	opt stack 0
  6317                           GLOBAL	__end_of_I2C_Master_Init
  6318                           	__end_of_I2C_Master_Init:
  6319  135E                     	signat	_I2C_Master_Init,4217
  6320                           	global	___lldiv
  6321                           
  6322 ;; *************** function ___lldiv *****************
  6323 ;; Defined at:
  6324 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  6325 ;; Parameters:    Size  Location     Type
  6326 ;;  divisor         4    0[BANK0 ] unsigned long 
  6327 ;;  dividend        4    4[BANK0 ] unsigned long 
  6328 ;; Auto vars:     Size  Location     Type
  6329 ;;  quotient        4    8[BANK0 ] unsigned long 
  6330 ;;  counter         1   12[BANK0 ] unsigned char 
  6331 ;; Return value:  Size  Location     Type
  6332 ;;                  4    0[BANK0 ] unsigned long 
  6333 ;; Registers used:
  6334 ;;		wreg, status,2, status,0
  6335 ;; Tracked objects:
  6336 ;;		On entry : 0/0
  6337 ;;		On exit  : 0/0
  6338 ;;		Unchanged: 0/0
  6339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6340 ;;      Params:         0       8       0       0       0
  6341 ;;      Locals:         0       5       0       0       0
  6342 ;;      Temps:          1       0       0       0       0
  6343 ;;      Totals:         1      13       0       0       0
  6344 ;;Total ram usage:       14 bytes
  6345 ;; Hardware stack levels used:    1
  6346 ;; Hardware stack levels required when called:    2
  6347 ;; This function calls:
  6348 ;;		Nothing
  6349 ;; This function is called by:
  6350 ;;		_I2C_Master_Init
  6351 ;; This function uses a non-reentrant model
  6352 ;;
  6353                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  6354                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  6355                           	line	5
  6356                           global __ptext12
  6357                           __ptext12:	;psect for function ___lldiv
  6358  14D5                     psect	text12
  6359                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  6360                           	line	5
  6361                           	global	__size_of___lldiv
  6362                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  6363  006F                     	
  6364                           ___lldiv:	
  6365  14D5                     ;incstack = 0
  6366                           	opt	stack 3
  6367                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6368                           	line	13
  6369                           	
  6370                           l3628:	
  6371  14D5                     	movlw	high highword(0)
  6372  14D5  3000               	bcf	status, 5	;RP0=0, select bank0
  6373  14D6  1283               	bcf	status, 6	;RP1=0, select bank0
  6374  14D7  1303               	movwf	(___lldiv@quotient+3)
  6375  14D8  00AB               	movlw	low highword(0)
  6376  14D9  3000               	movwf	(___lldiv@quotient+2)
  6377  14DA  00AA               	movlw	high(0)
  6378  14DB  3000               	movwf	(___lldiv@quotient+1)
  6379  14DC  00A9               	movlw	low(0)
  6380  14DD  3000               	movwf	(___lldiv@quotient)
  6381  14DE  00A8               
  6382                           	line	14
  6383                           	movf	(___lldiv@divisor+3),w
  6384  14DF  0823               	iorwf	(___lldiv@divisor+2),w
  6385  14E0  0422               	iorwf	(___lldiv@divisor+1),w
  6386  14E1  0421               	iorwf	(___lldiv@divisor),w
  6387  14E2  0420               	skipnz
  6388  14E3  1903               	goto	u5161
  6389  14E4  2CE6               	goto	u5160
  6390  14E5  2CE7               u5161:
  6391  14E6                     	goto	l3648
  6392  14E6  2D3A               u5160:
  6393  14E7                     	line	15
  6394                           	
  6395                           l3630:	
  6396  14E7                     	clrf	(___lldiv@counter)
  6397  14E7  01AC               	incf	(___lldiv@counter),f
  6398  14E8  0AAC               	line	16
  6399                           	goto	l3634
  6400  14E9  2CF8               	
  6401                           l558:	
  6402  14EA                     	line	17
  6403                           	
  6404                           l3632:	
  6405  14EA                     	movlw	01h
  6406  14EA  3001               	movwf	(??___lldiv+0)+0
  6407  14EB  00F3               u5175:
  6408  14EC                     	clrc
  6409  14EC  1003               	rlf	(___lldiv@divisor),f
  6410  14ED  0DA0               	rlf	(___lldiv@divisor+1),f
  6411  14EE  0DA1               	rlf	(___lldiv@divisor+2),f
  6412  14EF  0DA2               	rlf	(___lldiv@divisor+3),f
  6413  14F0  0DA3               	decfsz	(??___lldiv+0)+0
  6414  14F1  0BF3               	goto	u5175
  6415  14F2  2CEC               	line	18
  6416                           	movlw	low(01h)
  6417  14F3  3001               	movwf	(??___lldiv+0)+0
  6418  14F4  00F3               	movf	(??___lldiv+0)+0,w
  6419  14F5  0873               	addwf	(___lldiv@counter),f
  6420  14F6  07AC               	goto	l3634
  6421  14F7  2CF8               	line	19
  6422                           	
  6423                           l557:	
  6424  14F8                     	line	16
  6425                           	
  6426                           l3634:	
  6427  14F8                     	btfss	(___lldiv@divisor+3),(31)&7
  6428  14F8  1FA3               	goto	u5181
  6429  14F9  2CFB               	goto	u5180
  6430  14FA  2CFC               u5181:
  6431  14FB                     	goto	l3632
  6432  14FB  2CEA               u5180:
  6433  14FC                     	goto	l3636
  6434  14FC  2CFE               	
  6435                           l559:	
  6436  14FD                     	goto	l3636
  6437  14FD  2CFE               	line	20
  6438                           	
  6439                           l560:	
  6440  14FE                     	line	21
  6441                           	
  6442                           l3636:	
  6443  14FE                     	movlw	01h
  6444  14FE  3001               	movwf	(??___lldiv+0)+0
  6445  14FF  00F3               u5195:
  6446  1500                     	clrc
  6447  1500  1003               	rlf	(___lldiv@quotient),f
  6448  1501  0DA8               	rlf	(___lldiv@quotient+1),f
  6449  1502  0DA9               	rlf	(___lldiv@quotient+2),f
  6450  1503  0DAA               	rlf	(___lldiv@quotient+3),f
  6451  1504  0DAB               	decfsz	(??___lldiv+0)+0
  6452  1505  0BF3               	goto	u5195
  6453  1506  2D00               	line	22
  6454                           	
  6455                           l3638:	
  6456  1507                     	movf	(___lldiv@divisor+3),w
  6457  1507  0823               	subwf	(___lldiv@dividend+3),w
  6458  1508  0227               	skipz
  6459  1509  1D03               	goto	u5205
  6460  150A  2D15               	movf	(___lldiv@divisor+2),w
  6461  150B  0822               	subwf	(___lldiv@dividend+2),w
  6462  150C  0226               	skipz
  6463  150D  1D03               	goto	u5205
  6464  150E  2D15               	movf	(___lldiv@divisor+1),w
  6465  150F  0821               	subwf	(___lldiv@dividend+1),w
  6466  1510  0225               	skipz
  6467  1511  1D03               	goto	u5205
  6468  1512  2D15               	movf	(___lldiv@divisor),w
  6469  1513  0820               	subwf	(___lldiv@dividend),w
  6470  1514  0224               u5205:
  6471  1515                     	skipc
  6472  1515  1C03               	goto	u5201
  6473  1516  2D18               	goto	u5200
  6474  1517  2D19               u5201:
  6475  1518                     	goto	l3644
  6476  1518  2D29               u5200:
  6477  1519                     	line	23
  6478                           	
  6479                           l3640:	
  6480  1519                     	movf	(___lldiv@divisor),w
  6481  1519  0820               	subwf	(___lldiv@dividend),f
  6482  151A  02A4               	movf	(___lldiv@divisor+1),w
  6483  151B  0821               	skipc
  6484  151C  1C03               	incfsz	(___lldiv@divisor+1),w
  6485  151D  0F21               	subwf	(___lldiv@dividend+1),f
  6486  151E  02A5               	movf	(___lldiv@divisor+2),w
  6487  151F  0822               	skipc
  6488  1520  1C03               	incfsz	(___lldiv@divisor+2),w
  6489  1521  0F22               	subwf	(___lldiv@dividend+2),f
  6490  1522  02A6               	movf	(___lldiv@divisor+3),w
  6491  1523  0823               	skipc
  6492  1524  1C03               	incfsz	(___lldiv@divisor+3),w
  6493  1525  0F23               	subwf	(___lldiv@dividend+3),f
  6494  1526  02A7               	line	24
  6495                           	
  6496                           l3642:	
  6497  1527                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  6498  1527  1428               	goto	l3644
  6499  1528  2D29               	line	25
  6500                           	
  6501                           l561:	
  6502  1529                     	line	26
  6503                           	
  6504                           l3644:	
  6505  1529                     	movlw	01h
  6506  1529  3001               u5215:
  6507  152A                     	clrc
  6508  152A  1003               	rrf	(___lldiv@divisor+3),f
  6509  152B  0CA3               	rrf	(___lldiv@divisor+2),f
  6510  152C  0CA2               	rrf	(___lldiv@divisor+1),f
  6511  152D  0CA1               	rrf	(___lldiv@divisor),f
  6512  152E  0CA0               	addlw	-1
  6513  152F  3EFF               	skipz
  6514  1530  1D03               	goto	u5215
  6515  1531  2D2A               
  6516                           	line	27
  6517                           	
  6518                           l3646:	
  6519  1532                     	movlw	01h
  6520  1532  3001               	subwf	(___lldiv@counter),f
  6521  1533  02AC               	btfss	status,2
  6522  1534  1D03               	goto	u5221
  6523  1535  2D37               	goto	u5220
  6524  1536  2D38               u5221:
  6525  1537                     	goto	l3636
  6526  1537  2CFE               u5220:
  6527  1538                     	goto	l3648
  6528  1538  2D3A               	
  6529                           l562:	
  6530  1539                     	goto	l3648
  6531  1539  2D3A               	line	28
  6532                           	
  6533                           l556:	
  6534  153A                     	line	29
  6535                           	
  6536                           l3648:	
  6537  153A                     	movf	(___lldiv@quotient+3),w
  6538  153A  082B               	movwf	(?___lldiv+3)
  6539  153B  00A3               	movf	(___lldiv@quotient+2),w
  6540  153C  082A               	movwf	(?___lldiv+2)
  6541  153D  00A2               	movf	(___lldiv@quotient+1),w
  6542  153E  0829               	movwf	(?___lldiv+1)
  6543  153F  00A1               	movf	(___lldiv@quotient),w
  6544  1540  0828               	movwf	(?___lldiv)
  6545  1541  00A0               
  6546                           	goto	l563
  6547  1542  2D43               	
  6548                           l3650:	
  6549  1543                     	line	30
  6550                           	
  6551                           l563:	
  6552  1543                     	return
  6553  1543  0008               	opt stack 0
  6554                           GLOBAL	__end_of___lldiv
  6555                           	__end_of___lldiv:
  6556  1544                     	signat	___lldiv,8316
  6557                           	global	_setCursorLCD
  6558                           
  6559 ;; *************** function _setCursorLCD *****************
  6560 ;; Defined at:
  6561 ;;		line 8 in file "LCD.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  y               1    wreg     unsigned char 
  6564 ;;  x               1    6[COMMON] unsigned char 
  6565 ;; Auto vars:     Size  Location     Type
  6566 ;;  y               1    0[BANK0 ] unsigned char 
  6567 ;; Return value:  Size  Location     Type
  6568 ;;                  1    wreg      void 
  6569 ;; Registers used:
  6570 ;;		wreg, status,2, status,0, pclath, cstack
  6571 ;; Tracked objects:
  6572 ;;		On entry : 0/0
  6573 ;;		On exit  : 0/0
  6574 ;;		Unchanged: 0/0
  6575 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6576 ;;      Params:         1       0       0       0       0
  6577 ;;      Locals:         0       1       0       0       0
  6578 ;;      Temps:          1       0       0       0       0
  6579 ;;      Totals:         2       1       0       0       0
  6580 ;;Total ram usage:        3 bytes
  6581 ;; Hardware stack levels used:    1
  6582 ;; Hardware stack levels required when called:    3
  6583 ;; This function calls:
  6584 ;;		_cmdLCD
  6585 ;; This function is called by:
  6586 ;;		_main
  6587 ;;		_writeFloat
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6591                           	file	"LCD.c"
  6592                           	line	8
  6593                           global __ptext13
  6594                           __ptext13:	;psect for function _setCursorLCD
  6595  121C                     psect	text13
  6596                           	file	"LCD.c"
  6597                           	line	8
  6598                           	global	__size_of_setCursorLCD
  6599                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  6600  001F                     	
  6601                           _setCursorLCD:	
  6602  121C                     ;incstack = 0
  6603                           	opt	stack 4
  6604                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  6605                           ;setCursorLCD@y stored from wreg
  6606                           	bcf	status, 5	;RP0=0, select bank0
  6607  121C  1283               	bcf	status, 6	;RP1=0, select bank0
  6608  121D  1303               	movwf	(setCursorLCD@y)
  6609  121E  00A0               	line	9
  6610                           	
  6611                           l3812:	
  6612  121F                     ;LCD.c: 9:     if(y == 1){
  6613                           		decf	((setCursorLCD@y)),w
  6614  121F  0320               	btfss	status,2
  6615  1220  1D03               	goto	u5451
  6616  1221  2A23               	goto	u5450
  6617  1222  2A24               u5451:
  6618  1223                     	goto	l3816
  6619  1223  2A2C               u5450:
  6620  1224                     	line	10
  6621                           	
  6622                           l3814:	
  6623  1224                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  6624                           	movf	(setCursorLCD@x),w
  6625  1224  0876               	addlw	07Fh
  6626  1225  3E7F               	movwf	(??_setCursorLCD+0)+0
  6627  1226  00F7               	movf	(??_setCursorLCD+0)+0,w
  6628  1227  0877               	bsf	status, 5	;RP0=1, select bank1
  6629  1228  1683               	bcf	status, 6	;RP1=0, select bank1
  6630  1229  1303               	movwf	(_cursor)^080h
  6631  122A  00C4               	line	11
  6632                           ;LCD.c: 11:     }else{
  6633                           	goto	l3818
  6634  122B  2A34               	
  6635                           l74:	
  6636  122C                     	line	12
  6637                           	
  6638                           l3816:	
  6639  122C                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  6640                           	movf	(setCursorLCD@x),w
  6641  122C  0876               	addlw	0BFh
  6642  122D  3EBF               	movwf	(??_setCursorLCD+0)+0
  6643  122E  00F7               	movf	(??_setCursorLCD+0)+0,w
  6644  122F  0877               	bsf	status, 5	;RP0=1, select bank1
  6645  1230  1683               	bcf	status, 6	;RP1=0, select bank1
  6646  1231  1303               	movwf	(_cursor)^080h
  6647  1232  00C4               	goto	l3818
  6648  1233  2A34               	line	13
  6649                           ;LCD.c: 13:     }
  6650                           	
  6651                           l75:	
  6652  1234                     	line	14
  6653                           	
  6654                           l3818:	
  6655  1234                     ;LCD.c: 14:     cmdLCD(cursor);
  6656                           	movf	(_cursor)^080h,w
  6657  1234  0844               	fcall	_cmdLCD
  6658  1235  160A  118A  21D5  160A  118A  	line	15
  6659                           	
  6660                           l76:	
  6661  123A                     	return
  6662  123A  0008               	opt stack 0
  6663                           GLOBAL	__end_of_setCursorLCD
  6664                           	__end_of_setCursorLCD:
  6665  123B                     	signat	_setCursorLCD,8313
  6666                           	global	_cmdLCD
  6667                           
  6668 ;; *************** function _cmdLCD *****************
  6669 ;; Defined at:
  6670 ;;		line 49 in file "LCD.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  cmd             1    wreg     unsigned char 
  6673 ;; Auto vars:     Size  Location     Type
  6674 ;;  cmd             1    5[COMMON] unsigned char 
  6675 ;; Return value:  Size  Location     Type
  6676 ;;                  1    wreg      void 
  6677 ;; Registers used:
  6678 ;;		wreg
  6679 ;; Tracked objects:
  6680 ;;		On entry : 0/0
  6681 ;;		On exit  : 0/0
  6682 ;;		Unchanged: 0/0
  6683 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6684 ;;      Params:         0       0       0       0       0
  6685 ;;      Locals:         1       0       0       0       0
  6686 ;;      Temps:          2       0       0       0       0
  6687 ;;      Totals:         3       0       0       0       0
  6688 ;;Total ram usage:        3 bytes
  6689 ;; Hardware stack levels used:    1
  6690 ;; Hardware stack levels required when called:    2
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_setCursorLCD
  6695 ;;		_clcLCD
  6696 ;;		_initLCD
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6700                           	line	49
  6701                           global __ptext14
  6702                           __ptext14:	;psect for function _cmdLCD
  6703  11D5                     psect	text14
  6704                           	file	"LCD.c"
  6705                           	line	49
  6706                           	global	__size_of_cmdLCD
  6707                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  6708  0014                     	
  6709                           _cmdLCD:	
  6710  11D5                     ;incstack = 0
  6711                           	opt	stack 3
  6712                           ; Regs used in _cmdLCD: [wreg]
  6713                           ;cmdLCD@cmd stored from wreg
  6714                           	movwf	(cmdLCD@cmd)
  6715  11D5  00F5               	line	50
  6716                           	
  6717                           l3620:	
  6718  11D6                     ;LCD.c: 50:     RD0 = 0;
  6719                           	bcf	status, 5	;RP0=0, select bank0
  6720  11D6  1283               	bcf	status, 6	;RP1=0, select bank0
  6721  11D7  1303               	bcf	(64/8),(64)&7	;volatile
  6722  11D8  1008               	line	51
  6723                           	
  6724                           l3622:	
  6725  11D9                     ;LCD.c: 51:  PORTB = cmd;
  6726                           	movf	(cmdLCD@cmd),w
  6727  11D9  0875               	movwf	(6)	;volatile
  6728  11DA  0086               	line	52
  6729                           	
  6730                           l3624:	
  6731  11DB                     ;LCD.c: 52:  RD1 = 1;
  6732                           	bsf	(65/8),(65)&7	;volatile
  6733  11DB  1488               	line	53
  6734                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  6735                           	opt asmopt_push
  6736                           opt asmopt_off
  6737                           movlw	6
  6738  11DC  3006               movwf	((??_cmdLCD+0)+0+1),f
  6739  11DD  00F4               	movlw	48
  6740  11DE  3030               movwf	((??_cmdLCD+0)+0),f
  6741  11DF  00F3               	u6357:
  6742  11E0                     decfsz	((??_cmdLCD+0)+0),f
  6743  11E0  0BF3               	goto	u6357
  6744  11E1  29E0               	decfsz	((??_cmdLCD+0)+0+1),f
  6745  11E2  0BF4               	goto	u6357
  6746  11E3  29E0               	nop
  6747  11E4  0000               opt asmopt_pop
  6748                           
  6749                           	line	54
  6750                           	
  6751                           l3626:	
  6752  11E5                     ;LCD.c: 54:     RD1 = 0;
  6753                           	bcf	status, 5	;RP0=0, select bank0
  6754  11E5  1283               	bcf	status, 6	;RP1=0, select bank0
  6755  11E6  1303               	bcf	(65/8),(65)&7	;volatile
  6756  11E7  1088               	line	55
  6757                           	
  6758                           l94:	
  6759  11E8                     	return
  6760  11E8  0008               	opt stack 0
  6761                           GLOBAL	__end_of_cmdLCD
  6762                           	__end_of_cmdLCD:
  6763  11E9                     	signat	_cmdLCD,4217
  6764                           	global	_sendUSART
  6765                           
  6766 ;; *************** function _sendUSART *****************
  6767 ;; Defined at:
  6768 ;;		line 43 in file "USART.c"
  6769 ;; Parameters:    Size  Location     Type
  6770 ;;  data            1    wreg     unsigned char 
  6771 ;; Auto vars:     Size  Location     Type
  6772 ;;  data            1    4[COMMON] unsigned char 
  6773 ;; Return value:  Size  Location     Type
  6774 ;;                  1    wreg      void 
  6775 ;; Registers used:
  6776 ;;		wreg
  6777 ;; Tracked objects:
  6778 ;;		On entry : 0/0
  6779 ;;		On exit  : 0/0
  6780 ;;		Unchanged: 0/0
  6781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6782 ;;      Params:         0       0       0       0       0
  6783 ;;      Locals:         1       0       0       0       0
  6784 ;;      Temps:          1       0       0       0       0
  6785 ;;      Totals:         2       0       0       0       0
  6786 ;;Total ram usage:        2 bytes
  6787 ;; Hardware stack levels used:    1
  6788 ;; Hardware stack levels required when called:    2
  6789 ;; This function calls:
  6790 ;;		Nothing
  6791 ;; This function is called by:
  6792 ;;		_main
  6793 ;; This function uses a non-reentrant model
  6794 ;;
  6795                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  6796                           	file	"USART.c"
  6797                           	line	43
  6798                           global __ptext15
  6799                           __ptext15:	;psect for function _sendUSART
  6800  11E9                     psect	text15
  6801                           	file	"USART.c"
  6802                           	line	43
  6803                           	global	__size_of_sendUSART
  6804                           	__size_of_sendUSART	equ	__end_of_sendUSART-_sendUSART
  6805  0015                     	
  6806                           _sendUSART:	
  6807  11E9                     ;incstack = 0
  6808                           	opt	stack 5
  6809                           ; Regs used in _sendUSART: [wreg]
  6810                           ;sendUSART@data stored from wreg
  6811                           	movwf	(sendUSART@data)
  6812  11E9  00F4               	line	44
  6813                           	
  6814                           l2646:	
  6815  11EA                     ;USART.c: 44:     while (TXSTAbits.TRMT == 0){}
  6816                           	goto	l410
  6817  11EA  29EB               	
  6818                           l411:	
  6819  11EB                     	
  6820                           l410:	
  6821  11EB                     	bsf	status, 5	;RP0=1, select bank1
  6822  11EB  1683               	bcf	status, 6	;RP1=0, select bank1
  6823  11EC  1303               	btfss	(152)^080h,1	;volatile
  6824  11ED  1C98               	goto	u3051
  6825  11EE  29F0               	goto	u3050
  6826  11EF  29F1               u3051:
  6827  11F0                     	goto	l410
  6828  11F0  29EB               u3050:
  6829  11F1                     	goto	l2648
  6830  11F1  29F2               	
  6831                           l412:	
  6832  11F2                     	line	45
  6833                           	
  6834                           l2648:	
  6835  11F2                     ;USART.c: 45:     TXREG = data;
  6836                           	movf	(sendUSART@data),w
  6837  11F2  0874               	bcf	status, 5	;RP0=0, select bank0
  6838  11F3  1283               	bcf	status, 6	;RP1=0, select bank0
  6839  11F4  1303               	movwf	(25)	;volatile
  6840  11F5  0099               	line	46
  6841                           ;USART.c: 46:     _delay((unsigned long)((1)*(4000000/4000.0)));
  6842                           	opt asmopt_push
  6843                           opt asmopt_off
  6844                           	movlw	199
  6845  11F6  30C7               movwf	((??_sendUSART+0)+0),f
  6846  11F7  00F3               	u6367:
  6847  11F8                     	nop2
  6848  11F8  29F9               decfsz	(??_sendUSART+0)+0,f
  6849  11F9  0BF3               	goto	u6367
  6850  11FA  29F8               	nop2
  6851  11FB  29FC               	nop2
  6852  11FC  29FD               opt asmopt_pop
  6853                           
  6854                           	line	47
  6855                           	
  6856                           l413:	
  6857  11FD                     	return
  6858  11FD  0008               	opt stack 0
  6859                           GLOBAL	__end_of_sendUSART
  6860                           	__end_of_sendUSART:
  6861  11FE                     	signat	_sendUSART,4217
  6862                           	global	___xxtofl
  6863                           
  6864 ;; *************** function ___xxtofl *****************
  6865 ;; Defined at:
  6866 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  6867 ;; Parameters:    Size  Location     Type
  6868 ;;  sign            1    wreg     unsigned char 
  6869 ;;  val             4    3[COMMON] long 
  6870 ;; Auto vars:     Size  Location     Type
  6871 ;;  sign            1    4[BANK0 ] unsigned char 
  6872 ;;  arg             4    6[BANK0 ] unsigned long 
  6873 ;;  exp             1    5[BANK0 ] unsigned char 
  6874 ;; Return value:  Size  Location     Type
  6875 ;;                  4    3[COMMON] unsigned char 
  6876 ;; Registers used:
  6877 ;;		wreg, status,2, status,0
  6878 ;; Tracked objects:
  6879 ;;		On entry : 0/0
  6880 ;;		On exit  : 0/0
  6881 ;;		Unchanged: 0/0
  6882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6883 ;;      Params:         4       0       0       0       0
  6884 ;;      Locals:         0       6       0       0       0
  6885 ;;      Temps:          0       4       0       0       0
  6886 ;;      Totals:         4      10       0       0       0
  6887 ;;Total ram usage:       14 bytes
  6888 ;; Hardware stack levels used:    1
  6889 ;; Hardware stack levels required when called:    2
  6890 ;; This function calls:
  6891 ;;		Nothing
  6892 ;; This function is called by:
  6893 ;;		_main
  6894 ;; This function uses a non-reentrant model
  6895 ;;
  6896                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  6897                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  6898                           	line	10
  6899                           global __ptext16
  6900                           __ptext16:	;psect for function ___xxtofl
  6901  06C7                     psect	text16
  6902                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  6903                           	line	10
  6904                           	global	__size_of___xxtofl
  6905                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  6906  00C4                     	
  6907                           ___xxtofl:	
  6908  06C7                     ;incstack = 0
  6909                           	opt	stack 5
  6910                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6911                           ;___xxtofl@sign stored from wreg
  6912                           	bcf	status, 5	;RP0=0, select bank0
  6913  06C7  1283               	bcf	status, 6	;RP1=0, select bank0
  6914  06C8  1303               	movwf	(___xxtofl@sign)
  6915  06C9  00A4               	line	15
  6916                           	
  6917                           l3930:	
  6918  06CA                     	movf	((___xxtofl@sign)),w
  6919  06CA  0824               	btfsc	status,2
  6920  06CB  1903               	goto	u5691
  6921  06CC  2ECE               	goto	u5690
  6922  06CD  2ECF               u5691:
  6923  06CE                     	goto	l3936
  6924  06CE  2EE3               u5690:
  6925  06CF                     	
  6926                           l3932:	
  6927  06CF                     	btfss	(___xxtofl@val+3),7
  6928  06CF  1FF6               	goto	u5701
  6929  06D0  2ED2               	goto	u5700
  6930  06D1  2ED3               u5701:
  6931  06D2                     	goto	l3936
  6932  06D2  2EE3               u5700:
  6933  06D3                     	line	16
  6934                           	
  6935                           l3934:	
  6936  06D3                     	comf	(___xxtofl@val)+0,w
  6937  06D3  0973               	movwf	(___xxtofl@arg)
  6938  06D4  00A6               	comf	(___xxtofl@val)+1,w
  6939  06D5  0974               	movwf	(___xxtofl@arg+1)
  6940  06D6  00A7               	comf	(___xxtofl@val)+2,w
  6941  06D7  0975               	movwf	(___xxtofl@arg+2)
  6942  06D8  00A8               	comf	(___xxtofl@val)+3,w
  6943  06D9  0976               	movwf	(___xxtofl@arg+3)
  6944  06DA  00A9               	incf	(___xxtofl@arg),f
  6945  06DB  0AA6               	skipnz
  6946  06DC  1903               	incf	(___xxtofl@arg+1),f
  6947  06DD  0AA7               	skipnz
  6948  06DE  1903               	incf	(___xxtofl@arg+2),f
  6949  06DF  0AA8               	skipnz
  6950  06E0  1903               	incf	(___xxtofl@arg+3),f
  6951  06E1  0AA9               	line	17
  6952                           	goto	l935
  6953  06E2  2EEB               	line	18
  6954                           	
  6955                           l934:	
  6956  06E3                     	line	19
  6957                           	
  6958                           l3936:	
  6959  06E3                     	movf	(___xxtofl@val+3),w
  6960  06E3  0876               	movwf	(___xxtofl@arg+3)
  6961  06E4  00A9               	movf	(___xxtofl@val+2),w
  6962  06E5  0875               	movwf	(___xxtofl@arg+2)
  6963  06E6  00A8               	movf	(___xxtofl@val+1),w
  6964  06E7  0874               	movwf	(___xxtofl@arg+1)
  6965  06E8  00A7               	movf	(___xxtofl@val),w
  6966  06E9  0873               	movwf	(___xxtofl@arg)
  6967  06EA  00A6               
  6968                           	line	20
  6969                           	
  6970                           l935:	
  6971  06EB                     	line	21
  6972                           	movf	(___xxtofl@val+3),w
  6973  06EB  0876               	iorwf	(___xxtofl@val+2),w
  6974  06EC  0475               	iorwf	(___xxtofl@val+1),w
  6975  06ED  0474               	iorwf	(___xxtofl@val),w
  6976  06EE  0473               	skipz
  6977  06EF  1D03               	goto	u5711
  6978  06F0  2EF2               	goto	u5710
  6979  06F1  2EF3               u5711:
  6980  06F2                     	goto	l3942
  6981  06F2  2EFD               u5710:
  6982  06F3                     	line	22
  6983                           	
  6984                           l3938:	
  6985  06F3                     	movlw	0x0
  6986  06F3  3000               	movwf	(?___xxtofl+3)
  6987  06F4  00F6               	movlw	0x0
  6988  06F5  3000               	movwf	(?___xxtofl+2)
  6989  06F6  00F5               	movlw	0x0
  6990  06F7  3000               	movwf	(?___xxtofl+1)
  6991  06F8  00F4               	movlw	0x0
  6992  06F9  3000               	movwf	(?___xxtofl)
  6993  06FA  00F3               
  6994                           	goto	l937
  6995  06FB  2F8A               	
  6996                           l3940:	
  6997  06FC                     	goto	l937
  6998  06FC  2F8A               	
  6999                           l936:	
  7000  06FD                     	line	23
  7001                           	
  7002                           l3942:	
  7003  06FD                     	movlw	low(096h)
  7004  06FD  3096               	movwf	(??___xxtofl+0)+0
  7005  06FE  00A0               	movf	(??___xxtofl+0)+0,w
  7006  06FF  0820               	movwf	(___xxtofl@exp)
  7007  0700  00A5               	line	24
  7008                           	goto	l3946
  7009  0701  2F10               	
  7010                           l939:	
  7011  0702                     	line	25
  7012                           	
  7013                           l3944:	
  7014  0702                     	movlw	low(01h)
  7015  0702  3001               	movwf	(??___xxtofl+0)+0
  7016  0703  00A0               	movf	(??___xxtofl+0)+0,w
  7017  0704  0820               	addwf	(___xxtofl@exp),f
  7018  0705  07A5               	line	26
  7019                           	movlw	01h
  7020  0706  3001               u5725:
  7021  0707                     	clrc
  7022  0707  1003               	rrf	(___xxtofl@arg+3),f
  7023  0708  0CA9               	rrf	(___xxtofl@arg+2),f
  7024  0709  0CA8               	rrf	(___xxtofl@arg+1),f
  7025  070A  0CA7               	rrf	(___xxtofl@arg),f
  7026  070B  0CA6               	addlw	-1
  7027  070C  3EFF               	skipz
  7028  070D  1D03               	goto	u5725
  7029  070E  2F07               
  7030                           	goto	l3946
  7031  070F  2F10               	line	27
  7032                           	
  7033                           l938:	
  7034  0710                     	line	24
  7035                           	
  7036                           l3946:	
  7037  0710                     	movlw	high highword(0FE000000h)
  7038  0710  30FE               	andwf	(___xxtofl@arg+3),w
  7039  0711  0529               	btfss	status,2
  7040  0712  1D03               	goto	u5731
  7041  0713  2F15               	goto	u5730
  7042  0714  2F16               u5731:
  7043  0715                     	goto	l3944
  7044  0715  2F02               u5730:
  7045  0716                     	goto	l941
  7046  0716  2F33               	
  7047                           l940:	
  7048  0717                     	line	28
  7049                           	goto	l941
  7050  0717  2F33               	
  7051                           l942:	
  7052  0718                     	line	29
  7053                           	
  7054                           l3948:	
  7055  0718                     	movlw	low(01h)
  7056  0718  3001               	movwf	(??___xxtofl+0)+0
  7057  0719  00A0               	movf	(??___xxtofl+0)+0,w
  7058  071A  0820               	addwf	(___xxtofl@exp),f
  7059  071B  07A5               	line	30
  7060                           	
  7061                           l3950:	
  7062  071C                     	movlw	01h
  7063  071C  3001               	addwf	(___xxtofl@arg),f
  7064  071D  07A6               	movlw	0
  7065  071E  3000               	skipnc
  7066  071F  1803               movlw 1
  7067  0720  3001               	addwf	(___xxtofl@arg+1),f
  7068  0721  07A7               	movlw	0
  7069  0722  3000               	skipnc
  7070  0723  1803               movlw 1
  7071  0724  3001               	addwf	(___xxtofl@arg+2),f
  7072  0725  07A8               	movlw	0
  7073  0726  3000               	skipnc
  7074  0727  1803               movlw 1
  7075  0728  3001               	addwf	(___xxtofl@arg+3),f
  7076  0729  07A9               	line	31
  7077                           	
  7078                           l3952:	
  7079  072A                     	movlw	01h
  7080  072A  3001               u5745:
  7081  072B                     	clrc
  7082  072B  1003               	rrf	(___xxtofl@arg+3),f
  7083  072C  0CA9               	rrf	(___xxtofl@arg+2),f
  7084  072D  0CA8               	rrf	(___xxtofl@arg+1),f
  7085  072E  0CA7               	rrf	(___xxtofl@arg),f
  7086  072F  0CA6               	addlw	-1
  7087  0730  3EFF               	skipz
  7088  0731  1D03               	goto	u5745
  7089  0732  2F2B               
  7090                           	line	32
  7091                           	
  7092                           l941:	
  7093  0733                     	line	28
  7094                           	movlw	high highword(0FF000000h)
  7095  0733  30FF               	andwf	(___xxtofl@arg+3),w
  7096  0734  0529               	btfss	status,2
  7097  0735  1D03               	goto	u5751
  7098  0736  2F38               	goto	u5750
  7099  0737  2F39               u5751:
  7100  0738                     	goto	l3948
  7101  0738  2F18               u5750:
  7102  0739                     	goto	l3956
  7103  0739  2F47               	
  7104                           l943:	
  7105  073A                     	line	33
  7106                           	goto	l3956
  7107  073A  2F47               	
  7108                           l945:	
  7109  073B                     	line	34
  7110                           	
  7111                           l3954:	
  7112  073B                     	movlw	01h
  7113  073B  3001               	subwf	(___xxtofl@exp),f
  7114  073C  02A5               	line	35
  7115                           	movlw	01h
  7116  073D  3001               	movwf	(??___xxtofl+0)+0
  7117  073E  00A0               u5765:
  7118  073F                     	clrc
  7119  073F  1003               	rlf	(___xxtofl@arg),f
  7120  0740  0DA6               	rlf	(___xxtofl@arg+1),f
  7121  0741  0DA7               	rlf	(___xxtofl@arg+2),f
  7122  0742  0DA8               	rlf	(___xxtofl@arg+3),f
  7123  0743  0DA9               	decfsz	(??___xxtofl+0)+0
  7124  0744  0BA0               	goto	u5765
  7125  0745  2F3F               	goto	l3956
  7126  0746  2F47               	line	36
  7127                           	
  7128                           l944:	
  7129  0747                     	line	33
  7130                           	
  7131                           l3956:	
  7132  0747                     	btfsc	(___xxtofl@arg+2),(23)&7
  7133  0747  1BA8               	goto	u5771
  7134  0748  2F4A               	goto	u5770
  7135  0749  2F4B               u5771:
  7136  074A                     	goto	l948
  7137  074A  2F52               u5770:
  7138  074B                     	
  7139                           l3958:	
  7140  074B                     	movlw	low(02h)
  7141  074B  3002               	subwf	(___xxtofl@exp),w
  7142  074C  0225               	skipnc
  7143  074D  1803               	goto	u5781
  7144  074E  2F50               	goto	u5780
  7145  074F  2F51               u5781:
  7146  0750                     	goto	l3954
  7147  0750  2F3B               u5780:
  7148  0751                     	goto	l948
  7149  0751  2F52               	
  7150                           l947:	
  7151  0752                     	
  7152                           l948:	
  7153  0752                     	line	37
  7154                           	btfsc	(___xxtofl@exp),(0)&7
  7155  0752  1825               	goto	u5791
  7156  0753  2F55               	goto	u5790
  7157  0754  2F56               u5791:
  7158  0755                     	goto	l949
  7159  0755  2F5E               u5790:
  7160  0756                     	line	38
  7161                           	
  7162                           l3960:	
  7163  0756                     	movlw	0FFh
  7164  0756  30FF               	andwf	(___xxtofl@arg),f
  7165  0757  05A6               	movlw	0FFh
  7166  0758  30FF               	andwf	(___xxtofl@arg+1),f
  7167  0759  05A7               	movlw	07Fh
  7168  075A  307F               	andwf	(___xxtofl@arg+2),f
  7169  075B  05A8               	movlw	0FFh
  7170  075C  30FF               	andwf	(___xxtofl@arg+3),f
  7171  075D  05A9               	
  7172                           l949:	
  7173  075E                     	line	39
  7174                           	clrc
  7175  075E  1003               	rrf	(___xxtofl@exp),f
  7176  075F  0CA5               
  7177                           	line	40
  7178                           	
  7179                           l3962:	
  7180  0760                     	movf	(___xxtofl@exp),w
  7181  0760  0825               	movwf	(??___xxtofl+0)+0
  7182  0761  00A0               	clrf	(??___xxtofl+0)+0+1
  7183  0762  01A1               	clrf	(??___xxtofl+0)+0+2
  7184  0763  01A2               	clrf	(??___xxtofl+0)+0+3
  7185  0764  01A3               	movlw	018h
  7186  0765  3018               u5805:
  7187  0766                     	clrc
  7188  0766  1003               	rlf	(??___xxtofl+0)+0,f
  7189  0767  0DA0               	rlf	(??___xxtofl+0)+1,f
  7190  0768  0DA1               	rlf	(??___xxtofl+0)+2,f
  7191  0769  0DA2               	rlf	(??___xxtofl+0)+3,f
  7192  076A  0DA3               u5800:
  7193  076B                     	addlw	-1
  7194  076B  3EFF               	skipz
  7195  076C  1D03               	goto	u5805
  7196  076D  2F66               	movf	0+(??___xxtofl+0)+0,w
  7197  076E  0820               	iorwf	(___xxtofl@arg),f
  7198  076F  04A6               	movf	1+(??___xxtofl+0)+0,w
  7199  0770  0821               	iorwf	(___xxtofl@arg+1),f
  7200  0771  04A7               	movf	2+(??___xxtofl+0)+0,w
  7201  0772  0822               	iorwf	(___xxtofl@arg+2),f
  7202  0773  04A8               	movf	3+(??___xxtofl+0)+0,w
  7203  0774  0823               	iorwf	(___xxtofl@arg+3),f
  7204  0775  04A9               	line	41
  7205                           	
  7206                           l3964:	
  7207  0776                     	movf	((___xxtofl@sign)),w
  7208  0776  0824               	btfsc	status,2
  7209  0777  1903               	goto	u5811
  7210  0778  2F7A               	goto	u5810
  7211  0779  2F7B               u5811:
  7212  077A                     	goto	l3970
  7213  077A  2F81               u5810:
  7214  077B                     	
  7215                           l3966:	
  7216  077B                     	btfss	(___xxtofl@val+3),7
  7217  077B  1FF6               	goto	u5821
  7218  077C  2F7E               	goto	u5820
  7219  077D  2F7F               u5821:
  7220  077E                     	goto	l3970
  7221  077E  2F81               u5820:
  7222  077F                     	line	42
  7223                           	
  7224                           l3968:	
  7225  077F                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  7226  077F  17A9               	goto	l3970
  7227  0780  2F81               	
  7228                           l950:	
  7229  0781                     	line	43
  7230                           	
  7231                           l3970:	
  7232  0781                     	movf	(___xxtofl@arg+3),w
  7233  0781  0829               	movwf	(?___xxtofl+3)
  7234  0782  00F6               	movf	(___xxtofl@arg+2),w
  7235  0783  0828               	movwf	(?___xxtofl+2)
  7236  0784  00F5               	movf	(___xxtofl@arg+1),w
  7237  0785  0827               	movwf	(?___xxtofl+1)
  7238  0786  00F4               	movf	(___xxtofl@arg),w
  7239  0787  0826               	movwf	(?___xxtofl)
  7240  0788  00F3               
  7241                           	goto	l937
  7242  0789  2F8A               	
  7243                           l3972:	
  7244  078A                     	line	44
  7245                           	
  7246                           l937:	
  7247  078A                     	return
  7248  078A  0008               	opt stack 0
  7249                           GLOBAL	__end_of___xxtofl
  7250                           	__end_of___xxtofl:
  7251  078B                     	signat	___xxtofl,8316
  7252                           	global	___wmul
  7253                           
  7254 ;; *************** function ___wmul *****************
  7255 ;; Defined at:
  7256 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  multiplier      2    3[COMMON] unsigned int 
  7259 ;;  multiplicand    2    5[COMMON] unsigned int 
  7260 ;; Auto vars:     Size  Location     Type
  7261 ;;  product         2    0[BANK0 ] unsigned int 
  7262 ;; Return value:  Size  Location     Type
  7263 ;;                  2    3[COMMON] unsigned int 
  7264 ;; Registers used:
  7265 ;;		wreg, status,2, status,0
  7266 ;; Tracked objects:
  7267 ;;		On entry : 0/0
  7268 ;;		On exit  : 0/0
  7269 ;;		Unchanged: 0/0
  7270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7271 ;;      Params:         4       0       0       0       0
  7272 ;;      Locals:         0       2       0       0       0
  7273 ;;      Temps:          0       0       0       0       0
  7274 ;;      Totals:         4       2       0       0       0
  7275 ;;Total ram usage:        6 bytes
  7276 ;; Hardware stack levels used:    1
  7277 ;; Hardware stack levels required when called:    2
  7278 ;; This function calls:
  7279 ;;		Nothing
  7280 ;; This function is called by:
  7281 ;;		_main
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  7285                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7286                           	line	15
  7287                           global __ptext17
  7288                           __ptext17:	;psect for function ___wmul
  7289  128C                     psect	text17
  7290                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7291                           	line	15
  7292                           	global	__size_of___wmul
  7293                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  7294  002E                     	
  7295                           ___wmul:	
  7296  128C                     ;incstack = 0
  7297                           	opt	stack 5
  7298                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7299                           	line	43
  7300                           	
  7301                           l3842:	
  7302  128C                     	bcf	status, 5	;RP0=0, select bank0
  7303  128C  1283               	bcf	status, 6	;RP1=0, select bank0
  7304  128D  1303               	clrf	(___wmul@product)
  7305  128E  01A0               	clrf	(___wmul@product+1)
  7306  128F  01A1               	goto	l3844
  7307  1290  2A91               	line	44
  7308                           	
  7309                           l526:	
  7310  1291                     	line	45
  7311                           	
  7312                           l3844:	
  7313  1291                     	btfss	(___wmul@multiplier),(0)&7
  7314  1291  1C73               	goto	u5461
  7315  1292  2A94               	goto	u5460
  7316  1293  2A95               u5461:
  7317  1294                     	goto	l527
  7318  1294  2A9D               u5460:
  7319  1295                     	line	46
  7320                           	
  7321                           l3846:	
  7322  1295                     	movf	(___wmul@multiplicand),w
  7323  1295  0875               	bcf	status, 5	;RP0=0, select bank0
  7324  1296  1283               	bcf	status, 6	;RP1=0, select bank0
  7325  1297  1303               	addwf	(___wmul@product),f
  7326  1298  07A0               	skipnc
  7327  1299  1803               	incf	(___wmul@product+1),f
  7328  129A  0AA1               	movf	(___wmul@multiplicand+1),w
  7329  129B  0876               	addwf	(___wmul@product+1),f
  7330  129C  07A1               	
  7331                           l527:	
  7332  129D                     	line	47
  7333                           	movlw	01h
  7334  129D  3001               	
  7335                           u5475:
  7336  129E                     	clrc
  7337  129E  1003               	rlf	(___wmul@multiplicand),f
  7338  129F  0DF5               	rlf	(___wmul@multiplicand+1),f
  7339  12A0  0DF6               	addlw	-1
  7340  12A1  3EFF               	skipz
  7341  12A2  1D03               	goto	u5475
  7342  12A3  2A9E               	line	48
  7343                           	
  7344                           l3848:	
  7345  12A4                     	movlw	01h
  7346  12A4  3001               	
  7347                           u5485:
  7348  12A5                     	clrc
  7349  12A5  1003               	rrf	(___wmul@multiplier+1),f
  7350  12A6  0CF4               	rrf	(___wmul@multiplier),f
  7351  12A7  0CF3               	addlw	-1
  7352  12A8  3EFF               	skipz
  7353  12A9  1D03               	goto	u5485
  7354  12AA  2AA5               	line	49
  7355                           	
  7356                           l3850:	
  7357  12AB                     	movf	((___wmul@multiplier)),w
  7358  12AB  0873               iorwf	((___wmul@multiplier+1)),w
  7359  12AC  0474               	btfss	status,2
  7360  12AD  1D03               	goto	u5491
  7361  12AE  2AB0               	goto	u5490
  7362  12AF  2AB1               u5491:
  7363  12B0                     	goto	l3844
  7364  12B0  2A91               u5490:
  7365  12B1                     	goto	l3852
  7366  12B1  2AB2               	
  7367                           l528:	
  7368  12B2                     	line	52
  7369                           	
  7370                           l3852:	
  7371  12B2                     	bcf	status, 5	;RP0=0, select bank0
  7372  12B2  1283               	bcf	status, 6	;RP1=0, select bank0
  7373  12B3  1303               	movf	(___wmul@product+1),w
  7374  12B4  0821               	movwf	(?___wmul+1)
  7375  12B5  00F4               	movf	(___wmul@product),w
  7376  12B6  0820               	movwf	(?___wmul)
  7377  12B7  00F3               	goto	l529
  7378  12B8  2AB9               	
  7379                           l3854:	
  7380  12B9                     	line	53
  7381                           	
  7382                           l529:	
  7383  12B9                     	return
  7384  12B9  0008               	opt stack 0
  7385                           GLOBAL	__end_of___wmul
  7386                           	__end_of___wmul:
  7387  12BA                     	signat	___wmul,8314
  7388                           	global	___fltol
  7389                           
  7390 ;; *************** function ___fltol *****************
  7391 ;; Defined at:
  7392 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  7393 ;; Parameters:    Size  Location     Type
  7394 ;;  f1              4    3[COMMON] unsigned int 
  7395 ;; Auto vars:     Size  Location     Type
  7396 ;;  exp1            1    6[BANK0 ] unsigned char 
  7397 ;;  sign1           1    5[BANK0 ] unsigned char 
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  4    3[COMMON] long 
  7400 ;; Registers used:
  7401 ;;		wreg, status,2, status,0
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7407 ;;      Params:         4       0       0       0       0
  7408 ;;      Locals:         0       2       0       0       0
  7409 ;;      Temps:          0       5       0       0       0
  7410 ;;      Totals:         4       7       0       0       0
  7411 ;;Total ram usage:       11 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    2
  7414 ;; This function calls:
  7415 ;;		Nothing
  7416 ;; This function is called by:
  7417 ;;		_main
  7418 ;; This function uses a non-reentrant model
  7419 ;;
  7420                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  7421                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  7422                           	line	43
  7423                           global __ptext18
  7424                           __ptext18:	;psect for function ___fltol
  7425  0921                     psect	text18
  7426                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  7427                           	line	43
  7428                           	global	__size_of___fltol
  7429                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  7430  009C                     	
  7431                           ___fltol:	
  7432  0921                     ;incstack = 0
  7433                           	opt	stack 5
  7434                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7435                           	line	47
  7436                           	
  7437                           l3894:	
  7438  0921                     	movf	(___fltol@f1),w
  7439  0921  0873               	bcf	status, 5	;RP0=0, select bank0
  7440  0922  1283               	bcf	status, 6	;RP1=0, select bank0
  7441  0923  1303               	movwf	(??___fltol+0)+0
  7442  0924  00A0               	movf	(___fltol@f1+1),w
  7443  0925  0874               	movwf	((??___fltol+0)+0+1)
  7444  0926  00A1               	movf	(___fltol@f1+2),w
  7445  0927  0875               	movwf	((??___fltol+0)+0+2)
  7446  0928  00A2               	movf	(___fltol@f1+3),w
  7447  0929  0876               	movwf	((??___fltol+0)+0+3)
  7448  092A  00A3               	clrc
  7449  092B  1003               	rlf	(??___fltol+0)+2,w
  7450  092C  0D22               	rlf	(??___fltol+0)+3,w
  7451  092D  0D23               	movwf	(??___fltol+4)+0
  7452  092E  00A4               	movf	(??___fltol+4)+0,w
  7453  092F  0824               	movwf	(___fltol@exp1)
  7454  0930  00A6               	movf	(((___fltol@exp1))),w
  7455  0931  0826               	btfss	status,2
  7456  0932  1D03               	goto	u5591
  7457  0933  2935               	goto	u5590
  7458  0934  2936               u5591:
  7459  0935                     	goto	l3900
  7460  0935  2940               u5590:
  7461  0936                     	line	48
  7462                           	
  7463                           l3896:	
  7464  0936                     	movlw	high highword(0)
  7465  0936  3000               	movwf	(?___fltol+3)
  7466  0937  00F6               	movlw	low highword(0)
  7467  0938  3000               	movwf	(?___fltol+2)
  7468  0939  00F5               	movlw	high(0)
  7469  093A  3000               	movwf	(?___fltol+1)
  7470  093B  00F4               	movlw	low(0)
  7471  093C  3000               	movwf	(?___fltol)
  7472  093D  00F3               
  7473                           	goto	l713
  7474  093E  29BC               	
  7475                           l3898:	
  7476  093F                     	goto	l713
  7477  093F  29BC               	
  7478                           l712:	
  7479  0940                     	line	49
  7480                           	
  7481                           l3900:	
  7482  0940                     	movf	(___fltol@f1),w
  7483  0940  0873               	movwf	(??___fltol+0)+0
  7484  0941  00A0               	movf	(___fltol@f1+1),w
  7485  0942  0874               	movwf	((??___fltol+0)+0+1)
  7486  0943  00A1               	movf	(___fltol@f1+2),w
  7487  0944  0875               	movwf	((??___fltol+0)+0+2)
  7488  0945  00A2               	movf	(___fltol@f1+3),w
  7489  0946  0876               	movwf	((??___fltol+0)+0+3)
  7490  0947  00A3               	movlw	01Fh
  7491  0948  301F               u5605:
  7492  0949                     	clrc
  7493  0949  1003               	rrf	(??___fltol+0)+3,f
  7494  094A  0CA3               	rrf	(??___fltol+0)+2,f
  7495  094B  0CA2               	rrf	(??___fltol+0)+1,f
  7496  094C  0CA1               	rrf	(??___fltol+0)+0,f
  7497  094D  0CA0               u5600:
  7498  094E                     	addlw	-1
  7499  094E  3EFF               	skipz
  7500  094F  1D03               	goto	u5605
  7501  0950  2949               	movf	0+(??___fltol+0)+0,w
  7502  0951  0820               	movwf	(??___fltol+4)+0
  7503  0952  00A4               	movf	(??___fltol+4)+0,w
  7504  0953  0824               	movwf	(___fltol@sign1)
  7505  0954  00A5               	line	50
  7506                           	
  7507                           l3902:	
  7508  0955                     	bsf	(___fltol@f1)+(23/8),(23)&7
  7509  0955  17F5               	line	51
  7510                           	
  7511                           l3904:	
  7512  0956                     	movlw	0FFh
  7513  0956  30FF               	andwf	(___fltol@f1),f
  7514  0957  05F3               	movlw	0FFh
  7515  0958  30FF               	andwf	(___fltol@f1+1),f
  7516  0959  05F4               	movlw	0FFh
  7517  095A  30FF               	andwf	(___fltol@f1+2),f
  7518  095B  05F5               	movlw	0
  7519  095C  3000               	andwf	(___fltol@f1+3),f
  7520  095D  05F6               	line	52
  7521                           	
  7522                           l3906:	
  7523  095E                     	movlw	096h
  7524  095E  3096               	subwf	(___fltol@exp1),f
  7525  095F  02A6               	line	53
  7526                           	
  7527                           l3908:	
  7528  0960                     	btfss	(___fltol@exp1),7
  7529  0960  1FA6               	goto	u5611
  7530  0961  2963               	goto	u5610
  7531  0962  2964               u5611:
  7532  0963                     	goto	l3918
  7533  0963  2989               u5610:
  7534  0964                     	line	54
  7535                           	
  7536                           l3910:	
  7537  0964                     	movf	(___fltol@exp1),w
  7538  0964  0826               	xorlw	80h
  7539  0965  3A80               	addlw	-((-23)^80h)
  7540  0966  3E97               	skipnc
  7541  0967  1803               	goto	u5621
  7542  0968  296A               	goto	u5620
  7543  0969  296B               u5621:
  7544  096A                     	goto	l3916
  7545  096A  2976               u5620:
  7546  096B                     	line	55
  7547                           	
  7548                           l3912:	
  7549  096B                     	movlw	high highword(0)
  7550  096B  3000               	movwf	(?___fltol+3)
  7551  096C  00F6               	movlw	low highword(0)
  7552  096D  3000               	movwf	(?___fltol+2)
  7553  096E  00F5               	movlw	high(0)
  7554  096F  3000               	movwf	(?___fltol+1)
  7555  0970  00F4               	movlw	low(0)
  7556  0971  3000               	movwf	(?___fltol)
  7557  0972  00F3               
  7558                           	goto	l713
  7559  0973  29BC               	
  7560                           l3914:	
  7561  0974                     	goto	l713
  7562  0974  29BC               	
  7563                           l715:	
  7564  0975                     	goto	l3916
  7565  0975  2976               	line	56
  7566                           	
  7567                           l716:	
  7568  0976                     	line	57
  7569                           	
  7570                           l3916:	
  7571  0976                     	movlw	01h
  7572  0976  3001               u5635:
  7573  0977                     	clrc
  7574  0977  1003               	rrf	(___fltol@f1+3),f
  7575  0978  0CF6               	rrf	(___fltol@f1+2),f
  7576  0979  0CF5               	rrf	(___fltol@f1+1),f
  7577  097A  0CF4               	rrf	(___fltol@f1),f
  7578  097B  0CF3               	addlw	-1
  7579  097C  3EFF               	skipz
  7580  097D  1D03               	goto	u5635
  7581  097E  2977               
  7582                           	line	58
  7583                           	movlw	low(01h)
  7584  097F  3001               	movwf	(??___fltol+0)+0
  7585  0980  00A0               	movf	(??___fltol+0)+0,w
  7586  0981  0820               	addwf	(___fltol@exp1),f
  7587  0982  07A6               	btfss	status,2
  7588  0983  1D03               	goto	u5641
  7589  0984  2986               	goto	u5640
  7590  0985  2987               u5641:
  7591  0986                     	goto	l3916
  7592  0986  2976               u5640:
  7593  0987                     	goto	l3926
  7594  0987  29AC               	
  7595                           l717:	
  7596  0988                     	line	59
  7597                           	goto	l3926
  7598  0988  29AC               	
  7599                           l714:	
  7600  0989                     	line	60
  7601                           	
  7602                           l3918:	
  7603  0989                     	movlw	low(020h)
  7604  0989  3020               	subwf	(___fltol@exp1),w
  7605  098A  0226               	skipc
  7606  098B  1C03               	goto	u5651
  7607  098C  298E               	goto	u5650
  7608  098D  298F               u5651:
  7609  098E                     	goto	l720
  7610  098E  29A5               u5650:
  7611  098F                     	line	61
  7612                           	
  7613                           l3920:	
  7614  098F                     	movlw	high highword(0)
  7615  098F  3000               	movwf	(?___fltol+3)
  7616  0990  00F6               	movlw	low highword(0)
  7617  0991  3000               	movwf	(?___fltol+2)
  7618  0992  00F5               	movlw	high(0)
  7619  0993  3000               	movwf	(?___fltol+1)
  7620  0994  00F4               	movlw	low(0)
  7621  0995  3000               	movwf	(?___fltol)
  7622  0996  00F3               
  7623                           	goto	l713
  7624  0997  29BC               	
  7625                           l3922:	
  7626  0998                     	goto	l713
  7627  0998  29BC               	
  7628                           l719:	
  7629  0999                     	line	62
  7630                           	goto	l720
  7631  0999  29A5               	
  7632                           l721:	
  7633  099A                     	line	63
  7634                           	
  7635                           l3924:	
  7636  099A                     	movlw	01h
  7637  099A  3001               	movwf	(??___fltol+0)+0
  7638  099B  00A0               u5665:
  7639  099C                     	clrc
  7640  099C  1003               	rlf	(___fltol@f1),f
  7641  099D  0DF3               	rlf	(___fltol@f1+1),f
  7642  099E  0DF4               	rlf	(___fltol@f1+2),f
  7643  099F  0DF5               	rlf	(___fltol@f1+3),f
  7644  09A0  0DF6               	decfsz	(??___fltol+0)+0
  7645  09A1  0BA0               	goto	u5665
  7646  09A2  299C               	line	64
  7647                           	movlw	01h
  7648  09A3  3001               	subwf	(___fltol@exp1),f
  7649  09A4  02A6               	line	65
  7650                           	
  7651                           l720:	
  7652  09A5                     	line	62
  7653                           	movf	((___fltol@exp1)),w
  7654  09A5  0826               	btfss	status,2
  7655  09A6  1D03               	goto	u5671
  7656  09A7  29A9               	goto	u5670
  7657  09A8  29AA               u5671:
  7658  09A9                     	goto	l3924
  7659  09A9  299A               u5670:
  7660  09AA                     	goto	l3926
  7661  09AA  29AC               	
  7662                           l722:	
  7663  09AB                     	goto	l3926
  7664  09AB  29AC               	line	66
  7665                           	
  7666                           l718:	
  7667  09AC                     	line	67
  7668                           	
  7669                           l3926:	
  7670  09AC                     	movf	((___fltol@sign1)),w
  7671  09AC  0825               	btfsc	status,2
  7672  09AD  1903               	goto	u5681
  7673  09AE  29B0               	goto	u5680
  7674  09AF  29B1               u5681:
  7675  09B0                     	goto	l723
  7676  09B0  29BC               u5680:
  7677  09B1                     	line	68
  7678                           	
  7679                           l3928:	
  7680  09B1                     	comf	(___fltol@f1),f
  7681  09B1  09F3               	comf	(___fltol@f1+1),f
  7682  09B2  09F4               	comf	(___fltol@f1+2),f
  7683  09B3  09F5               	comf	(___fltol@f1+3),f
  7684  09B4  09F6               	incf	(___fltol@f1),f
  7685  09B5  0AF3               	skipnz
  7686  09B6  1903               	incf	(___fltol@f1+1),f
  7687  09B7  0AF4               	skipnz
  7688  09B8  1903               	incf	(___fltol@f1+2),f
  7689  09B9  0AF5               	skipnz
  7690  09BA  1903               	incf	(___fltol@f1+3),f
  7691  09BB  0AF6               	
  7692                           l723:	
  7693  09BC                     	line	69
  7694                           	line	70
  7695                           	
  7696                           l713:	
  7697  09BC                     	return
  7698  09BC  0008               	opt stack 0
  7699                           GLOBAL	__end_of___fltol
  7700                           	__end_of___fltol:
  7701  09BD                     	signat	___fltol,4220
  7702                           	global	___flneg
  7703                           
  7704 ;; *************** function ___flneg *****************
  7705 ;; Defined at:
  7706 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  7707 ;; Parameters:    Size  Location     Type
  7708 ;;  f1              4   10[BANK0 ] long 
  7709 ;; Auto vars:     Size  Location     Type
  7710 ;;		None
  7711 ;; Return value:  Size  Location     Type
  7712 ;;                  4   10[BANK0 ] long 
  7713 ;; Registers used:
  7714 ;;		wreg
  7715 ;; Tracked objects:
  7716 ;;		On entry : 0/0
  7717 ;;		On exit  : 0/0
  7718 ;;		Unchanged: 0/0
  7719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7720 ;;      Params:         0       4       0       0       0
  7721 ;;      Locals:         0       0       0       0       0
  7722 ;;      Temps:          0       0       0       0       0
  7723 ;;      Totals:         0       4       0       0       0
  7724 ;;Total ram usage:        4 bytes
  7725 ;; Hardware stack levels used:    1
  7726 ;; Hardware stack levels required when called:    2
  7727 ;; This function calls:
  7728 ;;		Nothing
  7729 ;; This function is called by:
  7730 ;;		_main
  7731 ;; This function uses a non-reentrant model
  7732 ;;
  7733                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  7734                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  7735                           	line	15
  7736                           global __ptext19
  7737                           __ptext19:	;psect for function ___flneg
  7738  11B7                     psect	text19
  7739                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  7740                           	line	15
  7741                           	global	__size_of___flneg
  7742                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  7743  000F                     	
  7744                           ___flneg:	
  7745  11B7                     ;incstack = 0
  7746                           	opt	stack 5
  7747                           ; Regs used in ___flneg: [wreg]
  7748                           	line	17
  7749                           	
  7750                           l2746:	
  7751  11B7                     	bcf	status, 5	;RP0=0, select bank0
  7752  11B7  1283               	bcf	status, 6	;RP1=0, select bank0
  7753  11B8  1303               	movf	(___flneg@f1+3),w
  7754  11B9  082D               	iorwf	(___flneg@f1+2),w
  7755  11BA  042C               	iorwf	(___flneg@f1+1),w
  7756  11BB  042B               	iorwf	(___flneg@f1),w
  7757  11BC  042A               	skipnz
  7758  11BD  1903               	goto	u3291
  7759  11BE  29C0               	goto	u3290
  7760  11BF  29C1               u3291:
  7761  11C0                     	goto	l2750
  7762  11C0  29C4               u3290:
  7763  11C1                     	line	18
  7764                           	
  7765                           l2748:	
  7766  11C1                     	movlw	080h
  7767  11C1  3080               	xorwf	(___flneg@f1+3),f
  7768  11C2  06AD               	goto	l2750
  7769  11C3  29C4               	
  7770                           l708:	
  7771  11C4                     	line	19
  7772                           	
  7773                           l2750:	
  7774  11C4                     	goto	l709
  7775  11C4  29C5               	
  7776                           l2752:	
  7777  11C5                     	line	20
  7778                           	
  7779                           l709:	
  7780  11C5                     	return
  7781  11C5  0008               	opt stack 0
  7782                           GLOBAL	__end_of___flneg
  7783                           	__end_of___flneg:
  7784  11C6                     	signat	___flneg,4220
  7785                           	global	___flmul
  7786                           
  7787 ;; *************** function ___flmul *****************
  7788 ;; Defined at:
  7789 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  7790 ;; Parameters:    Size  Location     Type
  7791 ;;  b               4   38[BANK0 ] long 
  7792 ;;  a               4   42[BANK0 ] long 
  7793 ;; Auto vars:     Size  Location     Type
  7794 ;;  prod            4   58[BANK0 ] struct .
  7795 ;;  grs             4   52[BANK0 ] unsigned long 
  7796 ;;  temp            2   62[BANK0 ] struct .
  7797 ;;  bexp            1   57[BANK0 ] unsigned char 
  7798 ;;  aexp            1   56[BANK0 ] unsigned char 
  7799 ;;  sign            1   51[BANK0 ] unsigned char 
  7800 ;; Return value:  Size  Location     Type
  7801 ;;                  4   38[BANK0 ] unsigned char 
  7802 ;; Registers used:
  7803 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7804 ;; Tracked objects:
  7805 ;;		On entry : 0/0
  7806 ;;		On exit  : 0/0
  7807 ;;		Unchanged: 0/0
  7808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7809 ;;      Params:         0       8       0       0       0
  7810 ;;      Locals:         0      13       0       0       0
  7811 ;;      Temps:          0       5       0       0       0
  7812 ;;      Totals:         0      26       0       0       0
  7813 ;;Total ram usage:       26 bytes
  7814 ;; Hardware stack levels used:    1
  7815 ;; Hardware stack levels required when called:    3
  7816 ;; This function calls:
  7817 ;;		__Umul8_16
  7818 ;; This function is called by:
  7819 ;;		_main
  7820 ;; This function uses a non-reentrant model
  7821 ;;
  7822                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  7823                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  7824                           	line	8
  7825                           global __ptext20
  7826                           __ptext20:	;psect for function ___flmul
  7827  0C8B                     psect	text20
  7828                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  7829                           	line	8
  7830                           	global	__size_of___flmul
  7831                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  7832  0375                     	
  7833                           ___flmul:	
  7834  0C8B                     ;incstack = 0
  7835                           	opt	stack 4
  7836                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7837                           	line	17
  7838                           	
  7839                           l3126:	
  7840  0C8B                     	bcf	status, 5	;RP0=0, select bank0
  7841  0C8B  1283               	bcf	status, 6	;RP1=0, select bank0
  7842  0C8C  1303               	movf	0+(___flmul@b)+03h,w
  7843  0C8D  0849               	andlw	080h
  7844  0C8E  3980               	movwf	(??___flmul+0)+0
  7845  0C8F  00CE               	movf	(??___flmul+0)+0,w
  7846  0C90  084E               	movwf	(___flmul@sign)
  7847  0C91  00D3               	line	18
  7848                           	
  7849                           l3128:	
  7850  0C92                     	movf	0+(___flmul@b)+03h,w
  7851  0C92  0849               	movwf	(??___flmul+0)+0
  7852  0C93  00CE               	addwf	(??___flmul+0)+0,w
  7853  0C94  074E               	movwf	(??___flmul+1)+0
  7854  0C95  00CF               	movf	(??___flmul+1)+0,w
  7855  0C96  084F               	movwf	(___flmul@bexp)
  7856  0C97  00D9               	line	19
  7857                           	
  7858                           l3130:	
  7859  0C98                     	btfss	0+(___flmul@b)+02h,(7)&7
  7860  0C98  1FC8               	goto	u4161
  7861  0C99  2C9B               	goto	u4160
  7862  0C9A  2C9C               u4161:
  7863  0C9B                     	goto	l3134
  7864  0C9B  2C9E               u4160:
  7865  0C9C                     	line	20
  7866                           	
  7867                           l3132:	
  7868  0C9C                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  7869  0C9C  1459               	goto	l3134
  7870  0C9D  2C9E               	line	21
  7871                           	
  7872                           l905:	
  7873  0C9E                     	line	24
  7874                           	
  7875                           l3134:	
  7876  0C9E                     	movf	((___flmul@bexp)),w
  7877  0C9E  0859               	btfsc	status,2
  7878  0C9F  1903               	goto	u4171
  7879  0CA0  2CA2               	goto	u4170
  7880  0CA1  2CA3               u4171:
  7881  0CA2                     	goto	l3142
  7882  0CA2  2CB3               u4170:
  7883  0CA3                     	line	26
  7884                           	
  7885                           l3136:	
  7886  0CA3                     		incf	((___flmul@bexp)),w
  7887  0CA3  0A59               	btfss	status,2
  7888  0CA4  1D03               	goto	u4181
  7889  0CA5  2CA7               	goto	u4180
  7890  0CA6  2CA8               u4181:
  7891  0CA7                     	goto	l3140
  7892  0CA7  2CB1               u4180:
  7893  0CA8                     	line	28
  7894                           	
  7895                           l3138:	
  7896  0CA8                     	movlw	0x0
  7897  0CA8  3000               	movwf	(___flmul@b+3)
  7898  0CA9  00C9               	movlw	0x0
  7899  0CAA  3000               	movwf	(___flmul@b+2)
  7900  0CAB  00C8               	movlw	0x0
  7901  0CAC  3000               	movwf	(___flmul@b+1)
  7902  0CAD  00C7               	movlw	0x0
  7903  0CAE  3000               	movwf	(___flmul@b)
  7904  0CAF  00C6               
  7905                           	goto	l3140
  7906  0CB0  2CB1               	line	29
  7907                           	
  7908                           l907:	
  7909  0CB1                     	line	31
  7910                           	
  7911                           l3140:	
  7912  0CB1                     	bsf	(___flmul@b)+(23/8),(23)&7
  7913  0CB1  17C8               	line	33
  7914                           	goto	l3144
  7915  0CB2  2CBC               	line	34
  7916                           	
  7917                           l906:	
  7918  0CB3                     	line	36
  7919                           	
  7920                           l3142:	
  7921  0CB3                     	movlw	0x0
  7922  0CB3  3000               	movwf	(___flmul@b+3)
  7923  0CB4  00C9               	movlw	0x0
  7924  0CB5  3000               	movwf	(___flmul@b+2)
  7925  0CB6  00C8               	movlw	0x0
  7926  0CB7  3000               	movwf	(___flmul@b+1)
  7927  0CB8  00C7               	movlw	0x0
  7928  0CB9  3000               	movwf	(___flmul@b)
  7929  0CBA  00C6               
  7930                           	goto	l3144
  7931  0CBB  2CBC               	line	37
  7932                           	
  7933                           l908:	
  7934  0CBC                     	line	39
  7935                           	
  7936                           l3144:	
  7937  0CBC                     	movf	0+(___flmul@a)+03h,w
  7938  0CBC  084D               	andlw	080h
  7939  0CBD  3980               	movwf	(??___flmul+0)+0
  7940  0CBE  00CE               	movf	(??___flmul+0)+0,w
  7941  0CBF  084E               	xorwf	(___flmul@sign),f
  7942  0CC0  06D3               	line	40
  7943                           	
  7944                           l3146:	
  7945  0CC1                     	movf	0+(___flmul@a)+03h,w
  7946  0CC1  084D               	movwf	(??___flmul+0)+0
  7947  0CC2  00CE               	addwf	(??___flmul+0)+0,w
  7948  0CC3  074E               	movwf	(??___flmul+1)+0
  7949  0CC4  00CF               	movf	(??___flmul+1)+0,w
  7950  0CC5  084F               	movwf	(___flmul@aexp)
  7951  0CC6  00D8               	line	41
  7952                           	
  7953                           l3148:	
  7954  0CC7                     	btfss	0+(___flmul@a)+02h,(7)&7
  7955  0CC7  1FCC               	goto	u4191
  7956  0CC8  2CCA               	goto	u4190
  7957  0CC9  2CCB               u4191:
  7958  0CCA                     	goto	l3152
  7959  0CCA  2CCD               u4190:
  7960  0CCB                     	line	42
  7961                           	
  7962                           l3150:	
  7963  0CCB                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  7964  0CCB  1458               	goto	l3152
  7965  0CCC  2CCD               	line	43
  7966                           	
  7967                           l909:	
  7968  0CCD                     	line	45
  7969                           	
  7970                           l3152:	
  7971  0CCD                     	movf	((___flmul@aexp)),w
  7972  0CCD  0858               	btfsc	status,2
  7973  0CCE  1903               	goto	u4201
  7974  0CCF  2CD1               	goto	u4200
  7975  0CD0  2CD2               u4201:
  7976  0CD1                     	goto	l3160
  7977  0CD1  2CE2               u4200:
  7978  0CD2                     	line	48
  7979                           	
  7980                           l3154:	
  7981  0CD2                     		incf	((___flmul@aexp)),w
  7982  0CD2  0A58               	btfss	status,2
  7983  0CD3  1D03               	goto	u4211
  7984  0CD4  2CD6               	goto	u4210
  7985  0CD5  2CD7               u4211:
  7986  0CD6                     	goto	l3158
  7987  0CD6  2CE0               u4210:
  7988  0CD7                     	line	50
  7989                           	
  7990                           l3156:	
  7991  0CD7                     	movlw	0x0
  7992  0CD7  3000               	movwf	(___flmul@a+3)
  7993  0CD8  00CD               	movlw	0x0
  7994  0CD9  3000               	movwf	(___flmul@a+2)
  7995  0CDA  00CC               	movlw	0x0
  7996  0CDB  3000               	movwf	(___flmul@a+1)
  7997  0CDC  00CB               	movlw	0x0
  7998  0CDD  3000               	movwf	(___flmul@a)
  7999  0CDE  00CA               
  8000                           	goto	l3158
  8001  0CDF  2CE0               	line	51
  8002                           	
  8003                           l911:	
  8004  0CE0                     	line	53
  8005                           	
  8006                           l3158:	
  8007  0CE0                     	bsf	(___flmul@a)+(23/8),(23)&7
  8008  0CE0  17CC               	line	54
  8009                           	goto	l3162
  8010  0CE1  2CEB               	line	55
  8011                           	
  8012                           l910:	
  8013  0CE2                     	line	57
  8014                           	
  8015                           l3160:	
  8016  0CE2                     	movlw	0x0
  8017  0CE2  3000               	movwf	(___flmul@a+3)
  8018  0CE3  00CD               	movlw	0x0
  8019  0CE4  3000               	movwf	(___flmul@a+2)
  8020  0CE5  00CC               	movlw	0x0
  8021  0CE6  3000               	movwf	(___flmul@a+1)
  8022  0CE7  00CB               	movlw	0x0
  8023  0CE8  3000               	movwf	(___flmul@a)
  8024  0CE9  00CA               
  8025                           	goto	l3162
  8026  0CEA  2CEB               	line	58
  8027                           	
  8028                           l912:	
  8029  0CEB                     	line	65
  8030                           	
  8031                           l3162:	
  8032  0CEB                     	movf	((___flmul@aexp)),w
  8033  0CEB  0858               	btfsc	status,2
  8034  0CEC  1903               	goto	u4221
  8035  0CED  2CEF               	goto	u4220
  8036  0CEE  2CF0               u4221:
  8037  0CEF                     	goto	l3166
  8038  0CEF  2CF6               u4220:
  8039  0CF0                     	
  8040                           l3164:	
  8041  0CF0                     	movf	((___flmul@bexp)),w
  8042  0CF0  0859               	btfss	status,2
  8043  0CF1  1D03               	goto	u4231
  8044  0CF2  2CF4               	goto	u4230
  8045  0CF3  2CF5               u4231:
  8046  0CF4                     	goto	l3170
  8047  0CF4  2D00               u4230:
  8048  0CF5                     	goto	l3166
  8049  0CF5  2CF6               	
  8050                           l915:	
  8051  0CF6                     	line	66
  8052                           	
  8053                           l3166:	
  8054  0CF6                     	movlw	0x0
  8055  0CF6  3000               	movwf	(?___flmul+3)
  8056  0CF7  00C9               	movlw	0x0
  8057  0CF8  3000               	movwf	(?___flmul+2)
  8058  0CF9  00C8               	movlw	0x0
  8059  0CFA  3000               	movwf	(?___flmul+1)
  8060  0CFB  00C7               	movlw	0x0
  8061  0CFC  3000               	movwf	(?___flmul)
  8062  0CFD  00C6               
  8063                           	goto	l916
  8064  0CFE  2FFF               	
  8065                           l3168:	
  8066  0CFF                     	goto	l916
  8067  0CFF  2FFF               	line	67
  8068                           	
  8069                           l913:	
  8070  0D00                     	line	119
  8071                           	
  8072                           l3170:	
  8073  0D00                     	movf	(___flmul@b),w
  8074  0D00  0846               	movwf	(??___flmul+0)+0
  8075  0D01  00CE               	movf	(??___flmul+0)+0,w
  8076  0D02  084E               	movwf	(__Umul8_16@multiplicand)
  8077  0D03  00F3               	movf	0+(___flmul@a)+02h,w
  8078  0D04  084C               	fcall	__Umul8_16
  8079  0D05  160A  118A  2260  120A  158A  	movf	(1+(?__Umul8_16)),w
  8080  0D0A  0874               	bcf	status, 5	;RP0=0, select bank0
  8081  0D0B  1283               	bcf	status, 6	;RP1=0, select bank0
  8082  0D0C  1303               	movwf	(___flmul@temp+1)
  8083  0D0D  00DF               	movf	(0+(?__Umul8_16)),w
  8084  0D0E  0873               	movwf	(___flmul@temp)
  8085  0D0F  00DE               	line	120
  8086                           	
  8087                           l3172:	
  8088  0D10                     	movf	(___flmul@temp),w
  8089  0D10  085E               	movwf	(??___flmul+0)+0
  8090  0D11  00CE               	clrf	(??___flmul+0)+0+1
  8091  0D12  01CF               	clrf	(??___flmul+0)+0+2
  8092  0D13  01D0               	clrf	(??___flmul+0)+0+3
  8093  0D14  01D1               	movf	3+(??___flmul+0)+0,w
  8094  0D15  0851               	movwf	(___flmul@grs+3)
  8095  0D16  00D7               	movf	2+(??___flmul+0)+0,w
  8096  0D17  0850               	movwf	(___flmul@grs+2)
  8097  0D18  00D6               	movf	1+(??___flmul+0)+0,w
  8098  0D19  084F               	movwf	(___flmul@grs+1)
  8099  0D1A  00D5               	movf	0+(??___flmul+0)+0,w
  8100  0D1B  084E               	movwf	(___flmul@grs)
  8101  0D1C  00D4               
  8102                           	line	121
  8103                           	
  8104                           l3174:	
  8105  0D1D                     	movf	0+(___flmul@temp)+01h,w
  8106  0D1D  085F               	movwf	(??___flmul+0)+0
  8107  0D1E  00CE               	clrf	(??___flmul+0)+0+1
  8108  0D1F  01CF               	clrf	(??___flmul+0)+0+2
  8109  0D20  01D0               	clrf	(??___flmul+0)+0+3
  8110  0D21  01D1               	movf	3+(??___flmul+0)+0,w
  8111  0D22  0851               	movwf	(___flmul@prod+3)
  8112  0D23  00DD               	movf	2+(??___flmul+0)+0,w
  8113  0D24  0850               	movwf	(___flmul@prod+2)
  8114  0D25  00DC               	movf	1+(??___flmul+0)+0,w
  8115  0D26  084F               	movwf	(___flmul@prod+1)
  8116  0D27  00DB               	movf	0+(??___flmul+0)+0,w
  8117  0D28  084E               	movwf	(___flmul@prod)
  8118  0D29  00DA               
  8119                           	line	122
  8120                           	movf	0+(___flmul@b)+01h,w
  8121  0D2A  0847               	movwf	(??___flmul+0)+0
  8122  0D2B  00CE               	movf	(??___flmul+0)+0,w
  8123  0D2C  084E               	movwf	(__Umul8_16@multiplicand)
  8124  0D2D  00F3               	movf	0+(___flmul@a)+01h,w
  8125  0D2E  084B               	fcall	__Umul8_16
  8126  0D2F  160A  118A  2260  120A  158A  	movf	(1+(?__Umul8_16)),w
  8127  0D34  0874               	bcf	status, 5	;RP0=0, select bank0
  8128  0D35  1283               	bcf	status, 6	;RP1=0, select bank0
  8129  0D36  1303               	movwf	(___flmul@temp+1)
  8130  0D37  00DF               	movf	(0+(?__Umul8_16)),w
  8131  0D38  0873               	movwf	(___flmul@temp)
  8132  0D39  00DE               	line	123
  8133                           	
  8134                           l3176:	
  8135  0D3A                     	movf	(___flmul@temp),w
  8136  0D3A  085E               	movwf	(??___flmul+0)+0
  8137  0D3B  00CE               	clrf	(??___flmul+0)+0+1
  8138  0D3C  01CF               	clrf	(??___flmul+0)+0+2
  8139  0D3D  01D0               	clrf	(??___flmul+0)+0+3
  8140  0D3E  01D1               	movf	0+(??___flmul+0)+0,w
  8141  0D3F  084E               	addwf	(___flmul@grs),f
  8142  0D40  07D4               	movf	1+(??___flmul+0)+0,w
  8143  0D41  084F               	clrz
  8144  0D42  1103               	skipnc
  8145  0D43  1803               	addlw	1
  8146  0D44  3E01               	skipnz
  8147  0D45  1903               	goto	u4241
  8148  0D46  2D48               	addwf	(___flmul@grs+1),f
  8149  0D47  07D5               u4241:
  8150  0D48                     	movf	2+(??___flmul+0)+0,w
  8151  0D48  0850               	clrz
  8152  0D49  1103               	skipnc
  8153  0D4A  1803               	addlw	1
  8154  0D4B  3E01               	skipnz
  8155  0D4C  1903               	goto	u4242
  8156  0D4D  2D4F               	addwf	(___flmul@grs+2),f
  8157  0D4E  07D6               u4242:
  8158  0D4F                     	movf	3+(??___flmul+0)+0,w
  8159  0D4F  0851               	clrz
  8160  0D50  1103               	skipnc
  8161  0D51  1803               	addlw	1
  8162  0D52  3E01               	skipnz
  8163  0D53  1903               	goto	u4243
  8164  0D54  2D56               	addwf	(___flmul@grs+3),f
  8165  0D55  07D7               u4243:
  8166  0D56                     
  8167                           	line	124
  8168                           	
  8169                           l3178:	
  8170  0D56                     	movf	0+(___flmul@temp)+01h,w
  8171  0D56  085F               	movwf	(??___flmul+0)+0
  8172  0D57  00CE               	clrf	(??___flmul+0)+0+1
  8173  0D58  01CF               	clrf	(??___flmul+0)+0+2
  8174  0D59  01D0               	clrf	(??___flmul+0)+0+3
  8175  0D5A  01D1               	movf	0+(??___flmul+0)+0,w
  8176  0D5B  084E               	addwf	(___flmul@prod),f
  8177  0D5C  07DA               	movf	1+(??___flmul+0)+0,w
  8178  0D5D  084F               	clrz
  8179  0D5E  1103               	skipnc
  8180  0D5F  1803               	addlw	1
  8181  0D60  3E01               	skipnz
  8182  0D61  1903               	goto	u4251
  8183  0D62  2D64               	addwf	(___flmul@prod+1),f
  8184  0D63  07DB               u4251:
  8185  0D64                     	movf	2+(??___flmul+0)+0,w
  8186  0D64  0850               	clrz
  8187  0D65  1103               	skipnc
  8188  0D66  1803               	addlw	1
  8189  0D67  3E01               	skipnz
  8190  0D68  1903               	goto	u4252
  8191  0D69  2D6B               	addwf	(___flmul@prod+2),f
  8192  0D6A  07DC               u4252:
  8193  0D6B                     	movf	3+(??___flmul+0)+0,w
  8194  0D6B  0851               	clrz
  8195  0D6C  1103               	skipnc
  8196  0D6D  1803               	addlw	1
  8197  0D6E  3E01               	skipnz
  8198  0D6F  1903               	goto	u4253
  8199  0D70  2D72               	addwf	(___flmul@prod+3),f
  8200  0D71  07DD               u4253:
  8201  0D72                     
  8202                           	line	125
  8203                           	movf	0+(___flmul@b)+02h,w
  8204  0D72  0848               	movwf	(??___flmul+0)+0
  8205  0D73  00CE               	movf	(??___flmul+0)+0,w
  8206  0D74  084E               	movwf	(__Umul8_16@multiplicand)
  8207  0D75  00F3               	movf	(___flmul@a),w
  8208  0D76  084A               	fcall	__Umul8_16
  8209  0D77  160A  118A  2260  120A  158A  	movf	(1+(?__Umul8_16)),w
  8210  0D7C  0874               	bcf	status, 5	;RP0=0, select bank0
  8211  0D7D  1283               	bcf	status, 6	;RP1=0, select bank0
  8212  0D7E  1303               	movwf	(___flmul@temp+1)
  8213  0D7F  00DF               	movf	(0+(?__Umul8_16)),w
  8214  0D80  0873               	movwf	(___flmul@temp)
  8215  0D81  00DE               	line	126
  8216                           	
  8217                           l3180:	
  8218  0D82                     	movf	(___flmul@temp),w
  8219  0D82  085E               	movwf	(??___flmul+0)+0
  8220  0D83  00CE               	clrf	(??___flmul+0)+0+1
  8221  0D84  01CF               	clrf	(??___flmul+0)+0+2
  8222  0D85  01D0               	clrf	(??___flmul+0)+0+3
  8223  0D86  01D1               	movf	0+(??___flmul+0)+0,w
  8224  0D87  084E               	addwf	(___flmul@grs),f
  8225  0D88  07D4               	movf	1+(??___flmul+0)+0,w
  8226  0D89  084F               	clrz
  8227  0D8A  1103               	skipnc
  8228  0D8B  1803               	addlw	1
  8229  0D8C  3E01               	skipnz
  8230  0D8D  1903               	goto	u4261
  8231  0D8E  2D90               	addwf	(___flmul@grs+1),f
  8232  0D8F  07D5               u4261:
  8233  0D90                     	movf	2+(??___flmul+0)+0,w
  8234  0D90  0850               	clrz
  8235  0D91  1103               	skipnc
  8236  0D92  1803               	addlw	1
  8237  0D93  3E01               	skipnz
  8238  0D94  1903               	goto	u4262
  8239  0D95  2D97               	addwf	(___flmul@grs+2),f
  8240  0D96  07D6               u4262:
  8241  0D97                     	movf	3+(??___flmul+0)+0,w
  8242  0D97  0851               	clrz
  8243  0D98  1103               	skipnc
  8244  0D99  1803               	addlw	1
  8245  0D9A  3E01               	skipnz
  8246  0D9B  1903               	goto	u4263
  8247  0D9C  2D9E               	addwf	(___flmul@grs+3),f
  8248  0D9D  07D7               u4263:
  8249  0D9E                     
  8250                           	line	127
  8251                           	
  8252                           l3182:	
  8253  0D9E                     	movf	0+(___flmul@temp)+01h,w
  8254  0D9E  085F               	movwf	(??___flmul+0)+0
  8255  0D9F  00CE               	clrf	(??___flmul+0)+0+1
  8256  0DA0  01CF               	clrf	(??___flmul+0)+0+2
  8257  0DA1  01D0               	clrf	(??___flmul+0)+0+3
  8258  0DA2  01D1               	movf	0+(??___flmul+0)+0,w
  8259  0DA3  084E               	addwf	(___flmul@prod),f
  8260  0DA4  07DA               	movf	1+(??___flmul+0)+0,w
  8261  0DA5  084F               	clrz
  8262  0DA6  1103               	skipnc
  8263  0DA7  1803               	addlw	1
  8264  0DA8  3E01               	skipnz
  8265  0DA9  1903               	goto	u4271
  8266  0DAA  2DAC               	addwf	(___flmul@prod+1),f
  8267  0DAB  07DB               u4271:
  8268  0DAC                     	movf	2+(??___flmul+0)+0,w
  8269  0DAC  0850               	clrz
  8270  0DAD  1103               	skipnc
  8271  0DAE  1803               	addlw	1
  8272  0DAF  3E01               	skipnz
  8273  0DB0  1903               	goto	u4272
  8274  0DB1  2DB3               	addwf	(___flmul@prod+2),f
  8275  0DB2  07DC               u4272:
  8276  0DB3                     	movf	3+(??___flmul+0)+0,w
  8277  0DB3  0851               	clrz
  8278  0DB4  1103               	skipnc
  8279  0DB5  1803               	addlw	1
  8280  0DB6  3E01               	skipnz
  8281  0DB7  1903               	goto	u4273
  8282  0DB8  2DBA               	addwf	(___flmul@prod+3),f
  8283  0DB9  07DD               u4273:
  8284  0DBA                     
  8285                           	line	128
  8286                           	
  8287                           l3184:	
  8288  0DBA                     	movlw	08h
  8289  0DBA  3008               	movwf	(??___flmul+0)+0
  8290  0DBB  00CE               u4285:
  8291  0DBC                     	clrc
  8292  0DBC  1003               	rlf	(___flmul@grs),f
  8293  0DBD  0DD4               	rlf	(___flmul@grs+1),f
  8294  0DBE  0DD5               	rlf	(___flmul@grs+2),f
  8295  0DBF  0DD6               	rlf	(___flmul@grs+3),f
  8296  0DC0  0DD7               	decfsz	(??___flmul+0)+0
  8297  0DC1  0BCE               	goto	u4285
  8298  0DC2  2DBC               	line	129
  8299                           	
  8300                           l3186:	
  8301  0DC3                     	movf	0+(___flmul@b)+01h,w
  8302  0DC3  0847               	movwf	(??___flmul+0)+0
  8303  0DC4  00CE               	movf	(??___flmul+0)+0,w
  8304  0DC5  084E               	movwf	(__Umul8_16@multiplicand)
  8305  0DC6  00F3               	movf	(___flmul@a),w
  8306  0DC7  084A               	fcall	__Umul8_16
  8307  0DC8  160A  118A  2260  120A  158A  	movf	(1+(?__Umul8_16)),w
  8308  0DCD  0874               	bcf	status, 5	;RP0=0, select bank0
  8309  0DCE  1283               	bcf	status, 6	;RP1=0, select bank0
  8310  0DCF  1303               	movwf	(___flmul@temp+1)
  8311  0DD0  00DF               	movf	(0+(?__Umul8_16)),w
  8312  0DD1  0873               	movwf	(___flmul@temp)
  8313  0DD2  00DE               	line	130
  8314                           	
  8315                           l3188:	
  8316  0DD3                     	movf	(___flmul@temp),w
  8317  0DD3  085E               	movwf	((??___flmul+0)+0)
  8318  0DD4  00CE               	movf	(___flmul@temp+1),w
  8319  0DD5  085F               	movwf	((??___flmul+0)+0+1)
  8320  0DD6  00CF               	clrf	((??___flmul+0)+0+2)
  8321  0DD7  01D0               	clrf	((??___flmul+0)+0+3)
  8322  0DD8  01D1               	movf	0+(??___flmul+0)+0,w
  8323  0DD9  084E               	addwf	(___flmul@grs),f
  8324  0DDA  07D4               	movf	1+(??___flmul+0)+0,w
  8325  0DDB  084F               	clrz
  8326  0DDC  1103               	skipnc
  8327  0DDD  1803               	addlw	1
  8328  0DDE  3E01               	skipnz
  8329  0DDF  1903               	goto	u4291
  8330  0DE0  2DE2               	addwf	(___flmul@grs+1),f
  8331  0DE1  07D5               u4291:
  8332  0DE2                     	movf	2+(??___flmul+0)+0,w
  8333  0DE2  0850               	clrz
  8334  0DE3  1103               	skipnc
  8335  0DE4  1803               	addlw	1
  8336  0DE5  3E01               	skipnz
  8337  0DE6  1903               	goto	u4292
  8338  0DE7  2DE9               	addwf	(___flmul@grs+2),f
  8339  0DE8  07D6               u4292:
  8340  0DE9                     	movf	3+(??___flmul+0)+0,w
  8341  0DE9  0851               	clrz
  8342  0DEA  1103               	skipnc
  8343  0DEB  1803               	addlw	1
  8344  0DEC  3E01               	skipnz
  8345  0DED  1903               	goto	u4293
  8346  0DEE  2DF0               	addwf	(___flmul@grs+3),f
  8347  0DEF  07D7               u4293:
  8348  0DF0                     
  8349                           	line	131
  8350                           	
  8351                           l3190:	
  8352  0DF0                     	movf	(___flmul@b),w
  8353  0DF0  0846               	movwf	(??___flmul+0)+0
  8354  0DF1  00CE               	movf	(??___flmul+0)+0,w
  8355  0DF2  084E               	movwf	(__Umul8_16@multiplicand)
  8356  0DF3  00F3               	movf	0+(___flmul@a)+01h,w
  8357  0DF4  084B               	fcall	__Umul8_16
  8358  0DF5  160A  118A  2260  120A  158A  	movf	(1+(?__Umul8_16)),w
  8359  0DFA  0874               	bcf	status, 5	;RP0=0, select bank0
  8360  0DFB  1283               	bcf	status, 6	;RP1=0, select bank0
  8361  0DFC  1303               	movwf	(___flmul@temp+1)
  8362  0DFD  00DF               	movf	(0+(?__Umul8_16)),w
  8363  0DFE  0873               	movwf	(___flmul@temp)
  8364  0DFF  00DE               	line	132
  8365                           	
  8366                           l3192:	
  8367  0E00                     	movf	(___flmul@temp),w
  8368  0E00  085E               	movwf	((??___flmul+0)+0)
  8369  0E01  00CE               	movf	(___flmul@temp+1),w
  8370  0E02  085F               	movwf	((??___flmul+0)+0+1)
  8371  0E03  00CF               	clrf	((??___flmul+0)+0+2)
  8372  0E04  01D0               	clrf	((??___flmul+0)+0+3)
  8373  0E05  01D1               	movf	0+(??___flmul+0)+0,w
  8374  0E06  084E               	addwf	(___flmul@grs),f
  8375  0E07  07D4               	movf	1+(??___flmul+0)+0,w
  8376  0E08  084F               	clrz
  8377  0E09  1103               	skipnc
  8378  0E0A  1803               	addlw	1
  8379  0E0B  3E01               	skipnz
  8380  0E0C  1903               	goto	u4301
  8381  0E0D  2E0F               	addwf	(___flmul@grs+1),f
  8382  0E0E  07D5               u4301:
  8383  0E0F                     	movf	2+(??___flmul+0)+0,w
  8384  0E0F  0850               	clrz
  8385  0E10  1103               	skipnc
  8386  0E11  1803               	addlw	1
  8387  0E12  3E01               	skipnz
  8388  0E13  1903               	goto	u4302
  8389  0E14  2E16               	addwf	(___flmul@grs+2),f
  8390  0E15  07D6               u4302:
  8391  0E16                     	movf	3+(??___flmul+0)+0,w
  8392  0E16  0851               	clrz
  8393  0E17  1103               	skipnc
  8394  0E18  1803               	addlw	1
  8395  0E19  3E01               	skipnz
  8396  0E1A  1903               	goto	u4303
  8397  0E1B  2E1D               	addwf	(___flmul@grs+3),f
  8398  0E1C  07D7               u4303:
  8399  0E1D                     
  8400                           	line	133
  8401                           	
  8402                           l3194:	
  8403  0E1D                     	movlw	08h
  8404  0E1D  3008               	movwf	(??___flmul+0)+0
  8405  0E1E  00CE               u4315:
  8406  0E1F                     	clrc
  8407  0E1F  1003               	rlf	(___flmul@grs),f
  8408  0E20  0DD4               	rlf	(___flmul@grs+1),f
  8409  0E21  0DD5               	rlf	(___flmul@grs+2),f
  8410  0E22  0DD6               	rlf	(___flmul@grs+3),f
  8411  0E23  0DD7               	decfsz	(??___flmul+0)+0
  8412  0E24  0BCE               	goto	u4315
  8413  0E25  2E1F               	line	134
  8414                           	movf	(___flmul@b),w
  8415  0E26  0846               	movwf	(??___flmul+0)+0
  8416  0E27  00CE               	movf	(??___flmul+0)+0,w
  8417  0E28  084E               	movwf	(__Umul8_16@multiplicand)
  8418  0E29  00F3               	movf	(___flmul@a),w
  8419  0E2A  084A               	fcall	__Umul8_16
  8420  0E2B  160A  118A  2260  120A  158A  	movf	(1+(?__Umul8_16)),w
  8421  0E30  0874               	bcf	status, 5	;RP0=0, select bank0
  8422  0E31  1283               	bcf	status, 6	;RP1=0, select bank0
  8423  0E32  1303               	movwf	(___flmul@temp+1)
  8424  0E33  00DF               	movf	(0+(?__Umul8_16)),w
  8425  0E34  0873               	movwf	(___flmul@temp)
  8426  0E35  00DE               	line	135
  8427                           	
  8428                           l3196:	
  8429  0E36                     	movf	(___flmul@temp),w
  8430  0E36  085E               	movwf	((??___flmul+0)+0)
  8431  0E37  00CE               	movf	(___flmul@temp+1),w
  8432  0E38  085F               	movwf	((??___flmul+0)+0+1)
  8433  0E39  00CF               	clrf	((??___flmul+0)+0+2)
  8434  0E3A  01D0               	clrf	((??___flmul+0)+0+3)
  8435  0E3B  01D1               	movf	0+(??___flmul+0)+0,w
  8436  0E3C  084E               	addwf	(___flmul@grs),f
  8437  0E3D  07D4               	movf	1+(??___flmul+0)+0,w
  8438  0E3E  084F               	clrz
  8439  0E3F  1103               	skipnc
  8440  0E40  1803               	addlw	1
  8441  0E41  3E01               	skipnz
  8442  0E42  1903               	goto	u4321
  8443  0E43  2E45               	addwf	(___flmul@grs+1),f
  8444  0E44  07D5               u4321:
  8445  0E45                     	movf	2+(??___flmul+0)+0,w
  8446  0E45  0850               	clrz
  8447  0E46  1103               	skipnc
  8448  0E47  1803               	addlw	1
  8449  0E48  3E01               	skipnz
  8450  0E49  1903               	goto	u4322
  8451  0E4A  2E4C               	addwf	(___flmul@grs+2),f
  8452  0E4B  07D6               u4322:
  8453  0E4C                     	movf	3+(??___flmul+0)+0,w
  8454  0E4C  0851               	clrz
  8455  0E4D  1103               	skipnc
  8456  0E4E  1803               	addlw	1
  8457  0E4F  3E01               	skipnz
  8458  0E50  1903               	goto	u4323
  8459  0E51  2E53               	addwf	(___flmul@grs+3),f
  8460  0E52  07D7               u4323:
  8461  0E53                     
  8462                           	line	136
  8463                           	
  8464                           l3198:	
  8465  0E53                     	movf	0+(___flmul@b)+01h,w
  8466  0E53  0847               	movwf	(??___flmul+0)+0
  8467  0E54  00CE               	movf	(??___flmul+0)+0,w
  8468  0E55  084E               	movwf	(__Umul8_16@multiplicand)
  8469  0E56  00F3               	movf	0+(___flmul@a)+02h,w
  8470  0E57  084C               	fcall	__Umul8_16
  8471  0E58  160A  118A  2260  120A  158A  	movf	(1+(?__Umul8_16)),w
  8472  0E5D  0874               	bcf	status, 5	;RP0=0, select bank0
  8473  0E5E  1283               	bcf	status, 6	;RP1=0, select bank0
  8474  0E5F  1303               	movwf	(___flmul@temp+1)
  8475  0E60  00DF               	movf	(0+(?__Umul8_16)),w
  8476  0E61  0873               	movwf	(___flmul@temp)
  8477  0E62  00DE               	line	137
  8478                           	movf	(___flmul@temp),w
  8479  0E63  085E               	movwf	((??___flmul+0)+0)
  8480  0E64  00CE               	movf	(___flmul@temp+1),w
  8481  0E65  085F               	movwf	((??___flmul+0)+0+1)
  8482  0E66  00CF               	clrf	((??___flmul+0)+0+2)
  8483  0E67  01D0               	clrf	((??___flmul+0)+0+3)
  8484  0E68  01D1               	movf	0+(??___flmul+0)+0,w
  8485  0E69  084E               	addwf	(___flmul@prod),f
  8486  0E6A  07DA               	movf	1+(??___flmul+0)+0,w
  8487  0E6B  084F               	clrz
  8488  0E6C  1103               	skipnc
  8489  0E6D  1803               	addlw	1
  8490  0E6E  3E01               	skipnz
  8491  0E6F  1903               	goto	u4331
  8492  0E70  2E72               	addwf	(___flmul@prod+1),f
  8493  0E71  07DB               u4331:
  8494  0E72                     	movf	2+(??___flmul+0)+0,w
  8495  0E72  0850               	clrz
  8496  0E73  1103               	skipnc
  8497  0E74  1803               	addlw	1
  8498  0E75  3E01               	skipnz
  8499  0E76  1903               	goto	u4332
  8500  0E77  2E79               	addwf	(___flmul@prod+2),f
  8501  0E78  07DC               u4332:
  8502  0E79                     	movf	3+(??___flmul+0)+0,w
  8503  0E79  0851               	clrz
  8504  0E7A  1103               	skipnc
  8505  0E7B  1803               	addlw	1
  8506  0E7C  3E01               	skipnz
  8507  0E7D  1903               	goto	u4333
  8508  0E7E  2E80               	addwf	(___flmul@prod+3),f
  8509  0E7F  07DD               u4333:
  8510  0E80                     
  8511                           	line	138
  8512                           	
  8513                           l3200:	
  8514  0E80                     	movf	0+(___flmul@b)+02h,w
  8515  0E80  0848               	movwf	(??___flmul+0)+0
  8516  0E81  00CE               	movf	(??___flmul+0)+0,w
  8517  0E82  084E               	movwf	(__Umul8_16@multiplicand)
  8518  0E83  00F3               	movf	0+(___flmul@a)+01h,w
  8519  0E84  084B               	fcall	__Umul8_16
  8520  0E85  160A  118A  2260  120A  158A  	movf	(1+(?__Umul8_16)),w
  8521  0E8A  0874               	bcf	status, 5	;RP0=0, select bank0
  8522  0E8B  1283               	bcf	status, 6	;RP1=0, select bank0
  8523  0E8C  1303               	movwf	(___flmul@temp+1)
  8524  0E8D  00DF               	movf	(0+(?__Umul8_16)),w
  8525  0E8E  0873               	movwf	(___flmul@temp)
  8526  0E8F  00DE               	line	139
  8527                           	
  8528                           l3202:	
  8529  0E90                     	movf	(___flmul@temp),w
  8530  0E90  085E               	movwf	((??___flmul+0)+0)
  8531  0E91  00CE               	movf	(___flmul@temp+1),w
  8532  0E92  085F               	movwf	((??___flmul+0)+0+1)
  8533  0E93  00CF               	clrf	((??___flmul+0)+0+2)
  8534  0E94  01D0               	clrf	((??___flmul+0)+0+3)
  8535  0E95  01D1               	movf	0+(??___flmul+0)+0,w
  8536  0E96  084E               	addwf	(___flmul@prod),f
  8537  0E97  07DA               	movf	1+(??___flmul+0)+0,w
  8538  0E98  084F               	clrz
  8539  0E99  1103               	skipnc
  8540  0E9A  1803               	addlw	1
  8541  0E9B  3E01               	skipnz
  8542  0E9C  1903               	goto	u4341
  8543  0E9D  2E9F               	addwf	(___flmul@prod+1),f
  8544  0E9E  07DB               u4341:
  8545  0E9F                     	movf	2+(??___flmul+0)+0,w
  8546  0E9F  0850               	clrz
  8547  0EA0  1103               	skipnc
  8548  0EA1  1803               	addlw	1
  8549  0EA2  3E01               	skipnz
  8550  0EA3  1903               	goto	u4342
  8551  0EA4  2EA6               	addwf	(___flmul@prod+2),f
  8552  0EA5  07DC               u4342:
  8553  0EA6                     	movf	3+(??___flmul+0)+0,w
  8554  0EA6  0851               	clrz
  8555  0EA7  1103               	skipnc
  8556  0EA8  1803               	addlw	1
  8557  0EA9  3E01               	skipnz
  8558  0EAA  1903               	goto	u4343
  8559  0EAB  2EAD               	addwf	(___flmul@prod+3),f
  8560  0EAC  07DD               u4343:
  8561  0EAD                     
  8562                           	line	140
  8563                           	movf	0+(___flmul@b)+02h,w
  8564  0EAD  0848               	movwf	(??___flmul+0)+0
  8565  0EAE  00CE               	movf	(??___flmul+0)+0,w
  8566  0EAF  084E               	movwf	(__Umul8_16@multiplicand)
  8567  0EB0  00F3               	movf	0+(___flmul@a)+02h,w
  8568  0EB1  084C               	fcall	__Umul8_16
  8569  0EB2  160A  118A  2260  120A  158A  	movf	(1+(?__Umul8_16)),w
  8570  0EB7  0874               	bcf	status, 5	;RP0=0, select bank0
  8571  0EB8  1283               	bcf	status, 6	;RP1=0, select bank0
  8572  0EB9  1303               	movwf	(___flmul@temp+1)
  8573  0EBA  00DF               	movf	(0+(?__Umul8_16)),w
  8574  0EBB  0873               	movwf	(___flmul@temp)
  8575  0EBC  00DE               	line	141
  8576                           	
  8577                           l3204:	
  8578  0EBD                     	movf	(___flmul@temp),w
  8579  0EBD  085E               	movwf	((??___flmul+0)+0)
  8580  0EBE  00CE               	movf	(___flmul@temp+1),w
  8581  0EBF  085F               	movwf	((??___flmul+0)+0+1)
  8582  0EC0  00CF               	clrf	((??___flmul+0)+0+2)
  8583  0EC1  01D0               	clrf	((??___flmul+0)+0+3)
  8584  0EC2  01D1               	movlw	08h
  8585  0EC3  3008               u4355:
  8586  0EC4                     	clrc
  8587  0EC4  1003               	rlf	(??___flmul+0)+0,f
  8588  0EC5  0DCE               	rlf	(??___flmul+0)+1,f
  8589  0EC6  0DCF               	rlf	(??___flmul+0)+2,f
  8590  0EC7  0DD0               	rlf	(??___flmul+0)+3,f
  8591  0EC8  0DD1               u4350:
  8592  0EC9                     	addlw	-1
  8593  0EC9  3EFF               	skipz
  8594  0ECA  1D03               	goto	u4355
  8595  0ECB  2EC4               	movf	0+(??___flmul+0)+0,w
  8596  0ECC  084E               	addwf	(___flmul@prod),f
  8597  0ECD  07DA               	movf	1+(??___flmul+0)+0,w
  8598  0ECE  084F               	clrz
  8599  0ECF  1103               	skipnc
  8600  0ED0  1803               	addlw	1
  8601  0ED1  3E01               	skipnz
  8602  0ED2  1903               	goto	u4361
  8603  0ED3  2ED5               	addwf	(___flmul@prod+1),f
  8604  0ED4  07DB               u4361:
  8605  0ED5                     	movf	2+(??___flmul+0)+0,w
  8606  0ED5  0850               	clrz
  8607  0ED6  1103               	skipnc
  8608  0ED7  1803               	addlw	1
  8609  0ED8  3E01               	skipnz
  8610  0ED9  1903               	goto	u4362
  8611  0EDA  2EDC               	addwf	(___flmul@prod+2),f
  8612  0EDB  07DC               u4362:
  8613  0EDC                     	movf	3+(??___flmul+0)+0,w
  8614  0EDC  0851               	clrz
  8615  0EDD  1103               	skipnc
  8616  0EDE  1803               	addlw	1
  8617  0EDF  3E01               	skipnz
  8618  0EE0  1903               	goto	u4363
  8619  0EE1  2EE3               	addwf	(___flmul@prod+3),f
  8620  0EE2  07DD               u4363:
  8621  0EE3                     
  8622                           	line	145
  8623                           	
  8624                           l3206:	
  8625  0EE3                     	movf	(___flmul@grs),w
  8626  0EE3  0854               	movwf	(??___flmul+0)+0
  8627  0EE4  00CE               	movf	(___flmul@grs+1),w
  8628  0EE5  0855               	movwf	((??___flmul+0)+0+1)
  8629  0EE6  00CF               	movf	(___flmul@grs+2),w
  8630  0EE7  0856               	movwf	((??___flmul+0)+0+2)
  8631  0EE8  00D0               	movf	(___flmul@grs+3),w
  8632  0EE9  0857               	movwf	((??___flmul+0)+0+3)
  8633  0EEA  00D1               	movlw	018h
  8634  0EEB  3018               u4375:
  8635  0EEC                     	clrc
  8636  0EEC  1003               	rrf	(??___flmul+0)+3,f
  8637  0EED  0CD1               	rrf	(??___flmul+0)+2,f
  8638  0EEE  0CD0               	rrf	(??___flmul+0)+1,f
  8639  0EEF  0CCF               	rrf	(??___flmul+0)+0,f
  8640  0EF0  0CCE               u4370:
  8641  0EF1                     	addlw	-1
  8642  0EF1  3EFF               	skipz
  8643  0EF2  1D03               	goto	u4375
  8644  0EF3  2EEC               	movf	0+(??___flmul+0)+0,w
  8645  0EF4  084E               	addwf	(___flmul@prod),f
  8646  0EF5  07DA               	movf	1+(??___flmul+0)+0,w
  8647  0EF6  084F               	clrz
  8648  0EF7  1103               	skipnc
  8649  0EF8  1803               	addlw	1
  8650  0EF9  3E01               	skipnz
  8651  0EFA  1903               	goto	u4381
  8652  0EFB  2EFD               	addwf	(___flmul@prod+1),f
  8653  0EFC  07DB               u4381:
  8654  0EFD                     	movf	2+(??___flmul+0)+0,w
  8655  0EFD  0850               	clrz
  8656  0EFE  1103               	skipnc
  8657  0EFF  1803               	addlw	1
  8658  0F00  3E01               	skipnz
  8659  0F01  1903               	goto	u4382
  8660  0F02  2F04               	addwf	(___flmul@prod+2),f
  8661  0F03  07DC               u4382:
  8662  0F04                     	movf	3+(??___flmul+0)+0,w
  8663  0F04  0851               	clrz
  8664  0F05  1103               	skipnc
  8665  0F06  1803               	addlw	1
  8666  0F07  3E01               	skipnz
  8667  0F08  1903               	goto	u4383
  8668  0F09  2F0B               	addwf	(___flmul@prod+3),f
  8669  0F0A  07DD               u4383:
  8670  0F0B                     
  8671                           	line	146
  8672                           	
  8673                           l3208:	
  8674  0F0B                     	movlw	08h
  8675  0F0B  3008               	movwf	(??___flmul+0)+0
  8676  0F0C  00CE               u4395:
  8677  0F0D                     	clrc
  8678  0F0D  1003               	rlf	(___flmul@grs),f
  8679  0F0E  0DD4               	rlf	(___flmul@grs+1),f
  8680  0F0F  0DD5               	rlf	(___flmul@grs+2),f
  8681  0F10  0DD6               	rlf	(___flmul@grs+3),f
  8682  0F11  0DD7               	decfsz	(??___flmul+0)+0
  8683  0F12  0BCE               	goto	u4395
  8684  0F13  2F0D               	line	149
  8685                           	
  8686                           l3210:	
  8687  0F14                     	movf	(___flmul@bexp),w
  8688  0F14  0859               	addwf	(___flmul@aexp),w
  8689  0F15  0758               	movwf	(??___flmul+0)+0
  8690  0F16  00CE               	clrf	(??___flmul+0)+0+1
  8691  0F17  01CF               	rlf	1+(??___flmul+0)+0,f
  8692  0F18  0DCF               	
  8693                           	movf	0+(??___flmul+0)+0,w
  8694  0F19  084E               	addlw	low(-126)
  8695  0F1A  3E82               	movwf	(___flmul@temp)
  8696  0F1B  00DE               	movf	1+(??___flmul+0)+0,w
  8697  0F1C  084F               	skipnc
  8698  0F1D  1803               	addlw	1
  8699  0F1E  3E01               	addlw	high(-126)
  8700  0F1F  3EFF               	movwf	1+(___flmul@temp)
  8701  0F20  00DF               	line	152
  8702                           	goto	l3222
  8703  0F21  2F41               	
  8704                           l918:	
  8705  0F22                     	line	153
  8706                           	
  8707                           l3212:	
  8708  0F22                     	movlw	01h
  8709  0F22  3001               	movwf	(??___flmul+0)+0
  8710  0F23  00CE               u4405:
  8711  0F24                     	clrc
  8712  0F24  1003               	rlf	(___flmul@prod),f
  8713  0F25  0DDA               	rlf	(___flmul@prod+1),f
  8714  0F26  0DDB               	rlf	(___flmul@prod+2),f
  8715  0F27  0DDC               	rlf	(___flmul@prod+3),f
  8716  0F28  0DDD               	decfsz	(??___flmul+0)+0
  8717  0F29  0BCE               	goto	u4405
  8718  0F2A  2F24               	line	154
  8719                           	
  8720                           l3214:	
  8721  0F2B                     	btfss	(___flmul@grs+3),(31)&7
  8722  0F2B  1FD7               	goto	u4411
  8723  0F2C  2F2E               	goto	u4410
  8724  0F2D  2F2F               u4411:
  8725  0F2E                     	goto	l3218
  8726  0F2E  2F31               u4410:
  8727  0F2F                     	line	155
  8728                           	
  8729                           l3216:	
  8730  0F2F                     	bsf	(___flmul@prod)+(0/8),(0)&7
  8731  0F2F  145A               	goto	l3218
  8732  0F30  2F31               	line	156
  8733                           	
  8734                           l919:	
  8735  0F31                     	line	157
  8736                           	
  8737                           l3218:	
  8738  0F31                     	movlw	01h
  8739  0F31  3001               	movwf	(??___flmul+0)+0
  8740  0F32  00CE               u4425:
  8741  0F33                     	clrc
  8742  0F33  1003               	rlf	(___flmul@grs),f
  8743  0F34  0DD4               	rlf	(___flmul@grs+1),f
  8744  0F35  0DD5               	rlf	(___flmul@grs+2),f
  8745  0F36  0DD6               	rlf	(___flmul@grs+3),f
  8746  0F37  0DD7               	decfsz	(??___flmul+0)+0
  8747  0F38  0BCE               	goto	u4425
  8748  0F39  2F33               	line	158
  8749                           	
  8750                           l3220:	
  8751  0F3A                     	movlw	0FFh
  8752  0F3A  30FF               	addwf	(___flmul@temp),f
  8753  0F3B  07DE               	skipnc
  8754  0F3C  1803               	incf	(___flmul@temp+1),f
  8755  0F3D  0ADF               	movlw	0FFh
  8756  0F3E  30FF               	addwf	(___flmul@temp+1),f
  8757  0F3F  07DF               	goto	l3222
  8758  0F40  2F41               	line	159
  8759                           	
  8760                           l917:	
  8761  0F41                     	line	152
  8762                           	
  8763                           l3222:	
  8764  0F41                     	btfss	(___flmul@prod+2),(23)&7
  8765  0F41  1FDC               	goto	u4431
  8766  0F42  2F44               	goto	u4430
  8767  0F43  2F45               u4431:
  8768  0F44                     	goto	l3212
  8769  0F44  2F22               u4430:
  8770  0F45                     	goto	l3224
  8771  0F45  2F46               	
  8772                           l920:	
  8773  0F46                     	line	163
  8774                           	
  8775                           l3224:	
  8776  0F46                     	clrf	(___flmul@aexp)
  8777  0F46  01D8               	line	164
  8778                           	
  8779                           l3226:	
  8780  0F47                     	btfss	(___flmul@grs+3),(31)&7
  8781  0F47  1FD7               	goto	u4441
  8782  0F48  2F4A               	goto	u4440
  8783  0F49  2F4B               u4441:
  8784  0F4A                     	goto	l3234
  8785  0F4A  2F6B               u4440:
  8786  0F4B                     	line	165
  8787                           	
  8788                           l3228:	
  8789  0F4B                     	movlw	0FFh
  8790  0F4B  30FF               	andwf	(___flmul@grs),w
  8791  0F4C  0554               	movwf	(??___flmul+0)+0
  8792  0F4D  00CE               	movlw	0FFh
  8793  0F4E  30FF               	andwf	(___flmul@grs+1),w
  8794  0F4F  0555               	movwf	((??___flmul+0)+0+1)
  8795  0F50  00CF               	movlw	0FFh
  8796  0F51  30FF               	andwf	(___flmul@grs+2),w
  8797  0F52  0556               	movwf	((??___flmul+0)+0+2)
  8798  0F53  00D0               	movlw	07Fh
  8799  0F54  307F               	andwf	(___flmul@grs+3),w
  8800  0F55  0557               	movwf	((??___flmul+0)+0+3)
  8801  0F56  00D1               	movf	3+(??___flmul+0)+0,w
  8802  0F57  0851               	iorwf	2+(??___flmul+0)+0,w
  8803  0F58  0450               	iorwf	1+(??___flmul+0)+0,w
  8804  0F59  044F               	iorwf	0+(??___flmul+0)+0,w
  8805  0F5A  044E               	skipnz
  8806  0F5B  1903               	goto	u4451
  8807  0F5C  2F5E               	goto	u4450
  8808  0F5D  2F5F               u4451:
  8809  0F5E                     	goto	l922
  8810  0F5E  2F62               u4450:
  8811  0F5F                     	line	166
  8812                           	
  8813                           l3230:	
  8814  0F5F                     	clrf	(___flmul@aexp)
  8815  0F5F  01D8               	incf	(___flmul@aexp),f
  8816  0F60  0AD8               	line	167
  8817                           	goto	l3234
  8818  0F61  2F6B               	line	168
  8819                           	
  8820                           l922:	
  8821  0F62                     	line	169
  8822                           	btfss	(___flmul@prod),(0)&7
  8823  0F62  1C5A               	goto	u4461
  8824  0F63  2F65               	goto	u4460
  8825  0F64  2F66               u4461:
  8826  0F65                     	goto	l3234
  8827  0F65  2F6B               u4460:
  8828  0F66                     	line	170
  8829                           	
  8830                           l3232:	
  8831  0F66                     	clrf	(___flmul@aexp)
  8832  0F66  01D8               	incf	(___flmul@aexp),f
  8833  0F67  0AD8               	goto	l3234
  8834  0F68  2F6B               	line	171
  8835                           	
  8836                           l924:	
  8837  0F69                     	goto	l3234
  8838  0F69  2F6B               	line	172
  8839                           	
  8840                           l923:	
  8841  0F6A                     	goto	l3234
  8842  0F6A  2F6B               	line	173
  8843                           	
  8844                           l921:	
  8845  0F6B                     	line	174
  8846                           	
  8847                           l3234:	
  8848  0F6B                     	movf	((___flmul@aexp)),w
  8849  0F6B  0858               	btfsc	status,2
  8850  0F6C  1903               	goto	u4471
  8851  0F6D  2F6F               	goto	u4470
  8852  0F6E  2F70               u4471:
  8853  0F6F                     	goto	l3244
  8854  0F6F  2FA3               u4470:
  8855  0F70                     	line	175
  8856                           	
  8857                           l3236:	
  8858  0F70                     	movlw	01h
  8859  0F70  3001               	addwf	(___flmul@prod),f
  8860  0F71  07DA               	movlw	0
  8861  0F72  3000               	skipnc
  8862  0F73  1803               movlw 1
  8863  0F74  3001               	addwf	(___flmul@prod+1),f
  8864  0F75  07DB               	movlw	0
  8865  0F76  3000               	skipnc
  8866  0F77  1803               movlw 1
  8867  0F78  3001               	addwf	(___flmul@prod+2),f
  8868  0F79  07DC               	movlw	0
  8869  0F7A  3000               	skipnc
  8870  0F7B  1803               movlw 1
  8871  0F7C  3001               	addwf	(___flmul@prod+3),f
  8872  0F7D  07DD               	line	176
  8873                           	
  8874                           l3238:	
  8875  0F7E                     	btfss	(___flmul@prod+3),(24)&7
  8876  0F7E  1C5D               	goto	u4481
  8877  0F7F  2F81               	goto	u4480
  8878  0F80  2F82               u4481:
  8879  0F81                     	goto	l3244
  8880  0F81  2FA3               u4480:
  8881  0F82                     	line	177
  8882                           	
  8883                           l3240:	
  8884  0F82                     	movf	(___flmul@prod),w
  8885  0F82  085A               	movwf	(??___flmul+0)+0
  8886  0F83  00CE               	movf	(___flmul@prod+1),w
  8887  0F84  085B               	movwf	((??___flmul+0)+0+1)
  8888  0F85  00CF               	movf	(___flmul@prod+2),w
  8889  0F86  085C               	movwf	((??___flmul+0)+0+2)
  8890  0F87  00D0               	movf	(___flmul@prod+3),w
  8891  0F88  085D               	movwf	((??___flmul+0)+0+3)
  8892  0F89  00D1               	movlw	01h
  8893  0F8A  3001               	movwf	(??___flmul+4)+0
  8894  0F8B  00D2               u4495:
  8895  0F8C                     	rlf	(??___flmul+0)+3,w
  8896  0F8C  0D51               	rrf	(??___flmul+0)+3,f
  8897  0F8D  0CD1               	rrf	(??___flmul+0)+2,f
  8898  0F8E  0CD0               	rrf	(??___flmul+0)+1,f
  8899  0F8F  0CCF               	rrf	(??___flmul+0)+0,f
  8900  0F90  0CCE               u4490:
  8901  0F91                     	decfsz	(??___flmul+4)+0,f
  8902  0F91  0BD2               	goto	u4495
  8903  0F92  2F8C               	movf	3+(??___flmul+0)+0,w
  8904  0F93  0851               	movwf	(___flmul@prod+3)
  8905  0F94  00DD               	movf	2+(??___flmul+0)+0,w
  8906  0F95  0850               	movwf	(___flmul@prod+2)
  8907  0F96  00DC               	movf	1+(??___flmul+0)+0,w
  8908  0F97  084F               	movwf	(___flmul@prod+1)
  8909  0F98  00DB               	movf	0+(??___flmul+0)+0,w
  8910  0F99  084E               	movwf	(___flmul@prod)
  8911  0F9A  00DA               
  8912                           	line	178
  8913                           	
  8914                           l3242:	
  8915  0F9B                     	movlw	01h
  8916  0F9B  3001               	addwf	(___flmul@temp),f
  8917  0F9C  07DE               	skipnc
  8918  0F9D  1803               	incf	(___flmul@temp+1),f
  8919  0F9E  0ADF               	movlw	0
  8920  0F9F  3000               	addwf	(___flmul@temp+1),f
  8921  0FA0  07DF               	goto	l3244
  8922  0FA1  2FA3               	line	179
  8923                           	
  8924                           l926:	
  8925  0FA2                     	goto	l3244
  8926  0FA2  2FA3               	line	180
  8927                           	
  8928                           l925:	
  8929  0FA3                     	line	183
  8930                           	
  8931                           l3244:	
  8932  0FA3                     	movf	(___flmul@temp+1),w
  8933  0FA3  085F               	xorlw	80h
  8934  0FA4  3A80               	movwf	btemp+1
  8935  0FA5  00FF               	movlw	(0)^80h
  8936  0FA6  3080               	subwf	btemp+1,w
  8937  0FA7  027F               	skipz
  8938  0FA8  1D03               	goto	u4505
  8939  0FA9  2FAC               	movlw	0FFh
  8940  0FAA  30FF               	subwf	(___flmul@temp),w
  8941  0FAB  025E               u4505:
  8942  0FAC                     
  8943                           	skipc
  8944  0FAC  1C03               	goto	u4501
  8945  0FAD  2FAF               	goto	u4500
  8946  0FAE  2FB0               u4501:
  8947  0FAF                     	goto	l3248
  8948  0FAF  2FBB               u4500:
  8949  0FB0                     	line	184
  8950                           	
  8951                           l3246:	
  8952  0FB0                     	movlw	07Fh
  8953  0FB0  307F               	bcf	status, 5	;RP0=0, select bank0
  8954  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  8955  0FB2  1303               	movwf	(___flmul@prod+3)
  8956  0FB3  00DD               	movlw	080h
  8957  0FB4  3080               	movwf	(___flmul@prod+2)
  8958  0FB5  00DC               	movlw	0
  8959  0FB6  3000               	movwf	(___flmul@prod+1)
  8960  0FB7  00DB               	movlw	0
  8961  0FB8  3000               	movwf	(___flmul@prod)
  8962  0FB9  00DA               
  8963                           	line	185
  8964                           	goto	l928
  8965  0FBA  2FF2               	line	187
  8966                           	
  8967                           l927:	
  8968  0FBB                     	
  8969                           l3248:	
  8970  0FBB                     	bcf	status, 5	;RP0=0, select bank0
  8971  0FBB  1283               	bcf	status, 6	;RP1=0, select bank0
  8972  0FBC  1303               	movf	(___flmul@temp+1),w
  8973  0FBD  085F               	xorlw	80h
  8974  0FBE  3A80               	movwf	btemp+1
  8975  0FBF  00FF               	movlw	(0)^80h
  8976  0FC0  3080               	subwf	btemp+1,w
  8977  0FC1  027F               	skipz
  8978  0FC2  1D03               	goto	u4515
  8979  0FC3  2FC6               	movlw	01h
  8980  0FC4  3001               	subwf	(___flmul@temp),w
  8981  0FC5  025E               u4515:
  8982  0FC6                     
  8983                           	skipnc
  8984  0FC6  1803               	goto	u4511
  8985  0FC7  2FC9               	goto	u4510
  8986  0FC8  2FCA               u4511:
  8987  0FC9                     	goto	l3254
  8988  0FC9  2FD6               u4510:
  8989  0FCA                     	line	188
  8990                           	
  8991                           l3250:	
  8992  0FCA                     	movlw	high highword(0)
  8993  0FCA  3000               	bcf	status, 5	;RP0=0, select bank0
  8994  0FCB  1283               	bcf	status, 6	;RP1=0, select bank0
  8995  0FCC  1303               	movwf	(___flmul@prod+3)
  8996  0FCD  00DD               	movlw	low highword(0)
  8997  0FCE  3000               	movwf	(___flmul@prod+2)
  8998  0FCF  00DC               	movlw	high(0)
  8999  0FD0  3000               	movwf	(___flmul@prod+1)
  9000  0FD1  00DB               	movlw	low(0)
  9001  0FD2  3000               	movwf	(___flmul@prod)
  9002  0FD3  00DA               
  9003                           	line	190
  9004                           	
  9005                           l3252:	
  9006  0FD4                     	clrf	(___flmul@sign)
  9007  0FD4  01D3               	line	191
  9008                           	goto	l928
  9009  0FD5  2FF2               	line	192
  9010                           	
  9011                           l929:	
  9012  0FD6                     	line	194
  9013                           	
  9014                           l3254:	
  9015  0FD6                     	bcf	status, 5	;RP0=0, select bank0
  9016  0FD6  1283               	bcf	status, 6	;RP1=0, select bank0
  9017  0FD7  1303               	movf	(___flmul@temp),w
  9018  0FD8  085E               	movwf	(??___flmul+0)+0
  9019  0FD9  00CE               	movf	(??___flmul+0)+0,w
  9020  0FDA  084E               	movwf	(___flmul@bexp)
  9021  0FDB  00D9               	line	195
  9022                           	movlw	0FFh
  9023  0FDC  30FF               	andwf	(___flmul@prod),f
  9024  0FDD  05DA               	movlw	0FFh
  9025  0FDE  30FF               	andwf	(___flmul@prod+1),f
  9026  0FDF  05DB               	movlw	07Fh
  9027  0FE0  307F               	andwf	(___flmul@prod+2),f
  9028  0FE1  05DC               	movlw	0
  9029  0FE2  3000               	andwf	(___flmul@prod+3),f
  9030  0FE3  05DD               	line	196
  9031                           	
  9032                           l3256:	
  9033  0FE4                     	btfss	(___flmul@bexp),(0)&7
  9034  0FE4  1C59               	goto	u4521
  9035  0FE5  2FE7               	goto	u4520
  9036  0FE6  2FE8               u4521:
  9037  0FE7                     	goto	l3260
  9038  0FE7  2FEA               u4520:
  9039  0FE8                     	line	197
  9040                           	
  9041                           l3258:	
  9042  0FE8                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  9043  0FE8  17DC               	goto	l3260
  9044  0FE9  2FEA               	line	198
  9045                           	
  9046                           l931:	
  9047  0FEA                     	line	199
  9048                           	
  9049                           l3260:	
  9050  0FEA                     	movf	(___flmul@bexp),w
  9051  0FEA  0859               	movwf	(??___flmul+0)+0
  9052  0FEB  00CE               	clrc
  9053  0FEC  1003               	rrf	(??___flmul+0)+0,w
  9054  0FED  0C4E               	movwf	(??___flmul+1)+0
  9055  0FEE  00CF               	movf	(??___flmul+1)+0,w
  9056  0FEF  084F               	movwf	0+(___flmul@prod)+03h
  9057  0FF0  00DD               	goto	l928
  9058  0FF1  2FF2               	line	200
  9059                           	
  9060                           l930:	
  9061  0FF2                     	
  9062                           l928:	
  9063  0FF2                     	line	201
  9064                           	movf	(___flmul@sign),w
  9065  0FF2  0853               	movwf	(??___flmul+0)+0
  9066  0FF3  00CE               	movf	(??___flmul+0)+0,w
  9067  0FF4  084E               	iorwf	0+(___flmul@prod)+03h,f
  9068  0FF5  04DD               	line	203
  9069                           	
  9070                           l3262:	
  9071  0FF6                     	movf	(___flmul@prod+3),w
  9072  0FF6  085D               	movwf	(?___flmul+3)
  9073  0FF7  00C9               	movf	(___flmul@prod+2),w
  9074  0FF8  085C               	movwf	(?___flmul+2)
  9075  0FF9  00C8               	movf	(___flmul@prod+1),w
  9076  0FFA  085B               	movwf	(?___flmul+1)
  9077  0FFB  00C7               	movf	(___flmul@prod),w
  9078  0FFC  085A               	movwf	(?___flmul)
  9079  0FFD  00C6               
  9080                           	goto	l916
  9081  0FFE  2FFF               	
  9082                           l3264:	
  9083  0FFF                     	line	205
  9084                           	
  9085                           l916:	
  9086  0FFF                     	return
  9087  0FFF  0008               	opt stack 0
  9088                           GLOBAL	__end_of___flmul
  9089                           	__end_of___flmul:
  9090  1000                     	signat	___flmul,8316
  9091                           	global	__Umul8_16
  9092                           
  9093 ;; *************** function __Umul8_16 *****************
  9094 ;; Defined at:
  9095 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  9096 ;; Parameters:    Size  Location     Type
  9097 ;;  multiplier      1    wreg     unsigned char 
  9098 ;;  multiplicand    1    3[COMMON] unsigned char 
  9099 ;; Auto vars:     Size  Location     Type
  9100 ;;  multiplier      1    4[BANK0 ] unsigned char 
  9101 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  9102 ;;  product         2    0[BANK0 ] unsigned int 
  9103 ;; Return value:  Size  Location     Type
  9104 ;;                  2    3[COMMON] unsigned int 
  9105 ;; Registers used:
  9106 ;;		wreg, status,2, status,0
  9107 ;; Tracked objects:
  9108 ;;		On entry : 0/0
  9109 ;;		On exit  : 0/0
  9110 ;;		Unchanged: 0/0
  9111 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9112 ;;      Params:         2       0       0       0       0
  9113 ;;      Locals:         0       5       0       0       0
  9114 ;;      Temps:          2       0       0       0       0
  9115 ;;      Totals:         4       5       0       0       0
  9116 ;;Total ram usage:        9 bytes
  9117 ;; Hardware stack levels used:    1
  9118 ;; Hardware stack levels required when called:    2
  9119 ;; This function calls:
  9120 ;;		Nothing
  9121 ;; This function is called by:
  9122 ;;		___flmul
  9123 ;; This function uses a non-reentrant model
  9124 ;;
  9125                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  9126                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  9127                           	line	4
  9128                           global __ptext21
  9129                           __ptext21:	;psect for function __Umul8_16
  9130  1260                     psect	text21
  9131                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  9132                           	line	4
  9133                           	global	__size_of__Umul8_16
  9134                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  9135  002C                     	
  9136                           __Umul8_16:	
  9137  1260                     ;incstack = 0
  9138                           	opt	stack 4
  9139                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  9140                           ;__Umul8_16@multiplier stored from wreg
  9141                           	bcf	status, 5	;RP0=0, select bank0
  9142  1260  1283               	bcf	status, 6	;RP1=0, select bank0
  9143  1261  1303               	movwf	(__Umul8_16@multiplier)
  9144  1262  00A4               	line	5
  9145                           	
  9146                           l2570:	
  9147  1263                     	clrf	(__Umul8_16@product)
  9148  1263  01A0               	clrf	(__Umul8_16@product+1)
  9149  1264  01A1               	line	6
  9150                           	
  9151                           l2572:	
  9152  1265                     	movf	(__Umul8_16@multiplicand),w
  9153  1265  0873               	movwf	(??__Umul8_16+0)+0
  9154  1266  00F5               	clrf	(??__Umul8_16+0)+0+1
  9155  1267  01F6               	movf	0+(??__Umul8_16+0)+0,w
  9156  1268  0875               	movwf	(__Umul8_16@word_mpld)
  9157  1269  00A2               	movf	1+(??__Umul8_16+0)+0,w
  9158  126A  0876               	movwf	(__Umul8_16@word_mpld+1)
  9159  126B  00A3               	goto	l2574
  9160  126C  2A6D               	line	50
  9161                           	
  9162                           l953:	
  9163  126D                     	line	51
  9164                           	
  9165                           l2574:	
  9166  126D                     	btfss	(__Umul8_16@multiplier),(0)&7
  9167  126D  1C24               	goto	u3001
  9168  126E  2A70               	goto	u3000
  9169  126F  2A71               u3001:
  9170  1270                     	goto	l954
  9171  1270  2A77               u3000:
  9172  1271                     	line	52
  9173                           	
  9174                           l2576:	
  9175  1271                     	movf	(__Umul8_16@word_mpld),w
  9176  1271  0822               	addwf	(__Umul8_16@product),f
  9177  1272  07A0               	skipnc
  9178  1273  1803               	incf	(__Umul8_16@product+1),f
  9179  1274  0AA1               	movf	(__Umul8_16@word_mpld+1),w
  9180  1275  0823               	addwf	(__Umul8_16@product+1),f
  9181  1276  07A1               	line	53
  9182                           	
  9183                           l954:	
  9184  1277                     	line	54
  9185                           	movlw	01h
  9186  1277  3001               	
  9187                           u3015:
  9188  1278                     	clrc
  9189  1278  1003               	rlf	(__Umul8_16@word_mpld),f
  9190  1279  0DA2               	rlf	(__Umul8_16@word_mpld+1),f
  9191  127A  0DA3               	addlw	-1
  9192  127B  3EFF               	skipz
  9193  127C  1D03               	goto	u3015
  9194  127D  2A78               	line	55
  9195                           	clrc
  9196  127E  1003               	rrf	(__Umul8_16@multiplier),f
  9197  127F  0CA4               
  9198                           	line	56
  9199                           	
  9200                           l2578:	
  9201  1280                     	movf	((__Umul8_16@multiplier)),w
  9202  1280  0824               	btfss	status,2
  9203  1281  1D03               	goto	u3021
  9204  1282  2A84               	goto	u3020
  9205  1283  2A85               u3021:
  9206  1284                     	goto	l2574
  9207  1284  2A6D               u3020:
  9208  1285                     	goto	l2580
  9209  1285  2A86               	
  9210                           l955:	
  9211  1286                     	line	59
  9212                           	
  9213                           l2580:	
  9214  1286                     	movf	(__Umul8_16@product+1),w
  9215  1286  0821               	movwf	(?__Umul8_16+1)
  9216  1287  00F4               	movf	(__Umul8_16@product),w
  9217  1288  0820               	movwf	(?__Umul8_16)
  9218  1289  00F3               	goto	l956
  9219  128A  2A8B               	
  9220                           l2582:	
  9221  128B                     	line	60
  9222                           	
  9223                           l956:	
  9224  128B                     	return
  9225  128B  0008               	opt stack 0
  9226                           GLOBAL	__end_of__Umul8_16
  9227                           	__end_of__Umul8_16:
  9228  128C                     	signat	__Umul8_16,8314
  9229                           	global	___fldiv
  9230                           
  9231 ;; *************** function ___fldiv *****************
  9232 ;; Defined at:
  9233 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  9234 ;; Parameters:    Size  Location     Type
  9235 ;;  a               4   64[BANK0 ] unsigned int 
  9236 ;;  b               4   68[BANK0 ] unsigned int 
  9237 ;; Auto vars:     Size  Location     Type
  9238 ;;  grs             4    7[BANK1 ] unsigned long 
  9239 ;;  rem             4    0[BANK1 ] unsigned long 
  9240 ;;  new_exp         2    5[BANK1 ] int 
  9241 ;;  aexp            1   12[BANK1 ] unsigned char 
  9242 ;;  bexp            1   11[BANK1 ] unsigned char 
  9243 ;;  sign            1    4[BANK1 ] unsigned char 
  9244 ;; Return value:  Size  Location     Type
  9245 ;;                  4   64[BANK0 ] unsigned char 
  9246 ;; Registers used:
  9247 ;;		wreg, status,2, status,0, btemp+1
  9248 ;; Tracked objects:
  9249 ;;		On entry : 0/0
  9250 ;;		On exit  : 0/0
  9251 ;;		Unchanged: 0/0
  9252 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9253 ;;      Params:         0       8       0       0       0
  9254 ;;      Locals:         0       0      13       0       0
  9255 ;;      Temps:          0       5       0       0       0
  9256 ;;      Totals:         0      13      13       0       0
  9257 ;;Total ram usage:       26 bytes
  9258 ;; Hardware stack levels used:    1
  9259 ;; Hardware stack levels required when called:    2
  9260 ;; This function calls:
  9261 ;;		Nothing
  9262 ;; This function is called by:
  9263 ;;		_main
  9264 ;; This function uses a non-reentrant model
  9265 ;;
  9266                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
  9267                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  9268                           	line	8
  9269                           global __ptext22
  9270                           __ptext22:	;psect for function ___fldiv
  9271  09BD                     psect	text22
  9272                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  9273                           	line	8
  9274                           	global	__size_of___fldiv
  9275                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  9276  02CE                     	
  9277                           ___fldiv:	
  9278  09BD                     ;incstack = 0
  9279                           	opt	stack 5
  9280                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9281                           	line	26
  9282                           	
  9283                           l2984:	
  9284  09BD                     	bcf	status, 5	;RP0=0, select bank0
  9285  09BD  1283               	bcf	status, 6	;RP1=0, select bank0
  9286  09BE  1303               	movf	0+(___fldiv@b)+03h,w
  9287  09BF  0867               	andlw	080h
  9288  09C0  3980               	movwf	(??___fldiv+0)+0
  9289  09C1  00E8               	movf	(??___fldiv+0)+0,w
  9290  09C2  0868               	bsf	status, 5	;RP0=1, select bank1
  9291  09C3  1683               	bcf	status, 6	;RP1=0, select bank1
  9292  09C4  1303               	movwf	(___fldiv@sign)^080h
  9293  09C5  00C9               	line	27
  9294                           	
  9295                           l2986:	
  9296  09C6                     	bcf	status, 5	;RP0=0, select bank0
  9297  09C6  1283               	bcf	status, 6	;RP1=0, select bank0
  9298  09C7  1303               	movf	0+(___fldiv@b)+03h,w
  9299  09C8  0867               	movwf	(??___fldiv+0)+0
  9300  09C9  00E8               	addwf	(??___fldiv+0)+0,w
  9301  09CA  0768               	movwf	(??___fldiv+1)+0
  9302  09CB  00E9               	movf	(??___fldiv+1)+0,w
  9303  09CC  0869               	bsf	status, 5	;RP0=1, select bank1
  9304  09CD  1683               	bcf	status, 6	;RP1=0, select bank1
  9305  09CE  1303               	movwf	(___fldiv@bexp)^080h
  9306  09CF  00D0               	line	28
  9307                           	
  9308                           l2988:	
  9309  09D0                     	bcf	status, 5	;RP0=0, select bank0
  9310  09D0  1283               	bcf	status, 6	;RP1=0, select bank0
  9311  09D1  1303               	btfss	0+(___fldiv@b)+02h,(7)&7
  9312  09D2  1FE6               	goto	u3861
  9313  09D3  29D5               	goto	u3860
  9314  09D4  29D6               u3861:
  9315  09D5                     	goto	l2992
  9316  09D5  29DA               u3860:
  9317  09D6                     	line	29
  9318                           	
  9319                           l2990:	
  9320  09D6                     	bsf	status, 5	;RP0=1, select bank1
  9321  09D6  1683               	bcf	status, 6	;RP1=0, select bank1
  9322  09D7  1303               	bsf	(___fldiv@bexp)^080h+(0/8),(0)&7
  9323  09D8  1450               	goto	l2992
  9324  09D9  29DA               	line	30
  9325                           	
  9326                           l869:	
  9327  09DA                     	line	33
  9328                           	
  9329                           l2992:	
  9330  09DA                     	bsf	status, 5	;RP0=1, select bank1
  9331  09DA  1683               	bcf	status, 6	;RP1=0, select bank1
  9332  09DB  1303               	movf	((___fldiv@bexp)^080h),w
  9333  09DC  0850               	btfsc	status,2
  9334  09DD  1903               	goto	u3871
  9335  09DE  29E0               	goto	u3870
  9336  09DF  29E1               u3871:
  9337  09E0                     	goto	l3002
  9338  09E0  29F5               u3870:
  9339  09E1                     	line	35
  9340                           	
  9341                           l2994:	
  9342  09E1                     		incf	((___fldiv@bexp)^080h),w
  9343  09E1  0A50               	btfss	status,2
  9344  09E2  1D03               	goto	u3881
  9345  09E3  29E5               	goto	u3880
  9346  09E4  29E6               u3881:
  9347  09E5                     	goto	l2998
  9348  09E5  29F1               u3880:
  9349  09E6                     	line	37
  9350                           	
  9351                           l2996:	
  9352  09E6                     	movlw	0x0
  9353  09E6  3000               	bcf	status, 5	;RP0=0, select bank0
  9354  09E7  1283               	bcf	status, 6	;RP1=0, select bank0
  9355  09E8  1303               	movwf	(___fldiv@b+3)
  9356  09E9  00E7               	movlw	0x0
  9357  09EA  3000               	movwf	(___fldiv@b+2)
  9358  09EB  00E6               	movlw	0x0
  9359  09EC  3000               	movwf	(___fldiv@b+1)
  9360  09ED  00E5               	movlw	0x0
  9361  09EE  3000               	movwf	(___fldiv@b)
  9362  09EF  00E4               
  9363                           	goto	l2998
  9364  09F0  29F1               	line	38
  9365                           	
  9366                           l871:	
  9367  09F1                     	line	40
  9368                           	
  9369                           l2998:	
  9370  09F1                     	bcf	status, 5	;RP0=0, select bank0
  9371  09F1  1283               	bsf	(___fldiv@b)+(23/8),(23)&7
  9372  09F2  17E6               	line	42
  9373                           	
  9374                           l3000:	
  9375  09F3                     	clrf	0+(___fldiv@b)+03h
  9376  09F3  01E7               	line	43
  9377                           	goto	l3004
  9378  09F4  29FF               	line	44
  9379                           	
  9380                           l870:	
  9381  09F5                     	line	46
  9382                           	
  9383                           l3002:	
  9384  09F5                     	movlw	0x0
  9385  09F5  3000               	bcf	status, 5	;RP0=0, select bank0
  9386  09F6  1283               	movwf	(___fldiv@b+3)
  9387  09F7  00E7               	movlw	0x0
  9388  09F8  3000               	movwf	(___fldiv@b+2)
  9389  09F9  00E6               	movlw	0x0
  9390  09FA  3000               	movwf	(___fldiv@b+1)
  9391  09FB  00E5               	movlw	0x0
  9392  09FC  3000               	movwf	(___fldiv@b)
  9393  09FD  00E4               
  9394                           	goto	l3004
  9395  09FE  29FF               	line	47
  9396                           	
  9397                           l872:	
  9398  09FF                     	line	49
  9399                           	
  9400                           l3004:	
  9401  09FF                     	movf	0+(___fldiv@a)+03h,w
  9402  09FF  0863               	andlw	080h
  9403  0A00  3980               	movwf	(??___fldiv+0)+0
  9404  0A01  00E8               	movf	(??___fldiv+0)+0,w
  9405  0A02  0868               	bsf	status, 5	;RP0=1, select bank1
  9406  0A03  1683               	bcf	status, 6	;RP1=0, select bank1
  9407  0A04  1303               	xorwf	(___fldiv@sign)^080h,f
  9408  0A05  06C9               	line	50
  9409                           	
  9410                           l3006:	
  9411  0A06                     	bcf	status, 5	;RP0=0, select bank0
  9412  0A06  1283               	bcf	status, 6	;RP1=0, select bank0
  9413  0A07  1303               	movf	0+(___fldiv@a)+03h,w
  9414  0A08  0863               	movwf	(??___fldiv+0)+0
  9415  0A09  00E8               	addwf	(??___fldiv+0)+0,w
  9416  0A0A  0768               	movwf	(??___fldiv+1)+0
  9417  0A0B  00E9               	movf	(??___fldiv+1)+0,w
  9418  0A0C  0869               	bsf	status, 5	;RP0=1, select bank1
  9419  0A0D  1683               	bcf	status, 6	;RP1=0, select bank1
  9420  0A0E  1303               	movwf	(___fldiv@aexp)^080h
  9421  0A0F  00D1               	line	51
  9422                           	
  9423                           l3008:	
  9424  0A10                     	bcf	status, 5	;RP0=0, select bank0
  9425  0A10  1283               	bcf	status, 6	;RP1=0, select bank0
  9426  0A11  1303               	btfss	0+(___fldiv@a)+02h,(7)&7
  9427  0A12  1FE2               	goto	u3891
  9428  0A13  2A15               	goto	u3890
  9429  0A14  2A16               u3891:
  9430  0A15                     	goto	l3012
  9431  0A15  2A1A               u3890:
  9432  0A16                     	line	52
  9433                           	
  9434                           l3010:	
  9435  0A16                     	bsf	status, 5	;RP0=1, select bank1
  9436  0A16  1683               	bcf	status, 6	;RP1=0, select bank1
  9437  0A17  1303               	bsf	(___fldiv@aexp)^080h+(0/8),(0)&7
  9438  0A18  1451               	goto	l3012
  9439  0A19  2A1A               	line	53
  9440                           	
  9441                           l873:	
  9442  0A1A                     	line	56
  9443                           	
  9444                           l3012:	
  9445  0A1A                     	bsf	status, 5	;RP0=1, select bank1
  9446  0A1A  1683               	bcf	status, 6	;RP1=0, select bank1
  9447  0A1B  1303               	movf	((___fldiv@aexp)^080h),w
  9448  0A1C  0851               	btfsc	status,2
  9449  0A1D  1903               	goto	u3901
  9450  0A1E  2A20               	goto	u3900
  9451  0A1F  2A21               u3901:
  9452  0A20                     	goto	l3022
  9453  0A20  2A35               u3900:
  9454  0A21                     	line	58
  9455                           	
  9456                           l3014:	
  9457  0A21                     		incf	((___fldiv@aexp)^080h),w
  9458  0A21  0A51               	btfss	status,2
  9459  0A22  1D03               	goto	u3911
  9460  0A23  2A25               	goto	u3910
  9461  0A24  2A26               u3911:
  9462  0A25                     	goto	l3018
  9463  0A25  2A31               u3910:
  9464  0A26                     	line	60
  9465                           	
  9466                           l3016:	
  9467  0A26                     	movlw	0x0
  9468  0A26  3000               	bcf	status, 5	;RP0=0, select bank0
  9469  0A27  1283               	bcf	status, 6	;RP1=0, select bank0
  9470  0A28  1303               	movwf	(___fldiv@a+3)
  9471  0A29  00E3               	movlw	0x0
  9472  0A2A  3000               	movwf	(___fldiv@a+2)
  9473  0A2B  00E2               	movlw	0x0
  9474  0A2C  3000               	movwf	(___fldiv@a+1)
  9475  0A2D  00E1               	movlw	0x0
  9476  0A2E  3000               	movwf	(___fldiv@a)
  9477  0A2F  00E0               
  9478                           	goto	l3018
  9479  0A30  2A31               	line	61
  9480                           	
  9481                           l875:	
  9482  0A31                     	line	63
  9483                           	
  9484                           l3018:	
  9485  0A31                     	bcf	status, 5	;RP0=0, select bank0
  9486  0A31  1283               	bsf	(___fldiv@a)+(23/8),(23)&7
  9487  0A32  17E2               	line	65
  9488                           	
  9489                           l3020:	
  9490  0A33                     	clrf	0+(___fldiv@a)+03h
  9491  0A33  01E3               	line	66
  9492                           	goto	l876
  9493  0A34  2A3E               	line	67
  9494                           	
  9495                           l874:	
  9496  0A35                     	line	69
  9497                           	
  9498                           l3022:	
  9499  0A35                     	movlw	0x0
  9500  0A35  3000               	bcf	status, 5	;RP0=0, select bank0
  9501  0A36  1283               	movwf	(___fldiv@a+3)
  9502  0A37  00E3               	movlw	0x0
  9503  0A38  3000               	movwf	(___fldiv@a+2)
  9504  0A39  00E2               	movlw	0x0
  9505  0A3A  3000               	movwf	(___fldiv@a+1)
  9506  0A3B  00E1               	movlw	0x0
  9507  0A3C  3000               	movwf	(___fldiv@a)
  9508  0A3D  00E0               
  9509                           	line	70
  9510                           	
  9511                           l876:	
  9512  0A3E                     	line	75
  9513                           	movf	(___fldiv@a+3),w
  9514  0A3E  0863               	iorwf	(___fldiv@a+2),w
  9515  0A3F  0462               	iorwf	(___fldiv@a+1),w
  9516  0A40  0461               	iorwf	(___fldiv@a),w
  9517  0A41  0460               	skipz
  9518  0A42  1D03               	goto	u3921
  9519  0A43  2A45               	goto	u3920
  9520  0A44  2A46               u3921:
  9521  0A45                     	goto	l3032
  9522  0A45  2A64               u3920:
  9523  0A46                     	line	76
  9524                           	
  9525                           l3024:	
  9526  0A46                     	movlw	high highword(0)
  9527  0A46  3000               	movwf	(___fldiv@b+3)
  9528  0A47  00E7               	movlw	low highword(0)
  9529  0A48  3000               	movwf	(___fldiv@b+2)
  9530  0A49  00E6               	movlw	high(0)
  9531  0A4A  3000               	movwf	(___fldiv@b+1)
  9532  0A4B  00E5               	movlw	low(0)
  9533  0A4C  3000               	movwf	(___fldiv@b)
  9534  0A4D  00E4               
  9535                           	line	77
  9536                           	movlw	080h
  9537  0A4E  3080               	iorwf	0+(___fldiv@b)+02h,f
  9538  0A4F  04E6               	movlw	07Fh
  9539  0A50  307F               	iorwf	1+(___fldiv@b)+02h,f
  9540  0A51  04E7               	line	78
  9541                           	
  9542                           l3026:	
  9543  0A52                     	bsf	status, 5	;RP0=1, select bank1
  9544  0A52  1683               	bcf	status, 6	;RP1=0, select bank1
  9545  0A53  1303               	movf	(___fldiv@sign)^080h,w
  9546  0A54  0849               	bcf	status, 5	;RP0=0, select bank0
  9547  0A55  1283               	bcf	status, 6	;RP1=0, select bank0
  9548  0A56  1303               	movwf	(??___fldiv+0)+0
  9549  0A57  00E8               	movf	(??___fldiv+0)+0,w
  9550  0A58  0868               	iorwf	0+(___fldiv@b)+03h,f
  9551  0A59  04E7               	line	79
  9552                           	
  9553                           l3028:	
  9554  0A5A                     	movf	(___fldiv@b+3),w
  9555  0A5A  0867               	movwf	(?___fldiv+3)
  9556  0A5B  00E3               	movf	(___fldiv@b+2),w
  9557  0A5C  0866               	movwf	(?___fldiv+2)
  9558  0A5D  00E2               	movf	(___fldiv@b+1),w
  9559  0A5E  0865               	movwf	(?___fldiv+1)
  9560  0A5F  00E1               	movf	(___fldiv@b),w
  9561  0A60  0864               	movwf	(?___fldiv)
  9562  0A61  00E0               
  9563                           	goto	l878
  9564  0A62  2C8A               	
  9565                           l3030:	
  9566  0A63                     	goto	l878
  9567  0A63  2C8A               	line	80
  9568                           	
  9569                           l877:	
  9570  0A64                     	line	83
  9571                           	
  9572                           l3032:	
  9573  0A64                     	bsf	status, 5	;RP0=1, select bank1
  9574  0A64  1683               	bcf	status, 6	;RP1=0, select bank1
  9575  0A65  1303               	movf	((___fldiv@bexp)^080h),w
  9576  0A66  0850               	btfss	status,2
  9577  0A67  1D03               	goto	u3931
  9578  0A68  2A6A               	goto	u3930
  9579  0A69  2A6B               u3931:
  9580  0A6A                     	goto	l3038
  9581  0A6A  2A7F               u3930:
  9582  0A6B                     	line	84
  9583                           	
  9584                           l3034:	
  9585  0A6B                     	movlw	high highword(0)
  9586  0A6B  3000               	bcf	status, 5	;RP0=0, select bank0
  9587  0A6C  1283               	bcf	status, 6	;RP1=0, select bank0
  9588  0A6D  1303               	movwf	(___fldiv@b+3)
  9589  0A6E  00E7               	movlw	low highword(0)
  9590  0A6F  3000               	movwf	(___fldiv@b+2)
  9591  0A70  00E6               	movlw	high(0)
  9592  0A71  3000               	movwf	(___fldiv@b+1)
  9593  0A72  00E5               	movlw	low(0)
  9594  0A73  3000               	movwf	(___fldiv@b)
  9595  0A74  00E4               
  9596                           	line	85
  9597                           	movf	(___fldiv@b+3),w
  9598  0A75  0867               	movwf	(?___fldiv+3)
  9599  0A76  00E3               	movf	(___fldiv@b+2),w
  9600  0A77  0866               	movwf	(?___fldiv+2)
  9601  0A78  00E2               	movf	(___fldiv@b+1),w
  9602  0A79  0865               	movwf	(?___fldiv+1)
  9603  0A7A  00E1               	movf	(___fldiv@b),w
  9604  0A7B  0864               	movwf	(?___fldiv)
  9605  0A7C  00E0               
  9606                           	goto	l878
  9607  0A7D  2C8A               	
  9608                           l3036:	
  9609  0A7E                     	goto	l878
  9610  0A7E  2C8A               	line	86
  9611                           	
  9612                           l879:	
  9613  0A7F                     	line	89
  9614                           	
  9615                           l3038:	
  9616  0A7F                     	bsf	status, 5	;RP0=1, select bank1
  9617  0A7F  1683               	bcf	status, 6	;RP1=0, select bank1
  9618  0A80  1303               	movf	(___fldiv@aexp)^080h,w
  9619  0A81  0851               	bcf	status, 5	;RP0=0, select bank0
  9620  0A82  1283               	bcf	status, 6	;RP1=0, select bank0
  9621  0A83  1303               	movwf	(??___fldiv+0)+0
  9622  0A84  00E8               	clrf	(??___fldiv+0)+0+1
  9623  0A85  01E9               	comf	(??___fldiv+0)+0,f
  9624  0A86  09E8               	comf	(??___fldiv+0)+1,f
  9625  0A87  09E9               	incf	(??___fldiv+0)+0,f
  9626  0A88  0AE8               	skipnz
  9627  0A89  1903               	incf	(??___fldiv+0)+1,f
  9628  0A8A  0AE9               	bsf	status, 5	;RP0=1, select bank1
  9629  0A8B  1683               	bcf	status, 6	;RP1=0, select bank1
  9630  0A8C  1303               	movf	(___fldiv@bexp)^080h,w
  9631  0A8D  0850               	bcf	status, 5	;RP0=0, select bank0
  9632  0A8E  1283               	bcf	status, 6	;RP1=0, select bank0
  9633  0A8F  1303               	addwf	0+(??___fldiv+0)+0,w
  9634  0A90  0768               	movwf	(??___fldiv+2)+0
  9635  0A91  00EA               	movf	1+(??___fldiv+0)+0,w
  9636  0A92  0869               	skipnc
  9637  0A93  1803               	incf	1+(??___fldiv+0)+0,w
  9638  0A94  0A69               	movwf	((??___fldiv+2)+0)+1
  9639  0A95  00EB               	movf	0+(??___fldiv+2)+0,w
  9640  0A96  086A               	addlw	low(07Fh)
  9641  0A97  3E7F               	bsf	status, 5	;RP0=1, select bank1
  9642  0A98  1683               	bcf	status, 6	;RP1=0, select bank1
  9643  0A99  1303               	movwf	(___fldiv@new_exp)^080h
  9644  0A9A  00CA               	bcf	status, 5	;RP0=0, select bank0
  9645  0A9B  1283               	bcf	status, 6	;RP1=0, select bank0
  9646  0A9C  1303               	movf	1+(??___fldiv+2)+0,w
  9647  0A9D  086B               	skipnc
  9648  0A9E  1803               	addlw	1
  9649  0A9F  3E01               	addlw	high(07Fh)
  9650  0AA0  3E00               	bsf	status, 5	;RP0=1, select bank1
  9651  0AA1  1683               	bcf	status, 6	;RP1=0, select bank1
  9652  0AA2  1303               	movwf	1+(___fldiv@new_exp)^080h
  9653  0AA3  00CB               	line	92
  9654                           	
  9655                           l3040:	
  9656  0AA4                     	bcf	status, 5	;RP0=0, select bank0
  9657  0AA4  1283               	bcf	status, 6	;RP1=0, select bank0
  9658  0AA5  1303               	movf	(___fldiv@b+3),w
  9659  0AA6  0867               	bsf	status, 5	;RP0=1, select bank1
  9660  0AA7  1683               	bcf	status, 6	;RP1=0, select bank1
  9661  0AA8  1303               	movwf	(___fldiv@rem+3)^080h
  9662  0AA9  00C8               	bcf	status, 5	;RP0=0, select bank0
  9663  0AAA  1283               	bcf	status, 6	;RP1=0, select bank0
  9664  0AAB  1303               	movf	(___fldiv@b+2),w
  9665  0AAC  0866               	bsf	status, 5	;RP0=1, select bank1
  9666  0AAD  1683               	bcf	status, 6	;RP1=0, select bank1
  9667  0AAE  1303               	movwf	(___fldiv@rem+2)^080h
  9668  0AAF  00C7               	bcf	status, 5	;RP0=0, select bank0
  9669  0AB0  1283               	bcf	status, 6	;RP1=0, select bank0
  9670  0AB1  1303               	movf	(___fldiv@b+1),w
  9671  0AB2  0865               	bsf	status, 5	;RP0=1, select bank1
  9672  0AB3  1683               	bcf	status, 6	;RP1=0, select bank1
  9673  0AB4  1303               	movwf	(___fldiv@rem+1)^080h
  9674  0AB5  00C6               	bcf	status, 5	;RP0=0, select bank0
  9675  0AB6  1283               	bcf	status, 6	;RP1=0, select bank0
  9676  0AB7  1303               	movf	(___fldiv@b),w
  9677  0AB8  0864               	bsf	status, 5	;RP0=1, select bank1
  9678  0AB9  1683               	bcf	status, 6	;RP1=0, select bank1
  9679  0ABA  1303               	movwf	(___fldiv@rem)^080h
  9680  0ABB  00C5               
  9681                           	line	93
  9682                           	
  9683                           l3042:	
  9684  0ABC                     	movlw	high highword(0)
  9685  0ABC  3000               	bcf	status, 5	;RP0=0, select bank0
  9686  0ABD  1283               	bcf	status, 6	;RP1=0, select bank0
  9687  0ABE  1303               	movwf	(___fldiv@b+3)
  9688  0ABF  00E7               	movlw	low highword(0)
  9689  0AC0  3000               	movwf	(___fldiv@b+2)
  9690  0AC1  00E6               	movlw	high(0)
  9691  0AC2  3000               	movwf	(___fldiv@b+1)
  9692  0AC3  00E5               	movlw	low(0)
  9693  0AC4  3000               	movwf	(___fldiv@b)
  9694  0AC5  00E4               
  9695                           	line	94
  9696                           	
  9697                           l3044:	
  9698  0AC6                     	movlw	high highword(0)
  9699  0AC6  3000               	bsf	status, 5	;RP0=1, select bank1
  9700  0AC7  1683               	bcf	status, 6	;RP1=0, select bank1
  9701  0AC8  1303               	movwf	(___fldiv@grs+3)^080h
  9702  0AC9  00CF               	movlw	low highword(0)
  9703  0ACA  3000               	movwf	(___fldiv@grs+2)^080h
  9704  0ACB  00CE               	movlw	high(0)
  9705  0ACC  3000               	movwf	(___fldiv@grs+1)^080h
  9706  0ACD  00CD               	movlw	low(0)
  9707  0ACE  3000               	movwf	(___fldiv@grs)^080h
  9708  0ACF  00CC               
  9709                           	line	96
  9710                           	
  9711                           l3046:	
  9712  0AD0                     	clrf	(___fldiv@aexp)^080h
  9713  0AD0  01D1               	line	97
  9714                           	goto	l3066
  9715  0AD1  2B5C               	
  9716                           l881:	
  9717  0AD2                     	line	100
  9718                           	
  9719                           l3048:	
  9720  0AD2                     	movf	((___fldiv@aexp)^080h),w
  9721  0AD2  0851               	btfsc	status,2
  9722  0AD3  1903               	goto	u3941
  9723  0AD4  2AD6               	goto	u3940
  9724  0AD5  2AD7               u3941:
  9725  0AD6                     	goto	l3058
  9726  0AD6  2B08               u3940:
  9727  0AD7                     	line	101
  9728                           	
  9729                           l3050:	
  9730  0AD7                     	movlw	01h
  9731  0AD7  3001               	bcf	status, 5	;RP0=0, select bank0
  9732  0AD8  1283               	bcf	status, 6	;RP1=0, select bank0
  9733  0AD9  1303               	movwf	(??___fldiv+0)+0
  9734  0ADA  00E8               u3955:
  9735  0ADB                     	clrc
  9736  0ADB  1003               	bsf	status, 5	;RP0=1, select bank1
  9737  0ADC  1683               	bcf	status, 6	;RP1=0, select bank1
  9738  0ADD  1303               	rlf	(___fldiv@rem)^080h,f
  9739  0ADE  0DC5               	rlf	(___fldiv@rem+1)^080h,f
  9740  0ADF  0DC6               	rlf	(___fldiv@rem+2)^080h,f
  9741  0AE0  0DC7               	rlf	(___fldiv@rem+3)^080h,f
  9742  0AE1  0DC8               	bcf	status, 5	;RP0=0, select bank0
  9743  0AE2  1283               	bcf	status, 6	;RP1=0, select bank0
  9744  0AE3  1303               	decfsz	(??___fldiv+0)+0
  9745  0AE4  0BE8               	goto	u3955
  9746  0AE5  2ADB               	line	102
  9747                           	movlw	01h
  9748  0AE6  3001               	movwf	(??___fldiv+0)+0
  9749  0AE7  00E8               u3965:
  9750  0AE8                     	clrc
  9751  0AE8  1003               	rlf	(___fldiv@b),f
  9752  0AE9  0DE4               	rlf	(___fldiv@b+1),f
  9753  0AEA  0DE5               	rlf	(___fldiv@b+2),f
  9754  0AEB  0DE6               	rlf	(___fldiv@b+3),f
  9755  0AEC  0DE7               	decfsz	(??___fldiv+0)+0
  9756  0AED  0BE8               	goto	u3965
  9757  0AEE  2AE8               	line	103
  9758                           	
  9759                           l3052:	
  9760  0AEF                     	bsf	status, 5	;RP0=1, select bank1
  9761  0AEF  1683               	bcf	status, 6	;RP1=0, select bank1
  9762  0AF0  1303               	btfss	(___fldiv@grs+3)^080h,(31)&7
  9763  0AF1  1FCF               	goto	u3971
  9764  0AF2  2AF4               	goto	u3970
  9765  0AF3  2AF5               u3971:
  9766  0AF4                     	goto	l3056
  9767  0AF4  2AF9               u3970:
  9768  0AF5                     	line	104
  9769                           	
  9770                           l3054:	
  9771  0AF5                     	bcf	status, 5	;RP0=0, select bank0
  9772  0AF5  1283               	bcf	status, 6	;RP1=0, select bank0
  9773  0AF6  1303               	bsf	(___fldiv@b)+(0/8),(0)&7
  9774  0AF7  1464               	goto	l3056
  9775  0AF8  2AF9               	line	105
  9776                           	
  9777                           l883:	
  9778  0AF9                     	line	106
  9779                           	
  9780                           l3056:	
  9781  0AF9                     	movlw	01h
  9782  0AF9  3001               	bcf	status, 5	;RP0=0, select bank0
  9783  0AFA  1283               	movwf	(??___fldiv+0)+0
  9784  0AFB  00E8               u3985:
  9785  0AFC                     	clrc
  9786  0AFC  1003               	bsf	status, 5	;RP0=1, select bank1
  9787  0AFD  1683               	bcf	status, 6	;RP1=0, select bank1
  9788  0AFE  1303               	rlf	(___fldiv@grs)^080h,f
  9789  0AFF  0DCC               	rlf	(___fldiv@grs+1)^080h,f
  9790  0B00  0DCD               	rlf	(___fldiv@grs+2)^080h,f
  9791  0B01  0DCE               	rlf	(___fldiv@grs+3)^080h,f
  9792  0B02  0DCF               	bcf	status, 5	;RP0=0, select bank0
  9793  0B03  1283               	bcf	status, 6	;RP1=0, select bank0
  9794  0B04  1303               	decfsz	(??___fldiv+0)+0
  9795  0B05  0BE8               	goto	u3985
  9796  0B06  2AFC               	goto	l3058
  9797  0B07  2B08               	line	107
  9798                           	
  9799                           l882:	
  9800  0B08                     	line	112
  9801                           	
  9802                           l3058:	
  9803  0B08                     	bcf	status, 5	;RP0=0, select bank0
  9804  0B08  1283               	movf	(___fldiv@a+3),w
  9805  0B09  0863               	bsf	status, 5	;RP0=1, select bank1
  9806  0B0A  1683               	bcf	status, 6	;RP1=0, select bank1
  9807  0B0B  1303               	subwf	(___fldiv@rem+3)^080h,w
  9808  0B0C  0248               	skipz
  9809  0B0D  1D03               	goto	u3995
  9810  0B0E  2B25               	bcf	status, 5	;RP0=0, select bank0
  9811  0B0F  1283               	bcf	status, 6	;RP1=0, select bank0
  9812  0B10  1303               	movf	(___fldiv@a+2),w
  9813  0B11  0862               	bsf	status, 5	;RP0=1, select bank1
  9814  0B12  1683               	bcf	status, 6	;RP1=0, select bank1
  9815  0B13  1303               	subwf	(___fldiv@rem+2)^080h,w
  9816  0B14  0247               	skipz
  9817  0B15  1D03               	goto	u3995
  9818  0B16  2B25               	bcf	status, 5	;RP0=0, select bank0
  9819  0B17  1283               	bcf	status, 6	;RP1=0, select bank0
  9820  0B18  1303               	movf	(___fldiv@a+1),w
  9821  0B19  0861               	bsf	status, 5	;RP0=1, select bank1
  9822  0B1A  1683               	bcf	status, 6	;RP1=0, select bank1
  9823  0B1B  1303               	subwf	(___fldiv@rem+1)^080h,w
  9824  0B1C  0246               	skipz
  9825  0B1D  1D03               	goto	u3995
  9826  0B1E  2B25               	bcf	status, 5	;RP0=0, select bank0
  9827  0B1F  1283               	bcf	status, 6	;RP1=0, select bank0
  9828  0B20  1303               	movf	(___fldiv@a),w
  9829  0B21  0860               	bsf	status, 5	;RP0=1, select bank1
  9830  0B22  1683               	bcf	status, 6	;RP1=0, select bank1
  9831  0B23  1303               	subwf	(___fldiv@rem)^080h,w
  9832  0B24  0245               u3995:
  9833  0B25                     	skipc
  9834  0B25  1C03               	goto	u3991
  9835  0B26  2B28               	goto	u3990
  9836  0B27  2B29               u3991:
  9837  0B28                     	goto	l3064
  9838  0B28  2B53               u3990:
  9839  0B29                     	line	115
  9840                           	
  9841                           l3060:	
  9842  0B29                     	bsf	(___fldiv@grs)^080h+(30/8),(30)&7
  9843  0B29  174F               	line	116
  9844                           	
  9845                           l3062:	
  9846  0B2A                     	bcf	status, 5	;RP0=0, select bank0
  9847  0B2A  1283               	bcf	status, 6	;RP1=0, select bank0
  9848  0B2B  1303               	movf	(___fldiv@a),w
  9849  0B2C  0860               	bsf	status, 5	;RP0=1, select bank1
  9850  0B2D  1683               	bcf	status, 6	;RP1=0, select bank1
  9851  0B2E  1303               	subwf	(___fldiv@rem)^080h,f
  9852  0B2F  02C5               	bcf	status, 5	;RP0=0, select bank0
  9853  0B30  1283               	bcf	status, 6	;RP1=0, select bank0
  9854  0B31  1303               	movf	(___fldiv@a+1),w
  9855  0B32  0861               	skipc
  9856  0B33  1C03               	incfsz	(___fldiv@a+1),w
  9857  0B34  0F61               	goto	u4005
  9858  0B35  2B37               	goto	u4006
  9859  0B36  2B3A               u4005:
  9860  0B37                     	bsf	status, 5	;RP0=1, select bank1
  9861  0B37  1683               	bcf	status, 6	;RP1=0, select bank1
  9862  0B38  1303               	subwf	(___fldiv@rem+1)^080h,f
  9863  0B39  02C6               u4006:
  9864  0B3A                     	bcf	status, 5	;RP0=0, select bank0
  9865  0B3A  1283               	bcf	status, 6	;RP1=0, select bank0
  9866  0B3B  1303               	movf	(___fldiv@a+2),w
  9867  0B3C  0862               	skipc
  9868  0B3D  1C03               	incfsz	(___fldiv@a+2),w
  9869  0B3E  0F62               	goto	u4007
  9870  0B3F  2B41               	goto	u4008
  9871  0B40  2B44               u4007:
  9872  0B41                     	bsf	status, 5	;RP0=1, select bank1
  9873  0B41  1683               	bcf	status, 6	;RP1=0, select bank1
  9874  0B42  1303               	subwf	(___fldiv@rem+2)^080h,f
  9875  0B43  02C7               u4008:
  9876  0B44                     	bcf	status, 5	;RP0=0, select bank0
  9877  0B44  1283               	bcf	status, 6	;RP1=0, select bank0
  9878  0B45  1303               	movf	(___fldiv@a+3),w
  9879  0B46  0863               	skipc
  9880  0B47  1C03               	incfsz	(___fldiv@a+3),w
  9881  0B48  0F63               	goto	u4009
  9882  0B49  2B4B               	goto	u4000
  9883  0B4A  2B4E               u4009:
  9884  0B4B                     	bsf	status, 5	;RP0=1, select bank1
  9885  0B4B  1683               	bcf	status, 6	;RP1=0, select bank1
  9886  0B4C  1303               	subwf	(___fldiv@rem+3)^080h,f
  9887  0B4D  02C8               u4000:
  9888  0B4E                     	bcf	status, 5	;RP0=0, select bank0
  9889  0B4E  1283               	bcf	status, 6	;RP1=0, select bank0
  9890  0B4F  1303               	bsf	status, 5	;RP0=1, select bank1
  9891  0B50  1683               	bcf	status, 6	;RP1=0, select bank1
  9892  0B51  1303               
  9893                           	goto	l3064
  9894  0B52  2B53               	line	117
  9895                           	
  9896                           l884:	
  9897  0B53                     	line	118
  9898                           	
  9899                           l3064:	
  9900  0B53                     	movlw	low(01h)
  9901  0B53  3001               	bcf	status, 5	;RP0=0, select bank0
  9902  0B54  1283               	bcf	status, 6	;RP1=0, select bank0
  9903  0B55  1303               	movwf	(??___fldiv+0)+0
  9904  0B56  00E8               	movf	(??___fldiv+0)+0,w
  9905  0B57  0868               	bsf	status, 5	;RP0=1, select bank1
  9906  0B58  1683               	bcf	status, 6	;RP1=0, select bank1
  9907  0B59  1303               	addwf	(___fldiv@aexp)^080h,f
  9908  0B5A  07D1               	goto	l3066
  9909  0B5B  2B5C               	line	119
  9910                           	
  9911                           l880:	
  9912  0B5C                     	line	97
  9913                           	
  9914                           l3066:	
  9915  0B5C                     	movlw	low(01Ah)
  9916  0B5C  301A               	subwf	(___fldiv@aexp)^080h,w
  9917  0B5D  0251               	skipc
  9918  0B5E  1C03               	goto	u4011
  9919  0B5F  2B61               	goto	u4010
  9920  0B60  2B62               u4011:
  9921  0B61                     	goto	l3048
  9922  0B61  2AD2               u4010:
  9923  0B62                     	goto	l3068
  9924  0B62  2B63               	
  9925                           l885:	
  9926  0B63                     	line	122
  9927                           	
  9928                           l3068:	
  9929  0B63                     	movf	(___fldiv@rem+3)^080h,w
  9930  0B63  0848               	iorwf	(___fldiv@rem+2)^080h,w
  9931  0B64  0447               	iorwf	(___fldiv@rem+1)^080h,w
  9932  0B65  0446               	iorwf	(___fldiv@rem)^080h,w
  9933  0B66  0445               	skipnz
  9934  0B67  1903               	goto	u4021
  9935  0B68  2B6A               	goto	u4020
  9936  0B69  2B6B               u4021:
  9937  0B6A                     	goto	l3082
  9938  0B6A  2B99               u4020:
  9939  0B6B                     	line	123
  9940                           	
  9941                           l3070:	
  9942  0B6B                     	bsf	(___fldiv@grs)^080h+(0/8),(0)&7
  9943  0B6B  144C               	goto	l3082
  9944  0B6C  2B99               	line	124
  9945                           	
  9946                           l886:	
  9947  0B6D                     	line	127
  9948                           	goto	l3082
  9949  0B6D  2B99               	
  9950                           l888:	
  9951  0B6E                     	line	128
  9952                           	
  9953                           l3072:	
  9954  0B6E                     	movlw	01h
  9955  0B6E  3001               	bcf	status, 5	;RP0=0, select bank0
  9956  0B6F  1283               	movwf	(??___fldiv+0)+0
  9957  0B70  00E8               u4035:
  9958  0B71                     	clrc
  9959  0B71  1003               	rlf	(___fldiv@b),f
  9960  0B72  0DE4               	rlf	(___fldiv@b+1),f
  9961  0B73  0DE5               	rlf	(___fldiv@b+2),f
  9962  0B74  0DE6               	rlf	(___fldiv@b+3),f
  9963  0B75  0DE7               	decfsz	(??___fldiv+0)+0
  9964  0B76  0BE8               	goto	u4035
  9965  0B77  2B71               	line	129
  9966                           	
  9967                           l3074:	
  9968  0B78                     	bsf	status, 5	;RP0=1, select bank1
  9969  0B78  1683               	bcf	status, 6	;RP1=0, select bank1
  9970  0B79  1303               	btfss	(___fldiv@grs+3)^080h,(31)&7
  9971  0B7A  1FCF               	goto	u4041
  9972  0B7B  2B7D               	goto	u4040
  9973  0B7C  2B7E               u4041:
  9974  0B7D                     	goto	l3078
  9975  0B7D  2B82               u4040:
  9976  0B7E                     	line	130
  9977                           	
  9978                           l3076:	
  9979  0B7E                     	bcf	status, 5	;RP0=0, select bank0
  9980  0B7E  1283               	bcf	status, 6	;RP1=0, select bank0
  9981  0B7F  1303               	bsf	(___fldiv@b)+(0/8),(0)&7
  9982  0B80  1464               	goto	l3078
  9983  0B81  2B82               	line	131
  9984                           	
  9985                           l889:	
  9986  0B82                     	line	132
  9987                           	
  9988                           l3078:	
  9989  0B82                     	movlw	01h
  9990  0B82  3001               	bcf	status, 5	;RP0=0, select bank0
  9991  0B83  1283               	movwf	(??___fldiv+0)+0
  9992  0B84  00E8               u4055:
  9993  0B85                     	clrc
  9994  0B85  1003               	bsf	status, 5	;RP0=1, select bank1
  9995  0B86  1683               	bcf	status, 6	;RP1=0, select bank1
  9996  0B87  1303               	rlf	(___fldiv@grs)^080h,f
  9997  0B88  0DCC               	rlf	(___fldiv@grs+1)^080h,f
  9998  0B89  0DCD               	rlf	(___fldiv@grs+2)^080h,f
  9999  0B8A  0DCE               	rlf	(___fldiv@grs+3)^080h,f
 10000  0B8B  0DCF               	bcf	status, 5	;RP0=0, select bank0
 10001  0B8C  1283               	bcf	status, 6	;RP1=0, select bank0
 10002  0B8D  1303               	decfsz	(??___fldiv+0)+0
 10003  0B8E  0BE8               	goto	u4055
 10004  0B8F  2B85               	line	133
 10005                           	
 10006                           l3080:	
 10007  0B90                     	movlw	0FFh
 10008  0B90  30FF               	bsf	status, 5	;RP0=1, select bank1
 10009  0B91  1683               	bcf	status, 6	;RP1=0, select bank1
 10010  0B92  1303               	addwf	(___fldiv@new_exp)^080h,f
 10011  0B93  07CA               	skipnc
 10012  0B94  1803               	incf	(___fldiv@new_exp+1)^080h,f
 10013  0B95  0ACB               	movlw	0FFh
 10014  0B96  30FF               	addwf	(___fldiv@new_exp+1)^080h,f
 10015  0B97  07CB               	goto	l3082
 10016  0B98  2B99               	line	134
 10017                           	
 10018                           l887:	
 10019  0B99                     	line	127
 10020                           	
 10021                           l3082:	
 10022  0B99                     	bcf	status, 5	;RP0=0, select bank0
 10023  0B99  1283               	bcf	status, 6	;RP1=0, select bank0
 10024  0B9A  1303               	btfss	(___fldiv@b+2),(23)&7
 10025  0B9B  1FE6               	goto	u4061
 10026  0B9C  2B9E               	goto	u4060
 10027  0B9D  2B9F               u4061:
 10028  0B9E                     	goto	l3072
 10029  0B9E  2B6E               u4060:
 10030  0B9F                     	goto	l3084
 10031  0B9F  2BA0               	
 10032                           l890:	
 10033  0BA0                     	line	139
 10034                           	
 10035                           l3084:	
 10036  0BA0                     	bsf	status, 5	;RP0=1, select bank1
 10037  0BA0  1683               	bcf	status, 6	;RP1=0, select bank1
 10038  0BA1  1303               	clrf	(___fldiv@aexp)^080h
 10039  0BA2  01D1               	line	140
 10040                           	
 10041                           l3086:	
 10042  0BA3                     	btfss	(___fldiv@grs+3)^080h,(31)&7
 10043  0BA3  1FCF               	goto	u4071
 10044  0BA4  2BA6               	goto	u4070
 10045  0BA5  2BA7               u4071:
 10046  0BA6                     	goto	l3094
 10047  0BA6  2BD9               u4070:
 10048  0BA7                     	line	141
 10049                           	
 10050                           l3088:	
 10051  0BA7                     	movlw	0FFh
 10052  0BA7  30FF               	andwf	(___fldiv@grs)^080h,w
 10053  0BA8  054C               	bcf	status, 5	;RP0=0, select bank0
 10054  0BA9  1283               	bcf	status, 6	;RP1=0, select bank0
 10055  0BAA  1303               	movwf	(??___fldiv+0)+0
 10056  0BAB  00E8               	movlw	0FFh
 10057  0BAC  30FF               	bsf	status, 5	;RP0=1, select bank1
 10058  0BAD  1683               	bcf	status, 6	;RP1=0, select bank1
 10059  0BAE  1303               	andwf	(___fldiv@grs+1)^080h,w
 10060  0BAF  054D               	bcf	status, 5	;RP0=0, select bank0
 10061  0BB0  1283               	bcf	status, 6	;RP1=0, select bank0
 10062  0BB1  1303               	movwf	((??___fldiv+0)+0+1)
 10063  0BB2  00E9               	movlw	0FFh
 10064  0BB3  30FF               	bsf	status, 5	;RP0=1, select bank1
 10065  0BB4  1683               	bcf	status, 6	;RP1=0, select bank1
 10066  0BB5  1303               	andwf	(___fldiv@grs+2)^080h,w
 10067  0BB6  054E               	bcf	status, 5	;RP0=0, select bank0
 10068  0BB7  1283               	bcf	status, 6	;RP1=0, select bank0
 10069  0BB8  1303               	movwf	((??___fldiv+0)+0+2)
 10070  0BB9  00EA               	movlw	07Fh
 10071  0BBA  307F               	bsf	status, 5	;RP0=1, select bank1
 10072  0BBB  1683               	bcf	status, 6	;RP1=0, select bank1
 10073  0BBC  1303               	andwf	(___fldiv@grs+3)^080h,w
 10074  0BBD  054F               	bcf	status, 5	;RP0=0, select bank0
 10075  0BBE  1283               	bcf	status, 6	;RP1=0, select bank0
 10076  0BBF  1303               	movwf	((??___fldiv+0)+0+3)
 10077  0BC0  00EB               	movf	3+(??___fldiv+0)+0,w
 10078  0BC1  086B               	iorwf	2+(??___fldiv+0)+0,w
 10079  0BC2  046A               	iorwf	1+(??___fldiv+0)+0,w
 10080  0BC3  0469               	iorwf	0+(??___fldiv+0)+0,w
 10081  0BC4  0468               	skipnz
 10082  0BC5  1903               	goto	u4081
 10083  0BC6  2BC8               	goto	u4080
 10084  0BC7  2BC9               u4081:
 10085  0BC8                     	goto	l892
 10086  0BC8  2BCE               u4080:
 10087  0BC9                     	line	142
 10088                           	
 10089                           l3090:	
 10090  0BC9                     	bsf	status, 5	;RP0=1, select bank1
 10091  0BC9  1683               	bcf	status, 6	;RP1=0, select bank1
 10092  0BCA  1303               	clrf	(___fldiv@aexp)^080h
 10093  0BCB  01D1               	incf	(___fldiv@aexp)^080h,f
 10094  0BCC  0AD1               	line	143
 10095                           	goto	l3094
 10096  0BCD  2BD9               	line	144
 10097                           	
 10098                           l892:	
 10099  0BCE                     	line	145
 10100                           	btfss	(___fldiv@b),(0)&7
 10101  0BCE  1C64               	goto	u4091
 10102  0BCF  2BD1               	goto	u4090
 10103  0BD0  2BD2               u4091:
 10104  0BD1                     	goto	l3094
 10105  0BD1  2BD9               u4090:
 10106  0BD2                     	line	146
 10107                           	
 10108                           l3092:	
 10109  0BD2                     	bsf	status, 5	;RP0=1, select bank1
 10110  0BD2  1683               	bcf	status, 6	;RP1=0, select bank1
 10111  0BD3  1303               	clrf	(___fldiv@aexp)^080h
 10112  0BD4  01D1               	incf	(___fldiv@aexp)^080h,f
 10113  0BD5  0AD1               	goto	l3094
 10114  0BD6  2BD9               	line	147
 10115                           	
 10116                           l894:	
 10117  0BD7                     	goto	l3094
 10118  0BD7  2BD9               	line	148
 10119                           	
 10120                           l893:	
 10121  0BD8                     	goto	l3094
 10122  0BD8  2BD9               	line	149
 10123                           	
 10124                           l891:	
 10125  0BD9                     	line	150
 10126                           	
 10127                           l3094:	
 10128  0BD9                     	bsf	status, 5	;RP0=1, select bank1
 10129  0BD9  1683               	bcf	status, 6	;RP1=0, select bank1
 10130  0BDA  1303               	movf	((___fldiv@aexp)^080h),w
 10131  0BDB  0851               	btfsc	status,2
 10132  0BDC  1903               	goto	u4101
 10133  0BDD  2BDF               	goto	u4100
 10134  0BDE  2BE0               u4101:
 10135  0BDF                     	goto	l3104
 10136  0BDF  2C17               u4100:
 10137  0BE0                     	line	151
 10138                           	
 10139                           l3096:	
 10140  0BE0                     	movlw	01h
 10141  0BE0  3001               	bcf	status, 5	;RP0=0, select bank0
 10142  0BE1  1283               	bcf	status, 6	;RP1=0, select bank0
 10143  0BE2  1303               	addwf	(___fldiv@b),f
 10144  0BE3  07E4               	movlw	0
 10145  0BE4  3000               	skipnc
 10146  0BE5  1803               movlw 1
 10147  0BE6  3001               	addwf	(___fldiv@b+1),f
 10148  0BE7  07E5               	movlw	0
 10149  0BE8  3000               	skipnc
 10150  0BE9  1803               movlw 1
 10151  0BEA  3001               	addwf	(___fldiv@b+2),f
 10152  0BEB  07E6               	movlw	0
 10153  0BEC  3000               	skipnc
 10154  0BED  1803               movlw 1
 10155  0BEE  3001               	addwf	(___fldiv@b+3),f
 10156  0BEF  07E7               	line	152
 10157                           	
 10158                           l3098:	
 10159  0BF0                     	btfss	(___fldiv@b+3),(24)&7
 10160  0BF0  1C67               	goto	u4111
 10161  0BF1  2BF3               	goto	u4110
 10162  0BF2  2BF4               u4111:
 10163  0BF3                     	goto	l3104
 10164  0BF3  2C17               u4110:
 10165  0BF4                     	line	153
 10166                           	
 10167                           l3100:	
 10168  0BF4                     	movf	(___fldiv@b),w
 10169  0BF4  0864               	movwf	(??___fldiv+0)+0
 10170  0BF5  00E8               	movf	(___fldiv@b+1),w
 10171  0BF6  0865               	movwf	((??___fldiv+0)+0+1)
 10172  0BF7  00E9               	movf	(___fldiv@b+2),w
 10173  0BF8  0866               	movwf	((??___fldiv+0)+0+2)
 10174  0BF9  00EA               	movf	(___fldiv@b+3),w
 10175  0BFA  0867               	movwf	((??___fldiv+0)+0+3)
 10176  0BFB  00EB               	movlw	01h
 10177  0BFC  3001               	movwf	(??___fldiv+4)+0
 10178  0BFD  00EC               u4125:
 10179  0BFE                     	rlf	(??___fldiv+0)+3,w
 10180  0BFE  0D6B               	rrf	(??___fldiv+0)+3,f
 10181  0BFF  0CEB               	rrf	(??___fldiv+0)+2,f
 10182  0C00  0CEA               	rrf	(??___fldiv+0)+1,f
 10183  0C01  0CE9               	rrf	(??___fldiv+0)+0,f
 10184  0C02  0CE8               u4120:
 10185  0C03                     	decfsz	(??___fldiv+4)+0,f
 10186  0C03  0BEC               	goto	u4125
 10187  0C04  2BFE               	movf	3+(??___fldiv+0)+0,w
 10188  0C05  086B               	movwf	(___fldiv@b+3)
 10189  0C06  00E7               	movf	2+(??___fldiv+0)+0,w
 10190  0C07  086A               	movwf	(___fldiv@b+2)
 10191  0C08  00E6               	movf	1+(??___fldiv+0)+0,w
 10192  0C09  0869               	movwf	(___fldiv@b+1)
 10193  0C0A  00E5               	movf	0+(??___fldiv+0)+0,w
 10194  0C0B  0868               	movwf	(___fldiv@b)
 10195  0C0C  00E4               
 10196                           	line	154
 10197                           	
 10198                           l3102:	
 10199  0C0D                     	movlw	01h
 10200  0C0D  3001               	bsf	status, 5	;RP0=1, select bank1
 10201  0C0E  1683               	bcf	status, 6	;RP1=0, select bank1
 10202  0C0F  1303               	addwf	(___fldiv@new_exp)^080h,f
 10203  0C10  07CA               	skipnc
 10204  0C11  1803               	incf	(___fldiv@new_exp+1)^080h,f
 10205  0C12  0ACB               	movlw	0
 10206  0C13  3000               	addwf	(___fldiv@new_exp+1)^080h,f
 10207  0C14  07CB               	goto	l3104
 10208  0C15  2C17               	line	155
 10209                           	
 10210                           l896:	
 10211  0C16                     	goto	l3104
 10212  0C16  2C17               	line	156
 10213                           	
 10214                           l895:	
 10215  0C17                     	line	159
 10216                           	
 10217                           l3104:	
 10218  0C17                     	bsf	status, 5	;RP0=1, select bank1
 10219  0C17  1683               	bcf	status, 6	;RP1=0, select bank1
 10220  0C18  1303               	movf	(___fldiv@new_exp+1)^080h,w
 10221  0C19  084B               	xorlw	80h
 10222  0C1A  3A80               	movwf	btemp+1
 10223  0C1B  00FF               	movlw	(0)^80h
 10224  0C1C  3080               	subwf	btemp+1,w
 10225  0C1D  027F               	skipz
 10226  0C1E  1D03               	goto	u4135
 10227  0C1F  2C22               	movlw	0FFh
 10228  0C20  30FF               	subwf	(___fldiv@new_exp)^080h,w
 10229  0C21  024A               u4135:
 10230  0C22                     
 10231                           	skipc
 10232  0C22  1C03               	goto	u4131
 10233  0C23  2C25               	goto	u4130
 10234  0C24  2C26               u4131:
 10235  0C25                     	goto	l3108
 10236  0C25  2C37               u4130:
 10237  0C26                     	line	160
 10238                           	
 10239                           l3106:	
 10240  0C26                     	movlw	0FFh
 10241  0C26  30FF               	bsf	status, 5	;RP0=1, select bank1
 10242  0C27  1683               	bcf	status, 6	;RP1=0, select bank1
 10243  0C28  1303               	movwf	(___fldiv@new_exp)^080h
 10244  0C29  00CA               	movlw	0
 10245  0C2A  3000               	movwf	((___fldiv@new_exp)^080h)+1
 10246  0C2B  00CB               	line	161
 10247                           	movlw	high highword(0)
 10248  0C2C  3000               	bcf	status, 5	;RP0=0, select bank0
 10249  0C2D  1283               	bcf	status, 6	;RP1=0, select bank0
 10250  0C2E  1303               	movwf	(___fldiv@b+3)
 10251  0C2F  00E7               	movlw	low highword(0)
 10252  0C30  3000               	movwf	(___fldiv@b+2)
 10253  0C31  00E6               	movlw	high(0)
 10254  0C32  3000               	movwf	(___fldiv@b+1)
 10255  0C33  00E5               	movlw	low(0)
 10256  0C34  3000               	movwf	(___fldiv@b)
 10257  0C35  00E4               
 10258                           	goto	l3108
 10259  0C36  2C37               	line	162
 10260                           	
 10261                           l897:	
 10262  0C37                     	line	165
 10263                           	
 10264                           l3108:	
 10265  0C37                     	bsf	status, 5	;RP0=1, select bank1
 10266  0C37  1683               	bcf	status, 6	;RP1=0, select bank1
 10267  0C38  1303               	movf	(___fldiv@new_exp+1)^080h,w
 10268  0C39  084B               	xorlw	80h
 10269  0C3A  3A80               	movwf	btemp+1
 10270  0C3B  00FF               	movlw	(0)^80h
 10271  0C3C  3080               	subwf	btemp+1,w
 10272  0C3D  027F               	skipz
 10273  0C3E  1D03               	goto	u4145
 10274  0C3F  2C42               	movlw	01h
 10275  0C40  3001               	subwf	(___fldiv@new_exp)^080h,w
 10276  0C41  024A               u4145:
 10277  0C42                     
 10278                           	skipnc
 10279  0C42  1803               	goto	u4141
 10280  0C43  2C45               	goto	u4140
 10281  0C44  2C46               u4141:
 10282  0C45                     	goto	l898
 10283  0C45  2C57               u4140:
 10284  0C46                     	line	166
 10285                           	
 10286                           l3110:	
 10287  0C46                     	bsf	status, 5	;RP0=1, select bank1
 10288  0C46  1683               	bcf	status, 6	;RP1=0, select bank1
 10289  0C47  1303               	clrf	(___fldiv@new_exp)^080h
 10290  0C48  01CA               	clrf	(___fldiv@new_exp+1)^080h
 10291  0C49  01CB               	line	167
 10292                           	
 10293                           l3112:	
 10294  0C4A                     	movlw	high highword(0)
 10295  0C4A  3000               	bcf	status, 5	;RP0=0, select bank0
 10296  0C4B  1283               	bcf	status, 6	;RP1=0, select bank0
 10297  0C4C  1303               	movwf	(___fldiv@b+3)
 10298  0C4D  00E7               	movlw	low highword(0)
 10299  0C4E  3000               	movwf	(___fldiv@b+2)
 10300  0C4F  00E6               	movlw	high(0)
 10301  0C50  3000               	movwf	(___fldiv@b+1)
 10302  0C51  00E5               	movlw	low(0)
 10303  0C52  3000               	movwf	(___fldiv@b)
 10304  0C53  00E4               
 10305                           	line	169
 10306                           	
 10307                           l3114:	
 10308  0C54                     	bsf	status, 5	;RP0=1, select bank1
 10309  0C54  1683               	bcf	status, 6	;RP1=0, select bank1
 10310  0C55  1303               	clrf	(___fldiv@sign)^080h
 10311  0C56  01C9               	line	170
 10312                           	
 10313                           l898:	
 10314  0C57                     	line	173
 10315                           	bsf	status, 5	;RP0=1, select bank1
 10316  0C57  1683               	bcf	status, 6	;RP1=0, select bank1
 10317  0C58  1303               	movf	(___fldiv@new_exp)^080h,w
 10318  0C59  084A               	bcf	status, 5	;RP0=0, select bank0
 10319  0C5A  1283               	bcf	status, 6	;RP1=0, select bank0
 10320  0C5B  1303               	movwf	(??___fldiv+0)+0
 10321  0C5C  00E8               	movf	(??___fldiv+0)+0,w
 10322  0C5D  0868               	bsf	status, 5	;RP0=1, select bank1
 10323  0C5E  1683               	bcf	status, 6	;RP1=0, select bank1
 10324  0C5F  1303               	movwf	(___fldiv@bexp)^080h
 10325  0C60  00D0               	line	175
 10326                           	
 10327                           l3116:	
 10328  0C61                     	btfss	(___fldiv@bexp)^080h,(0)&7
 10329  0C61  1C50               	goto	u4151
 10330  0C62  2C64               	goto	u4150
 10331  0C63  2C65               u4151:
 10332  0C64                     	goto	l3120
 10333  0C64  2C69               u4150:
 10334  0C65                     	line	176
 10335                           	
 10336                           l3118:	
 10337  0C65                     	bcf	status, 5	;RP0=0, select bank0
 10338  0C65  1283               	bcf	status, 6	;RP1=0, select bank0
 10339  0C66  1303               	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
 10340  0C67  17E6               	line	177
 10341                           	goto	l900
 10342  0C68  2C6E               	line	179
 10343                           	
 10344                           l899:	
 10345  0C69                     	line	180
 10346                           	
 10347                           l3120:	
 10348  0C69                     	movlw	low(07Fh)
 10349  0C69  307F               	bcf	status, 5	;RP0=0, select bank0
 10350  0C6A  1283               	movwf	(??___fldiv+0)+0
 10351  0C6B  00E8               	movf	(??___fldiv+0)+0,w
 10352  0C6C  0868               	andwf	0+(___fldiv@b)+02h,f
 10353  0C6D  05E6               	line	181
 10354                           	
 10355                           l900:	
 10356  0C6E                     	line	182
 10357                           	bsf	status, 5	;RP0=1, select bank1
 10358  0C6E  1683               	bcf	status, 6	;RP1=0, select bank1
 10359  0C6F  1303               	movf	(___fldiv@bexp)^080h,w
 10360  0C70  0850               	bcf	status, 5	;RP0=0, select bank0
 10361  0C71  1283               	bcf	status, 6	;RP1=0, select bank0
 10362  0C72  1303               	movwf	(??___fldiv+0)+0
 10363  0C73  00E8               	clrc
 10364  0C74  1003               	rrf	(??___fldiv+0)+0,w
 10365  0C75  0C68               	movwf	(??___fldiv+1)+0
 10366  0C76  00E9               	movf	(??___fldiv+1)+0,w
 10367  0C77  0869               	movwf	0+(___fldiv@b)+03h
 10368  0C78  00E7               	line	183
 10369                           	bsf	status, 5	;RP0=1, select bank1
 10370  0C79  1683               	bcf	status, 6	;RP1=0, select bank1
 10371  0C7A  1303               	movf	(___fldiv@sign)^080h,w
 10372  0C7B  0849               	bcf	status, 5	;RP0=0, select bank0
 10373  0C7C  1283               	bcf	status, 6	;RP1=0, select bank0
 10374  0C7D  1303               	movwf	(??___fldiv+0)+0
 10375  0C7E  00E8               	movf	(??___fldiv+0)+0,w
 10376  0C7F  0868               	iorwf	0+(___fldiv@b)+03h,f
 10377  0C80  04E7               	line	184
 10378                           	
 10379                           l3122:	
 10380  0C81                     	movf	(___fldiv@b+3),w
 10381  0C81  0867               	movwf	(?___fldiv+3)
 10382  0C82  00E3               	movf	(___fldiv@b+2),w
 10383  0C83  0866               	movwf	(?___fldiv+2)
 10384  0C84  00E2               	movf	(___fldiv@b+1),w
 10385  0C85  0865               	movwf	(?___fldiv+1)
 10386  0C86  00E1               	movf	(___fldiv@b),w
 10387  0C87  0864               	movwf	(?___fldiv)
 10388  0C88  00E0               
 10389                           	goto	l878
 10390  0C89  2C8A               	
 10391                           l3124:	
 10392  0C8A                     	line	185
 10393                           	
 10394                           l878:	
 10395  0C8A                     	return
 10396  0C8A  0008               	opt stack 0
 10397                           GLOBAL	__end_of___fldiv
 10398                           	__end_of___fldiv:
 10399  0C8B                     	signat	___fldiv,8316
 10400                           	global	___fladd
 10401                           
 10402 ;; *************** function ___fladd *****************
 10403 ;; Defined at:
 10404 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 10405 ;; Parameters:    Size  Location     Type
 10406 ;;  b               4   14[BANK0 ] unsigned char 
 10407 ;;  a               4   18[BANK0 ] unsigned char 
 10408 ;; Auto vars:     Size  Location     Type
 10409 ;;  grs             1   37[BANK0 ] unsigned char 
 10410 ;;  bexp            1   36[BANK0 ] unsigned char 
 10411 ;;  aexp            1   35[BANK0 ] unsigned char 
 10412 ;;  signs           1   34[BANK0 ] unsigned char 
 10413 ;; Return value:  Size  Location     Type
 10414 ;;                  4   14[BANK0 ] unsigned char 
 10415 ;; Registers used:
 10416 ;;		wreg, status,2, status,0, btemp+1
 10417 ;; Tracked objects:
 10418 ;;		On entry : 0/0
 10419 ;;		On exit  : 0/0
 10420 ;;		Unchanged: 0/0
 10421 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10422 ;;      Params:         0       8       0       0       0
 10423 ;;      Locals:         0       4       0       0       0
 10424 ;;      Temps:          0      12       0       0       0
 10425 ;;      Totals:         0      24       0       0       0
 10426 ;;Total ram usage:       24 bytes
 10427 ;; Hardware stack levels used:    1
 10428 ;; Hardware stack levels required when called:    2
 10429 ;; This function calls:
 10430 ;;		Nothing
 10431 ;; This function is called by:
 10432 ;;		_main
 10433 ;; This function uses a non-reentrant model
 10434 ;;
 10435                           psect	text23,local,class=CODE,delta=2,merge=1,group=1
 10436                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 10437                           	line	10
 10438                           global __ptext23
 10439                           __ptext23:	;psect for function ___fladd
 10440  1544                     psect	text23
 10441                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 10442                           	line	10
 10443                           	global	__size_of___fladd
 10444                           	__size_of___fladd	equ	__end_of___fladd-___fladd
 10445  02BC                     	
 10446                           ___fladd:	
 10447  1544                     ;incstack = 0
 10448                           	opt	stack 5
 10449                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
 10450                           	line	21
 10451                           	
 10452                           l2790:	
 10453  1544                     	bcf	status, 5	;RP0=0, select bank0
 10454  1544  1283               	bcf	status, 6	;RP1=0, select bank0
 10455  1545  1303               	movf	0+(___fladd@b)+03h,w
 10456  1546  0831               	andlw	080h
 10457  1547  3980               	movwf	(??___fladd+0)+0
 10458  1548  00B6               	movf	(??___fladd+0)+0,w
 10459  1549  0836               	movwf	(___fladd@signs)
 10460  154A  00C2               	line	22
 10461                           	
 10462                           l2792:	
 10463  154B                     	movf	0+(___fladd@b)+03h,w
 10464  154B  0831               	movwf	(??___fladd+0)+0
 10465  154C  00B6               	addwf	(??___fladd+0)+0,w
 10466  154D  0736               	movwf	(??___fladd+1)+0
 10467  154E  00B7               	movf	(??___fladd+1)+0,w
 10468  154F  0837               	movwf	(___fladd@bexp)
 10469  1550  00C4               	line	23
 10470                           	
 10471                           l2794:	
 10472  1551                     	btfss	0+(___fladd@b)+02h,(7)&7
 10473  1551  1FB0               	goto	u3401
 10474  1552  2D54               	goto	u3400
 10475  1553  2D55               u3401:
 10476  1554                     	goto	l2798
 10477  1554  2D57               u3400:
 10478  1555                     	line	24
 10479                           	
 10480                           l2796:	
 10481  1555                     	bsf	(___fladd@bexp)+(0/8),(0)&7
 10482  1555  1444               	goto	l2798
 10483  1556  2D57               	line	25
 10484                           	
 10485                           l812:	
 10486  1557                     	line	28
 10487                           	
 10488                           l2798:	
 10489  1557                     	movf	((___fladd@bexp)),w
 10490  1557  0844               	btfsc	status,2
 10491  1558  1903               	goto	u3411
 10492  1559  2D5B               	goto	u3410
 10493  155A  2D5C               u3411:
 10494  155B                     	goto	l2808
 10495  155B  2D6D               u3410:
 10496  155C                     	line	30
 10497                           	
 10498                           l2800:	
 10499  155C                     		incf	((___fladd@bexp)),w
 10500  155C  0A44               	btfss	status,2
 10501  155D  1D03               	goto	u3421
 10502  155E  2D60               	goto	u3420
 10503  155F  2D61               u3421:
 10504  1560                     	goto	l2804
 10505  1560  2D6A               u3420:
 10506  1561                     	line	32
 10507                           	
 10508                           l2802:	
 10509  1561                     	movlw	0x0
 10510  1561  3000               	movwf	(___fladd@b+3)
 10511  1562  00B1               	movlw	0x0
 10512  1563  3000               	movwf	(___fladd@b+2)
 10513  1564  00B0               	movlw	0x0
 10514  1565  3000               	movwf	(___fladd@b+1)
 10515  1566  00AF               	movlw	0x0
 10516  1567  3000               	movwf	(___fladd@b)
 10517  1568  00AE               
 10518                           	goto	l2804
 10519  1569  2D6A               	line	33
 10520                           	
 10521                           l814:	
 10522  156A                     	line	35
 10523                           	
 10524                           l2804:	
 10525  156A                     	bsf	(___fladd@b)+(23/8),(23)&7
 10526  156A  17B0               	line	37
 10527                           	
 10528                           l2806:	
 10529  156B                     	clrf	0+(___fladd@b)+03h
 10530  156B  01B1               	line	38
 10531                           	goto	l2810
 10532  156C  2D76               	line	39
 10533                           	
 10534                           l813:	
 10535  156D                     	line	41
 10536                           	
 10537                           l2808:	
 10538  156D                     	movlw	0x0
 10539  156D  3000               	movwf	(___fladd@b+3)
 10540  156E  00B1               	movlw	0x0
 10541  156F  3000               	movwf	(___fladd@b+2)
 10542  1570  00B0               	movlw	0x0
 10543  1571  3000               	movwf	(___fladd@b+1)
 10544  1572  00AF               	movlw	0x0
 10545  1573  3000               	movwf	(___fladd@b)
 10546  1574  00AE               
 10547                           	goto	l2810
 10548  1575  2D76               	line	42
 10549                           	
 10550                           l815:	
 10551  1576                     	line	44
 10552                           	
 10553                           l2810:	
 10554  1576                     	movf	0+(___fladd@a)+03h,w
 10555  1576  0835               	andlw	080h
 10556  1577  3980               	movwf	(??___fladd+0)+0
 10557  1578  00B6               	movf	(??___fladd+0)+0,w
 10558  1579  0836               	movwf	(___fladd@aexp)
 10559  157A  00C3               	line	46
 10560                           	
 10561                           l2812:	
 10562  157B                     	movf	(___fladd@aexp),w
 10563  157B  0843               	xorwf	(___fladd@signs),w
 10564  157C  0642               	skipnz
 10565  157D  1903               	goto	u3431
 10566  157E  2D80               	goto	u3430
 10567  157F  2D81               u3431:
 10568  1580                     	goto	l2816
 10569  1580  2D83               u3430:
 10570  1581                     	line	47
 10571                           	
 10572                           l2814:	
 10573  1581                     	bsf	(___fladd@signs)+(6/8),(6)&7
 10574  1581  1742               	goto	l2816
 10575  1582  2D83               	line	48
 10576                           	
 10577                           l816:	
 10578  1583                     	line	49
 10579                           	
 10580                           l2816:	
 10581  1583                     	movf	0+(___fladd@a)+03h,w
 10582  1583  0835               	movwf	(??___fladd+0)+0
 10583  1584  00B6               	addwf	(??___fladd+0)+0,w
 10584  1585  0736               	movwf	(??___fladd+1)+0
 10585  1586  00B7               	movf	(??___fladd+1)+0,w
 10586  1587  0837               	movwf	(___fladd@aexp)
 10587  1588  00C3               	line	50
 10588                           	
 10589                           l2818:	
 10590  1589                     	btfss	0+(___fladd@a)+02h,(7)&7
 10591  1589  1FB4               	goto	u3441
 10592  158A  2D8C               	goto	u3440
 10593  158B  2D8D               u3441:
 10594  158C                     	goto	l2822
 10595  158C  2D8F               u3440:
 10596  158D                     	line	51
 10597                           	
 10598                           l2820:	
 10599  158D                     	bsf	(___fladd@aexp)+(0/8),(0)&7
 10600  158D  1443               	goto	l2822
 10601  158E  2D8F               	line	52
 10602                           	
 10603                           l817:	
 10604  158F                     	line	55
 10605                           	
 10606                           l2822:	
 10607  158F                     	movf	((___fladd@aexp)),w
 10608  158F  0843               	btfsc	status,2
 10609  1590  1903               	goto	u3451
 10610  1591  2D93               	goto	u3450
 10611  1592  2D94               u3451:
 10612  1593                     	goto	l2832
 10613  1593  2DA5               u3450:
 10614  1594                     	line	57
 10615                           	
 10616                           l2824:	
 10617  1594                     		incf	((___fladd@aexp)),w
 10618  1594  0A43               	btfss	status,2
 10619  1595  1D03               	goto	u3461
 10620  1596  2D98               	goto	u3460
 10621  1597  2D99               u3461:
 10622  1598                     	goto	l2828
 10623  1598  2DA2               u3460:
 10624  1599                     	line	59
 10625                           	
 10626                           l2826:	
 10627  1599                     	movlw	0x0
 10628  1599  3000               	movwf	(___fladd@a+3)
 10629  159A  00B5               	movlw	0x0
 10630  159B  3000               	movwf	(___fladd@a+2)
 10631  159C  00B4               	movlw	0x0
 10632  159D  3000               	movwf	(___fladd@a+1)
 10633  159E  00B3               	movlw	0x0
 10634  159F  3000               	movwf	(___fladd@a)
 10635  15A0  00B2               
 10636                           	goto	l2828
 10637  15A1  2DA2               	line	60
 10638                           	
 10639                           l819:	
 10640  15A2                     	line	62
 10641                           	
 10642                           l2828:	
 10643  15A2                     	bsf	(___fladd@a)+(23/8),(23)&7
 10644  15A2  17B4               	line	64
 10645                           	
 10646                           l2830:	
 10647  15A3                     	clrf	0+(___fladd@a)+03h
 10648  15A3  01B5               	line	65
 10649                           	goto	l820
 10650  15A4  2DAD               	line	66
 10651                           	
 10652                           l818:	
 10653  15A5                     	line	68
 10654                           	
 10655                           l2832:	
 10656  15A5                     	movlw	0x0
 10657  15A5  3000               	movwf	(___fladd@a+3)
 10658  15A6  00B5               	movlw	0x0
 10659  15A7  3000               	movwf	(___fladd@a+2)
 10660  15A8  00B4               	movlw	0x0
 10661  15A9  3000               	movwf	(___fladd@a+1)
 10662  15AA  00B3               	movlw	0x0
 10663  15AB  3000               	movwf	(___fladd@a)
 10664  15AC  00B2               
 10665                           	line	69
 10666                           	
 10667                           l820:	
 10668  15AD                     	line	75
 10669                           	movf	(___fladd@bexp),w
 10670  15AD  0844               	subwf	(___fladd@aexp),w
 10671  15AE  0243               	skipnc
 10672  15AF  1803               	goto	u3471
 10673  15B0  2DB2               	goto	u3470
 10674  15B1  2DB3               u3471:
 10675  15B2                     	goto	l2868
 10676  15B2  2DF9               u3470:
 10677  15B3                     	line	77
 10678                           	
 10679                           l2834:	
 10680  15B3                     	btfss	(___fladd@signs),(6)&7
 10681  15B3  1F42               	goto	u3481
 10682  15B4  2DB6               	goto	u3480
 10683  15B5  2DB7               u3481:
 10684  15B6                     	goto	l2838
 10685  15B6  2DBC               u3480:
 10686  15B7                     	line	78
 10687                           	
 10688                           l2836:	
 10689  15B7                     	movlw	low(080h)
 10690  15B7  3080               	movwf	(??___fladd+0)+0
 10691  15B8  00B6               	movf	(??___fladd+0)+0,w
 10692  15B9  0836               	xorwf	(___fladd@signs),f
 10693  15BA  06C2               	goto	l2838
 10694  15BB  2DBC               	line	79
 10695                           	
 10696                           l822:	
 10697  15BC                     	line	81
 10698                           	
 10699                           l2838:	
 10700  15BC                     	movf	(___fladd@bexp),w
 10701  15BC  0844               	movwf	(??___fladd+0)+0
 10702  15BD  00B6               	movf	(??___fladd+0)+0,w
 10703  15BE  0836               	movwf	(___fladd@grs)
 10704  15BF  00C5               	line	82
 10705                           	
 10706                           l2840:	
 10707  15C0                     	movf	(___fladd@aexp),w
 10708  15C0  0843               	movwf	(??___fladd+0)+0
 10709  15C1  00B6               	movf	(??___fladd+0)+0,w
 10710  15C2  0836               	movwf	(___fladd@bexp)
 10711  15C3  00C4               	line	83
 10712                           	
 10713                           l2842:	
 10714  15C4                     	movf	(___fladd@grs),w
 10715  15C4  0845               	movwf	(??___fladd+0)+0
 10716  15C5  00B6               	movf	(??___fladd+0)+0,w
 10717  15C6  0836               	movwf	(___fladd@aexp)
 10718  15C7  00C3               	line	84
 10719                           	
 10720                           l2844:	
 10721  15C8                     	movf	(___fladd@b),w
 10722  15C8  082E               	movwf	(??___fladd+0)+0
 10723  15C9  00B6               	movf	(??___fladd+0)+0,w
 10724  15CA  0836               	movwf	(___fladd@grs)
 10725  15CB  00C5               	line	85
 10726                           	
 10727                           l2846:	
 10728  15CC                     	movf	(___fladd@a),w
 10729  15CC  0832               	movwf	(??___fladd+0)+0
 10730  15CD  00B6               	movf	(??___fladd+0)+0,w
 10731  15CE  0836               	movwf	(___fladd@b)
 10732  15CF  00AE               	line	86
 10733                           	
 10734                           l2848:	
 10735  15D0                     	movf	(___fladd@grs),w
 10736  15D0  0845               	movwf	(??___fladd+0)+0
 10737  15D1  00B6               	movf	(??___fladd+0)+0,w
 10738  15D2  0836               	movwf	(___fladd@a)
 10739  15D3  00B2               	line	87
 10740                           	
 10741                           l2850:	
 10742  15D4                     	movf	0+(___fladd@b)+01h,w
 10743  15D4  082F               	movwf	(??___fladd+0)+0
 10744  15D5  00B6               	movf	(??___fladd+0)+0,w
 10745  15D6  0836               	movwf	(___fladd@grs)
 10746  15D7  00C5               	line	88
 10747                           	
 10748                           l2852:	
 10749  15D8                     	movf	0+(___fladd@a)+01h,w
 10750  15D8  0833               	movwf	(??___fladd+0)+0
 10751  15D9  00B6               	movf	(??___fladd+0)+0,w
 10752  15DA  0836               	movwf	0+(___fladd@b)+01h
 10753  15DB  00AF               	line	89
 10754                           	
 10755                           l2854:	
 10756  15DC                     	movf	(___fladd@grs),w
 10757  15DC  0845               	movwf	(??___fladd+0)+0
 10758  15DD  00B6               	movf	(??___fladd+0)+0,w
 10759  15DE  0836               	movwf	0+(___fladd@a)+01h
 10760  15DF  00B3               	line	90
 10761                           	
 10762                           l2856:	
 10763  15E0                     	movf	0+(___fladd@b)+02h,w
 10764  15E0  0830               	movwf	(??___fladd+0)+0
 10765  15E1  00B6               	movf	(??___fladd+0)+0,w
 10766  15E2  0836               	movwf	(___fladd@grs)
 10767  15E3  00C5               	line	91
 10768                           	
 10769                           l2858:	
 10770  15E4                     	movf	0+(___fladd@a)+02h,w
 10771  15E4  0834               	movwf	(??___fladd+0)+0
 10772  15E5  00B6               	movf	(??___fladd+0)+0,w
 10773  15E6  0836               	movwf	0+(___fladd@b)+02h
 10774  15E7  00B0               	line	92
 10775                           	
 10776                           l2860:	
 10777  15E8                     	movf	(___fladd@grs),w
 10778  15E8  0845               	movwf	(??___fladd+0)+0
 10779  15E9  00B6               	movf	(??___fladd+0)+0,w
 10780  15EA  0836               	movwf	0+(___fladd@a)+02h
 10781  15EB  00B4               	line	93
 10782                           	
 10783                           l2862:	
 10784  15EC                     	movf	0+(___fladd@b)+03h,w
 10785  15EC  0831               	movwf	(??___fladd+0)+0
 10786  15ED  00B6               	movf	(??___fladd+0)+0,w
 10787  15EE  0836               	movwf	(___fladd@grs)
 10788  15EF  00C5               	line	94
 10789                           	
 10790                           l2864:	
 10791  15F0                     	movf	0+(___fladd@a)+03h,w
 10792  15F0  0835               	movwf	(??___fladd+0)+0
 10793  15F1  00B6               	movf	(??___fladd+0)+0,w
 10794  15F2  0836               	movwf	0+(___fladd@b)+03h
 10795  15F3  00B1               	line	95
 10796                           	
 10797                           l2866:	
 10798  15F4                     	movf	(___fladd@grs),w
 10799  15F4  0845               	movwf	(??___fladd+0)+0
 10800  15F5  00B6               	movf	(??___fladd+0)+0,w
 10801  15F6  0836               	movwf	0+(___fladd@a)+03h
 10802  15F7  00B5               	goto	l2868
 10803  15F8  2DF9               	line	96
 10804                           	
 10805                           l821:	
 10806  15F9                     	line	98
 10807                           	
 10808                           l2868:	
 10809  15F9                     	clrf	(___fladd@grs)
 10810  15F9  01C5               	line	100
 10811                           	
 10812                           l2870:	
 10813  15FA                     	movf	(___fladd@bexp),w
 10814  15FA  0844               	movwf	(??___fladd+0)+0
 10815  15FB  00B6               	clrf	(??___fladd+0)+0+1
 10816  15FC  01B7               	comf	(??___fladd+0)+0,f
 10817  15FD  09B6               	comf	(??___fladd+0)+1,f
 10818  15FE  09B7               	incf	(??___fladd+0)+0,f
 10819  15FF  0AB6               	skipnz
 10820  1600  1903               	incf	(??___fladd+0)+1,f
 10821  1601  0AB7               	movf	(___fladd@aexp),w
 10822  1602  0843               	addwf	0+(??___fladd+0)+0,w
 10823  1603  0736               	movwf	(??___fladd+2)+0
 10824  1604  00B8               	movf	1+(??___fladd+0)+0,w
 10825  1605  0837               	skipnc
 10826  1606  1803               	incf	1+(??___fladd+0)+0,w
 10827  1607  0A37               	movwf	((??___fladd+2)+0)+1
 10828  1608  00B9               	movf	1+(??___fladd+2)+0,w
 10829  1609  0839               	xorlw	80h
 10830  160A  3A80               	movwf	btemp+1
 10831  160B  00FF               	movlw	(0)^80h
 10832  160C  3080               	subwf	btemp+1,w
 10833  160D  027F               	skipz
 10834  160E  1D03               	goto	u3495
 10835  160F  2E12               	movlw	01Ah
 10836  1610  301A               	subwf	0+(??___fladd+2)+0,w
 10837  1611  0238               u3495:
 10838  1612                     
 10839                           	skipc
 10840  1612  1C03               	goto	u3491
 10841  1613  2E15               	goto	u3490
 10842  1614  2E16               u3491:
 10843  1615                     	goto	l2886
 10844  1615  2E57               u3490:
 10845  1616                     	line	101
 10846                           	
 10847                           l2872:	
 10848  1616                     	bcf	status, 5	;RP0=0, select bank0
 10849  1616  1283               	bcf	status, 6	;RP1=0, select bank0
 10850  1617  1303               	movf	(___fladd@b+3),w
 10851  1618  0831               	iorwf	(___fladd@b+2),w
 10852  1619  0430               	iorwf	(___fladd@b+1),w
 10853  161A  042F               	iorwf	(___fladd@b),w
 10854  161B  042E               	skipz
 10855  161C  1D03               	goto	u3501
 10856  161D  2E1F               	goto	u3500
 10857  161E  2E21               u3501:
 10858  161F                     	movlw	1
 10859  161F  3001               	goto	u3510
 10860  1620  2E22               u3500:
 10861  1621                     	movlw	0
 10862  1621  3000               u3510:
 10863  1622                     	movwf	(??___fladd+0)+0
 10864  1622  00B6               	movf	(??___fladd+0)+0,w
 10865  1623  0836               	movwf	(___fladd@grs)
 10866  1624  00C5               	line	102
 10867                           	movlw	high highword(0)
 10868  1625  3000               	movwf	(___fladd@b+3)
 10869  1626  00B1               	movlw	low highword(0)
 10870  1627  3000               	movwf	(___fladd@b+2)
 10871  1628  00B0               	movlw	high(0)
 10872  1629  3000               	movwf	(___fladd@b+1)
 10873  162A  00AF               	movlw	low(0)
 10874  162B  3000               	movwf	(___fladd@b)
 10875  162C  00AE               
 10876                           	line	103
 10877                           	movf	(___fladd@aexp),w
 10878  162D  0843               	movwf	(??___fladd+0)+0
 10879  162E  00B6               	movf	(??___fladd+0)+0,w
 10880  162F  0836               	movwf	(___fladd@bexp)
 10881  1630  00C4               	line	104
 10882                           	goto	l824
 10883  1631  2E60               	line	105
 10884                           	
 10885                           l823:	
 10886  1632                     	line	106
 10887                           	goto	l2886
 10888  1632  2E57               	
 10889                           l826:	
 10890  1633                     	line	109
 10891                           	btfss	(___fladd@grs),(0)&7
 10892  1633  1C45               	goto	u3521
 10893  1634  2E36               	goto	u3520
 10894  1635  2E37               u3521:
 10895  1636                     	goto	l2876
 10896  1636  2E40               u3520:
 10897  1637                     	line	110
 10898                           	
 10899                           l2874:	
 10900  1637                     	movf	(___fladd@grs),w
 10901  1637  0845               	movwf	(??___fladd+0)+0
 10902  1638  00B6               	clrc
 10903  1639  1003               	rrf	(??___fladd+0)+0,w
 10904  163A  0C36               	iorlw	01h
 10905  163B  3801               	movwf	(??___fladd+1)+0
 10906  163C  00B7               	movf	(??___fladd+1)+0,w
 10907  163D  0837               	movwf	(___fladd@grs)
 10908  163E  00C5               	line	111
 10909                           	goto	l2878
 10910  163F  2E43               	line	112
 10911                           	
 10912                           l827:	
 10913  1640                     	line	113
 10914                           	
 10915                           l2876:	
 10916  1640                     	clrc
 10917  1640  1003               	rrf	(___fladd@grs),f
 10918  1641  0CC5               
 10919                           	goto	l2878
 10920  1642  2E43               	line	114
 10921                           	
 10922                           l828:	
 10923  1643                     	line	115
 10924                           	
 10925                           l2878:	
 10926  1643                     	btfss	(___fladd@b),(0)&7
 10927  1643  1C2E               	goto	u3531
 10928  1644  2E46               	goto	u3530
 10929  1645  2E47               u3531:
 10930  1646                     	goto	l2882
 10931  1646  2E49               u3530:
 10932  1647                     	line	116
 10933                           	
 10934                           l2880:	
 10935  1647                     	bsf	(___fladd@grs)+(7/8),(7)&7
 10936  1647  17C5               	goto	l2882
 10937  1648  2E49               	line	117
 10938                           	
 10939                           l829:	
 10940  1649                     	line	118
 10941                           	
 10942                           l2882:	
 10943  1649                     	movlw	01h
 10944  1649  3001               	movwf	(??___fladd+0)+0
 10945  164A  00B6               u3545:
 10946  164B                     	rlf	(___fladd@b+3),w
 10947  164B  0D31               	rrf	(___fladd@b+3),f
 10948  164C  0CB1               	rrf	(___fladd@b+2),f
 10949  164D  0CB0               	rrf	(___fladd@b+1),f
 10950  164E  0CAF               	rrf	(___fladd@b),f
 10951  164F  0CAE               	decfsz	(??___fladd+0)+0&07fh,f
 10952  1650  0BB6               	goto	u3545
 10953  1651  2E4B               
 10954                           	line	119
 10955                           	
 10956                           l2884:	
 10957  1652                     	movlw	low(01h)
 10958  1652  3001               	movwf	(??___fladd+0)+0
 10959  1653  00B6               	movf	(??___fladd+0)+0,w
 10960  1654  0836               	addwf	(___fladd@bexp),f
 10961  1655  07C4               	goto	l2886
 10962  1656  2E57               	line	120
 10963                           	
 10964                           l825:	
 10965  1657                     	line	106
 10966                           	
 10967                           l2886:	
 10968  1657                     	bcf	status, 5	;RP0=0, select bank0
 10969  1657  1283               	bcf	status, 6	;RP1=0, select bank0
 10970  1658  1303               	movf	(___fladd@aexp),w
 10971  1659  0843               	subwf	(___fladd@bexp),w
 10972  165A  0244               	skipc
 10973  165B  1C03               	goto	u3551
 10974  165C  2E5E               	goto	u3550
 10975  165D  2E5F               u3551:
 10976  165E                     	goto	l826
 10977  165E  2E33               u3550:
 10978  165F                     	goto	l824
 10979  165F  2E60               	
 10980                           l830:	
 10981  1660                     	line	121
 10982                           	
 10983                           l824:	
 10984  1660                     	line	124
 10985                           	btfsc	(___fladd@signs),(6)&7
 10986  1660  1B42               	goto	u3561
 10987  1661  2E63               	goto	u3560
 10988  1662  2E64               u3561:
 10989  1663                     	goto	l2912
 10990  1663  2EB3               u3560:
 10991  1664                     	line	127
 10992                           	
 10993                           l2888:	
 10994  1664                     	movf	((___fladd@bexp)),w
 10995  1664  0844               	btfss	status,2
 10996  1665  1D03               	goto	u3571
 10997  1666  2E68               	goto	u3570
 10998  1667  2E69               u3571:
 10999  1668                     	goto	l2894
 11000  1668  2E73               u3570:
 11001  1669                     	line	128
 11002                           	
 11003                           l2890:	
 11004  1669                     	movlw	0x0
 11005  1669  3000               	movwf	(?___fladd+3)
 11006  166A  00B1               	movlw	0x0
 11007  166B  3000               	movwf	(?___fladd+2)
 11008  166C  00B0               	movlw	0x0
 11009  166D  3000               	movwf	(?___fladd+1)
 11010  166E  00AF               	movlw	0x0
 11011  166F  3000               	movwf	(?___fladd)
 11012  1670  00AE               
 11013                           	goto	l833
 11014  1671  2FFF               	
 11015                           l2892:	
 11016  1672                     	goto	l833
 11017  1672  2FFF               	line	129
 11018                           	
 11019                           l832:	
 11020  1673                     	line	132
 11021                           	
 11022                           l2894:	
 11023  1673                     	movf	(___fladd@a),w
 11024  1673  0832               	addwf	(___fladd@b),f
 11025  1674  07AE               	movf	(___fladd@a+1),w
 11026  1675  0833               	clrz
 11027  1676  1103               	skipnc
 11028  1677  1803               	addlw	1
 11029  1678  3E01               	skipnz
 11030  1679  1903               	goto	u3581
 11031  167A  2E7C               	addwf	(___fladd@b+1),f
 11032  167B  07AF               u3581:
 11033  167C                     	movf	(___fladd@a+2),w
 11034  167C  0834               	clrz
 11035  167D  1103               	skipnc
 11036  167E  1803               	addlw	1
 11037  167F  3E01               	skipnz
 11038  1680  1903               	goto	u3582
 11039  1681  2E83               	addwf	(___fladd@b+2),f
 11040  1682  07B0               u3582:
 11041  1683                     	movf	(___fladd@a+3),w
 11042  1683  0835               	clrz
 11043  1684  1103               	skipnc
 11044  1685  1803               	addlw	1
 11045  1686  3E01               	skipnz
 11046  1687  1903               	goto	u3583
 11047  1688  2E8A               	addwf	(___fladd@b+3),f
 11048  1689  07B1               u3583:
 11049  168A                     
 11050                           	line	134
 11051                           	
 11052                           l2896:	
 11053  168A                     	btfss	(___fladd@b+3),(24)&7
 11054  168A  1C31               	goto	u3591
 11055  168B  2E8D               	goto	u3590
 11056  168C  2E8E               u3591:
 11057  168D                     	goto	l2946
 11058  168D  2F7C               u3590:
 11059  168E                     	line	135
 11060                           	
 11061                           l2898:	
 11062  168E                     	btfss	(___fladd@grs),(0)&7
 11063  168E  1C45               	goto	u3601
 11064  168F  2E91               	goto	u3600
 11065  1690  2E92               u3601:
 11066  1691                     	goto	l2902
 11067  1691  2E9B               u3600:
 11068  1692                     	line	136
 11069                           	
 11070                           l2900:	
 11071  1692                     	movf	(___fladd@grs),w
 11072  1692  0845               	movwf	(??___fladd+0)+0
 11073  1693  00B6               	clrc
 11074  1694  1003               	rrf	(??___fladd+0)+0,w
 11075  1695  0C36               	iorlw	01h
 11076  1696  3801               	movwf	(??___fladd+1)+0
 11077  1697  00B7               	movf	(??___fladd+1)+0,w
 11078  1698  0837               	movwf	(___fladd@grs)
 11079  1699  00C5               	line	137
 11080                           	goto	l2904
 11081  169A  2E9E               	line	138
 11082                           	
 11083                           l835:	
 11084  169B                     	line	139
 11085                           	
 11086                           l2902:	
 11087  169B                     	clrc
 11088  169B  1003               	rrf	(___fladd@grs),f
 11089  169C  0CC5               
 11090                           	goto	l2904
 11091  169D  2E9E               	line	140
 11092                           	
 11093                           l836:	
 11094  169E                     	line	141
 11095                           	
 11096                           l2904:	
 11097  169E                     	btfss	(___fladd@b),(0)&7
 11098  169E  1C2E               	goto	u3611
 11099  169F  2EA1               	goto	u3610
 11100  16A0  2EA2               u3611:
 11101  16A1                     	goto	l2908
 11102  16A1  2EA4               u3610:
 11103  16A2                     	line	142
 11104                           	
 11105                           l2906:	
 11106  16A2                     	bsf	(___fladd@grs)+(7/8),(7)&7
 11107  16A2  17C5               	goto	l2908
 11108  16A3  2EA4               	line	143
 11109                           	
 11110                           l837:	
 11111  16A4                     	line	144
 11112                           	
 11113                           l2908:	
 11114  16A4                     	movlw	01h
 11115  16A4  3001               	movwf	(??___fladd+0)+0
 11116  16A5  00B6               u3625:
 11117  16A6                     	rlf	(___fladd@b+3),w
 11118  16A6  0D31               	rrf	(___fladd@b+3),f
 11119  16A7  0CB1               	rrf	(___fladd@b+2),f
 11120  16A8  0CB0               	rrf	(___fladd@b+1),f
 11121  16A9  0CAF               	rrf	(___fladd@b),f
 11122  16AA  0CAE               	decfsz	(??___fladd+0)+0&07fh,f
 11123  16AB  0BB6               	goto	u3625
 11124  16AC  2EA6               
 11125                           	line	145
 11126                           	
 11127                           l2910:	
 11128  16AD                     	movlw	low(01h)
 11129  16AD  3001               	movwf	(??___fladd+0)+0
 11130  16AE  00B6               	movf	(??___fladd+0)+0,w
 11131  16AF  0836               	addwf	(___fladd@bexp),f
 11132  16B0  07C4               	goto	l2946
 11133  16B1  2F7C               	line	146
 11134                           	
 11135                           l834:	
 11136  16B2                     	line	148
 11137                           	goto	l2946
 11138  16B2  2F7C               	line	149
 11139                           	
 11140                           l831:	
 11141  16B3                     	line	153
 11142                           	
 11143                           l2912:	
 11144  16B3                     	movf	(___fladd@b+3),w
 11145  16B3  0831               	xorlw	80h
 11146  16B4  3A80               	movwf	btemp+1
 11147  16B5  00FF               	movf	(___fladd@a+3),w
 11148  16B6  0835               	xorlw	80h
 11149  16B7  3A80               	subwf	btemp+1,w
 11150  16B8  027F               	
 11151                           	skipz
 11152  16B9  1D03               	goto	u3633
 11153  16BA  2EC5               	movf	(___fladd@a+2),w
 11154  16BB  0834               	subwf	(___fladd@b+2),w
 11155  16BC  0230               	skipz
 11156  16BD  1D03               	goto	u3633
 11157  16BE  2EC5               	movf	(___fladd@a+1),w
 11158  16BF  0833               	subwf	(___fladd@b+1),w
 11159  16C0  022F               	skipz
 11160  16C1  1D03               	goto	u3633
 11161  16C2  2EC5               	movf	(___fladd@a),w
 11162  16C3  0832               	subwf	(___fladd@b),w
 11163  16C4  022E               u3633:
 11164  16C5                     	skipnc
 11165  16C5  1803               	goto	u3631
 11166  16C6  2EC8               	goto	u3630
 11167  16C7  2EC9               u3631:
 11168  16C8                     	goto	l2922
 11169  16C8  2F2F               u3630:
 11170  16C9                     	line	154
 11171                           	
 11172                           l2914:	
 11173  16C9                     	movlw	0FFh
 11174  16C9  30FF               	movwf	((??___fladd+0)+0)
 11175  16CA  00B6               	movlw	0FFh
 11176  16CB  30FF               	movwf	((??___fladd+0)+0+1)
 11177  16CC  00B7               	movlw	0FFh
 11178  16CD  30FF               	movwf	((??___fladd+0)+0+2)
 11179  16CE  00B8               	movlw	0FFh
 11180  16CF  30FF               	movwf	((??___fladd+0)+0+3)
 11181  16D0  00B9               	movf	(___fladd@a),w
 11182  16D1  0832               	movwf	(??___fladd+4)+0
 11183  16D2  00BA               	movf	(___fladd@a+1),w
 11184  16D3  0833               	movwf	((??___fladd+4)+0+1)
 11185  16D4  00BB               	movf	(___fladd@a+2),w
 11186  16D5  0834               	movwf	((??___fladd+4)+0+2)
 11187  16D6  00BC               	movf	(___fladd@a+3),w
 11188  16D7  0835               	movwf	((??___fladd+4)+0+3)
 11189  16D8  00BD               	comf	(___fladd@b),w
 11190  16D9  092E               	movwf	(??___fladd+8)+0
 11191  16DA  00BE               	comf	(___fladd@b+1),w
 11192  16DB  092F               	movwf	((??___fladd+8)+0+1)
 11193  16DC  00BF               	comf	(___fladd@b+2),w
 11194  16DD  0930               	movwf	((??___fladd+8)+0+2)
 11195  16DE  00C0               	comf	(___fladd@b+3),w
 11196  16DF  0931               	movwf	((??___fladd+8)+0+3)
 11197  16E0  00C1               	incf	(??___fladd+8)+0,f
 11198  16E1  0ABE               	skipnz
 11199  16E2  1903               	incf	((??___fladd+8)+0+1),f
 11200  16E3  0ABF               	skipnz
 11201  16E4  1903               	incf	((??___fladd+8)+0+2),f
 11202  16E5  0AC0               	skipnz
 11203  16E6  1903               	incf	((??___fladd+8)+0+3),f
 11204  16E7  0AC1               	movf	0+(??___fladd+8)+0,w
 11205  16E8  083E               	addwf	(??___fladd+4)+0,f
 11206  16E9  07BA               	movf	1+(??___fladd+8)+0,w
 11207  16EA  083F               	skipnc
 11208  16EB  1803               	incfsz	1+(??___fladd+8)+0,w
 11209  16EC  0F3F               	goto	u3640
 11210  16ED  2EEF               	goto	u3641
 11211  16EE  2EF0               u3640:
 11212  16EF                     	addwf	(??___fladd+4)+1,f
 11213  16EF  07BB               u3641:
 11214  16F0                     	movf	2+(??___fladd+8)+0,w
 11215  16F0  0840               	skipnc
 11216  16F1  1803               	incfsz	2+(??___fladd+8)+0,w
 11217  16F2  0F40               	goto	u3642
 11218  16F3  2EF5               	goto	u3643
 11219  16F4  2EF6               u3642:
 11220  16F5                     	addwf	(??___fladd+4)+2,f
 11221  16F5  07BC               u3643:
 11222  16F6                     	movf	3+(??___fladd+8)+0,w
 11223  16F6  0841               	skipnc
 11224  16F7  1803               	incf	3+(??___fladd+8)+0,w
 11225  16F8  0A41               	addwf	(??___fladd+4)+3,f
 11226  16F9  07BD               	movf	0+(??___fladd+4)+0,w
 11227  16FA  083A               	addwf	(??___fladd+0)+0,f
 11228  16FB  07B6               	movf	1+(??___fladd+4)+0,w
 11229  16FC  083B               	skipnc
 11230  16FD  1803               	incfsz	1+(??___fladd+4)+0,w
 11231  16FE  0F3B               	goto	u3650
 11232  16FF  2F01               	goto	u3651
 11233  1700  2F02               u3650:
 11234  1701                     	addwf	(??___fladd+0)+1,f
 11235  1701  07B7               u3651:
 11236  1702                     	movf	2+(??___fladd+4)+0,w
 11237  1702  083C               	skipnc
 11238  1703  1803               	incfsz	2+(??___fladd+4)+0,w
 11239  1704  0F3C               	goto	u3652
 11240  1705  2F07               	goto	u3653
 11241  1706  2F08               u3652:
 11242  1707                     	addwf	(??___fladd+0)+2,f
 11243  1707  07B8               u3653:
 11244  1708                     	movf	3+(??___fladd+4)+0,w
 11245  1708  083D               	skipnc
 11246  1709  1803               	incf	3+(??___fladd+4)+0,w
 11247  170A  0A3D               	addwf	(??___fladd+0)+3,f
 11248  170B  07B9               	movf	3+(??___fladd+0)+0,w
 11249  170C  0839               	movwf	(___fladd@b+3)
 11250  170D  00B1               	movf	2+(??___fladd+0)+0,w
 11251  170E  0838               	movwf	(___fladd@b+2)
 11252  170F  00B0               	movf	1+(??___fladd+0)+0,w
 11253  1710  0837               	movwf	(___fladd@b+1)
 11254  1711  00AF               	movf	0+(??___fladd+0)+0,w
 11255  1712  0836               	movwf	(___fladd@b)
 11256  1713  00AE               
 11257                           	line	155
 11258                           	movlw	low(080h)
 11259  1714  3080               	movwf	(??___fladd+0)+0
 11260  1715  00B6               	movf	(??___fladd+0)+0,w
 11261  1716  0836               	xorwf	(___fladd@signs),f
 11262  1717  06C2               	line	156
 11263                           	
 11264                           l2916:	
 11265  1718                     	comf	(___fladd@grs),f
 11266  1718  09C5               	incf	(___fladd@grs),f
 11267  1719  0AC5               	line	157
 11268                           	
 11269                           l2918:	
 11270  171A                     	movf	((___fladd@grs)),w
 11271  171A  0845               	btfss	status,2
 11272  171B  1D03               	goto	u3661
 11273  171C  2F1E               	goto	u3660
 11274  171D  2F1F               u3661:
 11275  171E                     	goto	l841
 11276  171E  2F3D               u3660:
 11277  171F                     	line	158
 11278                           	
 11279                           l2920:	
 11280  171F                     	movlw	01h
 11281  171F  3001               	addwf	(___fladd@b),f
 11282  1720  07AE               	movlw	0
 11283  1721  3000               	skipnc
 11284  1722  1803               movlw 1
 11285  1723  3001               	addwf	(___fladd@b+1),f
 11286  1724  07AF               	movlw	0
 11287  1725  3000               	skipnc
 11288  1726  1803               movlw 1
 11289  1727  3001               	addwf	(___fladd@b+2),f
 11290  1728  07B0               	movlw	0
 11291  1729  3000               	skipnc
 11292  172A  1803               movlw 1
 11293  172B  3001               	addwf	(___fladd@b+3),f
 11294  172C  07B1               	goto	l841
 11295  172D  2F3D               	line	159
 11296                           	
 11297                           l840:	
 11298  172E                     	line	160
 11299                           	goto	l841
 11300  172E  2F3D               	line	161
 11301                           	
 11302                           l839:	
 11303  172F                     	line	162
 11304                           	
 11305                           l2922:	
 11306  172F                     	movf	(___fladd@a),w
 11307  172F  0832               	subwf	(___fladd@b),f
 11308  1730  02AE               	movf	(___fladd@a+1),w
 11309  1731  0833               	skipc
 11310  1732  1C03               	incfsz	(___fladd@a+1),w
 11311  1733  0F33               	subwf	(___fladd@b+1),f
 11312  1734  02AF               	movf	(___fladd@a+2),w
 11313  1735  0834               	skipc
 11314  1736  1C03               	incfsz	(___fladd@a+2),w
 11315  1737  0F34               	subwf	(___fladd@b+2),f
 11316  1738  02B0               	movf	(___fladd@a+3),w
 11317  1739  0835               	skipc
 11318  173A  1C03               	incfsz	(___fladd@a+3),w
 11319  173B  0F35               	subwf	(___fladd@b+3),f
 11320  173C  02B1               	line	163
 11321                           	
 11322                           l841:	
 11323  173D                     	line	166
 11324                           	movf	(___fladd@b+3),w
 11325  173D  0831               	iorwf	(___fladd@b+2),w
 11326  173E  0430               	iorwf	(___fladd@b+1),w
 11327  173F  042F               	iorwf	(___fladd@b),w
 11328  1740  042E               	skipz
 11329  1741  1D03               	goto	u3671
 11330  1742  2F44               	goto	u3670
 11331  1743  2F45               u3671:
 11332  1744                     	goto	l2944
 11333  1744  2F76               u3670:
 11334  1745                     	
 11335                           l2924:	
 11336  1745                     	movf	((___fladd@grs)),w
 11337  1745  0845               	btfss	status,2
 11338  1746  1D03               	goto	u3681
 11339  1747  2F49               	goto	u3680
 11340  1748  2F4A               u3681:
 11341  1749                     	goto	l2944
 11342  1749  2F76               u3680:
 11343  174A                     	line	167
 11344                           	
 11345                           l2926:	
 11346  174A                     	movlw	0x0
 11347  174A  3000               	movwf	(?___fladd+3)
 11348  174B  00B1               	movlw	0x0
 11349  174C  3000               	movwf	(?___fladd+2)
 11350  174D  00B0               	movlw	0x0
 11351  174E  3000               	movwf	(?___fladd+1)
 11352  174F  00AF               	movlw	0x0
 11353  1750  3000               	movwf	(?___fladd)
 11354  1751  00AE               
 11355                           	goto	l833
 11356  1752  2FFF               	
 11357                           l2928:	
 11358  1753                     	goto	l833
 11359  1753  2FFF               	line	168
 11360                           	
 11361                           l842:	
 11362  1754                     	line	171
 11363                           	goto	l2944
 11364  1754  2F76               	
 11365                           l844:	
 11366  1755                     	line	172
 11367                           	
 11368                           l2930:	
 11369  1755                     	movlw	01h
 11370  1755  3001               	movwf	(??___fladd+0)+0
 11371  1756  00B6               u3695:
 11372  1757                     	clrc
 11373  1757  1003               	rlf	(___fladd@b),f
 11374  1758  0DAE               	rlf	(___fladd@b+1),f
 11375  1759  0DAF               	rlf	(___fladd@b+2),f
 11376  175A  0DB0               	rlf	(___fladd@b+3),f
 11377  175B  0DB1               	decfsz	(??___fladd+0)+0
 11378  175C  0BB6               	goto	u3695
 11379  175D  2F57               	line	173
 11380                           	
 11381                           l2932:	
 11382  175E                     	btfss	(___fladd@grs),(7)&7
 11383  175E  1FC5               	goto	u3701
 11384  175F  2F61               	goto	u3700
 11385  1760  2F62               u3701:
 11386  1761                     	goto	l845
 11387  1761  2F63               u3700:
 11388  1762                     	line	174
 11389                           	
 11390                           l2934:	
 11391  1762                     	bsf	(___fladd@b)+(0/8),(0)&7
 11392  1762  142E               	line	175
 11393                           	
 11394                           l845:	
 11395  1763                     	line	176
 11396                           	btfss	(___fladd@grs),(0)&7
 11397  1763  1C45               	goto	u3711
 11398  1764  2F66               	goto	u3710
 11399  1765  2F67               u3711:
 11400  1766                     	goto	l2938
 11401  1766  2F6A               u3710:
 11402  1767                     	line	177
 11403                           	
 11404                           l2936:	
 11405  1767                     	setc
 11406  1767  1403               	rlf	(___fladd@grs),f
 11407  1768  0DC5               	line	178
 11408                           	goto	l2940
 11409  1769  2F6D               	line	179
 11410                           	
 11411                           l846:	
 11412  176A                     	line	180
 11413                           	
 11414                           l2938:	
 11415  176A                     	clrc
 11416  176A  1003               	rlf	(___fladd@grs),f
 11417  176B  0DC5               
 11418                           	goto	l2940
 11419  176C  2F6D               	line	181
 11420                           	
 11421                           l847:	
 11422  176D                     	line	182
 11423                           	
 11424                           l2940:	
 11425  176D                     	movf	((___fladd@bexp)),w
 11426  176D  0844               	btfsc	status,2
 11427  176E  1903               	goto	u3721
 11428  176F  2F71               	goto	u3720
 11429  1770  2F72               u3721:
 11430  1771                     	goto	l2944
 11431  1771  2F76               u3720:
 11432  1772                     	line	183
 11433                           	
 11434                           l2942:	
 11435  1772                     	movlw	01h
 11436  1772  3001               	subwf	(___fladd@bexp),f
 11437  1773  02C4               	goto	l2944
 11438  1774  2F76               	line	184
 11439                           	
 11440                           l848:	
 11441  1775                     	goto	l2944
 11442  1775  2F76               	line	185
 11443                           	
 11444                           l843:	
 11445  1776                     	line	171
 11446                           	
 11447                           l2944:	
 11448  1776                     	btfss	(___fladd@b+2),(23)&7
 11449  1776  1FB0               	goto	u3731
 11450  1777  2F79               	goto	u3730
 11451  1778  2F7A               u3731:
 11452  1779                     	goto	l2930
 11453  1779  2F55               u3730:
 11454  177A                     	goto	l2946
 11455  177A  2F7C               	
 11456                           l849:	
 11457  177B                     	goto	l2946
 11458  177B  2F7C               	line	186
 11459                           	
 11460                           l838:	
 11461  177C                     	line	192
 11462                           	
 11463                           l2946:	
 11464  177C                     	clrf	(___fladd@aexp)
 11465  177C  01C3               	line	193
 11466                           	
 11467                           l2948:	
 11468  177D                     	btfss	(___fladd@grs),(7)&7
 11469  177D  1FC5               	goto	u3741
 11470  177E  2F80               	goto	u3740
 11471  177F  2F81               u3741:
 11472  1780                     	goto	l2956
 11473  1780  2F93               u3740:
 11474  1781                     	line	194
 11475                           	
 11476                           l2950:	
 11477  1781                     	movf	(___fladd@grs),w
 11478  1781  0845               	andlw	07Fh
 11479  1782  397F               	btfsc	status,2
 11480  1783  1903               	goto	u3751
 11481  1784  2F86               	goto	u3750
 11482  1785  2F87               u3751:
 11483  1786                     	goto	l851
 11484  1786  2F8A               u3750:
 11485  1787                     	line	195
 11486                           	
 11487                           l2952:	
 11488  1787                     	clrf	(___fladd@aexp)
 11489  1787  01C3               	incf	(___fladd@aexp),f
 11490  1788  0AC3               	line	196
 11491                           	goto	l2956
 11492  1789  2F93               	line	197
 11493                           	
 11494                           l851:	
 11495  178A                     	line	198
 11496                           	btfss	(___fladd@b),(0)&7
 11497  178A  1C2E               	goto	u3761
 11498  178B  2F8D               	goto	u3760
 11499  178C  2F8E               u3761:
 11500  178D                     	goto	l2956
 11501  178D  2F93               u3760:
 11502  178E                     	line	199
 11503                           	
 11504                           l2954:	
 11505  178E                     	clrf	(___fladd@aexp)
 11506  178E  01C3               	incf	(___fladd@aexp),f
 11507  178F  0AC3               	goto	l2956
 11508  1790  2F93               	line	200
 11509                           	
 11510                           l853:	
 11511  1791                     	goto	l2956
 11512  1791  2F93               	line	201
 11513                           	
 11514                           l852:	
 11515  1792                     	goto	l2956
 11516  1792  2F93               	line	202
 11517                           	
 11518                           l850:	
 11519  1793                     	line	203
 11520                           	
 11521                           l2956:	
 11522  1793                     	movf	((___fladd@aexp)),w
 11523  1793  0843               	btfsc	status,2
 11524  1794  1903               	goto	u3771
 11525  1795  2F97               	goto	u3770
 11526  1796  2F98               u3771:
 11527  1797                     	goto	l854
 11528  1797  2FCE               u3770:
 11529  1798                     	line	204
 11530                           	
 11531                           l2958:	
 11532  1798                     	movlw	01h
 11533  1798  3001               	addwf	(___fladd@b),f
 11534  1799  07AE               	movlw	0
 11535  179A  3000               	skipnc
 11536  179B  1803               movlw 1
 11537  179C  3001               	addwf	(___fladd@b+1),f
 11538  179D  07AF               	movlw	0
 11539  179E  3000               	skipnc
 11540  179F  1803               movlw 1
 11541  17A0  3001               	addwf	(___fladd@b+2),f
 11542  17A1  07B0               	movlw	0
 11543  17A2  3000               	skipnc
 11544  17A3  1803               movlw 1
 11545  17A4  3001               	addwf	(___fladd@b+3),f
 11546  17A5  07B1               	line	205
 11547                           	
 11548                           l2960:	
 11549  17A6                     	btfss	(___fladd@b+3),(24)&7
 11550  17A6  1C31               	goto	u3781
 11551  17A7  2FA9               	goto	u3780
 11552  17A8  2FAA               u3781:
 11553  17A9                     	goto	l854
 11554  17A9  2FCE               u3780:
 11555  17AA                     	line	206
 11556                           	
 11557                           l2962:	
 11558  17AA                     	movf	(___fladd@b),w
 11559  17AA  082E               	movwf	(??___fladd+0)+0
 11560  17AB  00B6               	movf	(___fladd@b+1),w
 11561  17AC  082F               	movwf	((??___fladd+0)+0+1)
 11562  17AD  00B7               	movf	(___fladd@b+2),w
 11563  17AE  0830               	movwf	((??___fladd+0)+0+2)
 11564  17AF  00B8               	movf	(___fladd@b+3),w
 11565  17B0  0831               	movwf	((??___fladd+0)+0+3)
 11566  17B1  00B9               	movlw	01h
 11567  17B2  3001               	movwf	(??___fladd+4)+0
 11568  17B3  00BA               u3795:
 11569  17B4                     	rlf	(??___fladd+0)+3,w
 11570  17B4  0D39               	rrf	(??___fladd+0)+3,f
 11571  17B5  0CB9               	rrf	(??___fladd+0)+2,f
 11572  17B6  0CB8               	rrf	(??___fladd+0)+1,f
 11573  17B7  0CB7               	rrf	(??___fladd+0)+0,f
 11574  17B8  0CB6               u3790:
 11575  17B9                     	decfsz	(??___fladd+4)+0,f
 11576  17B9  0BBA               	goto	u3795
 11577  17BA  2FB4               	movf	3+(??___fladd+0)+0,w
 11578  17BB  0839               	movwf	(___fladd@b+3)
 11579  17BC  00B1               	movf	2+(??___fladd+0)+0,w
 11580  17BD  0838               	movwf	(___fladd@b+2)
 11581  17BE  00B0               	movf	1+(??___fladd+0)+0,w
 11582  17BF  0837               	movwf	(___fladd@b+1)
 11583  17C0  00AF               	movf	0+(??___fladd+0)+0,w
 11584  17C1  0836               	movwf	(___fladd@b)
 11585  17C2  00AE               
 11586                           	line	207
 11587                           		incf	((___fladd@bexp)),w
 11588  17C3  0A44               	btfsc	status,2
 11589  17C4  1903               	goto	u3801
 11590  17C5  2FC7               	goto	u3800
 11591  17C6  2FC8               u3801:
 11592  17C7                     	goto	l854
 11593  17C7  2FCE               u3800:
 11594  17C8                     	line	208
 11595                           	
 11596                           l2964:	
 11597  17C8                     	movlw	low(01h)
 11598  17C8  3001               	movwf	(??___fladd+0)+0
 11599  17C9  00B6               	movf	(??___fladd+0)+0,w
 11600  17CA  0836               	addwf	(___fladd@bexp),f
 11601  17CB  07C4               	goto	l854
 11602  17CC  2FCE               	line	209
 11603                           	
 11604                           l856:	
 11605  17CD                     	goto	l854
 11606  17CD  2FCE               	line	210
 11607                           	
 11608                           l855:	
 11609  17CE                     	line	211
 11610                           	
 11611                           l854:	
 11612  17CE                     	line	215
 11613                           		incf	((___fladd@bexp)),w
 11614  17CE  0A44               	btfsc	status,2
 11615  17CF  1903               	goto	u3811
 11616  17D0  2FD2               	goto	u3810
 11617  17D1  2FD3               u3811:
 11618  17D2                     	goto	l2968
 11619  17D2  2FD9               u3810:
 11620  17D3                     	
 11621                           l2966:	
 11622  17D3                     	movf	((___fladd@bexp)),w
 11623  17D3  0844               	btfss	status,2
 11624  17D4  1D03               	goto	u3821
 11625  17D5  2FD7               	goto	u3820
 11626  17D6  2FD8               u3821:
 11627  17D7                     	goto	l2974
 11628  17D7  2FE9               u3820:
 11629  17D8                     	goto	l2968
 11630  17D8  2FD9               	
 11631                           l859:	
 11632  17D9                     	line	216
 11633                           	
 11634                           l2968:	
 11635  17D9                     	movlw	high highword(0)
 11636  17D9  3000               	movwf	(___fladd@b+3)
 11637  17DA  00B1               	movlw	low highword(0)
 11638  17DB  3000               	movwf	(___fladd@b+2)
 11639  17DC  00B0               	movlw	high(0)
 11640  17DD  3000               	movwf	(___fladd@b+1)
 11641  17DE  00AF               	movlw	low(0)
 11642  17DF  3000               	movwf	(___fladd@b)
 11643  17E0  00AE               
 11644                           	line	218
 11645                           	
 11646                           l2970:	
 11647  17E1                     	movf	((___fladd@bexp)),w
 11648  17E1  0844               	btfss	status,2
 11649  17E2  1D03               	goto	u3831
 11650  17E3  2FE5               	goto	u3830
 11651  17E4  2FE6               u3831:
 11652  17E5                     	goto	l2974
 11653  17E5  2FE9               u3830:
 11654  17E6                     	line	219
 11655                           	
 11656                           l2972:	
 11657  17E6                     	clrf	(___fladd@signs)
 11658  17E6  01C2               	goto	l2974
 11659  17E7  2FE9               	line	220
 11660                           	
 11661                           l860:	
 11662  17E8                     	goto	l2974
 11663  17E8  2FE9               	line	221
 11664                           	
 11665                           l857:	
 11666  17E9                     	line	225
 11667                           	
 11668                           l2974:	
 11669  17E9                     	btfss	(___fladd@bexp),(0)&7
 11670  17E9  1C44               	goto	u3841
 11671  17EA  2FEC               	goto	u3840
 11672  17EB  2FED               u3841:
 11673  17EC                     	goto	l2978
 11674  17EC  2FEF               u3840:
 11675  17ED                     	line	226
 11676                           	
 11677                           l2976:	
 11678  17ED                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 11679  17ED  17B0               	line	227
 11680                           	goto	l862
 11681  17EE  2FF3               	line	229
 11682                           	
 11683                           l861:	
 11684  17EF                     	line	230
 11685                           	
 11686                           l2978:	
 11687  17EF                     	movlw	low(07Fh)
 11688  17EF  307F               	movwf	(??___fladd+0)+0
 11689  17F0  00B6               	movf	(??___fladd+0)+0,w
 11690  17F1  0836               	andwf	0+(___fladd@b)+02h,f
 11691  17F2  05B0               	line	231
 11692                           	
 11693                           l862:	
 11694  17F3                     	line	232
 11695                           	movf	(___fladd@bexp),w
 11696  17F3  0844               	movwf	(??___fladd+0)+0
 11697  17F4  00B6               	clrc
 11698  17F5  1003               	rrf	(??___fladd+0)+0,w
 11699  17F6  0C36               	movwf	(??___fladd+1)+0
 11700  17F7  00B7               	movf	(??___fladd+1)+0,w
 11701  17F8  0837               	movwf	0+(___fladd@b)+03h
 11702  17F9  00B1               	line	233
 11703                           	
 11704                           l2980:	
 11705  17FA                     	btfss	(___fladd@signs),(7)&7
 11706  17FA  1FC2               	goto	u3851
 11707  17FB  2FFD               	goto	u3850
 11708  17FC  2FFE               u3851:
 11709  17FD                     	goto	l863
 11710  17FD  2FFF               u3850:
 11711  17FE                     	line	234
 11712                           	
 11713                           l2982:	
 11714  17FE                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 11715  17FE  17B1               	line	235
 11716                           	
 11717                           l863:	
 11718  17FF                     	line	236
 11719                           	line	237
 11720                           	
 11721                           l833:	
 11722  17FF                     	return
 11723  17FF  0008               	opt stack 0
 11724                           GLOBAL	__end_of___fladd
 11725                           	__end_of___fladd:
 11726  1800                     	signat	___fladd,8316
 11727                           	global	___awmod
 11728                           
 11729 ;; *************** function ___awmod *****************
 11730 ;; Defined at:
 11731 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 11732 ;; Parameters:    Size  Location     Type
 11733 ;;  divisor         2    3[COMMON] int 
 11734 ;;  dividend        2    5[COMMON] int 
 11735 ;; Auto vars:     Size  Location     Type
 11736 ;;  sign            1    1[BANK0 ] unsigned char 
 11737 ;;  counter         1    0[BANK0 ] unsigned char 
 11738 ;; Return value:  Size  Location     Type
 11739 ;;                  2    3[COMMON] int 
 11740 ;; Registers used:
 11741 ;;		wreg, status,2, status,0
 11742 ;; Tracked objects:
 11743 ;;		On entry : 0/0
 11744 ;;		On exit  : 0/0
 11745 ;;		Unchanged: 0/0
 11746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11747 ;;      Params:         4       0       0       0       0
 11748 ;;      Locals:         0       2       0       0       0
 11749 ;;      Temps:          1       0       0       0       0
 11750 ;;      Totals:         5       2       0       0       0
 11751 ;;Total ram usage:        7 bytes
 11752 ;; Hardware stack levels used:    1
 11753 ;; Hardware stack levels required when called:    2
 11754 ;; This function calls:
 11755 ;;		Nothing
 11756 ;; This function is called by:
 11757 ;;		_main
 11758 ;; This function uses a non-reentrant model
 11759 ;;
 11760                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
 11761                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 11762                           	line	5
 11763                           global __ptext24
 11764                           __ptext24:	;psect for function ___awmod
 11765  1470                     psect	text24
 11766                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 11767                           	line	5
 11768                           	global	__size_of___awmod
 11769                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 11770  0065                     	
 11771                           ___awmod:	
 11772  1470                     ;incstack = 0
 11773                           	opt	stack 5
 11774                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11775                           	line	12
 11776                           	
 11777                           l3856:	
 11778  1470                     	bcf	status, 5	;RP0=0, select bank0
 11779  1470  1283               	bcf	status, 6	;RP1=0, select bank0
 11780  1471  1303               	clrf	(___awmod@sign)
 11781  1472  01A1               	line	13
 11782                           	
 11783                           l3858:	
 11784  1473                     	btfss	(___awmod@dividend+1),7
 11785  1473  1FF6               	goto	u5501
 11786  1474  2C76               	goto	u5500
 11787  1475  2C77               u5501:
 11788  1476                     	goto	l3864
 11789  1476  2C7F               u5500:
 11790  1477                     	line	14
 11791                           	
 11792                           l3860:	
 11793  1477                     	comf	(___awmod@dividend),f
 11794  1477  09F5               	comf	(___awmod@dividend+1),f
 11795  1478  09F6               	incf	(___awmod@dividend),f
 11796  1479  0AF5               	skipnz
 11797  147A  1903               	incf	(___awmod@dividend+1),f
 11798  147B  0AF6               	line	15
 11799                           	
 11800                           l3862:	
 11801  147C                     	clrf	(___awmod@sign)
 11802  147C  01A1               	incf	(___awmod@sign),f
 11803  147D  0AA1               	goto	l3864
 11804  147E  2C7F               	line	16
 11805                           	
 11806                           l683:	
 11807  147F                     	line	17
 11808                           	
 11809                           l3864:	
 11810  147F                     	btfss	(___awmod@divisor+1),7
 11811  147F  1FF4               	goto	u5511
 11812  1480  2C82               	goto	u5510
 11813  1481  2C83               u5511:
 11814  1482                     	goto	l3868
 11815  1482  2C89               u5510:
 11816  1483                     	line	18
 11817                           	
 11818                           l3866:	
 11819  1483                     	comf	(___awmod@divisor),f
 11820  1483  09F3               	comf	(___awmod@divisor+1),f
 11821  1484  09F4               	incf	(___awmod@divisor),f
 11822  1485  0AF3               	skipnz
 11823  1486  1903               	incf	(___awmod@divisor+1),f
 11824  1487  0AF4               	goto	l3868
 11825  1488  2C89               	
 11826                           l684:	
 11827  1489                     	line	19
 11828                           	
 11829                           l3868:	
 11830  1489                     	movf	((___awmod@divisor)),w
 11831  1489  0873               iorwf	((___awmod@divisor+1)),w
 11832  148A  0474               	btfsc	status,2
 11833  148B  1903               	goto	u5521
 11834  148C  2C8E               	goto	u5520
 11835  148D  2C8F               u5521:
 11836  148E                     	goto	l3886
 11837  148E  2CC4               u5520:
 11838  148F                     	line	20
 11839                           	
 11840                           l3870:	
 11841  148F                     	clrf	(___awmod@counter)
 11842  148F  01A0               	incf	(___awmod@counter),f
 11843  1490  0AA0               	line	21
 11844                           	goto	l3876
 11845  1491  2C9E               	
 11846                           l687:	
 11847  1492                     	line	22
 11848                           	
 11849                           l3872:	
 11850  1492                     	movlw	01h
 11851  1492  3001               	
 11852                           u5535:
 11853  1493                     	clrc
 11854  1493  1003               	rlf	(___awmod@divisor),f
 11855  1494  0DF3               	rlf	(___awmod@divisor+1),f
 11856  1495  0DF4               	addlw	-1
 11857  1496  3EFF               	skipz
 11858  1497  1D03               	goto	u5535
 11859  1498  2C93               	line	23
 11860                           	
 11861                           l3874:	
 11862  1499                     	movlw	low(01h)
 11863  1499  3001               	movwf	(??___awmod+0)+0
 11864  149A  00F7               	movf	(??___awmod+0)+0,w
 11865  149B  0877               	addwf	(___awmod@counter),f
 11866  149C  07A0               	goto	l3876
 11867  149D  2C9E               	line	24
 11868                           	
 11869                           l686:	
 11870  149E                     	line	21
 11871                           	
 11872                           l3876:	
 11873  149E                     	btfss	(___awmod@divisor+1),(15)&7
 11874  149E  1FF4               	goto	u5541
 11875  149F  2CA1               	goto	u5540
 11876  14A0  2CA2               u5541:
 11877  14A1                     	goto	l3872
 11878  14A1  2C92               u5540:
 11879  14A2                     	goto	l3878
 11880  14A2  2CA4               	
 11881                           l688:	
 11882  14A3                     	goto	l3878
 11883  14A3  2CA4               	line	25
 11884                           	
 11885                           l689:	
 11886  14A4                     	line	26
 11887                           	
 11888                           l3878:	
 11889  14A4                     	movf	(___awmod@divisor+1),w
 11890  14A4  0874               	subwf	(___awmod@dividend+1),w
 11891  14A5  0276               	skipz
 11892  14A6  1D03               	goto	u5555
 11893  14A7  2CAA               	movf	(___awmod@divisor),w
 11894  14A8  0873               	subwf	(___awmod@dividend),w
 11895  14A9  0275               u5555:
 11896  14AA                     	skipc
 11897  14AA  1C03               	goto	u5551
 11898  14AB  2CAD               	goto	u5550
 11899  14AC  2CAE               u5551:
 11900  14AD                     	goto	l3882
 11901  14AD  2CB5               u5550:
 11902  14AE                     	line	27
 11903                           	
 11904                           l3880:	
 11905  14AE                     	movf	(___awmod@divisor),w
 11906  14AE  0873               	subwf	(___awmod@dividend),f
 11907  14AF  02F5               	movf	(___awmod@divisor+1),w
 11908  14B0  0874               	skipc
 11909  14B1  1C03               	decf	(___awmod@dividend+1),f
 11910  14B2  03F6               	subwf	(___awmod@dividend+1),f
 11911  14B3  02F6               	goto	l3882
 11912  14B4  2CB5               	
 11913                           l690:	
 11914  14B5                     	line	28
 11915                           	
 11916                           l3882:	
 11917  14B5                     	movlw	01h
 11918  14B5  3001               	
 11919                           u5565:
 11920  14B6                     	clrc
 11921  14B6  1003               	rrf	(___awmod@divisor+1),f
 11922  14B7  0CF4               	rrf	(___awmod@divisor),f
 11923  14B8  0CF3               	addlw	-1
 11924  14B9  3EFF               	skipz
 11925  14BA  1D03               	goto	u5565
 11926  14BB  2CB6               	line	29
 11927                           	
 11928                           l3884:	
 11929  14BC                     	movlw	01h
 11930  14BC  3001               	subwf	(___awmod@counter),f
 11931  14BD  02A0               	btfss	status,2
 11932  14BE  1D03               	goto	u5571
 11933  14BF  2CC1               	goto	u5570
 11934  14C0  2CC2               u5571:
 11935  14C1                     	goto	l3878
 11936  14C1  2CA4               u5570:
 11937  14C2                     	goto	l3886
 11938  14C2  2CC4               	
 11939                           l691:	
 11940  14C3                     	goto	l3886
 11941  14C3  2CC4               	line	30
 11942                           	
 11943                           l685:	
 11944  14C4                     	line	31
 11945                           	
 11946                           l3886:	
 11947  14C4                     	movf	((___awmod@sign)),w
 11948  14C4  0821               	btfsc	status,2
 11949  14C5  1903               	goto	u5581
 11950  14C6  2CC8               	goto	u5580
 11951  14C7  2CC9               u5581:
 11952  14C8                     	goto	l3890
 11953  14C8  2CCF               u5580:
 11954  14C9                     	line	32
 11955                           	
 11956                           l3888:	
 11957  14C9                     	comf	(___awmod@dividend),f
 11958  14C9  09F5               	comf	(___awmod@dividend+1),f
 11959  14CA  09F6               	incf	(___awmod@dividend),f
 11960  14CB  0AF5               	skipnz
 11961  14CC  1903               	incf	(___awmod@dividend+1),f
 11962  14CD  0AF6               	goto	l3890
 11963  14CE  2CCF               	
 11964                           l692:	
 11965  14CF                     	line	33
 11966                           	
 11967                           l3890:	
 11968  14CF                     	movf	(___awmod@dividend+1),w
 11969  14CF  0876               	movwf	(?___awmod+1)
 11970  14D0  00F4               	movf	(___awmod@dividend),w
 11971  14D1  0875               	movwf	(?___awmod)
 11972  14D2  00F3               	goto	l693
 11973  14D3  2CD4               	
 11974                           l3892:	
 11975  14D4                     	line	34
 11976                           	
 11977                           l693:	
 11978  14D4                     	return
 11979  14D4  0008               	opt stack 0
 11980                           GLOBAL	__end_of___awmod
 11981                           	__end_of___awmod:
 11982  14D5                     	signat	___awmod,8314
 11983                           	global	___awdiv
 11984                           
 11985 ;; *************** function ___awdiv *****************
 11986 ;; Defined at:
 11987 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11988 ;; Parameters:    Size  Location     Type
 11989 ;;  divisor         2    2[BANK0 ] int 
 11990 ;;  dividend        2    4[BANK0 ] int 
 11991 ;; Auto vars:     Size  Location     Type
 11992 ;;  quotient        2    8[BANK0 ] int 
 11993 ;;  sign            1    7[BANK0 ] unsigned char 
 11994 ;;  counter         1    6[BANK0 ] unsigned char 
 11995 ;; Return value:  Size  Location     Type
 11996 ;;                  2    2[BANK0 ] int 
 11997 ;; Registers used:
 11998 ;;		wreg, status,2, status,0
 11999 ;; Tracked objects:
 12000 ;;		On entry : 0/0
 12001 ;;		On exit  : 0/0
 12002 ;;		Unchanged: 0/0
 12003 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12004 ;;      Params:         0       4       0       0       0
 12005 ;;      Locals:         0       4       0       0       0
 12006 ;;      Temps:          1       0       0       0       0
 12007 ;;      Totals:         1       8       0       0       0
 12008 ;;Total ram usage:        9 bytes
 12009 ;; Hardware stack levels used:    1
 12010 ;; Hardware stack levels required when called:    2
 12011 ;; This function calls:
 12012 ;;		Nothing
 12013 ;; This function is called by:
 12014 ;;		_main
 12015 ;; This function uses a non-reentrant model
 12016 ;;
 12017                           psect	text25,local,class=CODE,delta=2,merge=1,group=1
 12018                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12019                           	line	5
 12020                           global __ptext25
 12021                           __ptext25:	;psect for function ___awdiv
 12022  078B                     psect	text25
 12023                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 12024                           	line	5
 12025                           	global	__size_of___awdiv
 12026                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 12027  0073                     	
 12028                           ___awdiv:	
 12029  078B                     ;incstack = 0
 12030                           	opt	stack 5
 12031                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 12032                           	line	13
 12033                           	
 12034                           l2664:	
 12035  078B                     	bcf	status, 5	;RP0=0, select bank0
 12036  078B  1283               	bcf	status, 6	;RP1=0, select bank0
 12037  078C  1303               	clrf	(___awdiv@sign)
 12038  078D  01A7               	line	14
 12039                           	
 12040                           l2666:	
 12041  078E                     	btfss	(___awdiv@divisor+1),7
 12042  078E  1FA3               	goto	u3101
 12043  078F  2F91               	goto	u3100
 12044  0790  2F92               u3101:
 12045  0791                     	goto	l2672
 12046  0791  2F9A               u3100:
 12047  0792                     	line	15
 12048                           	
 12049                           l2668:	
 12050  0792                     	comf	(___awdiv@divisor),f
 12051  0792  09A2               	comf	(___awdiv@divisor+1),f
 12052  0793  09A3               	incf	(___awdiv@divisor),f
 12053  0794  0AA2               	skipnz
 12054  0795  1903               	incf	(___awdiv@divisor+1),f
 12055  0796  0AA3               	line	16
 12056                           	
 12057                           l2670:	
 12058  0797                     	clrf	(___awdiv@sign)
 12059  0797  01A7               	incf	(___awdiv@sign),f
 12060  0798  0AA7               	goto	l2672
 12061  0799  2F9A               	line	17
 12062                           	
 12063                           l670:	
 12064  079A                     	line	18
 12065                           	
 12066                           l2672:	
 12067  079A                     	btfss	(___awdiv@dividend+1),7
 12068  079A  1FA5               	goto	u3111
 12069  079B  2F9D               	goto	u3110
 12070  079C  2F9E               u3111:
 12071  079D                     	goto	l2678
 12072  079D  2FA8               u3110:
 12073  079E                     	line	19
 12074                           	
 12075                           l2674:	
 12076  079E                     	comf	(___awdiv@dividend),f
 12077  079E  09A4               	comf	(___awdiv@dividend+1),f
 12078  079F  09A5               	incf	(___awdiv@dividend),f
 12079  07A0  0AA4               	skipnz
 12080  07A1  1903               	incf	(___awdiv@dividend+1),f
 12081  07A2  0AA5               	line	20
 12082                           	
 12083                           l2676:	
 12084  07A3                     	movlw	low(01h)
 12085  07A3  3001               	movwf	(??___awdiv+0)+0
 12086  07A4  00F7               	movf	(??___awdiv+0)+0,w
 12087  07A5  0877               	xorwf	(___awdiv@sign),f
 12088  07A6  06A7               	goto	l2678
 12089  07A7  2FA8               	line	21
 12090                           	
 12091                           l671:	
 12092  07A8                     	line	22
 12093                           	
 12094                           l2678:	
 12095  07A8                     	clrf	(___awdiv@quotient)
 12096  07A8  01A8               	clrf	(___awdiv@quotient+1)
 12097  07A9  01A9               	line	23
 12098                           	
 12099                           l2680:	
 12100  07AA                     	movf	((___awdiv@divisor)),w
 12101  07AA  0822               iorwf	((___awdiv@divisor+1)),w
 12102  07AB  0423               	btfsc	status,2
 12103  07AC  1903               	goto	u3121
 12104  07AD  2FAF               	goto	u3120
 12105  07AE  2FB0               u3121:
 12106  07AF                     	goto	l2700
 12107  07AF  2FED               u3120:
 12108  07B0                     	line	24
 12109                           	
 12110                           l2682:	
 12111  07B0                     	clrf	(___awdiv@counter)
 12112  07B0  01A6               	incf	(___awdiv@counter),f
 12113  07B1  0AA6               	line	25
 12114                           	goto	l2688
 12115  07B2  2FBF               	
 12116                           l674:	
 12117  07B3                     	line	26
 12118                           	
 12119                           l2684:	
 12120  07B3                     	movlw	01h
 12121  07B3  3001               	
 12122                           u3135:
 12123  07B4                     	clrc
 12124  07B4  1003               	rlf	(___awdiv@divisor),f
 12125  07B5  0DA2               	rlf	(___awdiv@divisor+1),f
 12126  07B6  0DA3               	addlw	-1
 12127  07B7  3EFF               	skipz
 12128  07B8  1D03               	goto	u3135
 12129  07B9  2FB4               	line	27
 12130                           	
 12131                           l2686:	
 12132  07BA                     	movlw	low(01h)
 12133  07BA  3001               	movwf	(??___awdiv+0)+0
 12134  07BB  00F7               	movf	(??___awdiv+0)+0,w
 12135  07BC  0877               	addwf	(___awdiv@counter),f
 12136  07BD  07A6               	goto	l2688
 12137  07BE  2FBF               	line	28
 12138                           	
 12139                           l673:	
 12140  07BF                     	line	25
 12141                           	
 12142                           l2688:	
 12143  07BF                     	btfss	(___awdiv@divisor+1),(15)&7
 12144  07BF  1FA3               	goto	u3141
 12145  07C0  2FC2               	goto	u3140
 12146  07C1  2FC3               u3141:
 12147  07C2                     	goto	l2684
 12148  07C2  2FB3               u3140:
 12149  07C3                     	goto	l2690
 12150  07C3  2FC5               	
 12151                           l675:	
 12152  07C4                     	goto	l2690
 12153  07C4  2FC5               	line	29
 12154                           	
 12155                           l676:	
 12156  07C5                     	line	30
 12157                           	
 12158                           l2690:	
 12159  07C5                     	movlw	01h
 12160  07C5  3001               	
 12161                           u3155:
 12162  07C6                     	clrc
 12163  07C6  1003               	rlf	(___awdiv@quotient),f
 12164  07C7  0DA8               	rlf	(___awdiv@quotient+1),f
 12165  07C8  0DA9               	addlw	-1
 12166  07C9  3EFF               	skipz
 12167  07CA  1D03               	goto	u3155
 12168  07CB  2FC6               	line	31
 12169                           	movf	(___awdiv@divisor+1),w
 12170  07CC  0823               	subwf	(___awdiv@dividend+1),w
 12171  07CD  0225               	skipz
 12172  07CE  1D03               	goto	u3165
 12173  07CF  2FD2               	movf	(___awdiv@divisor),w
 12174  07D0  0822               	subwf	(___awdiv@dividend),w
 12175  07D1  0224               u3165:
 12176  07D2                     	skipc
 12177  07D2  1C03               	goto	u3161
 12178  07D3  2FD5               	goto	u3160
 12179  07D4  2FD6               u3161:
 12180  07D5                     	goto	l2696
 12181  07D5  2FDE               u3160:
 12182  07D6                     	line	32
 12183                           	
 12184                           l2692:	
 12185  07D6                     	movf	(___awdiv@divisor),w
 12186  07D6  0822               	subwf	(___awdiv@dividend),f
 12187  07D7  02A4               	movf	(___awdiv@divisor+1),w
 12188  07D8  0823               	skipc
 12189  07D9  1C03               	decf	(___awdiv@dividend+1),f
 12190  07DA  03A5               	subwf	(___awdiv@dividend+1),f
 12191  07DB  02A5               	line	33
 12192                           	
 12193                           l2694:	
 12194  07DC                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 12195  07DC  1428               	goto	l2696
 12196  07DD  2FDE               	line	34
 12197                           	
 12198                           l677:	
 12199  07DE                     	line	35
 12200                           	
 12201                           l2696:	
 12202  07DE                     	movlw	01h
 12203  07DE  3001               	
 12204                           u3175:
 12205  07DF                     	clrc
 12206  07DF  1003               	rrf	(___awdiv@divisor+1),f
 12207  07E0  0CA3               	rrf	(___awdiv@divisor),f
 12208  07E1  0CA2               	addlw	-1
 12209  07E2  3EFF               	skipz
 12210  07E3  1D03               	goto	u3175
 12211  07E4  2FDF               	line	36
 12212                           	
 12213                           l2698:	
 12214  07E5                     	movlw	01h
 12215  07E5  3001               	subwf	(___awdiv@counter),f
 12216  07E6  02A6               	btfss	status,2
 12217  07E7  1D03               	goto	u3181
 12218  07E8  2FEA               	goto	u3180
 12219  07E9  2FEB               u3181:
 12220  07EA                     	goto	l2690
 12221  07EA  2FC5               u3180:
 12222  07EB                     	goto	l2700
 12223  07EB  2FED               	
 12224                           l678:	
 12225  07EC                     	goto	l2700
 12226  07EC  2FED               	line	37
 12227                           	
 12228                           l672:	
 12229  07ED                     	line	38
 12230                           	
 12231                           l2700:	
 12232  07ED                     	movf	((___awdiv@sign)),w
 12233  07ED  0827               	btfsc	status,2
 12234  07EE  1903               	goto	u3191
 12235  07EF  2FF1               	goto	u3190
 12236  07F0  2FF2               u3191:
 12237  07F1                     	goto	l2704
 12238  07F1  2FF8               u3190:
 12239  07F2                     	line	39
 12240                           	
 12241                           l2702:	
 12242  07F2                     	comf	(___awdiv@quotient),f
 12243  07F2  09A8               	comf	(___awdiv@quotient+1),f
 12244  07F3  09A9               	incf	(___awdiv@quotient),f
 12245  07F4  0AA8               	skipnz
 12246  07F5  1903               	incf	(___awdiv@quotient+1),f
 12247  07F6  0AA9               	goto	l2704
 12248  07F7  2FF8               	
 12249                           l679:	
 12250  07F8                     	line	40
 12251                           	
 12252                           l2704:	
 12253  07F8                     	movf	(___awdiv@quotient+1),w
 12254  07F8  0829               	movwf	(?___awdiv+1)
 12255  07F9  00A3               	movf	(___awdiv@quotient),w
 12256  07FA  0828               	movwf	(?___awdiv)
 12257  07FB  00A2               	goto	l680
 12258  07FC  2FFD               	
 12259                           l2706:	
 12260  07FD                     	line	41
 12261                           	
 12262                           l680:	
 12263  07FD                     	return
 12264  07FD  0008               	opt stack 0
 12265                           GLOBAL	__end_of___awdiv
 12266                           	__end_of___awdiv:
 12267  07FE                     	signat	___awdiv,8314
 12268                           	global	_I2C_Master_Write
 12269                           
 12270 ;; *************** function _I2C_Master_Write *****************
 12271 ;; Defined at:
 12272 ;;		line 65 in file "I2C.c"
 12273 ;; Parameters:    Size  Location     Type
 12274 ;;  d               2    3[COMMON] unsigned int 
 12275 ;; Auto vars:     Size  Location     Type
 12276 ;;		None
 12277 ;; Return value:  Size  Location     Type
 12278 ;;                  1    wreg      void 
 12279 ;; Registers used:
 12280 ;;		wreg, status,2, status,0, pclath, cstack
 12281 ;; Tracked objects:
 12282 ;;		On entry : 0/0
 12283 ;;		On exit  : 0/0
 12284 ;;		Unchanged: 0/0
 12285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12286 ;;      Params:         2       0       0       0       0
 12287 ;;      Locals:         0       0       0       0       0
 12288 ;;      Temps:          0       0       0       0       0
 12289 ;;      Totals:         2       0       0       0       0
 12290 ;;Total ram usage:        2 bytes
 12291 ;; Hardware stack levels used:    1
 12292 ;; Hardware stack levels required when called:    3
 12293 ;; This function calls:
 12294 ;;		_I2C_Master_Wait
 12295 ;; This function is called by:
 12296 ;;		_main
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
 12300                           	file	"I2C.c"
 12301                           	line	65
 12302                           global __ptext26
 12303                           __ptext26:	;psect for function _I2C_Master_Write
 12304  119E                     psect	text26
 12305                           	file	"I2C.c"
 12306                           	line	65
 12307                           	global	__size_of_I2C_Master_Write
 12308                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
 12309  000A                     	
 12310                           _I2C_Master_Write:	
 12311  119E                     ;incstack = 0
 12312                           	opt	stack 4
 12313                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12314                           	line	67
 12315                           	
 12316                           l3792:	
 12317  119E                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
 12318                           	fcall	_I2C_Master_Wait
 12319  119E  160A  118A  21A8  160A  118A  	line	68
 12320                           	
 12321                           l3794:	
 12322  11A3                     ;I2C.c: 68:     SSPBUF = d;
 12323                           	movf	(I2C_Master_Write@d),w
 12324  11A3  0873               	bcf	status, 5	;RP0=0, select bank0
 12325  11A4  1283               	bcf	status, 6	;RP1=0, select bank0
 12326  11A5  1303               	movwf	(19)	;volatile
 12327  11A6  0093               	line	69
 12328                           	
 12329                           l47:	
 12330  11A7                     	return
 12331  11A7  0008               	opt stack 0
 12332                           GLOBAL	__end_of_I2C_Master_Write
 12333                           	__end_of_I2C_Master_Write:
 12334  11A8                     	signat	_I2C_Master_Write,4217
 12335                           	global	_I2C_Master_Stop
 12336                           
 12337 ;; *************** function _I2C_Master_Stop *****************
 12338 ;; Defined at:
 12339 ;;		line 55 in file "I2C.c"
 12340 ;; Parameters:    Size  Location     Type
 12341 ;;		None
 12342 ;; Auto vars:     Size  Location     Type
 12343 ;;		None
 12344 ;; Return value:  Size  Location     Type
 12345 ;;                  1    wreg      void 
 12346 ;; Registers used:
 12347 ;;		wreg, status,2, status,0, pclath, cstack
 12348 ;; Tracked objects:
 12349 ;;		On entry : 0/0
 12350 ;;		On exit  : 0/0
 12351 ;;		Unchanged: 0/0
 12352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12353 ;;      Params:         0       0       0       0       0
 12354 ;;      Locals:         0       0       0       0       0
 12355 ;;      Temps:          0       0       0       0       0
 12356 ;;      Totals:         0       0       0       0       0
 12357 ;;Total ram usage:        0 bytes
 12358 ;; Hardware stack levels used:    1
 12359 ;; Hardware stack levels required when called:    3
 12360 ;; This function calls:
 12361 ;;		_I2C_Master_Wait
 12362 ;; This function is called by:
 12363 ;;		_main
 12364 ;; This function uses a non-reentrant model
 12365 ;;
 12366                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 12367                           	line	55
 12368                           global __ptext27
 12369                           __ptext27:	;psect for function _I2C_Master_Stop
 12370  1195                     psect	text27
 12371                           	file	"I2C.c"
 12372                           	line	55
 12373                           	global	__size_of_I2C_Master_Stop
 12374                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
 12375  0009                     	
 12376                           _I2C_Master_Stop:	
 12377  1195                     ;incstack = 0
 12378                           	opt	stack 4
 12379                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12380                           	line	57
 12381                           	
 12382                           l3788:	
 12383  1195                     ;I2C.c: 57:     I2C_Master_Wait();
 12384                           	fcall	_I2C_Master_Wait
 12385  1195  160A  118A  21A8  160A  118A  	line	58
 12386                           	
 12387                           l3790:	
 12388  119A                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 12389                           	bsf	status, 5	;RP0=1, select bank1
 12390  119A  1683               	bcf	status, 6	;RP1=0, select bank1
 12391  119B  1303               	bsf	(145)^080h,2	;volatile
 12392  119C  1511               	line	59
 12393                           	
 12394                           l44:	
 12395  119D                     	return
 12396  119D  0008               	opt stack 0
 12397                           GLOBAL	__end_of_I2C_Master_Stop
 12398                           	__end_of_I2C_Master_Stop:
 12399  119E                     	signat	_I2C_Master_Stop,89
 12400                           	global	_I2C_Master_Start
 12401                           
 12402 ;; *************** function _I2C_Master_Start *****************
 12403 ;; Defined at:
 12404 ;;		line 39 in file "I2C.c"
 12405 ;; Parameters:    Size  Location     Type
 12406 ;;		None
 12407 ;; Auto vars:     Size  Location     Type
 12408 ;;		None
 12409 ;; Return value:  Size  Location     Type
 12410 ;;                  1    wreg      void 
 12411 ;; Registers used:
 12412 ;;		wreg, status,2, status,0, pclath, cstack
 12413 ;; Tracked objects:
 12414 ;;		On entry : 0/0
 12415 ;;		On exit  : 0/0
 12416 ;;		Unchanged: 0/0
 12417 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12418 ;;      Params:         0       0       0       0       0
 12419 ;;      Locals:         0       0       0       0       0
 12420 ;;      Temps:          0       0       0       0       0
 12421 ;;      Totals:         0       0       0       0       0
 12422 ;;Total ram usage:        0 bytes
 12423 ;; Hardware stack levels used:    1
 12424 ;; Hardware stack levels required when called:    3
 12425 ;; This function calls:
 12426 ;;		_I2C_Master_Wait
 12427 ;; This function is called by:
 12428 ;;		_main
 12429 ;; This function uses a non-reentrant model
 12430 ;;
 12431                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 12432                           	line	39
 12433                           global __ptext28
 12434                           __ptext28:	;psect for function _I2C_Master_Start
 12435  118C                     psect	text28
 12436                           	file	"I2C.c"
 12437                           	line	39
 12438                           	global	__size_of_I2C_Master_Start
 12439                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
 12440  0009                     	
 12441                           _I2C_Master_Start:	
 12442  118C                     ;incstack = 0
 12443                           	opt	stack 4
 12444                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12445                           	line	41
 12446                           	
 12447                           l3784:	
 12448  118C                     ;I2C.c: 41:     I2C_Master_Wait();
 12449                           	fcall	_I2C_Master_Wait
 12450  118C  160A  118A  21A8  160A  118A  	line	42
 12451                           	
 12452                           l3786:	
 12453  1191                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 12454                           	bsf	status, 5	;RP0=1, select bank1
 12455  1191  1683               	bcf	status, 6	;RP1=0, select bank1
 12456  1192  1303               	bsf	(145)^080h,0	;volatile
 12457  1193  1411               	line	43
 12458                           	
 12459                           l38:	
 12460  1194                     	return
 12461  1194  0008               	opt stack 0
 12462                           GLOBAL	__end_of_I2C_Master_Start
 12463                           	__end_of_I2C_Master_Start:
 12464  1195                     	signat	_I2C_Master_Start,89
 12465                           	global	_I2C_Master_Read
 12466                           
 12467 ;; *************** function _I2C_Master_Read *****************
 12468 ;; Defined at:
 12469 ;;		line 74 in file "I2C.c"
 12470 ;; Parameters:    Size  Location     Type
 12471 ;;  a               2    3[COMMON] unsigned short 
 12472 ;; Auto vars:     Size  Location     Type
 12473 ;;  temp            2    0[BANK0 ] unsigned short 
 12474 ;; Return value:  Size  Location     Type
 12475 ;;                  2    3[COMMON] unsigned short 
 12476 ;; Registers used:
 12477 ;;		wreg, status,2, status,0, pclath, cstack
 12478 ;; Tracked objects:
 12479 ;;		On entry : 0/0
 12480 ;;		On exit  : 0/0
 12481 ;;		Unchanged: 0/0
 12482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12483 ;;      Params:         2       0       0       0       0
 12484 ;;      Locals:         0       2       0       0       0
 12485 ;;      Temps:          2       0       0       0       0
 12486 ;;      Totals:         4       2       0       0       0
 12487 ;;Total ram usage:        6 bytes
 12488 ;; Hardware stack levels used:    1
 12489 ;; Hardware stack levels required when called:    3
 12490 ;; This function calls:
 12491 ;;		_I2C_Master_Wait
 12492 ;; This function is called by:
 12493 ;;		_main
 12494 ;; This function uses a non-reentrant model
 12495 ;;
 12496                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 12497                           	line	74
 12498                           global __ptext29
 12499                           __ptext29:	;psect for function _I2C_Master_Read
 12500  12BA                     psect	text29
 12501                           	file	"I2C.c"
 12502                           	line	74
 12503                           	global	__size_of_I2C_Master_Read
 12504                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
 12505  0031                     	
 12506                           _I2C_Master_Read:	
 12507  12BA                     ;incstack = 0
 12508                           	opt	stack 4
 12509                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12510                           	line	77
 12511                           	
 12512                           l3796:	
 12513  12BA                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
 12514                           	fcall	_I2C_Master_Wait
 12515  12BA  160A  118A  21A8  160A  118A  	line	78
 12516                           	
 12517                           l3798:	
 12518  12BF                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
 12519                           	bsf	status, 5	;RP0=1, select bank1
 12520  12BF  1683               	bcf	status, 6	;RP1=0, select bank1
 12521  12C0  1303               	bsf	(145)^080h,3	;volatile
 12522  12C1  1591               	line	79
 12523                           ;I2C.c: 79:     I2C_Master_Wait();
 12524                           	fcall	_I2C_Master_Wait
 12525  12C2  160A  118A  21A8  160A  118A  	line	80
 12526                           	
 12527                           l3800:	
 12528  12C7                     ;I2C.c: 80:     temp = SSPBUF;
 12529                           	bcf	status, 5	;RP0=0, select bank0
 12530  12C7  1283               	bcf	status, 6	;RP1=0, select bank0
 12531  12C8  1303               	movf	(19),w	;volatile
 12532  12C9  0813               	movwf	(??_I2C_Master_Read+0)+0
 12533  12CA  00F5               	clrf	(??_I2C_Master_Read+0)+0+1
 12534  12CB  01F6               	movf	0+(??_I2C_Master_Read+0)+0,w
 12535  12CC  0875               	movwf	(I2C_Master_Read@temp)
 12536  12CD  00A0               	movf	1+(??_I2C_Master_Read+0)+0,w
 12537  12CE  0876               	movwf	(I2C_Master_Read@temp+1)
 12538  12CF  00A1               	line	81
 12539                           	
 12540                           l3802:	
 12541  12D0                     ;I2C.c: 81:     I2C_Master_Wait();
 12542                           	fcall	_I2C_Master_Wait
 12543  12D0  160A  118A  21A8  160A  118A  	line	82
 12544                           	
 12545                           l3804:	
 12546  12D5                     ;I2C.c: 82:     if(a == 1){
 12547                           		decf	((I2C_Master_Read@a)),w
 12548  12D5  0373               iorwf	((I2C_Master_Read@a+1)),w
 12549  12D6  0474               	btfss	status,2
 12550  12D7  1D03               	goto	u5441
 12551  12D8  2ADA               	goto	u5440
 12552  12D9  2ADB               u5441:
 12553  12DA                     	goto	l50
 12554  12DA  2ADF               u5440:
 12555  12DB                     	line	83
 12556                           	
 12557                           l3806:	
 12558  12DB                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
 12559                           	bsf	status, 5	;RP0=1, select bank1
 12560  12DB  1683               	bcf	status, 6	;RP1=0, select bank1
 12561  12DC  1303               	bcf	(145)^080h,5	;volatile
 12562  12DD  1291               	line	84
 12563                           ;I2C.c: 84:     }else{
 12564                           	goto	l51
 12565  12DE  2AE2               	
 12566                           l50:	
 12567  12DF                     	line	85
 12568                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
 12569                           	bsf	status, 5	;RP0=1, select bank1
 12570  12DF  1683               	bcf	status, 6	;RP1=0, select bank1
 12571  12E0  1303               	bsf	(145)^080h,5	;volatile
 12572  12E1  1691               	line	86
 12573                           ;I2C.c: 86:     }
 12574                           	
 12575                           l51:	
 12576  12E2                     	line	87
 12577                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
 12578                           	bsf	(145)^080h,4	;volatile
 12579  12E2  1611               	line	88
 12580                           	
 12581                           l3808:	
 12582  12E3                     ;I2C.c: 88:     return temp;
 12583                           	bcf	status, 5	;RP0=0, select bank0
 12584  12E3  1283               	bcf	status, 6	;RP1=0, select bank0
 12585  12E4  1303               	movf	(I2C_Master_Read@temp+1),w
 12586  12E5  0821               	movwf	(?_I2C_Master_Read+1)
 12587  12E6  00F4               	movf	(I2C_Master_Read@temp),w
 12588  12E7  0820               	movwf	(?_I2C_Master_Read)
 12589  12E8  00F3               	goto	l52
 12590  12E9  2AEA               	
 12591                           l3810:	
 12592  12EA                     	line	89
 12593                           	
 12594                           l52:	
 12595  12EA                     	return
 12596  12EA  0008               	opt stack 0
 12597                           GLOBAL	__end_of_I2C_Master_Read
 12598                           	__end_of_I2C_Master_Read:
 12599  12EB                     	signat	_I2C_Master_Read,4218
 12600                           	global	_I2C_Master_Wait
 12601                           
 12602 ;; *************** function _I2C_Master_Wait *****************
 12603 ;; Defined at:
 12604 ;;		line 32 in file "I2C.c"
 12605 ;; Parameters:    Size  Location     Type
 12606 ;;		None
 12607 ;; Auto vars:     Size  Location     Type
 12608 ;;		None
 12609 ;; Return value:  Size  Location     Type
 12610 ;;                  1    wreg      void 
 12611 ;; Registers used:
 12612 ;;		wreg, status,2
 12613 ;; Tracked objects:
 12614 ;;		On entry : 0/0
 12615 ;;		On exit  : 0/0
 12616 ;;		Unchanged: 0/0
 12617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12618 ;;      Params:         0       0       0       0       0
 12619 ;;      Locals:         0       0       0       0       0
 12620 ;;      Temps:          0       0       0       0       0
 12621 ;;      Totals:         0       0       0       0       0
 12622 ;;Total ram usage:        0 bytes
 12623 ;; Hardware stack levels used:    1
 12624 ;; Hardware stack levels required when called:    2
 12625 ;; This function calls:
 12626 ;;		Nothing
 12627 ;; This function is called by:
 12628 ;;		_I2C_Master_Start
 12629 ;;		_I2C_Master_Stop
 12630 ;;		_I2C_Master_Write
 12631 ;;		_I2C_Master_Read
 12632 ;;		_I2C_Master_RepeatedStart
 12633 ;; This function uses a non-reentrant model
 12634 ;;
 12635                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 12636                           	line	32
 12637                           global __ptext30
 12638                           __ptext30:	;psect for function _I2C_Master_Wait
 12639  11A8                     psect	text30
 12640                           	file	"I2C.c"
 12641                           	line	32
 12642                           	global	__size_of_I2C_Master_Wait
 12643                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
 12644  000F                     	
 12645                           _I2C_Master_Wait:	
 12646  11A8                     ;incstack = 0
 12647                           	opt	stack 4
 12648                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 12649                           	line	34
 12650                           	
 12651                           l3690:	
 12652  11A8                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 12653                           	goto	l32
 12654  11A8  29A9               	
 12655                           l33:	
 12656  11A9                     	
 12657                           l32:	
 12658  11A9                     	bsf	status, 5	;RP0=1, select bank1
 12659  11A9  1683               	bcf	status, 6	;RP1=0, select bank1
 12660  11AA  1303               	btfsc	(148)^080h,(2)&7	;volatile
 12661  11AB  1914               	goto	u5311
 12662  11AC  29AE               	goto	u5310
 12663  11AD  29AF               u5311:
 12664  11AE                     	goto	l32
 12665  11AE  29A9               u5310:
 12666  11AF                     	
 12667                           l3692:	
 12668  11AF                     	movf	(145)^080h,w	;volatile
 12669  11AF  0811               	andlw	01Fh
 12670  11B0  391F               	btfss	status,2
 12671  11B1  1D03               	goto	u5321
 12672  11B2  29B4               	goto	u5320
 12673  11B3  29B5               u5321:
 12674  11B4                     	goto	l32
 12675  11B4  29A9               u5320:
 12676  11B5                     	goto	l35
 12677  11B5  29B6               	
 12678                           l34:	
 12679  11B6                     	line	35
 12680                           	
 12681                           l35:	
 12682  11B6                     	return
 12683  11B6  0008               	opt stack 0
 12684                           GLOBAL	__end_of_I2C_Master_Wait
 12685                           	__end_of_I2C_Master_Wait:
 12686  11B7                     	signat	_I2C_Master_Wait,89
 12687                           	global	_isr
 12688                           
 12689 ;; *************** function _isr *****************
 12690 ;; Defined at:
 12691 ;;		line 64 in file "mainM.c"
 12692 ;; Parameters:    Size  Location     Type
 12693 ;;		None
 12694 ;; Auto vars:     Size  Location     Type
 12695 ;;		None
 12696 ;; Return value:  Size  Location     Type
 12697 ;;                  1    wreg      void 
 12698 ;; Registers used:
 12699 ;;		wreg, pclath, cstack
 12700 ;; Tracked objects:
 12701 ;;		On entry : 0/0
 12702 ;;		On exit  : 0/0
 12703 ;;		Unchanged: 0/0
 12704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12705 ;;      Params:         0       0       0       0       0
 12706 ;;      Locals:         0       0       0       0       0
 12707 ;;      Temps:          3       0       0       0       0
 12708 ;;      Totals:         3       0       0       0       0
 12709 ;;Total ram usage:        3 bytes
 12710 ;; Hardware stack levels used:    1
 12711 ;; Hardware stack levels required when called:    1
 12712 ;; This function calls:
 12713 ;;		_readADC
 12714 ;; This function is called by:
 12715 ;;		Interrupt level 1
 12716 ;; This function uses a non-reentrant model
 12717 ;;
 12718                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 12719                           	file	"mainM.c"
 12720                           	line	64
 12721                           global __ptext31
 12722                           __ptext31:	;psect for function _isr
 12723  123B                     psect	text31
 12724                           	file	"mainM.c"
 12725                           	line	64
 12726                           	global	__size_of_isr
 12727                           	__size_of_isr	equ	__end_of_isr-_isr
 12728  0025                     	
 12729                           _isr:	
 12730  123B                     ;incstack = 0
 12731                           	opt	stack 3
 12732                           ; Regs used in _isr: [wreg+pclath+cstack]
 12733                           psect	intentry,class=CODE,delta=2
 12734                           global __pintentry
 12735                           __pintentry:
 12736  0004                     global interrupt_function
 12737                           interrupt_function:
 12738  0004                     	global saved_w
 12739                           	saved_w	set	btemp+0
 12740  007E                     	movwf	saved_w
 12741  0004  00FE               	swapf	status,w
 12742  0005  0E03               	movwf	(??_isr+1)
 12743  0006  00F1               	movf	pclath,w
 12744  0007  080A               	movwf	(??_isr+2)
 12745  0008  00F2               	ljmp	_isr
 12746  0009  160A  118A  2A3B   psect	text31
 12747                           	line	65
 12748                           	
 12749                           i1l3342:	
 12750  123B                     ;mainM.c: 65:     if(ADCON0bits.GO_DONE == 0){
 12751                           	bcf	status, 5	;RP0=0, select bank0
 12752  123B  1283               	bcf	status, 6	;RP1=0, select bank0
 12753  123C  1303               	btfsc	(31),1	;volatile
 12754  123D  189F               	goto	u470_21
 12755  123E  2A40               	goto	u470_20
 12756  123F  2A41               u470_21:
 12757  1240                     	goto	i1l3348
 12758  1240  2A4F               u470_20:
 12759  1241                     	line	66
 12760                           	
 12761                           i1l3344:	
 12762  1241                     ;mainM.c: 66:         adc = readADC();
 12763                           	fcall	_readADC
 12764  1241  160A  118A  2178  160A  118A  	movwf	(??_isr+0)+0
 12765  1246  00F0               	movf	(??_isr+0)+0,w
 12766  1247  0870               	bsf	status, 5	;RP0=1, select bank1
 12767  1248  1683               	bcf	status, 6	;RP1=0, select bank1
 12768  1249  1303               	movwf	(_adc)^080h
 12769  124A  00C1               	line	67
 12770                           	
 12771                           i1l3346:	
 12772  124B                     ;mainM.c: 67:         PIR1bits.ADIF = 0;
 12773                           	bcf	status, 5	;RP0=0, select bank0
 12774  124B  1283               	bcf	status, 6	;RP1=0, select bank0
 12775  124C  1303               	bcf	(12),6	;volatile
 12776  124D  130C               	goto	i1l3348
 12777  124E  2A4F               	line	68
 12778                           ;mainM.c: 68:     }
 12779                           	
 12780                           i1l227:	
 12781  124F                     	line	70
 12782                           	
 12783                           i1l3348:	
 12784  124F                     ;mainM.c: 70:     if(PIR1bits.RCIF == 1){
 12785                           	btfss	(12),5	;volatile
 12786  124F  1E8C               	goto	u471_21
 12787  1250  2A52               	goto	u471_20
 12788  1251  2A53               u471_21:
 12789  1252                     	goto	i1l229
 12790  1252  2A59               u471_20:
 12791  1253                     	line	71
 12792                           	
 12793                           i1l3350:	
 12794  1253                     ;mainM.c: 71:         PORTAbits.RA0 = 1;
 12795                           	bsf	(5),0	;volatile
 12796  1253  1405               	line	72
 12797                           	
 12798                           i1l3352:	
 12799  1254                     ;mainM.c: 72:         receiveUSART = RCREG;
 12800                           	movf	(26),w	;volatile
 12801  1254  081A               	movwf	(??_isr+0)+0
 12802  1255  00F0               	movf	(??_isr+0)+0,w
 12803  1256  0870               	movwf	(_receiveUSART)
 12804  1257  00ED               	goto	i1l229
 12805  1258  2A59               	line	73
 12806                           ;mainM.c: 73:     }
 12807                           	
 12808                           i1l228:	
 12809  1259                     	line	74
 12810                           	
 12811                           i1l229:	
 12812  1259                     	movf	(??_isr+2),w
 12813  1259  0872               	movwf	pclath
 12814  125A  008A               	swapf	(??_isr+1)^0FFFFFF80h,w
 12815  125B  0E71               	movwf	status
 12816  125C  0083               	swapf	saved_w,f
 12817  125D  0EFE               	swapf	saved_w,w
 12818  125E  0E7E               	retfie
 12819  125F  0009               	opt stack 0
 12820                           GLOBAL	__end_of_isr
 12821                           	__end_of_isr:
 12822  1260                     	signat	_isr,89
 12823                           	global	_readADC
 12824                           
 12825 ;; *************** function _readADC *****************
 12826 ;; Defined at:
 12827 ;;		line 6 in file "ADC.c"
 12828 ;; Parameters:    Size  Location     Type
 12829 ;;		None
 12830 ;; Auto vars:     Size  Location     Type
 12831 ;;		None
 12832 ;; Return value:  Size  Location     Type
 12833 ;;                  1    wreg      unsigned char 
 12834 ;; Registers used:
 12835 ;;		wreg
 12836 ;; Tracked objects:
 12837 ;;		On entry : 0/0
 12838 ;;		On exit  : 0/0
 12839 ;;		Unchanged: 0/0
 12840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12841 ;;      Params:         0       0       0       0       0
 12842 ;;      Locals:         0       0       0       0       0
 12843 ;;      Temps:          0       0       0       0       0
 12844 ;;      Totals:         0       0       0       0       0
 12845 ;;Total ram usage:        0 bytes
 12846 ;; Hardware stack levels used:    1
 12847 ;; This function calls:
 12848 ;;		Nothing
 12849 ;; This function is called by:
 12850 ;;		_isr
 12851 ;; This function uses a non-reentrant model
 12852 ;;
 12853                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 12854                           	file	"ADC.c"
 12855                           	line	6
 12856                           global __ptext32
 12857                           __ptext32:	;psect for function _readADC
 12858  1178                     psect	text32
 12859                           	file	"ADC.c"
 12860                           	line	6
 12861                           	global	__size_of_readADC
 12862                           	__size_of_readADC	equ	__end_of_readADC-_readADC
 12863  0005                     	
 12864                           _readADC:	
 12865  1178                     ;incstack = 0
 12866                           	opt	stack 3
 12867                           ; Regs used in _readADC: [wreg]
 12868                           	line	7
 12869                           	
 12870                           i1l2622:	
 12871  1178                     ;ADC.c: 7:     return ADRESH;
 12872                           	bcf	status, 5	;RP0=0, select bank0
 12873  1178  1283               	bcf	status, 6	;RP1=0, select bank0
 12874  1179  1303               	movf	(30),w	;volatile
 12875  117A  081E               	goto	i1l338
 12876  117B  297C               	
 12877                           i1l2624:	
 12878  117C                     	line	8
 12879                           	
 12880                           i1l338:	
 12881  117C                     	return
 12882  117C  0008               	opt stack 0
 12883                           GLOBAL	__end_of_readADC
 12884                           	__end_of_readADC:
 12885  117D                     	signat	_readADC,89
 12886                           global	___latbits
 12887                           ___latbits	equ	2
 12888  0002                     	global	btemp
 12889                           	btemp set 07Eh
 12890  007E                     
 12891                           	DABS	1,126,2	;btemp
 12892                           	global	wtemp0
 12893                           	wtemp0 set btemp+0
 12894  007E                     	end


Data Sizes:
    Strings     136
    Constant    10
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      80
    BANK1            80     17      54
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 15
		 -> STR_25(CODE[15]), STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[7]), STR_19(CODE[8]), STR_18(CODE[15]), 
		 -> STR_17(CODE[11]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
		 -> STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[8]), STR_6(CODE[8]), 
		 -> STR_5(CODE[12]), STR_4(CODE[5]), STR_3(CODE[6]), writeIntLCD16@buffer(COMMON[5]), 
		 -> writeIntLCD@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _main->___awmod
    _main->_setCursorLCD
    _writeStrLCD->_writeCharLCD
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _setup->_initLCD
    _setup->_initUSART
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    _setCursorLCD->_cmdLCD
    ___flneg->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fldiv
    _writeIntLCD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flneg
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   19310
                                             13 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                             ___wmul
                           ___xxtofl
                          _sendUSART
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    4205
                                             22 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2    2402
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1680
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1106
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                          _initUSART
 ---------------------------------------------------------------------------------
 (2) _initUSART                                            5     0      5     502
                                              3 COMMON     5     0      5
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      31
                                              6 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      31
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _setCursorLCD                                         3     2      1     844
                                              6 COMMON     2     1      1
                                              0 BANK0      1     1      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _sendUSART                                            2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     496
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     517
                                              3 COMMON     4     0      4
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                             10 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             38 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             64 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                             14 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     973
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     604
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     301
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     785
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _readADC
 ---------------------------------------------------------------------------------
 (5) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___awdiv
     ___wmul (ARG)
   ___awmod
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _sendUSART
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _initUSART
   _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 _isr (ROOT)
   _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      91       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     11      36       7       67.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      91      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Mar 09 16:19:33 2020

             ___fldiv@aexp 00D1               ___fldiv@bexp 00D0                          pc 0002  
             ___fldiv@sign 00C9                __CFG_CP$OFF 0000            writeStrLCD@cont 0023  
                       l32 11A9                         l33 11A9                         l34 11B6  
                       l50 12DF                         l35 11B6                         l51 12E2  
                       l52 12EA                         l44 119D                         l29 135D  
                       l38 1194                         l47 11A7                         l74 122C  
                       l82 1405                         l75 1234                         l91 1397  
                       l83 13E0                         l76 123A                         l84 1422  
                       l85 1422                         l94 11E8                         l79 1183  
                       l88 11D4                         l97 121B               ___awdiv@sign 0027  
                       _s3 00BB                         _ir 00B4                         fsr 0004  
      ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022                        l300 058E  
                      l301 0598                        l302 05BE                        l311 1323  
                      l303 05BD                        l400 08F7                        l304 05B2  
                      l240 0095                        l401 091C                        l305 05BC  
                      l241 00E6                        l410 11EB                        l402 0903  
                      l306 05C1                        l250 02F1                        l242 0111  
                      l234 002A                        l411 11EB                        l403 091B  
                      l307 05C2                        l251 02FA                        l243 00FA  
                      l235 0032                        l412 11F2                        l404 090F  
                      l308 05C2                        l260 03D0                        l252 0311  
                      l244 0110                        l236 006C                        l413 11FD  
                      l405 091A                        l261 0358                        l253 031C  
                      l245 010F                        l237 0097                        l406 0919  
                      l510 05E2                        l262 03CF                        l270 03CB  
                      l254 0320                        l246 0151                        l238 0080  
                      l407 0920                        l511 05E3                        l271 03CA  
                      l263 0367                        l255 0328                        l247 0166  
                      l239 0096                        l504 06AD                        l520 0666  
                      l512 0603                        l272 04E0                        l280 04B1  
                      l264 03CE                        l256 032A                        l248 0165  
                      l521 06AC                        l513 05E4                        l505 05CD  
                      l281 04A6                        l273 0405                        l265 0376  
                      l257 0338                        l249 02C1                        l522 06C0  
                      l514 061D                        l506 05DF                        l290 0511  
                      l282 04B0                        l274 044D                        l258 03D1  
                      l266 03CD                        l523 06C6                        l515 0627  
                      l507 05E6                        l291 053C                        l283 04D6  
                      l275 044D                        l267 03A8                        l259 0347  
                      l516 064F                        l508 05E1                        l292 053B  
                      l284 04D5                        l276 048E                        l268 03CC  
                      l509 06C1                        l517 0644                        l293 0530  
                      l285 04CA                        l277 047D                        l269 03B9  
                      l526 1291                        l518 0661                        l294 053A  
                      l286 04D4                        l278 0487                        l527 129D  
                      l519 06A2                        l287 05C0                        l295 0576  
                      l279 04D6                        l720 09A5                        l712 0940  
                      l528 12B2                        l560 14FE                        l296 0565  
                      l288 0518                        l721 099A                        l713 09BC  
                      l529 12B9                        l561 1529                        l297 056F  
                      l289 0507                        l722 09AB                        l714 0989  
                      l562 1539                        l394 08C3                        l802 13D5  
                      l298 05BF                        l723 09BC                        l715 0975  
                      l563 1543                        l395 08CB                        l803 13AF  
                      l299 0599                        l820 15AD                        l812 1557  
                      l900 0C6E                        l708 11C4                        l716 0976  
                      l556 153A                        l396 08DF                        l804 13A3  
                      l821 15F9                        l813 156D                        l709 11C5  
                      l717 0988                        l557 14F8                        l397 091E  
                      l805 13B4                        l670 079A                        l830 1660  
                      l822 15BC                        l814 156A                        l910 0CE2  
                      l718 09AC                        l558 14EA                        l398 08EB  
                      l806 13B5                        l671 07A8                        l831 16B3  
                      l823 1632                        l815 1576                        l911 0CE0  
                      l719 0999                        l559 14FD                        l399 091D  
                      l807 13C6                        l680 07FD                        l672 07ED  
                      l840 172E                        l832 1673                        l824 1660  
                      l816 1583                        l920 0F46                        l912 0CEB  
                      l808 13D4                        l673 07BF                        l841 173D  
                      l833 17FF                        l825 1657                        l817 158F  
                      l921 0F6B                        l913 0D00                        l905 0C9E  
                      l809 13DA                        l674 07B3                        l690 14B5  
                      l850 1793                        l842 1754                        l834 16B2  
                      l826 1633                        l818 15A5                        l930 0FF2  
                      l922 0F62                        l906 0CB3                        l675 07C4  
                      l691 14C3                        l683 147F                        l851 178A  
                      l843 1776                        l835 169B                        l827 1640  
                      l819 15A2                        l931 0FEA                        l923 0F6A  
                      l915 0CF6                        l907 0CB1                        l676 07C5  
                      l692 14CF                        l684 1489                        l860 17E8  
                      l852 1792                        l844 1755                        l836 169E  
                      l828 1643                        l924 0F69                        l916 0FFF  
                      l908 0CBC                        l940 0717                        l677 07DE  
                      l693 14D4                        l685 14C4                        l861 17EF  
                      l853 1791                        l845 1763                        l837 16A4  
                      l829 1649                        l925 0FA3                        l917 0F41  
                      l909 0CCD                        l941 0733                        l678 07EC  
                      l686 149E                        l862 17F3                        l854 17CE  
                      l838 177C                        l846 176A                        l870 09F5  
                      l926 0FA2                        l918 0F22                        l950 0781  
                      l942 0718                        l934 06E3                        l679 07F8  
                      l687 1492                        l863 17FF                        l855 17CE  
                      l847 176D                        l839 172F                        l871 09F1  
                      l927 0FBB                        l919 0F31                        l943 073A  
                      l935 06EB                        l688 14A3                        l856 17CD  
                      l848 1775                        l880 0B5C                        l872 09FF  
                      l928 0FF2                        l944 0747                        l936 06FD  
                      l792 146A                        l689 14A4                        l857 17E9  
                      l849 177B                        l881 0AD2                        l873 0A1A  
                      l953 126D                        l929 0FD6                        l945 073B  
                      l937 078A                        l793 143C                        l890 0BA0  
                      l882 0B08                        l874 0A35                        l954 1277  
                      l938 0710                        l794 1430                        l859 17D9  
                      l891 0BD9                        l883 0AF9                        l875 0A31  
                      l955 1286                        l947 0752                        l939 0702  
                      l795 1441                        l892 0BCE                        l884 0B53  
                      l876 0A3E                        l956 128B                        l948 0752  
                      l796 1442                        l893 0BD8                        l885 0B63  
                      l877 0A64                        l869 09DA                        l949 075E  
                      l797 145B                        l894 0BD7                        l886 0B6D  
                      l878 0C8A                        l798 1469                        l895 0C17  
                      l887 0B99                        l879 0A7F                        l799 146F  
                      l896 0C16                        l888 0B6E                        l897 0C37  
                      l889 0B82                        l898 0C57                        l899 0C69  
                      _GIE 005F                        _RD0 0040                        _RD1 0041  
             __CFG_CPD$OFF 0000                        _adc 00C1                        _isr 123B  
                      _mov 00B7                        fsr0 0004                        indf 0000  
             ___awmod@sign 0021               ___flmul@aexp 0058               ___flmul@bexp 0059  
             ___flmul@sign 0053               ___flmul@temp 005E               ___flmul@prod 005A  
             __CFG_LVP$OFF 0000               ___fltol@exp1 0026                       l3000 09F3  
                     l3010 0A16                       l3002 09F5                       l3100 0BF4  
                     l3020 0A33                       l3012 0A1A                       l3004 09FF  
                     l3110 0C46                       l3102 0C0D                       l3030 0A63  
                     l3014 0A21                       l3022 0A35                       l3006 0A06  
                     l3120 0C69                       l3112 0C4A                       l3104 0C17  
                     l3040 0AA4                       l3024 0A46                       l3032 0A64  
                     l3016 0A26                       l3008 0A10                       l3200 0E80  
                     l3122 0C81                       l3114 0C54                       l3106 0C26  
                     l3050 0AD7                       l3042 0ABC                       l3034 0A6B  
                     l3026 0A52                       l3018 0A31                       l3210 0F14  
                     l3202 0E90                       l3130 0C98                       l2410 13AF  
                     l2402 1398                       l4010 0030                       l3124 0C8A  
                     l3116 0C61                       l3108 0C37                       l3060 0B29  
                     l3052 0AEF                       l3044 0AC6                       l3036 0A7E  
                     l3028 0A5A                       l3220 0F3A                       l3212 0F22  
                     l3204 0EBD                       l3140 0CB1                       l3132 0C9C  
                     l2412 13B5                       l2404 13A0                       l2420 13D5  
                     l4100 02F6                       l4020 0071                       l4012 0032  
                     l3118 0C65                       l3070 0B6B                       l3062 0B2A  
                     l3054 0AF5                       l3046 0AD0                       l3038 0A7F  
                     l3230 0F5F                       l3214 0F2B                       l3222 0F41  
                     l3206 0EE3                       l3150 0CCB                       l3142 0CB3  
                     l3134 0C9E                       l3126 0C8B                       l2422 13DA  
                     l2414 13BF                       l2406 13A3                       l2350 11D1  
                     l4102 02FF                       l4110 0311                       l4030 00A2  
                     l4022 0080                       l4014 0058                       l4006 0024  
                     l3080 0B90                       l3072 0B6E                       l3064 0B53  
                     l3056 0AF9                       l3048 0AD2                       l3240 0F82  
                     l3232 0F66                       l3224 0F46                       l3216 0F2F  
                     l3208 0F0B                       l3160 0CE2                       l3152 0CCD  
                     l3144 0CBC                       l3136 0CA3                       l3128 0C92  
                     l2416 13C6                       l2408 13AA                       l2344 11C7  
                     l4200 04E0                       l4120 032F                       l4112 0318  
                     l4104 0306                       l4040 00D7                       l4032 00AC  
                     l4024 0086                       l4016 005D                       l4008 002A  
                     l3090 0BC9                       l3074 0B78                       l3082 0B99  
                     l3058 0B08                       l3066 0B5C                       l3250 0FCA  
                     l3242 0F9B                       l3234 0F6B                       l3226 0F47  
                     l3218 0F31                       l3170 0D00                       l3162 0CEB  
                     l3154 0CD2                       l3146 0CC1                       l3138 0CA8  
                     l2530 08A6                       l2418 13CD                       l2346 11CA  
                     l4210 0507                       l4202 04E8                       l4130 0358  
                     l4122 0338                       l4114 0320                       l4106 030A  
                     l4050 0111                       l4042 00E6                       l4034 00C4  
                     l4026 0097                       l4018 006C                       l2700 07ED  
                     l3092 0BD2                       l3084 0BA0                       l3076 0B7E  
                     l3068 0B63                       l3260 0FEA                       l3252 0FD4  
                     l3236 0F70                       l3244 0FA3                       l3228 0F4B  
                     l3180 0D82                       l3172 0D10                       l3164 0CF0  
                     l3156 0CD7                       l3148 0CC7                       l2540 08C8  
                     l2532 08AD                       l2348 11CC                       l4220 0530  
                     l4212 0511                       l4204 04EF                       l4140 037E  
                     l4132 0360                       l4124 033F                       l4116 0326  
                     l4108 030F                       l4060 0132                       l4052 0117  
                     l4044 00EB                       l4036 00C9                       l4028 009D  
                     l2702 07F2                       l3094 0BD9                       l3086 0BA3  
                     l3078 0B82                       l3262 0FF6                       l3254 0FD6  
                     l3246 0FB0                       l3238 0F7E                       l3190 0DF0  
                     l3182 0D9E                       l3174 0D1D                       l3166 0CF6  
                     l3158 0CE0                       l2550 08EB                       l2542 08D1  
                     l2534 08B4                       l4230 055B                       l4222 053C  
                     l4206 04F8                       l4214 0518                       l4142 03A8  
                     l4134 0367                       l4126 0347                       l4150 03D1  
                     l4118 032A                       l4070 0166                       l4062 013B  
                     l4054 011C                       l4046 00FA                       l4038 00D2  
                     l2704 07F8                       l2800 155C                       l3096 0BE0  
                     l3088 0BA7                       l3264 0FFF                       l3256 0FE4  
                     l3248 0FBB                       l3192 0E00                       l3184 0DBA  
                     l3176 0D3A                       l3168 0CFF                       l2560 090C  
                     l2552 08F4                       l2544 08DA                       l2536 08B9  
                     l4240 0584                       l4232 0565                       l4224 0544  
                     l4216 051F                       l4208 04FD                       l4160 03FE  
                     l4152 03D8                       l4144 03B0                       l4136 036F  
                     l4128 034F                       l4080 0215                       l4072 016A  
                     l4064 0142                       l4056 0126                       l4048 0100  
                     l2706 07FD                       l2810 1576                       l2802 1561  
                     l3098 0BF0                       l2570 1263                       l3258 0FE8  
                     l3194 0E1D                       l3186 0DC3                       l3178 0D56  
                     l2562 090F                       l2554 08F7                       l2546 08DF  
                     l2538 08C3                       l4250 05B2                       l4242 058E  
                     l4234 056F                       l4226 054B                       l4218 0526  
                     l4170 0456                       l4162 0405                       l4154 03E0  
                     l4146 03B9                       l4138 0376                       l4090 02C6  
                     l4082 022A                       l4074 016F                       l4066 0151  
                     l4058 012D                       l2900 1692                       l2820 158D  
                     l2812 157B                       l2804 156A                       l2580 1286  
                     l2572 1265                       l3196 0E36                       l3188 0DD3  
                     l3620 11D6                       l2564 0916                       l2556 0900  
                     l2548 08E8                       l3700 13FC                       l4244 0599  
                     l4228 0554                       l4236 0576                       l4180 047D  
                     l4172 045E                       l4164 040C                       l4156 03E7  
                     l4148 03C1                       l4092 02CD                       l4084 02A4  
                     l4076 0179                       l4068 0156                       l2670 0797  
                     l2910 16AD                       l2902 169B                       l2830 15A3  
                     l2822 158F                       l2814 1581                       l2806 156B  
                     l2582 128B                       l2574 126D                       l3198 0E53  
                     l2750 11C4                       l2646 11EA                       l3622 11D9  
                     l3630 14E7                       l3710 1373                       l2558 0903  
                     l2566 091E                       l3702 1405                       l4246 05A1  
                     l4238 057D                       l4190 04A6                       l4182 0487  
                     l4174 0465                       l4166 0440                       l4158 03F8  
                     l4094 02D3                       l4086 02B7                       l4078 01D6  
                     l3800 12C7                       l2680 07AA                       l2672 079A  
                     l2664 078B                       l2920 171F                       l2904 169E  
                     l2912 16B3                       l2840 15C0                       l2824 1594  
                     l2832 15A5                       l2816 1583                       l2808 156D  
                     l2576 1271                       l2752 11C5                       l2648 11F2  
                     l3624 11DB                       l3640 1519                       l3632 14EA  
                     l3720 1391                       l3712 1379                       l3704 135E  
                     l2568 091F                       l4272 05F8                       l4248 05A8  
                     l4192 04B1                       l4176 046E                       l4184 048E  
                     l4168 0446                       l4096 02ED                       l4088 02BD  
                     l3810 12EA                       l3802 12D0                       l2690 07C5  
                     l2682 07B0                       l2674 079E                       l2666 078E  
                     l2930 1755                       l2914 16C9                       l2922 172F  
                     l2906 16A2                       l2850 15D4                       l2842 15C4  
                     l2834 15B3                       l2826 1599                       l2818 1589  
                     l2578 1280                       l2746 11B7                       l3626 11E5  
                     l3650 1543                       l3642 1527                       l3634 14F8  
                     l3714 137F                       l3706 1367                       l3730 05DF  
                     l3722 05C8                       l4194 04B9                       l4186 0495  
                     l4178 0473                       l4098 02F1                       l3804 12D5  
                     l2692 07D6                       l2684 07B3                       l2676 07A3  
                     l2668 0792                       l2940 176D                       l2932 175E  
                     l2924 1745                       l2916 1718                       l2908 16A4  
                     l2860 15E8                       l2852 15D8                       l2844 15C8  
                     l2836 15B7                       l2828 15A2                       l2748 11C1  
                     l3900 0940                       l3812 121F                       l3644 1529  
                     l3636 14FE                       l3628 14D5                       l3716 1385  
                     l3708 136D                       l3660 1437                       l3652 1423  
                     l3740 060F                       l3732 05E5                       l3724 05CD  
                     l3820 1201                       l4196 04C0                       l4188 049C  
                     l3806 12DB                       l2694 07DC                       l2686 07BA  
                     l2678 07A8                       l2950 1781                       l2942 1772  
                     l2934 1762                       l2926 174A                       l2918 171A  
                     l2870 15FA                       l2862 15EC                       l2854 15DC  
                     l2846 15CC                       l2838 15BC                       l2790 1544  
                     l3910 0964                       l3902 0955                       l3814 1224  
                     l3646 1532                       l3638 1507                       l3718 138B  
                     l3830 1317                       l3822 12EB                       l3670 145B  
                     l3662 143C                       l3654 1427                       l3750 0626  
                     l3742 0613                       l3734 05E6                       l3726 05D3  
                     l4198 04CA                       l3808 12E3                       l2696 07DE  
                     l2688 07BF                       l2960 17A6                       l2952 1787  
                     l2936 1767                       l2928 1753                       l2944 1776  
                     l2880 1647                       l2872 1616                       l2864 15F0  
                     l2856 15E0                       l2848 15D0                       l2792 154B  
                     l3920 098F                       l3912 096B                       l3904 0956  
                     l3816 122C                       l3648 153A                       l3680 1328  
                     l3840 1322                       l3832 131C                       l3824 12F7  
                     l3672 1462                       l3664 1442                       l3656 142D  
                     l3760 0655                       l3752 0627                       l3744 0617  
                     l3736 0603                       l3728 05DA                       l3690 11A8  
                     l2698 07E5                       l2970 17E1                       l2962 17AA  
                     l2954 178E                       l2938 176A                       l2946 177C  
                     l2890 1669                       l2882 1649                       l2874 1637  
                     l2866 15F4                       l2858 15E4                       l2794 1551  
                     l3922 0998                       l3914 0974                       l3906 095E  
                     l3850 12AB                       l3842 128C                       l3930 06CA  
                     l3818 1234                       l3682 132B                       l3834 131F  
                     l3826 1304                       l3666 1453                       l3658 1430  
                     l3674 146A                       l3770 069D                       l3762 065C  
                     l3754 0643                       l3746 061D                       l3738 060B  
                     l3692 11AF                       l3860 1477                       l2980 17FA  
                     l2972 17E6                       l2964 17C8                       l2956 1793  
                     l2948 177D                       l2892 1672                       l2884 1652  
                     l2876 1640                       l2868 15F9                       l2796 1555  
                     l3924 099A                       l3916 0976                       l3908 0960  
                     l3852 12B2                       l3844 1291                       l3940 06FC  
                     l3932 06CF                       l3684 135A                       l3836 1320  
                     l3828 1312                       l3676 146F                       l3668 1459  
                     l3772 06A2                       l3764 0661                       l3756 0644  
                     l3748 061F                       l3790 119A                       l3870 148F  
                     l3862 147C                       l2982 17FE                       l2974 17E9  
                     l2966 17D3                       l2958 1798                       l2894 1673  
                     l2878 1643                       l2886 1657                       l2798 1557  
                     l2990 09D6                       l3926 09AC                       l3918 0989  
                     l3854 12B9                       l3846 1295                       l3950 071C  
                     l3942 06FD                       l3934 06D3                       l3686 135B  
                     l3678 1324                       l3694 117D                       l3838 1321  
                     l3766 0666                       l3758 064F                       l3774 06AD  
                     l3784 118C                       l3792 119E                       l3880 14AE  
                     l3872 1492                       l3864 147F                       l3856 1470  
                     l2976 17ED                       l2968 17D9                       l2896 168A  
                     l2888 1664                       l2992 09DA                       l2984 09BD  
                     l3928 09B1                       l3848 12A4                       l3960 0756  
                     l3952 072A                       l3944 0702                       l3936 06E3  
                     l3688 135C                       l3768 0696                       l3776 06C1  
                     l3696 13DB                       l3786 1191                       l3794 11A3  
                     l3890 14CF                       l3882 14B5                       l3874 1499  
                     l3866 1483                       l3858 1473                       l2978 17EF  
                     l2898 168E                       l2994 09E1                       l2986 09C6  
                     l3970 0781                       l3962 0760                       l3954 073B  
                     l3946 0710                       l3938 06F3                       l3778 06C6  
                     l3698 13E0                       l3796 12BA                       l3788 1195  
                     l3892 14D4                       l3884 14BC                       l3876 149E  
                     l3868 1489                       l2996 09E6                       l2988 09D0  
                     l3972 078A                       l3964 0776                       l3956 0747  
                     l3948 0718                       l3798 12BF                       l3878 14A4  
                     l3886 14C4                       l2998 09F1                       l3894 0921  
                     l3966 077B                       l3958 074B                       l3888 14C9  
                     l3896 0936                       l3968 077F                       l3898 093F  
                     ?_isr 0070                       STR_1 089F                       STR_3 0894  
                     STR_4 089A                       STR_5 0865                       STR_6 0885  
                     STR_7 0830                       STR_8 0821                       STR_9 084B  
                     u3000 1271                       u3001 1270                       u3100 0792  
                     u3020 1285                       u3101 0791                       u3021 1284  
                     u3110 079E                       u3111 079D                       u3015 1278  
                     u3120 07B0                       u4000 0B4E                       u3121 07AF  
                     u4010 0B62                       u3050 11F1                       u4011 0B61  
                     u3051 11F0                       u3140 07C3                       u4100 0BE0  
                     u4020 0B6B                       u3141 07C2                       u4101 0BDF  
                     u4021 0B6A                       u4005 0B37                       u4110 0BF4  
                     u4006 0B3A                       u3135 07B4                       u4111 0BF3  
                     u4007 0B41                       u3160 07D6                       u3400 1555  
                     u4120 0C03                       u4040 0B7E                       u4008 0B44  
                     u4200 0CD2                       u3161 07D5                       u3401 1554  
                     u4041 0B7D                       u4009 0B4B                       u4201 0CD1  
                     u3410 155C                       u4130 0C26                       u4210 0CD7  
                     u3155 07C6                       u3411 155B                       u4131 0C25  
                     u4035 0B71                       u4211 0CD6                       u3180 07EB  
                     u3500 1621                       u3420 1561                       u4140 0C46  
                     u4060 0B9F                       u4220 0CF0                       u3181 07EA  
                     u3165 07D2                       u3501 161F                       u3421 1560  
                     u4141 0C45                       u4125 0BFE                       u4061 0B9E  
                     u4301 0E0F                       u4221 0CEF                       u3190 07F2  
                     u3510 1622                       u3430 1581                       u4150 0C65  
                     u4070 0BA7                       u4302 0E16                       u4230 0CF5  
                     u3191 07F1                       u3175 07DF                       u3431 1580  
                     u4151 0C64                       u4135 0C22                       u4071 0BA6  
                     u4055 0B85                       u4303 0E1D                       u4231 0CF4  
                     u3600 1692                       u3520 1637                       u3440 158D  
                     u4080 0BC9                       u4160 0C9C                       u5200 1519  
                     u2720 13A0                       u6000 0306                       u3601 1691  
                     u3521 1636                       u3441 158C                       u4145 0C42  
                     u4081 0BC8                       u4321 0E45                       u4241 0D48  
                     u4161 0C9B                       u5201 1518                       u2721 139F  
                     u6001 0305                       u3610 16A2                       u3530 1647  
                     u3450 1594                       u4090 0BD2                       u4410 0F2F  
                     u4322 0E4C                       u4242 0D4F                       u4170 0CA3  
                     u3290 11C1                       u6010 0318                       u3611 16A1  
                     u3531 1646                       u3451 1593                       u4091 0BD1  
                     u4411 0F2E                       u4331 0E72                       u4323 0E53  
                     u4315 0E1F                       u4251 0D64                       u4243 0D56  
                     u4171 0CA2                       u3291 11C0                       u6011 0317  
                     u3700 1762                       u3460 1599                       u4500 0FB0  
                     u4332 0E79                       u4252 0D6B                       u4180 0CA8  
                     u5220 1538                       u5300 133B                       u2740 13B3  
                     u6100 03C1                       u6020 0326                       u3701 1761  
                     u3461 1598                       u4501 0FAF                       u4405 0F24  
                     u4341 0E9F                       u4333 0E80                       u4261 0D90  
                     u4253 0D72                       u4181 0CA7                       u5221 1537  
                     u5205 1515                       u2741 13B2                       u6101 03C0  
                     u6021 0325                       u5310 11AF                       u3710 1767  
                     u3630 16C9                       u3550 165F                       u3470 15B3  
                     u4510 0FCA                       u4430 0F45                       u4350 0EC9  
                     u4342 0EA6                       u4262 0D97                       u4190 0CCB  
                     u5230 142D                       u2750 13BF                       u6110 03D8  
                     u6030 032F                       u5311 11AE                       u3711 1766  
                     u3631 16C8                       u3551 165E                       u3471 15B2  
                     u4511 0FC9                       u4431 0F44                       u4343 0EAD  
                     u4271 0DAC                       u4263 0D9E                       u4191 0CCA  
                     u5215 152A                       u5231 142C                       u2751 13BE  
                     u2735 13A4                       u6111 03D7                       u6031 032E  
                     u5320 11B5                       u3800 17C8                       u3720 1772  
                     u3640 16EF                       u3560 1664                       u3480 15B7  
                     u4520 0FE8                       u4440 0F4B                       u4272 0DB3  
                     u5160 14E7                       u2920 08B9                       u5400 064E  
                     u6200 04EF                       u6120 03E7                       u6040 033F  
                     u5321 11B4                       u3801 17C7                       u3721 1771  
                     u3641 16F0                       u3633 16C5                       u3625 16A6  
                     u3561 1663                       u3545 164B                       u3481 15B6  
                     u4521 0FE7                       u4505 0FAC                       u4441 0F4A  
                     u4425 0F33                       u4361 0ED5                       u4273 0DBA  
                     u5161 14E6                       u5305 1336                       u2921 08B8  
                     u5401 064D                       u6201 04EE                       u6121 03E6  
                     u6041 033E                       u3810 17D3                       u3730 177A  
                     u3650 1701                       u3642 16F5                       u3570 1669  
                     u3490 1616                       u4450 0F5F                       u4370 0EF1  
                     u4362 0EDC                       u2930 08C8                       u5250 1440  
                     u2770 13D3                       u5410 0655                       u5330 13EA  
                     u6210 04FD                       u6130 040C                       u6050 034F  
                     u3811 17D2                       u3731 1779                       u3651 1702  
                     u3643 16F6                       u3571 1668                       u3491 1615  
                     u4515 0FC6                       u4451 0F5E                       u4363 0EE3  
                     u4355 0EC4                       u4291 0DE2                       u2931 08C7  
                     u5251 143F                       u2771 13D2                       u2755 13BB  
                     u5411 0654                       u6211 04FC                       u6131 040B  
                     u6051 034E                       _PEIE 005E                       u5500 1477  
                     u3820 17D8                       u3740 1781                       u3660 171F  
                     u3652 1707                       u3900 0A21                       u4460 0F66  
                     u4292 0DE9                       u5180 14FC                       u2940 08DA  
                     u5420 06AB                       u5340 140F                       u6220 051F  
                     u6140 0465                       u6060 0360                       u5501 1476  
                     u3821 17D7                       u3741 1780                       u3661 171E  
                     u3653 1708                       u3581 167C                       u3901 0A20  
                     u4461 0F65                       u4381 0EFD                       u4293 0DF0  
                     u4285 0DBC                       u5181 14FB                       u2941 08D9  
                     u5245 1431                       u2765 13C7                       u5421 06AA  
                     u6221 051E                       u6141 0464                       u6061 035F  
                     u5510 1483                       u3830 17E6                       u3750 1787  
                     u3670 1745                       u3590 168E                       u3582 1683  
                     u3910 0A26                       u4470 0F70                       u4382 0F04  
                     u2950 08E8                       u5270 1453                       u5430 06BF  
                     u5350 1421                       u6230 0526                       u6150 0473  
                     u6070 036F                       u5511 1482                       u3831 17E5  
                     u3751 1786                       u3671 1744                       u3591 168D  
                     u3583 168A                       u3495 1612                       u3911 0A25  
                     u4471 0F6F                       u4383 0F0B                       u4375 0EEC  
                     u5175 14EC                       u2951 08E7                       u5271 1452  
                     u5431 06BE                       u5351 1420                       u6231 0525  
                     u6151 0472                       u6071 036E                       u5440 12DB  
                     u5520 148F                       u3840 17ED                       u3760 178E  
                     u3680 174A                       u3920 0A46                       u4480 0F82  
                     u5600 094E                       u2960 08F4                       u5360 05D3  
                     u6240 054B                       u6160 0495                       u6080 037E  
                     u5441 12DA                       u5521 148E                       u3841 17EC  
                     u3761 178D                       u3681 1749                       u3921 0A45  
                     u4481 0F81                       u2961 08F3                       u5265 1443  
                     u5361 05D2                       u6241 054A                       u6161 0494  
                     u6081 037D                       u3850 17FE                       u3770 1798  
                     u3930 0A6B                       u4490 0F91                       u5610 0964  
                     u5450 1224                       u2970 0900                       u5290 1468  
                     u5370 0613                       u6250 055B                       u6170 049C  
                     u6090 03B0                       u3851 17FD                       u3771 1797  
                     u3931 0A6A                       u4395 0F0D                       u5611 0963  
                     u5451 1223                       u5195 1500                       u2971 08FF  
                     u5291 1467                       u5275 144F                       u5371 0612  
                     u6251 055A                       u6171 049B                       u6091 03AF  
                     u6307 00A8                       u5540 14A2                       u3780 17AA  
                     u3940 0AD7                       u3860 09D6                       u5620 096B  
                     u5460 1295                       u5700 06D3                       u2980 090C  
                     u5380 0625                       u6260 057D                       u6180 04B9  
                     u5541 14A1                       u3781 17A9                       u3941 0AD6  
                     u3861 09D5                       u5621 096A                       u5605 0949  
                     u5461 1294                       u5701 06D2                       u2981 090B  
                     u5285 145C                       u5381 0624                       u6261 057C  
                     u6181 04B8                       u6317 0122                       u5550 14AE  
                     u3790 17B9                       u3870 09E1                       u5710 06F3  
                     u2990 0916                       u5390 0642                       u6270 0584  
                     u6190 04C0                       u5551 14AD                       u5535 1493  
                     u3695 1757                       u3871 09E0                       u4495 0F8C  
                     u5711 06F2                       u2991 0915                       u5391 0641  
                     u6271 0583                       u6191 04BF                       u6327 0175  
                     u3880 09E6                       u5640 0987                       u5800 076B  
                     u6280 05A1                       u3881 09E5                       u5641 0986  
                     u6337 11CF                       u6281 05A0                       u5570 14C2  
                     u3970 0AF5                       u3890 0A16                       u5650 098F  
                     u5490 12B1                       u5810 077B                       u5730 0716  
                     u6290 05A8                       u5571 14C1                       u5555 14AA  
                     u3795 17B4                       u3971 0AF4                       u3955 0ADB  
                     u3891 0A15                       u5651 098E                       u5635 0977  
                     u5491 12B0                       u5475 129E                       u5811 077A  
                     u5731 0715                       u6347 1362                       u5395 063E  
                     u6291 05A7                       u5580 14C9                       u5820 077F  
                     u5900 00D7                       u5581 14C8                       u5565 14B6  
                     u3965 0AE8                       u5485 12A5                       u5821 077E  
                     u5805 0766                       u5725 0707                       u6357 11E0  
                     u5901 00D6                       u3990 0B29                       u5670 09AA  
                     u5590 0936                       u5750 0739                       u5910 00EB  
                     u3991 0B28                       u5671 09A9                       u5591 0935  
                     u5751 0738                       u6367 11F8                       u5911 00EA  
                     u5680 09B1                       u5920 0100                       u3985 0AFC  
                     u5681 09B0                       u5665 099C                       u5745 072B  
                     u5921 00FF                       u5770 074B                       u5690 06CF  
                     u5930 0142                       u3995 0B25                       u5771 074A  
                     u5691 06CE                       u5931 0141                       u5780 0751  
                     u5940 0156                       u5860 0030                       u5781 0750  
                     u5765 073F                       u5941 0155                       u5861 002F  
                     u5790 0756                       u5950 02BD                       u5870 005D  
                     u5791 0755                       u5951 02BC                       u5871 005C  
                     u5960 02C6                       u5880 0071                       u5961 02C5  
                     u5881 0070                       u5970 02CD                       u5890 0086  
                     u5971 02CC                       u5891 0085                       u5980 02F6  
                     u5981 02F5                       u5990 02FF                       u5991 02FE  
             __CFG_WRT$OFF 0000                       _dec1 00C0                       _dec2 00BD  
                     _adcP 00B9                       _adcT 00C2          writeStrLCD@string 0075  
                     _hall 007A                       _main 0024                       btemp 007E  
                     start 000C              __CFG_IESO$OFF 0000            ___fldiv@new_exp 00CA  
                    ??_isr 0070           ?_I2C_Master_Init 002D           ?_I2C_Master_Read 0073  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                _writeIntLCD 11FE  
            ___fltol@sign1 0025            __end_of___fladd 1800                      ?_main 0070  
          __end_of___fldiv 0C8B            __end_of___awdiv 07FE            __end_of___flneg 11C6  
                    STR_10 0847                      STR_11 0856                      STR_20 088D  
                    STR_12 0838                      STR_13 0865                      STR_21 0871  
                    STR_14 0885                      STR_22 0829                      STR_15 0830  
                    STR_23 081A                      STR_16 0821                      STR_24 0856  
                    STR_25 0838                      STR_17 084B              __CFG_WDTE$OFF 0000  
                    STR_18 0847                      STR_19 087D            __end_of___awmod 14D5  
          __end_of___flmul 1000            __end_of___fltol 09BD                      _ANSEL 0188  
          __end_of___lldiv 1544            ___awdiv@divisor 0022            __end_of___lwdiv 1470  
                    i1l227 124F                      i1l228 1259                      i1l229 1259  
          __end_of___lwmod 13DB                      i1l338 117C            ___awdiv@counter 0026  
                    _RCREG 001A                _writeStrLCD 13DB                      _SPBRG 0099  
                    _PORTB 0006                      _PORTD 0008                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
                    _TXREG 0019             __CFG_FCMEN$OFF 0000          initUSART@baudrate 0073  
          __end_of_readADC 117D            __end_of_initLCD 1398                      _alarm 00BF  
          __end_of_dpowers 081A                      _count 0079                      _setup 12EB  
    __size_of_writeCharLCD 000F             __CFG_BOREN$OFF 0000                      pclath 000A  
                    status 0003                      wtemp0 007E            __end_of_sprintf 06C7  
           __CFG_MCLRE$OFF 0000            __initialization 000F               __end_of_main 05C5  
           initUSART@rcint 0076             initUSART@txint 0075                     ??_main 00D2  
        initUSART@syncrono 0077               _writeCharLCD 11C6          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0073         ??_I2C_Master_Start 0073         ??_I2C_Master_Write 0075  
                   _ADRESH 001E           ___awdiv@dividend 0024                     ?_setup 0070  
                   _ANSELH 0189                     i1l2622 1178                     i1l3350 1253  
                   i1l3342 123B                     i1l2624 117C                     i1l3352 1254  
                   i1l3344 1241                     i1l3346 124B                     i1l3348 124F  
                   u470_20 1241                     u470_21 1240                     u471_20 1253  
                   u471_21 1252                     _SPBRGH 009A                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 078B             __CFG_PWRTE$OFF 0000  
        writeIntLCD@buffer 0039          writeIntLCD@numero 003D                     _clcLCD 117D  
                   _cmdLCD 11D5                  ??___fladd 0036                     ___wmul 128C  
                ??___fldiv 0068                  ??___awdiv 0077                  ??___flneg 0077  
                ??___awmod 0077                  ??___flmul 004E                  ??___fltol 0020  
                ??___lldiv 0073                     _garage 00B3                  ??___lwdiv 0077  
                ??___lwmod 0027                     _float1 00A8                     _float2 00A0  
                   _count2 0078                     _count3 00B5              sendUSART@data 0074  
                   _cursor 00C4           ___awdiv@quotient 0028            ___awmod@divisor 0073  
                   _signal 00B8            ___awmod@counter 0020                     _toggle 00BC  
                ??_readADC 0070                  ??_initLCD 0076         __size_of__Umul8_16 002C  
                   saved_w 007E                  ??_sprintf 002C               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0073    __end_of__initialization 0020  
               ___flneg@f1 002A                 ___fltol@f1 0073             __pcstackCOMMON 0070  
            __end_of_setup 1324                    ??_setup 0078                 __pbssBANK0 006D  
               __pbssBANK1 00A0              ?_setCursorLCD 0076         __size_of_initUSART 007B  
        __end_of__Umul8_16 128C                 __pmaintext 0024         __size_of_sendUSART 0015  
                  ?_clcLCD 0070                    ?_cmdLCD 0070                    ?___wmul 0073  
               __pintentry 0004               ?_writeIntLCD 0070               ?_writeStrLCD 0075  
                ?___xxtofl 0073                 _antibounce 00B2                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0800             ??_setCursorLCD 0077  
                  ___fladd 1544              setCursorLCD@x 0076              setCursorLCD@y 0020  
                  ___fldiv 09BD                    ___awdiv 078B            __size_of_clcLCD 0007  
                  ___flneg 11B7            __size_of_cmdLCD 0014                    ___awmod 1470  
                  ___flmul 0C8B                    ___fltol 0921                    ___lldiv 14D5  
          __size_of___wmul 002E                    ___lwdiv 1423                    ___lwmod 1398  
                _ANSELbits 0188          __end_of_initUSART 0921                    __ptext1 11FE  
                  __ptext2 13DB                    __ptext3 11C6                    __ptext4 05C5  
                  __ptext5 1398                    __ptext6 1423                    __ptext7 12EB  
                  __ptext8 08A6                    __ptext9 135E                    _readADC 1178  
                  _initLCD 135E                    _entero1 006F                    _entero2 00BE  
                  _dpowers 0810               __size_of_isr 0025                 ??___xxtofl 0020  
         ___awmod@dividend 0075   __size_of_I2C_Master_Init 003A   __size_of_I2C_Master_Read 0031  
 __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009                    _toggle2 00BA  
                  _toggle3 00B6          __end_of_sendUSART 11FE                    _sprintf 05C5  
                  clrloop0 1185       end_of_initialization 0020  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0020            ___lldiv@counter 002C  
                _RCSTAbits 0018           I2C_Master_Init@c 002D           I2C_Master_Read@a 0073  
                _PORTAbits 0005                ___fladd@grs 0045              ___xxtofl@sign 0024  
                _TRISAbits 0085                  _TRISBbits 0086                  _TRISCbits 0087  
                _TRISEbits 0089                ___fldiv@grs 00CC                ___fldiv@rem 00C5  
              ___flmul@grs 0054                  _TXSTAbits 0098             __end_of_clcLCD 1184  
           __end_of_cmdLCD 11E9             __end_of___wmul 12BA       __end_of_setCursorLCD 123B  
              _BAUDCTLbits 0187       __size_of_writeIntLCD 001E        start_initialization 000F  
     __size_of_writeStrLCD 0048                __end_of_isr 1260          ??_I2C_Master_Init 0074  
        ??_I2C_Master_Read 0075          ??_I2C_Master_Wait 0073          ??_I2C_Master_Stop 0073  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0076                   ??_cmdLCD 0073  
                 ??___wmul 0077                  __Umul8_16 1260                  ___fladd@a 0032  
                ___fladd@b 002E                  ___fldiv@a 0060                  ___fldiv@b 0064  
                ___flmul@a 004A                  ___flmul@b 0046                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00C5  
        __size_of___xxtofl 00C4              _screenCounter 006E      writeCharLCD@character 0074  
              sprintf@flag 0030                sprintf@prec 0031           _I2C_Master_Start 118C  
         _I2C_Master_Write 119E           ___lwdiv@dividend 0075                  cmdLCD@cmd 0075  
                 ?___fladd 002E                   ?___fldiv 0060                   ?___awdiv 0022  
                 ?___flneg 002A                   ?___awmod 0073                   ?___flmul 0046  
                 ?___fltol 0073                   ?___lldiv 0020                 ?__Umul8_16 0073  
                 ?___lwdiv 0073                   ?___lwmod 0023                  __pstrings 0800  
                 ?_readADC 0070                   ?_initLCD 0070              ?_writeCharLCD 0070  
                _initUSART 08A6           ___lwdiv@quotient 0021                   ?_sprintf 0029  
           __size_of_setup 0039               _receiveUSART 006D                  _sendUSART 11E9  
        interrupt_function 0004             ___wmul@product 0020                _antibounce2 00B1  
                clear_ram0 1184                   _PIE1bits 008C                   _PIR1bits 000C  
    __size_of_setCursorLCD 001F                 _ADCON0bits 001F                __stringbase 080F  
               _ADCON1bits 009F          ___wmul@multiplier 0073             ??_writeCharLCD 0073  
               ?_initUSART 0073        I2C_Master_Read@temp 0020                 ?_sendUSART 0070  
             _setCursorLCD 121C                ??__Umul8_16 0075           __size_of___fladd 02BC  
         __size_of___fldiv 02CE           __size_of___awdiv 0073           __size_of___flneg 000F  
         __size_of___awmod 0065           __size_of___flmul 0375           __size_of___fltol 009C  
         __size_of___lldiv 006F           __size_of___lwdiv 004D           __size_of___lwmod 0043  
                 _adcValue 00C3         __end_of__stringtab 0810                 _ANSELHbits 0189  
               sprintf@val 0032            _I2C_Master_Init 1324           __size_of_readADC 0005  
          _I2C_Master_Read 12BA           __size_of_initLCD 003A                   ___xxtofl 06C7  
          _I2C_Master_Wait 11A8            _I2C_Master_Stop 1195            ___lwdiv@divisor 0073  
          ___lwdiv@counter 0020                   __ptext10 117D                   __ptext11 1324  
                 __ptext20 0C8B                   __ptext12 14D5                   __ptext21 1260  
                 __ptext13 121C                   __ptext30 11A8                   __ptext22 09BD  
                 __ptext14 11D5                   __ptext31 123B                   __ptext23 1544  
                 __ptext15 11E9                   __ptext32 1178                   __ptext24 1470  
                 __ptext16 06C7                   __ptext25 078B                   __ptext17 128C  
                 __ptext26 119E                   __ptext18 0921                   __ptext27 1195  
                 __ptext19 11B7                   __ptext28 118C                   __ptext29 12BA  
        __CFG_BOR4V$BOR40V 0000           __size_of_sprintf 0102              __size_of_main 05A1  
                 _sensorF1 00AC                   _sensorF2 00A4              ??_writeIntLCD 0036  
            ??_writeStrLCD 0020   __end_of_I2C_Master_Start 1195   __end_of_I2C_Master_Write 11A8  
               _INTCONbits 000B                ??_initUSART 0078                   intlevel1 0000  
              _screenState 00B0                  sprintf@ap 002F                  sprintf@sp 0034  
              ??_sendUSART 0073           ___lwmod@dividend 0025           ___lldiv@dividend 0024  
     __end_of_writeCharLCD 11D5                  stringcode 080A    __end_of_I2C_Master_Init 135E  
  __end_of_I2C_Master_Read 12EB    __end_of_I2C_Master_Wait 11B7    __end_of_I2C_Master_Stop 119E  
   __Umul8_16@multiplicand 0073                   sprintf@c 0035                   sprintf@f 0029  
         ___lldiv@quotient 0028          I2C_Master_Write@d 0073            ___lwmod@divisor 0023  
          ___lwmod@counter 0028                   stringdir 080A                   stringtab 0800  
      __end_of_writeIntLCD 121C                _SSPCON2bits 0091        __end_of_writeStrLCD 1423  
            ___fladd@signs 0042               ___fladd@aexp 0043               ___fladd@bexp 0044  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
