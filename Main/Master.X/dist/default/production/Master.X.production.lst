

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Mar 09 14:36:28 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     	FNCALL	_main,_I2C_Master_Read
   868                           	FNCALL	_main,_I2C_Master_Start
   869                           	FNCALL	_main,_I2C_Master_Stop
   870                           	FNCALL	_main,_I2C_Master_Write
   871                           	FNCALL	_main,___awdiv
   872                           	FNCALL	_main,___awmod
   873                           	FNCALL	_main,___fladd
   874                           	FNCALL	_main,___fldiv
   875                           	FNCALL	_main,___flmul
   876                           	FNCALL	_main,___flneg
   877                           	FNCALL	_main,___fltol
   878                           	FNCALL	_main,___wmul
   879                           	FNCALL	_main,___xxtofl
   880                           	FNCALL	_main,_setCursorLCD
   881                           	FNCALL	_main,_setup
   882                           	FNCALL	_main,_writeCharLCD
   883                           	FNCALL	_main,_writeIntLCD
   884                           	FNCALL	_main,_writeStrLCD
   885                           	FNCALL	_writeIntLCD,_sprintf
   886                           	FNCALL	_writeIntLCD,_writeStrLCD
   887                           	FNCALL	_writeStrLCD,_writeCharLCD
   888                           	FNCALL	_sprintf,___lwdiv
   889                           	FNCALL	_sprintf,___lwmod
   890                           	FNCALL	_setup,_I2C_Master_Init
   891                           	FNCALL	_setup,_clcLCD
   892                           	FNCALL	_setup,_initLCD
   893                           	FNCALL	_initLCD,_cmdLCD
   894                           	FNCALL	_clcLCD,_cmdLCD
   895                           	FNCALL	_I2C_Master_Init,___lldiv
   896                           	FNCALL	_setCursorLCD,_cmdLCD
   897                           	FNCALL	___flmul,__Umul8_16
   898                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   899                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   900                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   901                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   902                           	FNROOT	_main
   903                           	FNCALL	_isr,_readADC
   904                           	FNCALL	intlevel1,_isr
   905                           	global	intlevel1
   906                           	FNROOT	intlevel1
   907                           	global	_dpowers
   908                           psect	strings,class=STRING,delta=2,noexec
   909                           global __pstrings
   910                           __pstrings:
   911  1000                     stringtab:
   912  1000                     	global    __stringtab
   913                           __stringtab:
   914  1000                     ;	String table - string pointers are 1 byte each
   915                           	btfsc	(btemp+1),7
   916  1000  1BFF               	ljmp	stringcode
   917  1001  280A               	bcf	status,7
   918  1002  1383               	btfsc	(btemp+1),0
   919  1003  187F               	bsf	status,7
   920  1004  1783               	movf	indf,w
   921  1005  0800               	incf fsr
   922  1006  0A84               skipnz
   923  1007  1903               incf btemp+1
   924  1008  0AFF               	return
   925  1009  0008               stringcode:stringdir:
   926  100A                     movlw high(stringdir)
      + 100A                     stringdir:	
   927  100A  3010               movwf pclath
   928  100B  008A               movf fsr,w
   929  100C  0804               incf fsr
   930  100D  0A84               	addwf pc
   931  100E  0782               	global __stringbase
   932                           __stringbase:
   933  100F                     	retlw	0
   934  100F  3400               psect	strings
   935                           	global    __end_of__stringtab
   936                           __end_of__stringtab:
   937  1010                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   938                           	line	358
   939                           _dpowers:
   940  1010                     	retlw	01h
   941  1010  3401               	retlw	0
   942  1011  3400               
   943                           	retlw	0Ah
   944  1012  340A               	retlw	0
   945  1013  3400               
   946                           	retlw	064h
   947  1014  3464               	retlw	0
   948  1015  3400               
   949                           	retlw	0E8h
   950  1016  34E8               	retlw	03h
   951  1017  3403               
   952                           	retlw	010h
   953  1018  3410               	retlw	027h
   954  1019  3427               
   955                           	global __end_of_dpowers
   956                           __end_of_dpowers:
   957  101A                     	global	_dpowers
   958                           	global	_signal
   959                           	global	_count2
   960                           	global	_hall
   961                           	global	_screenCounter
   962                           	global	_count
   963                           	global	_entero1
   964                           	global	_sensorF2
   965                           	global	_float1
   966                           	global	_sensorF1
   967                           	global	_screenState
   968                           	global	_antibounce2
   969                           	global	_antibounce
   970                           	global	_garage
   971                           	global	_ir
   972                           	global	_count3
   973                           	global	_toggle3
   974                           	global	_mov
   975                           	global	_adcP
   976                           	global	_toggle2
   977                           	global	_toggle
   978                           	global	_alarm
   979                           	global	_dec1
   980                           	global	_adc
   981                           	global	_adcT
   982                           	global	_cursor
   983                           	global	_INTCONbits
   984                           _INTCONbits	set	0xB
   985  000B                     	global	_ADRESH
   986                           _ADRESH	set	0x1E
   987  001E                     	global	_PORTD
   988                           _PORTD	set	0x8
   989  0008                     	global	_PORTAbits
   990                           _PORTAbits	set	0x5
   991  0005                     	global	_PIR1bits
   992                           _PIR1bits	set	0xC
   993  000C                     	global	_ADCON0bits
   994                           _ADCON0bits	set	0x1F
   995  001F                     	global	_PORTB
   996                           _PORTB	set	0x6
   997  0006                     	global	_SSPBUF
   998                           _SSPBUF	set	0x13
   999  0013                     	global	_SSPCON
  1000                           _SSPCON	set	0x14
  1001  0014                     	global	_RD1
  1002                           _RD1	set	0x41
  1003  0041                     	global	_RD0
  1004                           _RD0	set	0x40
  1005  0040                     	global	_SSPIF
  1006                           _SSPIF	set	0x63
  1007  0063                     	global	_PEIE
  1008                           _PEIE	set	0x5E
  1009  005E                     	global	_GIE
  1010                           _GIE	set	0x5F
  1011  005F                     	global	_ADCON1bits
  1012                           _ADCON1bits	set	0x9F
  1013  009F                     	global	_PIE1bits
  1014                           _PIE1bits	set	0x8C
  1015  008C                     	global	_TRISBbits
  1016                           _TRISBbits	set	0x86
  1017  0086                     	global	_TRISEbits
  1018                           _TRISEbits	set	0x89
  1019  0089                     	global	_TRISAbits
  1020                           _TRISAbits	set	0x85
  1021  0085                     	global	_TRISD
  1022                           _TRISD	set	0x88
  1023  0088                     	global	_TRISB
  1024                           _TRISB	set	0x86
  1025  0086                     	global	_SSPCON2bits
  1026                           _SSPCON2bits	set	0x91
  1027  0091                     	global	_TRISCbits
  1028                           _TRISCbits	set	0x87
  1029  0087                     	global	_SSPSTAT
  1030                           _SSPSTAT	set	0x94
  1031  0094                     	global	_SSPADD
  1032                           _SSPADD	set	0x93
  1033  0093                     	global	_SSPCON2
  1034                           _SSPCON2	set	0x91
  1035  0091                     	global	_SSPIE
  1036                           _SSPIE	set	0x463
  1037  0463                     	global	_TRISC4
  1038                           _TRISC4	set	0x43C
  1039  043C                     	global	_TRISC3
  1040                           _TRISC3	set	0x43B
  1041  043B                     	global	_ANSELHbits
  1042                           _ANSELHbits	set	0x189
  1043  0189                     	global	_ANSELbits
  1044                           _ANSELbits	set	0x188
  1045  0188                     	global	_ANSELH
  1046                           _ANSELH	set	0x189
  1047  0189                     	global	_ANSEL
  1048                           _ANSEL	set	0x188
  1049  0188                     	
  1050                           STR_23:	
  1051  101A                     	retlw	80	;'P'
  1052  101A  3450               	retlw	85	;'U'
  1053  101B  3455               	retlw	69	;'E'
  1054  101C  3445               	retlw	82	;'R'
  1055  101D  3452               	retlw	84	;'T'
  1056  101E  3454               	retlw	65	;'A'
  1057  101F  3441               	retlw	32	;' '
  1058  1020  3420               	retlw	67	;'C'
  1059  1021  3443               	retlw	69	;'E'
  1060  1022  3445               	retlw	82	;'R'
  1061  1023  3452               	retlw	82	;'R'
  1062  1024  3452               	retlw	65	;'A'
  1063  1025  3441               	retlw	68	;'D'
  1064  1026  3444               	retlw	65	;'A'
  1065  1027  3441               	retlw	0
  1066  1028  3400               psect	strings
  1067                           	
  1068                           STR_22:	
  1069  1029                     	retlw	80	;'P'
  1070  1029  3450               	retlw	85	;'U'
  1071  102A  3455               	retlw	69	;'E'
  1072  102B  3445               	retlw	82	;'R'
  1073  102C  3452               	retlw	84	;'T'
  1074  102D  3454               	retlw	65	;'A'
  1075  102E  3441               	retlw	32	;' '
  1076  102F  3420               	retlw	65	;'A'
  1077  1030  3441               	retlw	66	;'B'
  1078  1031  3442               	retlw	73	;'I'
  1079  1032  3449               	retlw	69	;'E'
  1080  1033  3445               	retlw	82	;'R'
  1081  1034  3452               	retlw	84	;'T'
  1082  1035  3454               	retlw	65	;'A'
  1083  1036  3441               	retlw	0
  1084  1037  3400               psect	strings
  1085                           	
  1086                           STR_12:	
  1087  1038                     	retlw	71	;'G'
  1088  1038  3447               	retlw	65	;'A'
  1089  1039  3441               	retlw	82	;'R'
  1090  103A  3452               	retlw	65	;'A'
  1091  103B  3441               	retlw	71	;'G'
  1092  103C  3447               	retlw	69	;'E'
  1093  103D  3445               	retlw	32	;' '
  1094  103E  3420               	retlw	67	;'C'
  1095  103F  3443               	retlw	69	;'E'
  1096  1040  3445               	retlw	82	;'R'
  1097  1041  3452               	retlw	82	;'R'
  1098  1042  3452               	retlw	65	;'A'
  1099  1043  3441               	retlw	68	;'D'
  1100  1044  3444               	retlw	79	;'O'
  1101  1045  344F               	retlw	0
  1102  1046  3400               psect	strings
  1103                           	
  1104                           STR_10:	
  1105  1047                     	retlw	83	;'S'
  1106  1047  3453               	retlw	73	;'I'
  1107  1048  3449               	retlw	78	;'N'
  1108  1049  344E               	retlw	32	;' '
  1109  104A  3420               	retlw	77	;'M'
  1110  104B  344D               	retlw	79	;'O'
  1111  104C  344F               	retlw	86	;'V'
  1112  104D  3456               	retlw	73	;'I'
  1113  104E  3449               	retlw	77	;'M'
  1114  104F  344D               	retlw	73	;'I'
  1115  1050  3449               	retlw	69	;'E'
  1116  1051  3445               	retlw	78	;'N'
  1117  1052  344E               	retlw	84	;'T'
  1118  1053  3454               	retlw	79	;'O'
  1119  1054  344F               	retlw	0
  1120  1055  3400               psect	strings
  1121                           	
  1122                           STR_11:	
  1123  1056                     	retlw	71	;'G'
  1124  1056  3447               	retlw	65	;'A'
  1125  1057  3441               	retlw	82	;'R'
  1126  1058  3452               	retlw	65	;'A'
  1127  1059  3441               	retlw	71	;'G'
  1128  105A  3447               	retlw	69	;'E'
  1129  105B  3445               	retlw	32	;' '
  1130  105C  3420               	retlw	65	;'A'
  1131  105D  3441               	retlw	66	;'B'
  1132  105E  3442               	retlw	73	;'I'
  1133  105F  3449               	retlw	69	;'E'
  1134  1060  3445               	retlw	82	;'R'
  1135  1061  3452               	retlw	84	;'T'
  1136  1062  3454               	retlw	79	;'O'
  1137  1063  344F               	retlw	0
  1138  1064  3400               psect	strings
  1139                           	
  1140                           STR_5:	
  1141  1065                     	retlw	32	;' '
  1142  1065  3420               	retlw	32	;' '
  1143  1066  3420               	retlw	32	;' '
  1144  1067  3420               	retlw	32	;' '
  1145  1068  3420               	retlw	32	;' '
  1146  1069  3420               	retlw	32	;' '
  1147  106A  3420               	retlw	32	;' '
  1148  106B  3420               	retlw	32	;' '
  1149  106C  3420               	retlw	32	;' '
  1150  106D  3420               	retlw	32	;' '
  1151  106E  3420               	retlw	32	;' '
  1152  106F  3420               	retlw	0
  1153  1070  3400               psect	strings
  1154                           	
  1155                           STR_21:	
  1156  1071                     	retlw	68	;'D'
  1157  1071  3444               	retlw	69	;'E'
  1158  1072  3445               	retlw	83	;'S'
  1159  1073  3453               	retlw	67	;'C'
  1160  1074  3443               	retlw	65	;'A'
  1161  1075  3441               	retlw	84	;'T'
  1162  1076  3454               	retlw	73	;'I'
  1163  1077  3449               	retlw	86	;'V'
  1164  1078  3456               	retlw	65	;'A'
  1165  1079  3441               	retlw	68	;'D'
  1166  107A  3444               	retlw	65	;'A'
  1167  107B  3441               	retlw	0
  1168  107C  3400               psect	strings
  1169                           	
  1170                           STR_19:	
  1171  107D                     	retlw	65	;'A'
  1172  107D  3441               	retlw	76	;'L'
  1173  107E  344C               	retlw	65	;'A'
  1174  107F  3441               	retlw	82	;'R'
  1175  1080  3452               	retlw	77	;'M'
  1176  1081  344D               	retlw	65	;'A'
  1177  1082  3441               	retlw	32	;' '
  1178  1083  3420               	retlw	0
  1179  1084  3400               psect	strings
  1180                           	
  1181                           STR_6:	
  1182  1085                     	retlw	80	;'P'
  1183  1085  3450               	retlw	85	;'U'
  1184  1086  3455               	retlw	69	;'E'
  1185  1087  3445               	retlw	82	;'R'
  1186  1088  3452               	retlw	84	;'T'
  1187  1089  3454               	retlw	65	;'A'
  1188  108A  3441               	retlw	32	;' '
  1189  108B  3420               	retlw	0
  1190  108C  3400               psect	strings
  1191                           	
  1192                           STR_20:	
  1193  108D                     	retlw	65	;'A'
  1194  108D  3441               	retlw	67	;'C'
  1195  108E  3443               	retlw	84	;'T'
  1196  108F  3454               	retlw	73	;'I'
  1197  1090  3449               	retlw	86	;'V'
  1198  1091  3456               	retlw	65	;'A'
  1199  1092  3441               	retlw	0
  1200  1093  3400               psect	strings
  1201                           	
  1202                           STR_3:	
  1203  1094                     	retlw	84	;'T'
  1204  1094  3454               	retlw	69	;'E'
  1205  1095  3445               	retlw	77	;'M'
  1206  1096  344D               	retlw	80	;'P'
  1207  1097  3450               	retlw	32	;' '
  1208  1098  3420               	retlw	0
  1209  1099  3400               psect	strings
  1210                           	
  1211                           STR_4:	
  1212  109A                     	retlw	76	;'L'
  1213  109A  344C               	retlw	85	;'U'
  1214  109B  3455               	retlw	90	;'Z'
  1215  109C  345A               	retlw	32	;' '
  1216  109D  3420               	retlw	0
  1217  109E  3400               psect	strings
  1218                           	
  1219                           STR_1:	
  1220  109F                     	retlw	37	;'%'
  1221  109F  3425               	retlw	100	;'d'
  1222  10A0  3464               	retlw	0
  1223  10A1  3400               psect	strings
  1224                           STR_2	equ	STR_1+0
  1225  109F                     STR_24	equ	STR_11+0
  1226  1056                     STR_18	equ	STR_10+0
  1227  1047                     STR_9	equ	STR_10+4
  1228  104B                     STR_17	equ	STR_10+4
  1229  104B                     STR_25	equ	STR_12+0
  1230  1038                     STR_7	equ	STR_22+7
  1231  1030                     STR_15	equ	STR_22+7
  1232  1030                     STR_8	equ	STR_23+7
  1233  1021                     STR_16	equ	STR_23+7
  1234  1021                     STR_14	equ	STR_6+0
  1235  1085                     STR_13	equ	STR_5+0
  1236  1065                     ; #config settings
  1237                           global __CFG_FOSC$INTRC_NOCLKOUT
  1238                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1239  0000                     global __CFG_WDTE$OFF
  1240                           __CFG_WDTE$OFF equ 0x0
  1241  0000                     global __CFG_PWRTE$OFF
  1242                           __CFG_PWRTE$OFF equ 0x0
  1243  0000                     global __CFG_MCLRE$OFF
  1244                           __CFG_MCLRE$OFF equ 0x0
  1245  0000                     global __CFG_CP$OFF
  1246                           __CFG_CP$OFF equ 0x0
  1247  0000                     global __CFG_CPD$OFF
  1248                           __CFG_CPD$OFF equ 0x0
  1249  0000                     global __CFG_BOREN$OFF
  1250                           __CFG_BOREN$OFF equ 0x0
  1251  0000                     global __CFG_IESO$OFF
  1252                           __CFG_IESO$OFF equ 0x0
  1253  0000                     global __CFG_FCMEN$OFF
  1254                           __CFG_FCMEN$OFF equ 0x0
  1255  0000                     global __CFG_LVP$OFF
  1256                           __CFG_LVP$OFF equ 0x0
  1257  0000                     global __CFG_BOR4V$BOR40V
  1258                           __CFG_BOR4V$BOR40V equ 0x0
  1259  0000                     global __CFG_WRT$OFF
  1260                           __CFG_WRT$OFF equ 0x0
  1261  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\sbt0."
  1262                           	line	#
  1263                           psect cinit,class=CODE,delta=2
  1264                           global start_initialization
  1265                           start_initialization:
  1266  000F                     
  1267                           global __initialization
  1268                           __initialization:
  1269  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1270                           global __pbssCOMMON
  1271                           __pbssCOMMON:
  1272  0078                     _signal:
  1273  0078                            ds      1
  1274  0078                     
  1275                           _count2:
  1276  0079                            ds      1
  1277  0079                     
  1278                           _hall:
  1279  007A                            ds      1
  1280  007A                     
  1281                           psect	bssBANK0,class=BANK0,space=1,noexec
  1282                           global __pbssBANK0
  1283                           __pbssBANK0:
  1284  006D                     _screenCounter:
  1285  006D                            ds      1
  1286  006D                     
  1287                           _count:
  1288  006E                            ds      1
  1289  006E                     
  1290                           _entero1:
  1291  006F                            ds      1
  1292  006F                     
  1293                           psect	bssBANK1,class=BANK1,space=1,noexec
  1294                           global __pbssBANK1
  1295                           __pbssBANK1:
  1296  00A0                     _float2:
  1297  00A0                            ds      4
  1298  00A0                     
  1299                           _sensorF2:
  1300  00A4                            ds      4
  1301  00A4                     
  1302                           _float1:
  1303  00A8                            ds      4
  1304  00A8                     
  1305                           _sensorF1:
  1306  00AC                            ds      4
  1307  00AC                     
  1308                           _screenState:
  1309  00B0                            ds      1
  1310  00B0                     
  1311                           _antibounce2:
  1312  00B1                            ds      1
  1313  00B1                     
  1314                           _antibounce:
  1315  00B2                            ds      1
  1316  00B2                     
  1317                           _garage:
  1318  00B3                            ds      1
  1319  00B3                     
  1320                           _ir:
  1321  00B4                            ds      1
  1322  00B4                     
  1323                           _count3:
  1324  00B5                            ds      1
  1325  00B5                     
  1326                           _toggle3:
  1327  00B6                            ds      1
  1328  00B6                     
  1329                           _mov:
  1330  00B7                            ds      1
  1331  00B7                     
  1332                           _adcP:
  1333  00B8                            ds      1
  1334  00B8                     
  1335                           _toggle2:
  1336  00B9                            ds      1
  1337  00B9                     
  1338                           _s3:
  1339  00BA                            ds      1
  1340  00BA                     
  1341                           _toggle:
  1342  00BB                            ds      1
  1343  00BB                     
  1344                           _dec2:
  1345  00BC                            ds      1
  1346  00BC                     
  1347                           _entero2:
  1348  00BD                            ds      1
  1349  00BD                     
  1350                           _alarm:
  1351  00BE                            ds      1
  1352  00BE                     
  1353                           _dec1:
  1354  00BF                            ds      1
  1355  00BF                     
  1356                           _adc:
  1357  00C0                            ds      1
  1358  00C0                     
  1359                           _adcT:
  1360  00C1                            ds      1
  1361  00C1                     
  1362                           _adcValue:
  1363  00C2                            ds      1
  1364  00C2                     
  1365                           _cursor:
  1366  00C3                            ds      1
  1367  00C3                     
  1368                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\sbt0."
  1369                           	line	#
  1370                           psect clrtext,class=CODE,delta=2
  1371                           global clear_ram0
  1372                           ;	Called with FSR containing the base address, and
  1373                           ;	W with the last address+1
  1374                           clear_ram0:
  1375  137B                     	clrwdt			;clear the watchdog before getting into this loop
  1376  137B  0064               clrloop0:
  1377  137C                     	clrf	indf		;clear RAM location pointed to by FSR
  1378  137C  0180               	incf	fsr,f		;increment pointer
  1379  137D  0A84               	xorwf	fsr,w		;XOR with final address
  1380  137E  0604               	btfsc	status,2	;have we reached the end yet?
  1381  137F  1903               	retlw	0		;all done for this memory range, return
  1382  1380  3400               	xorwf	fsr,w		;XOR again to restore value
  1383  1381  0604               	goto	clrloop0		;do the next byte
  1384  1382  2B7C               
  1385                           ; Clear objects allocated to COMMON
  1386                           psect cinit,class=CODE,delta=2,merge=1
  1387                           	clrf	((__pbssCOMMON)+0)&07Fh
  1388  000F  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
  1389  0010  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
  1390  0011  01FA               ; Clear objects allocated to BANK0
  1391                           psect cinit,class=CODE,delta=2,merge=1
  1392                           	bcf	status, 5	;RP0=0, select bank0
  1393  0012  1283               	bcf	status, 6	;RP1=0, select bank0
  1394  0013  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1395  0014  01ED               	clrf	((__pbssBANK0)+1)&07Fh
  1396  0015  01EE               	clrf	((__pbssBANK0)+2)&07Fh
  1397  0016  01EF               ; Clear objects allocated to BANK1
  1398                           psect cinit,class=CODE,delta=2,merge=1
  1399                           	bcf	status, 7	;select IRP bank0
  1400  0017  1383               	movlw	low(__pbssBANK1)
  1401  0018  30A0               	movwf	fsr
  1402  0019  0084               	movlw	low((__pbssBANK1)+024h)
  1403  001A  30C4               	fcall	clear_ram0
  1404  001B  160A  118A  237B  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1405                           global end_of_initialization,__end_of__initialization
  1406                           
  1407                           ;End of C runtime variable initialization code
  1408                           
  1409                           end_of_initialization:
  1410  0020                     __end_of__initialization:
  1411  0020                     clrf status
  1412  0020  0183               ljmp _main	;jump to C main() function
  1413  0021  120A  118A  2824   psect	cstackBANK1,class=BANK1,space=1,noexec
  1414                           global __pcstackBANK1
  1415                           __pcstackBANK1:
  1416  00C4                     	global	___fldiv@rem
  1417                           ___fldiv@rem:	; 4 bytes @ 0x0
  1418  00C4                     	ds	4
  1419  00C4                     	global	___fldiv@sign
  1420                           ___fldiv@sign:	; 1 bytes @ 0x4
  1421  00C8                     	ds	1
  1422  00C8                     	global	___fldiv@new_exp
  1423                           ___fldiv@new_exp:	; 2 bytes @ 0x5
  1424  00C9                     	ds	2
  1425  00C9                     	global	___fldiv@grs
  1426                           ___fldiv@grs:	; 4 bytes @ 0x7
  1427  00CB                     	ds	4
  1428  00CB                     	global	___fldiv@bexp
  1429                           ___fldiv@bexp:	; 1 bytes @ 0xB
  1430  00CF                     	ds	1
  1431  00CF                     	global	___fldiv@aexp
  1432                           ___fldiv@aexp:	; 1 bytes @ 0xC
  1433  00D0                     	ds	1
  1434  00D0                     ??_main:	; 1 bytes @ 0xD
  1435  00D1                     	ds	4
  1436  00D1                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1437                           global __pcstackCOMMON
  1438                           __pcstackCOMMON:
  1439  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1440  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1441  0070                     ?_readADC:	; 1 bytes @ 0x0
  1442  0070                     ??_readADC:	; 1 bytes @ 0x0
  1443  0070                     ?_setup:	; 1 bytes @ 0x0
  1444  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1445  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1446  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1447  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1448  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1449  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1450  0070                     ?_isr:	; 1 bytes @ 0x0
  1451  0070                     ??_isr:	; 1 bytes @ 0x0
  1452  0070                     ?_main:	; 1 bytes @ 0x0
  1453  0070                     	ds	3
  1454  0070                     ??_cmdLCD:	; 1 bytes @ 0x3
  1455  0073                     ??_writeCharLCD:	; 1 bytes @ 0x3
  1456  0073                     ??_I2C_Master_Wait:	; 1 bytes @ 0x3
  1457  0073                     ??_I2C_Master_Start:	; 1 bytes @ 0x3
  1458  0073                     ??_I2C_Master_Stop:	; 1 bytes @ 0x3
  1459  0073                     ?_I2C_Master_Write:	; 1 bytes @ 0x3
  1460  0073                     ??___lldiv:	; 1 bytes @ 0x3
  1461  0073                     	global	?__Umul8_16
  1462                           ?__Umul8_16:	; 2 bytes @ 0x3
  1463  0073                     	global	?_I2C_Master_Read
  1464                           ?_I2C_Master_Read:	; 2 bytes @ 0x3
  1465  0073                     	global	?___wmul
  1466                           ?___wmul:	; 2 bytes @ 0x3
  1467  0073                     	global	?___awmod
  1468                           ?___awmod:	; 2 bytes @ 0x3
  1469  0073                     	global	?___lwdiv
  1470                           ?___lwdiv:	; 2 bytes @ 0x3
  1471  0073                     	global	?___fltol
  1472                           ?___fltol:	; 4 bytes @ 0x3
  1473  0073                     	global	?___xxtofl
  1474                           ?___xxtofl:	; 4 bytes @ 0x3
  1475  0073                     	global	__Umul8_16@multiplicand
  1476                           __Umul8_16@multiplicand:	; 1 bytes @ 0x3
  1477  0073                     	global	I2C_Master_Write@d
  1478                           I2C_Master_Write@d:	; 2 bytes @ 0x3
  1479  0073                     	global	I2C_Master_Read@a
  1480                           I2C_Master_Read@a:	; 2 bytes @ 0x3
  1481  0073                     	global	___wmul@multiplier
  1482                           ___wmul@multiplier:	; 2 bytes @ 0x3
  1483  0073                     	global	___awmod@divisor
  1484                           ___awmod@divisor:	; 2 bytes @ 0x3
  1485  0073                     	global	___lwdiv@divisor
  1486                           ___lwdiv@divisor:	; 2 bytes @ 0x3
  1487  0073                     	global	___fltol@f1
  1488                           ___fltol@f1:	; 4 bytes @ 0x3
  1489  0073                     	global	___xxtofl@val
  1490                           ___xxtofl@val:	; 4 bytes @ 0x3
  1491  0073                     	ds	1
  1492  0073                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1493  0074                     	global	writeCharLCD@character
  1494                           writeCharLCD@character:	; 1 bytes @ 0x4
  1495  0074                     	ds	1
  1496  0074                     ??__Umul8_16:	; 1 bytes @ 0x5
  1497  0075                     ??_I2C_Master_Write:	; 1 bytes @ 0x5
  1498  0075                     ??_I2C_Master_Read:	; 1 bytes @ 0x5
  1499  0075                     ?_writeStrLCD:	; 1 bytes @ 0x5
  1500  0075                     	global	cmdLCD@cmd
  1501                           cmdLCD@cmd:	; 1 bytes @ 0x5
  1502  0075                     	global	writeStrLCD@string
  1503                           writeStrLCD@string:	; 2 bytes @ 0x5
  1504  0075                     	global	___wmul@multiplicand
  1505                           ___wmul@multiplicand:	; 2 bytes @ 0x5
  1506  0075                     	global	___awmod@dividend
  1507                           ___awmod@dividend:	; 2 bytes @ 0x5
  1508  0075                     	global	___lwdiv@dividend
  1509                           ___lwdiv@dividend:	; 2 bytes @ 0x5
  1510  0075                     	ds	1
  1511  0075                     ?_setCursorLCD:	; 1 bytes @ 0x6
  1512  0076                     ??_clcLCD:	; 1 bytes @ 0x6
  1513  0076                     ??_initLCD:	; 1 bytes @ 0x6
  1514  0076                     	global	setCursorLCD@x
  1515                           setCursorLCD@x:	; 1 bytes @ 0x6
  1516  0076                     	ds	1
  1517  0076                     ??_setCursorLCD:	; 1 bytes @ 0x7
  1518  0077                     ??___wmul:	; 1 bytes @ 0x7
  1519  0077                     ??___awdiv:	; 1 bytes @ 0x7
  1520  0077                     ??___awmod:	; 1 bytes @ 0x7
  1521  0077                     ??___flneg:	; 1 bytes @ 0x7
  1522  0077                     ??___lwdiv:	; 1 bytes @ 0x7
  1523  0077                     	ds	1
  1524  0077                     ??_setup:	; 1 bytes @ 0x8
  1525  0078                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1526                           global __pcstackBANK0
  1527                           __pcstackBANK0:
  1528  0020                     ??_writeStrLCD:	; 1 bytes @ 0x0
  1529  0020                     ??___fltol:	; 1 bytes @ 0x0
  1530  0020                     ??___xxtofl:	; 1 bytes @ 0x0
  1531  0020                     	global	?___lldiv
  1532                           ?___lldiv:	; 4 bytes @ 0x0
  1533  0020                     	global	setCursorLCD@y
  1534                           setCursorLCD@y:	; 1 bytes @ 0x0
  1535  0020                     	global	___awmod@counter
  1536                           ___awmod@counter:	; 1 bytes @ 0x0
  1537  0020                     	global	___lwdiv@counter
  1538                           ___lwdiv@counter:	; 1 bytes @ 0x0
  1539  0020                     	global	I2C_Master_Read@temp
  1540                           I2C_Master_Read@temp:	; 2 bytes @ 0x0
  1541  0020                     	global	___wmul@product
  1542                           ___wmul@product:	; 2 bytes @ 0x0
  1543  0020                     	global	__Umul8_16@product
  1544                           __Umul8_16@product:	; 2 bytes @ 0x0
  1545  0020                     	global	___lldiv@divisor
  1546                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1547  0020                     	ds	1
  1548  0020                     	global	___awmod@sign
  1549                           ___awmod@sign:	; 1 bytes @ 0x1
  1550  0021                     	global	___lwdiv@quotient
  1551                           ___lwdiv@quotient:	; 2 bytes @ 0x1
  1552  0021                     	ds	1
  1553  0021                     	global	?___awdiv
  1554                           ?___awdiv:	; 2 bytes @ 0x2
  1555  0022                     	global	___awdiv@divisor
  1556                           ___awdiv@divisor:	; 2 bytes @ 0x2
  1557  0022                     	global	__Umul8_16@word_mpld
  1558                           __Umul8_16@word_mpld:	; 2 bytes @ 0x2
  1559  0022                     	ds	1
  1560  0022                     	global	?___lwmod
  1561                           ?___lwmod:	; 2 bytes @ 0x3
  1562  0023                     	global	writeStrLCD@cont
  1563                           writeStrLCD@cont:	; 2 bytes @ 0x3
  1564  0023                     	global	___lwmod@divisor
  1565                           ___lwmod@divisor:	; 2 bytes @ 0x3
  1566  0023                     	ds	1
  1567  0023                     	global	___xxtofl@sign
  1568                           ___xxtofl@sign:	; 1 bytes @ 0x4
  1569  0024                     	global	__Umul8_16@multiplier
  1570                           __Umul8_16@multiplier:	; 1 bytes @ 0x4
  1571  0024                     	global	___awdiv@dividend
  1572                           ___awdiv@dividend:	; 2 bytes @ 0x4
  1573  0024                     	global	___lldiv@dividend
  1574                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1575  0024                     	ds	1
  1576  0024                     	global	___fltol@sign1
  1577                           ___fltol@sign1:	; 1 bytes @ 0x5
  1578  0025                     	global	___xxtofl@exp
  1579                           ___xxtofl@exp:	; 1 bytes @ 0x5
  1580  0025                     	global	___lwmod@dividend
  1581                           ___lwmod@dividend:	; 2 bytes @ 0x5
  1582  0025                     	ds	1
  1583  0025                     	global	___awdiv@counter
  1584                           ___awdiv@counter:	; 1 bytes @ 0x6
  1585  0026                     	global	___fltol@exp1
  1586                           ___fltol@exp1:	; 1 bytes @ 0x6
  1587  0026                     	global	___xxtofl@arg
  1588                           ___xxtofl@arg:	; 4 bytes @ 0x6
  1589  0026                     	ds	1
  1590  0026                     ??___lwmod:	; 1 bytes @ 0x7
  1591  0027                     	global	___awdiv@sign
  1592                           ___awdiv@sign:	; 1 bytes @ 0x7
  1593  0027                     	ds	1
  1594  0027                     	global	___lwmod@counter
  1595                           ___lwmod@counter:	; 1 bytes @ 0x8
  1596  0028                     	global	___awdiv@quotient
  1597                           ___awdiv@quotient:	; 2 bytes @ 0x8
  1598  0028                     	global	___lldiv@quotient
  1599                           ___lldiv@quotient:	; 4 bytes @ 0x8
  1600  0028                     	ds	1
  1601  0028                     	global	?_sprintf
  1602                           ?_sprintf:	; 2 bytes @ 0x9
  1603  0029                     	global	sprintf@f
  1604                           sprintf@f:	; 1 bytes @ 0x9
  1605  0029                     	ds	1
  1606  0029                     	global	?___flneg
  1607                           ?___flneg:	; 4 bytes @ 0xA
  1608  002A                     	global	___flneg@f1
  1609                           ___flneg@f1:	; 4 bytes @ 0xA
  1610  002A                     	ds	2
  1611  002A                     ??_sprintf:	; 1 bytes @ 0xC
  1612  002C                     	global	___lldiv@counter
  1613                           ___lldiv@counter:	; 1 bytes @ 0xC
  1614  002C                     	ds	1
  1615  002C                     ?_I2C_Master_Init:	; 1 bytes @ 0xD
  1616  002D                     	global	I2C_Master_Init@c
  1617                           I2C_Master_Init@c:	; 4 bytes @ 0xD
  1618  002D                     	ds	1
  1619  002D                     	global	?___fladd
  1620                           ?___fladd:	; 4 bytes @ 0xE
  1621  002E                     	global	___fladd@b
  1622                           ___fladd@b:	; 4 bytes @ 0xE
  1623  002E                     	ds	1
  1624  002E                     	global	sprintf@ap
  1625                           sprintf@ap:	; 1 bytes @ 0xF
  1626  002F                     	ds	1
  1627  002F                     	global	sprintf@flag
  1628                           sprintf@flag:	; 1 bytes @ 0x10
  1629  0030                     	ds	1
  1630  0030                     	global	sprintf@prec
  1631                           sprintf@prec:	; 1 bytes @ 0x11
  1632  0031                     	ds	1
  1633  0031                     	global	sprintf@val
  1634                           sprintf@val:	; 2 bytes @ 0x12
  1635  0032                     	global	___fladd@a
  1636                           ___fladd@a:	; 4 bytes @ 0x12
  1637  0032                     	ds	2
  1638  0032                     	global	sprintf@sp
  1639                           sprintf@sp:	; 1 bytes @ 0x14
  1640  0034                     	ds	1
  1641  0034                     	global	sprintf@c
  1642                           sprintf@c:	; 1 bytes @ 0x15
  1643  0035                     	ds	1
  1644  0035                     ??_writeIntLCD:	; 1 bytes @ 0x16
  1645  0036                     ??___fladd:	; 1 bytes @ 0x16
  1646  0036                     	ds	3
  1647  0036                     	global	writeIntLCD@buffer
  1648                           writeIntLCD@buffer:	; 4 bytes @ 0x19
  1649  0039                     	ds	4
  1650  0039                     	global	writeIntLCD@numero
  1651                           writeIntLCD@numero:	; 1 bytes @ 0x1D
  1652  003D                     	ds	5
  1653  003D                     	global	___fladd@signs
  1654                           ___fladd@signs:	; 1 bytes @ 0x22
  1655  0042                     	ds	1
  1656  0042                     	global	___fladd@aexp
  1657                           ___fladd@aexp:	; 1 bytes @ 0x23
  1658  0043                     	ds	1
  1659  0043                     	global	___fladd@bexp
  1660                           ___fladd@bexp:	; 1 bytes @ 0x24
  1661  0044                     	ds	1
  1662  0044                     	global	___fladd@grs
  1663                           ___fladd@grs:	; 1 bytes @ 0x25
  1664  0045                     	ds	1
  1665  0045                     	global	?___flmul
  1666                           ?___flmul:	; 4 bytes @ 0x26
  1667  0046                     	global	___flmul@b
  1668                           ___flmul@b:	; 4 bytes @ 0x26
  1669  0046                     	ds	4
  1670  0046                     	global	___flmul@a
  1671                           ___flmul@a:	; 4 bytes @ 0x2A
  1672  004A                     	ds	4
  1673  004A                     ??___flmul:	; 1 bytes @ 0x2E
  1674  004E                     	ds	5
  1675  004E                     	global	___flmul@sign
  1676                           ___flmul@sign:	; 1 bytes @ 0x33
  1677  0053                     	ds	1
  1678  0053                     	global	___flmul@grs
  1679                           ___flmul@grs:	; 4 bytes @ 0x34
  1680  0054                     	ds	4
  1681  0054                     	global	___flmul@aexp
  1682                           ___flmul@aexp:	; 1 bytes @ 0x38
  1683  0058                     	ds	1
  1684  0058                     	global	___flmul@bexp
  1685                           ___flmul@bexp:	; 1 bytes @ 0x39
  1686  0059                     	ds	1
  1687  0059                     	global	___flmul@prod
  1688                           ___flmul@prod:	; 4 bytes @ 0x3A
  1689  005A                     	ds	4
  1690  005A                     	global	___flmul@temp
  1691                           ___flmul@temp:	; 2 bytes @ 0x3E
  1692  005E                     	ds	2
  1693  005E                     	global	?___fldiv
  1694                           ?___fldiv:	; 4 bytes @ 0x40
  1695  0060                     	global	___fldiv@a
  1696                           ___fldiv@a:	; 4 bytes @ 0x40
  1697  0060                     	ds	4
  1698  0060                     	global	___fldiv@b
  1699                           ___fldiv@b:	; 4 bytes @ 0x44
  1700  0064                     	ds	4
  1701  0064                     ??___fldiv:	; 1 bytes @ 0x48
  1702  0068                     	ds	5
  1703  0068                     ;!
  1704                           ;!Data Sizes:
  1705                           ;!    Strings     136
  1706                           ;!    Constant    10
  1707                           ;!    Data        0
  1708                           ;!    BSS         42
  1709                           ;!    Persistent  0
  1710                           ;!    Stack       0
  1711                           ;!
  1712                           ;!Auto Spaces:
  1713                           ;!    Space          Size  Autos    Used
  1714                           ;!    COMMON           14      8      11
  1715                           ;!    BANK0            80     77      80
  1716                           ;!    BANK1            80     17      53
  1717                           ;!    BANK3            96      0       0
  1718                           ;!    BANK2            96      0       0
  1719                           
  1720                           ;!
  1721                           ;!Pointer List with Targets:
  1722                           ;!
  1723                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1724                           ;!		 -> STR_2(CODE[3]), STR_1(CODE[3]), 
  1725                           ;!
  1726                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
  1727                           ;!		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 
  1728                           ;!
  1729                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1730                           ;!		 -> ?_sprintf(BANK0[2]), 
  1731                           ;!
  1732                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 15
  1733                           ;!		 -> STR_25(CODE[15]), STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), 
  1734                           ;!		 -> STR_21(CODE[12]), STR_20(CODE[7]), STR_19(CODE[8]), STR_18(CODE[15]), 
  1735                           ;!		 -> STR_17(CODE[11]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
  1736                           ;!		 -> STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[15]), STR_10(CODE[15]), 
  1737                           ;!		 -> STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[8]), STR_6(CODE[8]), 
  1738                           ;!		 -> STR_5(CODE[12]), STR_4(CODE[5]), STR_3(CODE[6]), writeIntLCD16@buffer(COMMON[5])
                                 , 
  1739                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1740                           ;!
  1741                           
  1742                           
  1743                           ;!
  1744                           ;!Critical Paths under _main in COMMON
  1745                           ;!
  1746                           ;!    _main->___awdiv
  1747                           ;!    _main->___awmod
  1748                           ;!    _main->_setCursorLCD
  1749                           ;!    _writeStrLCD->_writeCharLCD
  1750                           ;!    _sprintf->___lwdiv
  1751                           ;!    ___lwmod->___lwdiv
  1752                           ;!    _setup->_I2C_Master_Init
  1753                           ;!    _setup->_initLCD
  1754                           ;!    _initLCD->_cmdLCD
  1755                           ;!    _clcLCD->_cmdLCD
  1756                           ;!    _I2C_Master_Init->___lldiv
  1757                           ;!    _setCursorLCD->_cmdLCD
  1758                           ;!    ___flneg->___xxtofl
  1759                           ;!    ___flmul->__Umul8_16
  1760                           ;!    ___flmul->___xxtofl
  1761                           ;!    ___fldiv->___xxtofl
  1762                           ;!    ___fladd->___xxtofl
  1763                           ;!    ___awdiv->___wmul
  1764                           ;!
  1765                           ;!Critical Paths under _isr in COMMON
  1766                           ;!
  1767                           ;!    None.
  1768                           ;!
  1769                           ;!Critical Paths under _main in BANK0
  1770                           ;!
  1771                           ;!    _main->___fldiv
  1772                           ;!    _writeIntLCD->_sprintf
  1773                           ;!    _sprintf->___lwmod
  1774                           ;!    ___lwmod->___lwdiv
  1775                           ;!    _setup->_I2C_Master_Init
  1776                           ;!    _I2C_Master_Init->___lldiv
  1777                           ;!    ___flneg->___xxtofl
  1778                           ;!    ___flmul->___fladd
  1779                           ;!    ___fldiv->___flmul
  1780                           ;!    ___fladd->___flneg
  1781                           ;!    ___awdiv->___wmul
  1782                           ;!
  1783                           ;!Critical Paths under _isr in BANK0
  1784                           ;!
  1785                           ;!    None.
  1786                           ;!
  1787                           ;!Critical Paths under _main in BANK1
  1788                           ;!
  1789                           ;!    _main->___fldiv
  1790                           ;!
  1791                           ;!Critical Paths under _isr in BANK1
  1792                           ;!
  1793                           ;!    None.
  1794                           ;!
  1795                           ;!Critical Paths under _main in BANK3
  1796                           ;!
  1797                           ;!    None.
  1798                           ;!
  1799                           ;!Critical Paths under _isr in BANK3
  1800                           ;!
  1801                           ;!    None.
  1802                           ;!
  1803                           ;!Critical Paths under _main in BANK2
  1804                           ;!
  1805                           ;!    None.
  1806                           ;!
  1807                           ;!Critical Paths under _isr in BANK2
  1808                           ;!
  1809                           ;!    None.
  1810                           
  1811 ;;
  1812 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1813 ;;
  1814                           
  1815                           ;!
  1816                           ;!Call Graph Tables:
  1817                           ;!
  1818                           ;! ---------------------------------------------------------------------------------
  1819                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1820                           ;! ---------------------------------------------------------------------------------
  1821                           ;! (0) _main                                                 4     4      0   18454
  1822                           ;!                                             13 BANK1      4     4      0
  1823                           ;!                    _I2C_Master_Read
  1824                           ;!                   _I2C_Master_Start
  1825                           ;!                    _I2C_Master_Stop
  1826                           ;!                   _I2C_Master_Write
  1827                           ;!                            ___awdiv
  1828                           ;!                            ___awmod
  1829                           ;!                            ___fladd
  1830                           ;!                            ___fldiv
  1831                           ;!                            ___flmul
  1832                           ;!                            ___flneg
  1833                           ;!                            ___fltol
  1834                           ;!                             ___wmul
  1835                           ;!                           ___xxtofl
  1836                           ;!                       _setCursorLCD
  1837                           ;!                              _setup
  1838                           ;!                       _writeCharLCD
  1839                           ;!                        _writeIntLCD
  1840                           ;!                        _writeStrLCD
  1841                           ;! ---------------------------------------------------------------------------------
  1842                           ;! (1) _writeIntLCD                                          8     8      0    4205
  1843                           ;!                                             22 BANK0      8     8      0
  1844                           ;!                            _sprintf
  1845                           ;!                        _writeStrLCD
  1846                           ;! ---------------------------------------------------------------------------------
  1847                           ;! (1) _writeStrLCD                                          7     5      2    2402
  1848                           ;!                                              5 COMMON     2     0      2
  1849                           ;!                                              0 BANK0      5     5      0
  1850                           ;!                       _writeCharLCD
  1851                           ;! ---------------------------------------------------------------------------------
  1852                           ;! (2) _writeCharLCD                                         2     2      0      22
  1853                           ;!                                              3 COMMON     2     2      0
  1854                           ;! ---------------------------------------------------------------------------------
  1855                           ;! (2) _sprintf                                             21    18      3    1680
  1856                           ;!                                              9 BANK0     13    10      3
  1857                           ;!                            ___lwdiv
  1858                           ;!                            ___lwmod
  1859                           ;! ---------------------------------------------------------------------------------
  1860                           ;! (3) ___lwmod                                              6     2      4     311
  1861                           ;!                                              3 BANK0      6     2      4
  1862                           ;!                            ___lwdiv (ARG)
  1863                           ;! ---------------------------------------------------------------------------------
  1864                           ;! (3) ___lwdiv                                              8     4      4     421
  1865                           ;!                                              3 COMMON     5     1      4
  1866                           ;!                                              0 BANK0      3     3      0
  1867                           ;! ---------------------------------------------------------------------------------
  1868                           ;! (1) _setup                                                0     0      0     604
  1869                           ;!                    _I2C_Master_Init
  1870                           ;!                             _clcLCD
  1871                           ;!                            _initLCD
  1872                           ;! ---------------------------------------------------------------------------------
  1873                           ;! (2) _initLCD                                              2     2      0      31
  1874                           ;!                                              6 COMMON     2     2      0
  1875                           ;!                             _cmdLCD
  1876                           ;! ---------------------------------------------------------------------------------
  1877                           ;! (2) _clcLCD                                               0     0      0      31
  1878                           ;!                             _cmdLCD
  1879                           ;! ---------------------------------------------------------------------------------
  1880                           ;! (2) _I2C_Master_Init                                      8     4      4     542
  1881                           ;!                                              4 COMMON     4     4      0
  1882                           ;!                                             13 BANK0      4     0      4
  1883                           ;!                            ___lldiv
  1884                           ;! ---------------------------------------------------------------------------------
  1885                           ;! (3) ___lldiv                                             14     6      8     421
  1886                           ;!                                              3 COMMON     1     1      0
  1887                           ;!                                              0 BANK0     13     5      8
  1888                           ;! ---------------------------------------------------------------------------------
  1889                           ;! (1) _setCursorLCD                                         3     2      1     844
  1890                           ;!                                              6 COMMON     2     1      1
  1891                           ;!                                              0 BANK0      1     1      0
  1892                           ;!                             _cmdLCD
  1893                           ;! ---------------------------------------------------------------------------------
  1894                           ;! (3) _cmdLCD                                               3     3      0      31
  1895                           ;!                                              3 COMMON     3     3      0
  1896                           ;! ---------------------------------------------------------------------------------
  1897                           ;! (1) ___xxtofl                                            14    10      4     656
  1898                           ;!                                              3 COMMON     4     0      4
  1899                           ;!                                              0 BANK0     10    10      0
  1900                           ;! ---------------------------------------------------------------------------------
  1901                           ;! (1) ___wmul                                               6     2      4     316
  1902                           ;!                                              3 COMMON     4     0      4
  1903                           ;!                                              0 BANK0      2     2      0
  1904                           ;! ---------------------------------------------------------------------------------
  1905                           ;! (1) ___fltol                                             11     7      4     517
  1906                           ;!                                              3 COMMON     4     0      4
  1907                           ;!                                              0 BANK0      7     7      0
  1908                           ;! ---------------------------------------------------------------------------------
  1909                           ;! (1) ___flneg                                              4     0      4     121
  1910                           ;!                                             10 BANK0      4     0      4
  1911                           ;!                           ___xxtofl (ARG)
  1912                           ;! ---------------------------------------------------------------------------------
  1913                           ;! (1) ___flmul                                             26    18      8    2569
  1914                           ;!                                             38 BANK0     26    18      8
  1915                           ;!                          __Umul8_16
  1916                           ;!                            ___fladd (ARG)
  1917                           ;!                            ___flneg (ARG)
  1918                           ;!                           ___xxtofl (ARG)
  1919                           ;! ---------------------------------------------------------------------------------
  1920                           ;! (2) __Umul8_16                                            9     7      2     799
  1921                           ;!                                              3 COMMON     4     2      2
  1922                           ;!                                              0 BANK0      5     5      0
  1923                           ;! ---------------------------------------------------------------------------------
  1924                           ;! (1) ___fldiv                                             26    18      8    1425
  1925                           ;!                                             64 BANK0     13     5      8
  1926                           ;!                                              0 BANK1     13    13      0
  1927                           ;!                            ___flmul (ARG)
  1928                           ;!                           ___xxtofl (ARG)
  1929                           ;! ---------------------------------------------------------------------------------
  1930                           ;! (1) ___fladd                                             24    16      8    2262
  1931                           ;!                                             14 BANK0     24    16      8
  1932                           ;!                            ___flneg (ARG)
  1933                           ;!                           ___xxtofl (ARG)
  1934                           ;! ---------------------------------------------------------------------------------
  1935                           ;! (1) ___awmod                                              7     3      4     973
  1936                           ;!                                              3 COMMON     5     1      4
  1937                           ;!                                              0 BANK0      2     2      0
  1938                           ;! ---------------------------------------------------------------------------------
  1939                           ;! (1) ___awdiv                                              9     5      4     452
  1940                           ;!                                              7 COMMON     1     1      0
  1941                           ;!                                              2 BANK0      8     4      4
  1942                           ;!                             ___wmul (ARG)
  1943                           ;! ---------------------------------------------------------------------------------
  1944                           ;! (1) _I2C_Master_Write                                     2     0      2     301
  1945                           ;!                                              3 COMMON     2     0      2
  1946                           ;!                    _I2C_Master_Wait
  1947                           ;! ---------------------------------------------------------------------------------
  1948                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  1949                           ;!                    _I2C_Master_Wait
  1950                           ;! ---------------------------------------------------------------------------------
  1951                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  1952                           ;!                    _I2C_Master_Wait
  1953                           ;! ---------------------------------------------------------------------------------
  1954                           ;! (1) _I2C_Master_Read                                      6     4      2     785
  1955                           ;!                                              3 COMMON     4     2      2
  1956                           ;!                                              0 BANK0      2     2      0
  1957                           ;!                    _I2C_Master_Wait
  1958                           ;! ---------------------------------------------------------------------------------
  1959                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  1960                           ;! ---------------------------------------------------------------------------------
  1961                           ;! Estimated maximum stack depth 3
  1962                           ;! ---------------------------------------------------------------------------------
  1963                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1964                           ;! ---------------------------------------------------------------------------------
  1965                           ;! (4) _isr                                                  3     3      0       0
  1966                           ;!                                              0 COMMON     3     3      0
  1967                           ;!                            _readADC
  1968                           ;! ---------------------------------------------------------------------------------
  1969                           ;! (5) _readADC                                              0     0      0       0
  1970                           ;! ---------------------------------------------------------------------------------
  1971                           ;! Estimated maximum stack depth 5
  1972                           ;! ---------------------------------------------------------------------------------
  1973                           ;!
  1974                           ;! Call Graph Graphs:
  1975                           ;!
  1976                           ;! _main (ROOT)
  1977                           ;!   _I2C_Master_Read
  1978                           ;!     _I2C_Master_Wait
  1979                           ;!   _I2C_Master_Start
  1980                           ;!     _I2C_Master_Wait
  1981                           ;!   _I2C_Master_Stop
  1982                           ;!     _I2C_Master_Wait
  1983                           ;!   _I2C_Master_Write
  1984                           ;!     _I2C_Master_Wait
  1985                           ;!   ___awdiv
  1986                           ;!     ___wmul (ARG)
  1987                           ;!   ___awmod
  1988                           ;!   ___fladd
  1989                           ;!     ___flneg (ARG)
  1990                           ;!       ___xxtofl (ARG)
  1991                           ;!     ___xxtofl (ARG)
  1992                           ;!   ___fldiv
  1993                           ;!     ___flmul (ARG)
  1994                           ;!       __Umul8_16
  1995                           ;!       ___fladd (ARG)
  1996                           ;!         ___flneg (ARG)
  1997                           ;!           ___xxtofl (ARG)
  1998                           ;!         ___xxtofl (ARG)
  1999                           ;!       ___flneg (ARG)
  2000                           ;!         ___xxtofl (ARG)
  2001                           ;!       ___xxtofl (ARG)
  2002                           ;!     ___xxtofl (ARG)
  2003                           ;!   ___flmul
  2004                           ;!     __Umul8_16
  2005                           ;!     ___fladd (ARG)
  2006                           ;!       ___flneg (ARG)
  2007                           ;!         ___xxtofl (ARG)
  2008                           ;!       ___xxtofl (ARG)
  2009                           ;!     ___flneg (ARG)
  2010                           ;!       ___xxtofl (ARG)
  2011                           ;!     ___xxtofl (ARG)
  2012                           ;!   ___flneg
  2013                           ;!     ___xxtofl (ARG)
  2014                           ;!   ___fltol
  2015                           ;!   ___wmul
  2016                           ;!   ___xxtofl
  2017                           ;!   _setCursorLCD
  2018                           ;!     _cmdLCD
  2019                           ;!   _setup
  2020                           ;!     _I2C_Master_Init
  2021                           ;!       ___lldiv
  2022                           ;!     _clcLCD
  2023                           ;!       _cmdLCD
  2024                           ;!     _initLCD
  2025                           ;!       _cmdLCD
  2026                           ;!   _writeCharLCD
  2027                           ;!   _writeIntLCD
  2028                           ;!     _sprintf
  2029                           ;!       ___lwdiv
  2030                           ;!       ___lwmod
  2031                           ;!         ___lwdiv (ARG)
  2032                           ;!     _writeStrLCD
  2033                           ;!       _writeCharLCD
  2034                           ;!   _writeStrLCD
  2035                           ;!     _writeCharLCD
  2036                           ;!
  2037                           ;! _isr (ROOT)
  2038                           ;!   _readADC
  2039                           ;!
  2040                           
  2041                           ;! Address spaces:
  2042                           
  2043                           ;!Name               Size   Autos  Total    Cost      Usage
  2044                           ;!BITCOMMON            E      0       0       0        0.0%
  2045                           ;!EEDATA             100      0       0       0        0.0%
  2046                           ;!NULL                 0      0       0       0        0.0%
  2047                           ;!CODE                 0      0       0       0        0.0%
  2048                           ;!COMMON               E      8       B       1       78.6%
  2049                           ;!BITSFR0              0      0       0       1        0.0%
  2050                           ;!SFR0                 0      0       0       1        0.0%
  2051                           ;!BITSFR1              0      0       0       2        0.0%
  2052                           ;!SFR1                 0      0       0       2        0.0%
  2053                           ;!STACK                0      0       0       2        0.0%
  2054                           ;!ABS                  0      0      90       3        0.0%
  2055                           ;!BITBANK0            50      0       0       4        0.0%
  2056                           ;!BITSFR3              0      0       0       4        0.0%
  2057                           ;!SFR3                 0      0       0       4        0.0%
  2058                           ;!BANK0               50     4D      50       5      100.0%
  2059                           ;!BITSFR2              0      0       0       5        0.0%
  2060                           ;!SFR2                 0      0       0       5        0.0%
  2061                           ;!BITBANK1            50      0       0       6        0.0%
  2062                           ;!BANK1               50     11      35       7       66.3%
  2063                           ;!BITBANK3            60      0       0       8        0.0%
  2064                           ;!BANK3               60      0       0       9        0.0%
  2065                           ;!BITBANK2            60      0       0      10        0.0%
  2066                           ;!BANK2               60      0       0      11        0.0%
  2067                           ;!DATA                 0      0      90      12        0.0%
  2068                           
  2069                           	global	_main
  2070                           
  2071 ;; *************** function _main *****************
  2072 ;; Defined at:
  2073 ;;		line 71 in file "mainM.c"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2082 ;; Tracked objects:
  2083 ;;		On entry : B00/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2087 ;;      Params:         0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0
  2089 ;;      Temps:          0       0       4       0       0
  2090 ;;      Totals:         0       0       4       0       0
  2091 ;;Total ram usage:        4 bytes
  2092 ;; Hardware stack levels required when called:    5
  2093 ;; This function calls:
  2094 ;;		_I2C_Master_Read
  2095 ;;		_I2C_Master_Start
  2096 ;;		_I2C_Master_Stop
  2097 ;;		_I2C_Master_Write
  2098 ;;		___awdiv
  2099 ;;		___awmod
  2100 ;;		___fladd
  2101 ;;		___fldiv
  2102 ;;		___flmul
  2103 ;;		___flneg
  2104 ;;		___fltol
  2105 ;;		___wmul
  2106 ;;		___xxtofl
  2107 ;;		_setCursorLCD
  2108 ;;		_setup
  2109 ;;		_writeCharLCD
  2110 ;;		_writeIntLCD
  2111 ;;		_writeStrLCD
  2112 ;; This function is called by:
  2113 ;;		Startup code after reset
  2114 ;; This function uses a non-reentrant model
  2115 ;;
  2116                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2117                           	file	"mainM.c"
  2118                           	line	71
  2119                           global __pmaintext
  2120                           __pmaintext:	;psect for function _main
  2121  0024                     psect	maintext
  2122                           	file	"mainM.c"
  2123                           	line	71
  2124                           	global	__size_of_main
  2125                           	__size_of_main	equ	__end_of_main-_main
  2126  04FA                     	
  2127                           _main:	
  2128  0024                     ;incstack = 0
  2129                           	opt	stack 3
  2130                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2131                           	line	72
  2132                           	
  2133                           l3768:	
  2134  0024                     ;mainM.c: 72:     setup();
  2135                           	fcall	_setup
  2136  0024  160A  118A  241B  120A  118A  	goto	l3770
  2137  0029  282A               	line	73
  2138                           ;mainM.c: 73:     while(1){
  2139                           	
  2140                           l225:	
  2141  002A                     	line	74
  2142                           	
  2143                           l3770:	
  2144  002A                     ;mainM.c: 74:         if(ADCON0bits.GO_DONE == 0){
  2145                           	bcf	status, 5	;RP0=0, select bank0
  2146  002A  1283               	bcf	status, 6	;RP1=0, select bank0
  2147  002B  1303               	btfsc	(31),1	;volatile
  2148  002C  189F               	goto	u5501
  2149  002D  282F               	goto	u5500
  2150  002E  2830               u5501:
  2151  002F                     	goto	l3774
  2152  002F  2832               u5500:
  2153  0030                     	line	75
  2154                           	
  2155                           l3772:	
  2156  0030                     ;mainM.c: 75:            ADCON0bits.GO_DONE = 1;
  2157                           	bsf	(31),1	;volatile
  2158  0030  149F               	goto	l3774
  2159  0031  2832               	line	76
  2160                           ;mainM.c: 76:         }
  2161                           	
  2162                           l226:	
  2163  0032                     	line	78
  2164                           	
  2165                           l3774:	
  2166  0032                     ;mainM.c: 78:         count = toggle%3;
  2167                           	movlw	03h
  2168  0032  3003               	movwf	(___awmod@divisor)
  2169  0033  00F3               	movlw	0
  2170  0034  3000               	movwf	((___awmod@divisor))+1
  2171  0035  00F4               	bsf	status, 5	;RP0=1, select bank1
  2172  0036  1683               	bcf	status, 6	;RP1=0, select bank1
  2173  0037  1303               	movf	(_toggle)^080h,w
  2174  0038  083B               	movwf	(??_main+0)^080h+0
  2175  0039  00D1               	clrf	(??_main+0)^080h+0+1
  2176  003A  01D2               	movf	0+(??_main+0)^080h+0,w
  2177  003B  0851               	movwf	(___awmod@dividend)
  2178  003C  00F5               	movf	1+(??_main+0)^080h+0,w
  2179  003D  0852               	movwf	(___awmod@dividend+1)
  2180  003E  00F6               	fcall	___awmod
  2181  003F  160A  118A  261D  120A  118A  	movf	(0+(?___awmod)),w
  2182  0044  0873               	bsf	status, 5	;RP0=1, select bank1
  2183  0045  1683               	bcf	status, 6	;RP1=0, select bank1
  2184  0046  1303               	movwf	(??_main+2)^080h+0
  2185  0047  00D3               	movf	(??_main+2)^080h+0,w
  2186  0048  0853               	bcf	status, 5	;RP0=0, select bank0
  2187  0049  1283               	bcf	status, 6	;RP1=0, select bank0
  2188  004A  1303               	movwf	(_count)
  2189  004B  00EE               	line	79
  2190                           ;mainM.c: 79:         I2C_Master_Start();
  2191                           	fcall	_I2C_Master_Start
  2192  004C  160A  118A  2383  120A  118A  	line	80
  2193                           ;mainM.c: 80:         I2C_Master_Write(0x69);
  2194                           	movlw	069h
  2195  0051  3069               	movwf	(I2C_Master_Write@d)
  2196  0052  00F3               	movlw	0
  2197  0053  3000               	movwf	((I2C_Master_Write@d))+1
  2198  0054  00F4               	fcall	_I2C_Master_Write
  2199  0055  160A  118A  238C  120A  118A  	line	81
  2200                           	
  2201                           l3776:	
  2202  005A                     ;mainM.c: 81:         if(count == 0){
  2203                           	bcf	status, 5	;RP0=0, select bank0
  2204  005A  1283               	bcf	status, 6	;RP1=0, select bank0
  2205  005B  1303               	movf	((_count)),w
  2206  005C  086E               	btfss	status,2
  2207  005D  1D03               	goto	u5511
  2208  005E  2860               	goto	u5510
  2209  005F  2861               u5511:
  2210  0060                     	goto	l3780
  2211  0060  2870               u5510:
  2212  0061                     	line	82
  2213                           	
  2214                           l3778:	
  2215  0061                     ;mainM.c: 82:             adcT = I2C_Master_Read(0);
  2216                           	movlw	0
  2217  0061  3000               	movwf	(I2C_Master_Read@a)
  2218  0062  00F3               	movwf	(I2C_Master_Read@a+1)
  2219  0063  00F4               	fcall	_I2C_Master_Read
  2220  0064  160A  118A  24A0  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2221  0069  0873               	bsf	status, 5	;RP0=1, select bank1
  2222  006A  1683               	bcf	status, 6	;RP1=0, select bank1
  2223  006B  1303               	movwf	(??_main+0)^080h+0
  2224  006C  00D1               	movf	(??_main+0)^080h+0,w
  2225  006D  0851               	movwf	(_adcT)^080h
  2226  006E  00C1               	line	83
  2227                           ;mainM.c: 83:         }else if(count == 1){
  2228                           	goto	l3788
  2229  006F  289D               	
  2230                           l227:	
  2231  0070                     	
  2232                           l3780:	
  2233  0070                     	bcf	status, 5	;RP0=0, select bank0
  2234  0070  1283               		decf	((_count)),w
  2235  0071  036E               	btfss	status,2
  2236  0072  1D03               	goto	u5521
  2237  0073  2875               	goto	u5520
  2238  0074  2876               u5521:
  2239  0075                     	goto	l3784
  2240  0075  2885               u5520:
  2241  0076                     	line	84
  2242                           	
  2243                           l3782:	
  2244  0076                     ;mainM.c: 84:             alarm = I2C_Master_Read(0);
  2245                           	movlw	0
  2246  0076  3000               	movwf	(I2C_Master_Read@a)
  2247  0077  00F3               	movwf	(I2C_Master_Read@a+1)
  2248  0078  00F4               	fcall	_I2C_Master_Read
  2249  0079  160A  118A  24A0  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2250  007E  0873               	bsf	status, 5	;RP0=1, select bank1
  2251  007F  1683               	bcf	status, 6	;RP1=0, select bank1
  2252  0080  1303               	movwf	(??_main+0)^080h+0
  2253  0081  00D1               	movf	(??_main+0)^080h+0,w
  2254  0082  0851               	movwf	(_alarm)^080h
  2255  0083  00BE               	line	85
  2256                           ;mainM.c: 85:         }else if(count == 2){
  2257                           	goto	l3788
  2258  0084  289D               	
  2259                           l229:	
  2260  0085                     	
  2261                           l3784:	
  2262  0085                     		movlw	2
  2263  0085  3002               	bcf	status, 5	;RP0=0, select bank0
  2264  0086  1283               	xorwf	((_count)),w
  2265  0087  066E               	btfss	status,2
  2266  0088  1D03               	goto	u5531
  2267  0089  288B               	goto	u5530
  2268  008A  288C               u5531:
  2269  008B                     	goto	l3788
  2270  008B  289D               u5530:
  2271  008C                     	line	86
  2272                           	
  2273                           l3786:	
  2274  008C                     ;mainM.c: 86:             hall = I2C_Master_Read(0);
  2275                           	movlw	0
  2276  008C  3000               	movwf	(I2C_Master_Read@a)
  2277  008D  00F3               	movwf	(I2C_Master_Read@a+1)
  2278  008E  00F4               	fcall	_I2C_Master_Read
  2279  008F  160A  118A  24A0  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2280  0094  0873               	bsf	status, 5	;RP0=1, select bank1
  2281  0095  1683               	bcf	status, 6	;RP1=0, select bank1
  2282  0096  1303               	movwf	(??_main+0)^080h+0
  2283  0097  00D1               	movf	(??_main+0)^080h+0,w
  2284  0098  0851               	movwf	(_hall)
  2285  0099  00FA               	goto	l3788
  2286  009A  289D               	line	87
  2287                           ;mainM.c: 87:         }
  2288                           	
  2289                           l231:	
  2290  009B                     	goto	l3788
  2291  009B  289D               	
  2292                           l230:	
  2293  009C                     	goto	l3788
  2294  009C  289D               	
  2295                           l228:	
  2296  009D                     	line	88
  2297                           	
  2298                           l3788:	
  2299  009D                     ;mainM.c: 88:         toggle++;
  2300                           	movlw	low(01h)
  2301  009D  3001               	bsf	status, 5	;RP0=1, select bank1
  2302  009E  1683               	bcf	status, 6	;RP1=0, select bank1
  2303  009F  1303               	movwf	(??_main+0)^080h+0
  2304  00A0  00D1               	movf	(??_main+0)^080h+0,w
  2305  00A1  0851               	addwf	(_toggle)^080h,f
  2306  00A2  07BB               	line	89
  2307                           	
  2308                           l3790:	
  2309  00A3                     ;mainM.c: 89:         I2C_Master_Stop();
  2310                           	fcall	_I2C_Master_Stop
  2311  00A3  120A  158A  2000  120A  118A  	line	90
  2312                           	
  2313                           l3792:	
  2314  00A8                     ;mainM.c: 90:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2315                           	opt asmopt_push
  2316                           opt asmopt_off
  2317                           movlw	13
  2318  00A8  300D               	bsf	status, 5	;RP0=1, select bank1
  2319  00A9  1683               	bcf	status, 6	;RP1=0, select bank1
  2320  00AA  1303               movwf	((??_main+0)^080h+0+1),f
  2321  00AB  00D2               	movlw	251
  2322  00AC  30FB               movwf	((??_main+0)^080h+0),f
  2323  00AD  00D1               	u5867:
  2324  00AE                     decfsz	((??_main+0)^080h+0),f
  2325  00AE  0BD1               	goto	u5867
  2326  00AF  28AE               	decfsz	((??_main+0)^080h+0+1),f
  2327  00B0  0BD2               	goto	u5867
  2328  00B1  28AE               opt asmopt_pop
  2329                           
  2330                           	line	93
  2331                           	
  2332                           l3794:	
  2333  00B2                     ;mainM.c: 93:         count2 = toggle2%3;
  2334                           	movlw	03h
  2335  00B2  3003               	movwf	(___awmod@divisor)
  2336  00B3  00F3               	movlw	0
  2337  00B4  3000               	movwf	((___awmod@divisor))+1
  2338  00B5  00F4               	bsf	status, 5	;RP0=1, select bank1
  2339  00B6  1683               	bcf	status, 6	;RP1=0, select bank1
  2340  00B7  1303               	movf	(_toggle2)^080h,w
  2341  00B8  0839               	movwf	(??_main+0)^080h+0
  2342  00B9  00D1               	clrf	(??_main+0)^080h+0+1
  2343  00BA  01D2               	movf	0+(??_main+0)^080h+0,w
  2344  00BB  0851               	movwf	(___awmod@dividend)
  2345  00BC  00F5               	movf	1+(??_main+0)^080h+0,w
  2346  00BD  0852               	movwf	(___awmod@dividend+1)
  2347  00BE  00F6               	fcall	___awmod
  2348  00BF  160A  118A  261D  120A  118A  	movf	(0+(?___awmod)),w
  2349  00C4  0873               	bsf	status, 5	;RP0=1, select bank1
  2350  00C5  1683               	bcf	status, 6	;RP1=0, select bank1
  2351  00C6  1303               	movwf	(??_main+2)^080h+0
  2352  00C7  00D3               	movf	(??_main+2)^080h+0,w
  2353  00C8  0853               	movwf	(_count2)
  2354  00C9  00F9               	line	94
  2355                           	
  2356                           l3796:	
  2357  00CA                     ;mainM.c: 94:         I2C_Master_Start();
  2358                           	fcall	_I2C_Master_Start
  2359  00CA  160A  118A  2383  120A  118A  	line	95
  2360                           	
  2361                           l3798:	
  2362  00CF                     ;mainM.c: 95:         I2C_Master_Write(0x61);
  2363                           	movlw	061h
  2364  00CF  3061               	movwf	(I2C_Master_Write@d)
  2365  00D0  00F3               	movlw	0
  2366  00D1  3000               	movwf	((I2C_Master_Write@d))+1
  2367  00D2  00F4               	fcall	_I2C_Master_Write
  2368  00D3  160A  118A  238C  120A  118A  	line	96
  2369                           	
  2370                           l3800:	
  2371  00D8                     ;mainM.c: 96:         if(count2 == 0){
  2372                           	movf	((_count2)),w
  2373  00D8  0879               	btfss	status,2
  2374  00D9  1D03               	goto	u5541
  2375  00DA  28DC               	goto	u5540
  2376  00DB  28DD               u5541:
  2377  00DC                     	goto	l3804
  2378  00DC  28EC               u5540:
  2379  00DD                     	line	97
  2380                           	
  2381                           l3802:	
  2382  00DD                     ;mainM.c: 97:             signal = I2C_Master_Read(0);
  2383                           	movlw	0
  2384  00DD  3000               	movwf	(I2C_Master_Read@a)
  2385  00DE  00F3               	movwf	(I2C_Master_Read@a+1)
  2386  00DF  00F4               	fcall	_I2C_Master_Read
  2387  00E0  160A  118A  24A0  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2388  00E5  0873               	bsf	status, 5	;RP0=1, select bank1
  2389  00E6  1683               	bcf	status, 6	;RP1=0, select bank1
  2390  00E7  1303               	movwf	(??_main+0)^080h+0
  2391  00E8  00D1               	movf	(??_main+0)^080h+0,w
  2392  00E9  0851               	movwf	(_signal)
  2393  00EA  00F8               	line	98
  2394                           ;mainM.c: 98:         }else if(count2 == 1){
  2395                           	goto	l3812
  2396  00EB  2917               	
  2397                           l232:	
  2398  00EC                     	
  2399                           l3804:	
  2400  00EC                     		decf	((_count2)),w
  2401  00EC  0379               	btfss	status,2
  2402  00ED  1D03               	goto	u5551
  2403  00EE  28F0               	goto	u5550
  2404  00EF  28F1               u5551:
  2405  00F0                     	goto	l3808
  2406  00F0  2900               u5550:
  2407  00F1                     	line	99
  2408                           	
  2409                           l3806:	
  2410  00F1                     ;mainM.c: 99:             adcP = I2C_Master_Read(0);
  2411                           	movlw	0
  2412  00F1  3000               	movwf	(I2C_Master_Read@a)
  2413  00F2  00F3               	movwf	(I2C_Master_Read@a+1)
  2414  00F3  00F4               	fcall	_I2C_Master_Read
  2415  00F4  160A  118A  24A0  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2416  00F9  0873               	bsf	status, 5	;RP0=1, select bank1
  2417  00FA  1683               	bcf	status, 6	;RP1=0, select bank1
  2418  00FB  1303               	movwf	(??_main+0)^080h+0
  2419  00FC  00D1               	movf	(??_main+0)^080h+0,w
  2420  00FD  0851               	movwf	(_adcP)^080h
  2421  00FE  00B8               	line	100
  2422                           ;mainM.c: 100:         }else if(count2 == 2){
  2423                           	goto	l3812
  2424  00FF  2917               	
  2425                           l234:	
  2426  0100                     	
  2427                           l3808:	
  2428  0100                     		movlw	2
  2429  0100  3002               	xorwf	((_count2)),w
  2430  0101  0679               	btfss	status,2
  2431  0102  1D03               	goto	u5561
  2432  0103  2905               	goto	u5560
  2433  0104  2906               u5561:
  2434  0105                     	goto	l3812
  2435  0105  2917               u5560:
  2436  0106                     	line	101
  2437                           	
  2438                           l3810:	
  2439  0106                     ;mainM.c: 101:             mov = I2C_Master_Read(0);
  2440                           	movlw	0
  2441  0106  3000               	movwf	(I2C_Master_Read@a)
  2442  0107  00F3               	movwf	(I2C_Master_Read@a+1)
  2443  0108  00F4               	fcall	_I2C_Master_Read
  2444  0109  160A  118A  24A0  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2445  010E  0873               	bsf	status, 5	;RP0=1, select bank1
  2446  010F  1683               	bcf	status, 6	;RP1=0, select bank1
  2447  0110  1303               	movwf	(??_main+0)^080h+0
  2448  0111  00D1               	movf	(??_main+0)^080h+0,w
  2449  0112  0851               	movwf	(_mov)^080h
  2450  0113  00B7               	goto	l3812
  2451  0114  2917               	line	102
  2452                           ;mainM.c: 102:         }
  2453                           	
  2454                           l236:	
  2455  0115                     	goto	l3812
  2456  0115  2917               	
  2457                           l235:	
  2458  0116                     	goto	l3812
  2459  0116  2917               	
  2460                           l233:	
  2461  0117                     	line	103
  2462                           	
  2463                           l3812:	
  2464  0117                     ;mainM.c: 103:         toggle2++;
  2465                           	movlw	low(01h)
  2466  0117  3001               	bsf	status, 5	;RP0=1, select bank1
  2467  0118  1683               	bcf	status, 6	;RP1=0, select bank1
  2468  0119  1303               	movwf	(??_main+0)^080h+0
  2469  011A  00D1               	movf	(??_main+0)^080h+0,w
  2470  011B  0851               	addwf	(_toggle2)^080h,f
  2471  011C  07B9               	line	104
  2472                           	
  2473                           l3814:	
  2474  011D                     ;mainM.c: 104:         I2C_Master_Stop();
  2475                           	fcall	_I2C_Master_Stop
  2476  011D  120A  158A  2000  120A  118A  	line	105
  2477                           	
  2478                           l3816:	
  2479  0122                     ;mainM.c: 105:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2480                           	opt asmopt_push
  2481                           opt asmopt_off
  2482                           movlw	13
  2483  0122  300D               	bsf	status, 5	;RP0=1, select bank1
  2484  0123  1683               	bcf	status, 6	;RP1=0, select bank1
  2485  0124  1303               movwf	((??_main+0)^080h+0+1),f
  2486  0125  00D2               	movlw	251
  2487  0126  30FB               movwf	((??_main+0)^080h+0),f
  2488  0127  00D1               	u5877:
  2489  0128                     decfsz	((??_main+0)^080h+0),f
  2490  0128  0BD1               	goto	u5877
  2491  0129  2928               	decfsz	((??_main+0)^080h+0+1),f
  2492  012A  0BD2               	goto	u5877
  2493  012B  2928               opt asmopt_pop
  2494                           
  2495                           	line	108
  2496                           	
  2497                           l3818:	
  2498  012C                     ;mainM.c: 108:         count3 = toggle3%2;
  2499                           	bsf	status, 5	;RP0=1, select bank1
  2500  012C  1683               	bcf	status, 6	;RP1=0, select bank1
  2501  012D  1303               	movf	(_toggle3)^080h,w
  2502  012E  0836               	andlw	01h
  2503  012F  3901               	movwf	(??_main+0)^080h+0
  2504  0130  00D1               	movf	(??_main+0)^080h+0,w
  2505  0131  0851               	movwf	(_count3)^080h
  2506  0132  00B5               	line	109
  2507                           	
  2508                           l3820:	
  2509  0133                     ;mainM.c: 109:         I2C_Master_Start();
  2510                           	fcall	_I2C_Master_Start
  2511  0133  160A  118A  2383  120A  118A  	line	110
  2512                           	
  2513                           l3822:	
  2514  0138                     ;mainM.c: 110:         I2C_Master_Write(0x71);
  2515                           	movlw	071h
  2516  0138  3071               	movwf	(I2C_Master_Write@d)
  2517  0139  00F3               	movlw	0
  2518  013A  3000               	movwf	((I2C_Master_Write@d))+1
  2519  013B  00F4               	fcall	_I2C_Master_Write
  2520  013C  160A  118A  238C  120A  118A  	line	111
  2521                           	
  2522                           l3824:	
  2523  0141                     ;mainM.c: 111:         if(count3 == 0){
  2524                           	bsf	status, 5	;RP0=1, select bank1
  2525  0141  1683               	bcf	status, 6	;RP1=0, select bank1
  2526  0142  1303               	movf	((_count3)^080h),w
  2527  0143  0835               	btfss	status,2
  2528  0144  1D03               	goto	u5571
  2529  0145  2947               	goto	u5570
  2530  0146  2948               u5571:
  2531  0147                     	goto	l3828
  2532  0147  2957               u5570:
  2533  0148                     	line	112
  2534                           	
  2535                           l3826:	
  2536  0148                     ;mainM.c: 112:             ir = I2C_Master_Read(0);
  2537                           	movlw	0
  2538  0148  3000               	movwf	(I2C_Master_Read@a)
  2539  0149  00F3               	movwf	(I2C_Master_Read@a+1)
  2540  014A  00F4               	fcall	_I2C_Master_Read
  2541  014B  160A  118A  24A0  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2542  0150  0873               	bsf	status, 5	;RP0=1, select bank1
  2543  0151  1683               	bcf	status, 6	;RP1=0, select bank1
  2544  0152  1303               	movwf	(??_main+0)^080h+0
  2545  0153  00D1               	movf	(??_main+0)^080h+0,w
  2546  0154  0851               	movwf	(_ir)^080h
  2547  0155  00B4               	line	113
  2548                           ;mainM.c: 113:         }else if(count3 == 1){
  2549                           	goto	l3832
  2550  0156  296C               	
  2551                           l237:	
  2552  0157                     	
  2553                           l3828:	
  2554  0157                     		decf	((_count3)^080h),w
  2555  0157  0335               	btfss	status,2
  2556  0158  1D03               	goto	u5581
  2557  0159  295B               	goto	u5580
  2558  015A  295C               u5581:
  2559  015B                     	goto	l3832
  2560  015B  296C               u5580:
  2561  015C                     	line	114
  2562                           	
  2563                           l3830:	
  2564  015C                     ;mainM.c: 114:             garage = I2C_Master_Read(0);
  2565                           	movlw	0
  2566  015C  3000               	movwf	(I2C_Master_Read@a)
  2567  015D  00F3               	movwf	(I2C_Master_Read@a+1)
  2568  015E  00F4               	fcall	_I2C_Master_Read
  2569  015F  160A  118A  24A0  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  2570  0164  0873               	bsf	status, 5	;RP0=1, select bank1
  2571  0165  1683               	bcf	status, 6	;RP1=0, select bank1
  2572  0166  1303               	movwf	(??_main+0)^080h+0
  2573  0167  00D1               	movf	(??_main+0)^080h+0,w
  2574  0168  0851               	movwf	(_garage)^080h
  2575  0169  00B3               	goto	l3832
  2576  016A  296C               	line	115
  2577                           ;mainM.c: 115:         }
  2578                           	
  2579                           l239:	
  2580  016B                     	goto	l3832
  2581  016B  296C               	
  2582                           l238:	
  2583  016C                     	line	116
  2584                           	
  2585                           l3832:	
  2586  016C                     ;mainM.c: 116:         toggle3++;
  2587                           	movlw	low(01h)
  2588  016C  3001               	movwf	(??_main+0)^080h+0
  2589  016D  00D1               	movf	(??_main+0)^080h+0,w
  2590  016E  0851               	addwf	(_toggle3)^080h,f
  2591  016F  07B6               	line	117
  2592                           	
  2593                           l3834:	
  2594  0170                     ;mainM.c: 117:         I2C_Master_Stop();
  2595                           	fcall	_I2C_Master_Stop
  2596  0170  120A  158A  2000  120A  118A  	line	118
  2597                           	
  2598                           l3836:	
  2599  0175                     ;mainM.c: 118:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2600                           	opt asmopt_push
  2601                           opt asmopt_off
  2602                           movlw	13
  2603  0175  300D               	bsf	status, 5	;RP0=1, select bank1
  2604  0176  1683               	bcf	status, 6	;RP1=0, select bank1
  2605  0177  1303               movwf	((??_main+0)^080h+0+1),f
  2606  0178  00D2               	movlw	251
  2607  0179  30FB               movwf	((??_main+0)^080h+0),f
  2608  017A  00D1               	u5887:
  2609  017B                     decfsz	((??_main+0)^080h+0),f
  2610  017B  0BD1               	goto	u5887
  2611  017C  297B               	decfsz	((??_main+0)^080h+0+1),f
  2612  017D  0BD2               	goto	u5887
  2613  017E  297B               opt asmopt_pop
  2614                           
  2615                           	line	122
  2616                           	
  2617                           l3838:	
  2618  017F                     ;mainM.c: 122:         sensorF1 = (float) adcT * 5/255;
  2619                           	movlw	0x43
  2620  017F  3043               	bcf	status, 5	;RP0=0, select bank0
  2621  0180  1283               	bcf	status, 6	;RP1=0, select bank0
  2622  0181  1303               	movwf	(___fldiv@a+3)
  2623  0182  00E3               	movlw	0x7f
  2624  0183  307F               	movwf	(___fldiv@a+2)
  2625  0184  00E2               	movlw	0x0
  2626  0185  3000               	movwf	(___fldiv@a+1)
  2627  0186  00E1               	movlw	0x0
  2628  0187  3000               	movwf	(___fldiv@a)
  2629  0188  00E0               
  2630                           	movlw	0x40
  2631  0189  3040               	movwf	(___flmul@b+3)
  2632  018A  00C9               	movlw	0xa0
  2633  018B  30A0               	movwf	(___flmul@b+2)
  2634  018C  00C8               	movlw	0x0
  2635  018D  3000               	movwf	(___flmul@b+1)
  2636  018E  00C7               	movlw	0x0
  2637  018F  3000               	movwf	(___flmul@b)
  2638  0190  00C6               
  2639                           	bsf	status, 5	;RP0=1, select bank1
  2640  0191  1683               	bcf	status, 6	;RP1=0, select bank1
  2641  0192  1303               	movf	(_adcT)^080h,w
  2642  0193  0841               	movwf	(??_main+0)^080h+0
  2643  0194  00D1               	clrf	(??_main+0)^080h+0+1
  2644  0195  01D2               	clrf	(??_main+0)^080h+0+2
  2645  0196  01D3               	clrf	(??_main+0)^080h+0+3
  2646  0197  01D4               	movf	3+(??_main+0)^080h+0,w
  2647  0198  0854               	movwf	(___xxtofl@val+3)
  2648  0199  00F6               	movf	2+(??_main+0)^080h+0,w
  2649  019A  0853               	movwf	(___xxtofl@val+2)
  2650  019B  00F5               	movf	1+(??_main+0)^080h+0,w
  2651  019C  0852               	movwf	(___xxtofl@val+1)
  2652  019D  00F4               	movf	0+(??_main+0)^080h+0,w
  2653  019E  0851               	movwf	(___xxtofl@val)
  2654  019F  00F3               
  2655                           	movlw	low(0)
  2656  01A0  3000               	fcall	___xxtofl
  2657  01A1  120A  158A  2009  120A  118A  	movf	(3+(?___xxtofl)),w
  2658  01A6  0876               	bcf	status, 5	;RP0=0, select bank0
  2659  01A7  1283               	bcf	status, 6	;RP1=0, select bank0
  2660  01A8  1303               	movwf	(___flmul@a+3)
  2661  01A9  00CD               	movf	(2+(?___xxtofl)),w
  2662  01AA  0875               	movwf	(___flmul@a+2)
  2663  01AB  00CC               	movf	(1+(?___xxtofl)),w
  2664  01AC  0874               	movwf	(___flmul@a+1)
  2665  01AD  00CB               	movf	(0+(?___xxtofl)),w
  2666  01AE  0873               	movwf	(___flmul@a)
  2667  01AF  00CA               
  2668                           	fcall	___flmul
  2669  01B0  120A  158A  248B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2670  01B5  1283               	bcf	status, 6	;RP1=0, select bank0
  2671  01B6  1303               	movf	(3+(?___flmul)),w
  2672  01B7  0849               	movwf	(___fldiv@b+3)
  2673  01B8  00E7               	movf	(2+(?___flmul)),w
  2674  01B9  0848               	movwf	(___fldiv@b+2)
  2675  01BA  00E6               	movf	(1+(?___flmul)),w
  2676  01BB  0847               	movwf	(___fldiv@b+1)
  2677  01BC  00E5               	movf	(0+(?___flmul)),w
  2678  01BD  0846               	movwf	(___fldiv@b)
  2679  01BE  00E4               
  2680                           	fcall	___fldiv
  2681  01BF  120A  118A  251E  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2682  01C4  1283               	bcf	status, 6	;RP1=0, select bank0
  2683  01C5  1303               	movf	(3+(?___fldiv)),w
  2684  01C6  0863               	bsf	status, 5	;RP0=1, select bank1
  2685  01C7  1683               	bcf	status, 6	;RP1=0, select bank1
  2686  01C8  1303               	movwf	(_sensorF1+3)^080h
  2687  01C9  00AF               	bcf	status, 5	;RP0=0, select bank0
  2688  01CA  1283               	bcf	status, 6	;RP1=0, select bank0
  2689  01CB  1303               	movf	(2+(?___fldiv)),w
  2690  01CC  0862               	bsf	status, 5	;RP0=1, select bank1
  2691  01CD  1683               	bcf	status, 6	;RP1=0, select bank1
  2692  01CE  1303               	movwf	(_sensorF1+2)^080h
  2693  01CF  00AE               	bcf	status, 5	;RP0=0, select bank0
  2694  01D0  1283               	bcf	status, 6	;RP1=0, select bank0
  2695  01D1  1303               	movf	(1+(?___fldiv)),w
  2696  01D2  0861               	bsf	status, 5	;RP0=1, select bank1
  2697  01D3  1683               	bcf	status, 6	;RP1=0, select bank1
  2698  01D4  1303               	movwf	(_sensorF1+1)^080h
  2699  01D5  00AD               	bcf	status, 5	;RP0=0, select bank0
  2700  01D6  1283               	bcf	status, 6	;RP1=0, select bank0
  2701  01D7  1303               	movf	(0+(?___fldiv)),w
  2702  01D8  0860               	bsf	status, 5	;RP0=1, select bank1
  2703  01D9  1683               	bcf	status, 6	;RP1=0, select bank1
  2704  01DA  1303               	movwf	(_sensorF1)^080h
  2705  01DB  00AC               
  2706                           	line	123
  2707                           	
  2708                           l3840:	
  2709  01DC                     ;mainM.c: 123:         sensorF2 = (float) sensorF1/0.01;
  2710                           	movlw	0x3c
  2711  01DC  303C               	bcf	status, 5	;RP0=0, select bank0
  2712  01DD  1283               	bcf	status, 6	;RP1=0, select bank0
  2713  01DE  1303               	movwf	(___fldiv@a+3)
  2714  01DF  00E3               	movlw	0x23
  2715  01E0  3023               	movwf	(___fldiv@a+2)
  2716  01E1  00E2               	movlw	0xd7
  2717  01E2  30D7               	movwf	(___fldiv@a+1)
  2718  01E3  00E1               	movlw	0xa
  2719  01E4  300A               	movwf	(___fldiv@a)
  2720  01E5  00E0               
  2721                           	bsf	status, 5	;RP0=1, select bank1
  2722  01E6  1683               	bcf	status, 6	;RP1=0, select bank1
  2723  01E7  1303               	movf	(_sensorF1+3)^080h,w
  2724  01E8  082F               	bcf	status, 5	;RP0=0, select bank0
  2725  01E9  1283               	bcf	status, 6	;RP1=0, select bank0
  2726  01EA  1303               	movwf	(___fldiv@b+3)
  2727  01EB  00E7               	bsf	status, 5	;RP0=1, select bank1
  2728  01EC  1683               	bcf	status, 6	;RP1=0, select bank1
  2729  01ED  1303               	movf	(_sensorF1+2)^080h,w
  2730  01EE  082E               	bcf	status, 5	;RP0=0, select bank0
  2731  01EF  1283               	bcf	status, 6	;RP1=0, select bank0
  2732  01F0  1303               	movwf	(___fldiv@b+2)
  2733  01F1  00E6               	bsf	status, 5	;RP0=1, select bank1
  2734  01F2  1683               	bcf	status, 6	;RP1=0, select bank1
  2735  01F3  1303               	movf	(_sensorF1+1)^080h,w
  2736  01F4  082D               	bcf	status, 5	;RP0=0, select bank0
  2737  01F5  1283               	bcf	status, 6	;RP1=0, select bank0
  2738  01F6  1303               	movwf	(___fldiv@b+1)
  2739  01F7  00E5               	bsf	status, 5	;RP0=1, select bank1
  2740  01F8  1683               	bcf	status, 6	;RP1=0, select bank1
  2741  01F9  1303               	movf	(_sensorF1)^080h,w
  2742  01FA  082C               	bcf	status, 5	;RP0=0, select bank0
  2743  01FB  1283               	bcf	status, 6	;RP1=0, select bank0
  2744  01FC  1303               	movwf	(___fldiv@b)
  2745  01FD  00E4               
  2746                           	fcall	___fldiv
  2747  01FE  120A  118A  251E  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2748  0203  1283               	bcf	status, 6	;RP1=0, select bank0
  2749  0204  1303               	movf	(3+(?___fldiv)),w
  2750  0205  0863               	bsf	status, 5	;RP0=1, select bank1
  2751  0206  1683               	bcf	status, 6	;RP1=0, select bank1
  2752  0207  1303               	movwf	(_sensorF2+3)^080h
  2753  0208  00A7               	bcf	status, 5	;RP0=0, select bank0
  2754  0209  1283               	bcf	status, 6	;RP1=0, select bank0
  2755  020A  1303               	movf	(2+(?___fldiv)),w
  2756  020B  0862               	bsf	status, 5	;RP0=1, select bank1
  2757  020C  1683               	bcf	status, 6	;RP1=0, select bank1
  2758  020D  1303               	movwf	(_sensorF2+2)^080h
  2759  020E  00A6               	bcf	status, 5	;RP0=0, select bank0
  2760  020F  1283               	bcf	status, 6	;RP1=0, select bank0
  2761  0210  1303               	movf	(1+(?___fldiv)),w
  2762  0211  0861               	bsf	status, 5	;RP0=1, select bank1
  2763  0212  1683               	bcf	status, 6	;RP1=0, select bank1
  2764  0213  1303               	movwf	(_sensorF2+1)^080h
  2765  0214  00A5               	bcf	status, 5	;RP0=0, select bank0
  2766  0215  1283               	bcf	status, 6	;RP1=0, select bank0
  2767  0216  1303               	movf	(0+(?___fldiv)),w
  2768  0217  0860               	bsf	status, 5	;RP0=1, select bank1
  2769  0218  1683               	bcf	status, 6	;RP1=0, select bank1
  2770  0219  1303               	movwf	(_sensorF2)^080h
  2771  021A  00A4               
  2772                           	line	124
  2773                           	
  2774                           l3842:	
  2775  021B                     ;mainM.c: 124:         entero1 = (int) sensorF2;
  2776                           	movf	(_sensorF2+3)^080h,w
  2777  021B  0827               	movwf	(___fltol@f1+3)
  2778  021C  00F6               	movf	(_sensorF2+2)^080h,w
  2779  021D  0826               	movwf	(___fltol@f1+2)
  2780  021E  00F5               	movf	(_sensorF2+1)^080h,w
  2781  021F  0825               	movwf	(___fltol@f1+1)
  2782  0220  00F4               	movf	(_sensorF2)^080h,w
  2783  0221  0824               	movwf	(___fltol@f1)
  2784  0222  00F3               
  2785                           	fcall	___fltol
  2786  0223  160A  118A  2764  120A  118A  	movf	(0+(?___fltol)),w
  2787  0228  0873               	bsf	status, 5	;RP0=1, select bank1
  2788  0229  1683               	bcf	status, 6	;RP1=0, select bank1
  2789  022A  1303               	movwf	(??_main+0)^080h+0
  2790  022B  00D1               	movf	(??_main+0)^080h+0,w
  2791  022C  0851               	bcf	status, 5	;RP0=0, select bank0
  2792  022D  1283               	bcf	status, 6	;RP1=0, select bank0
  2793  022E  1303               	movwf	(_entero1)
  2794  022F  00EF               	line	125
  2795                           	
  2796                           l3844:	
  2797  0230                     ;mainM.c: 125:         float1 = (sensorF2 - entero1)*100;
  2798                           	movlw	0x42
  2799  0230  3042               	movwf	(___flmul@b+3)
  2800  0231  00C9               	movlw	0xc8
  2801  0232  30C8               	movwf	(___flmul@b+2)
  2802  0233  00C8               	movlw	0x0
  2803  0234  3000               	movwf	(___flmul@b+1)
  2804  0235  00C7               	movlw	0x0
  2805  0236  3000               	movwf	(___flmul@b)
  2806  0237  00C6               
  2807                           	bsf	status, 5	;RP0=1, select bank1
  2808  0238  1683               	bcf	status, 6	;RP1=0, select bank1
  2809  0239  1303               	movf	(_sensorF2+3)^080h,w
  2810  023A  0827               	bcf	status, 5	;RP0=0, select bank0
  2811  023B  1283               	bcf	status, 6	;RP1=0, select bank0
  2812  023C  1303               	movwf	(___fladd@b+3)
  2813  023D  00B1               	bsf	status, 5	;RP0=1, select bank1
  2814  023E  1683               	bcf	status, 6	;RP1=0, select bank1
  2815  023F  1303               	movf	(_sensorF2+2)^080h,w
  2816  0240  0826               	bcf	status, 5	;RP0=0, select bank0
  2817  0241  1283               	bcf	status, 6	;RP1=0, select bank0
  2818  0242  1303               	movwf	(___fladd@b+2)
  2819  0243  00B0               	bsf	status, 5	;RP0=1, select bank1
  2820  0244  1683               	bcf	status, 6	;RP1=0, select bank1
  2821  0245  1303               	movf	(_sensorF2+1)^080h,w
  2822  0246  0825               	bcf	status, 5	;RP0=0, select bank0
  2823  0247  1283               	bcf	status, 6	;RP1=0, select bank0
  2824  0248  1303               	movwf	(___fladd@b+1)
  2825  0249  00AF               	bsf	status, 5	;RP0=1, select bank1
  2826  024A  1683               	bcf	status, 6	;RP1=0, select bank1
  2827  024B  1303               	movf	(_sensorF2)^080h,w
  2828  024C  0824               	bcf	status, 5	;RP0=0, select bank0
  2829  024D  1283               	bcf	status, 6	;RP1=0, select bank0
  2830  024E  1303               	movwf	(___fladd@b)
  2831  024F  00AE               
  2832                           	movf	(_entero1),w
  2833  0250  086F               	bsf	status, 5	;RP0=1, select bank1
  2834  0251  1683               	bcf	status, 6	;RP1=0, select bank1
  2835  0252  1303               	movwf	(??_main+0)^080h+0
  2836  0253  00D1               	clrf	(??_main+0)^080h+0+1
  2837  0254  01D2               	clrf	(??_main+0)^080h+0+2
  2838  0255  01D3               	clrf	(??_main+0)^080h+0+3
  2839  0256  01D4               	movf	3+(??_main+0)^080h+0,w
  2840  0257  0854               	movwf	(___xxtofl@val+3)
  2841  0258  00F6               	movf	2+(??_main+0)^080h+0,w
  2842  0259  0853               	movwf	(___xxtofl@val+2)
  2843  025A  00F5               	movf	1+(??_main+0)^080h+0,w
  2844  025B  0852               	movwf	(___xxtofl@val+1)
  2845  025C  00F4               	movf	0+(??_main+0)^080h+0,w
  2846  025D  0851               	movwf	(___xxtofl@val)
  2847  025E  00F3               
  2848                           	movlw	low(01h)
  2849  025F  3001               	fcall	___xxtofl
  2850  0260  120A  158A  2009  120A  118A  	movf	(3+(?___xxtofl)),w
  2851  0265  0876               	bcf	status, 5	;RP0=0, select bank0
  2852  0266  1283               	bcf	status, 6	;RP1=0, select bank0
  2853  0267  1303               	movwf	(___flneg@f1+3)
  2854  0268  00AD               	movf	(2+(?___xxtofl)),w
  2855  0269  0875               	movwf	(___flneg@f1+2)
  2856  026A  00AC               	movf	(1+(?___xxtofl)),w
  2857  026B  0874               	movwf	(___flneg@f1+1)
  2858  026C  00AB               	movf	(0+(?___xxtofl)),w
  2859  026D  0873               	movwf	(___flneg@f1)
  2860  026E  00AA               
  2861                           	fcall	___flneg
  2862  026F  160A  118A  23A5  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2863  0274  1283               	bcf	status, 6	;RP1=0, select bank0
  2864  0275  1303               	movf	(3+(?___flneg)),w
  2865  0276  082D               	movwf	(___fladd@a+3)
  2866  0277  00B5               	movf	(2+(?___flneg)),w
  2867  0278  082C               	movwf	(___fladd@a+2)
  2868  0279  00B4               	movf	(1+(?___flneg)),w
  2869  027A  082B               	movwf	(___fladd@a+1)
  2870  027B  00B3               	movf	(0+(?___flneg)),w
  2871  027C  082A               	movwf	(___fladd@a)
  2872  027D  00B2               
  2873                           	fcall	___fladd
  2874  027E  120A  158A  21CF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2875  0283  1283               	bcf	status, 6	;RP1=0, select bank0
  2876  0284  1303               	movf	(3+(?___fladd)),w
  2877  0285  0831               	movwf	(___flmul@a+3)
  2878  0286  00CD               	movf	(2+(?___fladd)),w
  2879  0287  0830               	movwf	(___flmul@a+2)
  2880  0288  00CC               	movf	(1+(?___fladd)),w
  2881  0289  082F               	movwf	(___flmul@a+1)
  2882  028A  00CB               	movf	(0+(?___fladd)),w
  2883  028B  082E               	movwf	(___flmul@a)
  2884  028C  00CA               
  2885                           	fcall	___flmul
  2886  028D  120A  158A  248B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2887  0292  1283               	bcf	status, 6	;RP1=0, select bank0
  2888  0293  1303               	movf	(3+(?___flmul)),w
  2889  0294  0849               	bsf	status, 5	;RP0=1, select bank1
  2890  0295  1683               	bcf	status, 6	;RP1=0, select bank1
  2891  0296  1303               	movwf	(_float1+3)^080h
  2892  0297  00AB               	bcf	status, 5	;RP0=0, select bank0
  2893  0298  1283               	bcf	status, 6	;RP1=0, select bank0
  2894  0299  1303               	movf	(2+(?___flmul)),w
  2895  029A  0848               	bsf	status, 5	;RP0=1, select bank1
  2896  029B  1683               	bcf	status, 6	;RP1=0, select bank1
  2897  029C  1303               	movwf	(_float1+2)^080h
  2898  029D  00AA               	bcf	status, 5	;RP0=0, select bank0
  2899  029E  1283               	bcf	status, 6	;RP1=0, select bank0
  2900  029F  1303               	movf	(1+(?___flmul)),w
  2901  02A0  0847               	bsf	status, 5	;RP0=1, select bank1
  2902  02A1  1683               	bcf	status, 6	;RP1=0, select bank1
  2903  02A2  1303               	movwf	(_float1+1)^080h
  2904  02A3  00A9               	bcf	status, 5	;RP0=0, select bank0
  2905  02A4  1283               	bcf	status, 6	;RP1=0, select bank0
  2906  02A5  1303               	movf	(0+(?___flmul)),w
  2907  02A6  0846               	bsf	status, 5	;RP0=1, select bank1
  2908  02A7  1683               	bcf	status, 6	;RP1=0, select bank1
  2909  02A8  1303               	movwf	(_float1)^080h
  2910  02A9  00A8               
  2911                           	line	126
  2912                           	
  2913                           l3846:	
  2914  02AA                     ;mainM.c: 126:         dec1 = (int) float1;
  2915                           	movf	(_float1+3)^080h,w
  2916  02AA  082B               	movwf	(___fltol@f1+3)
  2917  02AB  00F6               	movf	(_float1+2)^080h,w
  2918  02AC  082A               	movwf	(___fltol@f1+2)
  2919  02AD  00F5               	movf	(_float1+1)^080h,w
  2920  02AE  0829               	movwf	(___fltol@f1+1)
  2921  02AF  00F4               	movf	(_float1)^080h,w
  2922  02B0  0828               	movwf	(___fltol@f1)
  2923  02B1  00F3               
  2924                           	fcall	___fltol
  2925  02B2  160A  118A  2764  120A  118A  	movf	(0+(?___fltol)),w
  2926  02B7  0873               	bsf	status, 5	;RP0=1, select bank1
  2927  02B8  1683               	bcf	status, 6	;RP1=0, select bank1
  2928  02B9  1303               	movwf	(??_main+0)^080h+0
  2929  02BA  00D1               	movf	(??_main+0)^080h+0,w
  2930  02BB  0851               	movwf	(_dec1)^080h
  2931  02BC  00BF               	line	129
  2932                           	
  2933                           l3848:	
  2934  02BD                     ;mainM.c: 129:         if(PORTAbits.RA1){
  2935                           	bcf	status, 5	;RP0=0, select bank0
  2936  02BD  1283               	bcf	status, 6	;RP1=0, select bank0
  2937  02BE  1303               	btfss	(5),1	;volatile
  2938  02BF  1C85               	goto	u5591
  2939  02C0  2AC2               	goto	u5590
  2940  02C1  2AC3               u5591:
  2941  02C2                     	goto	l240
  2942  02C2  2AC7               u5590:
  2943  02C3                     	line	130
  2944                           	
  2945                           l3850:	
  2946  02C3                     ;mainM.c: 130:             antibounce = 1;
  2947                           	bsf	status, 5	;RP0=1, select bank1
  2948  02C3  1683               	bcf	status, 6	;RP1=0, select bank1
  2949  02C4  1303               	clrf	(_antibounce)^080h
  2950  02C5  01B2               	incf	(_antibounce)^080h,f
  2951  02C6  0AB2               	line	131
  2952                           ;mainM.c: 131:         }
  2953                           	
  2954                           l240:	
  2955  02C7                     	line	132
  2956                           ;mainM.c: 132:         if(PORTAbits.RA1 == 0 && antibounce){
  2957                           	bcf	status, 5	;RP0=0, select bank0
  2958  02C7  1283               	btfsc	(5),1	;volatile
  2959  02C8  1885               	goto	u5601
  2960  02C9  2ACB               	goto	u5600
  2961  02CA  2ACC               u5601:
  2962  02CB                     	goto	l3860
  2963  02CB  2AF7               u5600:
  2964  02CC                     	
  2965                           l3852:	
  2966  02CC                     	bsf	status, 5	;RP0=1, select bank1
  2967  02CC  1683               	bcf	status, 6	;RP1=0, select bank1
  2968  02CD  1303               	movf	((_antibounce)^080h),w
  2969  02CE  0832               	btfsc	status,2
  2970  02CF  1903               	goto	u5611
  2971  02D0  2AD2               	goto	u5610
  2972  02D1  2AD3               u5611:
  2973  02D2                     	goto	l3860
  2974  02D2  2AF7               u5610:
  2975  02D3                     	line	133
  2976                           	
  2977                           l3854:	
  2978  02D3                     ;mainM.c: 133:             screenCounter++;
  2979                           	movlw	low(01h)
  2980  02D3  3001               	movwf	(??_main+0)^080h+0
  2981  02D4  00D1               	movf	(??_main+0)^080h+0,w
  2982  02D5  0851               	bcf	status, 5	;RP0=0, select bank0
  2983  02D6  1283               	bcf	status, 6	;RP1=0, select bank0
  2984  02D7  1303               	addwf	(_screenCounter),f
  2985  02D8  07ED               	line	134
  2986                           	
  2987                           l3856:	
  2988  02D9                     ;mainM.c: 134:             screenCounter = screenCounter%3;
  2989                           	movlw	03h
  2990  02D9  3003               	movwf	(___awmod@divisor)
  2991  02DA  00F3               	movlw	0
  2992  02DB  3000               	movwf	((___awmod@divisor))+1
  2993  02DC  00F4               	movf	(_screenCounter),w
  2994  02DD  086D               	bsf	status, 5	;RP0=1, select bank1
  2995  02DE  1683               	bcf	status, 6	;RP1=0, select bank1
  2996  02DF  1303               	movwf	(??_main+0)^080h+0
  2997  02E0  00D1               	clrf	(??_main+0)^080h+0+1
  2998  02E1  01D2               	movf	0+(??_main+0)^080h+0,w
  2999  02E2  0851               	movwf	(___awmod@dividend)
  3000  02E3  00F5               	movf	1+(??_main+0)^080h+0,w
  3001  02E4  0852               	movwf	(___awmod@dividend+1)
  3002  02E5  00F6               	fcall	___awmod
  3003  02E6  160A  118A  261D  120A  118A  	movf	(0+(?___awmod)),w
  3004  02EB  0873               	bsf	status, 5	;RP0=1, select bank1
  3005  02EC  1683               	bcf	status, 6	;RP1=0, select bank1
  3006  02ED  1303               	movwf	(??_main+2)^080h+0
  3007  02EE  00D3               	movf	(??_main+2)^080h+0,w
  3008  02EF  0853               	bcf	status, 5	;RP0=0, select bank0
  3009  02F0  1283               	bcf	status, 6	;RP1=0, select bank0
  3010  02F1  1303               	movwf	(_screenCounter)
  3011  02F2  00ED               	line	135
  3012                           	
  3013                           l3858:	
  3014  02F3                     ;mainM.c: 135:             antibounce = 0;
  3015                           	bsf	status, 5	;RP0=1, select bank1
  3016  02F3  1683               	bcf	status, 6	;RP1=0, select bank1
  3017  02F4  1303               	clrf	(_antibounce)^080h
  3018  02F5  01B2               	goto	l3860
  3019  02F6  2AF7               	line	136
  3020                           ;mainM.c: 136:         }
  3021                           	
  3022                           l241:	
  3023  02F7                     	line	139
  3024                           	
  3025                           l3860:	
  3026  02F7                     ;mainM.c: 139:         if(PORTAbits.RA2){
  3027                           	bcf	status, 5	;RP0=0, select bank0
  3028  02F7  1283               	btfss	(5),2	;volatile
  3029  02F8  1D05               	goto	u5621
  3030  02F9  2AFB               	goto	u5620
  3031  02FA  2AFC               u5621:
  3032  02FB                     	goto	l242
  3033  02FB  2B00               u5620:
  3034  02FC                     	line	140
  3035                           	
  3036                           l3862:	
  3037  02FC                     ;mainM.c: 140:             antibounce2 = 1;
  3038                           	bsf	status, 5	;RP0=1, select bank1
  3039  02FC  1683               	bcf	status, 6	;RP1=0, select bank1
  3040  02FD  1303               	clrf	(_antibounce2)^080h
  3041  02FE  01B1               	incf	(_antibounce2)^080h,f
  3042  02FF  0AB1               	line	141
  3043                           ;mainM.c: 141:         }
  3044                           	
  3045                           l242:	
  3046  0300                     	line	142
  3047                           ;mainM.c: 142:         if(PORTAbits.RA2 == 0 && antibounce2){
  3048                           	bcf	status, 5	;RP0=0, select bank0
  3049  0300  1283               	btfsc	(5),2	;volatile
  3050  0301  1905               	goto	u5631
  3051  0302  2B04               	goto	u5630
  3052  0303  2B05               u5631:
  3053  0304                     	goto	l3872
  3054  0304  2B17               u5630:
  3055  0305                     	
  3056                           l3864:	
  3057  0305                     	bsf	status, 5	;RP0=1, select bank1
  3058  0305  1683               	bcf	status, 6	;RP1=0, select bank1
  3059  0306  1303               	movf	((_antibounce2)^080h),w
  3060  0307  0831               	btfsc	status,2
  3061  0308  1903               	goto	u5641
  3062  0309  2B0B               	goto	u5640
  3063  030A  2B0C               u5641:
  3064  030B                     	goto	l3872
  3065  030B  2B17               u5640:
  3066  030C                     	line	143
  3067                           	
  3068                           l3866:	
  3069  030C                     ;mainM.c: 143:             screenState++;
  3070                           	movlw	low(01h)
  3071  030C  3001               	movwf	(??_main+0)^080h+0
  3072  030D  00D1               	movf	(??_main+0)^080h+0,w
  3073  030E  0851               	addwf	(_screenState)^080h,f
  3074  030F  07B0               	line	144
  3075                           	
  3076                           l3868:	
  3077  0310                     ;mainM.c: 144:             screenState = screenState%2;
  3078                           	movf	(_screenState)^080h,w
  3079  0310  0830               	andlw	01h
  3080  0311  3901               	movwf	(??_main+0)^080h+0
  3081  0312  00D1               	movf	(??_main+0)^080h+0,w
  3082  0313  0851               	movwf	(_screenState)^080h
  3083  0314  00B0               	line	145
  3084                           	
  3085                           l3870:	
  3086  0315                     ;mainM.c: 145:             antibounce2 = 0;
  3087                           	clrf	(_antibounce2)^080h
  3088  0315  01B1               	goto	l3872
  3089  0316  2B17               	line	146
  3090                           ;mainM.c: 146:         }
  3091                           	
  3092                           l243:	
  3093  0317                     	line	148
  3094                           	
  3095                           l3872:	
  3096  0317                     ;mainM.c: 148:         if(signal){
  3097                           	movf	((_signal)),w
  3098  0317  0878               	btfsc	status,2
  3099  0318  1903               	goto	u5651
  3100  0319  2B1B               	goto	u5650
  3101  031A  2B1C               u5651:
  3102  031B                     	goto	l244
  3103  031B  2B1F               u5650:
  3104  031C                     	line	149
  3105                           	
  3106                           l3874:	
  3107  031C                     ;mainM.c: 149:             PORTAbits.RA0 = 1;
  3108                           	bcf	status, 5	;RP0=0, select bank0
  3109  031C  1283               	bsf	(5),0	;volatile
  3110  031D  1405               	line	150
  3111                           ;mainM.c: 150:         }else{
  3112                           	goto	l3876
  3113  031E  2B22               	
  3114                           l244:	
  3115  031F                     	line	151
  3116                           ;mainM.c: 151:             PORTAbits.RA0 = 0;
  3117                           	bcf	status, 5	;RP0=0, select bank0
  3118  031F  1283               	bcf	(5),0	;volatile
  3119  0320  1005               	goto	l3876
  3120  0321  2B22               	line	152
  3121                           ;mainM.c: 152:         }
  3122                           	
  3123                           l245:	
  3124  0322                     	line	154
  3125                           	
  3126                           l3876:	
  3127  0322                     ;mainM.c: 154:         if(entero1 >= 60){
  3128                           	movlw	low(03Ch)
  3129  0322  303C               	subwf	(_entero1),w
  3130  0323  026F               	skipc
  3131  0324  1C03               	goto	u5661
  3132  0325  2B27               	goto	u5660
  3133  0326  2B28               u5661:
  3134  0327                     	goto	l246
  3135  0327  2B2A               u5660:
  3136  0328                     	line	155
  3137                           	
  3138                           l3878:	
  3139  0328                     ;mainM.c: 155:             PORTAbits.RA4 = 1;
  3140                           	bsf	(5),4	;volatile
  3141  0328  1605               	line	156
  3142                           ;mainM.c: 156:         }else{
  3143                           	goto	l3880
  3144  0329  2B2C               	
  3145                           l246:	
  3146  032A                     	line	157
  3147                           ;mainM.c: 157:             PORTAbits.RA4 = 0;
  3148                           	bcf	(5),4	;volatile
  3149  032A  1205               	goto	l3880
  3150  032B  2B2C               	line	158
  3151                           ;mainM.c: 158:         }
  3152                           	
  3153                           l247:	
  3154  032C                     	line	162
  3155                           	
  3156                           l3880:	
  3157  032C                     ;mainM.c: 162:         if(screenState == 0){
  3158                           	bsf	status, 5	;RP0=1, select bank1
  3159  032C  1683               	bcf	status, 6	;RP1=0, select bank1
  3160  032D  1303               	movf	((_screenState)^080h),w
  3161  032E  0830               	btfss	status,2
  3162  032F  1D03               	goto	u5671
  3163  0330  2B32               	goto	u5670
  3164  0331  2B33               u5671:
  3165  0332                     	goto	l3930
  3166  0332  2C3B               u5670:
  3167  0333                     	line	163
  3168                           	
  3169                           l3882:	
  3170  0333                     ;mainM.c: 163:             setCursorLCD(1, 1);
  3171                           	clrf	(setCursorLCD@x)
  3172  0333  01F6               	incf	(setCursorLCD@x),f
  3173  0334  0AF6               	movlw	low(01h)
  3174  0335  3001               	fcall	_setCursorLCD
  3175  0336  160A  118A  23FC  120A  118A  	line	164
  3176                           	
  3177                           l3884:	
  3178  033B                     ;mainM.c: 164:             if(screenCounter == 0){
  3179                           	bcf	status, 5	;RP0=0, select bank0
  3180  033B  1283               	bcf	status, 6	;RP1=0, select bank0
  3181  033C  1303               	movf	((_screenCounter)),w
  3182  033D  086D               	btfss	status,2
  3183  033E  1D03               	goto	u5681
  3184  033F  2B41               	goto	u5680
  3185  0340  2B42               u5681:
  3186  0341                     	goto	l3892
  3187  0341  2B60               u5680:
  3188  0342                     	line	165
  3189                           	
  3190                           l3886:	
  3191  0342                     ;mainM.c: 165:                 writeStrLCD("TEMP ");
  3192                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3193  0342  3085               	movwf	(writeStrLCD@string)
  3194  0343  00F5               	movlw	80h
  3195  0344  3080               	movwf	(writeStrLCD@string+1)
  3196  0345  00F6               	fcall	_writeStrLCD
  3197  0346  160A  118A  2588  120A  118A  	line	166
  3198                           ;mainM.c: 166:                 writeIntLCD(entero1);
  3199                           	bcf	status, 5	;RP0=0, select bank0
  3200  034B  1283               	bcf	status, 6	;RP1=0, select bank0
  3201  034C  1303               	movf	(_entero1),w
  3202  034D  086F               	fcall	_writeIntLCD
  3203  034E  160A  118A  23DE  120A  118A  	line	167
  3204                           	
  3205                           l3888:	
  3206  0353                     ;mainM.c: 167:                 writeCharLCD('°');
  3207                           	movlw	low(0B0h)
  3208  0353  30B0               	fcall	_writeCharLCD
  3209  0354  160A  118A  23B4  120A  118A  	line	168
  3210                           	
  3211                           l3890:	
  3212  0359                     ;mainM.c: 168:                 writeCharLCD('C');
  3213                           	movlw	low(043h)
  3214  0359  3043               	fcall	_writeCharLCD
  3215  035A  160A  118A  23B4  120A  118A  	line	169
  3216                           ;mainM.c: 169:             }else if(screenCounter == 1){
  3217                           	goto	l250
  3218  035F  2BA8               	
  3219                           l249:	
  3220  0360                     	
  3221                           l3892:	
  3222  0360                     	bcf	status, 5	;RP0=0, select bank0
  3223  0360  1283               	bcf	status, 6	;RP1=0, select bank0
  3224  0361  1303               		decf	((_screenCounter)),w
  3225  0362  036D               	btfss	status,2
  3226  0363  1D03               	goto	u5691
  3227  0364  2B66               	goto	u5690
  3228  0365  2B67               u5691:
  3229  0366                     	goto	l250
  3230  0366  2BA8               u5690:
  3231  0367                     	line	170
  3232                           	
  3233                           l3894:	
  3234  0367                     ;mainM.c: 170:                 writeStrLCD("LUZ ");
  3235                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3236  0367  308B               	movwf	(writeStrLCD@string)
  3237  0368  00F5               	movlw	80h
  3238  0369  3080               	movwf	(writeStrLCD@string+1)
  3239  036A  00F6               	fcall	_writeStrLCD
  3240  036B  160A  118A  2588  120A  118A  	line	171
  3241                           ;mainM.c: 171:                 writeIntLCD((uint8_t) adcP*100/255);
  3242                           	movlw	0FFh
  3243  0370  30FF               	bcf	status, 5	;RP0=0, select bank0
  3244  0371  1283               	bcf	status, 6	;RP1=0, select bank0
  3245  0372  1303               	movwf	(___awdiv@divisor)
  3246  0373  00A2               	movlw	0
  3247  0374  3000               	movwf	((___awdiv@divisor))+1
  3248  0375  00A3               	bsf	status, 5	;RP0=1, select bank1
  3249  0376  1683               	bcf	status, 6	;RP1=0, select bank1
  3250  0377  1303               	movf	(_adcP)^080h,w
  3251  0378  0838               	movwf	(??_main+0)^080h+0
  3252  0379  00D1               	clrf	(??_main+0)^080h+0+1
  3253  037A  01D2               	movf	0+(??_main+0)^080h+0,w
  3254  037B  0851               	movwf	(___wmul@multiplier)
  3255  037C  00F3               	movf	1+(??_main+0)^080h+0,w
  3256  037D  0852               	movwf	(___wmul@multiplier+1)
  3257  037E  00F4               	movlw	064h
  3258  037F  3064               	movwf	(___wmul@multiplicand)
  3259  0380  00F5               	movlw	0
  3260  0381  3000               	movwf	((___wmul@multiplicand))+1
  3261  0382  00F6               	fcall	___wmul
  3262  0383  160A  118A  2472  120A  118A  	movf	(1+(?___wmul)),w
  3263  0388  0874               	bcf	status, 5	;RP0=0, select bank0
  3264  0389  1283               	bcf	status, 6	;RP1=0, select bank0
  3265  038A  1303               	movwf	(___awdiv@dividend+1)
  3266  038B  00A5               	movf	(0+(?___wmul)),w
  3267  038C  0873               	movwf	(___awdiv@dividend)
  3268  038D  00A4               	fcall	___awdiv
  3269  038E  160A  118A  26F1  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3270  0393  1283               	bcf	status, 6	;RP1=0, select bank0
  3271  0394  1303               	movf	(0+(?___awdiv)),w
  3272  0395  0822               	fcall	_writeIntLCD
  3273  0396  160A  118A  23DE  120A  118A  	line	172
  3274                           	
  3275                           l3896:	
  3276  039B                     ;mainM.c: 172:                 writeCharLCD(' ');
  3277                           	movlw	low(020h)
  3278  039B  3020               	fcall	_writeCharLCD
  3279  039C  160A  118A  23B4  120A  118A  	line	173
  3280                           	
  3281                           l3898:	
  3282  03A1                     ;mainM.c: 173:                 writeCharLCD('%');
  3283                           	movlw	low(025h)
  3284  03A1  3025               	fcall	_writeCharLCD
  3285  03A2  160A  118A  23B4  120A  118A  	goto	l250
  3286  03A7  2BA8               	line	174
  3287                           ;mainM.c: 174:             }
  3288                           	
  3289                           l251:	
  3290  03A8                     	
  3291                           l250:	
  3292  03A8                     	line	175
  3293                           ;mainM.c: 175:             writeStrLCD("           ");
  3294                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3295  03A8  3056               	movwf	(writeStrLCD@string)
  3296  03A9  00F5               	movlw	80h
  3297  03AA  3080               	movwf	(writeStrLCD@string+1)
  3298  03AB  00F6               	fcall	_writeStrLCD
  3299  03AC  160A  118A  2588  120A  118A  	line	178
  3300                           	
  3301                           l3900:	
  3302  03B1                     ;mainM.c: 178:             setCursorLCD(2, 1);
  3303                           	clrf	(setCursorLCD@x)
  3304  03B1  01F6               	incf	(setCursorLCD@x),f
  3305  03B2  0AF6               	movlw	low(02h)
  3306  03B3  3002               	fcall	_setCursorLCD
  3307  03B4  160A  118A  23FC  120A  118A  	line	179
  3308                           	
  3309                           l3902:	
  3310  03B9                     ;mainM.c: 179:             if(screenCounter == 0){
  3311                           	bcf	status, 5	;RP0=0, select bank0
  3312  03B9  1283               	bcf	status, 6	;RP1=0, select bank0
  3313  03BA  1303               	movf	((_screenCounter)),w
  3314  03BB  086D               	btfss	status,2
  3315  03BC  1D03               	goto	u5701
  3316  03BD  2BBF               	goto	u5700
  3317  03BE  2BC0               u5701:
  3318  03BF                     	goto	l3914
  3319  03BF  2BE9               u5700:
  3320  03C0                     	line	180
  3321                           	
  3322                           l3904:	
  3323  03C0                     ;mainM.c: 180:                 writeStrLCD("PUERTA ");
  3324                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3325  03C0  3076               	movwf	(writeStrLCD@string)
  3326  03C1  00F5               	movlw	80h
  3327  03C2  3080               	movwf	(writeStrLCD@string+1)
  3328  03C3  00F6               	fcall	_writeStrLCD
  3329  03C4  160A  118A  2588  120A  118A  	line	181
  3330                           	
  3331                           l3906:	
  3332  03C9                     ;mainM.c: 181:                 if(hall){
  3333                           	movf	((_hall)),w
  3334  03C9  087A               	btfsc	status,2
  3335  03CA  1903               	goto	u5711
  3336  03CB  2BCD               	goto	u5710
  3337  03CC  2BCE               u5711:
  3338  03CD                     	goto	l3910
  3339  03CD  2BD8               u5710:
  3340  03CE                     	line	182
  3341                           	
  3342                           l3908:	
  3343  03CE                     ;mainM.c: 182:                     writeStrLCD("ABIERTA");
  3344                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  3345  03CE  3021               	movwf	(writeStrLCD@string)
  3346  03CF  00F5               	movlw	80h
  3347  03D0  3080               	movwf	(writeStrLCD@string+1)
  3348  03D1  00F6               	fcall	_writeStrLCD
  3349  03D2  160A  118A  2588  120A  118A  	line	183
  3350                           ;mainM.c: 183:                 }else{
  3351                           	goto	l3912
  3352  03D7  2BE2               	
  3353                           l253:	
  3354  03D8                     	line	184
  3355                           	
  3356                           l3910:	
  3357  03D8                     ;mainM.c: 184:                     writeStrLCD("CERRADA");
  3358                           	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  3359  03D8  3012               	movwf	(writeStrLCD@string)
  3360  03D9  00F5               	movlw	80h
  3361  03DA  3080               	movwf	(writeStrLCD@string+1)
  3362  03DB  00F6               	fcall	_writeStrLCD
  3363  03DC  160A  118A  2588  120A  118A  	goto	l3912
  3364  03E1  2BE2               	line	185
  3365                           ;mainM.c: 185:                 }
  3366                           	
  3367                           l254:	
  3368  03E2                     	line	186
  3369                           	
  3370                           l3912:	
  3371  03E2                     ;mainM.c: 186:                 writeCharLCD(' ');
  3372                           	movlw	low(020h)
  3373  03E2  3020               	fcall	_writeCharLCD
  3374  03E3  160A  118A  23B4  120A  118A  	line	187
  3375                           ;mainM.c: 187:             }else if(screenCounter == 1){
  3376                           	goto	l255
  3377  03E8  2C31               	
  3378                           l252:	
  3379  03E9                     	
  3380                           l3914:	
  3381  03E9                     	bcf	status, 5	;RP0=0, select bank0
  3382  03E9  1283               	bcf	status, 6	;RP1=0, select bank0
  3383  03EA  1303               		decf	((_screenCounter)),w
  3384  03EB  036D               	btfss	status,2
  3385  03EC  1D03               	goto	u5721
  3386  03ED  2BEF               	goto	u5720
  3387  03EE  2BF0               u5721:
  3388  03EF                     	goto	l3922
  3389  03EF  2C0C               u5720:
  3390  03F0                     	line	188
  3391                           	
  3392                           l3916:	
  3393  03F0                     ;mainM.c: 188:                 if(mov){
  3394                           	bsf	status, 5	;RP0=1, select bank1
  3395  03F0  1683               	bcf	status, 6	;RP1=0, select bank1
  3396  03F1  1303               	movf	((_mov)^080h),w
  3397  03F2  0837               	btfsc	status,2
  3398  03F3  1903               	goto	u5731
  3399  03F4  2BF6               	goto	u5730
  3400  03F5  2BF7               u5731:
  3401  03F6                     	goto	l3920
  3402  03F6  2C01               u5730:
  3403  03F7                     	line	189
  3404                           	
  3405                           l3918:	
  3406  03F7                     ;mainM.c: 189:                     writeStrLCD("MOVIMIENTO");
  3407                           	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  3408  03F7  303C               	movwf	(writeStrLCD@string)
  3409  03F8  00F5               	movlw	80h
  3410  03F9  3080               	movwf	(writeStrLCD@string+1)
  3411  03FA  00F6               	fcall	_writeStrLCD
  3412  03FB  160A  118A  2588  120A  118A  	line	190
  3413                           ;mainM.c: 190:                 }else{
  3414                           	goto	l255
  3415  0400  2C31               	
  3416                           l257:	
  3417  0401                     	line	191
  3418                           	
  3419                           l3920:	
  3420  0401                     ;mainM.c: 191:                     writeStrLCD("SIN MOVIMIENTO");
  3421                           	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  3422  0401  3038               	movwf	(writeStrLCD@string)
  3423  0402  00F5               	movlw	80h
  3424  0403  3080               	movwf	(writeStrLCD@string+1)
  3425  0404  00F6               	fcall	_writeStrLCD
  3426  0405  160A  118A  2588  120A  118A  	goto	l255
  3427  040A  2C31               	line	192
  3428                           ;mainM.c: 192:                 }
  3429                           	
  3430                           l258:	
  3431  040B                     	line	193
  3432                           ;mainM.c: 193:             }else if(screenCounter == 2){
  3433                           	goto	l255
  3434  040B  2C31               	
  3435                           l256:	
  3436  040C                     	
  3437                           l3922:	
  3438  040C                     		movlw	2
  3439  040C  3002               	bcf	status, 5	;RP0=0, select bank0
  3440  040D  1283               	bcf	status, 6	;RP1=0, select bank0
  3441  040E  1303               	xorwf	((_screenCounter)),w
  3442  040F  066D               	btfss	status,2
  3443  0410  1D03               	goto	u5741
  3444  0411  2C13               	goto	u5740
  3445  0412  2C14               u5741:
  3446  0413                     	goto	l255
  3447  0413  2C31               u5740:
  3448  0414                     	line	194
  3449                           	
  3450                           l3924:	
  3451  0414                     ;mainM.c: 194:                 if(garage){
  3452                           	bsf	status, 5	;RP0=1, select bank1
  3453  0414  1683               	bcf	status, 6	;RP1=0, select bank1
  3454  0415  1303               	movf	((_garage)^080h),w
  3455  0416  0833               	btfsc	status,2
  3456  0417  1903               	goto	u5751
  3457  0418  2C1A               	goto	u5750
  3458  0419  2C1B               u5751:
  3459  041A                     	goto	l3928
  3460  041A  2C25               u5750:
  3461  041B                     	line	195
  3462                           	
  3463                           l3926:	
  3464  041B                     ;mainM.c: 195:                     writeStrLCD("GARAGE ABIERTO");
  3465                           	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
  3466  041B  3047               	movwf	(writeStrLCD@string)
  3467  041C  00F5               	movlw	80h
  3468  041D  3080               	movwf	(writeStrLCD@string+1)
  3469  041E  00F6               	fcall	_writeStrLCD
  3470  041F  160A  118A  2588  120A  118A  	line	196
  3471                           ;mainM.c: 196:                 }else{
  3472                           	goto	l255
  3473  0424  2C31               	
  3474                           l261:	
  3475  0425                     	line	197
  3476                           	
  3477                           l3928:	
  3478  0425                     ;mainM.c: 197:                     writeStrLCD("GARAGE CERRADO");
  3479                           	movlw	(low((((STR_12)-__stringbase)|8000h)))&0ffh
  3480  0425  3029               	movwf	(writeStrLCD@string)
  3481  0426  00F5               	movlw	80h
  3482  0427  3080               	movwf	(writeStrLCD@string+1)
  3483  0428  00F6               	fcall	_writeStrLCD
  3484  0429  160A  118A  2588  120A  118A  	goto	l255
  3485  042E  2C31               	line	198
  3486                           ;mainM.c: 198:                 }
  3487                           	
  3488                           l262:	
  3489  042F                     	goto	l255
  3490  042F  2C31               	line	199
  3491                           ;mainM.c: 199:             }
  3492                           	
  3493                           l260:	
  3494  0430                     	goto	l255
  3495  0430  2C31               	
  3496                           l259:	
  3497  0431                     	
  3498                           l255:	
  3499  0431                     	line	200
  3500                           ;mainM.c: 200:             writeStrLCD("           ");
  3501                           	movlw	(low((((STR_13)-__stringbase)|8000h)))&0ffh
  3502  0431  3056               	movwf	(writeStrLCD@string)
  3503  0432  00F5               	movlw	80h
  3504  0433  3080               	movwf	(writeStrLCD@string+1)
  3505  0434  00F6               	fcall	_writeStrLCD
  3506  0435  160A  118A  2588  120A  118A  	line	201
  3507                           ;mainM.c: 201:         }else{
  3508                           	goto	l3770
  3509  043A  282A               	
  3510                           l248:	
  3511  043B                     	line	202
  3512                           	
  3513                           l3930:	
  3514  043B                     ;mainM.c: 202:             setCursorLCD(1, 1);
  3515                           	clrf	(setCursorLCD@x)
  3516  043B  01F6               	incf	(setCursorLCD@x),f
  3517  043C  0AF6               	movlw	low(01h)
  3518  043D  3001               	fcall	_setCursorLCD
  3519  043E  160A  118A  23FC  120A  118A  	line	203
  3520                           	
  3521                           l3932:	
  3522  0443                     ;mainM.c: 203:             if(screenCounter == 0){
  3523                           	bcf	status, 5	;RP0=0, select bank0
  3524  0443  1283               	bcf	status, 6	;RP1=0, select bank0
  3525  0444  1303               	movf	((_screenCounter)),w
  3526  0445  086D               	btfss	status,2
  3527  0446  1D03               	goto	u5761
  3528  0447  2C49               	goto	u5760
  3529  0448  2C4A               u5761:
  3530  0449                     	goto	l3944
  3531  0449  2C73               u5760:
  3532  044A                     	line	204
  3533                           	
  3534                           l3934:	
  3535  044A                     ;mainM.c: 204:                 writeStrLCD("PUERTA ");
  3536                           	movlw	(low((((STR_14)-__stringbase)|8000h)))&0ffh
  3537  044A  3076               	movwf	(writeStrLCD@string)
  3538  044B  00F5               	movlw	80h
  3539  044C  3080               	movwf	(writeStrLCD@string+1)
  3540  044D  00F6               	fcall	_writeStrLCD
  3541  044E  160A  118A  2588  120A  118A  	line	205
  3542                           	
  3543                           l3936:	
  3544  0453                     ;mainM.c: 205:                 if(hall){
  3545                           	movf	((_hall)),w
  3546  0453  087A               	btfsc	status,2
  3547  0454  1903               	goto	u5771
  3548  0455  2C57               	goto	u5770
  3549  0456  2C58               u5771:
  3550  0457                     	goto	l3940
  3551  0457  2C62               u5770:
  3552  0458                     	line	206
  3553                           	
  3554                           l3938:	
  3555  0458                     ;mainM.c: 206:                     writeStrLCD("ABIERTA");
  3556                           	movlw	(low((((STR_15)-__stringbase)|8000h)))&0ffh
  3557  0458  3021               	movwf	(writeStrLCD@string)
  3558  0459  00F5               	movlw	80h
  3559  045A  3080               	movwf	(writeStrLCD@string+1)
  3560  045B  00F6               	fcall	_writeStrLCD
  3561  045C  160A  118A  2588  120A  118A  	line	207
  3562                           ;mainM.c: 207:                 }else{
  3563                           	goto	l3942
  3564  0461  2C6C               	
  3565                           l265:	
  3566  0462                     	line	208
  3567                           	
  3568                           l3940:	
  3569  0462                     ;mainM.c: 208:                     writeStrLCD("CERRADA");
  3570                           	movlw	(low((((STR_16)-__stringbase)|8000h)))&0ffh
  3571  0462  3012               	movwf	(writeStrLCD@string)
  3572  0463  00F5               	movlw	80h
  3573  0464  3080               	movwf	(writeStrLCD@string+1)
  3574  0465  00F6               	fcall	_writeStrLCD
  3575  0466  160A  118A  2588  120A  118A  	goto	l3942
  3576  046B  2C6C               	line	209
  3577                           ;mainM.c: 209:                 }
  3578                           	
  3579                           l266:	
  3580  046C                     	line	210
  3581                           	
  3582                           l3942:	
  3583  046C                     ;mainM.c: 210:                 writeCharLCD(' ');
  3584                           	movlw	low(020h)
  3585  046C  3020               	fcall	_writeCharLCD
  3586  046D  160A  118A  23B4  120A  118A  	line	211
  3587                           ;mainM.c: 211:             }else if(screenCounter == 1){
  3588                           	goto	l3952
  3589  0472  2C97               	
  3590                           l264:	
  3591  0473                     	
  3592                           l3944:	
  3593  0473                     	bcf	status, 5	;RP0=0, select bank0
  3594  0473  1283               	bcf	status, 6	;RP1=0, select bank0
  3595  0474  1303               		decf	((_screenCounter)),w
  3596  0475  036D               	btfss	status,2
  3597  0476  1D03               	goto	u5781
  3598  0477  2C79               	goto	u5780
  3599  0478  2C7A               u5781:
  3600  0479                     	goto	l3952
  3601  0479  2C97               u5780:
  3602  047A                     	line	212
  3603                           	
  3604                           l3946:	
  3605  047A                     ;mainM.c: 212:                 if(mov){
  3606                           	bsf	status, 5	;RP0=1, select bank1
  3607  047A  1683               	bcf	status, 6	;RP1=0, select bank1
  3608  047B  1303               	movf	((_mov)^080h),w
  3609  047C  0837               	btfsc	status,2
  3610  047D  1903               	goto	u5791
  3611  047E  2C80               	goto	u5790
  3612  047F  2C81               u5791:
  3613  0480                     	goto	l3950
  3614  0480  2C8B               u5790:
  3615  0481                     	line	213
  3616                           	
  3617                           l3948:	
  3618  0481                     ;mainM.c: 213:                     writeStrLCD("MOVIMIENTO");
  3619                           	movlw	(low((((STR_17)-__stringbase)|8000h)))&0ffh
  3620  0481  303C               	movwf	(writeStrLCD@string)
  3621  0482  00F5               	movlw	80h
  3622  0483  3080               	movwf	(writeStrLCD@string+1)
  3623  0484  00F6               	fcall	_writeStrLCD
  3624  0485  160A  118A  2588  120A  118A  	line	214
  3625                           ;mainM.c: 214:                 }else{
  3626                           	goto	l3952
  3627  048A  2C97               	
  3628                           l269:	
  3629  048B                     	line	215
  3630                           	
  3631                           l3950:	
  3632  048B                     ;mainM.c: 215:                     writeStrLCD("SIN MOVIMIENTO");
  3633                           	movlw	(low((((STR_18)-__stringbase)|8000h)))&0ffh
  3634  048B  3038               	movwf	(writeStrLCD@string)
  3635  048C  00F5               	movlw	80h
  3636  048D  3080               	movwf	(writeStrLCD@string+1)
  3637  048E  00F6               	fcall	_writeStrLCD
  3638  048F  160A  118A  2588  120A  118A  	goto	l3952
  3639  0494  2C97               	line	216
  3640                           ;mainM.c: 216:                 }
  3641                           	
  3642                           l270:	
  3643  0495                     	goto	l3952
  3644  0495  2C97               	line	217
  3645                           ;mainM.c: 217:             }
  3646                           	
  3647                           l268:	
  3648  0496                     	goto	l3952
  3649  0496  2C97               	
  3650                           l267:	
  3651  0497                     	line	218
  3652                           	
  3653                           l3952:	
  3654  0497                     ;mainM.c: 218:             setCursorLCD(2, 1);
  3655                           	clrf	(setCursorLCD@x)
  3656  0497  01F6               	incf	(setCursorLCD@x),f
  3657  0498  0AF6               	movlw	low(02h)
  3658  0499  3002               	fcall	_setCursorLCD
  3659  049A  160A  118A  23FC  120A  118A  	line	219
  3660                           	
  3661                           l3954:	
  3662  049F                     ;mainM.c: 219:             if(screenCounter == 0){
  3663                           	bcf	status, 5	;RP0=0, select bank0
  3664  049F  1283               	bcf	status, 6	;RP1=0, select bank0
  3665  04A0  1303               	movf	((_screenCounter)),w
  3666  04A1  086D               	btfss	status,2
  3667  04A2  1D03               	goto	u5801
  3668  04A3  2CA5               	goto	u5800
  3669  04A4  2CA6               u5801:
  3670  04A5                     	goto	l3966
  3671  04A5  2CD1               u5800:
  3672  04A6                     	line	220
  3673                           	
  3674                           l3956:	
  3675  04A6                     ;mainM.c: 220:                 writeStrLCD("ALARMA ");
  3676                           	movlw	(low((((STR_19)-__stringbase)|8000h)))&0ffh
  3677  04A6  306E               	movwf	(writeStrLCD@string)
  3678  04A7  00F5               	movlw	80h
  3679  04A8  3080               	movwf	(writeStrLCD@string+1)
  3680  04A9  00F6               	fcall	_writeStrLCD
  3681  04AA  160A  118A  2588  120A  118A  	line	221
  3682                           	
  3683                           l3958:	
  3684  04AF                     ;mainM.c: 221:                 if(alarm){
  3685                           	bsf	status, 5	;RP0=1, select bank1
  3686  04AF  1683               	bcf	status, 6	;RP1=0, select bank1
  3687  04B0  1303               	movf	((_alarm)^080h),w
  3688  04B1  083E               	btfsc	status,2
  3689  04B2  1903               	goto	u5811
  3690  04B3  2CB5               	goto	u5810
  3691  04B4  2CB6               u5811:
  3692  04B5                     	goto	l3962
  3693  04B5  2CC0               u5810:
  3694  04B6                     	line	222
  3695                           	
  3696                           l3960:	
  3697  04B6                     ;mainM.c: 222:                     writeStrLCD("ACTIVA");
  3698                           	movlw	(low((((STR_20)-__stringbase)|8000h)))&0ffh
  3699  04B6  307E               	movwf	(writeStrLCD@string)
  3700  04B7  00F5               	movlw	80h
  3701  04B8  3080               	movwf	(writeStrLCD@string+1)
  3702  04B9  00F6               	fcall	_writeStrLCD
  3703  04BA  160A  118A  2588  120A  118A  	line	223
  3704                           ;mainM.c: 223:                 }else{
  3705                           	goto	l3964
  3706  04BF  2CCA               	
  3707                           l272:	
  3708  04C0                     	line	224
  3709                           	
  3710                           l3962:	
  3711  04C0                     ;mainM.c: 224:                     writeStrLCD("DESCATIVADA");
  3712                           	movlw	(low((((STR_21)-__stringbase)|8000h)))&0ffh
  3713  04C0  3062               	movwf	(writeStrLCD@string)
  3714  04C1  00F5               	movlw	80h
  3715  04C2  3080               	movwf	(writeStrLCD@string+1)
  3716  04C3  00F6               	fcall	_writeStrLCD
  3717  04C4  160A  118A  2588  120A  118A  	goto	l3964
  3718  04C9  2CCA               	line	225
  3719                           ;mainM.c: 225:                 }
  3720                           	
  3721                           l273:	
  3722  04CA                     	line	226
  3723                           	
  3724                           l3964:	
  3725  04CA                     ;mainM.c: 226:                 writeCharLCD(' ');
  3726                           	movlw	low(020h)
  3727  04CA  3020               	fcall	_writeCharLCD
  3728  04CB  160A  118A  23B4  120A  118A  	line	227
  3729                           ;mainM.c: 227:             }else if(screenCounter == 1){
  3730                           	goto	l3770
  3731  04D0  282A               	
  3732                           l271:	
  3733  04D1                     	
  3734                           l3966:	
  3735  04D1                     	bcf	status, 5	;RP0=0, select bank0
  3736  04D1  1283               	bcf	status, 6	;RP1=0, select bank0
  3737  04D2  1303               		decf	((_screenCounter)),w
  3738  04D3  036D               	btfss	status,2
  3739  04D4  1D03               	goto	u5821
  3740  04D5  2CD7               	goto	u5820
  3741  04D6  2CD8               u5821:
  3742  04D7                     	goto	l3974
  3743  04D7  2CF2               u5820:
  3744  04D8                     	line	228
  3745                           	
  3746                           l3968:	
  3747  04D8                     ;mainM.c: 228:                 if(signal){
  3748                           	movf	((_signal)),w
  3749  04D8  0878               	btfsc	status,2
  3750  04D9  1903               	goto	u5831
  3751  04DA  2CDC               	goto	u5830
  3752  04DB  2CDD               u5831:
  3753  04DC                     	goto	l3972
  3754  04DC  2CE7               u5830:
  3755  04DD                     	line	229
  3756                           	
  3757                           l3970:	
  3758  04DD                     ;mainM.c: 229:                     writeStrLCD("PUERTA ABIERTA");
  3759                           	movlw	(low((((STR_22)-__stringbase)|8000h)))&0ffh
  3760  04DD  301A               	movwf	(writeStrLCD@string)
  3761  04DE  00F5               	movlw	80h
  3762  04DF  3080               	movwf	(writeStrLCD@string+1)
  3763  04E0  00F6               	fcall	_writeStrLCD
  3764  04E1  160A  118A  2588  120A  118A  	line	230
  3765                           ;mainM.c: 230:                 }else{
  3766                           	goto	l3770
  3767  04E6  282A               	
  3768                           l276:	
  3769  04E7                     	line	231
  3770                           	
  3771                           l3972:	
  3772  04E7                     ;mainM.c: 231:                     writeStrLCD("PUERTA CERRADA");
  3773                           	movlw	(low((((STR_23)-__stringbase)|8000h)))&0ffh
  3774  04E7  300B               	movwf	(writeStrLCD@string)
  3775  04E8  00F5               	movlw	80h
  3776  04E9  3080               	movwf	(writeStrLCD@string+1)
  3777  04EA  00F6               	fcall	_writeStrLCD
  3778  04EB  160A  118A  2588  120A  118A  	goto	l3770
  3779  04F0  282A               	line	232
  3780                           ;mainM.c: 232:                 }
  3781                           	
  3782                           l277:	
  3783  04F1                     	line	233
  3784                           ;mainM.c: 233:             }else if(screenCounter == 2){
  3785                           	goto	l3770
  3786  04F1  282A               	
  3787                           l275:	
  3788  04F2                     	
  3789                           l3974:	
  3790  04F2                     		movlw	2
  3791  04F2  3002               	bcf	status, 5	;RP0=0, select bank0
  3792  04F3  1283               	bcf	status, 6	;RP1=0, select bank0
  3793  04F4  1303               	xorwf	((_screenCounter)),w
  3794  04F5  066D               	btfss	status,2
  3795  04F6  1D03               	goto	u5841
  3796  04F7  2CF9               	goto	u5840
  3797  04F8  2CFA               u5841:
  3798  04F9                     	goto	l3770
  3799  04F9  282A               u5840:
  3800  04FA                     	line	234
  3801                           	
  3802                           l3976:	
  3803  04FA                     ;mainM.c: 234:                 if(garage){
  3804                           	bsf	status, 5	;RP0=1, select bank1
  3805  04FA  1683               	bcf	status, 6	;RP1=0, select bank1
  3806  04FB  1303               	movf	((_garage)^080h),w
  3807  04FC  0833               	btfsc	status,2
  3808  04FD  1903               	goto	u5851
  3809  04FE  2D00               	goto	u5850
  3810  04FF  2D01               u5851:
  3811  0500                     	goto	l3980
  3812  0500  2D0B               u5850:
  3813  0501                     	line	235
  3814                           	
  3815                           l3978:	
  3816  0501                     ;mainM.c: 235:                     writeStrLCD("GARAGE ABIERTO");
  3817                           	movlw	(low((((STR_24)-__stringbase)|8000h)))&0ffh
  3818  0501  3047               	movwf	(writeStrLCD@string)
  3819  0502  00F5               	movlw	80h
  3820  0503  3080               	movwf	(writeStrLCD@string+1)
  3821  0504  00F6               	fcall	_writeStrLCD
  3822  0505  160A  118A  2588  120A  118A  	line	236
  3823                           ;mainM.c: 236:                 }else{
  3824                           	goto	l3770
  3825  050A  282A               	
  3826                           l280:	
  3827  050B                     	line	237
  3828                           	
  3829                           l3980:	
  3830  050B                     ;mainM.c: 237:                     writeStrLCD("GARAGE CERRADO");
  3831                           	movlw	(low((((STR_25)-__stringbase)|8000h)))&0ffh
  3832  050B  3029               	movwf	(writeStrLCD@string)
  3833  050C  00F5               	movlw	80h
  3834  050D  3080               	movwf	(writeStrLCD@string+1)
  3835  050E  00F6               	fcall	_writeStrLCD
  3836  050F  160A  118A  2588  120A  118A  	goto	l3770
  3837  0514  282A               	line	238
  3838                           ;mainM.c: 238:                 }
  3839                           	
  3840                           l281:	
  3841  0515                     	goto	l3770
  3842  0515  282A               	line	239
  3843                           ;mainM.c: 239:             }
  3844                           	
  3845                           l279:	
  3846  0516                     	goto	l3770
  3847  0516  282A               	
  3848                           l278:	
  3849  0517                     	goto	l3770
  3850  0517  282A               	
  3851                           l274:	
  3852  0518                     	goto	l3770
  3853  0518  282A               	line	240
  3854                           ;mainM.c: 240:         }
  3855                           	
  3856                           l263:	
  3857  0519                     	goto	l3770
  3858  0519  282A               	line	241
  3859                           ;mainM.c: 241:     }
  3860                           	
  3861                           l282:	
  3862  051A                     	goto	l3770
  3863  051A  282A               	
  3864                           l283:	
  3865  051B                     	line	243
  3866                           ;mainM.c: 242:     return;
  3867                           	
  3868                           l284:	
  3869  051B                     	global	start
  3870                           	ljmp	start
  3871  051B  120A  118A  280C   	opt stack 0
  3872                           GLOBAL	__end_of_main
  3873                           	__end_of_main:
  3874  051E                     	signat	_main,89
  3875                           	global	_writeIntLCD
  3876                           
  3877 ;; *************** function _writeIntLCD *****************
  3878 ;; Defined at:
  3879 ;;		line 57 in file "LCD.c"
  3880 ;; Parameters:    Size  Location     Type
  3881 ;;  numero          1    wreg     unsigned char 
  3882 ;; Auto vars:     Size  Location     Type
  3883 ;;  numero          1   29[BANK0 ] unsigned char 
  3884 ;;  buffer          4   25[BANK0 ] unsigned char [4]
  3885 ;; Return value:  Size  Location     Type
  3886 ;;                  1    wreg      void 
  3887 ;; Registers used:
  3888 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3889 ;; Tracked objects:
  3890 ;;		On entry : 0/0
  3891 ;;		On exit  : 0/0
  3892 ;;		Unchanged: 0/0
  3893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3894 ;;      Params:         0       0       0       0       0
  3895 ;;      Locals:         0       5       0       0       0
  3896 ;;      Temps:          0       3       0       0       0
  3897 ;;      Totals:         0       8       0       0       0
  3898 ;;Total ram usage:        8 bytes
  3899 ;; Hardware stack levels used:    1
  3900 ;; Hardware stack levels required when called:    4
  3901 ;; This function calls:
  3902 ;;		_sprintf
  3903 ;;		_writeStrLCD
  3904 ;; This function is called by:
  3905 ;;		_main
  3906 ;;		_writeFloat
  3907 ;; This function uses a non-reentrant model
  3908 ;;
  3909                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  3910                           	file	"LCD.c"
  3911                           	line	57
  3912                           global __ptext1
  3913                           __ptext1:	;psect for function _writeIntLCD
  3914  13DE                     psect	text1
  3915                           	file	"LCD.c"
  3916                           	line	57
  3917                           	global	__size_of_writeIntLCD
  3918                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  3919  001E                     	
  3920                           _writeIntLCD:	
  3921  13DE                     ;incstack = 0
  3922                           	opt	stack 3
  3923                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3924                           ;writeIntLCD@numero stored from wreg
  3925                           	bcf	status, 5	;RP0=0, select bank0
  3926  13DE  1283               	bcf	status, 6	;RP1=0, select bank0
  3927  13DF  1303               	movwf	(writeIntLCD@numero)
  3928  13E0  00BD               	line	59
  3929                           	
  3930                           l3584:	
  3931  13E1                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  3932                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  3933  13E1  3090               	movwf	(??_writeIntLCD+0)+0
  3934  13E2  00B6               	movf	(??_writeIntLCD+0)+0,w
  3935  13E3  0836               	movwf	(sprintf@f)
  3936  13E4  00A9               	movf	(writeIntLCD@numero),w
  3937  13E5  083D               	movwf	(??_writeIntLCD+1)+0
  3938  13E6  00B7               	clrf	(??_writeIntLCD+1)+0+1
  3939  13E7  01B8               	movf	0+(??_writeIntLCD+1)+0,w
  3940  13E8  0837               	movwf	0+(?_sprintf)+01h
  3941  13E9  00AA               	movf	1+(??_writeIntLCD+1)+0,w
  3942  13EA  0838               	movwf	1+(?_sprintf)+01h
  3943  13EB  00AB               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  3944  13EC  3039               	fcall	_sprintf
  3945  13ED  120A  158A  20CD  160A  118A  	line	60
  3946                           ;LCD.c: 60:     writeStrLCD(buffer);
  3947                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  3948  13F2  3039               	movwf	(writeStrLCD@string)
  3949  13F3  00F5               	movlw	(0x0)
  3950  13F4  3000               	movwf	(writeStrLCD@string+1)
  3951  13F5  00F6               	fcall	_writeStrLCD
  3952  13F6  160A  118A  2588  160A  118A  	line	61
  3953                           	
  3954                           l97:	
  3955  13FB                     	return
  3956  13FB  0008               	opt stack 0
  3957                           GLOBAL	__end_of_writeIntLCD
  3958                           	__end_of_writeIntLCD:
  3959  13FC                     	signat	_writeIntLCD,4217
  3960                           	global	_writeStrLCD
  3961                           
  3962 ;; *************** function _writeStrLCD *****************
  3963 ;; Defined at:
  3964 ;;		line 21 in file "LCD.c"
  3965 ;; Parameters:    Size  Location     Type
  3966 ;;  string          2    5[COMMON] PTR unsigned char 
  3967 ;;		 -> STR_25(15), STR_24(15), STR_23(15), STR_22(15), 
  3968 ;;		 -> STR_21(12), STR_20(7), STR_19(8), STR_18(15), 
  3969 ;;		 -> STR_17(11), STR_16(8), STR_15(8), STR_14(8), 
  3970 ;;		 -> STR_13(12), STR_12(15), STR_11(15), STR_10(15), 
  3971 ;;		 -> STR_9(11), STR_8(8), STR_7(8), STR_6(8), 
  3972 ;;		 -> STR_5(12), STR_4(5), STR_3(6), writeIntLCD16@buffer(5), 
  3973 ;;		 -> writeIntLCD@buffer(4), 
  3974 ;; Auto vars:     Size  Location     Type
  3975 ;;  cont            2    3[BANK0 ] int 
  3976 ;; Return value:  Size  Location     Type
  3977 ;;                  1    wreg      void 
  3978 ;; Registers used:
  3979 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3980 ;; Tracked objects:
  3981 ;;		On entry : 0/0
  3982 ;;		On exit  : 0/0
  3983 ;;		Unchanged: 0/0
  3984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3985 ;;      Params:         2       0       0       0       0
  3986 ;;      Locals:         0       2       0       0       0
  3987 ;;      Temps:          0       3       0       0       0
  3988 ;;      Totals:         2       5       0       0       0
  3989 ;;Total ram usage:        7 bytes
  3990 ;; Hardware stack levels used:    1
  3991 ;; Hardware stack levels required when called:    3
  3992 ;; This function calls:
  3993 ;;		_writeCharLCD
  3994 ;; This function is called by:
  3995 ;;		_writeIntLCD
  3996 ;;		_main
  3997 ;;		_writeIntLCD16
  3998 ;; This function uses a non-reentrant model
  3999 ;;
  4000                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4001                           	line	21
  4002                           global __ptext2
  4003                           __ptext2:	;psect for function _writeStrLCD
  4004  1588                     psect	text2
  4005                           	file	"LCD.c"
  4006                           	line	21
  4007                           	global	__size_of_writeStrLCD
  4008                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  4009  0048                     	
  4010                           _writeStrLCD:	
  4011  1588                     ;incstack = 0
  4012                           	opt	stack 4
  4013                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4014                           	line	23
  4015                           	
  4016                           l3460:	
  4017  1588                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  4018                           	bcf	status, 5	;RP0=0, select bank0
  4019  1588  1283               	bcf	status, 6	;RP1=0, select bank0
  4020  1589  1303               	clrf	(writeStrLCD@cont)
  4021  158A  01A3               	clrf	(writeStrLCD@cont+1)
  4022  158B  01A4               	goto	l3466
  4023  158C  2DB2               	
  4024                           l83:	
  4025  158D                     	line	24
  4026                           	
  4027                           l3462:	
  4028  158D                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  4029                           	movf	(writeStrLCD@cont),w
  4030  158D  0823               	addwf	(writeStrLCD@string),w
  4031  158E  0775               	movwf	(??_writeStrLCD+1)+0
  4032  158F  00A1               	movf	(writeStrLCD@string+1),w
  4033  1590  0876               	movwf	(??_writeStrLCD+0)+0
  4034  1591  00A0               	skipnc
  4035  1592  1803               	incf	(??_writeStrLCD+0)+0,f
  4036  1593  0AA0               	btfss	(writeStrLCD@cont),7
  4037  1594  1FA3               	goto	u4970
  4038  1595  2D97               	decf	(??_writeStrLCD+0)+0,f
  4039  1596  03A0               u4970:
  4040  1597                     	bcf	status, 5	;RP0=0, select bank0
  4041  1597  1283               	bcf	status, 6	;RP1=0, select bank0
  4042  1598  1303               	movf	(??_writeStrLCD+0)+0,w
  4043  1599  0820               	movwf	0+((??_writeStrLCD+1)+0)+1
  4044  159A  00A2               	movf	1+(??_writeStrLCD+1)+0,w
  4045  159B  0822               	movwf	btemp+1
  4046  159C  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  4047  159D  0821               	movwf	fsr0
  4048  159E  0084               	fcall	stringtab
  4049  159F  160A  118A  2000  160A  118A  	fcall	_writeCharLCD
  4050  15A4  160A  118A  23B4  160A  118A  	line	25
  4051                           	
  4052                           l3464:	
  4053  15A9                     ;LCD.c: 25:     }
  4054                           	movlw	01h
  4055  15A9  3001               	bcf	status, 5	;RP0=0, select bank0
  4056  15AA  1283               	bcf	status, 6	;RP1=0, select bank0
  4057  15AB  1303               	addwf	(writeStrLCD@cont),f
  4058  15AC  07A3               	skipnc
  4059  15AD  1803               	incf	(writeStrLCD@cont+1),f
  4060  15AE  0AA4               	movlw	0
  4061  15AF  3000               	addwf	(writeStrLCD@cont+1),f
  4062  15B0  07A4               	goto	l3466
  4063  15B1  2DB2               	
  4064                           l82:	
  4065  15B2                     	
  4066                           l3466:	
  4067  15B2                     	movf	(writeStrLCD@cont),w
  4068  15B2  0823               	addwf	(writeStrLCD@string),w
  4069  15B3  0775               	movwf	(??_writeStrLCD+1)+0
  4070  15B4  00A1               	movf	(writeStrLCD@string+1),w
  4071  15B5  0876               	movwf	(??_writeStrLCD+0)+0
  4072  15B6  00A0               	skipnc
  4073  15B7  1803               	incf	(??_writeStrLCD+0)+0,f
  4074  15B8  0AA0               	btfss	(writeStrLCD@cont),7
  4075  15B9  1FA3               	goto	u4980
  4076  15BA  2DBC               	decf	(??_writeStrLCD+0)+0,f
  4077  15BB  03A0               u4980:
  4078  15BC                     	bcf	status, 5	;RP0=0, select bank0
  4079  15BC  1283               	bcf	status, 6	;RP1=0, select bank0
  4080  15BD  1303               	movf	(??_writeStrLCD+0)+0,w
  4081  15BE  0820               	movwf	0+((??_writeStrLCD+1)+0)+1
  4082  15BF  00A2               	movf	1+(??_writeStrLCD+1)+0,w
  4083  15C0  0822               	movwf	btemp+1
  4084  15C1  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  4085  15C2  0821               	movwf	fsr0
  4086  15C3  0084               	fcall	stringtab
  4087  15C4  160A  118A  2000  160A  118A  	xorlw	0
  4088  15C9  3A00               	skipz
  4089  15CA  1D03               	goto	u4991
  4090  15CB  2DCD               	goto	u4990
  4091  15CC  2DCE               u4991:
  4092  15CD                     	goto	l3462
  4093  15CD  2D8D               u4990:
  4094  15CE                     	goto	l85
  4095  15CE  2DCF               	
  4096                           l84:	
  4097  15CF                     	line	26
  4098                           	
  4099                           l85:	
  4100  15CF                     	return
  4101  15CF  0008               	opt stack 0
  4102                           GLOBAL	__end_of_writeStrLCD
  4103                           	__end_of_writeStrLCD:
  4104  15D0                     	signat	_writeStrLCD,4217
  4105                           	global	_writeCharLCD
  4106                           
  4107 ;; *************** function _writeCharLCD *****************
  4108 ;; Defined at:
  4109 ;;		line 28 in file "LCD.c"
  4110 ;; Parameters:    Size  Location     Type
  4111 ;;  character       1    wreg     unsigned char 
  4112 ;; Auto vars:     Size  Location     Type
  4113 ;;  character       1    4[COMMON] unsigned char 
  4114 ;; Return value:  Size  Location     Type
  4115 ;;                  1    wreg      void 
  4116 ;; Registers used:
  4117 ;;		wreg
  4118 ;; Tracked objects:
  4119 ;;		On entry : 0/0
  4120 ;;		On exit  : 0/0
  4121 ;;		Unchanged: 0/0
  4122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4123 ;;      Params:         0       0       0       0       0
  4124 ;;      Locals:         1       0       0       0       0
  4125 ;;      Temps:          1       0       0       0       0
  4126 ;;      Totals:         2       0       0       0       0
  4127 ;;Total ram usage:        2 bytes
  4128 ;; Hardware stack levels used:    1
  4129 ;; Hardware stack levels required when called:    2
  4130 ;; This function calls:
  4131 ;;		Nothing
  4132 ;; This function is called by:
  4133 ;;		_writeStrLCD
  4134 ;;		_main
  4135 ;;		_writeFloat
  4136 ;; This function uses a non-reentrant model
  4137 ;;
  4138                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4139                           	line	28
  4140                           global __ptext3
  4141                           __ptext3:	;psect for function _writeCharLCD
  4142  13B4                     psect	text3
  4143                           	file	"LCD.c"
  4144                           	line	28
  4145                           	global	__size_of_writeCharLCD
  4146                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  4147  000F                     	
  4148                           _writeCharLCD:	
  4149  13B4                     ;incstack = 0
  4150                           	opt	stack 4
  4151                           ; Regs used in _writeCharLCD: [wreg]
  4152                           ;writeCharLCD@character stored from wreg
  4153                           	movwf	(writeCharLCD@character)
  4154  13B4  00F4               	line	29
  4155                           	
  4156                           l2192:	
  4157  13B5                     ;LCD.c: 29:    RD0 = 1;
  4158                           	bcf	status, 5	;RP0=0, select bank0
  4159  13B5  1283               	bcf	status, 6	;RP1=0, select bank0
  4160  13B6  1303               	bsf	(64/8),(64)&7	;volatile
  4161  13B7  1408               	line	30
  4162                           	
  4163                           l2194:	
  4164  13B8                     ;LCD.c: 30:    PORTB = character;
  4165                           	movf	(writeCharLCD@character),w
  4166  13B8  0874               	movwf	(6)	;volatile
  4167  13B9  0086               	line	31
  4168                           	
  4169                           l2196:	
  4170  13BA                     ;LCD.c: 31:    RD1 = 1;
  4171                           	bsf	(65/8),(65)&7	;volatile
  4172  13BA  1488               	line	32
  4173                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4174                           	opt asmopt_push
  4175                           opt asmopt_off
  4176                           	movlw	13
  4177  13BB  300D               movwf	((??_writeCharLCD+0)+0),f
  4178  13BC  00F3               	u5897:
  4179  13BD                     decfsz	(??_writeCharLCD+0)+0,f
  4180  13BD  0BF3               	goto	u5897
  4181  13BE  2BBD               opt asmopt_pop
  4182                           
  4183                           	line	33
  4184                           	
  4185                           l2198:	
  4186  13BF                     ;LCD.c: 33:    RD1 = 0;
  4187                           	bcf	status, 5	;RP0=0, select bank0
  4188  13BF  1283               	bcf	status, 6	;RP1=0, select bank0
  4189  13C0  1303               	bcf	(65/8),(65)&7	;volatile
  4190  13C1  1088               	line	34
  4191                           	
  4192                           l88:	
  4193  13C2                     	return
  4194  13C2  0008               	opt stack 0
  4195                           GLOBAL	__end_of_writeCharLCD
  4196                           	__end_of_writeCharLCD:
  4197  13C3                     	signat	_writeCharLCD,4217
  4198                           	global	_sprintf
  4199                           
  4200 ;; *************** function _sprintf *****************
  4201 ;; Defined at:
  4202 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4203 ;; Parameters:    Size  Location     Type
  4204 ;;  sp              1    wreg     PTR unsigned char 
  4205 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  4206 ;;  f               1    9[BANK0 ] PTR const unsigned char 
  4207 ;;		 -> STR_2(3), STR_1(3), 
  4208 ;; Auto vars:     Size  Location     Type
  4209 ;;  sp              1   20[BANK0 ] PTR unsigned char 
  4210 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  4211 ;;  tmpval          4    0        struct .
  4212 ;;  val             2   18[BANK0 ] unsigned int 
  4213 ;;  cp              2    0        PTR const unsigned char 
  4214 ;;  len             2    0        unsigned int 
  4215 ;;  c               1   21[BANK0 ] unsigned char 
  4216 ;;  prec            1   17[BANK0 ] char 
  4217 ;;  flag            1   16[BANK0 ] unsigned char 
  4218 ;;  ap              1   15[BANK0 ] PTR void [1]
  4219 ;;		 -> ?_sprintf(2), 
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  2    9[BANK0 ] int 
  4222 ;; Registers used:
  4223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4229 ;;      Params:         0       3       0       0       0
  4230 ;;      Locals:         0       7       0       0       0
  4231 ;;      Temps:          0       3       0       0       0
  4232 ;;      Totals:         0      13       0       0       0
  4233 ;;Total ram usage:       13 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    3
  4236 ;; This function calls:
  4237 ;;		___lwdiv
  4238 ;;		___lwmod
  4239 ;; This function is called by:
  4240 ;;		_writeIntLCD
  4241 ;;		_writeIntLCD16
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4245                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4246                           	line	500
  4247                           global __ptext4
  4248                           __ptext4:	;psect for function _sprintf
  4249  08CD                     psect	text4
  4250                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4251                           	line	500
  4252                           	global	__size_of_sprintf
  4253                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4254  0102                     	
  4255                           _sprintf:	
  4256  08CD                     ;incstack = 0
  4257                           	opt	stack 3
  4258                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4259                           ;sprintf@sp stored from wreg
  4260                           	bcf	status, 5	;RP0=0, select bank0
  4261  08CD  1283               	bcf	status, 6	;RP1=0, select bank0
  4262  08CE  1303               	movwf	(sprintf@sp)
  4263  08CF  00B4               	line	545
  4264                           	
  4265                           l3486:	
  4266  08D0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  4267                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  4268  08D0  302A               	movwf	(??_sprintf+0)+0
  4269  08D1  00AC               	movf	(??_sprintf+0)+0,w
  4270  08D2  082C               	movwf	(sprintf@ap)
  4271  08D3  00AF               	line	548
  4272                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4273                           	goto	l3538
  4274  08D4  29B5               	
  4275                           l437:	
  4276  08D5                     	line	550
  4277                           	
  4278                           l3488:	
  4279  08D5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  4280                           		movlw	37
  4281  08D5  3025               	xorwf	((sprintf@c)),w
  4282  08D6  0635               	btfsc	status,2
  4283  08D7  1903               	goto	u5001
  4284  08D8  28DA               	goto	u5000
  4285  08D9  28DB               u5001:
  4286  08DA                     	goto	l3494
  4287  08DA  28E7               u5000:
  4288  08DB                     	line	553
  4289                           	
  4290                           l3490:	
  4291  08DB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  4292                           	movf	(sprintf@c),w
  4293  08DB  0835               	movwf	(??_sprintf+0)+0
  4294  08DC  00AC               	movf	(sprintf@sp),w
  4295  08DD  0834               	movwf	fsr0
  4296  08DE  0084               	movf	(??_sprintf+0)+0,w
  4297  08DF  082C               	bcf	status, 7	;select IRP bank0
  4298  08E0  1383               	movwf	indf
  4299  08E1  0080               	
  4300                           l3492:	
  4301  08E2                     	movlw	low(01h)
  4302  08E2  3001               	movwf	(??_sprintf+0)+0
  4303  08E3  00AC               	movf	(??_sprintf+0)+0,w
  4304  08E4  082C               	addwf	(sprintf@sp),f
  4305  08E5  07B4               	line	554
  4306                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  4307                           	goto	l3538
  4308  08E6  29B5               	line	555
  4309                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  4310                           	
  4311                           l438:	
  4312  08E7                     	line	560
  4313                           	
  4314                           l3494:	
  4315  08E7                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  4316                           	clrf	(sprintf@flag)
  4317  08E7  01B0               	line	654
  4318                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  4319                           	goto	l3498
  4320  08E8  28EE               	line	656
  4321                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  4322                           	
  4323                           l440:	
  4324  08E9                     	line	657
  4325                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  4326                           	goto	l3540
  4327  08E9  29C9               	line	716
  4328                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  4329                           	
  4330                           l442:	
  4331  08EA                     	goto	l3500
  4332  08EA  290B               	line	717
  4333                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  4334                           	
  4335                           l443:	
  4336  08EB                     	line	718
  4337                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  4338                           	goto	l3500
  4339  08EB  290B               	line	821
  4340                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  4341                           	
  4342                           l445:	
  4343  08EC                     	line	832
  4344                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  4345                           	goto	l3538
  4346  08EC  29B5               	line	841
  4347                           	
  4348                           l3496:	
  4349  08ED                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  4350                           	goto	l3500
  4351  08ED  290B               	
  4352                           l439:	
  4353  08EE                     	
  4354                           l3498:	
  4355  08EE                     	movlw	01h
  4356  08EE  3001               	addwf	(sprintf@f),f
  4357  08EF  07A9               	movlw	-01h
  4358  08F0  30FF               	addwf	(sprintf@f),w
  4359  08F1  0729               	movwf	fsr0
  4360  08F2  0084               	fcall	stringdir
  4361  08F3  160A  118A  200A  120A  158A  	movwf	(sprintf@c)
  4362  08F8  00B5               	movwf	(??_sprintf+0)+0
  4363  08F9  00AC               	clrf	(??_sprintf+0)+0+1
  4364  08FA  01AD               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4365                           ; Switch size 1, requested type "space"
  4366                           ; Number of cases is 1, Range of values is 0 to 0
  4367                           ; switch strategies available:
  4368                           ; Name         Instructions Cycles
  4369                           ; simple_byte            4     3 (average)
  4370                           ; direct_byte           11     8 (fixed)
  4371                           ; jumptable            260     6 (fixed)
  4372                           ;	Chosen strategy is simple_byte
  4373                           
  4374                           	movf 1+(??_sprintf+0)+0,w
  4375  08FB  082D               	opt asmopt_push
  4376                           	opt asmopt_off
  4377                           	xorlw	0^0	; case 0
  4378  08FC  3A00               	skipnz
  4379  08FD  1903               	goto	l4002
  4380  08FE  2900               	goto	l3538
  4381  08FF  29B5               	opt asmopt_pop
  4382                           	
  4383                           l4002:	
  4384  0900                     ; Switch size 1, requested type "space"
  4385                           ; Number of cases is 3, Range of values is 0 to 105
  4386                           ; switch strategies available:
  4387                           ; Name         Instructions Cycles
  4388                           ; simple_byte           10     6 (average)
  4389                           ; jumptable            260     6 (fixed)
  4390                           ;	Chosen strategy is simple_byte
  4391                           
  4392                           	movf 0+(??_sprintf+0)+0,w
  4393  0900  082C               	opt asmopt_push
  4394                           	opt asmopt_off
  4395                           	xorlw	0^0	; case 0
  4396  0901  3A00               	skipnz
  4397  0902  1903               	goto	l3540
  4398  0903  29C9               	xorlw	100^0	; case 100
  4399  0904  3A64               	skipnz
  4400  0905  1903               	goto	l3500
  4401  0906  290B               	xorlw	105^100	; case 105
  4402  0907  3A0D               	skipnz
  4403  0908  1903               	goto	l3500
  4404  0909  290B               	goto	l3538
  4405  090A  29B5               	opt asmopt_pop
  4406                           
  4407                           	
  4408                           l444:	
  4409  090B                     	line	1278
  4410                           	
  4411                           l3500:	
  4412  090B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4413                           	movf	(sprintf@ap),w
  4414  090B  082F               	movwf	fsr0
  4415  090C  0084               	bcf	status, 7	;select IRP bank0
  4416  090D  1383               	movf	indf,w
  4417  090E  0800               	movwf	(sprintf@val)
  4418  090F  00B2               	incf	fsr0,f
  4419  0910  0A84               	movf	indf,w
  4420  0911  0800               	movwf	(sprintf@val+1)
  4421  0912  00B3               	
  4422                           l3502:	
  4423  0913                     	movlw	low(02h)
  4424  0913  3002               	movwf	(??_sprintf+0)+0
  4425  0914  00AC               	movf	(??_sprintf+0)+0,w
  4426  0915  082C               	addwf	(sprintf@ap),f
  4427  0916  07AF               	line	1280
  4428                           	
  4429                           l3504:	
  4430  0917                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  4431                           	btfss	(sprintf@val+1),7
  4432  0917  1FB3               	goto	u5011
  4433  0918  291A               	goto	u5010
  4434  0919  291B               u5011:
  4435  091A                     	goto	l3510
  4436  091A  2925               u5010:
  4437  091B                     	line	1281
  4438                           	
  4439                           l3506:	
  4440  091B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  4441                           	movlw	low(03h)
  4442  091B  3003               	movwf	(??_sprintf+0)+0
  4443  091C  00AC               	movf	(??_sprintf+0)+0,w
  4444  091D  082C               	iorwf	(sprintf@flag),f
  4445  091E  04B0               	line	1282
  4446                           	
  4447                           l3508:	
  4448  091F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  4449                           	comf	(sprintf@val),f
  4450  091F  09B2               	comf	(sprintf@val+1),f
  4451  0920  09B3               	incf	(sprintf@val),f
  4452  0921  0AB2               	skipnz
  4453  0922  1903               	incf	(sprintf@val+1),f
  4454  0923  0AB3               	goto	l3510
  4455  0924  2925               	line	1283
  4456                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  4457                           	
  4458                           l446:	
  4459  0925                     	line	1324
  4460                           	
  4461                           l3510:	
  4462  0925                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4463                           	clrf	(sprintf@c)
  4464  0925  01B5               	incf	(sprintf@c),f
  4465  0926  0AB5               	
  4466                           l3512:	
  4467  0927                     		movlw	5
  4468  0927  3005               	xorwf	((sprintf@c)),w
  4469  0928  0635               	btfss	status,2
  4470  0929  1D03               	goto	u5021
  4471  092A  292C               	goto	u5020
  4472  092B  292D               u5021:
  4473  092C                     	goto	l3516
  4474  092C  292F               u5020:
  4475  092D                     	goto	l3522
  4476  092D  2957               	
  4477                           l3514:	
  4478  092E                     	goto	l3522
  4479  092E  2957               	
  4480                           l447:	
  4481  092F                     	line	1325
  4482                           	
  4483                           l3516:	
  4484  092F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  4485                           	movf	(sprintf@c),w
  4486  092F  0835               	movwf	(??_sprintf+0)+0
  4487  0930  00AC               	addwf	(??_sprintf+0)+0,w
  4488  0931  072C               	addlw	low((((_dpowers)-__stringbase)|8000h))
  4489  0932  3E01               	movwf	fsr0
  4490  0933  0084               	fcall	stringdir
  4491  0934  160A  118A  200A  120A  158A  	movwf	(??_sprintf+1)+0
  4492  0939  00AD               	fcall	stringdir
  4493  093A  160A  118A  200A  120A  158A  	movwf	(??_sprintf+1)+0+1
  4494  093F  00AE               	movf	1+(??_sprintf+1)+0,w
  4495  0940  082E               	subwf	(sprintf@val+1),w
  4496  0941  0233               	skipz
  4497  0942  1D03               	goto	u5035
  4498  0943  2946               	movf	0+(??_sprintf+1)+0,w
  4499  0944  082D               	subwf	(sprintf@val),w
  4500  0945  0232               u5035:
  4501  0946                     	skipnc
  4502  0946  1803               	goto	u5031
  4503  0947  2949               	goto	u5030
  4504  0948  294A               u5031:
  4505  0949                     	goto	l3520
  4506  0949  294C               u5030:
  4507  094A                     	goto	l3522
  4508  094A  2957               	line	1326
  4509                           	
  4510                           l3518:	
  4511  094B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  4512                           	goto	l3522
  4513  094B  2957               	
  4514                           l449:	
  4515  094C                     	
  4516                           l3520:	
  4517  094C                     	movlw	low(01h)
  4518  094C  3001               	movwf	(??_sprintf+0)+0
  4519  094D  00AC               	movf	(??_sprintf+0)+0,w
  4520  094E  082C               	addwf	(sprintf@c),f
  4521  094F  07B5               		movlw	5
  4522  0950  3005               	xorwf	((sprintf@c)),w
  4523  0951  0635               	btfss	status,2
  4524  0952  1D03               	goto	u5041
  4525  0953  2955               	goto	u5040
  4526  0954  2956               u5041:
  4527  0955                     	goto	l3516
  4528  0955  292F               u5040:
  4529  0956                     	goto	l3522
  4530  0956  2957               	
  4531                           l448:	
  4532  0957                     	line	1457
  4533                           	
  4534                           l3522:	
  4535  0957                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  4536                           	movf	(sprintf@flag),w
  4537  0957  0830               	andlw	03h
  4538  0958  3903               	btfsc	status,2
  4539  0959  1903               	goto	u5051
  4540  095A  295C               	goto	u5050
  4541  095B  295D               u5051:
  4542  095C                     	goto	l3528
  4543  095C  2969               u5050:
  4544  095D                     	line	1458
  4545                           	
  4546                           l3524:	
  4547  095D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  4548                           	movlw	low(02Dh)
  4549  095D  302D               	movwf	(??_sprintf+0)+0
  4550  095E  00AC               	movf	(sprintf@sp),w
  4551  095F  0834               	movwf	fsr0
  4552  0960  0084               	movf	(??_sprintf+0)+0,w
  4553  0961  082C               	bcf	status, 7	;select IRP bank0
  4554  0962  1383               	movwf	indf
  4555  0963  0080               	
  4556                           l3526:	
  4557  0964                     	movlw	low(01h)
  4558  0964  3001               	movwf	(??_sprintf+0)+0
  4559  0965  00AC               	movf	(??_sprintf+0)+0,w
  4560  0966  082C               	addwf	(sprintf@sp),f
  4561  0967  07B4               	goto	l3528
  4562  0968  2969               	
  4563                           l450:	
  4564  0969                     	line	1491
  4565                           	
  4566                           l3528:	
  4567  0969                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  4568                           	movf	(sprintf@c),w
  4569  0969  0835               	movwf	(??_sprintf+0)+0
  4570  096A  00AC               	movf	(??_sprintf+0)+0,w
  4571  096B  082C               	movwf	(sprintf@prec)
  4572  096C  00B1               	line	1493
  4573                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4574                           	goto	l3536
  4575  096D  29AA               	
  4576                           l452:	
  4577  096E                     	line	1508
  4578                           	
  4579                           l3530:	
  4580  096E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  4581                           	movlw	0Ah
  4582  096E  300A               	movwf	(___lwmod@divisor)
  4583  096F  00A3               	movlw	0
  4584  0970  3000               	movwf	((___lwmod@divisor))+1
  4585  0971  00A4               	movf	(sprintf@prec),w
  4586  0972  0831               	movwf	(??_sprintf+0)+0
  4587  0973  00AC               	addwf	(??_sprintf+0)+0,w
  4588  0974  072C               	addlw	low((((_dpowers)-__stringbase)|8000h))
  4589  0975  3E01               	movwf	fsr0
  4590  0976  0084               	fcall	stringdir
  4591  0977  160A  118A  200A  120A  158A  	movwf	(___lwdiv@divisor)
  4592  097C  00F3               	fcall	stringdir
  4593  097D  160A  118A  200A  120A  158A  	movwf	(___lwdiv@divisor+1)
  4594  0982  00F4               	movf	(sprintf@val+1),w
  4595  0983  0833               	movwf	(___lwdiv@dividend+1)
  4596  0984  00F6               	movf	(sprintf@val),w
  4597  0985  0832               	movwf	(___lwdiv@dividend)
  4598  0986  00F5               	fcall	___lwdiv
  4599  0987  160A  118A  25D0  120A  158A  	movf	(1+(?___lwdiv)),w
  4600  098C  0874               	bcf	status, 5	;RP0=0, select bank0
  4601  098D  1283               	bcf	status, 6	;RP1=0, select bank0
  4602  098E  1303               	movwf	(___lwmod@dividend+1)
  4603  098F  00A6               	movf	(0+(?___lwdiv)),w
  4604  0990  0873               	movwf	(___lwmod@dividend)
  4605  0991  00A5               	fcall	___lwmod
  4606  0992  160A  118A  2545  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  4607  0997  1283               	bcf	status, 6	;RP1=0, select bank0
  4608  0998  1303               	movf	(0+(?___lwmod)),w
  4609  0999  0823               	addlw	030h
  4610  099A  3E30               	movwf	(??_sprintf+1)+0
  4611  099B  00AD               	movf	(??_sprintf+1)+0,w
  4612  099C  082D               	movwf	(sprintf@c)
  4613  099D  00B5               	line	1543
  4614                           	
  4615                           l3532:	
  4616  099E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  4617                           	movf	(sprintf@c),w
  4618  099E  0835               	movwf	(??_sprintf+0)+0
  4619  099F  00AC               	movf	(sprintf@sp),w
  4620  09A0  0834               	movwf	fsr0
  4621  09A1  0084               	movf	(??_sprintf+0)+0,w
  4622  09A2  082C               	bcf	status, 7	;select IRP bank0
  4623  09A3  1383               	movwf	indf
  4624  09A4  0080               	
  4625                           l3534:	
  4626  09A5                     	movlw	low(01h)
  4627  09A5  3001               	movwf	(??_sprintf+0)+0
  4628  09A6  00AC               	movf	(??_sprintf+0)+0,w
  4629  09A7  082C               	addwf	(sprintf@sp),f
  4630  09A8  07B4               	goto	l3536
  4631  09A9  29AA               	line	1544
  4632                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  4633                           	
  4634                           l451:	
  4635  09AA                     	line	1493
  4636                           	
  4637                           l3536:	
  4638  09AA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4639                           	movlw	low(-1)
  4640  09AA  30FF               	movwf	(??_sprintf+0)+0
  4641  09AB  00AC               	movf	(??_sprintf+0)+0,w
  4642  09AC  082C               	addwf	(sprintf@prec),f
  4643  09AD  07B1               		incf	(((sprintf@prec))),w
  4644  09AE  0A31               	btfss	status,2
  4645  09AF  1D03               	goto	u5061
  4646  09B0  29B2               	goto	u5060
  4647  09B1  29B3               u5061:
  4648  09B2                     	goto	l3530
  4649  09B2  296E               u5060:
  4650  09B3                     	goto	l3538
  4651  09B3  29B5               	
  4652                           l453:	
  4653  09B4                     	goto	l3538
  4654  09B4  29B5               	line	1552
  4655                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  4656                           	
  4657                           l436:	
  4658  09B5                     	line	548
  4659                           	
  4660                           l3538:	
  4661  09B5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4662                           	movlw	01h
  4663  09B5  3001               	addwf	(sprintf@f),f
  4664  09B6  07A9               	movlw	-01h
  4665  09B7  30FF               	addwf	(sprintf@f),w
  4666  09B8  0729               	movwf	fsr0
  4667  09B9  0084               	fcall	stringdir
  4668  09BA  160A  118A  200A  120A  158A  	movwf	(??_sprintf+0)+0
  4669  09BF  00AC               	movf	(??_sprintf+0)+0,w
  4670  09C0  082C               	movwf	(sprintf@c)
  4671  09C1  00B5               	movf	(((sprintf@c))),w
  4672  09C2  0835               	btfss	status,2
  4673  09C3  1D03               	goto	u5071
  4674  09C4  29C6               	goto	u5070
  4675  09C5  29C7               u5071:
  4676  09C6                     	goto	l3488
  4677  09C6  28D5               u5070:
  4678  09C7                     	goto	l3540
  4679  09C7  29C9               	
  4680                           l454:	
  4681  09C8                     	goto	l3540
  4682  09C8  29C9               	line	1554
  4683                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  4684                           	
  4685                           l441:	
  4686  09C9                     	line	1557
  4687                           	
  4688                           l3540:	
  4689  09C9                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  4690                           	movf	(sprintf@sp),w
  4691  09C9  0834               	movwf	fsr0
  4692  09CA  0084               	bcf	status, 7	;select IRP bank0
  4693  09CB  1383               	clrf	indf
  4694  09CC  0180               	goto	l455
  4695  09CD  29CE               	line	1559
  4696                           	
  4697                           l3542:	
  4698  09CE                     	line	1560
  4699                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  4700                           	
  4701                           l455:	
  4702  09CE                     	return
  4703  09CE  0008               	opt stack 0
  4704                           GLOBAL	__end_of_sprintf
  4705                           	__end_of_sprintf:
  4706  09CF                     	signat	_sprintf,4698
  4707                           	global	___lwmod
  4708                           
  4709 ;; *************** function ___lwmod *****************
  4710 ;; Defined at:
  4711 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4712 ;; Parameters:    Size  Location     Type
  4713 ;;  divisor         2    3[BANK0 ] unsigned int 
  4714 ;;  dividend        2    5[BANK0 ] unsigned int 
  4715 ;; Auto vars:     Size  Location     Type
  4716 ;;  counter         1    8[BANK0 ] unsigned char 
  4717 ;; Return value:  Size  Location     Type
  4718 ;;                  2    3[BANK0 ] unsigned int 
  4719 ;; Registers used:
  4720 ;;		wreg, status,2, status,0
  4721 ;; Tracked objects:
  4722 ;;		On entry : 0/0
  4723 ;;		On exit  : 0/0
  4724 ;;		Unchanged: 0/0
  4725 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4726 ;;      Params:         0       4       0       0       0
  4727 ;;      Locals:         0       1       0       0       0
  4728 ;;      Temps:          0       1       0       0       0
  4729 ;;      Totals:         0       6       0       0       0
  4730 ;;Total ram usage:        6 bytes
  4731 ;; Hardware stack levels used:    1
  4732 ;; Hardware stack levels required when called:    2
  4733 ;; This function calls:
  4734 ;;		Nothing
  4735 ;; This function is called by:
  4736 ;;		_sprintf
  4737 ;; This function uses a non-reentrant model
  4738 ;;
  4739                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  4740                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4741                           	line	5
  4742                           global __ptext5
  4743                           __ptext5:	;psect for function ___lwmod
  4744  1545                     psect	text5
  4745                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  4746                           	line	5
  4747                           	global	__size_of___lwmod
  4748                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  4749  0043                     	
  4750                           ___lwmod:	
  4751  1545                     ;incstack = 0
  4752                           	opt	stack 3
  4753                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4754                           	line	12
  4755                           	
  4756                           l2250:	
  4757  1545                     	bcf	status, 5	;RP0=0, select bank0
  4758  1545  1283               	bcf	status, 6	;RP1=0, select bank0
  4759  1546  1303               	movf	((___lwmod@divisor)),w
  4760  1547  0823               iorwf	((___lwmod@divisor+1)),w
  4761  1548  0424               	btfsc	status,2
  4762  1549  1903               	goto	u2541
  4763  154A  2D4C               	goto	u2540
  4764  154B  2D4D               u2541:
  4765  154C                     	goto	l2268
  4766  154C  2D82               u2540:
  4767  154D                     	line	13
  4768                           	
  4769                           l2252:	
  4770  154D                     	clrf	(___lwmod@counter)
  4771  154D  01A8               	incf	(___lwmod@counter),f
  4772  154E  0AA8               	line	14
  4773                           	goto	l2258
  4774  154F  2D5C               	
  4775                           l736:	
  4776  1550                     	line	15
  4777                           	
  4778                           l2254:	
  4779  1550                     	movlw	01h
  4780  1550  3001               	
  4781                           u2555:
  4782  1551                     	clrc
  4783  1551  1003               	rlf	(___lwmod@divisor),f
  4784  1552  0DA3               	rlf	(___lwmod@divisor+1),f
  4785  1553  0DA4               	addlw	-1
  4786  1554  3EFF               	skipz
  4787  1555  1D03               	goto	u2555
  4788  1556  2D51               	line	16
  4789                           	
  4790                           l2256:	
  4791  1557                     	movlw	low(01h)
  4792  1557  3001               	movwf	(??___lwmod+0)+0
  4793  1558  00A7               	movf	(??___lwmod+0)+0,w
  4794  1559  0827               	addwf	(___lwmod@counter),f
  4795  155A  07A8               	goto	l2258
  4796  155B  2D5C               	line	17
  4797                           	
  4798                           l735:	
  4799  155C                     	line	14
  4800                           	
  4801                           l2258:	
  4802  155C                     	btfss	(___lwmod@divisor+1),(15)&7
  4803  155C  1FA4               	goto	u2561
  4804  155D  2D5F               	goto	u2560
  4805  155E  2D60               u2561:
  4806  155F                     	goto	l2254
  4807  155F  2D50               u2560:
  4808  1560                     	goto	l2260
  4809  1560  2D62               	
  4810                           l737:	
  4811  1561                     	goto	l2260
  4812  1561  2D62               	line	18
  4813                           	
  4814                           l738:	
  4815  1562                     	line	19
  4816                           	
  4817                           l2260:	
  4818  1562                     	movf	(___lwmod@divisor+1),w
  4819  1562  0824               	subwf	(___lwmod@dividend+1),w
  4820  1563  0226               	skipz
  4821  1564  1D03               	goto	u2575
  4822  1565  2D68               	movf	(___lwmod@divisor),w
  4823  1566  0823               	subwf	(___lwmod@dividend),w
  4824  1567  0225               u2575:
  4825  1568                     	skipc
  4826  1568  1C03               	goto	u2571
  4827  1569  2D6B               	goto	u2570
  4828  156A  2D6C               u2571:
  4829  156B                     	goto	l2264
  4830  156B  2D73               u2570:
  4831  156C                     	line	20
  4832                           	
  4833                           l2262:	
  4834  156C                     	movf	(___lwmod@divisor),w
  4835  156C  0823               	subwf	(___lwmod@dividend),f
  4836  156D  02A5               	movf	(___lwmod@divisor+1),w
  4837  156E  0824               	skipc
  4838  156F  1C03               	decf	(___lwmod@dividend+1),f
  4839  1570  03A6               	subwf	(___lwmod@dividend+1),f
  4840  1571  02A6               	goto	l2264
  4841  1572  2D73               	
  4842                           l739:	
  4843  1573                     	line	21
  4844                           	
  4845                           l2264:	
  4846  1573                     	movlw	01h
  4847  1573  3001               	
  4848                           u2585:
  4849  1574                     	clrc
  4850  1574  1003               	rrf	(___lwmod@divisor+1),f
  4851  1575  0CA4               	rrf	(___lwmod@divisor),f
  4852  1576  0CA3               	addlw	-1
  4853  1577  3EFF               	skipz
  4854  1578  1D03               	goto	u2585
  4855  1579  2D74               	line	22
  4856                           	
  4857                           l2266:	
  4858  157A                     	movlw	01h
  4859  157A  3001               	subwf	(___lwmod@counter),f
  4860  157B  02A8               	btfss	status,2
  4861  157C  1D03               	goto	u2591
  4862  157D  2D7F               	goto	u2590
  4863  157E  2D80               u2591:
  4864  157F                     	goto	l2260
  4865  157F  2D62               u2590:
  4866  1580                     	goto	l2268
  4867  1580  2D82               	
  4868                           l740:	
  4869  1581                     	goto	l2268
  4870  1581  2D82               	line	23
  4871                           	
  4872                           l734:	
  4873  1582                     	line	24
  4874                           	
  4875                           l2268:	
  4876  1582                     	movf	(___lwmod@dividend+1),w
  4877  1582  0826               	movwf	(?___lwmod+1)
  4878  1583  00A4               	movf	(___lwmod@dividend),w
  4879  1584  0825               	movwf	(?___lwmod)
  4880  1585  00A3               	goto	l741
  4881  1586  2D87               	
  4882                           l2270:	
  4883  1587                     	line	25
  4884                           	
  4885                           l741:	
  4886  1587                     	return
  4887  1587  0008               	opt stack 0
  4888                           GLOBAL	__end_of___lwmod
  4889                           	__end_of___lwmod:
  4890  1588                     	signat	___lwmod,8314
  4891                           	global	___lwdiv
  4892                           
  4893 ;; *************** function ___lwdiv *****************
  4894 ;; Defined at:
  4895 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4896 ;; Parameters:    Size  Location     Type
  4897 ;;  divisor         2    3[COMMON] unsigned int 
  4898 ;;  dividend        2    5[COMMON] unsigned int 
  4899 ;; Auto vars:     Size  Location     Type
  4900 ;;  quotient        2    1[BANK0 ] unsigned int 
  4901 ;;  counter         1    0[BANK0 ] unsigned char 
  4902 ;; Return value:  Size  Location     Type
  4903 ;;                  2    3[COMMON] unsigned int 
  4904 ;; Registers used:
  4905 ;;		wreg, status,2, status,0
  4906 ;; Tracked objects:
  4907 ;;		On entry : 0/0
  4908 ;;		On exit  : 0/0
  4909 ;;		Unchanged: 0/0
  4910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4911 ;;      Params:         4       0       0       0       0
  4912 ;;      Locals:         0       3       0       0       0
  4913 ;;      Temps:          1       0       0       0       0
  4914 ;;      Totals:         5       3       0       0       0
  4915 ;;Total ram usage:        8 bytes
  4916 ;; Hardware stack levels used:    1
  4917 ;; Hardware stack levels required when called:    2
  4918 ;; This function calls:
  4919 ;;		Nothing
  4920 ;; This function is called by:
  4921 ;;		_sprintf
  4922 ;; This function uses a non-reentrant model
  4923 ;;
  4924                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  4925                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4926                           	line	5
  4927                           global __ptext6
  4928                           __ptext6:	;psect for function ___lwdiv
  4929  15D0                     psect	text6
  4930                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  4931                           	line	5
  4932                           	global	__size_of___lwdiv
  4933                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  4934  004D                     	
  4935                           ___lwdiv:	
  4936  15D0                     ;incstack = 0
  4937                           	opt	stack 3
  4938                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4939                           	line	13
  4940                           	
  4941                           l3416:	
  4942  15D0                     	bcf	status, 5	;RP0=0, select bank0
  4943  15D0  1283               	bcf	status, 6	;RP1=0, select bank0
  4944  15D1  1303               	clrf	(___lwdiv@quotient)
  4945  15D2  01A1               	clrf	(___lwdiv@quotient+1)
  4946  15D3  01A2               	line	14
  4947                           	
  4948                           l3418:	
  4949  15D4                     	movf	((___lwdiv@divisor)),w
  4950  15D4  0873               iorwf	((___lwdiv@divisor+1)),w
  4951  15D5  0474               	btfsc	status,2
  4952  15D6  1903               	goto	u4871
  4953  15D7  2DD9               	goto	u4870
  4954  15D8  2DDA               u4871:
  4955  15D9                     	goto	l3438
  4956  15D9  2E17               u4870:
  4957  15DA                     	line	15
  4958                           	
  4959                           l3420:	
  4960  15DA                     	clrf	(___lwdiv@counter)
  4961  15DA  01A0               	incf	(___lwdiv@counter),f
  4962  15DB  0AA0               	line	16
  4963                           	goto	l3426
  4964  15DC  2DE9               	
  4965                           l726:	
  4966  15DD                     	line	17
  4967                           	
  4968                           l3422:	
  4969  15DD                     	movlw	01h
  4970  15DD  3001               	
  4971                           u4885:
  4972  15DE                     	clrc
  4973  15DE  1003               	rlf	(___lwdiv@divisor),f
  4974  15DF  0DF3               	rlf	(___lwdiv@divisor+1),f
  4975  15E0  0DF4               	addlw	-1
  4976  15E1  3EFF               	skipz
  4977  15E2  1D03               	goto	u4885
  4978  15E3  2DDE               	line	18
  4979                           	
  4980                           l3424:	
  4981  15E4                     	movlw	low(01h)
  4982  15E4  3001               	movwf	(??___lwdiv+0)+0
  4983  15E5  00F7               	movf	(??___lwdiv+0)+0,w
  4984  15E6  0877               	addwf	(___lwdiv@counter),f
  4985  15E7  07A0               	goto	l3426
  4986  15E8  2DE9               	line	19
  4987                           	
  4988                           l725:	
  4989  15E9                     	line	16
  4990                           	
  4991                           l3426:	
  4992  15E9                     	btfss	(___lwdiv@divisor+1),(15)&7
  4993  15E9  1FF4               	goto	u4891
  4994  15EA  2DEC               	goto	u4890
  4995  15EB  2DED               u4891:
  4996  15EC                     	goto	l3422
  4997  15EC  2DDD               u4890:
  4998  15ED                     	goto	l3428
  4999  15ED  2DEF               	
  5000                           l727:	
  5001  15EE                     	goto	l3428
  5002  15EE  2DEF               	line	20
  5003                           	
  5004                           l728:	
  5005  15EF                     	line	21
  5006                           	
  5007                           l3428:	
  5008  15EF                     	movlw	01h
  5009  15EF  3001               	
  5010                           u4905:
  5011  15F0                     	clrc
  5012  15F0  1003               	rlf	(___lwdiv@quotient),f
  5013  15F1  0DA1               	rlf	(___lwdiv@quotient+1),f
  5014  15F2  0DA2               	addlw	-1
  5015  15F3  3EFF               	skipz
  5016  15F4  1D03               	goto	u4905
  5017  15F5  2DF0               	line	22
  5018                           	movf	(___lwdiv@divisor+1),w
  5019  15F6  0874               	subwf	(___lwdiv@dividend+1),w
  5020  15F7  0276               	skipz
  5021  15F8  1D03               	goto	u4915
  5022  15F9  2DFC               	movf	(___lwdiv@divisor),w
  5023  15FA  0873               	subwf	(___lwdiv@dividend),w
  5024  15FB  0275               u4915:
  5025  15FC                     	skipc
  5026  15FC  1C03               	goto	u4911
  5027  15FD  2DFF               	goto	u4910
  5028  15FE  2E00               u4911:
  5029  15FF                     	goto	l3434
  5030  15FF  2E08               u4910:
  5031  1600                     	line	23
  5032                           	
  5033                           l3430:	
  5034  1600                     	movf	(___lwdiv@divisor),w
  5035  1600  0873               	subwf	(___lwdiv@dividend),f
  5036  1601  02F5               	movf	(___lwdiv@divisor+1),w
  5037  1602  0874               	skipc
  5038  1603  1C03               	decf	(___lwdiv@dividend+1),f
  5039  1604  03F6               	subwf	(___lwdiv@dividend+1),f
  5040  1605  02F6               	line	24
  5041                           	
  5042                           l3432:	
  5043  1606                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  5044  1606  1421               	goto	l3434
  5045  1607  2E08               	line	25
  5046                           	
  5047                           l729:	
  5048  1608                     	line	26
  5049                           	
  5050                           l3434:	
  5051  1608                     	movlw	01h
  5052  1608  3001               	
  5053                           u4925:
  5054  1609                     	clrc
  5055  1609  1003               	rrf	(___lwdiv@divisor+1),f
  5056  160A  0CF4               	rrf	(___lwdiv@divisor),f
  5057  160B  0CF3               	addlw	-1
  5058  160C  3EFF               	skipz
  5059  160D  1D03               	goto	u4925
  5060  160E  2E09               	line	27
  5061                           	
  5062                           l3436:	
  5063  160F                     	movlw	01h
  5064  160F  3001               	subwf	(___lwdiv@counter),f
  5065  1610  02A0               	btfss	status,2
  5066  1611  1D03               	goto	u4931
  5067  1612  2E14               	goto	u4930
  5068  1613  2E15               u4931:
  5069  1614                     	goto	l3428
  5070  1614  2DEF               u4930:
  5071  1615                     	goto	l3438
  5072  1615  2E17               	
  5073                           l730:	
  5074  1616                     	goto	l3438
  5075  1616  2E17               	line	28
  5076                           	
  5077                           l724:	
  5078  1617                     	line	29
  5079                           	
  5080                           l3438:	
  5081  1617                     	movf	(___lwdiv@quotient+1),w
  5082  1617  0822               	movwf	(?___lwdiv+1)
  5083  1618  00F4               	movf	(___lwdiv@quotient),w
  5084  1619  0821               	movwf	(?___lwdiv)
  5085  161A  00F3               	goto	l731
  5086  161B  2E1C               	
  5087                           l3440:	
  5088  161C                     	line	30
  5089                           	
  5090                           l731:	
  5091  161C                     	return
  5092  161C  0008               	opt stack 0
  5093                           GLOBAL	__end_of___lwdiv
  5094                           	__end_of___lwdiv:
  5095  161D                     	signat	___lwdiv,8314
  5096                           	global	_setup
  5097                           
  5098 ;; *************** function _setup *****************
  5099 ;; Defined at:
  5100 ;;		line 247 in file "mainM.c"
  5101 ;; Parameters:    Size  Location     Type
  5102 ;;		None
  5103 ;; Auto vars:     Size  Location     Type
  5104 ;;		None
  5105 ;; Return value:  Size  Location     Type
  5106 ;;                  1    wreg      void 
  5107 ;; Registers used:
  5108 ;;		wreg, status,2, status,0, pclath, cstack
  5109 ;; Tracked objects:
  5110 ;;		On entry : 0/0
  5111 ;;		On exit  : 0/0
  5112 ;;		Unchanged: 0/0
  5113 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5114 ;;      Params:         0       0       0       0       0
  5115 ;;      Locals:         0       0       0       0       0
  5116 ;;      Temps:          0       0       0       0       0
  5117 ;;      Totals:         0       0       0       0       0
  5118 ;;Total ram usage:        0 bytes
  5119 ;; Hardware stack levels used:    1
  5120 ;; Hardware stack levels required when called:    4
  5121 ;; This function calls:
  5122 ;;		_I2C_Master_Init
  5123 ;;		_clcLCD
  5124 ;;		_initLCD
  5125 ;; This function is called by:
  5126 ;;		_main
  5127 ;; This function uses a non-reentrant model
  5128 ;;
  5129                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5130                           	file	"mainM.c"
  5131                           	line	247
  5132                           global __ptext7
  5133                           __ptext7:	;psect for function _setup
  5134  141B                     psect	text7
  5135                           	file	"mainM.c"
  5136                           	line	247
  5137                           	global	__size_of_setup
  5138                           	__size_of_setup	equ	__end_of_setup-_setup
  5139  002B                     	
  5140                           _setup:	
  5141  141B                     ;incstack = 0
  5142                           	opt	stack 3
  5143                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  5144                           	line	249
  5145                           	
  5146                           l3586:	
  5147  141B                     ;mainM.c: 249:     ANSEL = 0;
  5148                           	bsf	status, 5	;RP0=1, select bank3
  5149  141B  1683               	bsf	status, 6	;RP1=1, select bank3
  5150  141C  1703               	clrf	(392)^0180h	;volatile
  5151  141D  0188               	line	250
  5152                           ;mainM.c: 250:     ANSELH = 0;
  5153                           	clrf	(393)^0180h	;volatile
  5154  141E  0189               	line	251
  5155                           ;mainM.c: 251:     TRISB = 0;
  5156                           	bsf	status, 5	;RP0=1, select bank1
  5157  141F  1683               	bcf	status, 6	;RP1=0, select bank1
  5158  1420  1303               	clrf	(134)^080h	;volatile
  5159  1421  0186               	line	252
  5160                           ;mainM.c: 252:     TRISD = 0;
  5161                           	clrf	(136)^080h	;volatile
  5162  1422  0188               	line	253
  5163                           ;mainM.c: 253:     PORTB = 0;
  5164                           	bcf	status, 5	;RP0=0, select bank0
  5165  1423  1283               	bcf	status, 6	;RP1=0, select bank0
  5166  1424  1303               	clrf	(6)	;volatile
  5167  1425  0186               	line	254
  5168                           ;mainM.c: 254:     PORTD = 0;
  5169                           	clrf	(8)	;volatile
  5170  1426  0188               	line	255
  5171                           	
  5172                           l3588:	
  5173  1427                     ;mainM.c: 255:     I2C_Master_Init(100000);
  5174                           	movlw	0
  5175  1427  3000               	movwf	(I2C_Master_Init@c+3)
  5176  1428  00B0               	movlw	01h
  5177  1429  3001               	movwf	(I2C_Master_Init@c+2)
  5178  142A  00AF               	movlw	086h
  5179  142B  3086               	movwf	(I2C_Master_Init@c+1)
  5180  142C  00AE               	movlw	0A0h
  5181  142D  30A0               	movwf	(I2C_Master_Init@c)
  5182  142E  00AD               
  5183                           	fcall	_I2C_Master_Init
  5184  142F  160A  118A  24D1  160A  118A  	line	257
  5185                           	
  5186                           l3590:	
  5187  1434                     ;mainM.c: 257:     initLCD();
  5188                           	fcall	_initLCD
  5189  1434  160A  118A  250B  160A  118A  	line	258
  5190                           	
  5191                           l3592:	
  5192  1439                     ;mainM.c: 258:     clcLCD();
  5193                           	fcall	_clcLCD
  5194  1439  160A  118A  2374  160A  118A  	line	260
  5195                           	
  5196                           l3594:	
  5197  143E                     ;mainM.c: 260:     TRISAbits.TRISA1 = 1;
  5198                           	bsf	status, 5	;RP0=1, select bank1
  5199  143E  1683               	bcf	status, 6	;RP1=0, select bank1
  5200  143F  1303               	bsf	(133)^080h,1	;volatile
  5201  1440  1485               	line	261
  5202                           	
  5203                           l3596:	
  5204  1441                     ;mainM.c: 261:     TRISAbits.TRISA2 = 1;
  5205                           	bsf	(133)^080h,2	;volatile
  5206  1441  1505               	line	262
  5207                           	
  5208                           l3598:	
  5209  1442                     ;mainM.c: 262:     TRISAbits.TRISA0 = 0;
  5210                           	bcf	(133)^080h,0	;volatile
  5211  1442  1005               	line	263
  5212                           	
  5213                           l3600:	
  5214  1443                     ;mainM.c: 263:     TRISAbits.TRISA4 = 0;
  5215                           	bcf	(133)^080h,4	;volatile
  5216  1443  1205               	line	264
  5217                           	
  5218                           l3602:	
  5219  1444                     ;mainM.c: 264:     TRISAbits.TRISA5 = 0;
  5220                           	bcf	(133)^080h,5	;volatile
  5221  1444  1285               	line	265
  5222                           	
  5223                           l287:	
  5224  1445                     	return
  5225  1445  0008               	opt stack 0
  5226                           GLOBAL	__end_of_setup
  5227                           	__end_of_setup:
  5228  1446                     	signat	_setup,89
  5229                           	global	_initLCD
  5230                           
  5231 ;; *************** function _initLCD *****************
  5232 ;; Defined at:
  5233 ;;		line 36 in file "LCD.c"
  5234 ;; Parameters:    Size  Location     Type
  5235 ;;		None
  5236 ;; Auto vars:     Size  Location     Type
  5237 ;;		None
  5238 ;; Return value:  Size  Location     Type
  5239 ;;                  1    wreg      void 
  5240 ;; Registers used:
  5241 ;;		wreg, status,2, status,0, pclath, cstack
  5242 ;; Tracked objects:
  5243 ;;		On entry : 0/0
  5244 ;;		On exit  : 0/0
  5245 ;;		Unchanged: 0/0
  5246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5247 ;;      Params:         0       0       0       0       0
  5248 ;;      Locals:         0       0       0       0       0
  5249 ;;      Temps:          2       0       0       0       0
  5250 ;;      Totals:         2       0       0       0       0
  5251 ;;Total ram usage:        2 bytes
  5252 ;; Hardware stack levels used:    1
  5253 ;; Hardware stack levels required when called:    3
  5254 ;; This function calls:
  5255 ;;		_cmdLCD
  5256 ;; This function is called by:
  5257 ;;		_setup
  5258 ;; This function uses a non-reentrant model
  5259 ;;
  5260                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5261                           	file	"LCD.c"
  5262                           	line	36
  5263                           global __ptext8
  5264                           __ptext8:	;psect for function _initLCD
  5265  150B                     psect	text8
  5266                           	file	"LCD.c"
  5267                           	line	36
  5268                           	global	__size_of_initLCD
  5269                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5270  003A                     	
  5271                           _initLCD:	
  5272  150B                     ;incstack = 0
  5273                           	opt	stack 3
  5274                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5275                           	line	37
  5276                           	
  5277                           l3468:	
  5278  150B                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  5279                           	opt asmopt_push
  5280                           opt asmopt_off
  5281                           movlw	20
  5282  150B  3014               movwf	((??_initLCD+0)+0+1),f
  5283  150C  00F7               	movlw	121
  5284  150D  3079               movwf	((??_initLCD+0)+0),f
  5285  150E  00F6               	u5907:
  5286  150F                     decfsz	((??_initLCD+0)+0),f
  5287  150F  0BF6               	goto	u5907
  5288  1510  2D0F               	decfsz	((??_initLCD+0)+0+1),f
  5289  1511  0BF7               	goto	u5907
  5290  1512  2D0F               	nop2
  5291  1513  2D14               opt asmopt_pop
  5292                           
  5293                           	line	38
  5294                           	
  5295                           l3470:	
  5296  1514                     ;LCD.c: 38:     cmdLCD(0x030);
  5297                           	movlw	low(030h)
  5298  1514  3030               	fcall	_cmdLCD
  5299  1515  120A  118A  27EC  160A  118A  	line	39
  5300                           	
  5301                           l3472:	
  5302  151A                     ;LCD.c: 39:     cmdLCD(0x030);
  5303                           	movlw	low(030h)
  5304  151A  3030               	fcall	_cmdLCD
  5305  151B  120A  118A  27EC  160A  118A  	line	40
  5306                           	
  5307                           l3474:	
  5308  1520                     ;LCD.c: 40:     cmdLCD(0x030);
  5309                           	movlw	low(030h)
  5310  1520  3030               	fcall	_cmdLCD
  5311  1521  120A  118A  27EC  160A  118A  	line	42
  5312                           	
  5313                           l3476:	
  5314  1526                     ;LCD.c: 42:     cmdLCD(0x38);
  5315                           	movlw	low(038h)
  5316  1526  3038               	fcall	_cmdLCD
  5317  1527  120A  118A  27EC  160A  118A  	line	43
  5318                           	
  5319                           l3478:	
  5320  152C                     ;LCD.c: 43:     cmdLCD(0x10);
  5321                           	movlw	low(010h)
  5322  152C  3010               	fcall	_cmdLCD
  5323  152D  120A  118A  27EC  160A  118A  	line	44
  5324                           	
  5325                           l3480:	
  5326  1532                     ;LCD.c: 44:     cmdLCD(0x01);
  5327                           	movlw	low(01h)
  5328  1532  3001               	fcall	_cmdLCD
  5329  1533  120A  118A  27EC  160A  118A  	line	45
  5330                           	
  5331                           l3482:	
  5332  1538                     ;LCD.c: 45:     cmdLCD(0x06);
  5333                           	movlw	low(06h)
  5334  1538  3006               	fcall	_cmdLCD
  5335  1539  120A  118A  27EC  160A  118A  	line	46
  5336                           	
  5337                           l3484:	
  5338  153E                     ;LCD.c: 46:     cmdLCD(0x0E);
  5339                           	movlw	low(0Eh)
  5340  153E  300E               	fcall	_cmdLCD
  5341  153F  120A  118A  27EC  160A  118A  	line	47
  5342                           	
  5343                           l91:	
  5344  1544                     	return
  5345  1544  0008               	opt stack 0
  5346                           GLOBAL	__end_of_initLCD
  5347                           	__end_of_initLCD:
  5348  1545                     	signat	_initLCD,89
  5349                           	global	_clcLCD
  5350                           
  5351 ;; *************** function _clcLCD *****************
  5352 ;; Defined at:
  5353 ;;		line 17 in file "LCD.c"
  5354 ;; Parameters:    Size  Location     Type
  5355 ;;		None
  5356 ;; Auto vars:     Size  Location     Type
  5357 ;;		None
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  1    wreg      void 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0, pclath, cstack
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5367 ;;      Params:         0       0       0       0       0
  5368 ;;      Locals:         0       0       0       0       0
  5369 ;;      Temps:          0       0       0       0       0
  5370 ;;      Totals:         0       0       0       0       0
  5371 ;;Total ram usage:        0 bytes
  5372 ;; Hardware stack levels used:    1
  5373 ;; Hardware stack levels required when called:    3
  5374 ;; This function calls:
  5375 ;;		_cmdLCD
  5376 ;; This function is called by:
  5377 ;;		_setup
  5378 ;; This function uses a non-reentrant model
  5379 ;;
  5380                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5381                           	line	17
  5382                           global __ptext9
  5383                           __ptext9:	;psect for function _clcLCD
  5384  1374                     psect	text9
  5385                           	file	"LCD.c"
  5386                           	line	17
  5387                           	global	__size_of_clcLCD
  5388                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  5389  0007                     	
  5390                           _clcLCD:	
  5391  1374                     ;incstack = 0
  5392                           	opt	stack 3
  5393                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  5394                           	line	18
  5395                           	
  5396                           l3458:	
  5397  1374                     ;LCD.c: 18:     cmdLCD(0x01);
  5398                           	movlw	low(01h)
  5399  1374  3001               	fcall	_cmdLCD
  5400  1375  120A  118A  27EC  160A  118A  	line	19
  5401                           	
  5402                           l79:	
  5403  137A                     	return
  5404  137A  0008               	opt stack 0
  5405                           GLOBAL	__end_of_clcLCD
  5406                           	__end_of_clcLCD:
  5407  137B                     	signat	_clcLCD,89
  5408                           	global	_I2C_Master_Init
  5409                           
  5410 ;; *************** function _I2C_Master_Init *****************
  5411 ;; Defined at:
  5412 ;;		line 16 in file "I2C.c"
  5413 ;; Parameters:    Size  Location     Type
  5414 ;;  c               4   13[BANK0 ] const unsigned long 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;		None
  5417 ;; Return value:  Size  Location     Type
  5418 ;;                  1    wreg      void 
  5419 ;; Registers used:
  5420 ;;		wreg, status,2, status,0, pclath, cstack
  5421 ;; Tracked objects:
  5422 ;;		On entry : 0/0
  5423 ;;		On exit  : 0/0
  5424 ;;		Unchanged: 0/0
  5425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5426 ;;      Params:         0       4       0       0       0
  5427 ;;      Locals:         0       0       0       0       0
  5428 ;;      Temps:          4       0       0       0       0
  5429 ;;      Totals:         4       4       0       0       0
  5430 ;;Total ram usage:        8 bytes
  5431 ;; Hardware stack levels used:    1
  5432 ;; Hardware stack levels required when called:    3
  5433 ;; This function calls:
  5434 ;;		___lldiv
  5435 ;; This function is called by:
  5436 ;;		_setup
  5437 ;; This function uses a non-reentrant model
  5438 ;;
  5439                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5440                           	file	"I2C.c"
  5441                           	line	16
  5442                           global __ptext10
  5443                           __ptext10:	;psect for function _I2C_Master_Init
  5444  14D1                     psect	text10
  5445                           	file	"I2C.c"
  5446                           	line	16
  5447                           	global	__size_of_I2C_Master_Init
  5448                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  5449  003A                     	
  5450                           _I2C_Master_Init:	
  5451  14D1                     ;incstack = 0
  5452                           	opt	stack 3
  5453                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  5454                           	line	18
  5455                           	
  5456                           l3442:	
  5457  14D1                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  5458                           	movlw	low(028h)
  5459  14D1  3028               	bcf	status, 5	;RP0=0, select bank0
  5460  14D2  1283               	bcf	status, 6	;RP1=0, select bank0
  5461  14D3  1303               	movwf	(20)	;volatile
  5462  14D4  0094               	line	19
  5463                           	
  5464                           l3444:	
  5465  14D5                     ;I2C.c: 19:     SSPCON2 = 0;
  5466                           	bsf	status, 5	;RP0=1, select bank1
  5467  14D5  1683               	bcf	status, 6	;RP1=0, select bank1
  5468  14D6  1303               	clrf	(145)^080h	;volatile
  5469  14D7  0191               	line	20
  5470                           	
  5471                           l3446:	
  5472  14D8                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  5473                           	bcf	status, 5	;RP0=0, select bank0
  5474  14D8  1283               	bcf	status, 6	;RP1=0, select bank0
  5475  14D9  1303               	movf	(I2C_Master_Init@c),w
  5476  14DA  082D               	movwf	(??_I2C_Master_Init+0)+0
  5477  14DB  00F4               	movf	(I2C_Master_Init@c+1),w
  5478  14DC  082E               	movwf	((??_I2C_Master_Init+0)+0+1)
  5479  14DD  00F5               	movf	(I2C_Master_Init@c+2),w
  5480  14DE  082F               	movwf	((??_I2C_Master_Init+0)+0+2)
  5481  14DF  00F6               	movf	(I2C_Master_Init@c+3),w
  5482  14E0  0830               	movwf	((??_I2C_Master_Init+0)+0+3)
  5483  14E1  00F7               	movlw	02h
  5484  14E2  3002               u4945:
  5485  14E3                     	clrc
  5486  14E3  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  5487  14E4  0DF4               	rlf	(??_I2C_Master_Init+0)+1,f
  5488  14E5  0DF5               	rlf	(??_I2C_Master_Init+0)+2,f
  5489  14E6  0DF6               	rlf	(??_I2C_Master_Init+0)+3,f
  5490  14E7  0DF7               u4940:
  5491  14E8                     	addlw	-1
  5492  14E8  3EFF               	skipz
  5493  14E9  1D03               	goto	u4945
  5494  14EA  2CE3               	movf	3+(??_I2C_Master_Init+0)+0,w
  5495  14EB  0877               	movwf	(___lldiv@divisor+3)
  5496  14EC  00A3               	movf	2+(??_I2C_Master_Init+0)+0,w
  5497  14ED  0876               	movwf	(___lldiv@divisor+2)
  5498  14EE  00A2               	movf	1+(??_I2C_Master_Init+0)+0,w
  5499  14EF  0875               	movwf	(___lldiv@divisor+1)
  5500  14F0  00A1               	movf	0+(??_I2C_Master_Init+0)+0,w
  5501  14F1  0874               	movwf	(___lldiv@divisor)
  5502  14F2  00A0               
  5503                           	movlw	0
  5504  14F3  3000               	movwf	(___lldiv@dividend+3)
  5505  14F4  00A7               	movlw	03Dh
  5506  14F5  303D               	movwf	(___lldiv@dividend+2)
  5507  14F6  00A6               	movlw	09h
  5508  14F7  3009               	movwf	(___lldiv@dividend+1)
  5509  14F8  00A5               	movlw	0
  5510  14F9  3000               	movwf	(___lldiv@dividend)
  5511  14FA  00A4               
  5512                           	fcall	___lldiv
  5513  14FB  160A  118A  2682  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  5514  1500  1283               	bcf	status, 6	;RP1=0, select bank0
  5515  1501  1303               	movf	(0+(?___lldiv)),w
  5516  1502  0820               	addlw	0FFh
  5517  1503  3EFF               	bsf	status, 5	;RP0=1, select bank1
  5518  1504  1683               	bcf	status, 6	;RP1=0, select bank1
  5519  1505  1303               	movwf	(147)^080h	;volatile
  5520  1506  0093               	line	21
  5521                           	
  5522                           l3448:	
  5523  1507                     ;I2C.c: 21:     SSPSTAT = 0;
  5524                           	clrf	(148)^080h	;volatile
  5525  1507  0194               	line	22
  5526                           	
  5527                           l3450:	
  5528  1508                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  5529                           	bsf	(135)^080h,3	;volatile
  5530  1508  1587               	line	23
  5531                           	
  5532                           l3452:	
  5533  1509                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  5534                           	bsf	(135)^080h,4	;volatile
  5535  1509  1607               	line	24
  5536                           	
  5537                           l29:	
  5538  150A                     	return
  5539  150A  0008               	opt stack 0
  5540                           GLOBAL	__end_of_I2C_Master_Init
  5541                           	__end_of_I2C_Master_Init:
  5542  150B                     	signat	_I2C_Master_Init,4217
  5543                           	global	___lldiv
  5544                           
  5545 ;; *************** function ___lldiv *****************
  5546 ;; Defined at:
  5547 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5548 ;; Parameters:    Size  Location     Type
  5549 ;;  divisor         4    0[BANK0 ] unsigned long 
  5550 ;;  dividend        4    4[BANK0 ] unsigned long 
  5551 ;; Auto vars:     Size  Location     Type
  5552 ;;  quotient        4    8[BANK0 ] unsigned long 
  5553 ;;  counter         1   12[BANK0 ] unsigned char 
  5554 ;; Return value:  Size  Location     Type
  5555 ;;                  4    0[BANK0 ] unsigned long 
  5556 ;; Registers used:
  5557 ;;		wreg, status,2, status,0
  5558 ;; Tracked objects:
  5559 ;;		On entry : 0/0
  5560 ;;		On exit  : 0/0
  5561 ;;		Unchanged: 0/0
  5562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5563 ;;      Params:         0       8       0       0       0
  5564 ;;      Locals:         0       5       0       0       0
  5565 ;;      Temps:          1       0       0       0       0
  5566 ;;      Totals:         1      13       0       0       0
  5567 ;;Total ram usage:       14 bytes
  5568 ;; Hardware stack levels used:    1
  5569 ;; Hardware stack levels required when called:    2
  5570 ;; This function calls:
  5571 ;;		Nothing
  5572 ;; This function is called by:
  5573 ;;		_I2C_Master_Init
  5574 ;; This function uses a non-reentrant model
  5575 ;;
  5576                           psect	text11,local,class=CODE,delta=2,merge=1,group=1
  5577                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5578                           	line	5
  5579                           global __ptext11
  5580                           __ptext11:	;psect for function ___lldiv
  5581  1682                     psect	text11
  5582                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  5583                           	line	5
  5584                           	global	__size_of___lldiv
  5585                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  5586  006F                     	
  5587                           ___lldiv:	
  5588  1682                     ;incstack = 0
  5589                           	opt	stack 3
  5590                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  5591                           	line	13
  5592                           	
  5593                           l3392:	
  5594  1682                     	movlw	high highword(0)
  5595  1682  3000               	bcf	status, 5	;RP0=0, select bank0
  5596  1683  1283               	bcf	status, 6	;RP1=0, select bank0
  5597  1684  1303               	movwf	(___lldiv@quotient+3)
  5598  1685  00AB               	movlw	low highword(0)
  5599  1686  3000               	movwf	(___lldiv@quotient+2)
  5600  1687  00AA               	movlw	high(0)
  5601  1688  3000               	movwf	(___lldiv@quotient+1)
  5602  1689  00A9               	movlw	low(0)
  5603  168A  3000               	movwf	(___lldiv@quotient)
  5604  168B  00A8               
  5605                           	line	14
  5606                           	movf	(___lldiv@divisor+3),w
  5607  168C  0823               	iorwf	(___lldiv@divisor+2),w
  5608  168D  0422               	iorwf	(___lldiv@divisor+1),w
  5609  168E  0421               	iorwf	(___lldiv@divisor),w
  5610  168F  0420               	skipnz
  5611  1690  1903               	goto	u4801
  5612  1691  2E93               	goto	u4800
  5613  1692  2E94               u4801:
  5614  1693                     	goto	l3412
  5615  1693  2EE7               u4800:
  5616  1694                     	line	15
  5617                           	
  5618                           l3394:	
  5619  1694                     	clrf	(___lldiv@counter)
  5620  1694  01AC               	incf	(___lldiv@counter),f
  5621  1695  0AAC               	line	16
  5622                           	goto	l3398
  5623  1696  2EA5               	
  5624                           l490:	
  5625  1697                     	line	17
  5626                           	
  5627                           l3396:	
  5628  1697                     	movlw	01h
  5629  1697  3001               	movwf	(??___lldiv+0)+0
  5630  1698  00F3               u4815:
  5631  1699                     	clrc
  5632  1699  1003               	rlf	(___lldiv@divisor),f
  5633  169A  0DA0               	rlf	(___lldiv@divisor+1),f
  5634  169B  0DA1               	rlf	(___lldiv@divisor+2),f
  5635  169C  0DA2               	rlf	(___lldiv@divisor+3),f
  5636  169D  0DA3               	decfsz	(??___lldiv+0)+0
  5637  169E  0BF3               	goto	u4815
  5638  169F  2E99               	line	18
  5639                           	movlw	low(01h)
  5640  16A0  3001               	movwf	(??___lldiv+0)+0
  5641  16A1  00F3               	movf	(??___lldiv+0)+0,w
  5642  16A2  0873               	addwf	(___lldiv@counter),f
  5643  16A3  07AC               	goto	l3398
  5644  16A4  2EA5               	line	19
  5645                           	
  5646                           l489:	
  5647  16A5                     	line	16
  5648                           	
  5649                           l3398:	
  5650  16A5                     	btfss	(___lldiv@divisor+3),(31)&7
  5651  16A5  1FA3               	goto	u4821
  5652  16A6  2EA8               	goto	u4820
  5653  16A7  2EA9               u4821:
  5654  16A8                     	goto	l3396
  5655  16A8  2E97               u4820:
  5656  16A9                     	goto	l3400
  5657  16A9  2EAB               	
  5658                           l491:	
  5659  16AA                     	goto	l3400
  5660  16AA  2EAB               	line	20
  5661                           	
  5662                           l492:	
  5663  16AB                     	line	21
  5664                           	
  5665                           l3400:	
  5666  16AB                     	movlw	01h
  5667  16AB  3001               	movwf	(??___lldiv+0)+0
  5668  16AC  00F3               u4835:
  5669  16AD                     	clrc
  5670  16AD  1003               	rlf	(___lldiv@quotient),f
  5671  16AE  0DA8               	rlf	(___lldiv@quotient+1),f
  5672  16AF  0DA9               	rlf	(___lldiv@quotient+2),f
  5673  16B0  0DAA               	rlf	(___lldiv@quotient+3),f
  5674  16B1  0DAB               	decfsz	(??___lldiv+0)+0
  5675  16B2  0BF3               	goto	u4835
  5676  16B3  2EAD               	line	22
  5677                           	
  5678                           l3402:	
  5679  16B4                     	movf	(___lldiv@divisor+3),w
  5680  16B4  0823               	subwf	(___lldiv@dividend+3),w
  5681  16B5  0227               	skipz
  5682  16B6  1D03               	goto	u4845
  5683  16B7  2EC2               	movf	(___lldiv@divisor+2),w
  5684  16B8  0822               	subwf	(___lldiv@dividend+2),w
  5685  16B9  0226               	skipz
  5686  16BA  1D03               	goto	u4845
  5687  16BB  2EC2               	movf	(___lldiv@divisor+1),w
  5688  16BC  0821               	subwf	(___lldiv@dividend+1),w
  5689  16BD  0225               	skipz
  5690  16BE  1D03               	goto	u4845
  5691  16BF  2EC2               	movf	(___lldiv@divisor),w
  5692  16C0  0820               	subwf	(___lldiv@dividend),w
  5693  16C1  0224               u4845:
  5694  16C2                     	skipc
  5695  16C2  1C03               	goto	u4841
  5696  16C3  2EC5               	goto	u4840
  5697  16C4  2EC6               u4841:
  5698  16C5                     	goto	l3408
  5699  16C5  2ED6               u4840:
  5700  16C6                     	line	23
  5701                           	
  5702                           l3404:	
  5703  16C6                     	movf	(___lldiv@divisor),w
  5704  16C6  0820               	subwf	(___lldiv@dividend),f
  5705  16C7  02A4               	movf	(___lldiv@divisor+1),w
  5706  16C8  0821               	skipc
  5707  16C9  1C03               	incfsz	(___lldiv@divisor+1),w
  5708  16CA  0F21               	subwf	(___lldiv@dividend+1),f
  5709  16CB  02A5               	movf	(___lldiv@divisor+2),w
  5710  16CC  0822               	skipc
  5711  16CD  1C03               	incfsz	(___lldiv@divisor+2),w
  5712  16CE  0F22               	subwf	(___lldiv@dividend+2),f
  5713  16CF  02A6               	movf	(___lldiv@divisor+3),w
  5714  16D0  0823               	skipc
  5715  16D1  1C03               	incfsz	(___lldiv@divisor+3),w
  5716  16D2  0F23               	subwf	(___lldiv@dividend+3),f
  5717  16D3  02A7               	line	24
  5718                           	
  5719                           l3406:	
  5720  16D4                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  5721  16D4  1428               	goto	l3408
  5722  16D5  2ED6               	line	25
  5723                           	
  5724                           l493:	
  5725  16D6                     	line	26
  5726                           	
  5727                           l3408:	
  5728  16D6                     	movlw	01h
  5729  16D6  3001               u4855:
  5730  16D7                     	clrc
  5731  16D7  1003               	rrf	(___lldiv@divisor+3),f
  5732  16D8  0CA3               	rrf	(___lldiv@divisor+2),f
  5733  16D9  0CA2               	rrf	(___lldiv@divisor+1),f
  5734  16DA  0CA1               	rrf	(___lldiv@divisor),f
  5735  16DB  0CA0               	addlw	-1
  5736  16DC  3EFF               	skipz
  5737  16DD  1D03               	goto	u4855
  5738  16DE  2ED7               
  5739                           	line	27
  5740                           	
  5741                           l3410:	
  5742  16DF                     	movlw	01h
  5743  16DF  3001               	subwf	(___lldiv@counter),f
  5744  16E0  02AC               	btfss	status,2
  5745  16E1  1D03               	goto	u4861
  5746  16E2  2EE4               	goto	u4860
  5747  16E3  2EE5               u4861:
  5748  16E4                     	goto	l3400
  5749  16E4  2EAB               u4860:
  5750  16E5                     	goto	l3412
  5751  16E5  2EE7               	
  5752                           l494:	
  5753  16E6                     	goto	l3412
  5754  16E6  2EE7               	line	28
  5755                           	
  5756                           l488:	
  5757  16E7                     	line	29
  5758                           	
  5759                           l3412:	
  5760  16E7                     	movf	(___lldiv@quotient+3),w
  5761  16E7  082B               	movwf	(?___lldiv+3)
  5762  16E8  00A3               	movf	(___lldiv@quotient+2),w
  5763  16E9  082A               	movwf	(?___lldiv+2)
  5764  16EA  00A2               	movf	(___lldiv@quotient+1),w
  5765  16EB  0829               	movwf	(?___lldiv+1)
  5766  16EC  00A1               	movf	(___lldiv@quotient),w
  5767  16ED  0828               	movwf	(?___lldiv)
  5768  16EE  00A0               
  5769                           	goto	l495
  5770  16EF  2EF0               	
  5771                           l3414:	
  5772  16F0                     	line	30
  5773                           	
  5774                           l495:	
  5775  16F0                     	return
  5776  16F0  0008               	opt stack 0
  5777                           GLOBAL	__end_of___lldiv
  5778                           	__end_of___lldiv:
  5779  16F1                     	signat	___lldiv,8316
  5780                           	global	_setCursorLCD
  5781                           
  5782 ;; *************** function _setCursorLCD *****************
  5783 ;; Defined at:
  5784 ;;		line 8 in file "LCD.c"
  5785 ;; Parameters:    Size  Location     Type
  5786 ;;  y               1    wreg     unsigned char 
  5787 ;;  x               1    6[COMMON] unsigned char 
  5788 ;; Auto vars:     Size  Location     Type
  5789 ;;  y               1    0[BANK0 ] unsigned char 
  5790 ;; Return value:  Size  Location     Type
  5791 ;;                  1    wreg      void 
  5792 ;; Registers used:
  5793 ;;		wreg, status,2, status,0, pclath, cstack
  5794 ;; Tracked objects:
  5795 ;;		On entry : 0/0
  5796 ;;		On exit  : 0/0
  5797 ;;		Unchanged: 0/0
  5798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5799 ;;      Params:         1       0       0       0       0
  5800 ;;      Locals:         0       1       0       0       0
  5801 ;;      Temps:          1       0       0       0       0
  5802 ;;      Totals:         2       1       0       0       0
  5803 ;;Total ram usage:        3 bytes
  5804 ;; Hardware stack levels used:    1
  5805 ;; Hardware stack levels required when called:    3
  5806 ;; This function calls:
  5807 ;;		_cmdLCD
  5808 ;; This function is called by:
  5809 ;;		_main
  5810 ;;		_writeFloat
  5811 ;; This function uses a non-reentrant model
  5812 ;;
  5813                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  5814                           	file	"LCD.c"
  5815                           	line	8
  5816                           global __ptext12
  5817                           __ptext12:	;psect for function _setCursorLCD
  5818  13FC                     psect	text12
  5819                           	file	"LCD.c"
  5820                           	line	8
  5821                           	global	__size_of_setCursorLCD
  5822                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  5823  001F                     	
  5824                           _setCursorLCD:	
  5825  13FC                     ;incstack = 0
  5826                           	opt	stack 4
  5827                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  5828                           ;setCursorLCD@y stored from wreg
  5829                           	bcf	status, 5	;RP0=0, select bank0
  5830  13FC  1283               	bcf	status, 6	;RP1=0, select bank0
  5831  13FD  1303               	movwf	(setCursorLCD@y)
  5832  13FE  00A0               	line	9
  5833                           	
  5834                           l3576:	
  5835  13FF                     ;LCD.c: 9:     if(y == 1){
  5836                           		decf	((setCursorLCD@y)),w
  5837  13FF  0320               	btfss	status,2
  5838  1400  1D03               	goto	u5091
  5839  1401  2C03               	goto	u5090
  5840  1402  2C04               u5091:
  5841  1403                     	goto	l3580
  5842  1403  2C0C               u5090:
  5843  1404                     	line	10
  5844                           	
  5845                           l3578:	
  5846  1404                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  5847                           	movf	(setCursorLCD@x),w
  5848  1404  0876               	addlw	07Fh
  5849  1405  3E7F               	movwf	(??_setCursorLCD+0)+0
  5850  1406  00F7               	movf	(??_setCursorLCD+0)+0,w
  5851  1407  0877               	bsf	status, 5	;RP0=1, select bank1
  5852  1408  1683               	bcf	status, 6	;RP1=0, select bank1
  5853  1409  1303               	movwf	(_cursor)^080h
  5854  140A  00C3               	line	11
  5855                           ;LCD.c: 11:     }else{
  5856                           	goto	l3582
  5857  140B  2C14               	
  5858                           l74:	
  5859  140C                     	line	12
  5860                           	
  5861                           l3580:	
  5862  140C                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  5863                           	movf	(setCursorLCD@x),w
  5864  140C  0876               	addlw	0BFh
  5865  140D  3EBF               	movwf	(??_setCursorLCD+0)+0
  5866  140E  00F7               	movf	(??_setCursorLCD+0)+0,w
  5867  140F  0877               	bsf	status, 5	;RP0=1, select bank1
  5868  1410  1683               	bcf	status, 6	;RP1=0, select bank1
  5869  1411  1303               	movwf	(_cursor)^080h
  5870  1412  00C3               	goto	l3582
  5871  1413  2C14               	line	13
  5872                           ;LCD.c: 13:     }
  5873                           	
  5874                           l75:	
  5875  1414                     	line	14
  5876                           	
  5877                           l3582:	
  5878  1414                     ;LCD.c: 14:     cmdLCD(cursor);
  5879                           	movf	(_cursor)^080h,w
  5880  1414  0843               	fcall	_cmdLCD
  5881  1415  120A  118A  27EC  160A  118A  	line	15
  5882                           	
  5883                           l76:	
  5884  141A                     	return
  5885  141A  0008               	opt stack 0
  5886                           GLOBAL	__end_of_setCursorLCD
  5887                           	__end_of_setCursorLCD:
  5888  141B                     	signat	_setCursorLCD,8313
  5889                           	global	_cmdLCD
  5890                           
  5891 ;; *************** function _cmdLCD *****************
  5892 ;; Defined at:
  5893 ;;		line 49 in file "LCD.c"
  5894 ;; Parameters:    Size  Location     Type
  5895 ;;  cmd             1    wreg     unsigned char 
  5896 ;; Auto vars:     Size  Location     Type
  5897 ;;  cmd             1    5[COMMON] unsigned char 
  5898 ;; Return value:  Size  Location     Type
  5899 ;;                  1    wreg      void 
  5900 ;; Registers used:
  5901 ;;		wreg
  5902 ;; Tracked objects:
  5903 ;;		On entry : 0/0
  5904 ;;		On exit  : 0/0
  5905 ;;		Unchanged: 0/0
  5906 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5907 ;;      Params:         0       0       0       0       0
  5908 ;;      Locals:         1       0       0       0       0
  5909 ;;      Temps:          2       0       0       0       0
  5910 ;;      Totals:         3       0       0       0       0
  5911 ;;Total ram usage:        3 bytes
  5912 ;; Hardware stack levels used:    1
  5913 ;; Hardware stack levels required when called:    2
  5914 ;; This function calls:
  5915 ;;		Nothing
  5916 ;; This function is called by:
  5917 ;;		_setCursorLCD
  5918 ;;		_clcLCD
  5919 ;;		_initLCD
  5920 ;; This function uses a non-reentrant model
  5921 ;;
  5922                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  5923                           	line	49
  5924                           global __ptext13
  5925                           __ptext13:	;psect for function _cmdLCD
  5926  07EC                     psect	text13
  5927                           	file	"LCD.c"
  5928                           	line	49
  5929                           	global	__size_of_cmdLCD
  5930                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  5931  0014                     	
  5932                           _cmdLCD:	
  5933  07EC                     ;incstack = 0
  5934                           	opt	stack 3
  5935                           ; Regs used in _cmdLCD: [wreg]
  5936                           ;cmdLCD@cmd stored from wreg
  5937                           	movwf	(cmdLCD@cmd)
  5938  07EC  00F5               	line	50
  5939                           	
  5940                           l3384:	
  5941  07ED                     ;LCD.c: 50:     RD0 = 0;
  5942                           	bcf	status, 5	;RP0=0, select bank0
  5943  07ED  1283               	bcf	status, 6	;RP1=0, select bank0
  5944  07EE  1303               	bcf	(64/8),(64)&7	;volatile
  5945  07EF  1008               	line	51
  5946                           	
  5947                           l3386:	
  5948  07F0                     ;LCD.c: 51:  PORTB = cmd;
  5949                           	movf	(cmdLCD@cmd),w
  5950  07F0  0875               	movwf	(6)	;volatile
  5951  07F1  0086               	line	52
  5952                           	
  5953                           l3388:	
  5954  07F2                     ;LCD.c: 52:  RD1 = 1;
  5955                           	bsf	(65/8),(65)&7	;volatile
  5956  07F2  1488               	line	53
  5957                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  5958                           	opt asmopt_push
  5959                           opt asmopt_off
  5960                           movlw	6
  5961  07F3  3006               movwf	((??_cmdLCD+0)+0+1),f
  5962  07F4  00F4               	movlw	48
  5963  07F5  3030               movwf	((??_cmdLCD+0)+0),f
  5964  07F6  00F3               	u5917:
  5965  07F7                     decfsz	((??_cmdLCD+0)+0),f
  5966  07F7  0BF3               	goto	u5917
  5967  07F8  2FF7               	decfsz	((??_cmdLCD+0)+0+1),f
  5968  07F9  0BF4               	goto	u5917
  5969  07FA  2FF7               	nop
  5970  07FB  0000               opt asmopt_pop
  5971                           
  5972                           	line	54
  5973                           	
  5974                           l3390:	
  5975  07FC                     ;LCD.c: 54:     RD1 = 0;
  5976                           	bcf	status, 5	;RP0=0, select bank0
  5977  07FC  1283               	bcf	status, 6	;RP1=0, select bank0
  5978  07FD  1303               	bcf	(65/8),(65)&7	;volatile
  5979  07FE  1088               	line	55
  5980                           	
  5981                           l94:	
  5982  07FF                     	return
  5983  07FF  0008               	opt stack 0
  5984                           GLOBAL	__end_of_cmdLCD
  5985                           	__end_of_cmdLCD:
  5986  0800                     	signat	_cmdLCD,4217
  5987                           	global	___xxtofl
  5988                           
  5989 ;; *************** function ___xxtofl *****************
  5990 ;; Defined at:
  5991 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  sign            1    wreg     unsigned char 
  5994 ;;  val             4    3[COMMON] long 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  sign            1    4[BANK0 ] unsigned char 
  5997 ;;  arg             4    6[BANK0 ] unsigned long 
  5998 ;;  exp             1    5[BANK0 ] unsigned char 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  4    3[COMMON] unsigned char 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6008 ;;      Params:         4       0       0       0       0
  6009 ;;      Locals:         0       6       0       0       0
  6010 ;;      Temps:          0       4       0       0       0
  6011 ;;      Totals:         4      10       0       0       0
  6012 ;;Total ram usage:       14 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; Hardware stack levels required when called:    2
  6015 ;; This function calls:
  6016 ;;		Nothing
  6017 ;; This function is called by:
  6018 ;;		_main
  6019 ;; This function uses a non-reentrant model
  6020 ;;
  6021                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  6022                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  6023                           	line	10
  6024                           global __ptext14
  6025                           __ptext14:	;psect for function ___xxtofl
  6026  0809                     psect	text14
  6027                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  6028                           	line	10
  6029                           	global	__size_of___xxtofl
  6030                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  6031  00C4                     	
  6032                           ___xxtofl:	
  6033  0809                     ;incstack = 0
  6034                           	opt	stack 5
  6035                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6036                           ;___xxtofl@sign stored from wreg
  6037                           	bcf	status, 5	;RP0=0, select bank0
  6038  0809  1283               	bcf	status, 6	;RP1=0, select bank0
  6039  080A  1303               	movwf	(___xxtofl@sign)
  6040  080B  00A4               	line	15
  6041                           	
  6042                           l3692:	
  6043  080C                     	movf	((___xxtofl@sign)),w
  6044  080C  0824               	btfsc	status,2
  6045  080D  1903               	goto	u5331
  6046  080E  2810               	goto	u5330
  6047  080F  2811               u5331:
  6048  0810                     	goto	l3698
  6049  0810  2825               u5330:
  6050  0811                     	
  6051                           l3694:	
  6052  0811                     	btfss	(___xxtofl@val+3),7
  6053  0811  1FF6               	goto	u5341
  6054  0812  2814               	goto	u5340
  6055  0813  2815               u5341:
  6056  0814                     	goto	l3698
  6057  0814  2825               u5340:
  6058  0815                     	line	16
  6059                           	
  6060                           l3696:	
  6061  0815                     	comf	(___xxtofl@val)+0,w
  6062  0815  0973               	movwf	(___xxtofl@arg)
  6063  0816  00A6               	comf	(___xxtofl@val)+1,w
  6064  0817  0974               	movwf	(___xxtofl@arg+1)
  6065  0818  00A7               	comf	(___xxtofl@val)+2,w
  6066  0819  0975               	movwf	(___xxtofl@arg+2)
  6067  081A  00A8               	comf	(___xxtofl@val)+3,w
  6068  081B  0976               	movwf	(___xxtofl@arg+3)
  6069  081C  00A9               	incf	(___xxtofl@arg),f
  6070  081D  0AA6               	skipnz
  6071  081E  1903               	incf	(___xxtofl@arg+1),f
  6072  081F  0AA7               	skipnz
  6073  0820  1903               	incf	(___xxtofl@arg+2),f
  6074  0821  0AA8               	skipnz
  6075  0822  1903               	incf	(___xxtofl@arg+3),f
  6076  0823  0AA9               	line	17
  6077                           	goto	l867
  6078  0824  282D               	line	18
  6079                           	
  6080                           l866:	
  6081  0825                     	line	19
  6082                           	
  6083                           l3698:	
  6084  0825                     	movf	(___xxtofl@val+3),w
  6085  0825  0876               	movwf	(___xxtofl@arg+3)
  6086  0826  00A9               	movf	(___xxtofl@val+2),w
  6087  0827  0875               	movwf	(___xxtofl@arg+2)
  6088  0828  00A8               	movf	(___xxtofl@val+1),w
  6089  0829  0874               	movwf	(___xxtofl@arg+1)
  6090  082A  00A7               	movf	(___xxtofl@val),w
  6091  082B  0873               	movwf	(___xxtofl@arg)
  6092  082C  00A6               
  6093                           	line	20
  6094                           	
  6095                           l867:	
  6096  082D                     	line	21
  6097                           	movf	(___xxtofl@val+3),w
  6098  082D  0876               	iorwf	(___xxtofl@val+2),w
  6099  082E  0475               	iorwf	(___xxtofl@val+1),w
  6100  082F  0474               	iorwf	(___xxtofl@val),w
  6101  0830  0473               	skipz
  6102  0831  1D03               	goto	u5351
  6103  0832  2834               	goto	u5350
  6104  0833  2835               u5351:
  6105  0834                     	goto	l3704
  6106  0834  283F               u5350:
  6107  0835                     	line	22
  6108                           	
  6109                           l3700:	
  6110  0835                     	movlw	0x0
  6111  0835  3000               	movwf	(?___xxtofl+3)
  6112  0836  00F6               	movlw	0x0
  6113  0837  3000               	movwf	(?___xxtofl+2)
  6114  0838  00F5               	movlw	0x0
  6115  0839  3000               	movwf	(?___xxtofl+1)
  6116  083A  00F4               	movlw	0x0
  6117  083B  3000               	movwf	(?___xxtofl)
  6118  083C  00F3               
  6119                           	goto	l869
  6120  083D  28CC               	
  6121                           l3702:	
  6122  083E                     	goto	l869
  6123  083E  28CC               	
  6124                           l868:	
  6125  083F                     	line	23
  6126                           	
  6127                           l3704:	
  6128  083F                     	movlw	low(096h)
  6129  083F  3096               	movwf	(??___xxtofl+0)+0
  6130  0840  00A0               	movf	(??___xxtofl+0)+0,w
  6131  0841  0820               	movwf	(___xxtofl@exp)
  6132  0842  00A5               	line	24
  6133                           	goto	l3708
  6134  0843  2852               	
  6135                           l871:	
  6136  0844                     	line	25
  6137                           	
  6138                           l3706:	
  6139  0844                     	movlw	low(01h)
  6140  0844  3001               	movwf	(??___xxtofl+0)+0
  6141  0845  00A0               	movf	(??___xxtofl+0)+0,w
  6142  0846  0820               	addwf	(___xxtofl@exp),f
  6143  0847  07A5               	line	26
  6144                           	movlw	01h
  6145  0848  3001               u5365:
  6146  0849                     	clrc
  6147  0849  1003               	rrf	(___xxtofl@arg+3),f
  6148  084A  0CA9               	rrf	(___xxtofl@arg+2),f
  6149  084B  0CA8               	rrf	(___xxtofl@arg+1),f
  6150  084C  0CA7               	rrf	(___xxtofl@arg),f
  6151  084D  0CA6               	addlw	-1
  6152  084E  3EFF               	skipz
  6153  084F  1D03               	goto	u5365
  6154  0850  2849               
  6155                           	goto	l3708
  6156  0851  2852               	line	27
  6157                           	
  6158                           l870:	
  6159  0852                     	line	24
  6160                           	
  6161                           l3708:	
  6162  0852                     	movlw	high highword(0FE000000h)
  6163  0852  30FE               	andwf	(___xxtofl@arg+3),w
  6164  0853  0529               	btfss	status,2
  6165  0854  1D03               	goto	u5371
  6166  0855  2857               	goto	u5370
  6167  0856  2858               u5371:
  6168  0857                     	goto	l3706
  6169  0857  2844               u5370:
  6170  0858                     	goto	l873
  6171  0858  2875               	
  6172                           l872:	
  6173  0859                     	line	28
  6174                           	goto	l873
  6175  0859  2875               	
  6176                           l874:	
  6177  085A                     	line	29
  6178                           	
  6179                           l3710:	
  6180  085A                     	movlw	low(01h)
  6181  085A  3001               	movwf	(??___xxtofl+0)+0
  6182  085B  00A0               	movf	(??___xxtofl+0)+0,w
  6183  085C  0820               	addwf	(___xxtofl@exp),f
  6184  085D  07A5               	line	30
  6185                           	
  6186                           l3712:	
  6187  085E                     	movlw	01h
  6188  085E  3001               	addwf	(___xxtofl@arg),f
  6189  085F  07A6               	movlw	0
  6190  0860  3000               	skipnc
  6191  0861  1803               movlw 1
  6192  0862  3001               	addwf	(___xxtofl@arg+1),f
  6193  0863  07A7               	movlw	0
  6194  0864  3000               	skipnc
  6195  0865  1803               movlw 1
  6196  0866  3001               	addwf	(___xxtofl@arg+2),f
  6197  0867  07A8               	movlw	0
  6198  0868  3000               	skipnc
  6199  0869  1803               movlw 1
  6200  086A  3001               	addwf	(___xxtofl@arg+3),f
  6201  086B  07A9               	line	31
  6202                           	
  6203                           l3714:	
  6204  086C                     	movlw	01h
  6205  086C  3001               u5385:
  6206  086D                     	clrc
  6207  086D  1003               	rrf	(___xxtofl@arg+3),f
  6208  086E  0CA9               	rrf	(___xxtofl@arg+2),f
  6209  086F  0CA8               	rrf	(___xxtofl@arg+1),f
  6210  0870  0CA7               	rrf	(___xxtofl@arg),f
  6211  0871  0CA6               	addlw	-1
  6212  0872  3EFF               	skipz
  6213  0873  1D03               	goto	u5385
  6214  0874  286D               
  6215                           	line	32
  6216                           	
  6217                           l873:	
  6218  0875                     	line	28
  6219                           	movlw	high highword(0FF000000h)
  6220  0875  30FF               	andwf	(___xxtofl@arg+3),w
  6221  0876  0529               	btfss	status,2
  6222  0877  1D03               	goto	u5391
  6223  0878  287A               	goto	u5390
  6224  0879  287B               u5391:
  6225  087A                     	goto	l3710
  6226  087A  285A               u5390:
  6227  087B                     	goto	l3718
  6228  087B  2889               	
  6229                           l875:	
  6230  087C                     	line	33
  6231                           	goto	l3718
  6232  087C  2889               	
  6233                           l877:	
  6234  087D                     	line	34
  6235                           	
  6236                           l3716:	
  6237  087D                     	movlw	01h
  6238  087D  3001               	subwf	(___xxtofl@exp),f
  6239  087E  02A5               	line	35
  6240                           	movlw	01h
  6241  087F  3001               	movwf	(??___xxtofl+0)+0
  6242  0880  00A0               u5405:
  6243  0881                     	clrc
  6244  0881  1003               	rlf	(___xxtofl@arg),f
  6245  0882  0DA6               	rlf	(___xxtofl@arg+1),f
  6246  0883  0DA7               	rlf	(___xxtofl@arg+2),f
  6247  0884  0DA8               	rlf	(___xxtofl@arg+3),f
  6248  0885  0DA9               	decfsz	(??___xxtofl+0)+0
  6249  0886  0BA0               	goto	u5405
  6250  0887  2881               	goto	l3718
  6251  0888  2889               	line	36
  6252                           	
  6253                           l876:	
  6254  0889                     	line	33
  6255                           	
  6256                           l3718:	
  6257  0889                     	btfsc	(___xxtofl@arg+2),(23)&7
  6258  0889  1BA8               	goto	u5411
  6259  088A  288C               	goto	u5410
  6260  088B  288D               u5411:
  6261  088C                     	goto	l880
  6262  088C  2894               u5410:
  6263  088D                     	
  6264                           l3720:	
  6265  088D                     	movlw	low(02h)
  6266  088D  3002               	subwf	(___xxtofl@exp),w
  6267  088E  0225               	skipnc
  6268  088F  1803               	goto	u5421
  6269  0890  2892               	goto	u5420
  6270  0891  2893               u5421:
  6271  0892                     	goto	l3716
  6272  0892  287D               u5420:
  6273  0893                     	goto	l880
  6274  0893  2894               	
  6275                           l879:	
  6276  0894                     	
  6277                           l880:	
  6278  0894                     	line	37
  6279                           	btfsc	(___xxtofl@exp),(0)&7
  6280  0894  1825               	goto	u5431
  6281  0895  2897               	goto	u5430
  6282  0896  2898               u5431:
  6283  0897                     	goto	l881
  6284  0897  28A0               u5430:
  6285  0898                     	line	38
  6286                           	
  6287                           l3722:	
  6288  0898                     	movlw	0FFh
  6289  0898  30FF               	andwf	(___xxtofl@arg),f
  6290  0899  05A6               	movlw	0FFh
  6291  089A  30FF               	andwf	(___xxtofl@arg+1),f
  6292  089B  05A7               	movlw	07Fh
  6293  089C  307F               	andwf	(___xxtofl@arg+2),f
  6294  089D  05A8               	movlw	0FFh
  6295  089E  30FF               	andwf	(___xxtofl@arg+3),f
  6296  089F  05A9               	
  6297                           l881:	
  6298  08A0                     	line	39
  6299                           	clrc
  6300  08A0  1003               	rrf	(___xxtofl@exp),f
  6301  08A1  0CA5               
  6302                           	line	40
  6303                           	
  6304                           l3724:	
  6305  08A2                     	movf	(___xxtofl@exp),w
  6306  08A2  0825               	movwf	(??___xxtofl+0)+0
  6307  08A3  00A0               	clrf	(??___xxtofl+0)+0+1
  6308  08A4  01A1               	clrf	(??___xxtofl+0)+0+2
  6309  08A5  01A2               	clrf	(??___xxtofl+0)+0+3
  6310  08A6  01A3               	movlw	018h
  6311  08A7  3018               u5445:
  6312  08A8                     	clrc
  6313  08A8  1003               	rlf	(??___xxtofl+0)+0,f
  6314  08A9  0DA0               	rlf	(??___xxtofl+0)+1,f
  6315  08AA  0DA1               	rlf	(??___xxtofl+0)+2,f
  6316  08AB  0DA2               	rlf	(??___xxtofl+0)+3,f
  6317  08AC  0DA3               u5440:
  6318  08AD                     	addlw	-1
  6319  08AD  3EFF               	skipz
  6320  08AE  1D03               	goto	u5445
  6321  08AF  28A8               	movf	0+(??___xxtofl+0)+0,w
  6322  08B0  0820               	iorwf	(___xxtofl@arg),f
  6323  08B1  04A6               	movf	1+(??___xxtofl+0)+0,w
  6324  08B2  0821               	iorwf	(___xxtofl@arg+1),f
  6325  08B3  04A7               	movf	2+(??___xxtofl+0)+0,w
  6326  08B4  0822               	iorwf	(___xxtofl@arg+2),f
  6327  08B5  04A8               	movf	3+(??___xxtofl+0)+0,w
  6328  08B6  0823               	iorwf	(___xxtofl@arg+3),f
  6329  08B7  04A9               	line	41
  6330                           	
  6331                           l3726:	
  6332  08B8                     	movf	((___xxtofl@sign)),w
  6333  08B8  0824               	btfsc	status,2
  6334  08B9  1903               	goto	u5451
  6335  08BA  28BC               	goto	u5450
  6336  08BB  28BD               u5451:
  6337  08BC                     	goto	l3732
  6338  08BC  28C3               u5450:
  6339  08BD                     	
  6340                           l3728:	
  6341  08BD                     	btfss	(___xxtofl@val+3),7
  6342  08BD  1FF6               	goto	u5461
  6343  08BE  28C0               	goto	u5460
  6344  08BF  28C1               u5461:
  6345  08C0                     	goto	l3732
  6346  08C0  28C3               u5460:
  6347  08C1                     	line	42
  6348                           	
  6349                           l3730:	
  6350  08C1                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  6351  08C1  17A9               	goto	l3732
  6352  08C2  28C3               	
  6353                           l882:	
  6354  08C3                     	line	43
  6355                           	
  6356                           l3732:	
  6357  08C3                     	movf	(___xxtofl@arg+3),w
  6358  08C3  0829               	movwf	(?___xxtofl+3)
  6359  08C4  00F6               	movf	(___xxtofl@arg+2),w
  6360  08C5  0828               	movwf	(?___xxtofl+2)
  6361  08C6  00F5               	movf	(___xxtofl@arg+1),w
  6362  08C7  0827               	movwf	(?___xxtofl+1)
  6363  08C8  00F4               	movf	(___xxtofl@arg),w
  6364  08C9  0826               	movwf	(?___xxtofl)
  6365  08CA  00F3               
  6366                           	goto	l869
  6367  08CB  28CC               	
  6368                           l3734:	
  6369  08CC                     	line	44
  6370                           	
  6371                           l869:	
  6372  08CC                     	return
  6373  08CC  0008               	opt stack 0
  6374                           GLOBAL	__end_of___xxtofl
  6375                           	__end_of___xxtofl:
  6376  08CD                     	signat	___xxtofl,8316
  6377                           	global	___wmul
  6378                           
  6379 ;; *************** function ___wmul *****************
  6380 ;; Defined at:
  6381 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  6382 ;; Parameters:    Size  Location     Type
  6383 ;;  multiplier      2    3[COMMON] unsigned int 
  6384 ;;  multiplicand    2    5[COMMON] unsigned int 
  6385 ;; Auto vars:     Size  Location     Type
  6386 ;;  product         2    0[BANK0 ] unsigned int 
  6387 ;; Return value:  Size  Location     Type
  6388 ;;                  2    3[COMMON] unsigned int 
  6389 ;; Registers used:
  6390 ;;		wreg, status,2, status,0
  6391 ;; Tracked objects:
  6392 ;;		On entry : 0/0
  6393 ;;		On exit  : 0/0
  6394 ;;		Unchanged: 0/0
  6395 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6396 ;;      Params:         4       0       0       0       0
  6397 ;;      Locals:         0       2       0       0       0
  6398 ;;      Temps:          0       0       0       0       0
  6399 ;;      Totals:         4       2       0       0       0
  6400 ;;Total ram usage:        6 bytes
  6401 ;; Hardware stack levels used:    1
  6402 ;; Hardware stack levels required when called:    2
  6403 ;; This function calls:
  6404 ;;		Nothing
  6405 ;; This function is called by:
  6406 ;;		_main
  6407 ;; This function uses a non-reentrant model
  6408 ;;
  6409                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  6410                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  6411                           	line	15
  6412                           global __ptext15
  6413                           __ptext15:	;psect for function ___wmul
  6414  1472                     psect	text15
  6415                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  6416                           	line	15
  6417                           	global	__size_of___wmul
  6418                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  6419  002E                     	
  6420                           ___wmul:	
  6421  1472                     ;incstack = 0
  6422                           	opt	stack 5
  6423                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6424                           	line	43
  6425                           	
  6426                           l3604:	
  6427  1472                     	bcf	status, 5	;RP0=0, select bank0
  6428  1472  1283               	bcf	status, 6	;RP1=0, select bank0
  6429  1473  1303               	clrf	(___wmul@product)
  6430  1474  01A0               	clrf	(___wmul@product+1)
  6431  1475  01A1               	goto	l3606
  6432  1476  2C77               	line	44
  6433                           	
  6434                           l458:	
  6435  1477                     	line	45
  6436                           	
  6437                           l3606:	
  6438  1477                     	btfss	(___wmul@multiplier),(0)&7
  6439  1477  1C73               	goto	u5101
  6440  1478  2C7A               	goto	u5100
  6441  1479  2C7B               u5101:
  6442  147A                     	goto	l459
  6443  147A  2C83               u5100:
  6444  147B                     	line	46
  6445                           	
  6446                           l3608:	
  6447  147B                     	movf	(___wmul@multiplicand),w
  6448  147B  0875               	bcf	status, 5	;RP0=0, select bank0
  6449  147C  1283               	bcf	status, 6	;RP1=0, select bank0
  6450  147D  1303               	addwf	(___wmul@product),f
  6451  147E  07A0               	skipnc
  6452  147F  1803               	incf	(___wmul@product+1),f
  6453  1480  0AA1               	movf	(___wmul@multiplicand+1),w
  6454  1481  0876               	addwf	(___wmul@product+1),f
  6455  1482  07A1               	
  6456                           l459:	
  6457  1483                     	line	47
  6458                           	movlw	01h
  6459  1483  3001               	
  6460                           u5115:
  6461  1484                     	clrc
  6462  1484  1003               	rlf	(___wmul@multiplicand),f
  6463  1485  0DF5               	rlf	(___wmul@multiplicand+1),f
  6464  1486  0DF6               	addlw	-1
  6465  1487  3EFF               	skipz
  6466  1488  1D03               	goto	u5115
  6467  1489  2C84               	line	48
  6468                           	
  6469                           l3610:	
  6470  148A                     	movlw	01h
  6471  148A  3001               	
  6472                           u5125:
  6473  148B                     	clrc
  6474  148B  1003               	rrf	(___wmul@multiplier+1),f
  6475  148C  0CF4               	rrf	(___wmul@multiplier),f
  6476  148D  0CF3               	addlw	-1
  6477  148E  3EFF               	skipz
  6478  148F  1D03               	goto	u5125
  6479  1490  2C8B               	line	49
  6480                           	
  6481                           l3612:	
  6482  1491                     	movf	((___wmul@multiplier)),w
  6483  1491  0873               iorwf	((___wmul@multiplier+1)),w
  6484  1492  0474               	btfss	status,2
  6485  1493  1D03               	goto	u5131
  6486  1494  2C96               	goto	u5130
  6487  1495  2C97               u5131:
  6488  1496                     	goto	l3606
  6489  1496  2C77               u5130:
  6490  1497                     	goto	l3614
  6491  1497  2C98               	
  6492                           l460:	
  6493  1498                     	line	52
  6494                           	
  6495                           l3614:	
  6496  1498                     	bcf	status, 5	;RP0=0, select bank0
  6497  1498  1283               	bcf	status, 6	;RP1=0, select bank0
  6498  1499  1303               	movf	(___wmul@product+1),w
  6499  149A  0821               	movwf	(?___wmul+1)
  6500  149B  00F4               	movf	(___wmul@product),w
  6501  149C  0820               	movwf	(?___wmul)
  6502  149D  00F3               	goto	l461
  6503  149E  2C9F               	
  6504                           l3616:	
  6505  149F                     	line	53
  6506                           	
  6507                           l461:	
  6508  149F                     	return
  6509  149F  0008               	opt stack 0
  6510                           GLOBAL	__end_of___wmul
  6511                           	__end_of___wmul:
  6512  14A0                     	signat	___wmul,8314
  6513                           	global	___fltol
  6514                           
  6515 ;; *************** function ___fltol *****************
  6516 ;; Defined at:
  6517 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  6518 ;; Parameters:    Size  Location     Type
  6519 ;;  f1              4    3[COMMON] unsigned int 
  6520 ;; Auto vars:     Size  Location     Type
  6521 ;;  exp1            1    6[BANK0 ] unsigned char 
  6522 ;;  sign1           1    5[BANK0 ] unsigned char 
  6523 ;; Return value:  Size  Location     Type
  6524 ;;                  4    3[COMMON] long 
  6525 ;; Registers used:
  6526 ;;		wreg, status,2, status,0
  6527 ;; Tracked objects:
  6528 ;;		On entry : 0/0
  6529 ;;		On exit  : 0/0
  6530 ;;		Unchanged: 0/0
  6531 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6532 ;;      Params:         4       0       0       0       0
  6533 ;;      Locals:         0       2       0       0       0
  6534 ;;      Temps:          0       5       0       0       0
  6535 ;;      Totals:         4       7       0       0       0
  6536 ;;Total ram usage:       11 bytes
  6537 ;; Hardware stack levels used:    1
  6538 ;; Hardware stack levels required when called:    2
  6539 ;; This function calls:
  6540 ;;		Nothing
  6541 ;; This function is called by:
  6542 ;;		_main
  6543 ;; This function uses a non-reentrant model
  6544 ;;
  6545                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  6546                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  6547                           	line	43
  6548                           global __ptext16
  6549                           __ptext16:	;psect for function ___fltol
  6550  1764                     psect	text16
  6551                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  6552                           	line	43
  6553                           	global	__size_of___fltol
  6554                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  6555  009C                     	
  6556                           ___fltol:	
  6557  1764                     ;incstack = 0
  6558                           	opt	stack 5
  6559                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6560                           	line	47
  6561                           	
  6562                           l3656:	
  6563  1764                     	movf	(___fltol@f1),w
  6564  1764  0873               	bcf	status, 5	;RP0=0, select bank0
  6565  1765  1283               	bcf	status, 6	;RP1=0, select bank0
  6566  1766  1303               	movwf	(??___fltol+0)+0
  6567  1767  00A0               	movf	(___fltol@f1+1),w
  6568  1768  0874               	movwf	((??___fltol+0)+0+1)
  6569  1769  00A1               	movf	(___fltol@f1+2),w
  6570  176A  0875               	movwf	((??___fltol+0)+0+2)
  6571  176B  00A2               	movf	(___fltol@f1+3),w
  6572  176C  0876               	movwf	((??___fltol+0)+0+3)
  6573  176D  00A3               	clrc
  6574  176E  1003               	rlf	(??___fltol+0)+2,w
  6575  176F  0D22               	rlf	(??___fltol+0)+3,w
  6576  1770  0D23               	movwf	(??___fltol+4)+0
  6577  1771  00A4               	movf	(??___fltol+4)+0,w
  6578  1772  0824               	movwf	(___fltol@exp1)
  6579  1773  00A6               	movf	(((___fltol@exp1))),w
  6580  1774  0826               	btfss	status,2
  6581  1775  1D03               	goto	u5231
  6582  1776  2F78               	goto	u5230
  6583  1777  2F79               u5231:
  6584  1778                     	goto	l3662
  6585  1778  2F83               u5230:
  6586  1779                     	line	48
  6587                           	
  6588                           l3658:	
  6589  1779                     	movlw	high highword(0)
  6590  1779  3000               	movwf	(?___fltol+3)
  6591  177A  00F6               	movlw	low highword(0)
  6592  177B  3000               	movwf	(?___fltol+2)
  6593  177C  00F5               	movlw	high(0)
  6594  177D  3000               	movwf	(?___fltol+1)
  6595  177E  00F4               	movlw	low(0)
  6596  177F  3000               	movwf	(?___fltol)
  6597  1780  00F3               
  6598                           	goto	l645
  6599  1781  2FFF               	
  6600                           l3660:	
  6601  1782                     	goto	l645
  6602  1782  2FFF               	
  6603                           l644:	
  6604  1783                     	line	49
  6605                           	
  6606                           l3662:	
  6607  1783                     	movf	(___fltol@f1),w
  6608  1783  0873               	movwf	(??___fltol+0)+0
  6609  1784  00A0               	movf	(___fltol@f1+1),w
  6610  1785  0874               	movwf	((??___fltol+0)+0+1)
  6611  1786  00A1               	movf	(___fltol@f1+2),w
  6612  1787  0875               	movwf	((??___fltol+0)+0+2)
  6613  1788  00A2               	movf	(___fltol@f1+3),w
  6614  1789  0876               	movwf	((??___fltol+0)+0+3)
  6615  178A  00A3               	movlw	01Fh
  6616  178B  301F               u5245:
  6617  178C                     	clrc
  6618  178C  1003               	rrf	(??___fltol+0)+3,f
  6619  178D  0CA3               	rrf	(??___fltol+0)+2,f
  6620  178E  0CA2               	rrf	(??___fltol+0)+1,f
  6621  178F  0CA1               	rrf	(??___fltol+0)+0,f
  6622  1790  0CA0               u5240:
  6623  1791                     	addlw	-1
  6624  1791  3EFF               	skipz
  6625  1792  1D03               	goto	u5245
  6626  1793  2F8C               	movf	0+(??___fltol+0)+0,w
  6627  1794  0820               	movwf	(??___fltol+4)+0
  6628  1795  00A4               	movf	(??___fltol+4)+0,w
  6629  1796  0824               	movwf	(___fltol@sign1)
  6630  1797  00A5               	line	50
  6631                           	
  6632                           l3664:	
  6633  1798                     	bsf	(___fltol@f1)+(23/8),(23)&7
  6634  1798  17F5               	line	51
  6635                           	
  6636                           l3666:	
  6637  1799                     	movlw	0FFh
  6638  1799  30FF               	andwf	(___fltol@f1),f
  6639  179A  05F3               	movlw	0FFh
  6640  179B  30FF               	andwf	(___fltol@f1+1),f
  6641  179C  05F4               	movlw	0FFh
  6642  179D  30FF               	andwf	(___fltol@f1+2),f
  6643  179E  05F5               	movlw	0
  6644  179F  3000               	andwf	(___fltol@f1+3),f
  6645  17A0  05F6               	line	52
  6646                           	
  6647                           l3668:	
  6648  17A1                     	movlw	096h
  6649  17A1  3096               	subwf	(___fltol@exp1),f
  6650  17A2  02A6               	line	53
  6651                           	
  6652                           l3670:	
  6653  17A3                     	btfss	(___fltol@exp1),7
  6654  17A3  1FA6               	goto	u5251
  6655  17A4  2FA6               	goto	u5250
  6656  17A5  2FA7               u5251:
  6657  17A6                     	goto	l3680
  6658  17A6  2FCC               u5250:
  6659  17A7                     	line	54
  6660                           	
  6661                           l3672:	
  6662  17A7                     	movf	(___fltol@exp1),w
  6663  17A7  0826               	xorlw	80h
  6664  17A8  3A80               	addlw	-((-23)^80h)
  6665  17A9  3E97               	skipnc
  6666  17AA  1803               	goto	u5261
  6667  17AB  2FAD               	goto	u5260
  6668  17AC  2FAE               u5261:
  6669  17AD                     	goto	l3678
  6670  17AD  2FB9               u5260:
  6671  17AE                     	line	55
  6672                           	
  6673                           l3674:	
  6674  17AE                     	movlw	high highword(0)
  6675  17AE  3000               	movwf	(?___fltol+3)
  6676  17AF  00F6               	movlw	low highword(0)
  6677  17B0  3000               	movwf	(?___fltol+2)
  6678  17B1  00F5               	movlw	high(0)
  6679  17B2  3000               	movwf	(?___fltol+1)
  6680  17B3  00F4               	movlw	low(0)
  6681  17B4  3000               	movwf	(?___fltol)
  6682  17B5  00F3               
  6683                           	goto	l645
  6684  17B6  2FFF               	
  6685                           l3676:	
  6686  17B7                     	goto	l645
  6687  17B7  2FFF               	
  6688                           l647:	
  6689  17B8                     	goto	l3678
  6690  17B8  2FB9               	line	56
  6691                           	
  6692                           l648:	
  6693  17B9                     	line	57
  6694                           	
  6695                           l3678:	
  6696  17B9                     	movlw	01h
  6697  17B9  3001               u5275:
  6698  17BA                     	clrc
  6699  17BA  1003               	rrf	(___fltol@f1+3),f
  6700  17BB  0CF6               	rrf	(___fltol@f1+2),f
  6701  17BC  0CF5               	rrf	(___fltol@f1+1),f
  6702  17BD  0CF4               	rrf	(___fltol@f1),f
  6703  17BE  0CF3               	addlw	-1
  6704  17BF  3EFF               	skipz
  6705  17C0  1D03               	goto	u5275
  6706  17C1  2FBA               
  6707                           	line	58
  6708                           	movlw	low(01h)
  6709  17C2  3001               	movwf	(??___fltol+0)+0
  6710  17C3  00A0               	movf	(??___fltol+0)+0,w
  6711  17C4  0820               	addwf	(___fltol@exp1),f
  6712  17C5  07A6               	btfss	status,2
  6713  17C6  1D03               	goto	u5281
  6714  17C7  2FC9               	goto	u5280
  6715  17C8  2FCA               u5281:
  6716  17C9                     	goto	l3678
  6717  17C9  2FB9               u5280:
  6718  17CA                     	goto	l3688
  6719  17CA  2FEF               	
  6720                           l649:	
  6721  17CB                     	line	59
  6722                           	goto	l3688
  6723  17CB  2FEF               	
  6724                           l646:	
  6725  17CC                     	line	60
  6726                           	
  6727                           l3680:	
  6728  17CC                     	movlw	low(020h)
  6729  17CC  3020               	subwf	(___fltol@exp1),w
  6730  17CD  0226               	skipc
  6731  17CE  1C03               	goto	u5291
  6732  17CF  2FD1               	goto	u5290
  6733  17D0  2FD2               u5291:
  6734  17D1                     	goto	l652
  6735  17D1  2FE8               u5290:
  6736  17D2                     	line	61
  6737                           	
  6738                           l3682:	
  6739  17D2                     	movlw	high highword(0)
  6740  17D2  3000               	movwf	(?___fltol+3)
  6741  17D3  00F6               	movlw	low highword(0)
  6742  17D4  3000               	movwf	(?___fltol+2)
  6743  17D5  00F5               	movlw	high(0)
  6744  17D6  3000               	movwf	(?___fltol+1)
  6745  17D7  00F4               	movlw	low(0)
  6746  17D8  3000               	movwf	(?___fltol)
  6747  17D9  00F3               
  6748                           	goto	l645
  6749  17DA  2FFF               	
  6750                           l3684:	
  6751  17DB                     	goto	l645
  6752  17DB  2FFF               	
  6753                           l651:	
  6754  17DC                     	line	62
  6755                           	goto	l652
  6756  17DC  2FE8               	
  6757                           l653:	
  6758  17DD                     	line	63
  6759                           	
  6760                           l3686:	
  6761  17DD                     	movlw	01h
  6762  17DD  3001               	movwf	(??___fltol+0)+0
  6763  17DE  00A0               u5305:
  6764  17DF                     	clrc
  6765  17DF  1003               	rlf	(___fltol@f1),f
  6766  17E0  0DF3               	rlf	(___fltol@f1+1),f
  6767  17E1  0DF4               	rlf	(___fltol@f1+2),f
  6768  17E2  0DF5               	rlf	(___fltol@f1+3),f
  6769  17E3  0DF6               	decfsz	(??___fltol+0)+0
  6770  17E4  0BA0               	goto	u5305
  6771  17E5  2FDF               	line	64
  6772                           	movlw	01h
  6773  17E6  3001               	subwf	(___fltol@exp1),f
  6774  17E7  02A6               	line	65
  6775                           	
  6776                           l652:	
  6777  17E8                     	line	62
  6778                           	movf	((___fltol@exp1)),w
  6779  17E8  0826               	btfss	status,2
  6780  17E9  1D03               	goto	u5311
  6781  17EA  2FEC               	goto	u5310
  6782  17EB  2FED               u5311:
  6783  17EC                     	goto	l3686
  6784  17EC  2FDD               u5310:
  6785  17ED                     	goto	l3688
  6786  17ED  2FEF               	
  6787                           l654:	
  6788  17EE                     	goto	l3688
  6789  17EE  2FEF               	line	66
  6790                           	
  6791                           l650:	
  6792  17EF                     	line	67
  6793                           	
  6794                           l3688:	
  6795  17EF                     	movf	((___fltol@sign1)),w
  6796  17EF  0825               	btfsc	status,2
  6797  17F0  1903               	goto	u5321
  6798  17F1  2FF3               	goto	u5320
  6799  17F2  2FF4               u5321:
  6800  17F3                     	goto	l655
  6801  17F3  2FFF               u5320:
  6802  17F4                     	line	68
  6803                           	
  6804                           l3690:	
  6805  17F4                     	comf	(___fltol@f1),f
  6806  17F4  09F3               	comf	(___fltol@f1+1),f
  6807  17F5  09F4               	comf	(___fltol@f1+2),f
  6808  17F6  09F5               	comf	(___fltol@f1+3),f
  6809  17F7  09F6               	incf	(___fltol@f1),f
  6810  17F8  0AF3               	skipnz
  6811  17F9  1903               	incf	(___fltol@f1+1),f
  6812  17FA  0AF4               	skipnz
  6813  17FB  1903               	incf	(___fltol@f1+2),f
  6814  17FC  0AF5               	skipnz
  6815  17FD  1903               	incf	(___fltol@f1+3),f
  6816  17FE  0AF6               	
  6817                           l655:	
  6818  17FF                     	line	69
  6819                           	line	70
  6820                           	
  6821                           l645:	
  6822  17FF                     	return
  6823  17FF  0008               	opt stack 0
  6824                           GLOBAL	__end_of___fltol
  6825                           	__end_of___fltol:
  6826  1800                     	signat	___fltol,4220
  6827                           	global	___flneg
  6828                           
  6829 ;; *************** function ___flneg *****************
  6830 ;; Defined at:
  6831 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  6832 ;; Parameters:    Size  Location     Type
  6833 ;;  f1              4   10[BANK0 ] long 
  6834 ;; Auto vars:     Size  Location     Type
  6835 ;;		None
  6836 ;; Return value:  Size  Location     Type
  6837 ;;                  4   10[BANK0 ] long 
  6838 ;; Registers used:
  6839 ;;		wreg
  6840 ;; Tracked objects:
  6841 ;;		On entry : 0/0
  6842 ;;		On exit  : 0/0
  6843 ;;		Unchanged: 0/0
  6844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6845 ;;      Params:         0       4       0       0       0
  6846 ;;      Locals:         0       0       0       0       0
  6847 ;;      Temps:          0       0       0       0       0
  6848 ;;      Totals:         0       4       0       0       0
  6849 ;;Total ram usage:        4 bytes
  6850 ;; Hardware stack levels used:    1
  6851 ;; Hardware stack levels required when called:    2
  6852 ;; This function calls:
  6853 ;;		Nothing
  6854 ;; This function is called by:
  6855 ;;		_main
  6856 ;; This function uses a non-reentrant model
  6857 ;;
  6858                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  6859                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  6860                           	line	15
  6861                           global __ptext17
  6862                           __ptext17:	;psect for function ___flneg
  6863  13A5                     psect	text17
  6864                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  6865                           	line	15
  6866                           	global	__size_of___flneg
  6867                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  6868  000F                     	
  6869                           ___flneg:	
  6870  13A5                     ;incstack = 0
  6871                           	opt	stack 5
  6872                           ; Regs used in ___flneg: [wreg]
  6873                           	line	17
  6874                           	
  6875                           l2548:	
  6876  13A5                     	bcf	status, 5	;RP0=0, select bank0
  6877  13A5  1283               	bcf	status, 6	;RP1=0, select bank0
  6878  13A6  1303               	movf	(___flneg@f1+3),w
  6879  13A7  082D               	iorwf	(___flneg@f1+2),w
  6880  13A8  042C               	iorwf	(___flneg@f1+1),w
  6881  13A9  042B               	iorwf	(___flneg@f1),w
  6882  13AA  042A               	skipnz
  6883  13AB  1903               	goto	u3021
  6884  13AC  2BAE               	goto	u3020
  6885  13AD  2BAF               u3021:
  6886  13AE                     	goto	l2552
  6887  13AE  2BB2               u3020:
  6888  13AF                     	line	18
  6889                           	
  6890                           l2550:	
  6891  13AF                     	movlw	080h
  6892  13AF  3080               	xorwf	(___flneg@f1+3),f
  6893  13B0  06AD               	goto	l2552
  6894  13B1  2BB2               	
  6895                           l640:	
  6896  13B2                     	line	19
  6897                           	
  6898                           l2552:	
  6899  13B2                     	goto	l641
  6900  13B2  2BB3               	
  6901                           l2554:	
  6902  13B3                     	line	20
  6903                           	
  6904                           l641:	
  6905  13B3                     	return
  6906  13B3  0008               	opt stack 0
  6907                           GLOBAL	__end_of___flneg
  6908                           	__end_of___flneg:
  6909  13B4                     	signat	___flneg,4220
  6910                           	global	___flmul
  6911                           
  6912 ;; *************** function ___flmul *****************
  6913 ;; Defined at:
  6914 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  6915 ;; Parameters:    Size  Location     Type
  6916 ;;  b               4   38[BANK0 ] long 
  6917 ;;  a               4   42[BANK0 ] long 
  6918 ;; Auto vars:     Size  Location     Type
  6919 ;;  prod            4   58[BANK0 ] struct .
  6920 ;;  grs             4   52[BANK0 ] unsigned long 
  6921 ;;  temp            2   62[BANK0 ] struct .
  6922 ;;  bexp            1   57[BANK0 ] unsigned char 
  6923 ;;  aexp            1   56[BANK0 ] unsigned char 
  6924 ;;  sign            1   51[BANK0 ] unsigned char 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  4   38[BANK0 ] unsigned char 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6934 ;;      Params:         0       8       0       0       0
  6935 ;;      Locals:         0      13       0       0       0
  6936 ;;      Temps:          0       5       0       0       0
  6937 ;;      Totals:         0      26       0       0       0
  6938 ;;Total ram usage:       26 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; Hardware stack levels required when called:    3
  6941 ;; This function calls:
  6942 ;;		__Umul8_16
  6943 ;; This function is called by:
  6944 ;;		_main
  6945 ;; This function uses a non-reentrant model
  6946 ;;
  6947                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  6948                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  6949                           	line	8
  6950                           global __ptext18
  6951                           __ptext18:	;psect for function ___flmul
  6952  0C8B                     psect	text18
  6953                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  6954                           	line	8
  6955                           	global	__size_of___flmul
  6956                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  6957  0375                     	
  6958                           ___flmul:	
  6959  0C8B                     ;incstack = 0
  6960                           	opt	stack 4
  6961                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6962                           	line	17
  6963                           	
  6964                           l2928:	
  6965  0C8B                     	bcf	status, 5	;RP0=0, select bank0
  6966  0C8B  1283               	bcf	status, 6	;RP1=0, select bank0
  6967  0C8C  1303               	movf	0+(___flmul@b)+03h,w
  6968  0C8D  0849               	andlw	080h
  6969  0C8E  3980               	movwf	(??___flmul+0)+0
  6970  0C8F  00CE               	movf	(??___flmul+0)+0,w
  6971  0C90  084E               	movwf	(___flmul@sign)
  6972  0C91  00D3               	line	18
  6973                           	
  6974                           l2930:	
  6975  0C92                     	movf	0+(___flmul@b)+03h,w
  6976  0C92  0849               	movwf	(??___flmul+0)+0
  6977  0C93  00CE               	addwf	(??___flmul+0)+0,w
  6978  0C94  074E               	movwf	(??___flmul+1)+0
  6979  0C95  00CF               	movf	(??___flmul+1)+0,w
  6980  0C96  084F               	movwf	(___flmul@bexp)
  6981  0C97  00D9               	line	19
  6982                           	
  6983                           l2932:	
  6984  0C98                     	btfss	0+(___flmul@b)+02h,(7)&7
  6985  0C98  1FC8               	goto	u3891
  6986  0C99  2C9B               	goto	u3890
  6987  0C9A  2C9C               u3891:
  6988  0C9B                     	goto	l2936
  6989  0C9B  2C9E               u3890:
  6990  0C9C                     	line	20
  6991                           	
  6992                           l2934:	
  6993  0C9C                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  6994  0C9C  1459               	goto	l2936
  6995  0C9D  2C9E               	line	21
  6996                           	
  6997                           l837:	
  6998  0C9E                     	line	24
  6999                           	
  7000                           l2936:	
  7001  0C9E                     	movf	((___flmul@bexp)),w
  7002  0C9E  0859               	btfsc	status,2
  7003  0C9F  1903               	goto	u3901
  7004  0CA0  2CA2               	goto	u3900
  7005  0CA1  2CA3               u3901:
  7006  0CA2                     	goto	l2944
  7007  0CA2  2CB3               u3900:
  7008  0CA3                     	line	26
  7009                           	
  7010                           l2938:	
  7011  0CA3                     		incf	((___flmul@bexp)),w
  7012  0CA3  0A59               	btfss	status,2
  7013  0CA4  1D03               	goto	u3911
  7014  0CA5  2CA7               	goto	u3910
  7015  0CA6  2CA8               u3911:
  7016  0CA7                     	goto	l2942
  7017  0CA7  2CB1               u3910:
  7018  0CA8                     	line	28
  7019                           	
  7020                           l2940:	
  7021  0CA8                     	movlw	0x0
  7022  0CA8  3000               	movwf	(___flmul@b+3)
  7023  0CA9  00C9               	movlw	0x0
  7024  0CAA  3000               	movwf	(___flmul@b+2)
  7025  0CAB  00C8               	movlw	0x0
  7026  0CAC  3000               	movwf	(___flmul@b+1)
  7027  0CAD  00C7               	movlw	0x0
  7028  0CAE  3000               	movwf	(___flmul@b)
  7029  0CAF  00C6               
  7030                           	goto	l2942
  7031  0CB0  2CB1               	line	29
  7032                           	
  7033                           l839:	
  7034  0CB1                     	line	31
  7035                           	
  7036                           l2942:	
  7037  0CB1                     	bsf	(___flmul@b)+(23/8),(23)&7
  7038  0CB1  17C8               	line	33
  7039                           	goto	l2946
  7040  0CB2  2CBC               	line	34
  7041                           	
  7042                           l838:	
  7043  0CB3                     	line	36
  7044                           	
  7045                           l2944:	
  7046  0CB3                     	movlw	0x0
  7047  0CB3  3000               	movwf	(___flmul@b+3)
  7048  0CB4  00C9               	movlw	0x0
  7049  0CB5  3000               	movwf	(___flmul@b+2)
  7050  0CB6  00C8               	movlw	0x0
  7051  0CB7  3000               	movwf	(___flmul@b+1)
  7052  0CB8  00C7               	movlw	0x0
  7053  0CB9  3000               	movwf	(___flmul@b)
  7054  0CBA  00C6               
  7055                           	goto	l2946
  7056  0CBB  2CBC               	line	37
  7057                           	
  7058                           l840:	
  7059  0CBC                     	line	39
  7060                           	
  7061                           l2946:	
  7062  0CBC                     	movf	0+(___flmul@a)+03h,w
  7063  0CBC  084D               	andlw	080h
  7064  0CBD  3980               	movwf	(??___flmul+0)+0
  7065  0CBE  00CE               	movf	(??___flmul+0)+0,w
  7066  0CBF  084E               	xorwf	(___flmul@sign),f
  7067  0CC0  06D3               	line	40
  7068                           	
  7069                           l2948:	
  7070  0CC1                     	movf	0+(___flmul@a)+03h,w
  7071  0CC1  084D               	movwf	(??___flmul+0)+0
  7072  0CC2  00CE               	addwf	(??___flmul+0)+0,w
  7073  0CC3  074E               	movwf	(??___flmul+1)+0
  7074  0CC4  00CF               	movf	(??___flmul+1)+0,w
  7075  0CC5  084F               	movwf	(___flmul@aexp)
  7076  0CC6  00D8               	line	41
  7077                           	
  7078                           l2950:	
  7079  0CC7                     	btfss	0+(___flmul@a)+02h,(7)&7
  7080  0CC7  1FCC               	goto	u3921
  7081  0CC8  2CCA               	goto	u3920
  7082  0CC9  2CCB               u3921:
  7083  0CCA                     	goto	l2954
  7084  0CCA  2CCD               u3920:
  7085  0CCB                     	line	42
  7086                           	
  7087                           l2952:	
  7088  0CCB                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  7089  0CCB  1458               	goto	l2954
  7090  0CCC  2CCD               	line	43
  7091                           	
  7092                           l841:	
  7093  0CCD                     	line	45
  7094                           	
  7095                           l2954:	
  7096  0CCD                     	movf	((___flmul@aexp)),w
  7097  0CCD  0858               	btfsc	status,2
  7098  0CCE  1903               	goto	u3931
  7099  0CCF  2CD1               	goto	u3930
  7100  0CD0  2CD2               u3931:
  7101  0CD1                     	goto	l2962
  7102  0CD1  2CE2               u3930:
  7103  0CD2                     	line	48
  7104                           	
  7105                           l2956:	
  7106  0CD2                     		incf	((___flmul@aexp)),w
  7107  0CD2  0A58               	btfss	status,2
  7108  0CD3  1D03               	goto	u3941
  7109  0CD4  2CD6               	goto	u3940
  7110  0CD5  2CD7               u3941:
  7111  0CD6                     	goto	l2960
  7112  0CD6  2CE0               u3940:
  7113  0CD7                     	line	50
  7114                           	
  7115                           l2958:	
  7116  0CD7                     	movlw	0x0
  7117  0CD7  3000               	movwf	(___flmul@a+3)
  7118  0CD8  00CD               	movlw	0x0
  7119  0CD9  3000               	movwf	(___flmul@a+2)
  7120  0CDA  00CC               	movlw	0x0
  7121  0CDB  3000               	movwf	(___flmul@a+1)
  7122  0CDC  00CB               	movlw	0x0
  7123  0CDD  3000               	movwf	(___flmul@a)
  7124  0CDE  00CA               
  7125                           	goto	l2960
  7126  0CDF  2CE0               	line	51
  7127                           	
  7128                           l843:	
  7129  0CE0                     	line	53
  7130                           	
  7131                           l2960:	
  7132  0CE0                     	bsf	(___flmul@a)+(23/8),(23)&7
  7133  0CE0  17CC               	line	54
  7134                           	goto	l2964
  7135  0CE1  2CEB               	line	55
  7136                           	
  7137                           l842:	
  7138  0CE2                     	line	57
  7139                           	
  7140                           l2962:	
  7141  0CE2                     	movlw	0x0
  7142  0CE2  3000               	movwf	(___flmul@a+3)
  7143  0CE3  00CD               	movlw	0x0
  7144  0CE4  3000               	movwf	(___flmul@a+2)
  7145  0CE5  00CC               	movlw	0x0
  7146  0CE6  3000               	movwf	(___flmul@a+1)
  7147  0CE7  00CB               	movlw	0x0
  7148  0CE8  3000               	movwf	(___flmul@a)
  7149  0CE9  00CA               
  7150                           	goto	l2964
  7151  0CEA  2CEB               	line	58
  7152                           	
  7153                           l844:	
  7154  0CEB                     	line	65
  7155                           	
  7156                           l2964:	
  7157  0CEB                     	movf	((___flmul@aexp)),w
  7158  0CEB  0858               	btfsc	status,2
  7159  0CEC  1903               	goto	u3951
  7160  0CED  2CEF               	goto	u3950
  7161  0CEE  2CF0               u3951:
  7162  0CEF                     	goto	l2968
  7163  0CEF  2CF6               u3950:
  7164  0CF0                     	
  7165                           l2966:	
  7166  0CF0                     	movf	((___flmul@bexp)),w
  7167  0CF0  0859               	btfss	status,2
  7168  0CF1  1D03               	goto	u3961
  7169  0CF2  2CF4               	goto	u3960
  7170  0CF3  2CF5               u3961:
  7171  0CF4                     	goto	l2972
  7172  0CF4  2D00               u3960:
  7173  0CF5                     	goto	l2968
  7174  0CF5  2CF6               	
  7175                           l847:	
  7176  0CF6                     	line	66
  7177                           	
  7178                           l2968:	
  7179  0CF6                     	movlw	0x0
  7180  0CF6  3000               	movwf	(?___flmul+3)
  7181  0CF7  00C9               	movlw	0x0
  7182  0CF8  3000               	movwf	(?___flmul+2)
  7183  0CF9  00C8               	movlw	0x0
  7184  0CFA  3000               	movwf	(?___flmul+1)
  7185  0CFB  00C7               	movlw	0x0
  7186  0CFC  3000               	movwf	(?___flmul)
  7187  0CFD  00C6               
  7188                           	goto	l848
  7189  0CFE  2FFF               	
  7190                           l2970:	
  7191  0CFF                     	goto	l848
  7192  0CFF  2FFF               	line	67
  7193                           	
  7194                           l845:	
  7195  0D00                     	line	119
  7196                           	
  7197                           l2972:	
  7198  0D00                     	movf	(___flmul@b),w
  7199  0D00  0846               	movwf	(??___flmul+0)+0
  7200  0D01  00CE               	movf	(??___flmul+0)+0,w
  7201  0D02  084E               	movwf	(__Umul8_16@multiplicand)
  7202  0D03  00F3               	movf	0+(___flmul@a)+02h,w
  7203  0D04  084C               	fcall	__Umul8_16
  7204  0D05  160A  118A  2446  120A  158A  	movf	(1+(?__Umul8_16)),w
  7205  0D0A  0874               	bcf	status, 5	;RP0=0, select bank0
  7206  0D0B  1283               	bcf	status, 6	;RP1=0, select bank0
  7207  0D0C  1303               	movwf	(___flmul@temp+1)
  7208  0D0D  00DF               	movf	(0+(?__Umul8_16)),w
  7209  0D0E  0873               	movwf	(___flmul@temp)
  7210  0D0F  00DE               	line	120
  7211                           	
  7212                           l2974:	
  7213  0D10                     	movf	(___flmul@temp),w
  7214  0D10  085E               	movwf	(??___flmul+0)+0
  7215  0D11  00CE               	clrf	(??___flmul+0)+0+1
  7216  0D12  01CF               	clrf	(??___flmul+0)+0+2
  7217  0D13  01D0               	clrf	(??___flmul+0)+0+3
  7218  0D14  01D1               	movf	3+(??___flmul+0)+0,w
  7219  0D15  0851               	movwf	(___flmul@grs+3)
  7220  0D16  00D7               	movf	2+(??___flmul+0)+0,w
  7221  0D17  0850               	movwf	(___flmul@grs+2)
  7222  0D18  00D6               	movf	1+(??___flmul+0)+0,w
  7223  0D19  084F               	movwf	(___flmul@grs+1)
  7224  0D1A  00D5               	movf	0+(??___flmul+0)+0,w
  7225  0D1B  084E               	movwf	(___flmul@grs)
  7226  0D1C  00D4               
  7227                           	line	121
  7228                           	
  7229                           l2976:	
  7230  0D1D                     	movf	0+(___flmul@temp)+01h,w
  7231  0D1D  085F               	movwf	(??___flmul+0)+0
  7232  0D1E  00CE               	clrf	(??___flmul+0)+0+1
  7233  0D1F  01CF               	clrf	(??___flmul+0)+0+2
  7234  0D20  01D0               	clrf	(??___flmul+0)+0+3
  7235  0D21  01D1               	movf	3+(??___flmul+0)+0,w
  7236  0D22  0851               	movwf	(___flmul@prod+3)
  7237  0D23  00DD               	movf	2+(??___flmul+0)+0,w
  7238  0D24  0850               	movwf	(___flmul@prod+2)
  7239  0D25  00DC               	movf	1+(??___flmul+0)+0,w
  7240  0D26  084F               	movwf	(___flmul@prod+1)
  7241  0D27  00DB               	movf	0+(??___flmul+0)+0,w
  7242  0D28  084E               	movwf	(___flmul@prod)
  7243  0D29  00DA               
  7244                           	line	122
  7245                           	movf	0+(___flmul@b)+01h,w
  7246  0D2A  0847               	movwf	(??___flmul+0)+0
  7247  0D2B  00CE               	movf	(??___flmul+0)+0,w
  7248  0D2C  084E               	movwf	(__Umul8_16@multiplicand)
  7249  0D2D  00F3               	movf	0+(___flmul@a)+01h,w
  7250  0D2E  084B               	fcall	__Umul8_16
  7251  0D2F  160A  118A  2446  120A  158A  	movf	(1+(?__Umul8_16)),w
  7252  0D34  0874               	bcf	status, 5	;RP0=0, select bank0
  7253  0D35  1283               	bcf	status, 6	;RP1=0, select bank0
  7254  0D36  1303               	movwf	(___flmul@temp+1)
  7255  0D37  00DF               	movf	(0+(?__Umul8_16)),w
  7256  0D38  0873               	movwf	(___flmul@temp)
  7257  0D39  00DE               	line	123
  7258                           	
  7259                           l2978:	
  7260  0D3A                     	movf	(___flmul@temp),w
  7261  0D3A  085E               	movwf	(??___flmul+0)+0
  7262  0D3B  00CE               	clrf	(??___flmul+0)+0+1
  7263  0D3C  01CF               	clrf	(??___flmul+0)+0+2
  7264  0D3D  01D0               	clrf	(??___flmul+0)+0+3
  7265  0D3E  01D1               	movf	0+(??___flmul+0)+0,w
  7266  0D3F  084E               	addwf	(___flmul@grs),f
  7267  0D40  07D4               	movf	1+(??___flmul+0)+0,w
  7268  0D41  084F               	clrz
  7269  0D42  1103               	skipnc
  7270  0D43  1803               	addlw	1
  7271  0D44  3E01               	skipnz
  7272  0D45  1903               	goto	u3971
  7273  0D46  2D48               	addwf	(___flmul@grs+1),f
  7274  0D47  07D5               u3971:
  7275  0D48                     	movf	2+(??___flmul+0)+0,w
  7276  0D48  0850               	clrz
  7277  0D49  1103               	skipnc
  7278  0D4A  1803               	addlw	1
  7279  0D4B  3E01               	skipnz
  7280  0D4C  1903               	goto	u3972
  7281  0D4D  2D4F               	addwf	(___flmul@grs+2),f
  7282  0D4E  07D6               u3972:
  7283  0D4F                     	movf	3+(??___flmul+0)+0,w
  7284  0D4F  0851               	clrz
  7285  0D50  1103               	skipnc
  7286  0D51  1803               	addlw	1
  7287  0D52  3E01               	skipnz
  7288  0D53  1903               	goto	u3973
  7289  0D54  2D56               	addwf	(___flmul@grs+3),f
  7290  0D55  07D7               u3973:
  7291  0D56                     
  7292                           	line	124
  7293                           	
  7294                           l2980:	
  7295  0D56                     	movf	0+(___flmul@temp)+01h,w
  7296  0D56  085F               	movwf	(??___flmul+0)+0
  7297  0D57  00CE               	clrf	(??___flmul+0)+0+1
  7298  0D58  01CF               	clrf	(??___flmul+0)+0+2
  7299  0D59  01D0               	clrf	(??___flmul+0)+0+3
  7300  0D5A  01D1               	movf	0+(??___flmul+0)+0,w
  7301  0D5B  084E               	addwf	(___flmul@prod),f
  7302  0D5C  07DA               	movf	1+(??___flmul+0)+0,w
  7303  0D5D  084F               	clrz
  7304  0D5E  1103               	skipnc
  7305  0D5F  1803               	addlw	1
  7306  0D60  3E01               	skipnz
  7307  0D61  1903               	goto	u3981
  7308  0D62  2D64               	addwf	(___flmul@prod+1),f
  7309  0D63  07DB               u3981:
  7310  0D64                     	movf	2+(??___flmul+0)+0,w
  7311  0D64  0850               	clrz
  7312  0D65  1103               	skipnc
  7313  0D66  1803               	addlw	1
  7314  0D67  3E01               	skipnz
  7315  0D68  1903               	goto	u3982
  7316  0D69  2D6B               	addwf	(___flmul@prod+2),f
  7317  0D6A  07DC               u3982:
  7318  0D6B                     	movf	3+(??___flmul+0)+0,w
  7319  0D6B  0851               	clrz
  7320  0D6C  1103               	skipnc
  7321  0D6D  1803               	addlw	1
  7322  0D6E  3E01               	skipnz
  7323  0D6F  1903               	goto	u3983
  7324  0D70  2D72               	addwf	(___flmul@prod+3),f
  7325  0D71  07DD               u3983:
  7326  0D72                     
  7327                           	line	125
  7328                           	movf	0+(___flmul@b)+02h,w
  7329  0D72  0848               	movwf	(??___flmul+0)+0
  7330  0D73  00CE               	movf	(??___flmul+0)+0,w
  7331  0D74  084E               	movwf	(__Umul8_16@multiplicand)
  7332  0D75  00F3               	movf	(___flmul@a),w
  7333  0D76  084A               	fcall	__Umul8_16
  7334  0D77  160A  118A  2446  120A  158A  	movf	(1+(?__Umul8_16)),w
  7335  0D7C  0874               	bcf	status, 5	;RP0=0, select bank0
  7336  0D7D  1283               	bcf	status, 6	;RP1=0, select bank0
  7337  0D7E  1303               	movwf	(___flmul@temp+1)
  7338  0D7F  00DF               	movf	(0+(?__Umul8_16)),w
  7339  0D80  0873               	movwf	(___flmul@temp)
  7340  0D81  00DE               	line	126
  7341                           	
  7342                           l2982:	
  7343  0D82                     	movf	(___flmul@temp),w
  7344  0D82  085E               	movwf	(??___flmul+0)+0
  7345  0D83  00CE               	clrf	(??___flmul+0)+0+1
  7346  0D84  01CF               	clrf	(??___flmul+0)+0+2
  7347  0D85  01D0               	clrf	(??___flmul+0)+0+3
  7348  0D86  01D1               	movf	0+(??___flmul+0)+0,w
  7349  0D87  084E               	addwf	(___flmul@grs),f
  7350  0D88  07D4               	movf	1+(??___flmul+0)+0,w
  7351  0D89  084F               	clrz
  7352  0D8A  1103               	skipnc
  7353  0D8B  1803               	addlw	1
  7354  0D8C  3E01               	skipnz
  7355  0D8D  1903               	goto	u3991
  7356  0D8E  2D90               	addwf	(___flmul@grs+1),f
  7357  0D8F  07D5               u3991:
  7358  0D90                     	movf	2+(??___flmul+0)+0,w
  7359  0D90  0850               	clrz
  7360  0D91  1103               	skipnc
  7361  0D92  1803               	addlw	1
  7362  0D93  3E01               	skipnz
  7363  0D94  1903               	goto	u3992
  7364  0D95  2D97               	addwf	(___flmul@grs+2),f
  7365  0D96  07D6               u3992:
  7366  0D97                     	movf	3+(??___flmul+0)+0,w
  7367  0D97  0851               	clrz
  7368  0D98  1103               	skipnc
  7369  0D99  1803               	addlw	1
  7370  0D9A  3E01               	skipnz
  7371  0D9B  1903               	goto	u3993
  7372  0D9C  2D9E               	addwf	(___flmul@grs+3),f
  7373  0D9D  07D7               u3993:
  7374  0D9E                     
  7375                           	line	127
  7376                           	
  7377                           l2984:	
  7378  0D9E                     	movf	0+(___flmul@temp)+01h,w
  7379  0D9E  085F               	movwf	(??___flmul+0)+0
  7380  0D9F  00CE               	clrf	(??___flmul+0)+0+1
  7381  0DA0  01CF               	clrf	(??___flmul+0)+0+2
  7382  0DA1  01D0               	clrf	(??___flmul+0)+0+3
  7383  0DA2  01D1               	movf	0+(??___flmul+0)+0,w
  7384  0DA3  084E               	addwf	(___flmul@prod),f
  7385  0DA4  07DA               	movf	1+(??___flmul+0)+0,w
  7386  0DA5  084F               	clrz
  7387  0DA6  1103               	skipnc
  7388  0DA7  1803               	addlw	1
  7389  0DA8  3E01               	skipnz
  7390  0DA9  1903               	goto	u4001
  7391  0DAA  2DAC               	addwf	(___flmul@prod+1),f
  7392  0DAB  07DB               u4001:
  7393  0DAC                     	movf	2+(??___flmul+0)+0,w
  7394  0DAC  0850               	clrz
  7395  0DAD  1103               	skipnc
  7396  0DAE  1803               	addlw	1
  7397  0DAF  3E01               	skipnz
  7398  0DB0  1903               	goto	u4002
  7399  0DB1  2DB3               	addwf	(___flmul@prod+2),f
  7400  0DB2  07DC               u4002:
  7401  0DB3                     	movf	3+(??___flmul+0)+0,w
  7402  0DB3  0851               	clrz
  7403  0DB4  1103               	skipnc
  7404  0DB5  1803               	addlw	1
  7405  0DB6  3E01               	skipnz
  7406  0DB7  1903               	goto	u4003
  7407  0DB8  2DBA               	addwf	(___flmul@prod+3),f
  7408  0DB9  07DD               u4003:
  7409  0DBA                     
  7410                           	line	128
  7411                           	
  7412                           l2986:	
  7413  0DBA                     	movlw	08h
  7414  0DBA  3008               	movwf	(??___flmul+0)+0
  7415  0DBB  00CE               u4015:
  7416  0DBC                     	clrc
  7417  0DBC  1003               	rlf	(___flmul@grs),f
  7418  0DBD  0DD4               	rlf	(___flmul@grs+1),f
  7419  0DBE  0DD5               	rlf	(___flmul@grs+2),f
  7420  0DBF  0DD6               	rlf	(___flmul@grs+3),f
  7421  0DC0  0DD7               	decfsz	(??___flmul+0)+0
  7422  0DC1  0BCE               	goto	u4015
  7423  0DC2  2DBC               	line	129
  7424                           	
  7425                           l2988:	
  7426  0DC3                     	movf	0+(___flmul@b)+01h,w
  7427  0DC3  0847               	movwf	(??___flmul+0)+0
  7428  0DC4  00CE               	movf	(??___flmul+0)+0,w
  7429  0DC5  084E               	movwf	(__Umul8_16@multiplicand)
  7430  0DC6  00F3               	movf	(___flmul@a),w
  7431  0DC7  084A               	fcall	__Umul8_16
  7432  0DC8  160A  118A  2446  120A  158A  	movf	(1+(?__Umul8_16)),w
  7433  0DCD  0874               	bcf	status, 5	;RP0=0, select bank0
  7434  0DCE  1283               	bcf	status, 6	;RP1=0, select bank0
  7435  0DCF  1303               	movwf	(___flmul@temp+1)
  7436  0DD0  00DF               	movf	(0+(?__Umul8_16)),w
  7437  0DD1  0873               	movwf	(___flmul@temp)
  7438  0DD2  00DE               	line	130
  7439                           	
  7440                           l2990:	
  7441  0DD3                     	movf	(___flmul@temp),w
  7442  0DD3  085E               	movwf	((??___flmul+0)+0)
  7443  0DD4  00CE               	movf	(___flmul@temp+1),w
  7444  0DD5  085F               	movwf	((??___flmul+0)+0+1)
  7445  0DD6  00CF               	clrf	((??___flmul+0)+0+2)
  7446  0DD7  01D0               	clrf	((??___flmul+0)+0+3)
  7447  0DD8  01D1               	movf	0+(??___flmul+0)+0,w
  7448  0DD9  084E               	addwf	(___flmul@grs),f
  7449  0DDA  07D4               	movf	1+(??___flmul+0)+0,w
  7450  0DDB  084F               	clrz
  7451  0DDC  1103               	skipnc
  7452  0DDD  1803               	addlw	1
  7453  0DDE  3E01               	skipnz
  7454  0DDF  1903               	goto	u4021
  7455  0DE0  2DE2               	addwf	(___flmul@grs+1),f
  7456  0DE1  07D5               u4021:
  7457  0DE2                     	movf	2+(??___flmul+0)+0,w
  7458  0DE2  0850               	clrz
  7459  0DE3  1103               	skipnc
  7460  0DE4  1803               	addlw	1
  7461  0DE5  3E01               	skipnz
  7462  0DE6  1903               	goto	u4022
  7463  0DE7  2DE9               	addwf	(___flmul@grs+2),f
  7464  0DE8  07D6               u4022:
  7465  0DE9                     	movf	3+(??___flmul+0)+0,w
  7466  0DE9  0851               	clrz
  7467  0DEA  1103               	skipnc
  7468  0DEB  1803               	addlw	1
  7469  0DEC  3E01               	skipnz
  7470  0DED  1903               	goto	u4023
  7471  0DEE  2DF0               	addwf	(___flmul@grs+3),f
  7472  0DEF  07D7               u4023:
  7473  0DF0                     
  7474                           	line	131
  7475                           	
  7476                           l2992:	
  7477  0DF0                     	movf	(___flmul@b),w
  7478  0DF0  0846               	movwf	(??___flmul+0)+0
  7479  0DF1  00CE               	movf	(??___flmul+0)+0,w
  7480  0DF2  084E               	movwf	(__Umul8_16@multiplicand)
  7481  0DF3  00F3               	movf	0+(___flmul@a)+01h,w
  7482  0DF4  084B               	fcall	__Umul8_16
  7483  0DF5  160A  118A  2446  120A  158A  	movf	(1+(?__Umul8_16)),w
  7484  0DFA  0874               	bcf	status, 5	;RP0=0, select bank0
  7485  0DFB  1283               	bcf	status, 6	;RP1=0, select bank0
  7486  0DFC  1303               	movwf	(___flmul@temp+1)
  7487  0DFD  00DF               	movf	(0+(?__Umul8_16)),w
  7488  0DFE  0873               	movwf	(___flmul@temp)
  7489  0DFF  00DE               	line	132
  7490                           	
  7491                           l2994:	
  7492  0E00                     	movf	(___flmul@temp),w
  7493  0E00  085E               	movwf	((??___flmul+0)+0)
  7494  0E01  00CE               	movf	(___flmul@temp+1),w
  7495  0E02  085F               	movwf	((??___flmul+0)+0+1)
  7496  0E03  00CF               	clrf	((??___flmul+0)+0+2)
  7497  0E04  01D0               	clrf	((??___flmul+0)+0+3)
  7498  0E05  01D1               	movf	0+(??___flmul+0)+0,w
  7499  0E06  084E               	addwf	(___flmul@grs),f
  7500  0E07  07D4               	movf	1+(??___flmul+0)+0,w
  7501  0E08  084F               	clrz
  7502  0E09  1103               	skipnc
  7503  0E0A  1803               	addlw	1
  7504  0E0B  3E01               	skipnz
  7505  0E0C  1903               	goto	u4031
  7506  0E0D  2E0F               	addwf	(___flmul@grs+1),f
  7507  0E0E  07D5               u4031:
  7508  0E0F                     	movf	2+(??___flmul+0)+0,w
  7509  0E0F  0850               	clrz
  7510  0E10  1103               	skipnc
  7511  0E11  1803               	addlw	1
  7512  0E12  3E01               	skipnz
  7513  0E13  1903               	goto	u4032
  7514  0E14  2E16               	addwf	(___flmul@grs+2),f
  7515  0E15  07D6               u4032:
  7516  0E16                     	movf	3+(??___flmul+0)+0,w
  7517  0E16  0851               	clrz
  7518  0E17  1103               	skipnc
  7519  0E18  1803               	addlw	1
  7520  0E19  3E01               	skipnz
  7521  0E1A  1903               	goto	u4033
  7522  0E1B  2E1D               	addwf	(___flmul@grs+3),f
  7523  0E1C  07D7               u4033:
  7524  0E1D                     
  7525                           	line	133
  7526                           	
  7527                           l2996:	
  7528  0E1D                     	movlw	08h
  7529  0E1D  3008               	movwf	(??___flmul+0)+0
  7530  0E1E  00CE               u4045:
  7531  0E1F                     	clrc
  7532  0E1F  1003               	rlf	(___flmul@grs),f
  7533  0E20  0DD4               	rlf	(___flmul@grs+1),f
  7534  0E21  0DD5               	rlf	(___flmul@grs+2),f
  7535  0E22  0DD6               	rlf	(___flmul@grs+3),f
  7536  0E23  0DD7               	decfsz	(??___flmul+0)+0
  7537  0E24  0BCE               	goto	u4045
  7538  0E25  2E1F               	line	134
  7539                           	movf	(___flmul@b),w
  7540  0E26  0846               	movwf	(??___flmul+0)+0
  7541  0E27  00CE               	movf	(??___flmul+0)+0,w
  7542  0E28  084E               	movwf	(__Umul8_16@multiplicand)
  7543  0E29  00F3               	movf	(___flmul@a),w
  7544  0E2A  084A               	fcall	__Umul8_16
  7545  0E2B  160A  118A  2446  120A  158A  	movf	(1+(?__Umul8_16)),w
  7546  0E30  0874               	bcf	status, 5	;RP0=0, select bank0
  7547  0E31  1283               	bcf	status, 6	;RP1=0, select bank0
  7548  0E32  1303               	movwf	(___flmul@temp+1)
  7549  0E33  00DF               	movf	(0+(?__Umul8_16)),w
  7550  0E34  0873               	movwf	(___flmul@temp)
  7551  0E35  00DE               	line	135
  7552                           	
  7553                           l2998:	
  7554  0E36                     	movf	(___flmul@temp),w
  7555  0E36  085E               	movwf	((??___flmul+0)+0)
  7556  0E37  00CE               	movf	(___flmul@temp+1),w
  7557  0E38  085F               	movwf	((??___flmul+0)+0+1)
  7558  0E39  00CF               	clrf	((??___flmul+0)+0+2)
  7559  0E3A  01D0               	clrf	((??___flmul+0)+0+3)
  7560  0E3B  01D1               	movf	0+(??___flmul+0)+0,w
  7561  0E3C  084E               	addwf	(___flmul@grs),f
  7562  0E3D  07D4               	movf	1+(??___flmul+0)+0,w
  7563  0E3E  084F               	clrz
  7564  0E3F  1103               	skipnc
  7565  0E40  1803               	addlw	1
  7566  0E41  3E01               	skipnz
  7567  0E42  1903               	goto	u4051
  7568  0E43  2E45               	addwf	(___flmul@grs+1),f
  7569  0E44  07D5               u4051:
  7570  0E45                     	movf	2+(??___flmul+0)+0,w
  7571  0E45  0850               	clrz
  7572  0E46  1103               	skipnc
  7573  0E47  1803               	addlw	1
  7574  0E48  3E01               	skipnz
  7575  0E49  1903               	goto	u4052
  7576  0E4A  2E4C               	addwf	(___flmul@grs+2),f
  7577  0E4B  07D6               u4052:
  7578  0E4C                     	movf	3+(??___flmul+0)+0,w
  7579  0E4C  0851               	clrz
  7580  0E4D  1103               	skipnc
  7581  0E4E  1803               	addlw	1
  7582  0E4F  3E01               	skipnz
  7583  0E50  1903               	goto	u4053
  7584  0E51  2E53               	addwf	(___flmul@grs+3),f
  7585  0E52  07D7               u4053:
  7586  0E53                     
  7587                           	line	136
  7588                           	
  7589                           l3000:	
  7590  0E53                     	movf	0+(___flmul@b)+01h,w
  7591  0E53  0847               	movwf	(??___flmul+0)+0
  7592  0E54  00CE               	movf	(??___flmul+0)+0,w
  7593  0E55  084E               	movwf	(__Umul8_16@multiplicand)
  7594  0E56  00F3               	movf	0+(___flmul@a)+02h,w
  7595  0E57  084C               	fcall	__Umul8_16
  7596  0E58  160A  118A  2446  120A  158A  	movf	(1+(?__Umul8_16)),w
  7597  0E5D  0874               	bcf	status, 5	;RP0=0, select bank0
  7598  0E5E  1283               	bcf	status, 6	;RP1=0, select bank0
  7599  0E5F  1303               	movwf	(___flmul@temp+1)
  7600  0E60  00DF               	movf	(0+(?__Umul8_16)),w
  7601  0E61  0873               	movwf	(___flmul@temp)
  7602  0E62  00DE               	line	137
  7603                           	movf	(___flmul@temp),w
  7604  0E63  085E               	movwf	((??___flmul+0)+0)
  7605  0E64  00CE               	movf	(___flmul@temp+1),w
  7606  0E65  085F               	movwf	((??___flmul+0)+0+1)
  7607  0E66  00CF               	clrf	((??___flmul+0)+0+2)
  7608  0E67  01D0               	clrf	((??___flmul+0)+0+3)
  7609  0E68  01D1               	movf	0+(??___flmul+0)+0,w
  7610  0E69  084E               	addwf	(___flmul@prod),f
  7611  0E6A  07DA               	movf	1+(??___flmul+0)+0,w
  7612  0E6B  084F               	clrz
  7613  0E6C  1103               	skipnc
  7614  0E6D  1803               	addlw	1
  7615  0E6E  3E01               	skipnz
  7616  0E6F  1903               	goto	u4061
  7617  0E70  2E72               	addwf	(___flmul@prod+1),f
  7618  0E71  07DB               u4061:
  7619  0E72                     	movf	2+(??___flmul+0)+0,w
  7620  0E72  0850               	clrz
  7621  0E73  1103               	skipnc
  7622  0E74  1803               	addlw	1
  7623  0E75  3E01               	skipnz
  7624  0E76  1903               	goto	u4062
  7625  0E77  2E79               	addwf	(___flmul@prod+2),f
  7626  0E78  07DC               u4062:
  7627  0E79                     	movf	3+(??___flmul+0)+0,w
  7628  0E79  0851               	clrz
  7629  0E7A  1103               	skipnc
  7630  0E7B  1803               	addlw	1
  7631  0E7C  3E01               	skipnz
  7632  0E7D  1903               	goto	u4063
  7633  0E7E  2E80               	addwf	(___flmul@prod+3),f
  7634  0E7F  07DD               u4063:
  7635  0E80                     
  7636                           	line	138
  7637                           	
  7638                           l3002:	
  7639  0E80                     	movf	0+(___flmul@b)+02h,w
  7640  0E80  0848               	movwf	(??___flmul+0)+0
  7641  0E81  00CE               	movf	(??___flmul+0)+0,w
  7642  0E82  084E               	movwf	(__Umul8_16@multiplicand)
  7643  0E83  00F3               	movf	0+(___flmul@a)+01h,w
  7644  0E84  084B               	fcall	__Umul8_16
  7645  0E85  160A  118A  2446  120A  158A  	movf	(1+(?__Umul8_16)),w
  7646  0E8A  0874               	bcf	status, 5	;RP0=0, select bank0
  7647  0E8B  1283               	bcf	status, 6	;RP1=0, select bank0
  7648  0E8C  1303               	movwf	(___flmul@temp+1)
  7649  0E8D  00DF               	movf	(0+(?__Umul8_16)),w
  7650  0E8E  0873               	movwf	(___flmul@temp)
  7651  0E8F  00DE               	line	139
  7652                           	
  7653                           l3004:	
  7654  0E90                     	movf	(___flmul@temp),w
  7655  0E90  085E               	movwf	((??___flmul+0)+0)
  7656  0E91  00CE               	movf	(___flmul@temp+1),w
  7657  0E92  085F               	movwf	((??___flmul+0)+0+1)
  7658  0E93  00CF               	clrf	((??___flmul+0)+0+2)
  7659  0E94  01D0               	clrf	((??___flmul+0)+0+3)
  7660  0E95  01D1               	movf	0+(??___flmul+0)+0,w
  7661  0E96  084E               	addwf	(___flmul@prod),f
  7662  0E97  07DA               	movf	1+(??___flmul+0)+0,w
  7663  0E98  084F               	clrz
  7664  0E99  1103               	skipnc
  7665  0E9A  1803               	addlw	1
  7666  0E9B  3E01               	skipnz
  7667  0E9C  1903               	goto	u4071
  7668  0E9D  2E9F               	addwf	(___flmul@prod+1),f
  7669  0E9E  07DB               u4071:
  7670  0E9F                     	movf	2+(??___flmul+0)+0,w
  7671  0E9F  0850               	clrz
  7672  0EA0  1103               	skipnc
  7673  0EA1  1803               	addlw	1
  7674  0EA2  3E01               	skipnz
  7675  0EA3  1903               	goto	u4072
  7676  0EA4  2EA6               	addwf	(___flmul@prod+2),f
  7677  0EA5  07DC               u4072:
  7678  0EA6                     	movf	3+(??___flmul+0)+0,w
  7679  0EA6  0851               	clrz
  7680  0EA7  1103               	skipnc
  7681  0EA8  1803               	addlw	1
  7682  0EA9  3E01               	skipnz
  7683  0EAA  1903               	goto	u4073
  7684  0EAB  2EAD               	addwf	(___flmul@prod+3),f
  7685  0EAC  07DD               u4073:
  7686  0EAD                     
  7687                           	line	140
  7688                           	movf	0+(___flmul@b)+02h,w
  7689  0EAD  0848               	movwf	(??___flmul+0)+0
  7690  0EAE  00CE               	movf	(??___flmul+0)+0,w
  7691  0EAF  084E               	movwf	(__Umul8_16@multiplicand)
  7692  0EB0  00F3               	movf	0+(___flmul@a)+02h,w
  7693  0EB1  084C               	fcall	__Umul8_16
  7694  0EB2  160A  118A  2446  120A  158A  	movf	(1+(?__Umul8_16)),w
  7695  0EB7  0874               	bcf	status, 5	;RP0=0, select bank0
  7696  0EB8  1283               	bcf	status, 6	;RP1=0, select bank0
  7697  0EB9  1303               	movwf	(___flmul@temp+1)
  7698  0EBA  00DF               	movf	(0+(?__Umul8_16)),w
  7699  0EBB  0873               	movwf	(___flmul@temp)
  7700  0EBC  00DE               	line	141
  7701                           	
  7702                           l3006:	
  7703  0EBD                     	movf	(___flmul@temp),w
  7704  0EBD  085E               	movwf	((??___flmul+0)+0)
  7705  0EBE  00CE               	movf	(___flmul@temp+1),w
  7706  0EBF  085F               	movwf	((??___flmul+0)+0+1)
  7707  0EC0  00CF               	clrf	((??___flmul+0)+0+2)
  7708  0EC1  01D0               	clrf	((??___flmul+0)+0+3)
  7709  0EC2  01D1               	movlw	08h
  7710  0EC3  3008               u4085:
  7711  0EC4                     	clrc
  7712  0EC4  1003               	rlf	(??___flmul+0)+0,f
  7713  0EC5  0DCE               	rlf	(??___flmul+0)+1,f
  7714  0EC6  0DCF               	rlf	(??___flmul+0)+2,f
  7715  0EC7  0DD0               	rlf	(??___flmul+0)+3,f
  7716  0EC8  0DD1               u4080:
  7717  0EC9                     	addlw	-1
  7718  0EC9  3EFF               	skipz
  7719  0ECA  1D03               	goto	u4085
  7720  0ECB  2EC4               	movf	0+(??___flmul+0)+0,w
  7721  0ECC  084E               	addwf	(___flmul@prod),f
  7722  0ECD  07DA               	movf	1+(??___flmul+0)+0,w
  7723  0ECE  084F               	clrz
  7724  0ECF  1103               	skipnc
  7725  0ED0  1803               	addlw	1
  7726  0ED1  3E01               	skipnz
  7727  0ED2  1903               	goto	u4091
  7728  0ED3  2ED5               	addwf	(___flmul@prod+1),f
  7729  0ED4  07DB               u4091:
  7730  0ED5                     	movf	2+(??___flmul+0)+0,w
  7731  0ED5  0850               	clrz
  7732  0ED6  1103               	skipnc
  7733  0ED7  1803               	addlw	1
  7734  0ED8  3E01               	skipnz
  7735  0ED9  1903               	goto	u4092
  7736  0EDA  2EDC               	addwf	(___flmul@prod+2),f
  7737  0EDB  07DC               u4092:
  7738  0EDC                     	movf	3+(??___flmul+0)+0,w
  7739  0EDC  0851               	clrz
  7740  0EDD  1103               	skipnc
  7741  0EDE  1803               	addlw	1
  7742  0EDF  3E01               	skipnz
  7743  0EE0  1903               	goto	u4093
  7744  0EE1  2EE3               	addwf	(___flmul@prod+3),f
  7745  0EE2  07DD               u4093:
  7746  0EE3                     
  7747                           	line	145
  7748                           	
  7749                           l3008:	
  7750  0EE3                     	movf	(___flmul@grs),w
  7751  0EE3  0854               	movwf	(??___flmul+0)+0
  7752  0EE4  00CE               	movf	(___flmul@grs+1),w
  7753  0EE5  0855               	movwf	((??___flmul+0)+0+1)
  7754  0EE6  00CF               	movf	(___flmul@grs+2),w
  7755  0EE7  0856               	movwf	((??___flmul+0)+0+2)
  7756  0EE8  00D0               	movf	(___flmul@grs+3),w
  7757  0EE9  0857               	movwf	((??___flmul+0)+0+3)
  7758  0EEA  00D1               	movlw	018h
  7759  0EEB  3018               u4105:
  7760  0EEC                     	clrc
  7761  0EEC  1003               	rrf	(??___flmul+0)+3,f
  7762  0EED  0CD1               	rrf	(??___flmul+0)+2,f
  7763  0EEE  0CD0               	rrf	(??___flmul+0)+1,f
  7764  0EEF  0CCF               	rrf	(??___flmul+0)+0,f
  7765  0EF0  0CCE               u4100:
  7766  0EF1                     	addlw	-1
  7767  0EF1  3EFF               	skipz
  7768  0EF2  1D03               	goto	u4105
  7769  0EF3  2EEC               	movf	0+(??___flmul+0)+0,w
  7770  0EF4  084E               	addwf	(___flmul@prod),f
  7771  0EF5  07DA               	movf	1+(??___flmul+0)+0,w
  7772  0EF6  084F               	clrz
  7773  0EF7  1103               	skipnc
  7774  0EF8  1803               	addlw	1
  7775  0EF9  3E01               	skipnz
  7776  0EFA  1903               	goto	u4111
  7777  0EFB  2EFD               	addwf	(___flmul@prod+1),f
  7778  0EFC  07DB               u4111:
  7779  0EFD                     	movf	2+(??___flmul+0)+0,w
  7780  0EFD  0850               	clrz
  7781  0EFE  1103               	skipnc
  7782  0EFF  1803               	addlw	1
  7783  0F00  3E01               	skipnz
  7784  0F01  1903               	goto	u4112
  7785  0F02  2F04               	addwf	(___flmul@prod+2),f
  7786  0F03  07DC               u4112:
  7787  0F04                     	movf	3+(??___flmul+0)+0,w
  7788  0F04  0851               	clrz
  7789  0F05  1103               	skipnc
  7790  0F06  1803               	addlw	1
  7791  0F07  3E01               	skipnz
  7792  0F08  1903               	goto	u4113
  7793  0F09  2F0B               	addwf	(___flmul@prod+3),f
  7794  0F0A  07DD               u4113:
  7795  0F0B                     
  7796                           	line	146
  7797                           	
  7798                           l3010:	
  7799  0F0B                     	movlw	08h
  7800  0F0B  3008               	movwf	(??___flmul+0)+0
  7801  0F0C  00CE               u4125:
  7802  0F0D                     	clrc
  7803  0F0D  1003               	rlf	(___flmul@grs),f
  7804  0F0E  0DD4               	rlf	(___flmul@grs+1),f
  7805  0F0F  0DD5               	rlf	(___flmul@grs+2),f
  7806  0F10  0DD6               	rlf	(___flmul@grs+3),f
  7807  0F11  0DD7               	decfsz	(??___flmul+0)+0
  7808  0F12  0BCE               	goto	u4125
  7809  0F13  2F0D               	line	149
  7810                           	
  7811                           l3012:	
  7812  0F14                     	movf	(___flmul@bexp),w
  7813  0F14  0859               	addwf	(___flmul@aexp),w
  7814  0F15  0758               	movwf	(??___flmul+0)+0
  7815  0F16  00CE               	clrf	(??___flmul+0)+0+1
  7816  0F17  01CF               	rlf	1+(??___flmul+0)+0,f
  7817  0F18  0DCF               	
  7818                           	movf	0+(??___flmul+0)+0,w
  7819  0F19  084E               	addlw	low(-126)
  7820  0F1A  3E82               	movwf	(___flmul@temp)
  7821  0F1B  00DE               	movf	1+(??___flmul+0)+0,w
  7822  0F1C  084F               	skipnc
  7823  0F1D  1803               	addlw	1
  7824  0F1E  3E01               	addlw	high(-126)
  7825  0F1F  3EFF               	movwf	1+(___flmul@temp)
  7826  0F20  00DF               	line	152
  7827                           	goto	l3024
  7828  0F21  2F41               	
  7829                           l850:	
  7830  0F22                     	line	153
  7831                           	
  7832                           l3014:	
  7833  0F22                     	movlw	01h
  7834  0F22  3001               	movwf	(??___flmul+0)+0
  7835  0F23  00CE               u4135:
  7836  0F24                     	clrc
  7837  0F24  1003               	rlf	(___flmul@prod),f
  7838  0F25  0DDA               	rlf	(___flmul@prod+1),f
  7839  0F26  0DDB               	rlf	(___flmul@prod+2),f
  7840  0F27  0DDC               	rlf	(___flmul@prod+3),f
  7841  0F28  0DDD               	decfsz	(??___flmul+0)+0
  7842  0F29  0BCE               	goto	u4135
  7843  0F2A  2F24               	line	154
  7844                           	
  7845                           l3016:	
  7846  0F2B                     	btfss	(___flmul@grs+3),(31)&7
  7847  0F2B  1FD7               	goto	u4141
  7848  0F2C  2F2E               	goto	u4140
  7849  0F2D  2F2F               u4141:
  7850  0F2E                     	goto	l3020
  7851  0F2E  2F31               u4140:
  7852  0F2F                     	line	155
  7853                           	
  7854                           l3018:	
  7855  0F2F                     	bsf	(___flmul@prod)+(0/8),(0)&7
  7856  0F2F  145A               	goto	l3020
  7857  0F30  2F31               	line	156
  7858                           	
  7859                           l851:	
  7860  0F31                     	line	157
  7861                           	
  7862                           l3020:	
  7863  0F31                     	movlw	01h
  7864  0F31  3001               	movwf	(??___flmul+0)+0
  7865  0F32  00CE               u4155:
  7866  0F33                     	clrc
  7867  0F33  1003               	rlf	(___flmul@grs),f
  7868  0F34  0DD4               	rlf	(___flmul@grs+1),f
  7869  0F35  0DD5               	rlf	(___flmul@grs+2),f
  7870  0F36  0DD6               	rlf	(___flmul@grs+3),f
  7871  0F37  0DD7               	decfsz	(??___flmul+0)+0
  7872  0F38  0BCE               	goto	u4155
  7873  0F39  2F33               	line	158
  7874                           	
  7875                           l3022:	
  7876  0F3A                     	movlw	0FFh
  7877  0F3A  30FF               	addwf	(___flmul@temp),f
  7878  0F3B  07DE               	skipnc
  7879  0F3C  1803               	incf	(___flmul@temp+1),f
  7880  0F3D  0ADF               	movlw	0FFh
  7881  0F3E  30FF               	addwf	(___flmul@temp+1),f
  7882  0F3F  07DF               	goto	l3024
  7883  0F40  2F41               	line	159
  7884                           	
  7885                           l849:	
  7886  0F41                     	line	152
  7887                           	
  7888                           l3024:	
  7889  0F41                     	btfss	(___flmul@prod+2),(23)&7
  7890  0F41  1FDC               	goto	u4161
  7891  0F42  2F44               	goto	u4160
  7892  0F43  2F45               u4161:
  7893  0F44                     	goto	l3014
  7894  0F44  2F22               u4160:
  7895  0F45                     	goto	l3026
  7896  0F45  2F46               	
  7897                           l852:	
  7898  0F46                     	line	163
  7899                           	
  7900                           l3026:	
  7901  0F46                     	clrf	(___flmul@aexp)
  7902  0F46  01D8               	line	164
  7903                           	
  7904                           l3028:	
  7905  0F47                     	btfss	(___flmul@grs+3),(31)&7
  7906  0F47  1FD7               	goto	u4171
  7907  0F48  2F4A               	goto	u4170
  7908  0F49  2F4B               u4171:
  7909  0F4A                     	goto	l3036
  7910  0F4A  2F6B               u4170:
  7911  0F4B                     	line	165
  7912                           	
  7913                           l3030:	
  7914  0F4B                     	movlw	0FFh
  7915  0F4B  30FF               	andwf	(___flmul@grs),w
  7916  0F4C  0554               	movwf	(??___flmul+0)+0
  7917  0F4D  00CE               	movlw	0FFh
  7918  0F4E  30FF               	andwf	(___flmul@grs+1),w
  7919  0F4F  0555               	movwf	((??___flmul+0)+0+1)
  7920  0F50  00CF               	movlw	0FFh
  7921  0F51  30FF               	andwf	(___flmul@grs+2),w
  7922  0F52  0556               	movwf	((??___flmul+0)+0+2)
  7923  0F53  00D0               	movlw	07Fh
  7924  0F54  307F               	andwf	(___flmul@grs+3),w
  7925  0F55  0557               	movwf	((??___flmul+0)+0+3)
  7926  0F56  00D1               	movf	3+(??___flmul+0)+0,w
  7927  0F57  0851               	iorwf	2+(??___flmul+0)+0,w
  7928  0F58  0450               	iorwf	1+(??___flmul+0)+0,w
  7929  0F59  044F               	iorwf	0+(??___flmul+0)+0,w
  7930  0F5A  044E               	skipnz
  7931  0F5B  1903               	goto	u4181
  7932  0F5C  2F5E               	goto	u4180
  7933  0F5D  2F5F               u4181:
  7934  0F5E                     	goto	l854
  7935  0F5E  2F62               u4180:
  7936  0F5F                     	line	166
  7937                           	
  7938                           l3032:	
  7939  0F5F                     	clrf	(___flmul@aexp)
  7940  0F5F  01D8               	incf	(___flmul@aexp),f
  7941  0F60  0AD8               	line	167
  7942                           	goto	l3036
  7943  0F61  2F6B               	line	168
  7944                           	
  7945                           l854:	
  7946  0F62                     	line	169
  7947                           	btfss	(___flmul@prod),(0)&7
  7948  0F62  1C5A               	goto	u4191
  7949  0F63  2F65               	goto	u4190
  7950  0F64  2F66               u4191:
  7951  0F65                     	goto	l3036
  7952  0F65  2F6B               u4190:
  7953  0F66                     	line	170
  7954                           	
  7955                           l3034:	
  7956  0F66                     	clrf	(___flmul@aexp)
  7957  0F66  01D8               	incf	(___flmul@aexp),f
  7958  0F67  0AD8               	goto	l3036
  7959  0F68  2F6B               	line	171
  7960                           	
  7961                           l856:	
  7962  0F69                     	goto	l3036
  7963  0F69  2F6B               	line	172
  7964                           	
  7965                           l855:	
  7966  0F6A                     	goto	l3036
  7967  0F6A  2F6B               	line	173
  7968                           	
  7969                           l853:	
  7970  0F6B                     	line	174
  7971                           	
  7972                           l3036:	
  7973  0F6B                     	movf	((___flmul@aexp)),w
  7974  0F6B  0858               	btfsc	status,2
  7975  0F6C  1903               	goto	u4201
  7976  0F6D  2F6F               	goto	u4200
  7977  0F6E  2F70               u4201:
  7978  0F6F                     	goto	l3046
  7979  0F6F  2FA3               u4200:
  7980  0F70                     	line	175
  7981                           	
  7982                           l3038:	
  7983  0F70                     	movlw	01h
  7984  0F70  3001               	addwf	(___flmul@prod),f
  7985  0F71  07DA               	movlw	0
  7986  0F72  3000               	skipnc
  7987  0F73  1803               movlw 1
  7988  0F74  3001               	addwf	(___flmul@prod+1),f
  7989  0F75  07DB               	movlw	0
  7990  0F76  3000               	skipnc
  7991  0F77  1803               movlw 1
  7992  0F78  3001               	addwf	(___flmul@prod+2),f
  7993  0F79  07DC               	movlw	0
  7994  0F7A  3000               	skipnc
  7995  0F7B  1803               movlw 1
  7996  0F7C  3001               	addwf	(___flmul@prod+3),f
  7997  0F7D  07DD               	line	176
  7998                           	
  7999                           l3040:	
  8000  0F7E                     	btfss	(___flmul@prod+3),(24)&7
  8001  0F7E  1C5D               	goto	u4211
  8002  0F7F  2F81               	goto	u4210
  8003  0F80  2F82               u4211:
  8004  0F81                     	goto	l3046
  8005  0F81  2FA3               u4210:
  8006  0F82                     	line	177
  8007                           	
  8008                           l3042:	
  8009  0F82                     	movf	(___flmul@prod),w
  8010  0F82  085A               	movwf	(??___flmul+0)+0
  8011  0F83  00CE               	movf	(___flmul@prod+1),w
  8012  0F84  085B               	movwf	((??___flmul+0)+0+1)
  8013  0F85  00CF               	movf	(___flmul@prod+2),w
  8014  0F86  085C               	movwf	((??___flmul+0)+0+2)
  8015  0F87  00D0               	movf	(___flmul@prod+3),w
  8016  0F88  085D               	movwf	((??___flmul+0)+0+3)
  8017  0F89  00D1               	movlw	01h
  8018  0F8A  3001               	movwf	(??___flmul+4)+0
  8019  0F8B  00D2               u4225:
  8020  0F8C                     	rlf	(??___flmul+0)+3,w
  8021  0F8C  0D51               	rrf	(??___flmul+0)+3,f
  8022  0F8D  0CD1               	rrf	(??___flmul+0)+2,f
  8023  0F8E  0CD0               	rrf	(??___flmul+0)+1,f
  8024  0F8F  0CCF               	rrf	(??___flmul+0)+0,f
  8025  0F90  0CCE               u4220:
  8026  0F91                     	decfsz	(??___flmul+4)+0,f
  8027  0F91  0BD2               	goto	u4225
  8028  0F92  2F8C               	movf	3+(??___flmul+0)+0,w
  8029  0F93  0851               	movwf	(___flmul@prod+3)
  8030  0F94  00DD               	movf	2+(??___flmul+0)+0,w
  8031  0F95  0850               	movwf	(___flmul@prod+2)
  8032  0F96  00DC               	movf	1+(??___flmul+0)+0,w
  8033  0F97  084F               	movwf	(___flmul@prod+1)
  8034  0F98  00DB               	movf	0+(??___flmul+0)+0,w
  8035  0F99  084E               	movwf	(___flmul@prod)
  8036  0F9A  00DA               
  8037                           	line	178
  8038                           	
  8039                           l3044:	
  8040  0F9B                     	movlw	01h
  8041  0F9B  3001               	addwf	(___flmul@temp),f
  8042  0F9C  07DE               	skipnc
  8043  0F9D  1803               	incf	(___flmul@temp+1),f
  8044  0F9E  0ADF               	movlw	0
  8045  0F9F  3000               	addwf	(___flmul@temp+1),f
  8046  0FA0  07DF               	goto	l3046
  8047  0FA1  2FA3               	line	179
  8048                           	
  8049                           l858:	
  8050  0FA2                     	goto	l3046
  8051  0FA2  2FA3               	line	180
  8052                           	
  8053                           l857:	
  8054  0FA3                     	line	183
  8055                           	
  8056                           l3046:	
  8057  0FA3                     	movf	(___flmul@temp+1),w
  8058  0FA3  085F               	xorlw	80h
  8059  0FA4  3A80               	movwf	btemp+1
  8060  0FA5  00FF               	movlw	(0)^80h
  8061  0FA6  3080               	subwf	btemp+1,w
  8062  0FA7  027F               	skipz
  8063  0FA8  1D03               	goto	u4235
  8064  0FA9  2FAC               	movlw	0FFh
  8065  0FAA  30FF               	subwf	(___flmul@temp),w
  8066  0FAB  025E               u4235:
  8067  0FAC                     
  8068                           	skipc
  8069  0FAC  1C03               	goto	u4231
  8070  0FAD  2FAF               	goto	u4230
  8071  0FAE  2FB0               u4231:
  8072  0FAF                     	goto	l3050
  8073  0FAF  2FBB               u4230:
  8074  0FB0                     	line	184
  8075                           	
  8076                           l3048:	
  8077  0FB0                     	movlw	07Fh
  8078  0FB0  307F               	bcf	status, 5	;RP0=0, select bank0
  8079  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  8080  0FB2  1303               	movwf	(___flmul@prod+3)
  8081  0FB3  00DD               	movlw	080h
  8082  0FB4  3080               	movwf	(___flmul@prod+2)
  8083  0FB5  00DC               	movlw	0
  8084  0FB6  3000               	movwf	(___flmul@prod+1)
  8085  0FB7  00DB               	movlw	0
  8086  0FB8  3000               	movwf	(___flmul@prod)
  8087  0FB9  00DA               
  8088                           	line	185
  8089                           	goto	l860
  8090  0FBA  2FF2               	line	187
  8091                           	
  8092                           l859:	
  8093  0FBB                     	
  8094                           l3050:	
  8095  0FBB                     	bcf	status, 5	;RP0=0, select bank0
  8096  0FBB  1283               	bcf	status, 6	;RP1=0, select bank0
  8097  0FBC  1303               	movf	(___flmul@temp+1),w
  8098  0FBD  085F               	xorlw	80h
  8099  0FBE  3A80               	movwf	btemp+1
  8100  0FBF  00FF               	movlw	(0)^80h
  8101  0FC0  3080               	subwf	btemp+1,w
  8102  0FC1  027F               	skipz
  8103  0FC2  1D03               	goto	u4245
  8104  0FC3  2FC6               	movlw	01h
  8105  0FC4  3001               	subwf	(___flmul@temp),w
  8106  0FC5  025E               u4245:
  8107  0FC6                     
  8108                           	skipnc
  8109  0FC6  1803               	goto	u4241
  8110  0FC7  2FC9               	goto	u4240
  8111  0FC8  2FCA               u4241:
  8112  0FC9                     	goto	l3056
  8113  0FC9  2FD6               u4240:
  8114  0FCA                     	line	188
  8115                           	
  8116                           l3052:	
  8117  0FCA                     	movlw	high highword(0)
  8118  0FCA  3000               	bcf	status, 5	;RP0=0, select bank0
  8119  0FCB  1283               	bcf	status, 6	;RP1=0, select bank0
  8120  0FCC  1303               	movwf	(___flmul@prod+3)
  8121  0FCD  00DD               	movlw	low highword(0)
  8122  0FCE  3000               	movwf	(___flmul@prod+2)
  8123  0FCF  00DC               	movlw	high(0)
  8124  0FD0  3000               	movwf	(___flmul@prod+1)
  8125  0FD1  00DB               	movlw	low(0)
  8126  0FD2  3000               	movwf	(___flmul@prod)
  8127  0FD3  00DA               
  8128                           	line	190
  8129                           	
  8130                           l3054:	
  8131  0FD4                     	clrf	(___flmul@sign)
  8132  0FD4  01D3               	line	191
  8133                           	goto	l860
  8134  0FD5  2FF2               	line	192
  8135                           	
  8136                           l861:	
  8137  0FD6                     	line	194
  8138                           	
  8139                           l3056:	
  8140  0FD6                     	bcf	status, 5	;RP0=0, select bank0
  8141  0FD6  1283               	bcf	status, 6	;RP1=0, select bank0
  8142  0FD7  1303               	movf	(___flmul@temp),w
  8143  0FD8  085E               	movwf	(??___flmul+0)+0
  8144  0FD9  00CE               	movf	(??___flmul+0)+0,w
  8145  0FDA  084E               	movwf	(___flmul@bexp)
  8146  0FDB  00D9               	line	195
  8147                           	movlw	0FFh
  8148  0FDC  30FF               	andwf	(___flmul@prod),f
  8149  0FDD  05DA               	movlw	0FFh
  8150  0FDE  30FF               	andwf	(___flmul@prod+1),f
  8151  0FDF  05DB               	movlw	07Fh
  8152  0FE0  307F               	andwf	(___flmul@prod+2),f
  8153  0FE1  05DC               	movlw	0
  8154  0FE2  3000               	andwf	(___flmul@prod+3),f
  8155  0FE3  05DD               	line	196
  8156                           	
  8157                           l3058:	
  8158  0FE4                     	btfss	(___flmul@bexp),(0)&7
  8159  0FE4  1C59               	goto	u4251
  8160  0FE5  2FE7               	goto	u4250
  8161  0FE6  2FE8               u4251:
  8162  0FE7                     	goto	l3062
  8163  0FE7  2FEA               u4250:
  8164  0FE8                     	line	197
  8165                           	
  8166                           l3060:	
  8167  0FE8                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  8168  0FE8  17DC               	goto	l3062
  8169  0FE9  2FEA               	line	198
  8170                           	
  8171                           l863:	
  8172  0FEA                     	line	199
  8173                           	
  8174                           l3062:	
  8175  0FEA                     	movf	(___flmul@bexp),w
  8176  0FEA  0859               	movwf	(??___flmul+0)+0
  8177  0FEB  00CE               	clrc
  8178  0FEC  1003               	rrf	(??___flmul+0)+0,w
  8179  0FED  0C4E               	movwf	(??___flmul+1)+0
  8180  0FEE  00CF               	movf	(??___flmul+1)+0,w
  8181  0FEF  084F               	movwf	0+(___flmul@prod)+03h
  8182  0FF0  00DD               	goto	l860
  8183  0FF1  2FF2               	line	200
  8184                           	
  8185                           l862:	
  8186  0FF2                     	
  8187                           l860:	
  8188  0FF2                     	line	201
  8189                           	movf	(___flmul@sign),w
  8190  0FF2  0853               	movwf	(??___flmul+0)+0
  8191  0FF3  00CE               	movf	(??___flmul+0)+0,w
  8192  0FF4  084E               	iorwf	0+(___flmul@prod)+03h,f
  8193  0FF5  04DD               	line	203
  8194                           	
  8195                           l3064:	
  8196  0FF6                     	movf	(___flmul@prod+3),w
  8197  0FF6  085D               	movwf	(?___flmul+3)
  8198  0FF7  00C9               	movf	(___flmul@prod+2),w
  8199  0FF8  085C               	movwf	(?___flmul+2)
  8200  0FF9  00C8               	movf	(___flmul@prod+1),w
  8201  0FFA  085B               	movwf	(?___flmul+1)
  8202  0FFB  00C7               	movf	(___flmul@prod),w
  8203  0FFC  085A               	movwf	(?___flmul)
  8204  0FFD  00C6               
  8205                           	goto	l848
  8206  0FFE  2FFF               	
  8207                           l3066:	
  8208  0FFF                     	line	205
  8209                           	
  8210                           l848:	
  8211  0FFF                     	return
  8212  0FFF  0008               	opt stack 0
  8213                           GLOBAL	__end_of___flmul
  8214                           	__end_of___flmul:
  8215  1000                     	signat	___flmul,8316
  8216                           	global	__Umul8_16
  8217                           
  8218 ;; *************** function __Umul8_16 *****************
  8219 ;; Defined at:
  8220 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  multiplier      1    wreg     unsigned char 
  8223 ;;  multiplicand    1    3[COMMON] unsigned char 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  multiplier      1    4[BANK0 ] unsigned char 
  8226 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  8227 ;;  product         2    0[BANK0 ] unsigned int 
  8228 ;; Return value:  Size  Location     Type
  8229 ;;                  2    3[COMMON] unsigned int 
  8230 ;; Registers used:
  8231 ;;		wreg, status,2, status,0
  8232 ;; Tracked objects:
  8233 ;;		On entry : 0/0
  8234 ;;		On exit  : 0/0
  8235 ;;		Unchanged: 0/0
  8236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8237 ;;      Params:         2       0       0       0       0
  8238 ;;      Locals:         0       5       0       0       0
  8239 ;;      Temps:          2       0       0       0       0
  8240 ;;      Totals:         4       5       0       0       0
  8241 ;;Total ram usage:        9 bytes
  8242 ;; Hardware stack levels used:    1
  8243 ;; Hardware stack levels required when called:    2
  8244 ;; This function calls:
  8245 ;;		Nothing
  8246 ;; This function is called by:
  8247 ;;		___flmul
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  8251                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  8252                           	line	4
  8253                           global __ptext19
  8254                           __ptext19:	;psect for function __Umul8_16
  8255  1446                     psect	text19
  8256                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  8257                           	line	4
  8258                           	global	__size_of__Umul8_16
  8259                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  8260  002C                     	
  8261                           __Umul8_16:	
  8262  1446                     ;incstack = 0
  8263                           	opt	stack 4
  8264                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8265                           ;__Umul8_16@multiplier stored from wreg
  8266                           	bcf	status, 5	;RP0=0, select bank0
  8267  1446  1283               	bcf	status, 6	;RP1=0, select bank0
  8268  1447  1303               	movwf	(__Umul8_16@multiplier)
  8269  1448  00A4               	line	5
  8270                           	
  8271                           l2378:	
  8272  1449                     	clrf	(__Umul8_16@product)
  8273  1449  01A0               	clrf	(__Umul8_16@product+1)
  8274  144A  01A1               	line	6
  8275                           	
  8276                           l2380:	
  8277  144B                     	movf	(__Umul8_16@multiplicand),w
  8278  144B  0873               	movwf	(??__Umul8_16+0)+0
  8279  144C  00F5               	clrf	(??__Umul8_16+0)+0+1
  8280  144D  01F6               	movf	0+(??__Umul8_16+0)+0,w
  8281  144E  0875               	movwf	(__Umul8_16@word_mpld)
  8282  144F  00A2               	movf	1+(??__Umul8_16+0)+0,w
  8283  1450  0876               	movwf	(__Umul8_16@word_mpld+1)
  8284  1451  00A3               	goto	l2382
  8285  1452  2C53               	line	50
  8286                           	
  8287                           l885:	
  8288  1453                     	line	51
  8289                           	
  8290                           l2382:	
  8291  1453                     	btfss	(__Umul8_16@multiplier),(0)&7
  8292  1453  1C24               	goto	u2741
  8293  1454  2C56               	goto	u2740
  8294  1455  2C57               u2741:
  8295  1456                     	goto	l886
  8296  1456  2C5D               u2740:
  8297  1457                     	line	52
  8298                           	
  8299                           l2384:	
  8300  1457                     	movf	(__Umul8_16@word_mpld),w
  8301  1457  0822               	addwf	(__Umul8_16@product),f
  8302  1458  07A0               	skipnc
  8303  1459  1803               	incf	(__Umul8_16@product+1),f
  8304  145A  0AA1               	movf	(__Umul8_16@word_mpld+1),w
  8305  145B  0823               	addwf	(__Umul8_16@product+1),f
  8306  145C  07A1               	line	53
  8307                           	
  8308                           l886:	
  8309  145D                     	line	54
  8310                           	movlw	01h
  8311  145D  3001               	
  8312                           u2755:
  8313  145E                     	clrc
  8314  145E  1003               	rlf	(__Umul8_16@word_mpld),f
  8315  145F  0DA2               	rlf	(__Umul8_16@word_mpld+1),f
  8316  1460  0DA3               	addlw	-1
  8317  1461  3EFF               	skipz
  8318  1462  1D03               	goto	u2755
  8319  1463  2C5E               	line	55
  8320                           	clrc
  8321  1464  1003               	rrf	(__Umul8_16@multiplier),f
  8322  1465  0CA4               
  8323                           	line	56
  8324                           	
  8325                           l2386:	
  8326  1466                     	movf	((__Umul8_16@multiplier)),w
  8327  1466  0824               	btfss	status,2
  8328  1467  1D03               	goto	u2761
  8329  1468  2C6A               	goto	u2760
  8330  1469  2C6B               u2761:
  8331  146A                     	goto	l2382
  8332  146A  2C53               u2760:
  8333  146B                     	goto	l2388
  8334  146B  2C6C               	
  8335                           l887:	
  8336  146C                     	line	59
  8337                           	
  8338                           l2388:	
  8339  146C                     	movf	(__Umul8_16@product+1),w
  8340  146C  0821               	movwf	(?__Umul8_16+1)
  8341  146D  00F4               	movf	(__Umul8_16@product),w
  8342  146E  0820               	movwf	(?__Umul8_16)
  8343  146F  00F3               	goto	l888
  8344  1470  2C71               	
  8345                           l2390:	
  8346  1471                     	line	60
  8347                           	
  8348                           l888:	
  8349  1471                     	return
  8350  1471  0008               	opt stack 0
  8351                           GLOBAL	__end_of__Umul8_16
  8352                           	__end_of__Umul8_16:
  8353  1472                     	signat	__Umul8_16,8314
  8354                           	global	___fldiv
  8355                           
  8356 ;; *************** function ___fldiv *****************
  8357 ;; Defined at:
  8358 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  8359 ;; Parameters:    Size  Location     Type
  8360 ;;  a               4   64[BANK0 ] unsigned int 
  8361 ;;  b               4   68[BANK0 ] unsigned int 
  8362 ;; Auto vars:     Size  Location     Type
  8363 ;;  grs             4    7[BANK1 ] unsigned long 
  8364 ;;  rem             4    0[BANK1 ] unsigned long 
  8365 ;;  new_exp         2    5[BANK1 ] int 
  8366 ;;  aexp            1   12[BANK1 ] unsigned char 
  8367 ;;  bexp            1   11[BANK1 ] unsigned char 
  8368 ;;  sign            1    4[BANK1 ] unsigned char 
  8369 ;; Return value:  Size  Location     Type
  8370 ;;                  4   64[BANK0 ] unsigned char 
  8371 ;; Registers used:
  8372 ;;		wreg, status,2, status,0, btemp+1
  8373 ;; Tracked objects:
  8374 ;;		On entry : 0/0
  8375 ;;		On exit  : 0/0
  8376 ;;		Unchanged: 0/0
  8377 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8378 ;;      Params:         0       8       0       0       0
  8379 ;;      Locals:         0       0      13       0       0
  8380 ;;      Temps:          0       5       0       0       0
  8381 ;;      Totals:         0      13      13       0       0
  8382 ;;Total ram usage:       26 bytes
  8383 ;; Hardware stack levels used:    1
  8384 ;; Hardware stack levels required when called:    2
  8385 ;; This function calls:
  8386 ;;		Nothing
  8387 ;; This function is called by:
  8388 ;;		_main
  8389 ;; This function uses a non-reentrant model
  8390 ;;
  8391                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  8392                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  8393                           	line	8
  8394                           global __ptext20
  8395                           __ptext20:	;psect for function ___fldiv
  8396  051E                     psect	text20
  8397                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  8398                           	line	8
  8399                           	global	__size_of___fldiv
  8400                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  8401  02CE                     	
  8402                           ___fldiv:	
  8403  051E                     ;incstack = 0
  8404                           	opt	stack 5
  8405                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  8406                           	line	26
  8407                           	
  8408                           l2786:	
  8409  051E                     	bcf	status, 5	;RP0=0, select bank0
  8410  051E  1283               	bcf	status, 6	;RP1=0, select bank0
  8411  051F  1303               	movf	0+(___fldiv@b)+03h,w
  8412  0520  0867               	andlw	080h
  8413  0521  3980               	movwf	(??___fldiv+0)+0
  8414  0522  00E8               	movf	(??___fldiv+0)+0,w
  8415  0523  0868               	bsf	status, 5	;RP0=1, select bank1
  8416  0524  1683               	bcf	status, 6	;RP1=0, select bank1
  8417  0525  1303               	movwf	(___fldiv@sign)^080h
  8418  0526  00C8               	line	27
  8419                           	
  8420                           l2788:	
  8421  0527                     	bcf	status, 5	;RP0=0, select bank0
  8422  0527  1283               	bcf	status, 6	;RP1=0, select bank0
  8423  0528  1303               	movf	0+(___fldiv@b)+03h,w
  8424  0529  0867               	movwf	(??___fldiv+0)+0
  8425  052A  00E8               	addwf	(??___fldiv+0)+0,w
  8426  052B  0768               	movwf	(??___fldiv+1)+0
  8427  052C  00E9               	movf	(??___fldiv+1)+0,w
  8428  052D  0869               	bsf	status, 5	;RP0=1, select bank1
  8429  052E  1683               	bcf	status, 6	;RP1=0, select bank1
  8430  052F  1303               	movwf	(___fldiv@bexp)^080h
  8431  0530  00CF               	line	28
  8432                           	
  8433                           l2790:	
  8434  0531                     	bcf	status, 5	;RP0=0, select bank0
  8435  0531  1283               	bcf	status, 6	;RP1=0, select bank0
  8436  0532  1303               	btfss	0+(___fldiv@b)+02h,(7)&7
  8437  0533  1FE6               	goto	u3591
  8438  0534  2D36               	goto	u3590
  8439  0535  2D37               u3591:
  8440  0536                     	goto	l2794
  8441  0536  2D3B               u3590:
  8442  0537                     	line	29
  8443                           	
  8444                           l2792:	
  8445  0537                     	bsf	status, 5	;RP0=1, select bank1
  8446  0537  1683               	bcf	status, 6	;RP1=0, select bank1
  8447  0538  1303               	bsf	(___fldiv@bexp)^080h+(0/8),(0)&7
  8448  0539  144F               	goto	l2794
  8449  053A  2D3B               	line	30
  8450                           	
  8451                           l801:	
  8452  053B                     	line	33
  8453                           	
  8454                           l2794:	
  8455  053B                     	bsf	status, 5	;RP0=1, select bank1
  8456  053B  1683               	bcf	status, 6	;RP1=0, select bank1
  8457  053C  1303               	movf	((___fldiv@bexp)^080h),w
  8458  053D  084F               	btfsc	status,2
  8459  053E  1903               	goto	u3601
  8460  053F  2D41               	goto	u3600
  8461  0540  2D42               u3601:
  8462  0541                     	goto	l2804
  8463  0541  2D56               u3600:
  8464  0542                     	line	35
  8465                           	
  8466                           l2796:	
  8467  0542                     		incf	((___fldiv@bexp)^080h),w
  8468  0542  0A4F               	btfss	status,2
  8469  0543  1D03               	goto	u3611
  8470  0544  2D46               	goto	u3610
  8471  0545  2D47               u3611:
  8472  0546                     	goto	l2800
  8473  0546  2D52               u3610:
  8474  0547                     	line	37
  8475                           	
  8476                           l2798:	
  8477  0547                     	movlw	0x0
  8478  0547  3000               	bcf	status, 5	;RP0=0, select bank0
  8479  0548  1283               	bcf	status, 6	;RP1=0, select bank0
  8480  0549  1303               	movwf	(___fldiv@b+3)
  8481  054A  00E7               	movlw	0x0
  8482  054B  3000               	movwf	(___fldiv@b+2)
  8483  054C  00E6               	movlw	0x0
  8484  054D  3000               	movwf	(___fldiv@b+1)
  8485  054E  00E5               	movlw	0x0
  8486  054F  3000               	movwf	(___fldiv@b)
  8487  0550  00E4               
  8488                           	goto	l2800
  8489  0551  2D52               	line	38
  8490                           	
  8491                           l803:	
  8492  0552                     	line	40
  8493                           	
  8494                           l2800:	
  8495  0552                     	bcf	status, 5	;RP0=0, select bank0
  8496  0552  1283               	bsf	(___fldiv@b)+(23/8),(23)&7
  8497  0553  17E6               	line	42
  8498                           	
  8499                           l2802:	
  8500  0554                     	clrf	0+(___fldiv@b)+03h
  8501  0554  01E7               	line	43
  8502                           	goto	l2806
  8503  0555  2D60               	line	44
  8504                           	
  8505                           l802:	
  8506  0556                     	line	46
  8507                           	
  8508                           l2804:	
  8509  0556                     	movlw	0x0
  8510  0556  3000               	bcf	status, 5	;RP0=0, select bank0
  8511  0557  1283               	movwf	(___fldiv@b+3)
  8512  0558  00E7               	movlw	0x0
  8513  0559  3000               	movwf	(___fldiv@b+2)
  8514  055A  00E6               	movlw	0x0
  8515  055B  3000               	movwf	(___fldiv@b+1)
  8516  055C  00E5               	movlw	0x0
  8517  055D  3000               	movwf	(___fldiv@b)
  8518  055E  00E4               
  8519                           	goto	l2806
  8520  055F  2D60               	line	47
  8521                           	
  8522                           l804:	
  8523  0560                     	line	49
  8524                           	
  8525                           l2806:	
  8526  0560                     	movf	0+(___fldiv@a)+03h,w
  8527  0560  0863               	andlw	080h
  8528  0561  3980               	movwf	(??___fldiv+0)+0
  8529  0562  00E8               	movf	(??___fldiv+0)+0,w
  8530  0563  0868               	bsf	status, 5	;RP0=1, select bank1
  8531  0564  1683               	bcf	status, 6	;RP1=0, select bank1
  8532  0565  1303               	xorwf	(___fldiv@sign)^080h,f
  8533  0566  06C8               	line	50
  8534                           	
  8535                           l2808:	
  8536  0567                     	bcf	status, 5	;RP0=0, select bank0
  8537  0567  1283               	bcf	status, 6	;RP1=0, select bank0
  8538  0568  1303               	movf	0+(___fldiv@a)+03h,w
  8539  0569  0863               	movwf	(??___fldiv+0)+0
  8540  056A  00E8               	addwf	(??___fldiv+0)+0,w
  8541  056B  0768               	movwf	(??___fldiv+1)+0
  8542  056C  00E9               	movf	(??___fldiv+1)+0,w
  8543  056D  0869               	bsf	status, 5	;RP0=1, select bank1
  8544  056E  1683               	bcf	status, 6	;RP1=0, select bank1
  8545  056F  1303               	movwf	(___fldiv@aexp)^080h
  8546  0570  00D0               	line	51
  8547                           	
  8548                           l2810:	
  8549  0571                     	bcf	status, 5	;RP0=0, select bank0
  8550  0571  1283               	bcf	status, 6	;RP1=0, select bank0
  8551  0572  1303               	btfss	0+(___fldiv@a)+02h,(7)&7
  8552  0573  1FE2               	goto	u3621
  8553  0574  2D76               	goto	u3620
  8554  0575  2D77               u3621:
  8555  0576                     	goto	l2814
  8556  0576  2D7B               u3620:
  8557  0577                     	line	52
  8558                           	
  8559                           l2812:	
  8560  0577                     	bsf	status, 5	;RP0=1, select bank1
  8561  0577  1683               	bcf	status, 6	;RP1=0, select bank1
  8562  0578  1303               	bsf	(___fldiv@aexp)^080h+(0/8),(0)&7
  8563  0579  1450               	goto	l2814
  8564  057A  2D7B               	line	53
  8565                           	
  8566                           l805:	
  8567  057B                     	line	56
  8568                           	
  8569                           l2814:	
  8570  057B                     	bsf	status, 5	;RP0=1, select bank1
  8571  057B  1683               	bcf	status, 6	;RP1=0, select bank1
  8572  057C  1303               	movf	((___fldiv@aexp)^080h),w
  8573  057D  0850               	btfsc	status,2
  8574  057E  1903               	goto	u3631
  8575  057F  2D81               	goto	u3630
  8576  0580  2D82               u3631:
  8577  0581                     	goto	l2824
  8578  0581  2D96               u3630:
  8579  0582                     	line	58
  8580                           	
  8581                           l2816:	
  8582  0582                     		incf	((___fldiv@aexp)^080h),w
  8583  0582  0A50               	btfss	status,2
  8584  0583  1D03               	goto	u3641
  8585  0584  2D86               	goto	u3640
  8586  0585  2D87               u3641:
  8587  0586                     	goto	l2820
  8588  0586  2D92               u3640:
  8589  0587                     	line	60
  8590                           	
  8591                           l2818:	
  8592  0587                     	movlw	0x0
  8593  0587  3000               	bcf	status, 5	;RP0=0, select bank0
  8594  0588  1283               	bcf	status, 6	;RP1=0, select bank0
  8595  0589  1303               	movwf	(___fldiv@a+3)
  8596  058A  00E3               	movlw	0x0
  8597  058B  3000               	movwf	(___fldiv@a+2)
  8598  058C  00E2               	movlw	0x0
  8599  058D  3000               	movwf	(___fldiv@a+1)
  8600  058E  00E1               	movlw	0x0
  8601  058F  3000               	movwf	(___fldiv@a)
  8602  0590  00E0               
  8603                           	goto	l2820
  8604  0591  2D92               	line	61
  8605                           	
  8606                           l807:	
  8607  0592                     	line	63
  8608                           	
  8609                           l2820:	
  8610  0592                     	bcf	status, 5	;RP0=0, select bank0
  8611  0592  1283               	bsf	(___fldiv@a)+(23/8),(23)&7
  8612  0593  17E2               	line	65
  8613                           	
  8614                           l2822:	
  8615  0594                     	clrf	0+(___fldiv@a)+03h
  8616  0594  01E3               	line	66
  8617                           	goto	l808
  8618  0595  2D9F               	line	67
  8619                           	
  8620                           l806:	
  8621  0596                     	line	69
  8622                           	
  8623                           l2824:	
  8624  0596                     	movlw	0x0
  8625  0596  3000               	bcf	status, 5	;RP0=0, select bank0
  8626  0597  1283               	movwf	(___fldiv@a+3)
  8627  0598  00E3               	movlw	0x0
  8628  0599  3000               	movwf	(___fldiv@a+2)
  8629  059A  00E2               	movlw	0x0
  8630  059B  3000               	movwf	(___fldiv@a+1)
  8631  059C  00E1               	movlw	0x0
  8632  059D  3000               	movwf	(___fldiv@a)
  8633  059E  00E0               
  8634                           	line	70
  8635                           	
  8636                           l808:	
  8637  059F                     	line	75
  8638                           	movf	(___fldiv@a+3),w
  8639  059F  0863               	iorwf	(___fldiv@a+2),w
  8640  05A0  0462               	iorwf	(___fldiv@a+1),w
  8641  05A1  0461               	iorwf	(___fldiv@a),w
  8642  05A2  0460               	skipz
  8643  05A3  1D03               	goto	u3651
  8644  05A4  2DA6               	goto	u3650
  8645  05A5  2DA7               u3651:
  8646  05A6                     	goto	l2834
  8647  05A6  2DC5               u3650:
  8648  05A7                     	line	76
  8649                           	
  8650                           l2826:	
  8651  05A7                     	movlw	high highword(0)
  8652  05A7  3000               	movwf	(___fldiv@b+3)
  8653  05A8  00E7               	movlw	low highword(0)
  8654  05A9  3000               	movwf	(___fldiv@b+2)
  8655  05AA  00E6               	movlw	high(0)
  8656  05AB  3000               	movwf	(___fldiv@b+1)
  8657  05AC  00E5               	movlw	low(0)
  8658  05AD  3000               	movwf	(___fldiv@b)
  8659  05AE  00E4               
  8660                           	line	77
  8661                           	movlw	080h
  8662  05AF  3080               	iorwf	0+(___fldiv@b)+02h,f
  8663  05B0  04E6               	movlw	07Fh
  8664  05B1  307F               	iorwf	1+(___fldiv@b)+02h,f
  8665  05B2  04E7               	line	78
  8666                           	
  8667                           l2828:	
  8668  05B3                     	bsf	status, 5	;RP0=1, select bank1
  8669  05B3  1683               	bcf	status, 6	;RP1=0, select bank1
  8670  05B4  1303               	movf	(___fldiv@sign)^080h,w
  8671  05B5  0848               	bcf	status, 5	;RP0=0, select bank0
  8672  05B6  1283               	bcf	status, 6	;RP1=0, select bank0
  8673  05B7  1303               	movwf	(??___fldiv+0)+0
  8674  05B8  00E8               	movf	(??___fldiv+0)+0,w
  8675  05B9  0868               	iorwf	0+(___fldiv@b)+03h,f
  8676  05BA  04E7               	line	79
  8677                           	
  8678                           l2830:	
  8679  05BB                     	movf	(___fldiv@b+3),w
  8680  05BB  0867               	movwf	(?___fldiv+3)
  8681  05BC  00E3               	movf	(___fldiv@b+2),w
  8682  05BD  0866               	movwf	(?___fldiv+2)
  8683  05BE  00E2               	movf	(___fldiv@b+1),w
  8684  05BF  0865               	movwf	(?___fldiv+1)
  8685  05C0  00E1               	movf	(___fldiv@b),w
  8686  05C1  0864               	movwf	(?___fldiv)
  8687  05C2  00E0               
  8688                           	goto	l810
  8689  05C3  2FEB               	
  8690                           l2832:	
  8691  05C4                     	goto	l810
  8692  05C4  2FEB               	line	80
  8693                           	
  8694                           l809:	
  8695  05C5                     	line	83
  8696                           	
  8697                           l2834:	
  8698  05C5                     	bsf	status, 5	;RP0=1, select bank1
  8699  05C5  1683               	bcf	status, 6	;RP1=0, select bank1
  8700  05C6  1303               	movf	((___fldiv@bexp)^080h),w
  8701  05C7  084F               	btfss	status,2
  8702  05C8  1D03               	goto	u3661
  8703  05C9  2DCB               	goto	u3660
  8704  05CA  2DCC               u3661:
  8705  05CB                     	goto	l2840
  8706  05CB  2DE0               u3660:
  8707  05CC                     	line	84
  8708                           	
  8709                           l2836:	
  8710  05CC                     	movlw	high highword(0)
  8711  05CC  3000               	bcf	status, 5	;RP0=0, select bank0
  8712  05CD  1283               	bcf	status, 6	;RP1=0, select bank0
  8713  05CE  1303               	movwf	(___fldiv@b+3)
  8714  05CF  00E7               	movlw	low highword(0)
  8715  05D0  3000               	movwf	(___fldiv@b+2)
  8716  05D1  00E6               	movlw	high(0)
  8717  05D2  3000               	movwf	(___fldiv@b+1)
  8718  05D3  00E5               	movlw	low(0)
  8719  05D4  3000               	movwf	(___fldiv@b)
  8720  05D5  00E4               
  8721                           	line	85
  8722                           	movf	(___fldiv@b+3),w
  8723  05D6  0867               	movwf	(?___fldiv+3)
  8724  05D7  00E3               	movf	(___fldiv@b+2),w
  8725  05D8  0866               	movwf	(?___fldiv+2)
  8726  05D9  00E2               	movf	(___fldiv@b+1),w
  8727  05DA  0865               	movwf	(?___fldiv+1)
  8728  05DB  00E1               	movf	(___fldiv@b),w
  8729  05DC  0864               	movwf	(?___fldiv)
  8730  05DD  00E0               
  8731                           	goto	l810
  8732  05DE  2FEB               	
  8733                           l2838:	
  8734  05DF                     	goto	l810
  8735  05DF  2FEB               	line	86
  8736                           	
  8737                           l811:	
  8738  05E0                     	line	89
  8739                           	
  8740                           l2840:	
  8741  05E0                     	bsf	status, 5	;RP0=1, select bank1
  8742  05E0  1683               	bcf	status, 6	;RP1=0, select bank1
  8743  05E1  1303               	movf	(___fldiv@aexp)^080h,w
  8744  05E2  0850               	bcf	status, 5	;RP0=0, select bank0
  8745  05E3  1283               	bcf	status, 6	;RP1=0, select bank0
  8746  05E4  1303               	movwf	(??___fldiv+0)+0
  8747  05E5  00E8               	clrf	(??___fldiv+0)+0+1
  8748  05E6  01E9               	comf	(??___fldiv+0)+0,f
  8749  05E7  09E8               	comf	(??___fldiv+0)+1,f
  8750  05E8  09E9               	incf	(??___fldiv+0)+0,f
  8751  05E9  0AE8               	skipnz
  8752  05EA  1903               	incf	(??___fldiv+0)+1,f
  8753  05EB  0AE9               	bsf	status, 5	;RP0=1, select bank1
  8754  05EC  1683               	bcf	status, 6	;RP1=0, select bank1
  8755  05ED  1303               	movf	(___fldiv@bexp)^080h,w
  8756  05EE  084F               	bcf	status, 5	;RP0=0, select bank0
  8757  05EF  1283               	bcf	status, 6	;RP1=0, select bank0
  8758  05F0  1303               	addwf	0+(??___fldiv+0)+0,w
  8759  05F1  0768               	movwf	(??___fldiv+2)+0
  8760  05F2  00EA               	movf	1+(??___fldiv+0)+0,w
  8761  05F3  0869               	skipnc
  8762  05F4  1803               	incf	1+(??___fldiv+0)+0,w
  8763  05F5  0A69               	movwf	((??___fldiv+2)+0)+1
  8764  05F6  00EB               	movf	0+(??___fldiv+2)+0,w
  8765  05F7  086A               	addlw	low(07Fh)
  8766  05F8  3E7F               	bsf	status, 5	;RP0=1, select bank1
  8767  05F9  1683               	bcf	status, 6	;RP1=0, select bank1
  8768  05FA  1303               	movwf	(___fldiv@new_exp)^080h
  8769  05FB  00C9               	bcf	status, 5	;RP0=0, select bank0
  8770  05FC  1283               	bcf	status, 6	;RP1=0, select bank0
  8771  05FD  1303               	movf	1+(??___fldiv+2)+0,w
  8772  05FE  086B               	skipnc
  8773  05FF  1803               	addlw	1
  8774  0600  3E01               	addlw	high(07Fh)
  8775  0601  3E00               	bsf	status, 5	;RP0=1, select bank1
  8776  0602  1683               	bcf	status, 6	;RP1=0, select bank1
  8777  0603  1303               	movwf	1+(___fldiv@new_exp)^080h
  8778  0604  00CA               	line	92
  8779                           	
  8780                           l2842:	
  8781  0605                     	bcf	status, 5	;RP0=0, select bank0
  8782  0605  1283               	bcf	status, 6	;RP1=0, select bank0
  8783  0606  1303               	movf	(___fldiv@b+3),w
  8784  0607  0867               	bsf	status, 5	;RP0=1, select bank1
  8785  0608  1683               	bcf	status, 6	;RP1=0, select bank1
  8786  0609  1303               	movwf	(___fldiv@rem+3)^080h
  8787  060A  00C7               	bcf	status, 5	;RP0=0, select bank0
  8788  060B  1283               	bcf	status, 6	;RP1=0, select bank0
  8789  060C  1303               	movf	(___fldiv@b+2),w
  8790  060D  0866               	bsf	status, 5	;RP0=1, select bank1
  8791  060E  1683               	bcf	status, 6	;RP1=0, select bank1
  8792  060F  1303               	movwf	(___fldiv@rem+2)^080h
  8793  0610  00C6               	bcf	status, 5	;RP0=0, select bank0
  8794  0611  1283               	bcf	status, 6	;RP1=0, select bank0
  8795  0612  1303               	movf	(___fldiv@b+1),w
  8796  0613  0865               	bsf	status, 5	;RP0=1, select bank1
  8797  0614  1683               	bcf	status, 6	;RP1=0, select bank1
  8798  0615  1303               	movwf	(___fldiv@rem+1)^080h
  8799  0616  00C5               	bcf	status, 5	;RP0=0, select bank0
  8800  0617  1283               	bcf	status, 6	;RP1=0, select bank0
  8801  0618  1303               	movf	(___fldiv@b),w
  8802  0619  0864               	bsf	status, 5	;RP0=1, select bank1
  8803  061A  1683               	bcf	status, 6	;RP1=0, select bank1
  8804  061B  1303               	movwf	(___fldiv@rem)^080h
  8805  061C  00C4               
  8806                           	line	93
  8807                           	
  8808                           l2844:	
  8809  061D                     	movlw	high highword(0)
  8810  061D  3000               	bcf	status, 5	;RP0=0, select bank0
  8811  061E  1283               	bcf	status, 6	;RP1=0, select bank0
  8812  061F  1303               	movwf	(___fldiv@b+3)
  8813  0620  00E7               	movlw	low highword(0)
  8814  0621  3000               	movwf	(___fldiv@b+2)
  8815  0622  00E6               	movlw	high(0)
  8816  0623  3000               	movwf	(___fldiv@b+1)
  8817  0624  00E5               	movlw	low(0)
  8818  0625  3000               	movwf	(___fldiv@b)
  8819  0626  00E4               
  8820                           	line	94
  8821                           	
  8822                           l2846:	
  8823  0627                     	movlw	high highword(0)
  8824  0627  3000               	bsf	status, 5	;RP0=1, select bank1
  8825  0628  1683               	bcf	status, 6	;RP1=0, select bank1
  8826  0629  1303               	movwf	(___fldiv@grs+3)^080h
  8827  062A  00CE               	movlw	low highword(0)
  8828  062B  3000               	movwf	(___fldiv@grs+2)^080h
  8829  062C  00CD               	movlw	high(0)
  8830  062D  3000               	movwf	(___fldiv@grs+1)^080h
  8831  062E  00CC               	movlw	low(0)
  8832  062F  3000               	movwf	(___fldiv@grs)^080h
  8833  0630  00CB               
  8834                           	line	96
  8835                           	
  8836                           l2848:	
  8837  0631                     	clrf	(___fldiv@aexp)^080h
  8838  0631  01D0               	line	97
  8839                           	goto	l2868
  8840  0632  2EBD               	
  8841                           l813:	
  8842  0633                     	line	100
  8843                           	
  8844                           l2850:	
  8845  0633                     	movf	((___fldiv@aexp)^080h),w
  8846  0633  0850               	btfsc	status,2
  8847  0634  1903               	goto	u3671
  8848  0635  2E37               	goto	u3670
  8849  0636  2E38               u3671:
  8850  0637                     	goto	l2860
  8851  0637  2E69               u3670:
  8852  0638                     	line	101
  8853                           	
  8854                           l2852:	
  8855  0638                     	movlw	01h
  8856  0638  3001               	bcf	status, 5	;RP0=0, select bank0
  8857  0639  1283               	bcf	status, 6	;RP1=0, select bank0
  8858  063A  1303               	movwf	(??___fldiv+0)+0
  8859  063B  00E8               u3685:
  8860  063C                     	clrc
  8861  063C  1003               	bsf	status, 5	;RP0=1, select bank1
  8862  063D  1683               	bcf	status, 6	;RP1=0, select bank1
  8863  063E  1303               	rlf	(___fldiv@rem)^080h,f
  8864  063F  0DC4               	rlf	(___fldiv@rem+1)^080h,f
  8865  0640  0DC5               	rlf	(___fldiv@rem+2)^080h,f
  8866  0641  0DC6               	rlf	(___fldiv@rem+3)^080h,f
  8867  0642  0DC7               	bcf	status, 5	;RP0=0, select bank0
  8868  0643  1283               	bcf	status, 6	;RP1=0, select bank0
  8869  0644  1303               	decfsz	(??___fldiv+0)+0
  8870  0645  0BE8               	goto	u3685
  8871  0646  2E3C               	line	102
  8872                           	movlw	01h
  8873  0647  3001               	movwf	(??___fldiv+0)+0
  8874  0648  00E8               u3695:
  8875  0649                     	clrc
  8876  0649  1003               	rlf	(___fldiv@b),f
  8877  064A  0DE4               	rlf	(___fldiv@b+1),f
  8878  064B  0DE5               	rlf	(___fldiv@b+2),f
  8879  064C  0DE6               	rlf	(___fldiv@b+3),f
  8880  064D  0DE7               	decfsz	(??___fldiv+0)+0
  8881  064E  0BE8               	goto	u3695
  8882  064F  2E49               	line	103
  8883                           	
  8884                           l2854:	
  8885  0650                     	bsf	status, 5	;RP0=1, select bank1
  8886  0650  1683               	bcf	status, 6	;RP1=0, select bank1
  8887  0651  1303               	btfss	(___fldiv@grs+3)^080h,(31)&7
  8888  0652  1FCE               	goto	u3701
  8889  0653  2E55               	goto	u3700
  8890  0654  2E56               u3701:
  8891  0655                     	goto	l2858
  8892  0655  2E5A               u3700:
  8893  0656                     	line	104
  8894                           	
  8895                           l2856:	
  8896  0656                     	bcf	status, 5	;RP0=0, select bank0
  8897  0656  1283               	bcf	status, 6	;RP1=0, select bank0
  8898  0657  1303               	bsf	(___fldiv@b)+(0/8),(0)&7
  8899  0658  1464               	goto	l2858
  8900  0659  2E5A               	line	105
  8901                           	
  8902                           l815:	
  8903  065A                     	line	106
  8904                           	
  8905                           l2858:	
  8906  065A                     	movlw	01h
  8907  065A  3001               	bcf	status, 5	;RP0=0, select bank0
  8908  065B  1283               	movwf	(??___fldiv+0)+0
  8909  065C  00E8               u3715:
  8910  065D                     	clrc
  8911  065D  1003               	bsf	status, 5	;RP0=1, select bank1
  8912  065E  1683               	bcf	status, 6	;RP1=0, select bank1
  8913  065F  1303               	rlf	(___fldiv@grs)^080h,f
  8914  0660  0DCB               	rlf	(___fldiv@grs+1)^080h,f
  8915  0661  0DCC               	rlf	(___fldiv@grs+2)^080h,f
  8916  0662  0DCD               	rlf	(___fldiv@grs+3)^080h,f
  8917  0663  0DCE               	bcf	status, 5	;RP0=0, select bank0
  8918  0664  1283               	bcf	status, 6	;RP1=0, select bank0
  8919  0665  1303               	decfsz	(??___fldiv+0)+0
  8920  0666  0BE8               	goto	u3715
  8921  0667  2E5D               	goto	l2860
  8922  0668  2E69               	line	107
  8923                           	
  8924                           l814:	
  8925  0669                     	line	112
  8926                           	
  8927                           l2860:	
  8928  0669                     	bcf	status, 5	;RP0=0, select bank0
  8929  0669  1283               	movf	(___fldiv@a+3),w
  8930  066A  0863               	bsf	status, 5	;RP0=1, select bank1
  8931  066B  1683               	bcf	status, 6	;RP1=0, select bank1
  8932  066C  1303               	subwf	(___fldiv@rem+3)^080h,w
  8933  066D  0247               	skipz
  8934  066E  1D03               	goto	u3725
  8935  066F  2E86               	bcf	status, 5	;RP0=0, select bank0
  8936  0670  1283               	bcf	status, 6	;RP1=0, select bank0
  8937  0671  1303               	movf	(___fldiv@a+2),w
  8938  0672  0862               	bsf	status, 5	;RP0=1, select bank1
  8939  0673  1683               	bcf	status, 6	;RP1=0, select bank1
  8940  0674  1303               	subwf	(___fldiv@rem+2)^080h,w
  8941  0675  0246               	skipz
  8942  0676  1D03               	goto	u3725
  8943  0677  2E86               	bcf	status, 5	;RP0=0, select bank0
  8944  0678  1283               	bcf	status, 6	;RP1=0, select bank0
  8945  0679  1303               	movf	(___fldiv@a+1),w
  8946  067A  0861               	bsf	status, 5	;RP0=1, select bank1
  8947  067B  1683               	bcf	status, 6	;RP1=0, select bank1
  8948  067C  1303               	subwf	(___fldiv@rem+1)^080h,w
  8949  067D  0245               	skipz
  8950  067E  1D03               	goto	u3725
  8951  067F  2E86               	bcf	status, 5	;RP0=0, select bank0
  8952  0680  1283               	bcf	status, 6	;RP1=0, select bank0
  8953  0681  1303               	movf	(___fldiv@a),w
  8954  0682  0860               	bsf	status, 5	;RP0=1, select bank1
  8955  0683  1683               	bcf	status, 6	;RP1=0, select bank1
  8956  0684  1303               	subwf	(___fldiv@rem)^080h,w
  8957  0685  0244               u3725:
  8958  0686                     	skipc
  8959  0686  1C03               	goto	u3721
  8960  0687  2E89               	goto	u3720
  8961  0688  2E8A               u3721:
  8962  0689                     	goto	l2866
  8963  0689  2EB4               u3720:
  8964  068A                     	line	115
  8965                           	
  8966                           l2862:	
  8967  068A                     	bsf	(___fldiv@grs)^080h+(30/8),(30)&7
  8968  068A  174E               	line	116
  8969                           	
  8970                           l2864:	
  8971  068B                     	bcf	status, 5	;RP0=0, select bank0
  8972  068B  1283               	bcf	status, 6	;RP1=0, select bank0
  8973  068C  1303               	movf	(___fldiv@a),w
  8974  068D  0860               	bsf	status, 5	;RP0=1, select bank1
  8975  068E  1683               	bcf	status, 6	;RP1=0, select bank1
  8976  068F  1303               	subwf	(___fldiv@rem)^080h,f
  8977  0690  02C4               	bcf	status, 5	;RP0=0, select bank0
  8978  0691  1283               	bcf	status, 6	;RP1=0, select bank0
  8979  0692  1303               	movf	(___fldiv@a+1),w
  8980  0693  0861               	skipc
  8981  0694  1C03               	incfsz	(___fldiv@a+1),w
  8982  0695  0F61               	goto	u3735
  8983  0696  2E98               	goto	u3736
  8984  0697  2E9B               u3735:
  8985  0698                     	bsf	status, 5	;RP0=1, select bank1
  8986  0698  1683               	bcf	status, 6	;RP1=0, select bank1
  8987  0699  1303               	subwf	(___fldiv@rem+1)^080h,f
  8988  069A  02C5               u3736:
  8989  069B                     	bcf	status, 5	;RP0=0, select bank0
  8990  069B  1283               	bcf	status, 6	;RP1=0, select bank0
  8991  069C  1303               	movf	(___fldiv@a+2),w
  8992  069D  0862               	skipc
  8993  069E  1C03               	incfsz	(___fldiv@a+2),w
  8994  069F  0F62               	goto	u3737
  8995  06A0  2EA2               	goto	u3738
  8996  06A1  2EA5               u3737:
  8997  06A2                     	bsf	status, 5	;RP0=1, select bank1
  8998  06A2  1683               	bcf	status, 6	;RP1=0, select bank1
  8999  06A3  1303               	subwf	(___fldiv@rem+2)^080h,f
  9000  06A4  02C6               u3738:
  9001  06A5                     	bcf	status, 5	;RP0=0, select bank0
  9002  06A5  1283               	bcf	status, 6	;RP1=0, select bank0
  9003  06A6  1303               	movf	(___fldiv@a+3),w
  9004  06A7  0863               	skipc
  9005  06A8  1C03               	incfsz	(___fldiv@a+3),w
  9006  06A9  0F63               	goto	u3739
  9007  06AA  2EAC               	goto	u3730
  9008  06AB  2EAF               u3739:
  9009  06AC                     	bsf	status, 5	;RP0=1, select bank1
  9010  06AC  1683               	bcf	status, 6	;RP1=0, select bank1
  9011  06AD  1303               	subwf	(___fldiv@rem+3)^080h,f
  9012  06AE  02C7               u3730:
  9013  06AF                     	bcf	status, 5	;RP0=0, select bank0
  9014  06AF  1283               	bcf	status, 6	;RP1=0, select bank0
  9015  06B0  1303               	bsf	status, 5	;RP0=1, select bank1
  9016  06B1  1683               	bcf	status, 6	;RP1=0, select bank1
  9017  06B2  1303               
  9018                           	goto	l2866
  9019  06B3  2EB4               	line	117
  9020                           	
  9021                           l816:	
  9022  06B4                     	line	118
  9023                           	
  9024                           l2866:	
  9025  06B4                     	movlw	low(01h)
  9026  06B4  3001               	bcf	status, 5	;RP0=0, select bank0
  9027  06B5  1283               	bcf	status, 6	;RP1=0, select bank0
  9028  06B6  1303               	movwf	(??___fldiv+0)+0
  9029  06B7  00E8               	movf	(??___fldiv+0)+0,w
  9030  06B8  0868               	bsf	status, 5	;RP0=1, select bank1
  9031  06B9  1683               	bcf	status, 6	;RP1=0, select bank1
  9032  06BA  1303               	addwf	(___fldiv@aexp)^080h,f
  9033  06BB  07D0               	goto	l2868
  9034  06BC  2EBD               	line	119
  9035                           	
  9036                           l812:	
  9037  06BD                     	line	97
  9038                           	
  9039                           l2868:	
  9040  06BD                     	movlw	low(01Ah)
  9041  06BD  301A               	subwf	(___fldiv@aexp)^080h,w
  9042  06BE  0250               	skipc
  9043  06BF  1C03               	goto	u3741
  9044  06C0  2EC2               	goto	u3740
  9045  06C1  2EC3               u3741:
  9046  06C2                     	goto	l2850
  9047  06C2  2E33               u3740:
  9048  06C3                     	goto	l2870
  9049  06C3  2EC4               	
  9050                           l817:	
  9051  06C4                     	line	122
  9052                           	
  9053                           l2870:	
  9054  06C4                     	movf	(___fldiv@rem+3)^080h,w
  9055  06C4  0847               	iorwf	(___fldiv@rem+2)^080h,w
  9056  06C5  0446               	iorwf	(___fldiv@rem+1)^080h,w
  9057  06C6  0445               	iorwf	(___fldiv@rem)^080h,w
  9058  06C7  0444               	skipnz
  9059  06C8  1903               	goto	u3751
  9060  06C9  2ECB               	goto	u3750
  9061  06CA  2ECC               u3751:
  9062  06CB                     	goto	l2884
  9063  06CB  2EFA               u3750:
  9064  06CC                     	line	123
  9065                           	
  9066                           l2872:	
  9067  06CC                     	bsf	(___fldiv@grs)^080h+(0/8),(0)&7
  9068  06CC  144B               	goto	l2884
  9069  06CD  2EFA               	line	124
  9070                           	
  9071                           l818:	
  9072  06CE                     	line	127
  9073                           	goto	l2884
  9074  06CE  2EFA               	
  9075                           l820:	
  9076  06CF                     	line	128
  9077                           	
  9078                           l2874:	
  9079  06CF                     	movlw	01h
  9080  06CF  3001               	bcf	status, 5	;RP0=0, select bank0
  9081  06D0  1283               	movwf	(??___fldiv+0)+0
  9082  06D1  00E8               u3765:
  9083  06D2                     	clrc
  9084  06D2  1003               	rlf	(___fldiv@b),f
  9085  06D3  0DE4               	rlf	(___fldiv@b+1),f
  9086  06D4  0DE5               	rlf	(___fldiv@b+2),f
  9087  06D5  0DE6               	rlf	(___fldiv@b+3),f
  9088  06D6  0DE7               	decfsz	(??___fldiv+0)+0
  9089  06D7  0BE8               	goto	u3765
  9090  06D8  2ED2               	line	129
  9091                           	
  9092                           l2876:	
  9093  06D9                     	bsf	status, 5	;RP0=1, select bank1
  9094  06D9  1683               	bcf	status, 6	;RP1=0, select bank1
  9095  06DA  1303               	btfss	(___fldiv@grs+3)^080h,(31)&7
  9096  06DB  1FCE               	goto	u3771
  9097  06DC  2EDE               	goto	u3770
  9098  06DD  2EDF               u3771:
  9099  06DE                     	goto	l2880
  9100  06DE  2EE3               u3770:
  9101  06DF                     	line	130
  9102                           	
  9103                           l2878:	
  9104  06DF                     	bcf	status, 5	;RP0=0, select bank0
  9105  06DF  1283               	bcf	status, 6	;RP1=0, select bank0
  9106  06E0  1303               	bsf	(___fldiv@b)+(0/8),(0)&7
  9107  06E1  1464               	goto	l2880
  9108  06E2  2EE3               	line	131
  9109                           	
  9110                           l821:	
  9111  06E3                     	line	132
  9112                           	
  9113                           l2880:	
  9114  06E3                     	movlw	01h
  9115  06E3  3001               	bcf	status, 5	;RP0=0, select bank0
  9116  06E4  1283               	movwf	(??___fldiv+0)+0
  9117  06E5  00E8               u3785:
  9118  06E6                     	clrc
  9119  06E6  1003               	bsf	status, 5	;RP0=1, select bank1
  9120  06E7  1683               	bcf	status, 6	;RP1=0, select bank1
  9121  06E8  1303               	rlf	(___fldiv@grs)^080h,f
  9122  06E9  0DCB               	rlf	(___fldiv@grs+1)^080h,f
  9123  06EA  0DCC               	rlf	(___fldiv@grs+2)^080h,f
  9124  06EB  0DCD               	rlf	(___fldiv@grs+3)^080h,f
  9125  06EC  0DCE               	bcf	status, 5	;RP0=0, select bank0
  9126  06ED  1283               	bcf	status, 6	;RP1=0, select bank0
  9127  06EE  1303               	decfsz	(??___fldiv+0)+0
  9128  06EF  0BE8               	goto	u3785
  9129  06F0  2EE6               	line	133
  9130                           	
  9131                           l2882:	
  9132  06F1                     	movlw	0FFh
  9133  06F1  30FF               	bsf	status, 5	;RP0=1, select bank1
  9134  06F2  1683               	bcf	status, 6	;RP1=0, select bank1
  9135  06F3  1303               	addwf	(___fldiv@new_exp)^080h,f
  9136  06F4  07C9               	skipnc
  9137  06F5  1803               	incf	(___fldiv@new_exp+1)^080h,f
  9138  06F6  0ACA               	movlw	0FFh
  9139  06F7  30FF               	addwf	(___fldiv@new_exp+1)^080h,f
  9140  06F8  07CA               	goto	l2884
  9141  06F9  2EFA               	line	134
  9142                           	
  9143                           l819:	
  9144  06FA                     	line	127
  9145                           	
  9146                           l2884:	
  9147  06FA                     	bcf	status, 5	;RP0=0, select bank0
  9148  06FA  1283               	bcf	status, 6	;RP1=0, select bank0
  9149  06FB  1303               	btfss	(___fldiv@b+2),(23)&7
  9150  06FC  1FE6               	goto	u3791
  9151  06FD  2EFF               	goto	u3790
  9152  06FE  2F00               u3791:
  9153  06FF                     	goto	l2874
  9154  06FF  2ECF               u3790:
  9155  0700                     	goto	l2886
  9156  0700  2F01               	
  9157                           l822:	
  9158  0701                     	line	139
  9159                           	
  9160                           l2886:	
  9161  0701                     	bsf	status, 5	;RP0=1, select bank1
  9162  0701  1683               	bcf	status, 6	;RP1=0, select bank1
  9163  0702  1303               	clrf	(___fldiv@aexp)^080h
  9164  0703  01D0               	line	140
  9165                           	
  9166                           l2888:	
  9167  0704                     	btfss	(___fldiv@grs+3)^080h,(31)&7
  9168  0704  1FCE               	goto	u3801
  9169  0705  2F07               	goto	u3800
  9170  0706  2F08               u3801:
  9171  0707                     	goto	l2896
  9172  0707  2F3A               u3800:
  9173  0708                     	line	141
  9174                           	
  9175                           l2890:	
  9176  0708                     	movlw	0FFh
  9177  0708  30FF               	andwf	(___fldiv@grs)^080h,w
  9178  0709  054B               	bcf	status, 5	;RP0=0, select bank0
  9179  070A  1283               	bcf	status, 6	;RP1=0, select bank0
  9180  070B  1303               	movwf	(??___fldiv+0)+0
  9181  070C  00E8               	movlw	0FFh
  9182  070D  30FF               	bsf	status, 5	;RP0=1, select bank1
  9183  070E  1683               	bcf	status, 6	;RP1=0, select bank1
  9184  070F  1303               	andwf	(___fldiv@grs+1)^080h,w
  9185  0710  054C               	bcf	status, 5	;RP0=0, select bank0
  9186  0711  1283               	bcf	status, 6	;RP1=0, select bank0
  9187  0712  1303               	movwf	((??___fldiv+0)+0+1)
  9188  0713  00E9               	movlw	0FFh
  9189  0714  30FF               	bsf	status, 5	;RP0=1, select bank1
  9190  0715  1683               	bcf	status, 6	;RP1=0, select bank1
  9191  0716  1303               	andwf	(___fldiv@grs+2)^080h,w
  9192  0717  054D               	bcf	status, 5	;RP0=0, select bank0
  9193  0718  1283               	bcf	status, 6	;RP1=0, select bank0
  9194  0719  1303               	movwf	((??___fldiv+0)+0+2)
  9195  071A  00EA               	movlw	07Fh
  9196  071B  307F               	bsf	status, 5	;RP0=1, select bank1
  9197  071C  1683               	bcf	status, 6	;RP1=0, select bank1
  9198  071D  1303               	andwf	(___fldiv@grs+3)^080h,w
  9199  071E  054E               	bcf	status, 5	;RP0=0, select bank0
  9200  071F  1283               	bcf	status, 6	;RP1=0, select bank0
  9201  0720  1303               	movwf	((??___fldiv+0)+0+3)
  9202  0721  00EB               	movf	3+(??___fldiv+0)+0,w
  9203  0722  086B               	iorwf	2+(??___fldiv+0)+0,w
  9204  0723  046A               	iorwf	1+(??___fldiv+0)+0,w
  9205  0724  0469               	iorwf	0+(??___fldiv+0)+0,w
  9206  0725  0468               	skipnz
  9207  0726  1903               	goto	u3811
  9208  0727  2F29               	goto	u3810
  9209  0728  2F2A               u3811:
  9210  0729                     	goto	l824
  9211  0729  2F2F               u3810:
  9212  072A                     	line	142
  9213                           	
  9214                           l2892:	
  9215  072A                     	bsf	status, 5	;RP0=1, select bank1
  9216  072A  1683               	bcf	status, 6	;RP1=0, select bank1
  9217  072B  1303               	clrf	(___fldiv@aexp)^080h
  9218  072C  01D0               	incf	(___fldiv@aexp)^080h,f
  9219  072D  0AD0               	line	143
  9220                           	goto	l2896
  9221  072E  2F3A               	line	144
  9222                           	
  9223                           l824:	
  9224  072F                     	line	145
  9225                           	btfss	(___fldiv@b),(0)&7
  9226  072F  1C64               	goto	u3821
  9227  0730  2F32               	goto	u3820
  9228  0731  2F33               u3821:
  9229  0732                     	goto	l2896
  9230  0732  2F3A               u3820:
  9231  0733                     	line	146
  9232                           	
  9233                           l2894:	
  9234  0733                     	bsf	status, 5	;RP0=1, select bank1
  9235  0733  1683               	bcf	status, 6	;RP1=0, select bank1
  9236  0734  1303               	clrf	(___fldiv@aexp)^080h
  9237  0735  01D0               	incf	(___fldiv@aexp)^080h,f
  9238  0736  0AD0               	goto	l2896
  9239  0737  2F3A               	line	147
  9240                           	
  9241                           l826:	
  9242  0738                     	goto	l2896
  9243  0738  2F3A               	line	148
  9244                           	
  9245                           l825:	
  9246  0739                     	goto	l2896
  9247  0739  2F3A               	line	149
  9248                           	
  9249                           l823:	
  9250  073A                     	line	150
  9251                           	
  9252                           l2896:	
  9253  073A                     	bsf	status, 5	;RP0=1, select bank1
  9254  073A  1683               	bcf	status, 6	;RP1=0, select bank1
  9255  073B  1303               	movf	((___fldiv@aexp)^080h),w
  9256  073C  0850               	btfsc	status,2
  9257  073D  1903               	goto	u3831
  9258  073E  2F40               	goto	u3830
  9259  073F  2F41               u3831:
  9260  0740                     	goto	l2906
  9261  0740  2F78               u3830:
  9262  0741                     	line	151
  9263                           	
  9264                           l2898:	
  9265  0741                     	movlw	01h
  9266  0741  3001               	bcf	status, 5	;RP0=0, select bank0
  9267  0742  1283               	bcf	status, 6	;RP1=0, select bank0
  9268  0743  1303               	addwf	(___fldiv@b),f
  9269  0744  07E4               	movlw	0
  9270  0745  3000               	skipnc
  9271  0746  1803               movlw 1
  9272  0747  3001               	addwf	(___fldiv@b+1),f
  9273  0748  07E5               	movlw	0
  9274  0749  3000               	skipnc
  9275  074A  1803               movlw 1
  9276  074B  3001               	addwf	(___fldiv@b+2),f
  9277  074C  07E6               	movlw	0
  9278  074D  3000               	skipnc
  9279  074E  1803               movlw 1
  9280  074F  3001               	addwf	(___fldiv@b+3),f
  9281  0750  07E7               	line	152
  9282                           	
  9283                           l2900:	
  9284  0751                     	btfss	(___fldiv@b+3),(24)&7
  9285  0751  1C67               	goto	u3841
  9286  0752  2F54               	goto	u3840
  9287  0753  2F55               u3841:
  9288  0754                     	goto	l2906
  9289  0754  2F78               u3840:
  9290  0755                     	line	153
  9291                           	
  9292                           l2902:	
  9293  0755                     	movf	(___fldiv@b),w
  9294  0755  0864               	movwf	(??___fldiv+0)+0
  9295  0756  00E8               	movf	(___fldiv@b+1),w
  9296  0757  0865               	movwf	((??___fldiv+0)+0+1)
  9297  0758  00E9               	movf	(___fldiv@b+2),w
  9298  0759  0866               	movwf	((??___fldiv+0)+0+2)
  9299  075A  00EA               	movf	(___fldiv@b+3),w
  9300  075B  0867               	movwf	((??___fldiv+0)+0+3)
  9301  075C  00EB               	movlw	01h
  9302  075D  3001               	movwf	(??___fldiv+4)+0
  9303  075E  00EC               u3855:
  9304  075F                     	rlf	(??___fldiv+0)+3,w
  9305  075F  0D6B               	rrf	(??___fldiv+0)+3,f
  9306  0760  0CEB               	rrf	(??___fldiv+0)+2,f
  9307  0761  0CEA               	rrf	(??___fldiv+0)+1,f
  9308  0762  0CE9               	rrf	(??___fldiv+0)+0,f
  9309  0763  0CE8               u3850:
  9310  0764                     	decfsz	(??___fldiv+4)+0,f
  9311  0764  0BEC               	goto	u3855
  9312  0765  2F5F               	movf	3+(??___fldiv+0)+0,w
  9313  0766  086B               	movwf	(___fldiv@b+3)
  9314  0767  00E7               	movf	2+(??___fldiv+0)+0,w
  9315  0768  086A               	movwf	(___fldiv@b+2)
  9316  0769  00E6               	movf	1+(??___fldiv+0)+0,w
  9317  076A  0869               	movwf	(___fldiv@b+1)
  9318  076B  00E5               	movf	0+(??___fldiv+0)+0,w
  9319  076C  0868               	movwf	(___fldiv@b)
  9320  076D  00E4               
  9321                           	line	154
  9322                           	
  9323                           l2904:	
  9324  076E                     	movlw	01h
  9325  076E  3001               	bsf	status, 5	;RP0=1, select bank1
  9326  076F  1683               	bcf	status, 6	;RP1=0, select bank1
  9327  0770  1303               	addwf	(___fldiv@new_exp)^080h,f
  9328  0771  07C9               	skipnc
  9329  0772  1803               	incf	(___fldiv@new_exp+1)^080h,f
  9330  0773  0ACA               	movlw	0
  9331  0774  3000               	addwf	(___fldiv@new_exp+1)^080h,f
  9332  0775  07CA               	goto	l2906
  9333  0776  2F78               	line	155
  9334                           	
  9335                           l828:	
  9336  0777                     	goto	l2906
  9337  0777  2F78               	line	156
  9338                           	
  9339                           l827:	
  9340  0778                     	line	159
  9341                           	
  9342                           l2906:	
  9343  0778                     	bsf	status, 5	;RP0=1, select bank1
  9344  0778  1683               	bcf	status, 6	;RP1=0, select bank1
  9345  0779  1303               	movf	(___fldiv@new_exp+1)^080h,w
  9346  077A  084A               	xorlw	80h
  9347  077B  3A80               	movwf	btemp+1
  9348  077C  00FF               	movlw	(0)^80h
  9349  077D  3080               	subwf	btemp+1,w
  9350  077E  027F               	skipz
  9351  077F  1D03               	goto	u3865
  9352  0780  2F83               	movlw	0FFh
  9353  0781  30FF               	subwf	(___fldiv@new_exp)^080h,w
  9354  0782  0249               u3865:
  9355  0783                     
  9356                           	skipc
  9357  0783  1C03               	goto	u3861
  9358  0784  2F86               	goto	u3860
  9359  0785  2F87               u3861:
  9360  0786                     	goto	l2910
  9361  0786  2F98               u3860:
  9362  0787                     	line	160
  9363                           	
  9364                           l2908:	
  9365  0787                     	movlw	0FFh
  9366  0787  30FF               	bsf	status, 5	;RP0=1, select bank1
  9367  0788  1683               	bcf	status, 6	;RP1=0, select bank1
  9368  0789  1303               	movwf	(___fldiv@new_exp)^080h
  9369  078A  00C9               	movlw	0
  9370  078B  3000               	movwf	((___fldiv@new_exp)^080h)+1
  9371  078C  00CA               	line	161
  9372                           	movlw	high highword(0)
  9373  078D  3000               	bcf	status, 5	;RP0=0, select bank0
  9374  078E  1283               	bcf	status, 6	;RP1=0, select bank0
  9375  078F  1303               	movwf	(___fldiv@b+3)
  9376  0790  00E7               	movlw	low highword(0)
  9377  0791  3000               	movwf	(___fldiv@b+2)
  9378  0792  00E6               	movlw	high(0)
  9379  0793  3000               	movwf	(___fldiv@b+1)
  9380  0794  00E5               	movlw	low(0)
  9381  0795  3000               	movwf	(___fldiv@b)
  9382  0796  00E4               
  9383                           	goto	l2910
  9384  0797  2F98               	line	162
  9385                           	
  9386                           l829:	
  9387  0798                     	line	165
  9388                           	
  9389                           l2910:	
  9390  0798                     	bsf	status, 5	;RP0=1, select bank1
  9391  0798  1683               	bcf	status, 6	;RP1=0, select bank1
  9392  0799  1303               	movf	(___fldiv@new_exp+1)^080h,w
  9393  079A  084A               	xorlw	80h
  9394  079B  3A80               	movwf	btemp+1
  9395  079C  00FF               	movlw	(0)^80h
  9396  079D  3080               	subwf	btemp+1,w
  9397  079E  027F               	skipz
  9398  079F  1D03               	goto	u3875
  9399  07A0  2FA3               	movlw	01h
  9400  07A1  3001               	subwf	(___fldiv@new_exp)^080h,w
  9401  07A2  0249               u3875:
  9402  07A3                     
  9403                           	skipnc
  9404  07A3  1803               	goto	u3871
  9405  07A4  2FA6               	goto	u3870
  9406  07A5  2FA7               u3871:
  9407  07A6                     	goto	l830
  9408  07A6  2FB8               u3870:
  9409  07A7                     	line	166
  9410                           	
  9411                           l2912:	
  9412  07A7                     	bsf	status, 5	;RP0=1, select bank1
  9413  07A7  1683               	bcf	status, 6	;RP1=0, select bank1
  9414  07A8  1303               	clrf	(___fldiv@new_exp)^080h
  9415  07A9  01C9               	clrf	(___fldiv@new_exp+1)^080h
  9416  07AA  01CA               	line	167
  9417                           	
  9418                           l2914:	
  9419  07AB                     	movlw	high highword(0)
  9420  07AB  3000               	bcf	status, 5	;RP0=0, select bank0
  9421  07AC  1283               	bcf	status, 6	;RP1=0, select bank0
  9422  07AD  1303               	movwf	(___fldiv@b+3)
  9423  07AE  00E7               	movlw	low highword(0)
  9424  07AF  3000               	movwf	(___fldiv@b+2)
  9425  07B0  00E6               	movlw	high(0)
  9426  07B1  3000               	movwf	(___fldiv@b+1)
  9427  07B2  00E5               	movlw	low(0)
  9428  07B3  3000               	movwf	(___fldiv@b)
  9429  07B4  00E4               
  9430                           	line	169
  9431                           	
  9432                           l2916:	
  9433  07B5                     	bsf	status, 5	;RP0=1, select bank1
  9434  07B5  1683               	bcf	status, 6	;RP1=0, select bank1
  9435  07B6  1303               	clrf	(___fldiv@sign)^080h
  9436  07B7  01C8               	line	170
  9437                           	
  9438                           l830:	
  9439  07B8                     	line	173
  9440                           	bsf	status, 5	;RP0=1, select bank1
  9441  07B8  1683               	bcf	status, 6	;RP1=0, select bank1
  9442  07B9  1303               	movf	(___fldiv@new_exp)^080h,w
  9443  07BA  0849               	bcf	status, 5	;RP0=0, select bank0
  9444  07BB  1283               	bcf	status, 6	;RP1=0, select bank0
  9445  07BC  1303               	movwf	(??___fldiv+0)+0
  9446  07BD  00E8               	movf	(??___fldiv+0)+0,w
  9447  07BE  0868               	bsf	status, 5	;RP0=1, select bank1
  9448  07BF  1683               	bcf	status, 6	;RP1=0, select bank1
  9449  07C0  1303               	movwf	(___fldiv@bexp)^080h
  9450  07C1  00CF               	line	175
  9451                           	
  9452                           l2918:	
  9453  07C2                     	btfss	(___fldiv@bexp)^080h,(0)&7
  9454  07C2  1C4F               	goto	u3881
  9455  07C3  2FC5               	goto	u3880
  9456  07C4  2FC6               u3881:
  9457  07C5                     	goto	l2922
  9458  07C5  2FCA               u3880:
  9459  07C6                     	line	176
  9460                           	
  9461                           l2920:	
  9462  07C6                     	bcf	status, 5	;RP0=0, select bank0
  9463  07C6  1283               	bcf	status, 6	;RP1=0, select bank0
  9464  07C7  1303               	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
  9465  07C8  17E6               	line	177
  9466                           	goto	l832
  9467  07C9  2FCF               	line	179
  9468                           	
  9469                           l831:	
  9470  07CA                     	line	180
  9471                           	
  9472                           l2922:	
  9473  07CA                     	movlw	low(07Fh)
  9474  07CA  307F               	bcf	status, 5	;RP0=0, select bank0
  9475  07CB  1283               	movwf	(??___fldiv+0)+0
  9476  07CC  00E8               	movf	(??___fldiv+0)+0,w
  9477  07CD  0868               	andwf	0+(___fldiv@b)+02h,f
  9478  07CE  05E6               	line	181
  9479                           	
  9480                           l832:	
  9481  07CF                     	line	182
  9482                           	bsf	status, 5	;RP0=1, select bank1
  9483  07CF  1683               	bcf	status, 6	;RP1=0, select bank1
  9484  07D0  1303               	movf	(___fldiv@bexp)^080h,w
  9485  07D1  084F               	bcf	status, 5	;RP0=0, select bank0
  9486  07D2  1283               	bcf	status, 6	;RP1=0, select bank0
  9487  07D3  1303               	movwf	(??___fldiv+0)+0
  9488  07D4  00E8               	clrc
  9489  07D5  1003               	rrf	(??___fldiv+0)+0,w
  9490  07D6  0C68               	movwf	(??___fldiv+1)+0
  9491  07D7  00E9               	movf	(??___fldiv+1)+0,w
  9492  07D8  0869               	movwf	0+(___fldiv@b)+03h
  9493  07D9  00E7               	line	183
  9494                           	bsf	status, 5	;RP0=1, select bank1
  9495  07DA  1683               	bcf	status, 6	;RP1=0, select bank1
  9496  07DB  1303               	movf	(___fldiv@sign)^080h,w
  9497  07DC  0848               	bcf	status, 5	;RP0=0, select bank0
  9498  07DD  1283               	bcf	status, 6	;RP1=0, select bank0
  9499  07DE  1303               	movwf	(??___fldiv+0)+0
  9500  07DF  00E8               	movf	(??___fldiv+0)+0,w
  9501  07E0  0868               	iorwf	0+(___fldiv@b)+03h,f
  9502  07E1  04E7               	line	184
  9503                           	
  9504                           l2924:	
  9505  07E2                     	movf	(___fldiv@b+3),w
  9506  07E2  0867               	movwf	(?___fldiv+3)
  9507  07E3  00E3               	movf	(___fldiv@b+2),w
  9508  07E4  0866               	movwf	(?___fldiv+2)
  9509  07E5  00E2               	movf	(___fldiv@b+1),w
  9510  07E6  0865               	movwf	(?___fldiv+1)
  9511  07E7  00E1               	movf	(___fldiv@b),w
  9512  07E8  0864               	movwf	(?___fldiv)
  9513  07E9  00E0               
  9514                           	goto	l810
  9515  07EA  2FEB               	
  9516                           l2926:	
  9517  07EB                     	line	185
  9518                           	
  9519                           l810:	
  9520  07EB                     	return
  9521  07EB  0008               	opt stack 0
  9522                           GLOBAL	__end_of___fldiv
  9523                           	__end_of___fldiv:
  9524  07EC                     	signat	___fldiv,8316
  9525                           	global	___fladd
  9526                           
  9527 ;; *************** function ___fladd *****************
  9528 ;; Defined at:
  9529 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  9530 ;; Parameters:    Size  Location     Type
  9531 ;;  b               4   14[BANK0 ] unsigned char 
  9532 ;;  a               4   18[BANK0 ] unsigned char 
  9533 ;; Auto vars:     Size  Location     Type
  9534 ;;  grs             1   37[BANK0 ] unsigned char 
  9535 ;;  bexp            1   36[BANK0 ] unsigned char 
  9536 ;;  aexp            1   35[BANK0 ] unsigned char 
  9537 ;;  signs           1   34[BANK0 ] unsigned char 
  9538 ;; Return value:  Size  Location     Type
  9539 ;;                  4   14[BANK0 ] unsigned char 
  9540 ;; Registers used:
  9541 ;;		wreg, status,2, status,0, btemp+1
  9542 ;; Tracked objects:
  9543 ;;		On entry : 0/0
  9544 ;;		On exit  : 0/0
  9545 ;;		Unchanged: 0/0
  9546 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9547 ;;      Params:         0       8       0       0       0
  9548 ;;      Locals:         0       4       0       0       0
  9549 ;;      Temps:          0      12       0       0       0
  9550 ;;      Totals:         0      24       0       0       0
  9551 ;;Total ram usage:       24 bytes
  9552 ;; Hardware stack levels used:    1
  9553 ;; Hardware stack levels required when called:    2
  9554 ;; This function calls:
  9555 ;;		Nothing
  9556 ;; This function is called by:
  9557 ;;		_main
  9558 ;; This function uses a non-reentrant model
  9559 ;;
  9560                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  9561                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  9562                           	line	10
  9563                           global __ptext21
  9564                           __ptext21:	;psect for function ___fladd
  9565  09CF                     psect	text21
  9566                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  9567                           	line	10
  9568                           	global	__size_of___fladd
  9569                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  9570  02BC                     	
  9571                           ___fladd:	
  9572  09CF                     ;incstack = 0
  9573                           	opt	stack 5
  9574                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9575                           	line	21
  9576                           	
  9577                           l2592:	
  9578  09CF                     	bcf	status, 5	;RP0=0, select bank0
  9579  09CF  1283               	bcf	status, 6	;RP1=0, select bank0
  9580  09D0  1303               	movf	0+(___fladd@b)+03h,w
  9581  09D1  0831               	andlw	080h
  9582  09D2  3980               	movwf	(??___fladd+0)+0
  9583  09D3  00B6               	movf	(??___fladd+0)+0,w
  9584  09D4  0836               	movwf	(___fladd@signs)
  9585  09D5  00C2               	line	22
  9586                           	
  9587                           l2594:	
  9588  09D6                     	movf	0+(___fladd@b)+03h,w
  9589  09D6  0831               	movwf	(??___fladd+0)+0
  9590  09D7  00B6               	addwf	(??___fladd+0)+0,w
  9591  09D8  0736               	movwf	(??___fladd+1)+0
  9592  09D9  00B7               	movf	(??___fladd+1)+0,w
  9593  09DA  0837               	movwf	(___fladd@bexp)
  9594  09DB  00C4               	line	23
  9595                           	
  9596                           l2596:	
  9597  09DC                     	btfss	0+(___fladd@b)+02h,(7)&7
  9598  09DC  1FB0               	goto	u3131
  9599  09DD  29DF               	goto	u3130
  9600  09DE  29E0               u3131:
  9601  09DF                     	goto	l2600
  9602  09DF  29E2               u3130:
  9603  09E0                     	line	24
  9604                           	
  9605                           l2598:	
  9606  09E0                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  9607  09E0  1444               	goto	l2600
  9608  09E1  29E2               	line	25
  9609                           	
  9610                           l744:	
  9611  09E2                     	line	28
  9612                           	
  9613                           l2600:	
  9614  09E2                     	movf	((___fladd@bexp)),w
  9615  09E2  0844               	btfsc	status,2
  9616  09E3  1903               	goto	u3141
  9617  09E4  29E6               	goto	u3140
  9618  09E5  29E7               u3141:
  9619  09E6                     	goto	l2610
  9620  09E6  29F8               u3140:
  9621  09E7                     	line	30
  9622                           	
  9623                           l2602:	
  9624  09E7                     		incf	((___fladd@bexp)),w
  9625  09E7  0A44               	btfss	status,2
  9626  09E8  1D03               	goto	u3151
  9627  09E9  29EB               	goto	u3150
  9628  09EA  29EC               u3151:
  9629  09EB                     	goto	l2606
  9630  09EB  29F5               u3150:
  9631  09EC                     	line	32
  9632                           	
  9633                           l2604:	
  9634  09EC                     	movlw	0x0
  9635  09EC  3000               	movwf	(___fladd@b+3)
  9636  09ED  00B1               	movlw	0x0
  9637  09EE  3000               	movwf	(___fladd@b+2)
  9638  09EF  00B0               	movlw	0x0
  9639  09F0  3000               	movwf	(___fladd@b+1)
  9640  09F1  00AF               	movlw	0x0
  9641  09F2  3000               	movwf	(___fladd@b)
  9642  09F3  00AE               
  9643                           	goto	l2606
  9644  09F4  29F5               	line	33
  9645                           	
  9646                           l746:	
  9647  09F5                     	line	35
  9648                           	
  9649                           l2606:	
  9650  09F5                     	bsf	(___fladd@b)+(23/8),(23)&7
  9651  09F5  17B0               	line	37
  9652                           	
  9653                           l2608:	
  9654  09F6                     	clrf	0+(___fladd@b)+03h
  9655  09F6  01B1               	line	38
  9656                           	goto	l2612
  9657  09F7  2A01               	line	39
  9658                           	
  9659                           l745:	
  9660  09F8                     	line	41
  9661                           	
  9662                           l2610:	
  9663  09F8                     	movlw	0x0
  9664  09F8  3000               	movwf	(___fladd@b+3)
  9665  09F9  00B1               	movlw	0x0
  9666  09FA  3000               	movwf	(___fladd@b+2)
  9667  09FB  00B0               	movlw	0x0
  9668  09FC  3000               	movwf	(___fladd@b+1)
  9669  09FD  00AF               	movlw	0x0
  9670  09FE  3000               	movwf	(___fladd@b)
  9671  09FF  00AE               
  9672                           	goto	l2612
  9673  0A00  2A01               	line	42
  9674                           	
  9675                           l747:	
  9676  0A01                     	line	44
  9677                           	
  9678                           l2612:	
  9679  0A01                     	movf	0+(___fladd@a)+03h,w
  9680  0A01  0835               	andlw	080h
  9681  0A02  3980               	movwf	(??___fladd+0)+0
  9682  0A03  00B6               	movf	(??___fladd+0)+0,w
  9683  0A04  0836               	movwf	(___fladd@aexp)
  9684  0A05  00C3               	line	46
  9685                           	
  9686                           l2614:	
  9687  0A06                     	movf	(___fladd@aexp),w
  9688  0A06  0843               	xorwf	(___fladd@signs),w
  9689  0A07  0642               	skipnz
  9690  0A08  1903               	goto	u3161
  9691  0A09  2A0B               	goto	u3160
  9692  0A0A  2A0C               u3161:
  9693  0A0B                     	goto	l2618
  9694  0A0B  2A0E               u3160:
  9695  0A0C                     	line	47
  9696                           	
  9697                           l2616:	
  9698  0A0C                     	bsf	(___fladd@signs)+(6/8),(6)&7
  9699  0A0C  1742               	goto	l2618
  9700  0A0D  2A0E               	line	48
  9701                           	
  9702                           l748:	
  9703  0A0E                     	line	49
  9704                           	
  9705                           l2618:	
  9706  0A0E                     	movf	0+(___fladd@a)+03h,w
  9707  0A0E  0835               	movwf	(??___fladd+0)+0
  9708  0A0F  00B6               	addwf	(??___fladd+0)+0,w
  9709  0A10  0736               	movwf	(??___fladd+1)+0
  9710  0A11  00B7               	movf	(??___fladd+1)+0,w
  9711  0A12  0837               	movwf	(___fladd@aexp)
  9712  0A13  00C3               	line	50
  9713                           	
  9714                           l2620:	
  9715  0A14                     	btfss	0+(___fladd@a)+02h,(7)&7
  9716  0A14  1FB4               	goto	u3171
  9717  0A15  2A17               	goto	u3170
  9718  0A16  2A18               u3171:
  9719  0A17                     	goto	l2624
  9720  0A17  2A1A               u3170:
  9721  0A18                     	line	51
  9722                           	
  9723                           l2622:	
  9724  0A18                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  9725  0A18  1443               	goto	l2624
  9726  0A19  2A1A               	line	52
  9727                           	
  9728                           l749:	
  9729  0A1A                     	line	55
  9730                           	
  9731                           l2624:	
  9732  0A1A                     	movf	((___fladd@aexp)),w
  9733  0A1A  0843               	btfsc	status,2
  9734  0A1B  1903               	goto	u3181
  9735  0A1C  2A1E               	goto	u3180
  9736  0A1D  2A1F               u3181:
  9737  0A1E                     	goto	l2634
  9738  0A1E  2A30               u3180:
  9739  0A1F                     	line	57
  9740                           	
  9741                           l2626:	
  9742  0A1F                     		incf	((___fladd@aexp)),w
  9743  0A1F  0A43               	btfss	status,2
  9744  0A20  1D03               	goto	u3191
  9745  0A21  2A23               	goto	u3190
  9746  0A22  2A24               u3191:
  9747  0A23                     	goto	l2630
  9748  0A23  2A2D               u3190:
  9749  0A24                     	line	59
  9750                           	
  9751                           l2628:	
  9752  0A24                     	movlw	0x0
  9753  0A24  3000               	movwf	(___fladd@a+3)
  9754  0A25  00B5               	movlw	0x0
  9755  0A26  3000               	movwf	(___fladd@a+2)
  9756  0A27  00B4               	movlw	0x0
  9757  0A28  3000               	movwf	(___fladd@a+1)
  9758  0A29  00B3               	movlw	0x0
  9759  0A2A  3000               	movwf	(___fladd@a)
  9760  0A2B  00B2               
  9761                           	goto	l2630
  9762  0A2C  2A2D               	line	60
  9763                           	
  9764                           l751:	
  9765  0A2D                     	line	62
  9766                           	
  9767                           l2630:	
  9768  0A2D                     	bsf	(___fladd@a)+(23/8),(23)&7
  9769  0A2D  17B4               	line	64
  9770                           	
  9771                           l2632:	
  9772  0A2E                     	clrf	0+(___fladd@a)+03h
  9773  0A2E  01B5               	line	65
  9774                           	goto	l752
  9775  0A2F  2A38               	line	66
  9776                           	
  9777                           l750:	
  9778  0A30                     	line	68
  9779                           	
  9780                           l2634:	
  9781  0A30                     	movlw	0x0
  9782  0A30  3000               	movwf	(___fladd@a+3)
  9783  0A31  00B5               	movlw	0x0
  9784  0A32  3000               	movwf	(___fladd@a+2)
  9785  0A33  00B4               	movlw	0x0
  9786  0A34  3000               	movwf	(___fladd@a+1)
  9787  0A35  00B3               	movlw	0x0
  9788  0A36  3000               	movwf	(___fladd@a)
  9789  0A37  00B2               
  9790                           	line	69
  9791                           	
  9792                           l752:	
  9793  0A38                     	line	75
  9794                           	movf	(___fladd@bexp),w
  9795  0A38  0844               	subwf	(___fladd@aexp),w
  9796  0A39  0243               	skipnc
  9797  0A3A  1803               	goto	u3201
  9798  0A3B  2A3D               	goto	u3200
  9799  0A3C  2A3E               u3201:
  9800  0A3D                     	goto	l2670
  9801  0A3D  2A84               u3200:
  9802  0A3E                     	line	77
  9803                           	
  9804                           l2636:	
  9805  0A3E                     	btfss	(___fladd@signs),(6)&7
  9806  0A3E  1F42               	goto	u3211
  9807  0A3F  2A41               	goto	u3210
  9808  0A40  2A42               u3211:
  9809  0A41                     	goto	l2640
  9810  0A41  2A47               u3210:
  9811  0A42                     	line	78
  9812                           	
  9813                           l2638:	
  9814  0A42                     	movlw	low(080h)
  9815  0A42  3080               	movwf	(??___fladd+0)+0
  9816  0A43  00B6               	movf	(??___fladd+0)+0,w
  9817  0A44  0836               	xorwf	(___fladd@signs),f
  9818  0A45  06C2               	goto	l2640
  9819  0A46  2A47               	line	79
  9820                           	
  9821                           l754:	
  9822  0A47                     	line	81
  9823                           	
  9824                           l2640:	
  9825  0A47                     	movf	(___fladd@bexp),w
  9826  0A47  0844               	movwf	(??___fladd+0)+0
  9827  0A48  00B6               	movf	(??___fladd+0)+0,w
  9828  0A49  0836               	movwf	(___fladd@grs)
  9829  0A4A  00C5               	line	82
  9830                           	
  9831                           l2642:	
  9832  0A4B                     	movf	(___fladd@aexp),w
  9833  0A4B  0843               	movwf	(??___fladd+0)+0
  9834  0A4C  00B6               	movf	(??___fladd+0)+0,w
  9835  0A4D  0836               	movwf	(___fladd@bexp)
  9836  0A4E  00C4               	line	83
  9837                           	
  9838                           l2644:	
  9839  0A4F                     	movf	(___fladd@grs),w
  9840  0A4F  0845               	movwf	(??___fladd+0)+0
  9841  0A50  00B6               	movf	(??___fladd+0)+0,w
  9842  0A51  0836               	movwf	(___fladd@aexp)
  9843  0A52  00C3               	line	84
  9844                           	
  9845                           l2646:	
  9846  0A53                     	movf	(___fladd@b),w
  9847  0A53  082E               	movwf	(??___fladd+0)+0
  9848  0A54  00B6               	movf	(??___fladd+0)+0,w
  9849  0A55  0836               	movwf	(___fladd@grs)
  9850  0A56  00C5               	line	85
  9851                           	
  9852                           l2648:	
  9853  0A57                     	movf	(___fladd@a),w
  9854  0A57  0832               	movwf	(??___fladd+0)+0
  9855  0A58  00B6               	movf	(??___fladd+0)+0,w
  9856  0A59  0836               	movwf	(___fladd@b)
  9857  0A5A  00AE               	line	86
  9858                           	
  9859                           l2650:	
  9860  0A5B                     	movf	(___fladd@grs),w
  9861  0A5B  0845               	movwf	(??___fladd+0)+0
  9862  0A5C  00B6               	movf	(??___fladd+0)+0,w
  9863  0A5D  0836               	movwf	(___fladd@a)
  9864  0A5E  00B2               	line	87
  9865                           	
  9866                           l2652:	
  9867  0A5F                     	movf	0+(___fladd@b)+01h,w
  9868  0A5F  082F               	movwf	(??___fladd+0)+0
  9869  0A60  00B6               	movf	(??___fladd+0)+0,w
  9870  0A61  0836               	movwf	(___fladd@grs)
  9871  0A62  00C5               	line	88
  9872                           	
  9873                           l2654:	
  9874  0A63                     	movf	0+(___fladd@a)+01h,w
  9875  0A63  0833               	movwf	(??___fladd+0)+0
  9876  0A64  00B6               	movf	(??___fladd+0)+0,w
  9877  0A65  0836               	movwf	0+(___fladd@b)+01h
  9878  0A66  00AF               	line	89
  9879                           	
  9880                           l2656:	
  9881  0A67                     	movf	(___fladd@grs),w
  9882  0A67  0845               	movwf	(??___fladd+0)+0
  9883  0A68  00B6               	movf	(??___fladd+0)+0,w
  9884  0A69  0836               	movwf	0+(___fladd@a)+01h
  9885  0A6A  00B3               	line	90
  9886                           	
  9887                           l2658:	
  9888  0A6B                     	movf	0+(___fladd@b)+02h,w
  9889  0A6B  0830               	movwf	(??___fladd+0)+0
  9890  0A6C  00B6               	movf	(??___fladd+0)+0,w
  9891  0A6D  0836               	movwf	(___fladd@grs)
  9892  0A6E  00C5               	line	91
  9893                           	
  9894                           l2660:	
  9895  0A6F                     	movf	0+(___fladd@a)+02h,w
  9896  0A6F  0834               	movwf	(??___fladd+0)+0
  9897  0A70  00B6               	movf	(??___fladd+0)+0,w
  9898  0A71  0836               	movwf	0+(___fladd@b)+02h
  9899  0A72  00B0               	line	92
  9900                           	
  9901                           l2662:	
  9902  0A73                     	movf	(___fladd@grs),w
  9903  0A73  0845               	movwf	(??___fladd+0)+0
  9904  0A74  00B6               	movf	(??___fladd+0)+0,w
  9905  0A75  0836               	movwf	0+(___fladd@a)+02h
  9906  0A76  00B4               	line	93
  9907                           	
  9908                           l2664:	
  9909  0A77                     	movf	0+(___fladd@b)+03h,w
  9910  0A77  0831               	movwf	(??___fladd+0)+0
  9911  0A78  00B6               	movf	(??___fladd+0)+0,w
  9912  0A79  0836               	movwf	(___fladd@grs)
  9913  0A7A  00C5               	line	94
  9914                           	
  9915                           l2666:	
  9916  0A7B                     	movf	0+(___fladd@a)+03h,w
  9917  0A7B  0835               	movwf	(??___fladd+0)+0
  9918  0A7C  00B6               	movf	(??___fladd+0)+0,w
  9919  0A7D  0836               	movwf	0+(___fladd@b)+03h
  9920  0A7E  00B1               	line	95
  9921                           	
  9922                           l2668:	
  9923  0A7F                     	movf	(___fladd@grs),w
  9924  0A7F  0845               	movwf	(??___fladd+0)+0
  9925  0A80  00B6               	movf	(??___fladd+0)+0,w
  9926  0A81  0836               	movwf	0+(___fladd@a)+03h
  9927  0A82  00B5               	goto	l2670
  9928  0A83  2A84               	line	96
  9929                           	
  9930                           l753:	
  9931  0A84                     	line	98
  9932                           	
  9933                           l2670:	
  9934  0A84                     	clrf	(___fladd@grs)
  9935  0A84  01C5               	line	100
  9936                           	
  9937                           l2672:	
  9938  0A85                     	movf	(___fladd@bexp),w
  9939  0A85  0844               	movwf	(??___fladd+0)+0
  9940  0A86  00B6               	clrf	(??___fladd+0)+0+1
  9941  0A87  01B7               	comf	(??___fladd+0)+0,f
  9942  0A88  09B6               	comf	(??___fladd+0)+1,f
  9943  0A89  09B7               	incf	(??___fladd+0)+0,f
  9944  0A8A  0AB6               	skipnz
  9945  0A8B  1903               	incf	(??___fladd+0)+1,f
  9946  0A8C  0AB7               	movf	(___fladd@aexp),w
  9947  0A8D  0843               	addwf	0+(??___fladd+0)+0,w
  9948  0A8E  0736               	movwf	(??___fladd+2)+0
  9949  0A8F  00B8               	movf	1+(??___fladd+0)+0,w
  9950  0A90  0837               	skipnc
  9951  0A91  1803               	incf	1+(??___fladd+0)+0,w
  9952  0A92  0A37               	movwf	((??___fladd+2)+0)+1
  9953  0A93  00B9               	movf	1+(??___fladd+2)+0,w
  9954  0A94  0839               	xorlw	80h
  9955  0A95  3A80               	movwf	btemp+1
  9956  0A96  00FF               	movlw	(0)^80h
  9957  0A97  3080               	subwf	btemp+1,w
  9958  0A98  027F               	skipz
  9959  0A99  1D03               	goto	u3225
  9960  0A9A  2A9D               	movlw	01Ah
  9961  0A9B  301A               	subwf	0+(??___fladd+2)+0,w
  9962  0A9C  0238               u3225:
  9963  0A9D                     
  9964                           	skipc
  9965  0A9D  1C03               	goto	u3221
  9966  0A9E  2AA0               	goto	u3220
  9967  0A9F  2AA1               u3221:
  9968  0AA0                     	goto	l2688
  9969  0AA0  2AE2               u3220:
  9970  0AA1                     	line	101
  9971                           	
  9972                           l2674:	
  9973  0AA1                     	bcf	status, 5	;RP0=0, select bank0
  9974  0AA1  1283               	bcf	status, 6	;RP1=0, select bank0
  9975  0AA2  1303               	movf	(___fladd@b+3),w
  9976  0AA3  0831               	iorwf	(___fladd@b+2),w
  9977  0AA4  0430               	iorwf	(___fladd@b+1),w
  9978  0AA5  042F               	iorwf	(___fladd@b),w
  9979  0AA6  042E               	skipz
  9980  0AA7  1D03               	goto	u3231
  9981  0AA8  2AAA               	goto	u3230
  9982  0AA9  2AAC               u3231:
  9983  0AAA                     	movlw	1
  9984  0AAA  3001               	goto	u3240
  9985  0AAB  2AAD               u3230:
  9986  0AAC                     	movlw	0
  9987  0AAC  3000               u3240:
  9988  0AAD                     	movwf	(??___fladd+0)+0
  9989  0AAD  00B6               	movf	(??___fladd+0)+0,w
  9990  0AAE  0836               	movwf	(___fladd@grs)
  9991  0AAF  00C5               	line	102
  9992                           	movlw	high highword(0)
  9993  0AB0  3000               	movwf	(___fladd@b+3)
  9994  0AB1  00B1               	movlw	low highword(0)
  9995  0AB2  3000               	movwf	(___fladd@b+2)
  9996  0AB3  00B0               	movlw	high(0)
  9997  0AB4  3000               	movwf	(___fladd@b+1)
  9998  0AB5  00AF               	movlw	low(0)
  9999  0AB6  3000               	movwf	(___fladd@b)
 10000  0AB7  00AE               
 10001                           	line	103
 10002                           	movf	(___fladd@aexp),w
 10003  0AB8  0843               	movwf	(??___fladd+0)+0
 10004  0AB9  00B6               	movf	(??___fladd+0)+0,w
 10005  0ABA  0836               	movwf	(___fladd@bexp)
 10006  0ABB  00C4               	line	104
 10007                           	goto	l756
 10008  0ABC  2AEB               	line	105
 10009                           	
 10010                           l755:	
 10011  0ABD                     	line	106
 10012                           	goto	l2688
 10013  0ABD  2AE2               	
 10014                           l758:	
 10015  0ABE                     	line	109
 10016                           	btfss	(___fladd@grs),(0)&7
 10017  0ABE  1C45               	goto	u3251
 10018  0ABF  2AC1               	goto	u3250
 10019  0AC0  2AC2               u3251:
 10020  0AC1                     	goto	l2678
 10021  0AC1  2ACB               u3250:
 10022  0AC2                     	line	110
 10023                           	
 10024                           l2676:	
 10025  0AC2                     	movf	(___fladd@grs),w
 10026  0AC2  0845               	movwf	(??___fladd+0)+0
 10027  0AC3  00B6               	clrc
 10028  0AC4  1003               	rrf	(??___fladd+0)+0,w
 10029  0AC5  0C36               	iorlw	01h
 10030  0AC6  3801               	movwf	(??___fladd+1)+0
 10031  0AC7  00B7               	movf	(??___fladd+1)+0,w
 10032  0AC8  0837               	movwf	(___fladd@grs)
 10033  0AC9  00C5               	line	111
 10034                           	goto	l2680
 10035  0ACA  2ACE               	line	112
 10036                           	
 10037                           l759:	
 10038  0ACB                     	line	113
 10039                           	
 10040                           l2678:	
 10041  0ACB                     	clrc
 10042  0ACB  1003               	rrf	(___fladd@grs),f
 10043  0ACC  0CC5               
 10044                           	goto	l2680
 10045  0ACD  2ACE               	line	114
 10046                           	
 10047                           l760:	
 10048  0ACE                     	line	115
 10049                           	
 10050                           l2680:	
 10051  0ACE                     	btfss	(___fladd@b),(0)&7
 10052  0ACE  1C2E               	goto	u3261
 10053  0ACF  2AD1               	goto	u3260
 10054  0AD0  2AD2               u3261:
 10055  0AD1                     	goto	l2684
 10056  0AD1  2AD4               u3260:
 10057  0AD2                     	line	116
 10058                           	
 10059                           l2682:	
 10060  0AD2                     	bsf	(___fladd@grs)+(7/8),(7)&7
 10061  0AD2  17C5               	goto	l2684
 10062  0AD3  2AD4               	line	117
 10063                           	
 10064                           l761:	
 10065  0AD4                     	line	118
 10066                           	
 10067                           l2684:	
 10068  0AD4                     	movlw	01h
 10069  0AD4  3001               	movwf	(??___fladd+0)+0
 10070  0AD5  00B6               u3275:
 10071  0AD6                     	rlf	(___fladd@b+3),w
 10072  0AD6  0D31               	rrf	(___fladd@b+3),f
 10073  0AD7  0CB1               	rrf	(___fladd@b+2),f
 10074  0AD8  0CB0               	rrf	(___fladd@b+1),f
 10075  0AD9  0CAF               	rrf	(___fladd@b),f
 10076  0ADA  0CAE               	decfsz	(??___fladd+0)+0&07fh,f
 10077  0ADB  0BB6               	goto	u3275
 10078  0ADC  2AD6               
 10079                           	line	119
 10080                           	
 10081                           l2686:	
 10082  0ADD                     	movlw	low(01h)
 10083  0ADD  3001               	movwf	(??___fladd+0)+0
 10084  0ADE  00B6               	movf	(??___fladd+0)+0,w
 10085  0ADF  0836               	addwf	(___fladd@bexp),f
 10086  0AE0  07C4               	goto	l2688
 10087  0AE1  2AE2               	line	120
 10088                           	
 10089                           l757:	
 10090  0AE2                     	line	106
 10091                           	
 10092                           l2688:	
 10093  0AE2                     	bcf	status, 5	;RP0=0, select bank0
 10094  0AE2  1283               	bcf	status, 6	;RP1=0, select bank0
 10095  0AE3  1303               	movf	(___fladd@aexp),w
 10096  0AE4  0843               	subwf	(___fladd@bexp),w
 10097  0AE5  0244               	skipc
 10098  0AE6  1C03               	goto	u3281
 10099  0AE7  2AE9               	goto	u3280
 10100  0AE8  2AEA               u3281:
 10101  0AE9                     	goto	l758
 10102  0AE9  2ABE               u3280:
 10103  0AEA                     	goto	l756
 10104  0AEA  2AEB               	
 10105                           l762:	
 10106  0AEB                     	line	121
 10107                           	
 10108                           l756:	
 10109  0AEB                     	line	124
 10110                           	btfsc	(___fladd@signs),(6)&7
 10111  0AEB  1B42               	goto	u3291
 10112  0AEC  2AEE               	goto	u3290
 10113  0AED  2AEF               u3291:
 10114  0AEE                     	goto	l2714
 10115  0AEE  2B3E               u3290:
 10116  0AEF                     	line	127
 10117                           	
 10118                           l2690:	
 10119  0AEF                     	movf	((___fladd@bexp)),w
 10120  0AEF  0844               	btfss	status,2
 10121  0AF0  1D03               	goto	u3301
 10122  0AF1  2AF3               	goto	u3300
 10123  0AF2  2AF4               u3301:
 10124  0AF3                     	goto	l2696
 10125  0AF3  2AFE               u3300:
 10126  0AF4                     	line	128
 10127                           	
 10128                           l2692:	
 10129  0AF4                     	movlw	0x0
 10130  0AF4  3000               	movwf	(?___fladd+3)
 10131  0AF5  00B1               	movlw	0x0
 10132  0AF6  3000               	movwf	(?___fladd+2)
 10133  0AF7  00B0               	movlw	0x0
 10134  0AF8  3000               	movwf	(?___fladd+1)
 10135  0AF9  00AF               	movlw	0x0
 10136  0AFA  3000               	movwf	(?___fladd)
 10137  0AFB  00AE               
 10138                           	goto	l765
 10139  0AFC  2C8A               	
 10140                           l2694:	
 10141  0AFD                     	goto	l765
 10142  0AFD  2C8A               	line	129
 10143                           	
 10144                           l764:	
 10145  0AFE                     	line	132
 10146                           	
 10147                           l2696:	
 10148  0AFE                     	movf	(___fladd@a),w
 10149  0AFE  0832               	addwf	(___fladd@b),f
 10150  0AFF  07AE               	movf	(___fladd@a+1),w
 10151  0B00  0833               	clrz
 10152  0B01  1103               	skipnc
 10153  0B02  1803               	addlw	1
 10154  0B03  3E01               	skipnz
 10155  0B04  1903               	goto	u3311
 10156  0B05  2B07               	addwf	(___fladd@b+1),f
 10157  0B06  07AF               u3311:
 10158  0B07                     	movf	(___fladd@a+2),w
 10159  0B07  0834               	clrz
 10160  0B08  1103               	skipnc
 10161  0B09  1803               	addlw	1
 10162  0B0A  3E01               	skipnz
 10163  0B0B  1903               	goto	u3312
 10164  0B0C  2B0E               	addwf	(___fladd@b+2),f
 10165  0B0D  07B0               u3312:
 10166  0B0E                     	movf	(___fladd@a+3),w
 10167  0B0E  0835               	clrz
 10168  0B0F  1103               	skipnc
 10169  0B10  1803               	addlw	1
 10170  0B11  3E01               	skipnz
 10171  0B12  1903               	goto	u3313
 10172  0B13  2B15               	addwf	(___fladd@b+3),f
 10173  0B14  07B1               u3313:
 10174  0B15                     
 10175                           	line	134
 10176                           	
 10177                           l2698:	
 10178  0B15                     	btfss	(___fladd@b+3),(24)&7
 10179  0B15  1C31               	goto	u3321
 10180  0B16  2B18               	goto	u3320
 10181  0B17  2B19               u3321:
 10182  0B18                     	goto	l2748
 10183  0B18  2C07               u3320:
 10184  0B19                     	line	135
 10185                           	
 10186                           l2700:	
 10187  0B19                     	btfss	(___fladd@grs),(0)&7
 10188  0B19  1C45               	goto	u3331
 10189  0B1A  2B1C               	goto	u3330
 10190  0B1B  2B1D               u3331:
 10191  0B1C                     	goto	l2704
 10192  0B1C  2B26               u3330:
 10193  0B1D                     	line	136
 10194                           	
 10195                           l2702:	
 10196  0B1D                     	movf	(___fladd@grs),w
 10197  0B1D  0845               	movwf	(??___fladd+0)+0
 10198  0B1E  00B6               	clrc
 10199  0B1F  1003               	rrf	(??___fladd+0)+0,w
 10200  0B20  0C36               	iorlw	01h
 10201  0B21  3801               	movwf	(??___fladd+1)+0
 10202  0B22  00B7               	movf	(??___fladd+1)+0,w
 10203  0B23  0837               	movwf	(___fladd@grs)
 10204  0B24  00C5               	line	137
 10205                           	goto	l2706
 10206  0B25  2B29               	line	138
 10207                           	
 10208                           l767:	
 10209  0B26                     	line	139
 10210                           	
 10211                           l2704:	
 10212  0B26                     	clrc
 10213  0B26  1003               	rrf	(___fladd@grs),f
 10214  0B27  0CC5               
 10215                           	goto	l2706
 10216  0B28  2B29               	line	140
 10217                           	
 10218                           l768:	
 10219  0B29                     	line	141
 10220                           	
 10221                           l2706:	
 10222  0B29                     	btfss	(___fladd@b),(0)&7
 10223  0B29  1C2E               	goto	u3341
 10224  0B2A  2B2C               	goto	u3340
 10225  0B2B  2B2D               u3341:
 10226  0B2C                     	goto	l2710
 10227  0B2C  2B2F               u3340:
 10228  0B2D                     	line	142
 10229                           	
 10230                           l2708:	
 10231  0B2D                     	bsf	(___fladd@grs)+(7/8),(7)&7
 10232  0B2D  17C5               	goto	l2710
 10233  0B2E  2B2F               	line	143
 10234                           	
 10235                           l769:	
 10236  0B2F                     	line	144
 10237                           	
 10238                           l2710:	
 10239  0B2F                     	movlw	01h
 10240  0B2F  3001               	movwf	(??___fladd+0)+0
 10241  0B30  00B6               u3355:
 10242  0B31                     	rlf	(___fladd@b+3),w
 10243  0B31  0D31               	rrf	(___fladd@b+3),f
 10244  0B32  0CB1               	rrf	(___fladd@b+2),f
 10245  0B33  0CB0               	rrf	(___fladd@b+1),f
 10246  0B34  0CAF               	rrf	(___fladd@b),f
 10247  0B35  0CAE               	decfsz	(??___fladd+0)+0&07fh,f
 10248  0B36  0BB6               	goto	u3355
 10249  0B37  2B31               
 10250                           	line	145
 10251                           	
 10252                           l2712:	
 10253  0B38                     	movlw	low(01h)
 10254  0B38  3001               	movwf	(??___fladd+0)+0
 10255  0B39  00B6               	movf	(??___fladd+0)+0,w
 10256  0B3A  0836               	addwf	(___fladd@bexp),f
 10257  0B3B  07C4               	goto	l2748
 10258  0B3C  2C07               	line	146
 10259                           	
 10260                           l766:	
 10261  0B3D                     	line	148
 10262                           	goto	l2748
 10263  0B3D  2C07               	line	149
 10264                           	
 10265                           l763:	
 10266  0B3E                     	line	153
 10267                           	
 10268                           l2714:	
 10269  0B3E                     	movf	(___fladd@b+3),w
 10270  0B3E  0831               	xorlw	80h
 10271  0B3F  3A80               	movwf	btemp+1
 10272  0B40  00FF               	movf	(___fladd@a+3),w
 10273  0B41  0835               	xorlw	80h
 10274  0B42  3A80               	subwf	btemp+1,w
 10275  0B43  027F               	
 10276                           	skipz
 10277  0B44  1D03               	goto	u3363
 10278  0B45  2B50               	movf	(___fladd@a+2),w
 10279  0B46  0834               	subwf	(___fladd@b+2),w
 10280  0B47  0230               	skipz
 10281  0B48  1D03               	goto	u3363
 10282  0B49  2B50               	movf	(___fladd@a+1),w
 10283  0B4A  0833               	subwf	(___fladd@b+1),w
 10284  0B4B  022F               	skipz
 10285  0B4C  1D03               	goto	u3363
 10286  0B4D  2B50               	movf	(___fladd@a),w
 10287  0B4E  0832               	subwf	(___fladd@b),w
 10288  0B4F  022E               u3363:
 10289  0B50                     	skipnc
 10290  0B50  1803               	goto	u3361
 10291  0B51  2B53               	goto	u3360
 10292  0B52  2B54               u3361:
 10293  0B53                     	goto	l2724
 10294  0B53  2BBA               u3360:
 10295  0B54                     	line	154
 10296                           	
 10297                           l2716:	
 10298  0B54                     	movlw	0FFh
 10299  0B54  30FF               	movwf	((??___fladd+0)+0)
 10300  0B55  00B6               	movlw	0FFh
 10301  0B56  30FF               	movwf	((??___fladd+0)+0+1)
 10302  0B57  00B7               	movlw	0FFh
 10303  0B58  30FF               	movwf	((??___fladd+0)+0+2)
 10304  0B59  00B8               	movlw	0FFh
 10305  0B5A  30FF               	movwf	((??___fladd+0)+0+3)
 10306  0B5B  00B9               	movf	(___fladd@a),w
 10307  0B5C  0832               	movwf	(??___fladd+4)+0
 10308  0B5D  00BA               	movf	(___fladd@a+1),w
 10309  0B5E  0833               	movwf	((??___fladd+4)+0+1)
 10310  0B5F  00BB               	movf	(___fladd@a+2),w
 10311  0B60  0834               	movwf	((??___fladd+4)+0+2)
 10312  0B61  00BC               	movf	(___fladd@a+3),w
 10313  0B62  0835               	movwf	((??___fladd+4)+0+3)
 10314  0B63  00BD               	comf	(___fladd@b),w
 10315  0B64  092E               	movwf	(??___fladd+8)+0
 10316  0B65  00BE               	comf	(___fladd@b+1),w
 10317  0B66  092F               	movwf	((??___fladd+8)+0+1)
 10318  0B67  00BF               	comf	(___fladd@b+2),w
 10319  0B68  0930               	movwf	((??___fladd+8)+0+2)
 10320  0B69  00C0               	comf	(___fladd@b+3),w
 10321  0B6A  0931               	movwf	((??___fladd+8)+0+3)
 10322  0B6B  00C1               	incf	(??___fladd+8)+0,f
 10323  0B6C  0ABE               	skipnz
 10324  0B6D  1903               	incf	((??___fladd+8)+0+1),f
 10325  0B6E  0ABF               	skipnz
 10326  0B6F  1903               	incf	((??___fladd+8)+0+2),f
 10327  0B70  0AC0               	skipnz
 10328  0B71  1903               	incf	((??___fladd+8)+0+3),f
 10329  0B72  0AC1               	movf	0+(??___fladd+8)+0,w
 10330  0B73  083E               	addwf	(??___fladd+4)+0,f
 10331  0B74  07BA               	movf	1+(??___fladd+8)+0,w
 10332  0B75  083F               	skipnc
 10333  0B76  1803               	incfsz	1+(??___fladd+8)+0,w
 10334  0B77  0F3F               	goto	u3370
 10335  0B78  2B7A               	goto	u3371
 10336  0B79  2B7B               u3370:
 10337  0B7A                     	addwf	(??___fladd+4)+1,f
 10338  0B7A  07BB               u3371:
 10339  0B7B                     	movf	2+(??___fladd+8)+0,w
 10340  0B7B  0840               	skipnc
 10341  0B7C  1803               	incfsz	2+(??___fladd+8)+0,w
 10342  0B7D  0F40               	goto	u3372
 10343  0B7E  2B80               	goto	u3373
 10344  0B7F  2B81               u3372:
 10345  0B80                     	addwf	(??___fladd+4)+2,f
 10346  0B80  07BC               u3373:
 10347  0B81                     	movf	3+(??___fladd+8)+0,w
 10348  0B81  0841               	skipnc
 10349  0B82  1803               	incf	3+(??___fladd+8)+0,w
 10350  0B83  0A41               	addwf	(??___fladd+4)+3,f
 10351  0B84  07BD               	movf	0+(??___fladd+4)+0,w
 10352  0B85  083A               	addwf	(??___fladd+0)+0,f
 10353  0B86  07B6               	movf	1+(??___fladd+4)+0,w
 10354  0B87  083B               	skipnc
 10355  0B88  1803               	incfsz	1+(??___fladd+4)+0,w
 10356  0B89  0F3B               	goto	u3380
 10357  0B8A  2B8C               	goto	u3381
 10358  0B8B  2B8D               u3380:
 10359  0B8C                     	addwf	(??___fladd+0)+1,f
 10360  0B8C  07B7               u3381:
 10361  0B8D                     	movf	2+(??___fladd+4)+0,w
 10362  0B8D  083C               	skipnc
 10363  0B8E  1803               	incfsz	2+(??___fladd+4)+0,w
 10364  0B8F  0F3C               	goto	u3382
 10365  0B90  2B92               	goto	u3383
 10366  0B91  2B93               u3382:
 10367  0B92                     	addwf	(??___fladd+0)+2,f
 10368  0B92  07B8               u3383:
 10369  0B93                     	movf	3+(??___fladd+4)+0,w
 10370  0B93  083D               	skipnc
 10371  0B94  1803               	incf	3+(??___fladd+4)+0,w
 10372  0B95  0A3D               	addwf	(??___fladd+0)+3,f
 10373  0B96  07B9               	movf	3+(??___fladd+0)+0,w
 10374  0B97  0839               	movwf	(___fladd@b+3)
 10375  0B98  00B1               	movf	2+(??___fladd+0)+0,w
 10376  0B99  0838               	movwf	(___fladd@b+2)
 10377  0B9A  00B0               	movf	1+(??___fladd+0)+0,w
 10378  0B9B  0837               	movwf	(___fladd@b+1)
 10379  0B9C  00AF               	movf	0+(??___fladd+0)+0,w
 10380  0B9D  0836               	movwf	(___fladd@b)
 10381  0B9E  00AE               
 10382                           	line	155
 10383                           	movlw	low(080h)
 10384  0B9F  3080               	movwf	(??___fladd+0)+0
 10385  0BA0  00B6               	movf	(??___fladd+0)+0,w
 10386  0BA1  0836               	xorwf	(___fladd@signs),f
 10387  0BA2  06C2               	line	156
 10388                           	
 10389                           l2718:	
 10390  0BA3                     	comf	(___fladd@grs),f
 10391  0BA3  09C5               	incf	(___fladd@grs),f
 10392  0BA4  0AC5               	line	157
 10393                           	
 10394                           l2720:	
 10395  0BA5                     	movf	((___fladd@grs)),w
 10396  0BA5  0845               	btfss	status,2
 10397  0BA6  1D03               	goto	u3391
 10398  0BA7  2BA9               	goto	u3390
 10399  0BA8  2BAA               u3391:
 10400  0BA9                     	goto	l773
 10401  0BA9  2BC8               u3390:
 10402  0BAA                     	line	158
 10403                           	
 10404                           l2722:	
 10405  0BAA                     	movlw	01h
 10406  0BAA  3001               	addwf	(___fladd@b),f
 10407  0BAB  07AE               	movlw	0
 10408  0BAC  3000               	skipnc
 10409  0BAD  1803               movlw 1
 10410  0BAE  3001               	addwf	(___fladd@b+1),f
 10411  0BAF  07AF               	movlw	0
 10412  0BB0  3000               	skipnc
 10413  0BB1  1803               movlw 1
 10414  0BB2  3001               	addwf	(___fladd@b+2),f
 10415  0BB3  07B0               	movlw	0
 10416  0BB4  3000               	skipnc
 10417  0BB5  1803               movlw 1
 10418  0BB6  3001               	addwf	(___fladd@b+3),f
 10419  0BB7  07B1               	goto	l773
 10420  0BB8  2BC8               	line	159
 10421                           	
 10422                           l772:	
 10423  0BB9                     	line	160
 10424                           	goto	l773
 10425  0BB9  2BC8               	line	161
 10426                           	
 10427                           l771:	
 10428  0BBA                     	line	162
 10429                           	
 10430                           l2724:	
 10431  0BBA                     	movf	(___fladd@a),w
 10432  0BBA  0832               	subwf	(___fladd@b),f
 10433  0BBB  02AE               	movf	(___fladd@a+1),w
 10434  0BBC  0833               	skipc
 10435  0BBD  1C03               	incfsz	(___fladd@a+1),w
 10436  0BBE  0F33               	subwf	(___fladd@b+1),f
 10437  0BBF  02AF               	movf	(___fladd@a+2),w
 10438  0BC0  0834               	skipc
 10439  0BC1  1C03               	incfsz	(___fladd@a+2),w
 10440  0BC2  0F34               	subwf	(___fladd@b+2),f
 10441  0BC3  02B0               	movf	(___fladd@a+3),w
 10442  0BC4  0835               	skipc
 10443  0BC5  1C03               	incfsz	(___fladd@a+3),w
 10444  0BC6  0F35               	subwf	(___fladd@b+3),f
 10445  0BC7  02B1               	line	163
 10446                           	
 10447                           l773:	
 10448  0BC8                     	line	166
 10449                           	movf	(___fladd@b+3),w
 10450  0BC8  0831               	iorwf	(___fladd@b+2),w
 10451  0BC9  0430               	iorwf	(___fladd@b+1),w
 10452  0BCA  042F               	iorwf	(___fladd@b),w
 10453  0BCB  042E               	skipz
 10454  0BCC  1D03               	goto	u3401
 10455  0BCD  2BCF               	goto	u3400
 10456  0BCE  2BD0               u3401:
 10457  0BCF                     	goto	l2746
 10458  0BCF  2C01               u3400:
 10459  0BD0                     	
 10460                           l2726:	
 10461  0BD0                     	movf	((___fladd@grs)),w
 10462  0BD0  0845               	btfss	status,2
 10463  0BD1  1D03               	goto	u3411
 10464  0BD2  2BD4               	goto	u3410
 10465  0BD3  2BD5               u3411:
 10466  0BD4                     	goto	l2746
 10467  0BD4  2C01               u3410:
 10468  0BD5                     	line	167
 10469                           	
 10470                           l2728:	
 10471  0BD5                     	movlw	0x0
 10472  0BD5  3000               	movwf	(?___fladd+3)
 10473  0BD6  00B1               	movlw	0x0
 10474  0BD7  3000               	movwf	(?___fladd+2)
 10475  0BD8  00B0               	movlw	0x0
 10476  0BD9  3000               	movwf	(?___fladd+1)
 10477  0BDA  00AF               	movlw	0x0
 10478  0BDB  3000               	movwf	(?___fladd)
 10479  0BDC  00AE               
 10480                           	goto	l765
 10481  0BDD  2C8A               	
 10482                           l2730:	
 10483  0BDE                     	goto	l765
 10484  0BDE  2C8A               	line	168
 10485                           	
 10486                           l774:	
 10487  0BDF                     	line	171
 10488                           	goto	l2746
 10489  0BDF  2C01               	
 10490                           l776:	
 10491  0BE0                     	line	172
 10492                           	
 10493                           l2732:	
 10494  0BE0                     	movlw	01h
 10495  0BE0  3001               	movwf	(??___fladd+0)+0
 10496  0BE1  00B6               u3425:
 10497  0BE2                     	clrc
 10498  0BE2  1003               	rlf	(___fladd@b),f
 10499  0BE3  0DAE               	rlf	(___fladd@b+1),f
 10500  0BE4  0DAF               	rlf	(___fladd@b+2),f
 10501  0BE5  0DB0               	rlf	(___fladd@b+3),f
 10502  0BE6  0DB1               	decfsz	(??___fladd+0)+0
 10503  0BE7  0BB6               	goto	u3425
 10504  0BE8  2BE2               	line	173
 10505                           	
 10506                           l2734:	
 10507  0BE9                     	btfss	(___fladd@grs),(7)&7
 10508  0BE9  1FC5               	goto	u3431
 10509  0BEA  2BEC               	goto	u3430
 10510  0BEB  2BED               u3431:
 10511  0BEC                     	goto	l777
 10512  0BEC  2BEE               u3430:
 10513  0BED                     	line	174
 10514                           	
 10515                           l2736:	
 10516  0BED                     	bsf	(___fladd@b)+(0/8),(0)&7
 10517  0BED  142E               	line	175
 10518                           	
 10519                           l777:	
 10520  0BEE                     	line	176
 10521                           	btfss	(___fladd@grs),(0)&7
 10522  0BEE  1C45               	goto	u3441
 10523  0BEF  2BF1               	goto	u3440
 10524  0BF0  2BF2               u3441:
 10525  0BF1                     	goto	l2740
 10526  0BF1  2BF5               u3440:
 10527  0BF2                     	line	177
 10528                           	
 10529                           l2738:	
 10530  0BF2                     	setc
 10531  0BF2  1403               	rlf	(___fladd@grs),f
 10532  0BF3  0DC5               	line	178
 10533                           	goto	l2742
 10534  0BF4  2BF8               	line	179
 10535                           	
 10536                           l778:	
 10537  0BF5                     	line	180
 10538                           	
 10539                           l2740:	
 10540  0BF5                     	clrc
 10541  0BF5  1003               	rlf	(___fladd@grs),f
 10542  0BF6  0DC5               
 10543                           	goto	l2742
 10544  0BF7  2BF8               	line	181
 10545                           	
 10546                           l779:	
 10547  0BF8                     	line	182
 10548                           	
 10549                           l2742:	
 10550  0BF8                     	movf	((___fladd@bexp)),w
 10551  0BF8  0844               	btfsc	status,2
 10552  0BF9  1903               	goto	u3451
 10553  0BFA  2BFC               	goto	u3450
 10554  0BFB  2BFD               u3451:
 10555  0BFC                     	goto	l2746
 10556  0BFC  2C01               u3450:
 10557  0BFD                     	line	183
 10558                           	
 10559                           l2744:	
 10560  0BFD                     	movlw	01h
 10561  0BFD  3001               	subwf	(___fladd@bexp),f
 10562  0BFE  02C4               	goto	l2746
 10563  0BFF  2C01               	line	184
 10564                           	
 10565                           l780:	
 10566  0C00                     	goto	l2746
 10567  0C00  2C01               	line	185
 10568                           	
 10569                           l775:	
 10570  0C01                     	line	171
 10571                           	
 10572                           l2746:	
 10573  0C01                     	btfss	(___fladd@b+2),(23)&7
 10574  0C01  1FB0               	goto	u3461
 10575  0C02  2C04               	goto	u3460
 10576  0C03  2C05               u3461:
 10577  0C04                     	goto	l2732
 10578  0C04  2BE0               u3460:
 10579  0C05                     	goto	l2748
 10580  0C05  2C07               	
 10581                           l781:	
 10582  0C06                     	goto	l2748
 10583  0C06  2C07               	line	186
 10584                           	
 10585                           l770:	
 10586  0C07                     	line	192
 10587                           	
 10588                           l2748:	
 10589  0C07                     	clrf	(___fladd@aexp)
 10590  0C07  01C3               	line	193
 10591                           	
 10592                           l2750:	
 10593  0C08                     	btfss	(___fladd@grs),(7)&7
 10594  0C08  1FC5               	goto	u3471
 10595  0C09  2C0B               	goto	u3470
 10596  0C0A  2C0C               u3471:
 10597  0C0B                     	goto	l2758
 10598  0C0B  2C1E               u3470:
 10599  0C0C                     	line	194
 10600                           	
 10601                           l2752:	
 10602  0C0C                     	movf	(___fladd@grs),w
 10603  0C0C  0845               	andlw	07Fh
 10604  0C0D  397F               	btfsc	status,2
 10605  0C0E  1903               	goto	u3481
 10606  0C0F  2C11               	goto	u3480
 10607  0C10  2C12               u3481:
 10608  0C11                     	goto	l783
 10609  0C11  2C15               u3480:
 10610  0C12                     	line	195
 10611                           	
 10612                           l2754:	
 10613  0C12                     	clrf	(___fladd@aexp)
 10614  0C12  01C3               	incf	(___fladd@aexp),f
 10615  0C13  0AC3               	line	196
 10616                           	goto	l2758
 10617  0C14  2C1E               	line	197
 10618                           	
 10619                           l783:	
 10620  0C15                     	line	198
 10621                           	btfss	(___fladd@b),(0)&7
 10622  0C15  1C2E               	goto	u3491
 10623  0C16  2C18               	goto	u3490
 10624  0C17  2C19               u3491:
 10625  0C18                     	goto	l2758
 10626  0C18  2C1E               u3490:
 10627  0C19                     	line	199
 10628                           	
 10629                           l2756:	
 10630  0C19                     	clrf	(___fladd@aexp)
 10631  0C19  01C3               	incf	(___fladd@aexp),f
 10632  0C1A  0AC3               	goto	l2758
 10633  0C1B  2C1E               	line	200
 10634                           	
 10635                           l785:	
 10636  0C1C                     	goto	l2758
 10637  0C1C  2C1E               	line	201
 10638                           	
 10639                           l784:	
 10640  0C1D                     	goto	l2758
 10641  0C1D  2C1E               	line	202
 10642                           	
 10643                           l782:	
 10644  0C1E                     	line	203
 10645                           	
 10646                           l2758:	
 10647  0C1E                     	movf	((___fladd@aexp)),w
 10648  0C1E  0843               	btfsc	status,2
 10649  0C1F  1903               	goto	u3501
 10650  0C20  2C22               	goto	u3500
 10651  0C21  2C23               u3501:
 10652  0C22                     	goto	l786
 10653  0C22  2C59               u3500:
 10654  0C23                     	line	204
 10655                           	
 10656                           l2760:	
 10657  0C23                     	movlw	01h
 10658  0C23  3001               	addwf	(___fladd@b),f
 10659  0C24  07AE               	movlw	0
 10660  0C25  3000               	skipnc
 10661  0C26  1803               movlw 1
 10662  0C27  3001               	addwf	(___fladd@b+1),f
 10663  0C28  07AF               	movlw	0
 10664  0C29  3000               	skipnc
 10665  0C2A  1803               movlw 1
 10666  0C2B  3001               	addwf	(___fladd@b+2),f
 10667  0C2C  07B0               	movlw	0
 10668  0C2D  3000               	skipnc
 10669  0C2E  1803               movlw 1
 10670  0C2F  3001               	addwf	(___fladd@b+3),f
 10671  0C30  07B1               	line	205
 10672                           	
 10673                           l2762:	
 10674  0C31                     	btfss	(___fladd@b+3),(24)&7
 10675  0C31  1C31               	goto	u3511
 10676  0C32  2C34               	goto	u3510
 10677  0C33  2C35               u3511:
 10678  0C34                     	goto	l786
 10679  0C34  2C59               u3510:
 10680  0C35                     	line	206
 10681                           	
 10682                           l2764:	
 10683  0C35                     	movf	(___fladd@b),w
 10684  0C35  082E               	movwf	(??___fladd+0)+0
 10685  0C36  00B6               	movf	(___fladd@b+1),w
 10686  0C37  082F               	movwf	((??___fladd+0)+0+1)
 10687  0C38  00B7               	movf	(___fladd@b+2),w
 10688  0C39  0830               	movwf	((??___fladd+0)+0+2)
 10689  0C3A  00B8               	movf	(___fladd@b+3),w
 10690  0C3B  0831               	movwf	((??___fladd+0)+0+3)
 10691  0C3C  00B9               	movlw	01h
 10692  0C3D  3001               	movwf	(??___fladd+4)+0
 10693  0C3E  00BA               u3525:
 10694  0C3F                     	rlf	(??___fladd+0)+3,w
 10695  0C3F  0D39               	rrf	(??___fladd+0)+3,f
 10696  0C40  0CB9               	rrf	(??___fladd+0)+2,f
 10697  0C41  0CB8               	rrf	(??___fladd+0)+1,f
 10698  0C42  0CB7               	rrf	(??___fladd+0)+0,f
 10699  0C43  0CB6               u3520:
 10700  0C44                     	decfsz	(??___fladd+4)+0,f
 10701  0C44  0BBA               	goto	u3525
 10702  0C45  2C3F               	movf	3+(??___fladd+0)+0,w
 10703  0C46  0839               	movwf	(___fladd@b+3)
 10704  0C47  00B1               	movf	2+(??___fladd+0)+0,w
 10705  0C48  0838               	movwf	(___fladd@b+2)
 10706  0C49  00B0               	movf	1+(??___fladd+0)+0,w
 10707  0C4A  0837               	movwf	(___fladd@b+1)
 10708  0C4B  00AF               	movf	0+(??___fladd+0)+0,w
 10709  0C4C  0836               	movwf	(___fladd@b)
 10710  0C4D  00AE               
 10711                           	line	207
 10712                           		incf	((___fladd@bexp)),w
 10713  0C4E  0A44               	btfsc	status,2
 10714  0C4F  1903               	goto	u3531
 10715  0C50  2C52               	goto	u3530
 10716  0C51  2C53               u3531:
 10717  0C52                     	goto	l786
 10718  0C52  2C59               u3530:
 10719  0C53                     	line	208
 10720                           	
 10721                           l2766:	
 10722  0C53                     	movlw	low(01h)
 10723  0C53  3001               	movwf	(??___fladd+0)+0
 10724  0C54  00B6               	movf	(??___fladd+0)+0,w
 10725  0C55  0836               	addwf	(___fladd@bexp),f
 10726  0C56  07C4               	goto	l786
 10727  0C57  2C59               	line	209
 10728                           	
 10729                           l788:	
 10730  0C58                     	goto	l786
 10731  0C58  2C59               	line	210
 10732                           	
 10733                           l787:	
 10734  0C59                     	line	211
 10735                           	
 10736                           l786:	
 10737  0C59                     	line	215
 10738                           		incf	((___fladd@bexp)),w
 10739  0C59  0A44               	btfsc	status,2
 10740  0C5A  1903               	goto	u3541
 10741  0C5B  2C5D               	goto	u3540
 10742  0C5C  2C5E               u3541:
 10743  0C5D                     	goto	l2770
 10744  0C5D  2C64               u3540:
 10745  0C5E                     	
 10746                           l2768:	
 10747  0C5E                     	movf	((___fladd@bexp)),w
 10748  0C5E  0844               	btfss	status,2
 10749  0C5F  1D03               	goto	u3551
 10750  0C60  2C62               	goto	u3550
 10751  0C61  2C63               u3551:
 10752  0C62                     	goto	l2776
 10753  0C62  2C74               u3550:
 10754  0C63                     	goto	l2770
 10755  0C63  2C64               	
 10756                           l791:	
 10757  0C64                     	line	216
 10758                           	
 10759                           l2770:	
 10760  0C64                     	movlw	high highword(0)
 10761  0C64  3000               	movwf	(___fladd@b+3)
 10762  0C65  00B1               	movlw	low highword(0)
 10763  0C66  3000               	movwf	(___fladd@b+2)
 10764  0C67  00B0               	movlw	high(0)
 10765  0C68  3000               	movwf	(___fladd@b+1)
 10766  0C69  00AF               	movlw	low(0)
 10767  0C6A  3000               	movwf	(___fladd@b)
 10768  0C6B  00AE               
 10769                           	line	218
 10770                           	
 10771                           l2772:	
 10772  0C6C                     	movf	((___fladd@bexp)),w
 10773  0C6C  0844               	btfss	status,2
 10774  0C6D  1D03               	goto	u3561
 10775  0C6E  2C70               	goto	u3560
 10776  0C6F  2C71               u3561:
 10777  0C70                     	goto	l2776
 10778  0C70  2C74               u3560:
 10779  0C71                     	line	219
 10780                           	
 10781                           l2774:	
 10782  0C71                     	clrf	(___fladd@signs)
 10783  0C71  01C2               	goto	l2776
 10784  0C72  2C74               	line	220
 10785                           	
 10786                           l792:	
 10787  0C73                     	goto	l2776
 10788  0C73  2C74               	line	221
 10789                           	
 10790                           l789:	
 10791  0C74                     	line	225
 10792                           	
 10793                           l2776:	
 10794  0C74                     	btfss	(___fladd@bexp),(0)&7
 10795  0C74  1C44               	goto	u3571
 10796  0C75  2C77               	goto	u3570
 10797  0C76  2C78               u3571:
 10798  0C77                     	goto	l2780
 10799  0C77  2C7A               u3570:
 10800  0C78                     	line	226
 10801                           	
 10802                           l2778:	
 10803  0C78                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 10804  0C78  17B0               	line	227
 10805                           	goto	l794
 10806  0C79  2C7E               	line	229
 10807                           	
 10808                           l793:	
 10809  0C7A                     	line	230
 10810                           	
 10811                           l2780:	
 10812  0C7A                     	movlw	low(07Fh)
 10813  0C7A  307F               	movwf	(??___fladd+0)+0
 10814  0C7B  00B6               	movf	(??___fladd+0)+0,w
 10815  0C7C  0836               	andwf	0+(___fladd@b)+02h,f
 10816  0C7D  05B0               	line	231
 10817                           	
 10818                           l794:	
 10819  0C7E                     	line	232
 10820                           	movf	(___fladd@bexp),w
 10821  0C7E  0844               	movwf	(??___fladd+0)+0
 10822  0C7F  00B6               	clrc
 10823  0C80  1003               	rrf	(??___fladd+0)+0,w
 10824  0C81  0C36               	movwf	(??___fladd+1)+0
 10825  0C82  00B7               	movf	(??___fladd+1)+0,w
 10826  0C83  0837               	movwf	0+(___fladd@b)+03h
 10827  0C84  00B1               	line	233
 10828                           	
 10829                           l2782:	
 10830  0C85                     	btfss	(___fladd@signs),(7)&7
 10831  0C85  1FC2               	goto	u3581
 10832  0C86  2C88               	goto	u3580
 10833  0C87  2C89               u3581:
 10834  0C88                     	goto	l795
 10835  0C88  2C8A               u3580:
 10836  0C89                     	line	234
 10837                           	
 10838                           l2784:	
 10839  0C89                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 10840  0C89  17B1               	line	235
 10841                           	
 10842                           l795:	
 10843  0C8A                     	line	236
 10844                           	line	237
 10845                           	
 10846                           l765:	
 10847  0C8A                     	return
 10848  0C8A  0008               	opt stack 0
 10849                           GLOBAL	__end_of___fladd
 10850                           	__end_of___fladd:
 10851  0C8B                     	signat	___fladd,8316
 10852                           	global	___awmod
 10853                           
 10854 ;; *************** function ___awmod *****************
 10855 ;; Defined at:
 10856 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;  divisor         2    3[COMMON] int 
 10859 ;;  dividend        2    5[COMMON] int 
 10860 ;; Auto vars:     Size  Location     Type
 10861 ;;  sign            1    1[BANK0 ] unsigned char 
 10862 ;;  counter         1    0[BANK0 ] unsigned char 
 10863 ;; Return value:  Size  Location     Type
 10864 ;;                  2    3[COMMON] int 
 10865 ;; Registers used:
 10866 ;;		wreg, status,2, status,0
 10867 ;; Tracked objects:
 10868 ;;		On entry : 0/0
 10869 ;;		On exit  : 0/0
 10870 ;;		Unchanged: 0/0
 10871 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10872 ;;      Params:         4       0       0       0       0
 10873 ;;      Locals:         0       2       0       0       0
 10874 ;;      Temps:          1       0       0       0       0
 10875 ;;      Totals:         5       2       0       0       0
 10876 ;;Total ram usage:        7 bytes
 10877 ;; Hardware stack levels used:    1
 10878 ;; Hardware stack levels required when called:    2
 10879 ;; This function calls:
 10880 ;;		Nothing
 10881 ;; This function is called by:
 10882 ;;		_main
 10883 ;; This function uses a non-reentrant model
 10884 ;;
 10885                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
 10886                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 10887                           	line	5
 10888                           global __ptext22
 10889                           __ptext22:	;psect for function ___awmod
 10890  161D                     psect	text22
 10891                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 10892                           	line	5
 10893                           	global	__size_of___awmod
 10894                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 10895  0065                     	
 10896                           ___awmod:	
 10897  161D                     ;incstack = 0
 10898                           	opt	stack 5
 10899                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 10900                           	line	12
 10901                           	
 10902                           l3618:	
 10903  161D                     	bcf	status, 5	;RP0=0, select bank0
 10904  161D  1283               	bcf	status, 6	;RP1=0, select bank0
 10905  161E  1303               	clrf	(___awmod@sign)
 10906  161F  01A1               	line	13
 10907                           	
 10908                           l3620:	
 10909  1620                     	btfss	(___awmod@dividend+1),7
 10910  1620  1FF6               	goto	u5141
 10911  1621  2E23               	goto	u5140
 10912  1622  2E24               u5141:
 10913  1623                     	goto	l3626
 10914  1623  2E2C               u5140:
 10915  1624                     	line	14
 10916                           	
 10917                           l3622:	
 10918  1624                     	comf	(___awmod@dividend),f
 10919  1624  09F5               	comf	(___awmod@dividend+1),f
 10920  1625  09F6               	incf	(___awmod@dividend),f
 10921  1626  0AF5               	skipnz
 10922  1627  1903               	incf	(___awmod@dividend+1),f
 10923  1628  0AF6               	line	15
 10924                           	
 10925                           l3624:	
 10926  1629                     	clrf	(___awmod@sign)
 10927  1629  01A1               	incf	(___awmod@sign),f
 10928  162A  0AA1               	goto	l3626
 10929  162B  2E2C               	line	16
 10930                           	
 10931                           l615:	
 10932  162C                     	line	17
 10933                           	
 10934                           l3626:	
 10935  162C                     	btfss	(___awmod@divisor+1),7
 10936  162C  1FF4               	goto	u5151
 10937  162D  2E2F               	goto	u5150
 10938  162E  2E30               u5151:
 10939  162F                     	goto	l3630
 10940  162F  2E36               u5150:
 10941  1630                     	line	18
 10942                           	
 10943                           l3628:	
 10944  1630                     	comf	(___awmod@divisor),f
 10945  1630  09F3               	comf	(___awmod@divisor+1),f
 10946  1631  09F4               	incf	(___awmod@divisor),f
 10947  1632  0AF3               	skipnz
 10948  1633  1903               	incf	(___awmod@divisor+1),f
 10949  1634  0AF4               	goto	l3630
 10950  1635  2E36               	
 10951                           l616:	
 10952  1636                     	line	19
 10953                           	
 10954                           l3630:	
 10955  1636                     	movf	((___awmod@divisor)),w
 10956  1636  0873               iorwf	((___awmod@divisor+1)),w
 10957  1637  0474               	btfsc	status,2
 10958  1638  1903               	goto	u5161
 10959  1639  2E3B               	goto	u5160
 10960  163A  2E3C               u5161:
 10961  163B                     	goto	l3648
 10962  163B  2E71               u5160:
 10963  163C                     	line	20
 10964                           	
 10965                           l3632:	
 10966  163C                     	clrf	(___awmod@counter)
 10967  163C  01A0               	incf	(___awmod@counter),f
 10968  163D  0AA0               	line	21
 10969                           	goto	l3638
 10970  163E  2E4B               	
 10971                           l619:	
 10972  163F                     	line	22
 10973                           	
 10974                           l3634:	
 10975  163F                     	movlw	01h
 10976  163F  3001               	
 10977                           u5175:
 10978  1640                     	clrc
 10979  1640  1003               	rlf	(___awmod@divisor),f
 10980  1641  0DF3               	rlf	(___awmod@divisor+1),f
 10981  1642  0DF4               	addlw	-1
 10982  1643  3EFF               	skipz
 10983  1644  1D03               	goto	u5175
 10984  1645  2E40               	line	23
 10985                           	
 10986                           l3636:	
 10987  1646                     	movlw	low(01h)
 10988  1646  3001               	movwf	(??___awmod+0)+0
 10989  1647  00F7               	movf	(??___awmod+0)+0,w
 10990  1648  0877               	addwf	(___awmod@counter),f
 10991  1649  07A0               	goto	l3638
 10992  164A  2E4B               	line	24
 10993                           	
 10994                           l618:	
 10995  164B                     	line	21
 10996                           	
 10997                           l3638:	
 10998  164B                     	btfss	(___awmod@divisor+1),(15)&7
 10999  164B  1FF4               	goto	u5181
 11000  164C  2E4E               	goto	u5180
 11001  164D  2E4F               u5181:
 11002  164E                     	goto	l3634
 11003  164E  2E3F               u5180:
 11004  164F                     	goto	l3640
 11005  164F  2E51               	
 11006                           l620:	
 11007  1650                     	goto	l3640
 11008  1650  2E51               	line	25
 11009                           	
 11010                           l621:	
 11011  1651                     	line	26
 11012                           	
 11013                           l3640:	
 11014  1651                     	movf	(___awmod@divisor+1),w
 11015  1651  0874               	subwf	(___awmod@dividend+1),w
 11016  1652  0276               	skipz
 11017  1653  1D03               	goto	u5195
 11018  1654  2E57               	movf	(___awmod@divisor),w
 11019  1655  0873               	subwf	(___awmod@dividend),w
 11020  1656  0275               u5195:
 11021  1657                     	skipc
 11022  1657  1C03               	goto	u5191
 11023  1658  2E5A               	goto	u5190
 11024  1659  2E5B               u5191:
 11025  165A                     	goto	l3644
 11026  165A  2E62               u5190:
 11027  165B                     	line	27
 11028                           	
 11029                           l3642:	
 11030  165B                     	movf	(___awmod@divisor),w
 11031  165B  0873               	subwf	(___awmod@dividend),f
 11032  165C  02F5               	movf	(___awmod@divisor+1),w
 11033  165D  0874               	skipc
 11034  165E  1C03               	decf	(___awmod@dividend+1),f
 11035  165F  03F6               	subwf	(___awmod@dividend+1),f
 11036  1660  02F6               	goto	l3644
 11037  1661  2E62               	
 11038                           l622:	
 11039  1662                     	line	28
 11040                           	
 11041                           l3644:	
 11042  1662                     	movlw	01h
 11043  1662  3001               	
 11044                           u5205:
 11045  1663                     	clrc
 11046  1663  1003               	rrf	(___awmod@divisor+1),f
 11047  1664  0CF4               	rrf	(___awmod@divisor),f
 11048  1665  0CF3               	addlw	-1
 11049  1666  3EFF               	skipz
 11050  1667  1D03               	goto	u5205
 11051  1668  2E63               	line	29
 11052                           	
 11053                           l3646:	
 11054  1669                     	movlw	01h
 11055  1669  3001               	subwf	(___awmod@counter),f
 11056  166A  02A0               	btfss	status,2
 11057  166B  1D03               	goto	u5211
 11058  166C  2E6E               	goto	u5210
 11059  166D  2E6F               u5211:
 11060  166E                     	goto	l3640
 11061  166E  2E51               u5210:
 11062  166F                     	goto	l3648
 11063  166F  2E71               	
 11064                           l623:	
 11065  1670                     	goto	l3648
 11066  1670  2E71               	line	30
 11067                           	
 11068                           l617:	
 11069  1671                     	line	31
 11070                           	
 11071                           l3648:	
 11072  1671                     	movf	((___awmod@sign)),w
 11073  1671  0821               	btfsc	status,2
 11074  1672  1903               	goto	u5221
 11075  1673  2E75               	goto	u5220
 11076  1674  2E76               u5221:
 11077  1675                     	goto	l3652
 11078  1675  2E7C               u5220:
 11079  1676                     	line	32
 11080                           	
 11081                           l3650:	
 11082  1676                     	comf	(___awmod@dividend),f
 11083  1676  09F5               	comf	(___awmod@dividend+1),f
 11084  1677  09F6               	incf	(___awmod@dividend),f
 11085  1678  0AF5               	skipnz
 11086  1679  1903               	incf	(___awmod@dividend+1),f
 11087  167A  0AF6               	goto	l3652
 11088  167B  2E7C               	
 11089                           l624:	
 11090  167C                     	line	33
 11091                           	
 11092                           l3652:	
 11093  167C                     	movf	(___awmod@dividend+1),w
 11094  167C  0876               	movwf	(?___awmod+1)
 11095  167D  00F4               	movf	(___awmod@dividend),w
 11096  167E  0875               	movwf	(?___awmod)
 11097  167F  00F3               	goto	l625
 11098  1680  2E81               	
 11099                           l3654:	
 11100  1681                     	line	34
 11101                           	
 11102                           l625:	
 11103  1681                     	return
 11104  1681  0008               	opt stack 0
 11105                           GLOBAL	__end_of___awmod
 11106                           	__end_of___awmod:
 11107  1682                     	signat	___awmod,8314
 11108                           	global	___awdiv
 11109                           
 11110 ;; *************** function ___awdiv *****************
 11111 ;; Defined at:
 11112 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11113 ;; Parameters:    Size  Location     Type
 11114 ;;  divisor         2    2[BANK0 ] int 
 11115 ;;  dividend        2    4[BANK0 ] int 
 11116 ;; Auto vars:     Size  Location     Type
 11117 ;;  quotient        2    8[BANK0 ] int 
 11118 ;;  sign            1    7[BANK0 ] unsigned char 
 11119 ;;  counter         1    6[BANK0 ] unsigned char 
 11120 ;; Return value:  Size  Location     Type
 11121 ;;                  2    2[BANK0 ] int 
 11122 ;; Registers used:
 11123 ;;		wreg, status,2, status,0
 11124 ;; Tracked objects:
 11125 ;;		On entry : 0/0
 11126 ;;		On exit  : 0/0
 11127 ;;		Unchanged: 0/0
 11128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11129 ;;      Params:         0       4       0       0       0
 11130 ;;      Locals:         0       4       0       0       0
 11131 ;;      Temps:          1       0       0       0       0
 11132 ;;      Totals:         1       8       0       0       0
 11133 ;;Total ram usage:        9 bytes
 11134 ;; Hardware stack levels used:    1
 11135 ;; Hardware stack levels required when called:    2
 11136 ;; This function calls:
 11137 ;;		Nothing
 11138 ;; This function is called by:
 11139 ;;		_main
 11140 ;; This function uses a non-reentrant model
 11141 ;;
 11142                           psect	text23,local,class=CODE,delta=2,merge=1,group=1
 11143                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11144                           	line	5
 11145                           global __ptext23
 11146                           __ptext23:	;psect for function ___awdiv
 11147  16F1                     psect	text23
 11148                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11149                           	line	5
 11150                           	global	__size_of___awdiv
 11151                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 11152  0073                     	
 11153                           ___awdiv:	
 11154  16F1                     ;incstack = 0
 11155                           	opt	stack 5
 11156                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11157                           	line	13
 11158                           	
 11159                           l2466:	
 11160  16F1                     	bcf	status, 5	;RP0=0, select bank0
 11161  16F1  1283               	bcf	status, 6	;RP1=0, select bank0
 11162  16F2  1303               	clrf	(___awdiv@sign)
 11163  16F3  01A7               	line	14
 11164                           	
 11165                           l2468:	
 11166  16F4                     	btfss	(___awdiv@divisor+1),7
 11167  16F4  1FA3               	goto	u2831
 11168  16F5  2EF7               	goto	u2830
 11169  16F6  2EF8               u2831:
 11170  16F7                     	goto	l2474
 11171  16F7  2F00               u2830:
 11172  16F8                     	line	15
 11173                           	
 11174                           l2470:	
 11175  16F8                     	comf	(___awdiv@divisor),f
 11176  16F8  09A2               	comf	(___awdiv@divisor+1),f
 11177  16F9  09A3               	incf	(___awdiv@divisor),f
 11178  16FA  0AA2               	skipnz
 11179  16FB  1903               	incf	(___awdiv@divisor+1),f
 11180  16FC  0AA3               	line	16
 11181                           	
 11182                           l2472:	
 11183  16FD                     	clrf	(___awdiv@sign)
 11184  16FD  01A7               	incf	(___awdiv@sign),f
 11185  16FE  0AA7               	goto	l2474
 11186  16FF  2F00               	line	17
 11187                           	
 11188                           l602:	
 11189  1700                     	line	18
 11190                           	
 11191                           l2474:	
 11192  1700                     	btfss	(___awdiv@dividend+1),7
 11193  1700  1FA5               	goto	u2841
 11194  1701  2F03               	goto	u2840
 11195  1702  2F04               u2841:
 11196  1703                     	goto	l2480
 11197  1703  2F0E               u2840:
 11198  1704                     	line	19
 11199                           	
 11200                           l2476:	
 11201  1704                     	comf	(___awdiv@dividend),f
 11202  1704  09A4               	comf	(___awdiv@dividend+1),f
 11203  1705  09A5               	incf	(___awdiv@dividend),f
 11204  1706  0AA4               	skipnz
 11205  1707  1903               	incf	(___awdiv@dividend+1),f
 11206  1708  0AA5               	line	20
 11207                           	
 11208                           l2478:	
 11209  1709                     	movlw	low(01h)
 11210  1709  3001               	movwf	(??___awdiv+0)+0
 11211  170A  00F7               	movf	(??___awdiv+0)+0,w
 11212  170B  0877               	xorwf	(___awdiv@sign),f
 11213  170C  06A7               	goto	l2480
 11214  170D  2F0E               	line	21
 11215                           	
 11216                           l603:	
 11217  170E                     	line	22
 11218                           	
 11219                           l2480:	
 11220  170E                     	clrf	(___awdiv@quotient)
 11221  170E  01A8               	clrf	(___awdiv@quotient+1)
 11222  170F  01A9               	line	23
 11223                           	
 11224                           l2482:	
 11225  1710                     	movf	((___awdiv@divisor)),w
 11226  1710  0822               iorwf	((___awdiv@divisor+1)),w
 11227  1711  0423               	btfsc	status,2
 11228  1712  1903               	goto	u2851
 11229  1713  2F15               	goto	u2850
 11230  1714  2F16               u2851:
 11231  1715                     	goto	l2502
 11232  1715  2F53               u2850:
 11233  1716                     	line	24
 11234                           	
 11235                           l2484:	
 11236  1716                     	clrf	(___awdiv@counter)
 11237  1716  01A6               	incf	(___awdiv@counter),f
 11238  1717  0AA6               	line	25
 11239                           	goto	l2490
 11240  1718  2F25               	
 11241                           l606:	
 11242  1719                     	line	26
 11243                           	
 11244                           l2486:	
 11245  1719                     	movlw	01h
 11246  1719  3001               	
 11247                           u2865:
 11248  171A                     	clrc
 11249  171A  1003               	rlf	(___awdiv@divisor),f
 11250  171B  0DA2               	rlf	(___awdiv@divisor+1),f
 11251  171C  0DA3               	addlw	-1
 11252  171D  3EFF               	skipz
 11253  171E  1D03               	goto	u2865
 11254  171F  2F1A               	line	27
 11255                           	
 11256                           l2488:	
 11257  1720                     	movlw	low(01h)
 11258  1720  3001               	movwf	(??___awdiv+0)+0
 11259  1721  00F7               	movf	(??___awdiv+0)+0,w
 11260  1722  0877               	addwf	(___awdiv@counter),f
 11261  1723  07A6               	goto	l2490
 11262  1724  2F25               	line	28
 11263                           	
 11264                           l605:	
 11265  1725                     	line	25
 11266                           	
 11267                           l2490:	
 11268  1725                     	btfss	(___awdiv@divisor+1),(15)&7
 11269  1725  1FA3               	goto	u2871
 11270  1726  2F28               	goto	u2870
 11271  1727  2F29               u2871:
 11272  1728                     	goto	l2486
 11273  1728  2F19               u2870:
 11274  1729                     	goto	l2492
 11275  1729  2F2B               	
 11276                           l607:	
 11277  172A                     	goto	l2492
 11278  172A  2F2B               	line	29
 11279                           	
 11280                           l608:	
 11281  172B                     	line	30
 11282                           	
 11283                           l2492:	
 11284  172B                     	movlw	01h
 11285  172B  3001               	
 11286                           u2885:
 11287  172C                     	clrc
 11288  172C  1003               	rlf	(___awdiv@quotient),f
 11289  172D  0DA8               	rlf	(___awdiv@quotient+1),f
 11290  172E  0DA9               	addlw	-1
 11291  172F  3EFF               	skipz
 11292  1730  1D03               	goto	u2885
 11293  1731  2F2C               	line	31
 11294                           	movf	(___awdiv@divisor+1),w
 11295  1732  0823               	subwf	(___awdiv@dividend+1),w
 11296  1733  0225               	skipz
 11297  1734  1D03               	goto	u2895
 11298  1735  2F38               	movf	(___awdiv@divisor),w
 11299  1736  0822               	subwf	(___awdiv@dividend),w
 11300  1737  0224               u2895:
 11301  1738                     	skipc
 11302  1738  1C03               	goto	u2891
 11303  1739  2F3B               	goto	u2890
 11304  173A  2F3C               u2891:
 11305  173B                     	goto	l2498
 11306  173B  2F44               u2890:
 11307  173C                     	line	32
 11308                           	
 11309                           l2494:	
 11310  173C                     	movf	(___awdiv@divisor),w
 11311  173C  0822               	subwf	(___awdiv@dividend),f
 11312  173D  02A4               	movf	(___awdiv@divisor+1),w
 11313  173E  0823               	skipc
 11314  173F  1C03               	decf	(___awdiv@dividend+1),f
 11315  1740  03A5               	subwf	(___awdiv@dividend+1),f
 11316  1741  02A5               	line	33
 11317                           	
 11318                           l2496:	
 11319  1742                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 11320  1742  1428               	goto	l2498
 11321  1743  2F44               	line	34
 11322                           	
 11323                           l609:	
 11324  1744                     	line	35
 11325                           	
 11326                           l2498:	
 11327  1744                     	movlw	01h
 11328  1744  3001               	
 11329                           u2905:
 11330  1745                     	clrc
 11331  1745  1003               	rrf	(___awdiv@divisor+1),f
 11332  1746  0CA3               	rrf	(___awdiv@divisor),f
 11333  1747  0CA2               	addlw	-1
 11334  1748  3EFF               	skipz
 11335  1749  1D03               	goto	u2905
 11336  174A  2F45               	line	36
 11337                           	
 11338                           l2500:	
 11339  174B                     	movlw	01h
 11340  174B  3001               	subwf	(___awdiv@counter),f
 11341  174C  02A6               	btfss	status,2
 11342  174D  1D03               	goto	u2911
 11343  174E  2F50               	goto	u2910
 11344  174F  2F51               u2911:
 11345  1750                     	goto	l2492
 11346  1750  2F2B               u2910:
 11347  1751                     	goto	l2502
 11348  1751  2F53               	
 11349                           l610:	
 11350  1752                     	goto	l2502
 11351  1752  2F53               	line	37
 11352                           	
 11353                           l604:	
 11354  1753                     	line	38
 11355                           	
 11356                           l2502:	
 11357  1753                     	movf	((___awdiv@sign)),w
 11358  1753  0827               	btfsc	status,2
 11359  1754  1903               	goto	u2921
 11360  1755  2F57               	goto	u2920
 11361  1756  2F58               u2921:
 11362  1757                     	goto	l2506
 11363  1757  2F5E               u2920:
 11364  1758                     	line	39
 11365                           	
 11366                           l2504:	
 11367  1758                     	comf	(___awdiv@quotient),f
 11368  1758  09A8               	comf	(___awdiv@quotient+1),f
 11369  1759  09A9               	incf	(___awdiv@quotient),f
 11370  175A  0AA8               	skipnz
 11371  175B  1903               	incf	(___awdiv@quotient+1),f
 11372  175C  0AA9               	goto	l2506
 11373  175D  2F5E               	
 11374                           l611:	
 11375  175E                     	line	40
 11376                           	
 11377                           l2506:	
 11378  175E                     	movf	(___awdiv@quotient+1),w
 11379  175E  0829               	movwf	(?___awdiv+1)
 11380  175F  00A3               	movf	(___awdiv@quotient),w
 11381  1760  0828               	movwf	(?___awdiv)
 11382  1761  00A2               	goto	l612
 11383  1762  2F63               	
 11384                           l2508:	
 11385  1763                     	line	41
 11386                           	
 11387                           l612:	
 11388  1763                     	return
 11389  1763  0008               	opt stack 0
 11390                           GLOBAL	__end_of___awdiv
 11391                           	__end_of___awdiv:
 11392  1764                     	signat	___awdiv,8314
 11393                           	global	_I2C_Master_Write
 11394                           
 11395 ;; *************** function _I2C_Master_Write *****************
 11396 ;; Defined at:
 11397 ;;		line 65 in file "I2C.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  d               2    3[COMMON] unsigned int 
 11400 ;; Auto vars:     Size  Location     Type
 11401 ;;		None
 11402 ;; Return value:  Size  Location     Type
 11403 ;;                  1    wreg      void 
 11404 ;; Registers used:
 11405 ;;		wreg, status,2, status,0, pclath, cstack
 11406 ;; Tracked objects:
 11407 ;;		On entry : 0/0
 11408 ;;		On exit  : 0/0
 11409 ;;		Unchanged: 0/0
 11410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11411 ;;      Params:         2       0       0       0       0
 11412 ;;      Locals:         0       0       0       0       0
 11413 ;;      Temps:          0       0       0       0       0
 11414 ;;      Totals:         2       0       0       0       0
 11415 ;;Total ram usage:        2 bytes
 11416 ;; Hardware stack levels used:    1
 11417 ;; Hardware stack levels required when called:    3
 11418 ;; This function calls:
 11419 ;;		_I2C_Master_Wait
 11420 ;; This function is called by:
 11421 ;;		_main
 11422 ;; This function uses a non-reentrant model
 11423 ;;
 11424                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
 11425                           	file	"I2C.c"
 11426                           	line	65
 11427                           global __ptext24
 11428                           __ptext24:	;psect for function _I2C_Master_Write
 11429  138C                     psect	text24
 11430                           	file	"I2C.c"
 11431                           	line	65
 11432                           	global	__size_of_I2C_Master_Write
 11433                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
 11434  000A                     	
 11435                           _I2C_Master_Write:	
 11436  138C                     ;incstack = 0
 11437                           	opt	stack 4
 11438                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 11439                           	line	67
 11440                           	
 11441                           l3556:	
 11442  138C                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
 11443                           	fcall	_I2C_Master_Wait
 11444  138C  160A  118A  2396  160A  118A  	line	68
 11445                           	
 11446                           l3558:	
 11447  1391                     ;I2C.c: 68:     SSPBUF = d;
 11448                           	movf	(I2C_Master_Write@d),w
 11449  1391  0873               	bcf	status, 5	;RP0=0, select bank0
 11450  1392  1283               	bcf	status, 6	;RP1=0, select bank0
 11451  1393  1303               	movwf	(19)	;volatile
 11452  1394  0093               	line	69
 11453                           	
 11454                           l47:	
 11455  1395                     	return
 11456  1395  0008               	opt stack 0
 11457                           GLOBAL	__end_of_I2C_Master_Write
 11458                           	__end_of_I2C_Master_Write:
 11459  1396                     	signat	_I2C_Master_Write,4217
 11460                           	global	_I2C_Master_Stop
 11461                           
 11462 ;; *************** function _I2C_Master_Stop *****************
 11463 ;; Defined at:
 11464 ;;		line 55 in file "I2C.c"
 11465 ;; Parameters:    Size  Location     Type
 11466 ;;		None
 11467 ;; Auto vars:     Size  Location     Type
 11468 ;;		None
 11469 ;; Return value:  Size  Location     Type
 11470 ;;                  1    wreg      void 
 11471 ;; Registers used:
 11472 ;;		wreg, status,2, status,0, pclath, cstack
 11473 ;; Tracked objects:
 11474 ;;		On entry : 0/0
 11475 ;;		On exit  : 0/0
 11476 ;;		Unchanged: 0/0
 11477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11478 ;;      Params:         0       0       0       0       0
 11479 ;;      Locals:         0       0       0       0       0
 11480 ;;      Temps:          0       0       0       0       0
 11481 ;;      Totals:         0       0       0       0       0
 11482 ;;Total ram usage:        0 bytes
 11483 ;; Hardware stack levels used:    1
 11484 ;; Hardware stack levels required when called:    3
 11485 ;; This function calls:
 11486 ;;		_I2C_Master_Wait
 11487 ;; This function is called by:
 11488 ;;		_main
 11489 ;; This function uses a non-reentrant model
 11490 ;;
 11491                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
 11492                           	line	55
 11493                           global __ptext25
 11494                           __ptext25:	;psect for function _I2C_Master_Stop
 11495  0800                     psect	text25
 11496                           	file	"I2C.c"
 11497                           	line	55
 11498                           	global	__size_of_I2C_Master_Stop
 11499                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
 11500  0009                     	
 11501                           _I2C_Master_Stop:	
 11502  0800                     ;incstack = 0
 11503                           	opt	stack 4
 11504                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 11505                           	line	57
 11506                           	
 11507                           l3552:	
 11508  0800                     ;I2C.c: 57:     I2C_Master_Wait();
 11509                           	fcall	_I2C_Master_Wait
 11510  0800  160A  118A  2396  120A  158A  	line	58
 11511                           	
 11512                           l3554:	
 11513  0805                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 11514                           	bsf	status, 5	;RP0=1, select bank1
 11515  0805  1683               	bcf	status, 6	;RP1=0, select bank1
 11516  0806  1303               	bsf	(145)^080h,2	;volatile
 11517  0807  1511               	line	59
 11518                           	
 11519                           l44:	
 11520  0808                     	return
 11521  0808  0008               	opt stack 0
 11522                           GLOBAL	__end_of_I2C_Master_Stop
 11523                           	__end_of_I2C_Master_Stop:
 11524  0809                     	signat	_I2C_Master_Stop,89
 11525                           	global	_I2C_Master_Start
 11526                           
 11527 ;; *************** function _I2C_Master_Start *****************
 11528 ;; Defined at:
 11529 ;;		line 39 in file "I2C.c"
 11530 ;; Parameters:    Size  Location     Type
 11531 ;;		None
 11532 ;; Auto vars:     Size  Location     Type
 11533 ;;		None
 11534 ;; Return value:  Size  Location     Type
 11535 ;;                  1    wreg      void 
 11536 ;; Registers used:
 11537 ;;		wreg, status,2, status,0, pclath, cstack
 11538 ;; Tracked objects:
 11539 ;;		On entry : 0/0
 11540 ;;		On exit  : 0/0
 11541 ;;		Unchanged: 0/0
 11542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11543 ;;      Params:         0       0       0       0       0
 11544 ;;      Locals:         0       0       0       0       0
 11545 ;;      Temps:          0       0       0       0       0
 11546 ;;      Totals:         0       0       0       0       0
 11547 ;;Total ram usage:        0 bytes
 11548 ;; Hardware stack levels used:    1
 11549 ;; Hardware stack levels required when called:    3
 11550 ;; This function calls:
 11551 ;;		_I2C_Master_Wait
 11552 ;; This function is called by:
 11553 ;;		_main
 11554 ;; This function uses a non-reentrant model
 11555 ;;
 11556                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
 11557                           	line	39
 11558                           global __ptext26
 11559                           __ptext26:	;psect for function _I2C_Master_Start
 11560  1383                     psect	text26
 11561                           	file	"I2C.c"
 11562                           	line	39
 11563                           	global	__size_of_I2C_Master_Start
 11564                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
 11565  0009                     	
 11566                           _I2C_Master_Start:	
 11567  1383                     ;incstack = 0
 11568                           	opt	stack 4
 11569                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 11570                           	line	41
 11571                           	
 11572                           l3548:	
 11573  1383                     ;I2C.c: 41:     I2C_Master_Wait();
 11574                           	fcall	_I2C_Master_Wait
 11575  1383  160A  118A  2396  160A  118A  	line	42
 11576                           	
 11577                           l3550:	
 11578  1388                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 11579                           	bsf	status, 5	;RP0=1, select bank1
 11580  1388  1683               	bcf	status, 6	;RP1=0, select bank1
 11581  1389  1303               	bsf	(145)^080h,0	;volatile
 11582  138A  1411               	line	43
 11583                           	
 11584                           l38:	
 11585  138B                     	return
 11586  138B  0008               	opt stack 0
 11587                           GLOBAL	__end_of_I2C_Master_Start
 11588                           	__end_of_I2C_Master_Start:
 11589  138C                     	signat	_I2C_Master_Start,89
 11590                           	global	_I2C_Master_Read
 11591                           
 11592 ;; *************** function _I2C_Master_Read *****************
 11593 ;; Defined at:
 11594 ;;		line 74 in file "I2C.c"
 11595 ;; Parameters:    Size  Location     Type
 11596 ;;  a               2    3[COMMON] unsigned short 
 11597 ;; Auto vars:     Size  Location     Type
 11598 ;;  temp            2    0[BANK0 ] unsigned short 
 11599 ;; Return value:  Size  Location     Type
 11600 ;;                  2    3[COMMON] unsigned short 
 11601 ;; Registers used:
 11602 ;;		wreg, status,2, status,0, pclath, cstack
 11603 ;; Tracked objects:
 11604 ;;		On entry : 0/0
 11605 ;;		On exit  : 0/0
 11606 ;;		Unchanged: 0/0
 11607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11608 ;;      Params:         2       0       0       0       0
 11609 ;;      Locals:         0       2       0       0       0
 11610 ;;      Temps:          2       0       0       0       0
 11611 ;;      Totals:         4       2       0       0       0
 11612 ;;Total ram usage:        6 bytes
 11613 ;; Hardware stack levels used:    1
 11614 ;; Hardware stack levels required when called:    3
 11615 ;; This function calls:
 11616 ;;		_I2C_Master_Wait
 11617 ;; This function is called by:
 11618 ;;		_main
 11619 ;; This function uses a non-reentrant model
 11620 ;;
 11621                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 11622                           	line	74
 11623                           global __ptext27
 11624                           __ptext27:	;psect for function _I2C_Master_Read
 11625  14A0                     psect	text27
 11626                           	file	"I2C.c"
 11627                           	line	74
 11628                           	global	__size_of_I2C_Master_Read
 11629                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
 11630  0031                     	
 11631                           _I2C_Master_Read:	
 11632  14A0                     ;incstack = 0
 11633                           	opt	stack 4
 11634                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 11635                           	line	77
 11636                           	
 11637                           l3560:	
 11638  14A0                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
 11639                           	fcall	_I2C_Master_Wait
 11640  14A0  160A  118A  2396  160A  118A  	line	78
 11641                           	
 11642                           l3562:	
 11643  14A5                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
 11644                           	bsf	status, 5	;RP0=1, select bank1
 11645  14A5  1683               	bcf	status, 6	;RP1=0, select bank1
 11646  14A6  1303               	bsf	(145)^080h,3	;volatile
 11647  14A7  1591               	line	79
 11648                           ;I2C.c: 79:     I2C_Master_Wait();
 11649                           	fcall	_I2C_Master_Wait
 11650  14A8  160A  118A  2396  160A  118A  	line	80
 11651                           	
 11652                           l3564:	
 11653  14AD                     ;I2C.c: 80:     temp = SSPBUF;
 11654                           	bcf	status, 5	;RP0=0, select bank0
 11655  14AD  1283               	bcf	status, 6	;RP1=0, select bank0
 11656  14AE  1303               	movf	(19),w	;volatile
 11657  14AF  0813               	movwf	(??_I2C_Master_Read+0)+0
 11658  14B0  00F5               	clrf	(??_I2C_Master_Read+0)+0+1
 11659  14B1  01F6               	movf	0+(??_I2C_Master_Read+0)+0,w
 11660  14B2  0875               	movwf	(I2C_Master_Read@temp)
 11661  14B3  00A0               	movf	1+(??_I2C_Master_Read+0)+0,w
 11662  14B4  0876               	movwf	(I2C_Master_Read@temp+1)
 11663  14B5  00A1               	line	81
 11664                           	
 11665                           l3566:	
 11666  14B6                     ;I2C.c: 81:     I2C_Master_Wait();
 11667                           	fcall	_I2C_Master_Wait
 11668  14B6  160A  118A  2396  160A  118A  	line	82
 11669                           	
 11670                           l3568:	
 11671  14BB                     ;I2C.c: 82:     if(a == 1){
 11672                           		decf	((I2C_Master_Read@a)),w
 11673  14BB  0373               iorwf	((I2C_Master_Read@a+1)),w
 11674  14BC  0474               	btfss	status,2
 11675  14BD  1D03               	goto	u5081
 11676  14BE  2CC0               	goto	u5080
 11677  14BF  2CC1               u5081:
 11678  14C0                     	goto	l50
 11679  14C0  2CC5               u5080:
 11680  14C1                     	line	83
 11681                           	
 11682                           l3570:	
 11683  14C1                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
 11684                           	bsf	status, 5	;RP0=1, select bank1
 11685  14C1  1683               	bcf	status, 6	;RP1=0, select bank1
 11686  14C2  1303               	bcf	(145)^080h,5	;volatile
 11687  14C3  1291               	line	84
 11688                           ;I2C.c: 84:     }else{
 11689                           	goto	l51
 11690  14C4  2CC8               	
 11691                           l50:	
 11692  14C5                     	line	85
 11693                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
 11694                           	bsf	status, 5	;RP0=1, select bank1
 11695  14C5  1683               	bcf	status, 6	;RP1=0, select bank1
 11696  14C6  1303               	bsf	(145)^080h,5	;volatile
 11697  14C7  1691               	line	86
 11698                           ;I2C.c: 86:     }
 11699                           	
 11700                           l51:	
 11701  14C8                     	line	87
 11702                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
 11703                           	bsf	(145)^080h,4	;volatile
 11704  14C8  1611               	line	88
 11705                           	
 11706                           l3572:	
 11707  14C9                     ;I2C.c: 88:     return temp;
 11708                           	bcf	status, 5	;RP0=0, select bank0
 11709  14C9  1283               	bcf	status, 6	;RP1=0, select bank0
 11710  14CA  1303               	movf	(I2C_Master_Read@temp+1),w
 11711  14CB  0821               	movwf	(?_I2C_Master_Read+1)
 11712  14CC  00F4               	movf	(I2C_Master_Read@temp),w
 11713  14CD  0820               	movwf	(?_I2C_Master_Read)
 11714  14CE  00F3               	goto	l52
 11715  14CF  2CD0               	
 11716                           l3574:	
 11717  14D0                     	line	89
 11718                           	
 11719                           l52:	
 11720  14D0                     	return
 11721  14D0  0008               	opt stack 0
 11722                           GLOBAL	__end_of_I2C_Master_Read
 11723                           	__end_of_I2C_Master_Read:
 11724  14D1                     	signat	_I2C_Master_Read,4218
 11725                           	global	_I2C_Master_Wait
 11726                           
 11727 ;; *************** function _I2C_Master_Wait *****************
 11728 ;; Defined at:
 11729 ;;		line 32 in file "I2C.c"
 11730 ;; Parameters:    Size  Location     Type
 11731 ;;		None
 11732 ;; Auto vars:     Size  Location     Type
 11733 ;;		None
 11734 ;; Return value:  Size  Location     Type
 11735 ;;                  1    wreg      void 
 11736 ;; Registers used:
 11737 ;;		wreg, status,2
 11738 ;; Tracked objects:
 11739 ;;		On entry : 0/0
 11740 ;;		On exit  : 0/0
 11741 ;;		Unchanged: 0/0
 11742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11743 ;;      Params:         0       0       0       0       0
 11744 ;;      Locals:         0       0       0       0       0
 11745 ;;      Temps:          0       0       0       0       0
 11746 ;;      Totals:         0       0       0       0       0
 11747 ;;Total ram usage:        0 bytes
 11748 ;; Hardware stack levels used:    1
 11749 ;; Hardware stack levels required when called:    2
 11750 ;; This function calls:
 11751 ;;		Nothing
 11752 ;; This function is called by:
 11753 ;;		_I2C_Master_Start
 11754 ;;		_I2C_Master_Stop
 11755 ;;		_I2C_Master_Write
 11756 ;;		_I2C_Master_Read
 11757 ;;		_I2C_Master_RepeatedStart
 11758 ;; This function uses a non-reentrant model
 11759 ;;
 11760                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 11761                           	line	32
 11762                           global __ptext28
 11763                           __ptext28:	;psect for function _I2C_Master_Wait
 11764  1396                     psect	text28
 11765                           	file	"I2C.c"
 11766                           	line	32
 11767                           	global	__size_of_I2C_Master_Wait
 11768                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
 11769  000F                     	
 11770                           _I2C_Master_Wait:	
 11771  1396                     ;incstack = 0
 11772                           	opt	stack 4
 11773                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 11774                           	line	34
 11775                           	
 11776                           l3454:	
 11777  1396                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 11778                           	goto	l32
 11779  1396  2B97               	
 11780                           l33:	
 11781  1397                     	
 11782                           l32:	
 11783  1397                     	bsf	status, 5	;RP0=1, select bank1
 11784  1397  1683               	bcf	status, 6	;RP1=0, select bank1
 11785  1398  1303               	btfsc	(148)^080h,(2)&7	;volatile
 11786  1399  1914               	goto	u4951
 11787  139A  2B9C               	goto	u4950
 11788  139B  2B9D               u4951:
 11789  139C                     	goto	l32
 11790  139C  2B97               u4950:
 11791  139D                     	
 11792                           l3456:	
 11793  139D                     	movf	(145)^080h,w	;volatile
 11794  139D  0811               	andlw	01Fh
 11795  139E  391F               	btfss	status,2
 11796  139F  1D03               	goto	u4961
 11797  13A0  2BA2               	goto	u4960
 11798  13A1  2BA3               u4961:
 11799  13A2                     	goto	l32
 11800  13A2  2B97               u4960:
 11801  13A3                     	goto	l35
 11802  13A3  2BA4               	
 11803                           l34:	
 11804  13A4                     	line	35
 11805                           	
 11806                           l35:	
 11807  13A4                     	return
 11808  13A4  0008               	opt stack 0
 11809                           GLOBAL	__end_of_I2C_Master_Wait
 11810                           	__end_of_I2C_Master_Wait:
 11811  13A5                     	signat	_I2C_Master_Wait,89
 11812                           	global	_isr
 11813                           
 11814 ;; *************** function _isr *****************
 11815 ;; Defined at:
 11816 ;;		line 62 in file "mainM.c"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;		None
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, pclath, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11830 ;;      Params:         0       0       0       0       0
 11831 ;;      Locals:         0       0       0       0       0
 11832 ;;      Temps:          3       0       0       0       0
 11833 ;;      Totals:         3       0       0       0       0
 11834 ;;Total ram usage:        3 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; Hardware stack levels required when called:    1
 11837 ;; This function calls:
 11838 ;;		_readADC
 11839 ;; This function is called by:
 11840 ;;		Interrupt level 1
 11841 ;; This function uses a non-reentrant model
 11842 ;;
 11843                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 11844                           	file	"mainM.c"
 11845                           	line	62
 11846                           global __ptext29
 11847                           __ptext29:	;psect for function _isr
 11848  13C3                     psect	text29
 11849                           	file	"mainM.c"
 11850                           	line	62
 11851                           	global	__size_of_isr
 11852                           	__size_of_isr	equ	__end_of_isr-_isr
 11853  001B                     	
 11854                           _isr:	
 11855  13C3                     ;incstack = 0
 11856                           	opt	stack 3
 11857                           ; Regs used in _isr: [wreg+pclath+cstack]
 11858                           psect	intentry,class=CODE,delta=2
 11859                           global __pintentry
 11860                           __pintentry:
 11861  0004                     global interrupt_function
 11862                           interrupt_function:
 11863  0004                     	global saved_w
 11864                           	saved_w	set	btemp+0
 11865  007E                     	movwf	saved_w
 11866  0004  00FE               	swapf	status,w
 11867  0005  0E03               	movwf	(??_isr+1)
 11868  0006  00F1               	movf	pclath,w
 11869  0007  080A               	movwf	(??_isr+2)
 11870  0008  00F2               	ljmp	_isr
 11871  0009  160A  118A  2BC3   psect	text29
 11872                           	line	63
 11873                           	
 11874                           i1l3144:	
 11875  13C3                     ;mainM.c: 63:     if(ADCON0bits.GO_DONE == 0){
 11876                           	bcf	status, 5	;RP0=0, select bank0
 11877  13C3  1283               	bcf	status, 6	;RP1=0, select bank0
 11878  13C4  1303               	btfsc	(31),1	;volatile
 11879  13C5  189F               	goto	u443_21
 11880  13C6  2BC8               	goto	u443_20
 11881  13C7  2BC9               u443_21:
 11882  13C8                     	goto	i1l220
 11883  13C8  2BD7               u443_20:
 11884  13C9                     	line	64
 11885                           	
 11886                           i1l3146:	
 11887  13C9                     ;mainM.c: 64:         adc = readADC();
 11888                           	fcall	_readADC
 11889  13C9  160A  118A  236F  160A  118A  	movwf	(??_isr+0)+0
 11890  13CE  00F0               	movf	(??_isr+0)+0,w
 11891  13CF  0870               	bsf	status, 5	;RP0=1, select bank1
 11892  13D0  1683               	bcf	status, 6	;RP1=0, select bank1
 11893  13D1  1303               	movwf	(_adc)^080h
 11894  13D2  00C0               	line	65
 11895                           	
 11896                           i1l3148:	
 11897  13D3                     ;mainM.c: 65:         PIR1bits.ADIF = 0;
 11898                           	bcf	status, 5	;RP0=0, select bank0
 11899  13D3  1283               	bcf	status, 6	;RP1=0, select bank0
 11900  13D4  1303               	bcf	(12),6	;volatile
 11901  13D5  130C               	goto	i1l220
 11902  13D6  2BD7               	line	66
 11903                           ;mainM.c: 66:     }
 11904                           	
 11905                           i1l219:	
 11906  13D7                     	line	67
 11907                           	
 11908                           i1l220:	
 11909  13D7                     	movf	(??_isr+2),w
 11910  13D7  0872               	movwf	pclath
 11911  13D8  008A               	swapf	(??_isr+1)^0FFFFFF80h,w
 11912  13D9  0E71               	movwf	status
 11913  13DA  0083               	swapf	saved_w,f
 11914  13DB  0EFE               	swapf	saved_w,w
 11915  13DC  0E7E               	retfie
 11916  13DD  0009               	opt stack 0
 11917                           GLOBAL	__end_of_isr
 11918                           	__end_of_isr:
 11919  13DE                     	signat	_isr,89
 11920                           	global	_readADC
 11921                           
 11922 ;; *************** function _readADC *****************
 11923 ;; Defined at:
 11924 ;;		line 6 in file "ADC.c"
 11925 ;; Parameters:    Size  Location     Type
 11926 ;;		None
 11927 ;; Auto vars:     Size  Location     Type
 11928 ;;		None
 11929 ;; Return value:  Size  Location     Type
 11930 ;;                  1    wreg      unsigned char 
 11931 ;; Registers used:
 11932 ;;		wreg
 11933 ;; Tracked objects:
 11934 ;;		On entry : 0/0
 11935 ;;		On exit  : 0/0
 11936 ;;		Unchanged: 0/0
 11937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11938 ;;      Params:         0       0       0       0       0
 11939 ;;      Locals:         0       0       0       0       0
 11940 ;;      Temps:          0       0       0       0       0
 11941 ;;      Totals:         0       0       0       0       0
 11942 ;;Total ram usage:        0 bytes
 11943 ;; Hardware stack levels used:    1
 11944 ;; This function calls:
 11945 ;;		Nothing
 11946 ;; This function is called by:
 11947 ;;		_isr
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 11951                           	file	"ADC.c"
 11952                           	line	6
 11953                           global __ptext30
 11954                           __ptext30:	;psect for function _readADC
 11955  136F                     psect	text30
 11956                           	file	"ADC.c"
 11957                           	line	6
 11958                           	global	__size_of_readADC
 11959                           	__size_of_readADC	equ	__end_of_readADC-_readADC
 11960  0005                     	
 11961                           _readADC:	
 11962  136F                     ;incstack = 0
 11963                           	opt	stack 3
 11964                           ; Regs used in _readADC: [wreg]
 11965                           	line	7
 11966                           	
 11967                           i1l2430:	
 11968  136F                     ;ADC.c: 7:     return ADRESH;
 11969                           	bcf	status, 5	;RP0=0, select bank0
 11970  136F  1283               	bcf	status, 6	;RP1=0, select bank0
 11971  1370  1303               	movf	(30),w	;volatile
 11972  1371  081E               	goto	i1l314
 11973  1372  2B73               	
 11974                           i1l2432:	
 11975  1373                     	line	8
 11976                           	
 11977                           i1l314:	
 11978  1373                     	return
 11979  1373  0008               	opt stack 0
 11980                           GLOBAL	__end_of_readADC
 11981                           	__end_of_readADC:
 11982  1374                     	signat	_readADC,89
 11983                           global	___latbits
 11984                           ___latbits	equ	2
 11985  0002                     	global	btemp
 11986                           	btemp set 07Eh
 11987  007E                     
 11988                           	DABS	1,126,2	;btemp
 11989                           	global	wtemp0
 11990                           	wtemp0 set btemp+0
 11991  007E                     	end


Data Sizes:
    Strings     136
    Constant    10
    Data        0
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80     77      80
    BANK1            80     17      53
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 15
		 -> STR_25(CODE[15]), STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[7]), STR_19(CODE[8]), STR_18(CODE[15]), 
		 -> STR_17(CODE[11]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
		 -> STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[8]), STR_6(CODE[8]), 
		 -> STR_5(CODE[12]), STR_4(CODE[5]), STR_3(CODE[6]), writeIntLCD16@buffer(COMMON[5]), 
		 -> writeIntLCD@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _main->___awmod
    _main->_setCursorLCD
    _writeStrLCD->_writeCharLCD
    _sprintf->___lwdiv
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _setup->_initLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    _setCursorLCD->_cmdLCD
    ___flneg->___xxtofl
    ___flmul->__Umul8_16
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl
    ___awdiv->___wmul

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___fldiv
    _writeIntLCD->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flneg
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   18454
                                             13 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                             ___wmul
                           ___xxtofl
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    4205
                                             22 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2    2402
                                              5 COMMON     2     0      2
                                              0 BANK0      5     5      0
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1680
                                              9 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              3 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              3 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     604
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      31
                                              6 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      31
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                              4 COMMON     4     4      0
                                             13 BANK0      4     0      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              3 COMMON     1     1      0
                                              0 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (1) _setCursorLCD                                         3     2      1     844
                                              6 COMMON     2     1      1
                                              0 BANK0      1     1      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      31
                                              3 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              3 COMMON     4     0      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     517
                                              3 COMMON     4     0      4
                                              0 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                             10 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             38 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1425
                                             64 BANK0     13     5      8
                                              0 BANK1     13    13      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                             14 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     973
                                              3 COMMON     5     1      4
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              7 COMMON     1     1      0
                                              2 BANK0      8     4      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     301
                                              3 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     785
                                              3 COMMON     4     2      2
                                              0 BANK0      2     2      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0       0
                                              0 COMMON     3     3      0
                            _readADC
 ---------------------------------------------------------------------------------
 (5) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___awdiv
     ___wmul (ARG)
   ___awmod
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
   _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 _isr (ROOT)
   _readADC

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      90       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4D      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     11      35       7       66.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      90      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Mar 09 14:36:28 2020

             ___fldiv@aexp 00D0               ___fldiv@bexp 00CF                          pc 0002  
             ___fldiv@sign 00C8                __CFG_CP$OFF 0000            writeStrLCD@cont 0023  
                       l32 1397                         l33 1397                         l34 13A4  
                       l50 14C5                         l35 13A4                         l51 14C8  
                       l52 14D0                         l44 0808                         l29 150A  
                       l38 138B                         l47 1395                         l74 140C  
                       l82 15B2                         l75 1414                         l91 1544  
                       l83 158D                         l76 141A                         l84 15CF  
                       l85 15CF                         l94 07FF                         l79 137A  
                       l88 13C2                         l97 13FB               ___awdiv@sign 0027  
                       _s3 00BA                         _ir 00B4                         fsr 0004  
      ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022                        l230 009C  
                      l231 009B                        l240 02C7                        l232 00EC  
                      l241 02F7                        l233 0117                        l225 002A  
                      l250 03A8                        l242 0300                        l234 0100  
                      l226 0032                        l251 03A8                        l243 0317  
                      l235 0116                        l227 0070                        l260 0430  
                      l252 03E9                        l244 031F                        l236 0115  
                      l228 009D                        l261 0425                        l253 03D8  
                      l245 0322                        l237 0157                        l229 0085  
                      l270 0495                        l262 042F                        l254 03E2  
                      l246 032A                        l238 016C                        l263 0519  
                      l271 04D1                        l255 0431                        l247 032C  
                      l239 016B                        l440 08E9                        l280 050B  
                      l272 04C0                        l264 0473                        l248 043B  
                      l256 040C                        l441 09C9                        l281 0515  
                      l273 04CA                        l265 0462                        l257 0401  
                      l249 0360                        l610 1752                        l602 1700  
                      l450 0969                        l442 08EA                        l282 051A  
                      l274 0518                        l266 046C                        l258 040B  
                      l611 175E                        l603 170E                        l451 09AA  
                      l443 08EB                        l283 051B                        l275 04F2  
                      l267 0497                        l259 0431                        l612 1763  
                      l604 1753                        l620 1650                        l460 1498  
                      l436 09B5                        l452 096E                        l444 090B  
                      l284 051B                        l276 04E7                        l268 0496  
                      l605 1725                        l621 1651                        l461 149F  
                      l453 09B4                        l445 08EC                        l437 08D5  
                      l277 04F1                        l269 048B                        l606 1719  
                      l622 1662                        l454 09C8                        l446 0925  
                      l438 08E7                        l278 0517                        l607 172A  
                      l623 1670                        l615 162C                        l287 1445  
                      l455 09CE                        l447 092F                        l439 08EE  
                      l279 0516                        l608 172B                        l624 167C  
                      l616 1636                        l640 13B2                        l448 0957  
                      l609 1744                        l625 1681                        l617 1671  
                      l801 053B                        l641 13B3                        l449 094C  
                      l618 164B                        l810 07EB                        l802 0556  
                      l650 17EF                        l458 1477                        l490 1697  
                      l730 1616                        l619 163F                        l811 05E0  
                      l803 0552                        l651 17DC                        l459 1483  
                      l491 16AA                        l731 161C                        l820 06CF  
                      l812 06BD                        l804 0560                        l652 17E8  
                      l644 1783                        l492 16AB                        l724 1617  
                      l740 1581                        l821 06E3                        l813 0633  
                      l805 057B                        l653 17DD                        l645 17FF  
                      l493 16D6                        l725 15E9                        l741 1587  
                      l750 0A30                        l830 07B8                        l822 0701  
                      l814 0669                        l806 0596                        l654 17EE  
                      l646 17CC                        l494 16E6                        l726 15DD  
                      l734 1582                        l751 0A2D                        l831 07CA  
                      l823 073A                        l815 065A                        l807 0592  
                      l655 17FF                        l647 17B8                        l495 16F0  
                      l727 15EE                        l735 155C                        l760 0ACE  
                      l752 0A38                        l744 09E2                        l832 07CF  
                      l824 072F                        l816 06B4                        l808 059F  
                      l840 0CBC                        l648 17B9                        l488 16E7  
                      l728 15EF                        l736 1550                        l761 0AD4  
                      l753 0A84                        l745 09F8                        l825 0739  
                      l817 06C4                        l809 05C5                        l841 0CCD  
                      l649 17CB                        l489 16A5                        l729 1608  
                      l737 1561                        l770 0C07                        l762 0AEB  
                      l754 0A47                        l746 09F5                        l826 0738  
                      l818 06CE                        l850 0F22                        l842 0CE2  
                      l738 1562                        l771 0BBA                        l763 0B3E  
                      l755 0ABD                        l747 0A01                        l827 0778  
                      l819 06FA                        l851 0F31                        l843 0CE0  
                      l739 1573                        l780 0C00                        l772 0BB9  
                      l764 0AFE                        l756 0AEB                        l748 0A0E  
                      l828 0777                        l860 0FF2                        l852 0F46  
                      l844 0CEB                        l781 0C06                        l773 0BC8  
                      l765 0C8A                        l757 0AE2                        l749 0A1A  
                      l829 0798                        l861 0FD6                        l853 0F6B  
                      l845 0D00                        l837 0C9E                        l782 0C1E  
                      l774 0BDF                        l766 0B3D                        l758 0ABE  
                      l862 0FF2                        l854 0F62                        l838 0CB3  
                      l870 0852                        l791 0C64                        l783 0C15  
                      l775 0C01                        l767 0B26                        l759 0ACB  
                      l863 0FEA                        l855 0F6A                        l847 0CF6  
                      l839 0CB1                        l871 0844                        l792 0C73  
                      l784 0C1D                        l776 0BE0                        l768 0B29  
                      l856 0F69                        l848 0FFF                        l880 0894  
                      l872 0859                        l793 0C7A                        l785 0C1C  
                      l777 0BEE                        l769 0B2F                        l857 0FA3  
                      l849 0F41                        l881 08A0                        l873 0875  
                      l794 0C7E                        l786 0C59                        l778 0BF5  
                      l858 0FA2                        l882 08C3                        l874 085A  
                      l866 0825                        l795 0C8A                        l787 0C59  
                      l779 0BF8                        l859 0FBB                        l875 087C  
                      l867 082D                        l788 0C58                        l876 0889  
                      l868 083F                        l789 0C74                        l885 1453  
                      l877 087D                        l869 08CC                        l886 145D  
                      l887 146C                        l879 0894                        l888 1471  
                      _GIE 005F                        _RD0 0040                        _RD1 0041  
             __CFG_CPD$OFF 0000                        _adc 00C0                        _isr 13C3  
                      _mov 00B7                        fsr0 0004                        indf 0000  
             ___awmod@sign 0021               ___flmul@aexp 0058               ___flmul@bexp 0059  
             ___flmul@sign 0053               ___flmul@temp 005E               ___flmul@prod 005A  
             __CFG_LVP$OFF 0000               ___fltol@exp1 0026                       l3000 0E53  
                     l3010 0F0B                       l3002 0E80                       l3020 0F31  
                     l3012 0F14                       l3004 0E90                       l3030 0F4B  
                     l3022 0F3A                       l3014 0F22                       l3006 0EBD  
                     l3040 0F7E                       l3032 0F5F                       l3016 0F2B  
                     l3024 0F41                       l3008 0EE3                       l3050 0FBB  
                     l3042 0F82                       l3034 0F66                       l3026 0F46  
                     l3018 0F2F                       l2250 1545                       l4002 0900  
                     l2500 174B                       l3060 0FE8                       l3052 0FCA  
                     l3044 0F9B                       l3036 0F6B                       l3028 0F47  
                     l2260 1562                       l2252 154D                       l2502 1753  
                     l3062 0FEA                       l3054 0FD4                       l3038 0F70  
                     l3046 0FA3                       l2270 1587                       l2262 156C  
                     l2254 1550                       l2504 1758                       l2600 09E2  
                     l3064 0FF6                       l3056 0FD6                       l3048 0FB0  
                     l3400 16AB                       l2264 1573                       l2256 1557  
                     l2192 13B5                       l2506 175E                       l2602 09E7  
                     l2610 09F8                       l3066 0FFF                       l3058 0FE4  
                     l3410 16DF                       l3402 16B4                       l2266 157A  
                     l2258 155C                       l2194 13B8                       l2508 1763  
                     l2700 0B19                       l2620 0A14                       l2612 0A01  
                     l2604 09EC                       l2380 144B                       l3404 16C6  
                     l3412 16E7                       l3420 15DA                       l2268 1582  
                     l3500 090B                       l2196 13BA                       l2470 16F8  
                     l2710 0B2F                       l2702 0B1D                       l2630 0A2D  
                     l2622 0A18                       l2614 0A06                       l2606 09F5  
                     l2390 1471                       l2382 1453                       l2550 13AF  
                     l3414 16F0                       l3406 16D4                       l3430 1600  
                     l3422 15DD                       l3510 0925                       l3502 0913  
                     l2198 13BF                       l2480 170E                       l2472 16FD  
                     l2720 0BA5                       l2712 0B38                       l2704 0B26  
                     l2640 0A47                       l2632 0A2E                       l2624 0A1A  
                     l2616 0A0C                       l2608 09F6                       l2800 0552  
                     l2384 1457                       l2552 13B2                       l3408 16D6  
                     l3600 1443                       l3440 161C                       l3432 1606  
                     l3424 15E4                       l3416 15D0                       l3520 094C  
                     l3512 0927                       l3504 0917                       l2490 1725  
                     l2482 1710                       l2474 1700                       l2466 16F1  
                     l2730 0BDE                       l2722 0BAA                       l2706 0B29  
                     l2714 0B3E                       l2650 0A5B                       l2642 0A4B  
                     l2626 0A1F                       l2634 0A30                       l2618 0A0E  
                     l2810 0571                       l2802 0554                       l2386 1466  
                     l2378 1449                       l2554 13B3                       l3610 148A  
                     l3450 1508                       l3442 14D1                       l3602 1444  
                     l3434 1608                       l3426 15E9                       l3418 15D4  
                     l3530 096E                       l3514 092E                       l3522 0957  
                     l3506 091B                       l2492 172B                       l2484 1716  
                     l2476 1704                       l2468 16F4                       l3620 1620  
                     l2740 0BF5                       l2732 0BE0                       l2716 0B54  
                     l2724 0BBA                       l2708 0B2D                       l2660 0A6F  
                     l2652 0A5F                       l2644 0A4F                       l2636 0A3E  
                     l2628 0A24                       l2900 0751                       l2820 0592  
                     l2812 0577                       l2804 0556                       l2388 146C  
                     l2548 13A5                       l3612 1491                       l3604 1472  
                     l3700 0835                       l3452 1509                       l3444 14D5  
                     l3436 160F                       l3428 15EF                       l3532 099E  
                     l3524 095D                       l3516 092F                       l3508 091F  
                     l3540 09C9                       l3460 1588                       l3454 1396  
                     l3550 1388                       l2494 173C                       l2486 1719  
                     l2478 1709                       l3630 1636                       l3622 1624  
                     l2750 0C08                       l2742 0BF8                       l2734 0BE9  
                     l2726 0BD0                       l2718 0BA3                       l2662 0A73  
                     l2654 0A63                       l2646 0A53                       l2638 0A42  
                     l2670 0A84                       l2910 0798                       l2902 0755  
                     l2830 05BB                       l2822 0594                       l2814 057B  
                     l2806 0560                       l3614 1498                       l3606 1477  
                     l3710 085A                       l3702 083E                       l3390 07FC  
                     l3446 14D8                       l3470 1514                       l3438 1617  
                     l3542 09CE                       l3534 09A5                       l3526 0964  
                     l3518 094B                       l3462 158D                       l3456 139D  
                     l3560 14A0                       l3552 0800                       l2496 1742  
                     l2488 1720                       l3640 1651                       l3632 163C  
                     l3624 1629                       l2760 0C23                       l2752 0C0C  
                     l2744 0BFD                       l2736 0BED                       l2728 0BD5  
                     l2680 0ACE                       l2672 0A85                       l2664 0A77  
                     l2656 0A67                       l2648 0A57                       l2592 09CF  
                     l2920 07C6                       l2912 07A7                       l2904 076E  
                     l2840 05E0                       l2832 05C4                       l2816 0582  
                     l2824 0596                       l2808 0567                       l3616 149F  
                     l3608 147B                       l3720 088D                       l3712 085E  
                     l3704 083F                       l3384 07ED                       l3392 1682  
                     l3448 1507                       l3480 1532                       l3472 151A  
                     l3536 09AA                       l3528 0969                       l3464 15A9  
                     l3800 00D8                       l3570 14C1                       l3562 14A5  
                     l3554 0805                       l2498 1744                       l3650 1676  
                     l3642 165B                       l3634 163F                       l3626 162C  
                     l3618 161D                       l2770 0C64                       l2762 0C31  
                     l2754 0C12                       l2738 0BF2                       l2746 0C01  
                     l2690 0AEF                       l2682 0AD2                       l2674 0AA1  
                     l2666 0A7B                       l2658 0A6B                       l2594 09D6  
                     l2922 07CA                       l2914 07AB                       l2906 0778  
                     l2850 0633                       l2842 0605                       l2826 05A7  
                     l2834 05C5                       l2818 0587                       l2930 0C92  
                     l3730 08C1                       l3722 0898                       l3714 086C  
                     l3706 0844                       l3386 07F0                       l3394 1694  
                     l3458 1374                       l3482 1538                       l3474 1520  
                     l3490 08DB                       l3538 09B5                       l3466 15B2  
                     l3810 0106                       l3802 00DD                       l3572 14C9  
                     l3564 14AD                       l3548 1383                       l3556 138C  
                     l3652 167C                       l3644 1662                       l3636 1646  
                     l3628 1630                       l2780 0C7A                       l2772 0C6C  
                     l2764 0C35                       l2756 0C19                       l2748 0C07  
                     l2692 0AF4                       l2684 0AD4                       l2676 0AC2  
                     l2668 0A7F                       l2596 09DC                       l2924 07E2  
                     l2916 07B5                       l2908 0787                       l2852 0638  
                     l2860 0669                       l2844 061D                       l2836 05CC  
                     l2828 05B3                       l2940 0CA8                       l2932 0C98  
                     l3660 1782                       l3732 08C3                       l3724 08A2  
                     l3716 087D                       l3708 0852                       l3388 07F2  
                     l3580 140C                       l3396 1697                       l3484 153E  
                     l3476 1526                       l3468 150B                       l3492 08E2  
                     l3900 03B1                       l3820 0133                       l3812 0117  
                     l3804 00EC                       l3574 14D0                       l3566 14B6  
                     l3558 1391                       l3654 1681                       l3646 1669  
                     l3638 164B                       l2782 0C85                       l2774 0C71  
                     l2766 0C53                       l2758 0C1E                       l2694 0AFD  
                     l2686 0ADD                       l2678 0ACB                       l2598 09E0  
                     l2926 07EB                       l2918 07C2                       l2870 06C4  
                     l2862 068A                       l2854 0650                       l2846 0627  
                     l2838 05DF                       l2790 0531                       l2950 0CC7  
                     l2942 0CB1                       l2934 0C9C                       l3670 17A3  
                     l3662 1783                       l3734 08CC                       l3726 08B8  
                     l3718 0889                       l3582 1414                       l3398 16A5  
                     l3478 152C                       l3590 1434                       l3494 08E7  
                     l3486 08D0                       l3910 03D8                       l3902 03B9  
                     l3830 015C                       l3822 0138                       l3814 011D  
                     l3806 00F1                       l3568 14BB                       l3648 1671  
                     l2784 0C89                       l2776 0C74                       l2768 0C5E  
                     l2696 0AFE                       l2688 0AE2                       l2880 06E3  
                     l2872 06CC                       l2864 068B                       l2856 0656  
                     l2848 0631                       l2792 0537                       l2960 0CE0  
                     l2952 0CCB                       l2944 0CB3                       l2936 0C9E  
                     l2928 0C8B                       l3672 17A7                       l3680 17CC  
                     l3664 1798                       l3656 1764                       l3728 08BD  
                     l3576 13FF                       l3592 1439                       l3496 08ED  
                     l3488 08D5                       l3584 13E1                       l3920 0401  
                     l3912 03E2                       l3904 03C0                       l3840 01DC  
                     l3832 016C                       l3824 0141                       l3816 0122  
                     l3808 0100                       l2778 0C78                       l2698 0B15  
                     l2890 0708                       l2882 06F1                       l2874 06CF  
                     l2866 06B4                       l2858 065A                       l2794 053B  
                     l2786 051E                       l2970 0CFF                       l2962 0CE2  
                     l2954 0CCD                       l2946 0CBC                       l2938 0CA3  
                     l3690 17F4                       l3682 17D2                       l3674 17AE  
                     l3666 1799                       l3658 1779                       l3578 1404  
                     l3594 143E                       l3586 141B                       l3498 08EE  
                     l3922 040C                       l3906 03C9                       l3914 03E9  
                     l3930 043B                       l3850 02C3                       l3842 021B  
                     l3834 0170                       l3826 0148                       l3818 012C  
                     l3770 002A                       l2892 072A                       l2876 06D9  
                     l2884 06FA                       l2868 06BD                       l2796 0542  
                     l2788 0527                       l2980 0D56                       l2972 0D00  
                     l2964 0CEB                       l2956 0CD2                       l2948 0CC1  
                     l3684 17DB                       l3676 17B7                       l3668 17A1  
                     l3692 080C                       l3596 1441                       l3588 1427  
                     l3940 0462                       l3932 0443                       l3924 0414  
                     l3916 03F0                       l3908 03CE                       l3852 02CC  
                     l3860 02F7                       l3844 0230                       l3836 0175  
                     l3828 0157                       l3780 0070                       l3772 0030  
                     l2894 0733                       l2886 0701                       l2878 06DF  
                     l2798 0547                       l2990 0DD3                       l2982 0D82  
                     l2974 0D10                       l2966 0CF0                       l2958 0CD7  
                     l3686 17DD                       l3678 17B9                       l3694 0811  
                     l3598 1442                       l3950 048B                       l3942 046C  
                     l3934 044A                       l3926 041B                       l3918 03F7  
                     l3870 0315                       l3862 02FC                       l3854 02D3  
                     l3846 02AA                       l3838 017F                       l3790 00A3  
                     l3782 0076                       l3774 0032                       l2896 073A  
                     l2888 0704                       l2992 0DF0                       l2984 0D9E  
                     l2976 0D1D                       l2968 0CF6                       l3688 17EF  
                     l3696 0815                       l3960 04B6                       l3952 0497  
                     l3936 0453                       l3944 0473                       l3928 0425  
                     l3880 032C                       l3864 0305                       l3872 0317  
                     l3856 02D9                       l3848 02BD                       l3792 00A8  
                     l3784 0085                       l3776 005A                       l3768 0024  
                     l2898 0741                       l2994 0E00                       l2986 0DBA  
                     l2978 0D3A                       l3698 0825                       l3970 04DD  
                     l3962 04C0                       l3954 049F                       l3946 047A  
                     l3938 0458                       l3890 0359                       l3882 0333  
                     l3874 031C                       l3866 030C                       l3858 02F3  
                     l3794 00B2                       l3786 008C                       l3778 0061  
                     l2996 0E1D                       l2988 0DC3                       l3980 050B  
                     l3972 04E7                       l3964 04CA                       l3956 04A6  
                     l3948 0481                       l3892 0360                       l3884 033B  
                     l3876 0322                       l3868 0310                       l3796 00CA  
                     l3788 009D                       l2998 0E36                       l3974 04F2  
                     l3958 04AF                       l3966 04D1                       l3894 0367  
                     l3886 0342                       l3878 0328                       l3798 00CF  
                     l3976 04FA                       l3968 04D8                       l3896 039B  
                     l3888 0353                       l3978 0501                       l3898 03A1  
                     ?_isr 0070                       STR_1 109F                       STR_3 1094  
                     STR_4 109A                       STR_5 1065                       STR_6 1085  
                     STR_7 1030                       STR_8 1021                       STR_9 104B  
                     u3020 13AF                       u3021 13AE                       u3200 0A3E  
                     u3201 0A3D                       u4001 0DAC                       u3210 0A42  
                     u3130 09E0                       u4002 0DB3                       u3211 0A41  
                     u3131 09DF                       u4003 0DBA                       u3300 0AF4  
                     u3220 0AA1                       u3140 09E7                       u4100 0EF1  
                     u3301 0AF3                       u3221 0AA0                       u3141 09E6  
                     u4021 0DE2                       u3230 0AAC                       u3150 09EC  
                     u4022 0DE9                       u3311 0B07                       u3231 0AAA  
                     u3151 09EB                       u4111 0EFD                       u4031 0E0F  
                     u4023 0DF0                       u4015 0DBC                       u3400 0BD0  
                     u3320 0B19                       u3312 0B0E                       u3240 0AAD  
                     u3160 0A0C                       u4200 0F70                       u4112 0F04  
                     u4032 0E16                       u5000 08DB                       u3401 0BCF  
                     u3321 0B18                       u3313 0B15                       u3225 0A9D  
                     u3161 0A0B                       u4201 0F6F                       u4113 0F0B  
                     u4105 0EEC                       u4033 0E1D                       u5001 08DA  
                     u3410 0BD5                       u3330 0B1D                       u3250 0AC2  
                     u3170 0A18                       u4210 0F82                       u5010 091B  
                     u3411 0BD4                       u3331 0B1C                       u3251 0AC1  
                     u3171 0A17                       u4211 0F81                       u4051 0E45  
                     u5011 091A                       u3500 0C23                       u3340 0B2D  
                     u3260 0AD2                       u3180 0A1F                       u4220 0F91  
                     u4140 0F2F                       u4052 0E4C                       u5100 147B  
                     u2540 154D                       u5020 092D                       u3501 0C22  
                     u3341 0B2C                       u3261 0AD1                       u3181 0A1E  
                     u4141 0F2E                       u4125 0F0D                       u4061 0E72  
                     u4053 0E53                       u4045 0E1F                       u5101 147A  
                     u2541 154C                       u5021 092C                       u3510 0C35  
                     u3430 0BED                       u3190 0A24                       u4230 0FB0  
                     u4062 0E79                       u5030 094A                       u3511 0C34  
                     u3431 0BEC                       u3191 0A23                       u4231 0FAF  
                     u4135 0F24                       u4071 0E9F                       u4063 0E80  
                     u5031 0949                       u3520 0C44                       u3440 0BF2  
                     u3360 0B54                       u3280 0AEA                       u3600 0542  
                     u4240 0FCA                       u4160 0F45                       u4080 0EC9  
                     u4072 0EA6                       u2560 1560                       u5040 0956  
                     u3441 0BF1                       u3425 0BE2                       u3361 0B53  
                     u3281 0AE9                       u3601 0541                       u4241 0FC9  
                     u4225 0F8C                       u4161 0F44                       u4073 0EAD  
                     u2561 155F                       u5041 0955                       u5210 166F  
                     u3530 0C53                       u3450 0BFD                       u3370 0B7A  
                     u3290 0AEF                       u3610 0547                       u4250 0FE8  
                     u4170 0F4B                       u5130 1497                       u2570 156C  
                     u5050 095D                       u5211 166E                       u3531 0C52  
                     u3451 0BFC                       u3371 0B7B                       u3363 0B50  
                     u3355 0B31                       u3291 0AEE                       u3275 0AD6  
                     u3611 0546                       u4251 0FE7                       u4235 0FAC  
                     u4171 0F4A                       u4155 0F33                       u4091 0ED5  
                     u5131 1496                       u5115 1484                       u2571 156B  
                     u2555 1551                       u5051 095C                       u5035 0946  
                     u5220 1676                       u5140 1624                       u3540 0C5E  
                     u3460 0C05                       u3380 0B8C                       u3372 0B80  
                     u3700 0656                       u3620 0577                       u2740 1457  
                     u4180 0F5F                       u4092 0EDC                       u5060 09B3  
                     u5221 1675                       u5205 1663                       u5141 1623  
                     u3541 0C5D                       u3525 0C3F                       u3461 0C04  
                     u3381 0B8D                       u3373 0B81                       u3701 0655  
                     u3621 0576                       u2741 1456                       u4245 0FC6  
                     u4181 0F5E                       u4093 0EE3                       u4085 0EC4  
                     u5125 148B                       u5061 09B2                       u2910 1751  
                     u2830 16F8                       u5150 1630                       u3550 0C63  
                     u3470 0C0C                       u3390 0BAA                       u3382 0B92  
                     u3630 0582                       u4190 0F66                       u5310 17ED  
                     u5230 1779                       u2590 1580                       u5070 09C7  
                     u2911 1750                       u2831 16F7                       u5151 162F  
                     u3551 0C62                       u3471 0C0B                       u3391 0BA9  
                     u3383 0B93                       u3631 0581                       u4191 0F65  
                     u5311 17EC                       u5231 1778                       u2591 157F  
                     u2575 1568                       u5071 09C6                       u5080 14C1  
                     u2920 1758                       u2840 1704                       u5160 163C  
                     u3560 0C71                       u3480 0C12                       u3800 0708  
                     u3720 068A                       u3640 0587                       u2760 146B  
                     u5320 17F4                       u5240 1791                       u5081 14C0  
                     u2921 1757                       u2905 1745                       u2841 1703  
                     u5161 163B                       u3561 0C70                       u3481 0C11  
                     u3801 0707                       u3721 0689                       u3641 0586  
                     u2761 146A                       u5321 17F3                       u5305 17DF  
                     u2585 1574                       u2850 1716                       u3570 0C78  
                     u3490 0C19                       u3810 072A                       u3730 06AF  
                     u3650 05A7                       u5250 17A7                       u5410 088D  
                     u5330 0811                       u5090 1404                       u2851 1715  
                     u3571 0C77                       u3491 0C18                       u3811 0729  
                     u3715 065D                       u3651 05A6                       u2755 145E  
                     u5251 17A6                       u5411 088C                       u5331 0810  
                     u5091 1403                       _PEIE 005E                       u5180 164F  
                     u3580 0C89                       u3820 0733                       u3740 06C3  
                     u3660 05CC                       u3900 0CA3                       u5260 17AE  
                     u5420 0893                       u5340 0815                       u5500 0030  
                     u5181 164E                       u3581 0C88                       u3821 0732  
                     u3741 06C2                       u3725 0686                       u3661 05CB  
                     u3901 0CA2                       u5261 17AD                       u5245 178C  
                     u5421 0892                       u5405 0881                       u5341 0814  
                     u5501 002F                       u2870 1729                       u5190 165B  
                     u3830 0741                       u3750 06CC                       u3670 0638  
                     u3590 0537                       u3910 0CA8                       u5430 0898  
                     u5350 0835                       u5510 0061                       u2871 1728  
                     u5191 165A                       u5175 1640                       u3831 0740  
                     u3751 06CB                       u3735 0698                       u3671 0637  
                     u3591 0536                       u3911 0CA7                       u5431 0897  
                     u5351 0834                       u5511 0060                       u3840 0755  
                     u3736 069B                       u3920 0CCB                       u5280 17CA  
                     u5440 08AD                       u4800 1694                       u5600 02CC  
                     u5520 0076                       u2865 171A                       u3841 0754  
                     u3737 06A2                       u3921 0CCA                       u5281 17C9  
                     u4801 1693                       u5601 02CB                       u5521 0075  
                     u2890 173C                       u3850 0764                       u3770 06DF  
                     u3738 06A5                       u3930 0CD2                       u5290 17D2  
                     u5450 08BD                       u5370 0858                       u5610 02D3  
                     u5530 008C                       u2891 173B                       u5195 1657  
                     u3771 06DE                       u3739 06AC                       u3931 0CD1  
                     u5291 17D1                       u5275 17BA                       u5451 08BC  
                     u5371 0857                       u5611 02D2                       u5531 008B  
                     u3860 0787                       u3940 0CD7                       u5460 08C1  
                     u4820 16A9                       u5700 03C0                       u5620 02FC  
                     u5540 00DD                       u2885 172C                       u3861 0786  
                     u3765 06D2                       u3685 063C                       u3941 0CD6  
                     u5461 08C0                       u5445 08A8                       u5365 0849  
                     u4821 16A8                       u5701 03BF                       u5621 02FB  
                     u5541 00DC                       u3870 07A7                       u3790 0700  
                     u3950 0CF0                       u5390 087B                       u4910 1600  
                     u5710 03CE                       u5630 0305                       u5550 00F1  
                     u2895 1738                       u3871 07A6                       u3855 075F  
                     u3791 06FF                       u3695 0649                       u3951 0CEF  
                     u5391 087A                       u4815 1699                       u4911 15FF  
                     u5711 03CD                       u5631 0304                       u5551 00F0  
                     u3880 07C6                       u3960 0CF5                       u4840 16C6  
                     u5800 04A6                       u5720 03F0                       u5640 030C  
                     u5560 0106                       u3881 07C5                       u3865 0783  
                     u3785 06E6                       u3961 0CF4                       u5385 086D  
                     u4841 16C5                       u4905 15F0                       u5801 04A5  
                     u5721 03EF                       u5641 030B                       u5561 0105  
                     u3890 0C9C                       u4930 1615                       u5810 04B6  
                     u5730 03F7                       u5650 031C                       u5570 0148  
                     u3875 07A3                       u3971 0D48                       u3891 0C9B  
                     u4835 16AD                       u4931 1614                       u4915 15FC  
                     u5811 04B5                       u5731 03F6                       u5651 031B  
                     u5571 0147                       u3972 0D4F                       u4860 16E5  
                     u4940 14E8                       u5820 04D8                       u5740 0414  
                     u5660 0328                       u5580 015C                       u3981 0D64  
                     u3973 0D56                       u4861 16E4                       u4845 16C2  
                     u4925 1609                       u5821 04D7                       u5741 0413  
                     u5661 0327                       u5581 015B                       u4950 139D  
                     u3982 0D6B                       u4870 15DA                       u5830 04DD  
                     u5750 041B                       u5670 0333                       u5590 02C3  
                     u4951 139C                       u3991 0D90                       u3983 0D72  
                     u4855 16D7                       u4871 15D9                       u5831 04DC  
                     u5751 041A                       u5671 0332                       u5591 02C2  
                     u4960 13A3                       u3992 0D97                       u5840 04FA  
                     u5760 044A                       u5680 0342                       u4961 13A2  
                     u3993 0D9E                       u4945 14E3                       u5841 04F9  
                     u5761 0449                       u5681 0341                       u4890 15ED  
                     u4970 1597                       u5850 0501                       u5770 0458  
                     u5690 0367                       u5907 150F                       u4891 15EC  
                     u5851 0500                       u5771 0457                       u5691 0366  
                     u4980 15BC                       u5780 047A                       u5917 07F7  
                     u4885 15DE                       u5781 0479                       u4990 15CE  
                     u5790 0481                       u4991 15CD                       u5791 0480  
                     u5867 00AE                       u5877 0128                       u5887 017B  
                     u5897 13BD               __CFG_WRT$OFF 0000                       _dec1 00BF  
                     _dec2 00BC                       _adcP 00B8                       _adcT 00C1  
        writeStrLCD@string 0075                       _hall 007A                       _main 0024  
                     btemp 007E                       start 000C              __CFG_IESO$OFF 0000  
          ___fldiv@new_exp 00C9                      ??_isr 0070           ?_I2C_Master_Init 002D  
         ?_I2C_Master_Read 0073           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
              _writeIntLCD 13DE              ___fltol@sign1 0025            __end_of___fladd 0C8B  
                    ?_main 0070            __end_of___fldiv 07EC            __end_of___awdiv 1764  
          __end_of___flneg 13B4                      STR_10 1047                      STR_11 1056  
                    STR_20 108D                      STR_12 1038                      STR_13 1065  
                    STR_21 1071                      STR_14 1085                      STR_22 1029  
                    STR_15 1030                      STR_23 101A                      STR_16 1021  
                    STR_24 1056                      STR_25 1038                      STR_17 104B  
            __CFG_WDTE$OFF 0000                      STR_18 1047                      STR_19 107D  
          __end_of___awmod 1682            __end_of___flmul 1000            __end_of___fltol 1800  
                    _ANSEL 0188            __end_of___lldiv 16F1            ___awdiv@divisor 0022  
          __end_of___lwdiv 161D                      i1l220 13D7                      i1l314 1373  
                    i1l219 13D7            __end_of___lwmod 1588            ___awdiv@counter 0026  
              _writeStrLCD 1588                      _PORTB 0006                      _PORTD 0008  
                    _TRISB 0086                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063             __CFG_FCMEN$OFF 0000            __end_of_readADC 1374  
          __end_of_initLCD 1545                      _alarm 00BE            __end_of_dpowers 101A  
                    _count 006E                      _setup 141B      __size_of_writeCharLCD 000F  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 09CF             __CFG_MCLRE$OFF 0000  
          __initialization 000F               __end_of_main 051E                     ??_main 00D1  
             _writeCharLCD 13B4          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0073  
       ??_I2C_Master_Start 0073         ??_I2C_Master_Write 0075                     _ADRESH 001E  
         ___awdiv@dividend 0024                     ?_setup 0070                     _ANSELH 0189  
                   i1l2430 136F                     i1l2432 1373                     i1l3144 13C3  
                   i1l3146 13C9                     i1l3148 13D3                     u443_20 13C9  
                   u443_21 13C8                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 08CD             __CFG_PWRTE$OFF 0000          writeIntLCD@buffer 0039  
        writeIntLCD@numero 003D                     _clcLCD 1374                     _cmdLCD 07EC  
                ??___fladd 0036                     ___wmul 1472                  ??___fldiv 0068  
                ??___awdiv 0077                  ??___flneg 0077                  ??___awmod 0077  
                ??___flmul 004E                  ??___fltol 0020                  ??___lldiv 0073  
                   _garage 00B3                  ??___lwdiv 0077                  ??___lwmod 0027  
                   _float1 00A8                     _float2 00A0                     _count2 0079  
                   _count3 00B5                     _cursor 00C3           ___awdiv@quotient 0028  
          ___awmod@divisor 0073                     _signal 0078            ___awmod@counter 0020  
                   _toggle 00BB                  ??_readADC 0070                  ??_initLCD 0076  
       __size_of__Umul8_16 002C                     saved_w 007E                  ??_sprintf 002C  
             ___xxtofl@arg 0026               ___xxtofl@exp 0025               ___xxtofl@val 0073  
  __end_of__initialization 0020                 ___flneg@f1 002A                 ___fltol@f1 0073  
           __pcstackCOMMON 0070              __end_of_setup 1446                    ??_setup 0078  
               __pbssBANK0 006D                 __pbssBANK1 00A0              ?_setCursorLCD 0076  
        __end_of__Umul8_16 1472                 __pmaintext 0024                    ?_clcLCD 0070  
                  ?_cmdLCD 0070                    ?___wmul 0073                 __pintentry 0004  
             ?_writeIntLCD 0070               ?_writeStrLCD 0075                  ?___xxtofl 0073  
               _antibounce 00B2                    _SSPCON2 0091                    _SSPSTAT 0094  
               __stringtab 1000             ??_setCursorLCD 0077                    ___fladd 09CF  
            setCursorLCD@x 0076              setCursorLCD@y 0020                    ___fldiv 051E  
                  ___awdiv 16F1            __size_of_clcLCD 0007                    ___flneg 13A5  
          __size_of_cmdLCD 0014                    ___awmod 161D                    ___flmul 0C8B  
                  ___fltol 1764                    ___lldiv 1682            __size_of___wmul 002E  
                  ___lwdiv 15D0                    ___lwmod 1545                  _ANSELbits 0188  
                  __ptext1 13DE                    __ptext2 1588                    __ptext3 13B4  
                  __ptext4 08CD                    __ptext5 1545                    __ptext6 15D0  
                  __ptext7 141B                    __ptext8 150B                    __ptext9 1374  
                  _readADC 136F                    _initLCD 150B                    _entero1 006F  
                  _entero2 00BD                    _dpowers 1010               __size_of_isr 001B  
               ??___xxtofl 0020           ___awmod@dividend 0075   __size_of_I2C_Master_Init 003A  
 __size_of_I2C_Master_Read 0031   __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009  
                  _toggle2 00B9                    _toggle3 00B6                    _sprintf 08CD  
                  clrloop0 137C       end_of_initialization 0020  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0020            ___lldiv@counter 002C  
         I2C_Master_Init@c 002D           I2C_Master_Read@a 0073                  _PORTAbits 0005  
              ___fladd@grs 0045              ___xxtofl@sign 0024                  _TRISAbits 0085  
                _TRISBbits 0086                  _TRISCbits 0087                  _TRISEbits 0089  
              ___fldiv@grs 00CB                ___fldiv@rem 00C4                ___flmul@grs 0054  
           __end_of_clcLCD 137B             __end_of_cmdLCD 0800             __end_of___wmul 14A0  
     __end_of_setCursorLCD 141B       __size_of_writeIntLCD 001E        start_initialization 000F  
     __size_of_writeStrLCD 0048                __end_of_isr 13DE          ??_I2C_Master_Init 0074  
        ??_I2C_Master_Read 0075          ??_I2C_Master_Wait 0073          ??_I2C_Master_Stop 0073  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0076                   ??_cmdLCD 0073  
                 ??___wmul 0077                  __Umul8_16 1446                  ___fladd@a 0032  
                ___fladd@b 002E                  ___fldiv@a 0060                  ___fldiv@b 0064  
                ___flmul@a 004A                  ___flmul@b 0046                __pbssCOMMON 0078  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00C4  
        __size_of___xxtofl 00C4              _screenCounter 006D      writeCharLCD@character 0074  
              sprintf@flag 0030                sprintf@prec 0031           _I2C_Master_Start 1383  
         _I2C_Master_Write 138C           ___lwdiv@dividend 0075                  cmdLCD@cmd 0075  
                 ?___fladd 002E                   ?___fldiv 0060                   ?___awdiv 0022  
                 ?___flneg 002A                   ?___awmod 0073                   ?___flmul 0046  
                 ?___fltol 0073                   ?___lldiv 0020                 ?__Umul8_16 0073  
                 ?___lwdiv 0073                   ?___lwmod 0023                  __pstrings 1000  
                 ?_readADC 0070                   ?_initLCD 0070              ?_writeCharLCD 0070  
         ___lwdiv@quotient 0021                   ?_sprintf 0029             __size_of_setup 002B  
        interrupt_function 0004             ___wmul@product 0020                _antibounce2 00B1  
                clear_ram0 137B                   _PIE1bits 008C                   _PIR1bits 000C  
    __size_of_setCursorLCD 001F                 _ADCON0bits 001F                __stringbase 100F  
               _ADCON1bits 009F          ___wmul@multiplier 0073             ??_writeCharLCD 0073  
      I2C_Master_Read@temp 0020               _setCursorLCD 13FC                ??__Umul8_16 0075  
         __size_of___fladd 02BC           __size_of___fldiv 02CE           __size_of___awdiv 0073  
         __size_of___flneg 000F           __size_of___awmod 0065           __size_of___flmul 0375  
         __size_of___fltol 009C           __size_of___lldiv 006F           __size_of___lwdiv 004D  
         __size_of___lwmod 0043                   _adcValue 00C2         __end_of__stringtab 1010  
               _ANSELHbits 0189                 sprintf@val 0032            _I2C_Master_Init 14D1  
         __size_of_readADC 0005            _I2C_Master_Read 14A0           __size_of_initLCD 003A  
                 ___xxtofl 0809            _I2C_Master_Wait 1396            _I2C_Master_Stop 0800  
          ___lwdiv@divisor 0073            ___lwdiv@counter 0020                   __ptext10 14D1  
                 __ptext11 1682                   __ptext20 051E                   __ptext12 13FC  
                 __ptext21 09CF                   __ptext13 07EC                   __ptext30 136F  
                 __ptext22 161D                   __ptext14 0809                   __ptext23 16F1  
                 __ptext15 1472                   __ptext24 138C                   __ptext16 1764  
                 __ptext25 0800                   __ptext17 13A5                   __ptext26 1383  
                 __ptext18 0C8B                   __ptext27 14A0                   __ptext19 1446  
                 __ptext28 1396                   __ptext29 13C3          __CFG_BOR4V$BOR40V 0000  
         __size_of_sprintf 0102              __size_of_main 04FA                   _sensorF1 00AC  
                 _sensorF2 00A4              ??_writeIntLCD 0036              ??_writeStrLCD 0020  
 __end_of_I2C_Master_Start 138C   __end_of_I2C_Master_Write 1396                 _INTCONbits 000B  
                 intlevel1 0000                _screenState 00B0                  sprintf@ap 002F  
                sprintf@sp 0034           ___lwmod@dividend 0025           ___lldiv@dividend 0024  
     __end_of_writeCharLCD 13C3                  stringcode 100A    __end_of_I2C_Master_Init 150B  
  __end_of_I2C_Master_Read 14D1    __end_of_I2C_Master_Wait 13A5    __end_of_I2C_Master_Stop 0809  
   __Umul8_16@multiplicand 0073                   sprintf@c 0035                   sprintf@f 0029  
         ___lldiv@quotient 0028          I2C_Master_Write@d 0073            ___lwmod@divisor 0023  
          ___lwmod@counter 0028                   stringdir 100A                   stringtab 1000  
      __end_of_writeIntLCD 13FC                _SSPCON2bits 0091        __end_of_writeStrLCD 15D0  
            ___fladd@signs 0042               ___fladd@aexp 0043               ___fladd@bexp 0044  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
