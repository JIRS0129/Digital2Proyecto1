

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Mar 06 09:02:42 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_I2C_Master_Read
   712                           	FNCALL	_main,_I2C_Master_Start
   713                           	FNCALL	_main,_I2C_Master_Stop
   714                           	FNCALL	_main,_I2C_Master_Write
   715                           	FNCALL	_main,___fladd
   716                           	FNCALL	_main,___flmul
   717                           	FNCALL	_main,___flneg
   718                           	FNCALL	_main,___fltol
   719                           	FNCALL	_main,___xxtofl
   720                           	FNCALL	_main,_setCursorLCD
   721                           	FNCALL	_main,_setup
   722                           	FNCALL	_main,_writeCharLCD
   723                           	FNCALL	_main,_writeFloat
   724                           	FNCALL	_main,_writeIntLCD
   725                           	FNCALL	_main,_writeStrLCD
   726                           	FNCALL	_writeFloat,_setCursorLCD
   727                           	FNCALL	_writeFloat,_writeCharLCD
   728                           	FNCALL	_writeFloat,_writeIntLCD
   729                           	FNCALL	_writeIntLCD,_sprintf
   730                           	FNCALL	_writeIntLCD,_writeStrLCD
   731                           	FNCALL	_sprintf,___lwdiv
   732                           	FNCALL	_sprintf,___lwmod
   733                           	FNCALL	_setup,_I2C_Master_Init
   734                           	FNCALL	_setup,_clcLCD
   735                           	FNCALL	_setup,_initLCD
   736                           	FNCALL	_setup,_setCursorLCD
   737                           	FNCALL	_setup,_writeStrLCD
   738                           	FNCALL	_writeStrLCD,_writeCharLCD
   739                           	FNCALL	_setCursorLCD,_cmdLCD
   740                           	FNCALL	_initLCD,_cmdLCD
   741                           	FNCALL	_clcLCD,_cmdLCD
   742                           	FNCALL	_I2C_Master_Init,___lldiv
   743                           	FNCALL	___flmul,__Umul8_16
   744                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   745                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   746                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   747                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   748                           	FNROOT	_main
   749                           	global	_dpowers
   750                           psect	strings,class=STRING,delta=2,noexec
   751                           global __pstrings
   752                           __pstrings:
   753  0800                     stringtab:
   754  0800                     	global    __stringtab
   755                           __stringtab:
   756  0800                     ;	String table - string pointers are 1 byte each
   757                           	btfsc	(btemp+1),7
   758  0800  1BFF               	ljmp	stringcode
   759  0801  280A               	bcf	status,7
   760  0802  1383               	btfsc	(btemp+1),0
   761  0803  187F               	bsf	status,7
   762  0804  1783               	movf	indf,w
   763  0805  0800               	incf fsr
   764  0806  0A84               skipnz
   765  0807  1903               incf btemp+1
   766  0808  0AFF               	return
   767  0809  0008               stringcode:stringdir:
   768  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
   769  080A  3008               movwf pclath
   770  080B  008A               movf fsr,w
   771  080C  0804               incf fsr
   772  080D  0A84               	addwf pc
   773  080E  0782               	global __stringbase
   774                           __stringbase:
   775  080F                     	retlw	0
   776  080F  3400               psect	strings
   777                           	global    __end_of__stringtab
   778                           __end_of__stringtab:
   779  0810                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   780                           	line	358
   781                           _dpowers:
   782  0810                     	retlw	01h
   783  0810  3401               	retlw	0
   784  0811  3400               
   785                           	retlw	0Ah
   786  0812  340A               	retlw	0
   787  0813  3400               
   788                           	retlw	064h
   789  0814  3464               	retlw	0
   790  0815  3400               
   791                           	retlw	0E8h
   792  0816  34E8               	retlw	03h
   793  0817  3403               
   794                           	retlw	010h
   795  0818  3410               	retlw	027h
   796  0819  3427               
   797                           	global __end_of_dpowers
   798                           __end_of_dpowers:
   799  081A                     	global	_dpowers
   800                           	global	_float1
   801                           	global	_sensorF1
   802                           	global	_toggle
   803                           	global	_counter
   804                           	global	_dec1
   805                           	global	_entero1
   806                           	global	_adc
   807                           	global	_cursor
   808                           	global	_PORTD
   809                           _PORTD	set	0x8
   810  0008                     	global	_PORTB
   811                           _PORTB	set	0x6
   812  0006                     	global	_SSPBUF
   813                           _SSPBUF	set	0x13
   814  0013                     	global	_SSPCON
   815                           _SSPCON	set	0x14
   816  0014                     	global	_RD1
   817                           _RD1	set	0x41
   818  0041                     	global	_RD0
   819                           _RD0	set	0x40
   820  0040                     	global	_SSPIF
   821                           _SSPIF	set	0x63
   822  0063                     	global	_PEIE
   823                           _PEIE	set	0x5E
   824  005E                     	global	_GIE
   825                           _GIE	set	0x5F
   826  005F                     	global	_TRISD
   827                           _TRISD	set	0x88
   828  0088                     	global	_TRISB
   829                           _TRISB	set	0x86
   830  0086                     	global	_SSPCON2bits
   831                           _SSPCON2bits	set	0x91
   832  0091                     	global	_TRISCbits
   833                           _TRISCbits	set	0x87
   834  0087                     	global	_SSPSTAT
   835                           _SSPSTAT	set	0x94
   836  0094                     	global	_SSPADD
   837                           _SSPADD	set	0x93
   838  0093                     	global	_SSPCON2
   839                           _SSPCON2	set	0x91
   840  0091                     	global	_SSPIE
   841                           _SSPIE	set	0x463
   842  0463                     	global	_TRISC4
   843                           _TRISC4	set	0x43C
   844  043C                     	global	_TRISC3
   845                           _TRISC3	set	0x43B
   846  043B                     	global	_ANSELH
   847                           _ANSELH	set	0x189
   848  0189                     	global	_ANSEL
   849                           _ANSEL	set	0x188
   850  0188                     	
   851                           STR_2:	
   852  081A                     	retlw	32	;' '
   853  081A  3420               	retlw	32	;' '
   854  081B  3420               	retlw	0
   855  081C  3400               psect	strings
   856                           	
   857                           STR_4:	
   858  081D                     	retlw	83	;'S'
   859  081D  3453               	retlw	49	;'1'
   860  081E  3431               	retlw	0
   861  081F  3400               psect	strings
   862                           	
   863                           STR_5:	
   864  0820                     	retlw	83	;'S'
   865  0820  3453               	retlw	50	;'2'
   866  0821  3432               	retlw	0
   867  0822  3400               psect	strings
   868                           	
   869                           STR_6:	
   870  0823                     	retlw	83	;'S'
   871  0823  3453               	retlw	51	;'3'
   872  0824  3433               	retlw	0
   873  0825  3400               psect	strings
   874                           	
   875                           STR_1:	
   876  0826                     	retlw	37	;'%'
   877  0826  3425               	retlw	100	;'d'
   878  0827  3464               	retlw	0
   879  0828  3400               psect	strings
   880                           STR_3	equ	STR_2+0
   881  081A                     ; #config settings
   882                           global __CFG_FOSC$INTRC_NOCLKOUT
   883                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   884  0000                     global __CFG_WDTE$OFF
   885                           __CFG_WDTE$OFF equ 0x0
   886  0000                     global __CFG_PWRTE$OFF
   887                           __CFG_PWRTE$OFF equ 0x0
   888  0000                     global __CFG_MCLRE$OFF
   889                           __CFG_MCLRE$OFF equ 0x0
   890  0000                     global __CFG_CP$OFF
   891                           __CFG_CP$OFF equ 0x0
   892  0000                     global __CFG_CPD$OFF
   893                           __CFG_CPD$OFF equ 0x0
   894  0000                     global __CFG_BOREN$OFF
   895                           __CFG_BOREN$OFF equ 0x0
   896  0000                     global __CFG_IESO$OFF
   897                           __CFG_IESO$OFF equ 0x0
   898  0000                     global __CFG_FCMEN$OFF
   899                           __CFG_FCMEN$OFF equ 0x0
   900  0000                     global __CFG_LVP$OFF
   901                           __CFG_LVP$OFF equ 0x0
   902  0000                     global __CFG_BOR4V$BOR40V
   903                           __CFG_BOR4V$BOR40V equ 0x0
   904  0000                     global __CFG_WRT$OFF
   905                           __CFG_WRT$OFF equ 0x0
   906  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\s8h0."
   907                           	line	#
   908                           psect cinit,class=CODE,delta=2
   909                           global start_initialization
   910                           start_initialization:
   911  07EB                     
   912                           global __initialization
   913                           __initialization:
   914  07EB                     psect	bssBANK0,class=BANK0,space=1,noexec
   915                           global __pbssBANK0
   916                           __pbssBANK0:
   917  005A                     _sensorF2:
   918  005A                            ds      4
   919  005A                     
   920                           _float1:
   921  005E                            ds      4
   922  005E                     
   923                           _sensorF1:
   924  0062                            ds      4
   925  0062                     
   926                           _s3:
   927  0066                            ds      1
   928  0066                     
   929                           _toggle:
   930  0067                            ds      1
   931  0067                     
   932                           _dec2:
   933  0068                            ds      1
   934  0068                     
   935                           _entero2:
   936  0069                            ds      1
   937  0069                     
   938                           _counter:
   939  006A                            ds      1
   940  006A                     
   941                           _dec1:
   942  006B                            ds      1
   943  006B                     
   944                           _entero1:
   945  006C                            ds      1
   946  006C                     
   947                           _adc:
   948  006D                            ds      1
   949  006D                     
   950                           _cursor:
   951  006E                            ds      1
   952  006E                     
   953                           psect	bssBANK1,class=BANK1,space=1,noexec
   954                           global __pbssBANK1
   955                           __pbssBANK1:
   956  00A0                     _lux:
   957  00A0                            ds      4
   958  00A0                     
   959                           _float2:
   960  00A4                            ds      4
   961  00A4                     
   962                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\s8h0."
   963                           	line	#
   964                           psect clrtext,class=CODE,delta=2
   965                           global clear_ram0
   966                           ;	Called with FSR containing the base address, and
   967                           ;	W with the last address+1
   968                           clear_ram0:
   969  0A8C                     	clrwdt			;clear the watchdog before getting into this loop
   970  0A8C  0064               clrloop0:
   971  0A8D                     	clrf	indf		;clear RAM location pointed to by FSR
   972  0A8D  0180               	incf	fsr,f		;increment pointer
   973  0A8E  0A84               	xorwf	fsr,w		;XOR with final address
   974  0A8F  0604               	btfsc	status,2	;have we reached the end yet?
   975  0A90  1903               	retlw	0		;all done for this memory range, return
   976  0A91  3400               	xorwf	fsr,w		;XOR again to restore value
   977  0A92  0604               	goto	clrloop0		;do the next byte
   978  0A93  2A8D               
   979                           ; Clear objects allocated to BANK0
   980                           psect cinit,class=CODE,delta=2,merge=1
   981                           	bcf	status, 7	;select IRP bank0
   982  07EB  1383               	movlw	low(__pbssBANK0)
   983  07EC  305A               	movwf	fsr
   984  07ED  0084               	movlw	low((__pbssBANK0)+015h)
   985  07EE  306F               	fcall	clear_ram0
   986  07EF  120A  158A  228C  120A  118A  ; Clear objects allocated to BANK1
   987                           psect cinit,class=CODE,delta=2,merge=1
   988                           	movlw	low(__pbssBANK1)
   989  07F4  30A0               	movwf	fsr
   990  07F5  0084               	movlw	low((__pbssBANK1)+08h)
   991  07F6  30A8               	fcall	clear_ram0
   992  07F7  120A  158A  228C  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   993                           global end_of_initialization,__end_of__initialization
   994                           
   995                           ;End of C runtime variable initialization code
   996                           
   997                           end_of_initialization:
   998  07FC                     __end_of__initialization:
   999  07FC                     clrf status
  1000  07FC  0183               ljmp _main	;jump to C main() function
  1001  07FD  120A  118A  2869   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1002                           global __pcstackCOMMON
  1003                           __pcstackCOMMON:
  1004  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1005  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1006  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1007  0070                     ??_writeCharLCD:	; 1 bytes @ 0x0
  1008  0070                     ?_setup:	; 1 bytes @ 0x0
  1009  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1010  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1011  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1012  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1013  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1014  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1015  0070                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1016  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1017  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1018  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1019  0070                     ?_main:	; 1 bytes @ 0x0
  1020  0070                     	global	?__Umul8_16
  1021                           ?__Umul8_16:	; 2 bytes @ 0x0
  1022  0070                     	global	?_I2C_Master_Read
  1023                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1024  0070                     	global	?___lwdiv
  1025                           ?___lwdiv:	; 2 bytes @ 0x0
  1026  0070                     	global	?___lldiv
  1027                           ?___lldiv:	; 4 bytes @ 0x0
  1028  0070                     	global	?___fltol
  1029                           ?___fltol:	; 4 bytes @ 0x0
  1030  0070                     	global	?___xxtofl
  1031                           ?___xxtofl:	; 4 bytes @ 0x0
  1032  0070                     	global	__Umul8_16@multiplicand
  1033                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1034  0070                     	global	I2C_Master_Write@d
  1035                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1036  0070                     	global	I2C_Master_Read@a
  1037                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1038  0070                     	global	___lwdiv@divisor
  1039                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1040  0070                     	global	___lldiv@divisor
  1041                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1042  0070                     	global	___fltol@f1
  1043                           ___fltol@f1:	; 4 bytes @ 0x0
  1044  0070                     	global	___xxtofl@val
  1045                           ___xxtofl@val:	; 4 bytes @ 0x0
  1046  0070                     	ds	1
  1047  0070                     	global	writeCharLCD@character
  1048                           writeCharLCD@character:	; 1 bytes @ 0x1
  1049  0071                     	ds	1
  1050  0071                     ??__Umul8_16:	; 1 bytes @ 0x2
  1051  0072                     ??_I2C_Master_Write:	; 1 bytes @ 0x2
  1052  0072                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1053  0072                     ?_writeStrLCD:	; 1 bytes @ 0x2
  1054  0072                     	global	cmdLCD@cmd
  1055                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1056  0072                     	global	writeStrLCD@string
  1057                           writeStrLCD@string:	; 2 bytes @ 0x2
  1058  0072                     	global	___lwdiv@dividend
  1059                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1060  0072                     	ds	1
  1061  0072                     ?_setCursorLCD:	; 1 bytes @ 0x3
  1062  0073                     ??_clcLCD:	; 1 bytes @ 0x3
  1063  0073                     ??_initLCD:	; 1 bytes @ 0x3
  1064  0073                     	global	setCursorLCD@x
  1065                           setCursorLCD@x:	; 1 bytes @ 0x3
  1066  0073                     	ds	1
  1067  0073                     ??_setCursorLCD:	; 1 bytes @ 0x4
  1068  0074                     ??_writeStrLCD:	; 1 bytes @ 0x4
  1069  0074                     ??___fltol:	; 1 bytes @ 0x4
  1070  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1071  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  1072  0074                     	global	I2C_Master_Read@temp
  1073                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1074  0074                     	global	__Umul8_16@product
  1075                           __Umul8_16@product:	; 2 bytes @ 0x4
  1076  0074                     	global	___lldiv@dividend
  1077                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1078  0074                     	ds	1
  1079  0074                     	global	setCursorLCD@y
  1080                           setCursorLCD@y:	; 1 bytes @ 0x5
  1081  0075                     	global	___lwdiv@quotient
  1082                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1083  0075                     	ds	1
  1084  0075                     	global	__Umul8_16@word_mpld
  1085                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1086  0076                     	ds	1
  1087  0076                     	global	___lwdiv@counter
  1088                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1089  0077                     	global	writeStrLCD@cont
  1090                           writeStrLCD@cont:	; 2 bytes @ 0x7
  1091  0077                     	ds	1
  1092  0077                     ??___lldiv:	; 1 bytes @ 0x8
  1093  0078                     	global	?___lwmod
  1094                           ?___lwmod:	; 2 bytes @ 0x8
  1095  0078                     	global	___xxtofl@sign
  1096                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1097  0078                     	global	__Umul8_16@multiplier
  1098                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1099  0078                     	global	___lwmod@divisor
  1100                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1101  0078                     	ds	1
  1102  0078                     	global	___fltol@sign1
  1103                           ___fltol@sign1:	; 1 bytes @ 0x9
  1104  0079                     	global	___xxtofl@exp
  1105                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1106  0079                     	global	___lldiv@quotient
  1107                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1108  0079                     	ds	1
  1109  0079                     	global	___fltol@exp1
  1110                           ___fltol@exp1:	; 1 bytes @ 0xA
  1111  007A                     	global	___lwmod@dividend
  1112                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1113  007A                     	global	___xxtofl@arg
  1114                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1115  007A                     	ds	2
  1116  007A                     ??___lwmod:	; 1 bytes @ 0xC
  1117  007C                     	ds	1
  1118  007C                     	global	___lldiv@counter
  1119                           ___lldiv@counter:	; 1 bytes @ 0xD
  1120  007D                     	global	___lwmod@counter
  1121                           ___lwmod@counter:	; 1 bytes @ 0xD
  1122  007D                     	ds	1
  1123  007D                     ??___flneg:	; 1 bytes @ 0xE
  1124  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1125                           global __pcstackBANK0
  1126                           __pcstackBANK0:
  1127  0020                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1128  0020                     	global	?_sprintf
  1129                           ?_sprintf:	; 2 bytes @ 0x0
  1130  0020                     	global	?___flneg
  1131                           ?___flneg:	; 4 bytes @ 0x0
  1132  0020                     	global	sprintf@f
  1133                           sprintf@f:	; 1 bytes @ 0x0
  1134  0020                     	global	I2C_Master_Init@c
  1135                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1136  0020                     	global	___flneg@f1
  1137                           ___flneg@f1:	; 4 bytes @ 0x0
  1138  0020                     	ds	3
  1139  0020                     ??_sprintf:	; 1 bytes @ 0x3
  1140  0023                     	ds	1
  1141  0023                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1142  0024                     	global	?___fladd
  1143                           ?___fladd:	; 4 bytes @ 0x4
  1144  0024                     	global	___fladd@b
  1145                           ___fladd@b:	; 4 bytes @ 0x4
  1146  0024                     	ds	2
  1147  0024                     	global	sprintf@ap
  1148                           sprintf@ap:	; 1 bytes @ 0x6
  1149  0026                     	ds	1
  1150  0026                     	global	sprintf@flag
  1151                           sprintf@flag:	; 1 bytes @ 0x7
  1152  0027                     	ds	1
  1153  0027                     ??_setup:	; 1 bytes @ 0x8
  1154  0028                     	global	sprintf@prec
  1155                           sprintf@prec:	; 1 bytes @ 0x8
  1156  0028                     	global	___fladd@a
  1157                           ___fladd@a:	; 4 bytes @ 0x8
  1158  0028                     	ds	1
  1159  0028                     	global	sprintf@val
  1160                           sprintf@val:	; 2 bytes @ 0x9
  1161  0029                     	ds	2
  1162  0029                     	global	sprintf@sp
  1163                           sprintf@sp:	; 1 bytes @ 0xB
  1164  002B                     	ds	1
  1165  002B                     ??___fladd:	; 1 bytes @ 0xC
  1166  002C                     	global	sprintf@c
  1167                           sprintf@c:	; 1 bytes @ 0xC
  1168  002C                     	ds	1
  1169  002C                     ??_writeIntLCD:	; 1 bytes @ 0xD
  1170  002D                     	ds	3
  1171  002D                     	global	writeIntLCD@buffer
  1172                           writeIntLCD@buffer:	; 4 bytes @ 0x10
  1173  0030                     	ds	4
  1174  0030                     	global	writeIntLCD@numero
  1175                           writeIntLCD@numero:	; 1 bytes @ 0x14
  1176  0034                     	ds	1
  1177  0034                     ?_writeFloat:	; 1 bytes @ 0x15
  1178  0035                     	global	writeFloat@decimal
  1179                           writeFloat@decimal:	; 1 bytes @ 0x15
  1180  0035                     	ds	1
  1181  0035                     	global	writeFloat@initPos
  1182                           writeFloat@initPos:	; 1 bytes @ 0x16
  1183  0036                     	ds	1
  1184  0036                     ??_writeFloat:	; 1 bytes @ 0x17
  1185  0037                     	ds	1
  1186  0037                     	global	writeFloat@integer
  1187                           writeFloat@integer:	; 1 bytes @ 0x18
  1188  0038                     	global	___fladd@signs
  1189                           ___fladd@signs:	; 1 bytes @ 0x18
  1190  0038                     	ds	1
  1191  0038                     	global	___fladd@aexp
  1192                           ___fladd@aexp:	; 1 bytes @ 0x19
  1193  0039                     	ds	1
  1194  0039                     	global	___fladd@bexp
  1195                           ___fladd@bexp:	; 1 bytes @ 0x1A
  1196  003A                     	ds	1
  1197  003A                     	global	___fladd@grs
  1198                           ___fladd@grs:	; 1 bytes @ 0x1B
  1199  003B                     	ds	1
  1200  003B                     	global	?___flmul
  1201                           ?___flmul:	; 4 bytes @ 0x1C
  1202  003C                     	global	___flmul@b
  1203                           ___flmul@b:	; 4 bytes @ 0x1C
  1204  003C                     	ds	4
  1205  003C                     	global	___flmul@a
  1206                           ___flmul@a:	; 4 bytes @ 0x20
  1207  0040                     	ds	4
  1208  0040                     ??___flmul:	; 1 bytes @ 0x24
  1209  0044                     	ds	5
  1210  0044                     	global	___flmul@sign
  1211                           ___flmul@sign:	; 1 bytes @ 0x29
  1212  0049                     	ds	1
  1213  0049                     	global	___flmul@grs
  1214                           ___flmul@grs:	; 4 bytes @ 0x2A
  1215  004A                     	ds	4
  1216  004A                     	global	___flmul@aexp
  1217                           ___flmul@aexp:	; 1 bytes @ 0x2E
  1218  004E                     	ds	1
  1219  004E                     	global	___flmul@bexp
  1220                           ___flmul@bexp:	; 1 bytes @ 0x2F
  1221  004F                     	ds	1
  1222  004F                     	global	___flmul@prod
  1223                           ___flmul@prod:	; 4 bytes @ 0x30
  1224  0050                     	ds	4
  1225  0050                     	global	___flmul@temp
  1226                           ___flmul@temp:	; 2 bytes @ 0x34
  1227  0054                     	ds	2
  1228  0054                     ??_main:	; 1 bytes @ 0x36
  1229  0056                     	ds	4
  1230  0056                     ;!
  1231                           ;!Data Sizes:
  1232                           ;!    Strings     15
  1233                           ;!    Constant    10
  1234                           ;!    Data        0
  1235                           ;!    BSS         29
  1236                           ;!    Persistent  0
  1237                           ;!    Stack       0
  1238                           ;!
  1239                           ;!Auto Spaces:
  1240                           ;!    Space          Size  Autos    Used
  1241                           ;!    COMMON           14     14      14
  1242                           ;!    BANK0            80     58      79
  1243                           ;!    BANK1            80      0       8
  1244                           ;!    BANK3            96      0       0
  1245                           ;!    BANK2            96      0       0
  1246                           
  1247                           ;!
  1248                           ;!Pointer List with Targets:
  1249                           ;!
  1250                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1251                           ;!		 -> STR_1(CODE[3]), 
  1252                           ;!
  1253                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
  1254                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1255                           ;!
  1256                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1257                           ;!		 -> ?_sprintf(BANK0[2]), 
  1258                           ;!
  1259                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
  1260                           ;!		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 
  1261                           ;!		 -> STR_2(CODE[3]), writeIntLCD@buffer(BANK0[4]), 
  1262                           ;!
  1263                           
  1264                           
  1265                           ;!
  1266                           ;!Critical Paths under _main in COMMON
  1267                           ;!
  1268                           ;!    _main->___xxtofl
  1269                           ;!    _sprintf->___lwmod
  1270                           ;!    ___lwmod->___lwdiv
  1271                           ;!    _writeStrLCD->_writeCharLCD
  1272                           ;!    _setCursorLCD->_cmdLCD
  1273                           ;!    _initLCD->_cmdLCD
  1274                           ;!    _clcLCD->_cmdLCD
  1275                           ;!    _I2C_Master_Init->___lldiv
  1276                           ;!    ___flneg->___xxtofl
  1277                           ;!    ___flmul->___xxtofl
  1278                           ;!    ___fladd->___xxtofl
  1279                           ;!
  1280                           ;!Critical Paths under _main in BANK0
  1281                           ;!
  1282                           ;!    _main->___flmul
  1283                           ;!    _writeFloat->_writeIntLCD
  1284                           ;!    _writeIntLCD->_sprintf
  1285                           ;!    _setup->_I2C_Master_Init
  1286                           ;!    ___flmul->___fladd
  1287                           ;!    ___fladd->___flneg
  1288                           ;!
  1289                           ;!Critical Paths under _main in BANK1
  1290                           ;!
  1291                           ;!    None.
  1292                           ;!
  1293                           ;!Critical Paths under _main in BANK3
  1294                           ;!
  1295                           ;!    None.
  1296                           ;!
  1297                           ;!Critical Paths under _main in BANK2
  1298                           ;!
  1299                           ;!    None.
  1300                           
  1301 ;;
  1302 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1303 ;;
  1304                           
  1305                           ;!
  1306                           ;!Call Graph Tables:
  1307                           ;!
  1308                           ;! ---------------------------------------------------------------------------------
  1309                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1310                           ;! ---------------------------------------------------------------------------------
  1311                           ;! (0) _main                                                 4     4      0   14116
  1312                           ;!                                             54 BANK0      4     4      0
  1313                           ;!                    _I2C_Master_Read
  1314                           ;!                   _I2C_Master_Start
  1315                           ;!                    _I2C_Master_Stop
  1316                           ;!                   _I2C_Master_Write
  1317                           ;!                            ___fladd
  1318                           ;!                            ___flmul
  1319                           ;!                            ___flneg
  1320                           ;!                            ___fltol
  1321                           ;!                           ___xxtofl
  1322                           ;!                       _setCursorLCD
  1323                           ;!                              _setup
  1324                           ;!                       _writeCharLCD
  1325                           ;!                         _writeFloat
  1326                           ;!                        _writeIntLCD
  1327                           ;!                        _writeStrLCD
  1328                           ;! ---------------------------------------------------------------------------------
  1329                           ;! (1) _writeFloat                                           4     2      2    3001
  1330                           ;!                                             21 BANK0      4     2      2
  1331                           ;!                       _setCursorLCD
  1332                           ;!                       _writeCharLCD
  1333                           ;!                        _writeIntLCD
  1334                           ;! ---------------------------------------------------------------------------------
  1335                           ;! (1) _writeIntLCD                                          8     8      0    1855
  1336                           ;!                                             13 BANK0      8     8      0
  1337                           ;!                            _sprintf
  1338                           ;!                        _writeStrLCD
  1339                           ;! ---------------------------------------------------------------------------------
  1340                           ;! (2) _sprintf                                             21    18      3    1211
  1341                           ;!                                              0 BANK0     13    10      3
  1342                           ;!                            ___lwdiv
  1343                           ;!                            ___lwmod
  1344                           ;! ---------------------------------------------------------------------------------
  1345                           ;! (3) ___lwmod                                              6     2      4     311
  1346                           ;!                                              8 COMMON     6     2      4
  1347                           ;!                            ___lwdiv (ARG)
  1348                           ;! ---------------------------------------------------------------------------------
  1349                           ;! (3) ___lwdiv                                              8     4      4     314
  1350                           ;!                                              0 COMMON     8     4      4
  1351                           ;! ---------------------------------------------------------------------------------
  1352                           ;! (1) _setup                                                1     1      0    1796
  1353                           ;!                                              8 BANK0      1     1      0
  1354                           ;!                    _I2C_Master_Init
  1355                           ;!                             _clcLCD
  1356                           ;!                            _initLCD
  1357                           ;!                       _setCursorLCD
  1358                           ;!                        _writeStrLCD
  1359                           ;! ---------------------------------------------------------------------------------
  1360                           ;! (1) _writeStrLCD                                          7     5      2     568
  1361                           ;!                                              2 COMMON     7     5      2
  1362                           ;!                       _writeCharLCD
  1363                           ;! ---------------------------------------------------------------------------------
  1364                           ;! (2) _writeCharLCD                                         2     2      0      22
  1365                           ;!                                              0 COMMON     2     2      0
  1366                           ;! ---------------------------------------------------------------------------------
  1367                           ;! (2) _setCursorLCD                                         3     2      1     772
  1368                           ;!                                              3 COMMON     3     2      1
  1369                           ;!                             _cmdLCD
  1370                           ;! ---------------------------------------------------------------------------------
  1371                           ;! (2) _initLCD                                              2     2      0      22
  1372                           ;!                                              3 COMMON     2     2      0
  1373                           ;!                             _cmdLCD
  1374                           ;! ---------------------------------------------------------------------------------
  1375                           ;! (2) _clcLCD                                               0     0      0      22
  1376                           ;!                             _cmdLCD
  1377                           ;! ---------------------------------------------------------------------------------
  1378                           ;! (3) _cmdLCD                                               3     3      0      22
  1379                           ;!                                              0 COMMON     3     3      0
  1380                           ;! ---------------------------------------------------------------------------------
  1381                           ;! (2) _I2C_Master_Init                                      8     4      4     412
  1382                           ;!                                              0 BANK0      8     4      4
  1383                           ;!                            ___lldiv
  1384                           ;! ---------------------------------------------------------------------------------
  1385                           ;! (3) ___lldiv                                             14     6      8     314
  1386                           ;!                                              0 COMMON    14     6      8
  1387                           ;! ---------------------------------------------------------------------------------
  1388                           ;! (1) ___xxtofl                                            14    10      4     474
  1389                           ;!                                              0 COMMON    14    10      4
  1390                           ;! ---------------------------------------------------------------------------------
  1391                           ;! (1) ___fltol                                             11     7      4     381
  1392                           ;!                                              0 COMMON    11     7      4
  1393                           ;! ---------------------------------------------------------------------------------
  1394                           ;! (1) ___flneg                                              4     0      4     121
  1395                           ;!                                              0 BANK0      4     0      4
  1396                           ;!                           ___xxtofl (ARG)
  1397                           ;! ---------------------------------------------------------------------------------
  1398                           ;! (1) ___flmul                                             26    18      8    2569
  1399                           ;!                                             28 BANK0     26    18      8
  1400                           ;!                          __Umul8_16
  1401                           ;!                            ___fladd (ARG)
  1402                           ;!                            ___flneg (ARG)
  1403                           ;!                           ___xxtofl (ARG)
  1404                           ;! ---------------------------------------------------------------------------------
  1405                           ;! (2) __Umul8_16                                            9     7      2     799
  1406                           ;!                                              0 COMMON     9     7      2
  1407                           ;! ---------------------------------------------------------------------------------
  1408                           ;! (1) ___fladd                                             24    16      8    2262
  1409                           ;!                                              4 BANK0     24    16      8
  1410                           ;!                            ___flneg (ARG)
  1411                           ;!                           ___xxtofl (ARG)
  1412                           ;! ---------------------------------------------------------------------------------
  1413                           ;! (1) _I2C_Master_Write                                     2     0      2      98
  1414                           ;!                                              0 COMMON     2     0      2
  1415                           ;!                    _I2C_Master_Wait
  1416                           ;! ---------------------------------------------------------------------------------
  1417                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  1418                           ;!                    _I2C_Master_Wait
  1419                           ;! ---------------------------------------------------------------------------------
  1420                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  1421                           ;!                    _I2C_Master_Wait
  1422                           ;! ---------------------------------------------------------------------------------
  1423                           ;! (1) _I2C_Master_Read                                      6     4      2     197
  1424                           ;!                                              0 COMMON     6     4      2
  1425                           ;!                    _I2C_Master_Wait
  1426                           ;! ---------------------------------------------------------------------------------
  1427                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  1428                           ;! ---------------------------------------------------------------------------------
  1429                           ;! Estimated maximum stack depth 3
  1430                           ;! ---------------------------------------------------------------------------------
  1431                           ;!
  1432                           ;! Call Graph Graphs:
  1433                           ;!
  1434                           ;! _main (ROOT)
  1435                           ;!   _I2C_Master_Read
  1436                           ;!     _I2C_Master_Wait
  1437                           ;!   _I2C_Master_Start
  1438                           ;!     _I2C_Master_Wait
  1439                           ;!   _I2C_Master_Stop
  1440                           ;!     _I2C_Master_Wait
  1441                           ;!   _I2C_Master_Write
  1442                           ;!     _I2C_Master_Wait
  1443                           ;!   ___fladd
  1444                           ;!     ___flneg (ARG)
  1445                           ;!       ___xxtofl (ARG)
  1446                           ;!     ___xxtofl (ARG)
  1447                           ;!   ___flmul
  1448                           ;!     __Umul8_16
  1449                           ;!     ___fladd (ARG)
  1450                           ;!       ___flneg (ARG)
  1451                           ;!         ___xxtofl (ARG)
  1452                           ;!       ___xxtofl (ARG)
  1453                           ;!     ___flneg (ARG)
  1454                           ;!       ___xxtofl (ARG)
  1455                           ;!     ___xxtofl (ARG)
  1456                           ;!   ___flneg
  1457                           ;!     ___xxtofl (ARG)
  1458                           ;!   ___fltol
  1459                           ;!   ___xxtofl
  1460                           ;!   _setCursorLCD
  1461                           ;!     _cmdLCD
  1462                           ;!   _setup
  1463                           ;!     _I2C_Master_Init
  1464                           ;!       ___lldiv
  1465                           ;!     _clcLCD
  1466                           ;!       _cmdLCD
  1467                           ;!     _initLCD
  1468                           ;!       _cmdLCD
  1469                           ;!     _setCursorLCD
  1470                           ;!       _cmdLCD
  1471                           ;!     _writeStrLCD
  1472                           ;!       _writeCharLCD
  1473                           ;!   _writeCharLCD
  1474                           ;!   _writeFloat
  1475                           ;!     _setCursorLCD
  1476                           ;!       _cmdLCD
  1477                           ;!     _writeCharLCD
  1478                           ;!     _writeIntLCD
  1479                           ;!       _sprintf
  1480                           ;!         ___lwdiv
  1481                           ;!         ___lwmod
  1482                           ;!           ___lwdiv (ARG)
  1483                           ;!       _writeStrLCD
  1484                           ;!         _writeCharLCD
  1485                           ;!   _writeIntLCD
  1486                           ;!     _sprintf
  1487                           ;!       ___lwdiv
  1488                           ;!       ___lwmod
  1489                           ;!         ___lwdiv (ARG)
  1490                           ;!     _writeStrLCD
  1491                           ;!       _writeCharLCD
  1492                           ;!   _writeStrLCD
  1493                           ;!     _writeCharLCD
  1494                           ;!
  1495                           
  1496                           ;! Address spaces:
  1497                           
  1498                           ;!Name               Size   Autos  Total    Cost      Usage
  1499                           ;!BITCOMMON            E      0       0       0        0.0%
  1500                           ;!EEDATA             100      0       0       0        0.0%
  1501                           ;!NULL                 0      0       0       0        0.0%
  1502                           ;!CODE                 0      0       0       0        0.0%
  1503                           ;!COMMON               E      E       E       1      100.0%
  1504                           ;!BITSFR0              0      0       0       1        0.0%
  1505                           ;!SFR0                 0      0       0       1        0.0%
  1506                           ;!BITSFR1              0      0       0       2        0.0%
  1507                           ;!SFR1                 0      0       0       2        0.0%
  1508                           ;!STACK                0      0       0       2        0.0%
  1509                           ;!ABS                  0      0      65       3        0.0%
  1510                           ;!BITBANK0            50      0       0       4        0.0%
  1511                           ;!BITSFR3              0      0       0       4        0.0%
  1512                           ;!SFR3                 0      0       0       4        0.0%
  1513                           ;!BANK0               50     3A      4F       5       98.8%
  1514                           ;!BITSFR2              0      0       0       5        0.0%
  1515                           ;!SFR2                 0      0       0       5        0.0%
  1516                           ;!BITBANK1            50      0       0       6        0.0%
  1517                           ;!BANK1               50      0       8       7       10.0%
  1518                           ;!BITBANK3            60      0       0       8        0.0%
  1519                           ;!BANK3               60      0       0       9        0.0%
  1520                           ;!BITBANK2            60      0       0      10        0.0%
  1521                           ;!BANK2               60      0       0      11        0.0%
  1522                           ;!DATA                 0      0      65      12        0.0%
  1523                           
  1524                           	global	_main
  1525                           
  1526 ;; *************** function _main *****************
  1527 ;; Defined at:
  1528 ;;		line 60 in file "mainM.c"
  1529 ;; Parameters:    Size  Location     Type
  1530 ;;		None
  1531 ;; Auto vars:     Size  Location     Type
  1532 ;;		None
  1533 ;; Return value:  Size  Location     Type
  1534 ;;                  1    wreg      void 
  1535 ;; Registers used:
  1536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1537 ;; Tracked objects:
  1538 ;;		On entry : B00/0
  1539 ;;		On exit  : 0/0
  1540 ;;		Unchanged: 0/0
  1541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1542 ;;      Params:         0       0       0       0       0
  1543 ;;      Locals:         0       0       0       0       0
  1544 ;;      Temps:          0       4       0       0       0
  1545 ;;      Totals:         0       4       0       0       0
  1546 ;;Total ram usage:        4 bytes
  1547 ;; Hardware stack levels required when called:    4
  1548 ;; This function calls:
  1549 ;;		_I2C_Master_Read
  1550 ;;		_I2C_Master_Start
  1551 ;;		_I2C_Master_Stop
  1552 ;;		_I2C_Master_Write
  1553 ;;		___fladd
  1554 ;;		___flmul
  1555 ;;		___flneg
  1556 ;;		___fltol
  1557 ;;		___xxtofl
  1558 ;;		_setCursorLCD
  1559 ;;		_setup
  1560 ;;		_writeCharLCD
  1561 ;;		_writeFloat
  1562 ;;		_writeIntLCD
  1563 ;;		_writeStrLCD
  1564 ;; This function is called by:
  1565 ;;		Startup code after reset
  1566 ;; This function uses a non-reentrant model
  1567 ;;
  1568                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1569                           	file	"mainM.c"
  1570                           	line	60
  1571                           global __pmaintext
  1572                           __pmaintext:	;psect for function _main
  1573  0069                     psect	maintext
  1574                           	file	"mainM.c"
  1575                           	line	60
  1576                           	global	__size_of_main
  1577                           	__size_of_main	equ	__end_of_main-_main
  1578  0151                     	
  1579                           _main:	
  1580  0069                     ;incstack = 0
  1581                           	opt	stack 4
  1582                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1583                           	line	61
  1584                           	
  1585                           l2297:	
  1586  0069                     ;mainM.c: 61:     setup();
  1587                           	fcall	_setup
  1588  0069  120A  118A  200A  120A  118A  	goto	l2299
  1589  006E  286F               	line	62
  1590                           ;mainM.c: 62:     while(1){
  1591                           	
  1592                           l176:	
  1593  006F                     	line	66
  1594                           	
  1595                           l2299:	
  1596  006F                     ;mainM.c: 66:         I2C_Master_Start();
  1597                           	fcall	_I2C_Master_Start
  1598  006F  120A  158A  2294  120A  118A  	line	67
  1599                           	
  1600                           l2301:	
  1601  0074                     ;mainM.c: 67:         I2C_Master_Write(0x69);
  1602                           	movlw	069h
  1603  0074  3069               	movwf	(I2C_Master_Write@d)
  1604  0075  00F0               	movlw	0
  1605  0076  3000               	movwf	((I2C_Master_Write@d))+1
  1606  0077  00F1               	fcall	_I2C_Master_Write
  1607  0078  120A  158A  22A6  120A  118A  	line	68
  1608                           	
  1609                           l2303:	
  1610  007D                     ;mainM.c: 68:         if(toggle%2){
  1611                           	bcf	status, 5	;RP0=0, select bank0
  1612  007D  1283               	bcf	status, 6	;RP1=0, select bank0
  1613  007E  1303               	btfss	(_toggle),(0)&7
  1614  007F  1C67               	goto	u3021
  1615  0080  2882               	goto	u3020
  1616  0081  2883               u3021:
  1617  0082                     	goto	l2307
  1618  0082  2892               u3020:
  1619  0083                     	line	69
  1620                           	
  1621                           l2305:	
  1622  0083                     ;mainM.c: 69:             adc = I2C_Master_Read(0);
  1623                           	movlw	0
  1624  0083  3000               	movwf	(I2C_Master_Read@a)
  1625  0084  00F0               	movwf	(I2C_Master_Read@a+1)
  1626  0085  00F1               	fcall	_I2C_Master_Read
  1627  0086  120A  158A  2356  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1628  008B  0870               	bcf	status, 5	;RP0=0, select bank0
  1629  008C  1283               	bcf	status, 6	;RP1=0, select bank0
  1630  008D  1303               	movwf	(??_main+0)+0
  1631  008E  00D6               	movf	(??_main+0)+0,w
  1632  008F  0856               	movwf	(_adc)
  1633  0090  00ED               	line	70
  1634                           ;mainM.c: 70:         }else{
  1635                           	goto	l2309
  1636  0091  28A1               	
  1637                           l177:	
  1638  0092                     	line	71
  1639                           	
  1640                           l2307:	
  1641  0092                     ;mainM.c: 71:             counter = I2C_Master_Read(0);
  1642                           	movlw	0
  1643  0092  3000               	movwf	(I2C_Master_Read@a)
  1644  0093  00F0               	movwf	(I2C_Master_Read@a+1)
  1645  0094  00F1               	fcall	_I2C_Master_Read
  1646  0095  120A  158A  2356  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1647  009A  0870               	bcf	status, 5	;RP0=0, select bank0
  1648  009B  1283               	bcf	status, 6	;RP1=0, select bank0
  1649  009C  1303               	movwf	(??_main+0)+0
  1650  009D  00D6               	movf	(??_main+0)+0,w
  1651  009E  0856               	movwf	(_counter)
  1652  009F  00EA               	goto	l2309
  1653  00A0  28A1               	line	72
  1654                           ;mainM.c: 72:         }
  1655                           	
  1656                           l178:	
  1657  00A1                     	line	73
  1658                           	
  1659                           l2309:	
  1660  00A1                     ;mainM.c: 73:         toggle++;
  1661                           	movlw	low(01h)
  1662  00A1  3001               	movwf	(??_main+0)+0
  1663  00A2  00D6               	movf	(??_main+0)+0,w
  1664  00A3  0856               	addwf	(_toggle),f
  1665  00A4  07E7               	line	74
  1666                           	
  1667                           l2311:	
  1668  00A5                     ;mainM.c: 74:         I2C_Master_Stop();
  1669                           	fcall	_I2C_Master_Stop
  1670  00A5  120A  158A  229D  120A  118A  	line	75
  1671                           	
  1672                           l2313:	
  1673  00AA                     ;mainM.c: 75:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1674                           	opt asmopt_push
  1675                           opt asmopt_off
  1676                           movlw	13
  1677  00AA  300D               	bcf	status, 5	;RP0=0, select bank0
  1678  00AB  1283               	bcf	status, 6	;RP1=0, select bank0
  1679  00AC  1303               movwf	((??_main+0)+0+1),f
  1680  00AD  00D7               	movlw	251
  1681  00AE  30FB               movwf	((??_main+0)+0),f
  1682  00AF  00D6               	u3037:
  1683  00B0                     decfsz	((??_main+0)+0),f
  1684  00B0  0BD6               	goto	u3037
  1685  00B1  28B0               	decfsz	((??_main+0)+0+1),f
  1686  00B2  0BD7               	goto	u3037
  1687  00B3  28B0               opt asmopt_pop
  1688                           
  1689                           	line	78
  1690                           	
  1691                           l2315:	
  1692  00B4                     ;mainM.c: 78:         setCursorLCD(2, 15);
  1693                           	movlw	low(0Fh)
  1694  00B4  300F               	bcf	status, 5	;RP0=0, select bank0
  1695  00B5  1283               	bcf	status, 6	;RP1=0, select bank0
  1696  00B6  1303               	movwf	(??_main+0)+0
  1697  00B7  00D6               	movf	(??_main+0)+0,w
  1698  00B8  0856               	movwf	(setCursorLCD@x)
  1699  00B9  00F3               	movlw	low(02h)
  1700  00BA  3002               	fcall	_setCursorLCD
  1701  00BB  120A  158A  22F1  120A  118A  	line	79
  1702                           	
  1703                           l2317:	
  1704  00C0                     ;mainM.c: 79:         writeIntLCD(adc);
  1705                           	bcf	status, 5	;RP0=0, select bank0
  1706  00C0  1283               	bcf	status, 6	;RP1=0, select bank0
  1707  00C1  1303               	movf	(_adc),w
  1708  00C2  086D               	fcall	_writeIntLCD
  1709  00C3  120A  158A  230E  120A  118A  	line	80
  1710                           	
  1711                           l2319:	
  1712  00C8                     ;mainM.c: 80:         writeStrLCD("  ");
  1713                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  1714  00C8  300B               	movwf	(writeStrLCD@string)
  1715  00C9  00F2               	movlw	80h
  1716  00CA  3080               	movwf	(writeStrLCD@string+1)
  1717  00CB  00F3               	fcall	_writeStrLCD
  1718  00CC  120A  158A  2438  120A  118A  	line	82
  1719                           	
  1720                           l2321:	
  1721  00D1                     ;mainM.c: 82:         sensorF1 = (float) (adc-20) * 3.04;
  1722                           	movlw	0x40
  1723  00D1  3040               	bcf	status, 5	;RP0=0, select bank0
  1724  00D2  1283               	bcf	status, 6	;RP1=0, select bank0
  1725  00D3  1303               	movwf	(___flmul@b+3)
  1726  00D4  00BF               	movlw	0x42
  1727  00D5  3042               	movwf	(___flmul@b+2)
  1728  00D6  00BE               	movlw	0x8f
  1729  00D7  308F               	movwf	(___flmul@b+1)
  1730  00D8  00BD               	movlw	0x5c
  1731  00D9  305C               	movwf	(___flmul@b)
  1732  00DA  00BC               
  1733                           	movf	(_adc),w
  1734  00DB  086D               	addlw	low(-20)
  1735  00DC  3EEC               	movwf	(___xxtofl@val)
  1736  00DD  00F0               	movlw	high(-20)
  1737  00DE  30FF               	skipnc
  1738  00DF  1803               	movlw	(high(-20)+1)&0ffh
  1739  00E0  3000               	movwf	((___xxtofl@val))+1
  1740  00E1  00F1               	clrf	(___xxtofl@val)+2
  1741  00E2  01F2               	btfsc	(___xxtofl@val)+1,7
  1742  00E3  1BF1               	decf	2+(___xxtofl@val),f
  1743  00E4  03F2               	movf	(___xxtofl@val)+2,w
  1744  00E5  0872               	movwf	3+(___xxtofl@val)
  1745  00E6  00F3               	movlw	low(01h)
  1746  00E7  3001               	fcall	___xxtofl
  1747  00E8  120A  158A  263E  120A  118A  	movf	(3+(?___xxtofl)),w
  1748  00ED  0873               	bcf	status, 5	;RP0=0, select bank0
  1749  00EE  1283               	bcf	status, 6	;RP1=0, select bank0
  1750  00EF  1303               	movwf	(___flmul@a+3)
  1751  00F0  00C3               	movf	(2+(?___xxtofl)),w
  1752  00F1  0872               	movwf	(___flmul@a+2)
  1753  00F2  00C2               	movf	(1+(?___xxtofl)),w
  1754  00F3  0871               	movwf	(___flmul@a+1)
  1755  00F4  00C1               	movf	(0+(?___xxtofl)),w
  1756  00F5  0870               	movwf	(___flmul@a)
  1757  00F6  00C0               
  1758                           	fcall	___flmul
  1759  00F7  120A  118A  2476  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1760  00FC  1283               	bcf	status, 6	;RP1=0, select bank0
  1761  00FD  1303               	movf	(3+(?___flmul)),w
  1762  00FE  083F               	movwf	(_sensorF1+3)
  1763  00FF  00E5               	movf	(2+(?___flmul)),w
  1764  0100  083E               	movwf	(_sensorF1+2)
  1765  0101  00E4               	movf	(1+(?___flmul)),w
  1766  0102  083D               	movwf	(_sensorF1+1)
  1767  0103  00E3               	movf	(0+(?___flmul)),w
  1768  0104  083C               	movwf	(_sensorF1)
  1769  0105  00E2               
  1770                           	line	83
  1771                           	
  1772                           l2323:	
  1773  0106                     ;mainM.c: 83:         entero1 = (int) sensorF1;
  1774                           	movf	(_sensorF1+3),w
  1775  0106  0865               	movwf	(___fltol@f1+3)
  1776  0107  00F3               	movf	(_sensorF1+2),w
  1777  0108  0864               	movwf	(___fltol@f1+2)
  1778  0109  00F2               	movf	(_sensorF1+1),w
  1779  010A  0863               	movwf	(___fltol@f1+1)
  1780  010B  00F1               	movf	(_sensorF1),w
  1781  010C  0862               	movwf	(___fltol@f1)
  1782  010D  00F0               
  1783                           	fcall	___fltol
  1784  010E  120A  158A  25A4  120A  118A  	movf	(0+(?___fltol)),w
  1785  0113  0870               	bcf	status, 5	;RP0=0, select bank0
  1786  0114  1283               	bcf	status, 6	;RP1=0, select bank0
  1787  0115  1303               	movwf	(??_main+0)+0
  1788  0116  00D6               	movf	(??_main+0)+0,w
  1789  0117  0856               	movwf	(_entero1)
  1790  0118  00EC               	line	84
  1791                           	
  1792                           l2325:	
  1793  0119                     ;mainM.c: 84:         float1 = (sensorF1 - entero1)*100;
  1794                           	movlw	0x42
  1795  0119  3042               	movwf	(___flmul@b+3)
  1796  011A  00BF               	movlw	0xc8
  1797  011B  30C8               	movwf	(___flmul@b+2)
  1798  011C  00BE               	movlw	0x0
  1799  011D  3000               	movwf	(___flmul@b+1)
  1800  011E  00BD               	movlw	0x0
  1801  011F  3000               	movwf	(___flmul@b)
  1802  0120  00BC               
  1803                           	movf	(_sensorF1+3),w
  1804  0121  0865               	movwf	(___fladd@b+3)
  1805  0122  00A7               	movf	(_sensorF1+2),w
  1806  0123  0864               	movwf	(___fladd@b+2)
  1807  0124  00A6               	movf	(_sensorF1+1),w
  1808  0125  0863               	movwf	(___fladd@b+1)
  1809  0126  00A5               	movf	(_sensorF1),w
  1810  0127  0862               	movwf	(___fladd@b)
  1811  0128  00A4               
  1812                           	movf	(_entero1),w
  1813  0129  086C               	movwf	(??_main+0)+0
  1814  012A  00D6               	clrf	(??_main+0)+0+1
  1815  012B  01D7               	clrf	(??_main+0)+0+2
  1816  012C  01D8               	clrf	(??_main+0)+0+3
  1817  012D  01D9               	movf	3+(??_main+0)+0,w
  1818  012E  0859               	movwf	(___xxtofl@val+3)
  1819  012F  00F3               	movf	2+(??_main+0)+0,w
  1820  0130  0858               	movwf	(___xxtofl@val+2)
  1821  0131  00F2               	movf	1+(??_main+0)+0,w
  1822  0132  0857               	movwf	(___xxtofl@val+1)
  1823  0133  00F1               	movf	0+(??_main+0)+0,w
  1824  0134  0856               	movwf	(___xxtofl@val)
  1825  0135  00F0               
  1826                           	movlw	low(01h)
  1827  0136  3001               	fcall	___xxtofl
  1828  0137  120A  158A  263E  120A  118A  	movf	(3+(?___xxtofl)),w
  1829  013C  0873               	bcf	status, 5	;RP0=0, select bank0
  1830  013D  1283               	bcf	status, 6	;RP1=0, select bank0
  1831  013E  1303               	movwf	(___flneg@f1+3)
  1832  013F  00A3               	movf	(2+(?___xxtofl)),w
  1833  0140  0872               	movwf	(___flneg@f1+2)
  1834  0141  00A2               	movf	(1+(?___xxtofl)),w
  1835  0142  0871               	movwf	(___flneg@f1+1)
  1836  0143  00A1               	movf	(0+(?___xxtofl)),w
  1837  0144  0870               	movwf	(___flneg@f1)
  1838  0145  00A0               
  1839                           	fcall	___flneg
  1840  0146  120A  158A  22BF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1841  014B  1283               	bcf	status, 6	;RP1=0, select bank0
  1842  014C  1303               	movf	(3+(?___flneg)),w
  1843  014D  0823               	movwf	(___fladd@a+3)
  1844  014E  00AB               	movf	(2+(?___flneg)),w
  1845  014F  0822               	movwf	(___fladd@a+2)
  1846  0150  00AA               	movf	(1+(?___flneg)),w
  1847  0151  0821               	movwf	(___fladd@a+1)
  1848  0152  00A9               	movf	(0+(?___flneg)),w
  1849  0153  0820               	movwf	(___fladd@a)
  1850  0154  00A8               
  1851                           	fcall	___fladd
  1852  0155  120A  118A  21BA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1853  015A  1283               	bcf	status, 6	;RP1=0, select bank0
  1854  015B  1303               	movf	(3+(?___fladd)),w
  1855  015C  0827               	movwf	(___flmul@a+3)
  1856  015D  00C3               	movf	(2+(?___fladd)),w
  1857  015E  0826               	movwf	(___flmul@a+2)
  1858  015F  00C2               	movf	(1+(?___fladd)),w
  1859  0160  0825               	movwf	(___flmul@a+1)
  1860  0161  00C1               	movf	(0+(?___fladd)),w
  1861  0162  0824               	movwf	(___flmul@a)
  1862  0163  00C0               
  1863                           	fcall	___flmul
  1864  0164  120A  118A  2476  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1865  0169  1283               	bcf	status, 6	;RP1=0, select bank0
  1866  016A  1303               	movf	(3+(?___flmul)),w
  1867  016B  083F               	movwf	(_float1+3)
  1868  016C  00E1               	movf	(2+(?___flmul)),w
  1869  016D  083E               	movwf	(_float1+2)
  1870  016E  00E0               	movf	(1+(?___flmul)),w
  1871  016F  083D               	movwf	(_float1+1)
  1872  0170  00DF               	movf	(0+(?___flmul)),w
  1873  0171  083C               	movwf	(_float1)
  1874  0172  00DE               
  1875                           	line	85
  1876                           	
  1877                           l2327:	
  1878  0173                     ;mainM.c: 85:         dec1 = (int) float1;
  1879                           	movf	(_float1+3),w
  1880  0173  0861               	movwf	(___fltol@f1+3)
  1881  0174  00F3               	movf	(_float1+2),w
  1882  0175  0860               	movwf	(___fltol@f1+2)
  1883  0176  00F2               	movf	(_float1+1),w
  1884  0177  085F               	movwf	(___fltol@f1+1)
  1885  0178  00F1               	movf	(_float1),w
  1886  0179  085E               	movwf	(___fltol@f1)
  1887  017A  00F0               
  1888                           	fcall	___fltol
  1889  017B  120A  158A  25A4  120A  118A  	movf	(0+(?___fltol)),w
  1890  0180  0870               	bcf	status, 5	;RP0=0, select bank0
  1891  0181  1283               	bcf	status, 6	;RP1=0, select bank0
  1892  0182  1303               	movwf	(??_main+0)+0
  1893  0183  00D6               	movf	(??_main+0)+0,w
  1894  0184  0856               	movwf	(_dec1)
  1895  0185  00EB               	line	87
  1896                           	
  1897                           l2329:	
  1898  0186                     ;mainM.c: 87:         writeFloat(entero1, dec1, 1);
  1899                           	movf	(_dec1),w
  1900  0186  086B               	movwf	(??_main+0)+0
  1901  0187  00D6               	movf	(??_main+0)+0,w
  1902  0188  0856               	movwf	(writeFloat@decimal)
  1903  0189  00B5               	clrf	(writeFloat@initPos)
  1904  018A  01B6               	incf	(writeFloat@initPos),f
  1905  018B  0AB6               	movf	(_entero1),w
  1906  018C  086C               	fcall	_writeFloat
  1907  018D  120A  158A  2534  120A  118A  	line	88
  1908                           	
  1909                           l2331:	
  1910  0192                     ;mainM.c: 88:         setCursorLCD(2, 9);
  1911                           	movlw	low(09h)
  1912  0192  3009               	bcf	status, 5	;RP0=0, select bank0
  1913  0193  1283               	bcf	status, 6	;RP1=0, select bank0
  1914  0194  1303               	movwf	(??_main+0)+0
  1915  0195  00D6               	movf	(??_main+0)+0,w
  1916  0196  0856               	movwf	(setCursorLCD@x)
  1917  0197  00F3               	movlw	low(02h)
  1918  0198  3002               	fcall	_setCursorLCD
  1919  0199  120A  158A  22F1  120A  118A  	line	89
  1920                           	
  1921                           l2333:	
  1922  019E                     ;mainM.c: 89:         writeIntLCD(counter);
  1923                           	bcf	status, 5	;RP0=0, select bank0
  1924  019E  1283               	bcf	status, 6	;RP1=0, select bank0
  1925  019F  1303               	movf	(_counter),w
  1926  01A0  086A               	fcall	_writeIntLCD
  1927  01A1  120A  158A  230E  120A  118A  	line	90
  1928                           	
  1929                           l2335:	
  1930  01A6                     ;mainM.c: 90:         writeCharLCD(' ');
  1931                           	movlw	low(020h)
  1932  01A6  3020               	fcall	_writeCharLCD
  1933  01A7  120A  158A  22CE  120A  118A  	line	92
  1934                           	
  1935                           l2337:	
  1936  01AC                     ;mainM.c: 92:         writeStrLCD("  ");
  1937                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1938  01AC  300B               	movwf	(writeStrLCD@string)
  1939  01AD  00F2               	movlw	80h
  1940  01AE  3080               	movwf	(writeStrLCD@string+1)
  1941  01AF  00F3               	fcall	_writeStrLCD
  1942  01B0  120A  158A  2438  120A  118A  	goto	l2299
  1943  01B5  286F               	line	93
  1944                           ;mainM.c: 93:     }
  1945                           	
  1946                           l179:	
  1947  01B6                     	goto	l2299
  1948  01B6  286F               	
  1949                           l180:	
  1950  01B7                     	line	95
  1951                           ;mainM.c: 94:     return;
  1952                           	
  1953                           l181:	
  1954  01B7                     	global	start
  1955                           	ljmp	start
  1956  01B7  120A  118A  2800   	opt stack 0
  1957                           GLOBAL	__end_of_main
  1958                           	__end_of_main:
  1959  01BA                     	signat	_main,89
  1960                           	global	_writeFloat
  1961                           
  1962 ;; *************** function _writeFloat *****************
  1963 ;; Defined at:
  1964 ;;		line 63 in file "LCD.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;  integer         1    wreg     unsigned char 
  1967 ;;  decimal         1   21[BANK0 ] unsigned char 
  1968 ;;  initPos         1   22[BANK0 ] unsigned char 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  integer         1   24[BANK0 ] unsigned char 
  1971 ;; Return value:  Size  Location     Type
  1972 ;;                  1    wreg      void 
  1973 ;; Registers used:
  1974 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1975 ;; Tracked objects:
  1976 ;;		On entry : 0/0
  1977 ;;		On exit  : 0/0
  1978 ;;		Unchanged: 0/0
  1979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1980 ;;      Params:         0       2       0       0       0
  1981 ;;      Locals:         0       1       0       0       0
  1982 ;;      Temps:          0       1       0       0       0
  1983 ;;      Totals:         0       4       0       0       0
  1984 ;;Total ram usage:        4 bytes
  1985 ;; Hardware stack levels used:    1
  1986 ;; Hardware stack levels required when called:    3
  1987 ;; This function calls:
  1988 ;;		_setCursorLCD
  1989 ;;		_writeCharLCD
  1990 ;;		_writeIntLCD
  1991 ;; This function is called by:
  1992 ;;		_main
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  1996                           	file	"LCD.c"
  1997                           	line	63
  1998                           global __ptext1
  1999                           __ptext1:	;psect for function _writeFloat
  2000  0D34                     psect	text1
  2001                           	file	"LCD.c"
  2002                           	line	63
  2003                           	global	__size_of_writeFloat
  2004                           	__size_of_writeFloat	equ	__end_of_writeFloat-_writeFloat
  2005  0070                     	
  2006                           _writeFloat:	
  2007  0D34                     ;incstack = 0
  2008                           	opt	stack 4
  2009                           ; Regs used in _writeFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2010                           ;writeFloat@integer stored from wreg
  2011                           	bcf	status, 5	;RP0=0, select bank0
  2012  0D34  1283               	bcf	status, 6	;RP1=0, select bank0
  2013  0D35  1303               	movwf	(writeFloat@integer)
  2014  0D36  00B8               	line	66
  2015                           	
  2016                           l1825:	
  2017  0D37                     ;LCD.c: 66:     setCursorLCD(2, initPos);
  2018                           	movf	(writeFloat@initPos),w
  2019  0D37  0836               	movwf	(??_writeFloat+0)+0
  2020  0D38  00B7               	movf	(??_writeFloat+0)+0,w
  2021  0D39  0837               	movwf	(setCursorLCD@x)
  2022  0D3A  00F3               	movlw	low(02h)
  2023  0D3B  3002               	fcall	_setCursorLCD
  2024  0D3C  120A  158A  22F1  120A  158A  	line	67
  2025                           	
  2026                           l1827:	
  2027  0D41                     ;LCD.c: 67:     writeIntLCD(integer);
  2028                           	bcf	status, 5	;RP0=0, select bank0
  2029  0D41  1283               	bcf	status, 6	;RP1=0, select bank0
  2030  0D42  1303               	movf	(writeFloat@integer),w
  2031  0D43  0838               	fcall	_writeIntLCD
  2032  0D44  120A  158A  230E  120A  158A  	line	68
  2033                           	
  2034                           l1829:	
  2035  0D49                     ;LCD.c: 68:     if(integer >= 10){
  2036                           	movlw	low(0Ah)
  2037  0D49  300A               	bcf	status, 5	;RP0=0, select bank0
  2038  0D4A  1283               	bcf	status, 6	;RP1=0, select bank0
  2039  0D4B  1303               	subwf	(writeFloat@integer),w
  2040  0D4C  0238               	skipc
  2041  0D4D  1C03               	goto	u1911
  2042  0D4E  2D50               	goto	u1910
  2043  0D4F  2D51               u1911:
  2044  0D50                     	goto	l1833
  2045  0D50  2D56               u1910:
  2046  0D51                     	line	69
  2047                           	
  2048                           l1831:	
  2049  0D51                     ;LCD.c: 69:         initPos++;
  2050                           	movlw	low(01h)
  2051  0D51  3001               	movwf	(??_writeFloat+0)+0
  2052  0D52  00B7               	movf	(??_writeFloat+0)+0,w
  2053  0D53  0837               	addwf	(writeFloat@initPos),f
  2054  0D54  07B6               	goto	l1833
  2055  0D55  2D56               	line	70
  2056                           ;LCD.c: 70:     }if(integer >= 100){
  2057                           	
  2058                           l100:	
  2059  0D56                     	
  2060                           l1833:	
  2061  0D56                     	movlw	low(064h)
  2062  0D56  3064               	subwf	(writeFloat@integer),w
  2063  0D57  0238               	skipc
  2064  0D58  1C03               	goto	u1921
  2065  0D59  2D5B               	goto	u1920
  2066  0D5A  2D5C               u1921:
  2067  0D5B                     	goto	l1837
  2068  0D5B  2D61               u1920:
  2069  0D5C                     	line	71
  2070                           	
  2071                           l1835:	
  2072  0D5C                     ;LCD.c: 71:         initPos++;
  2073                           	movlw	low(01h)
  2074  0D5C  3001               	movwf	(??_writeFloat+0)+0
  2075  0D5D  00B7               	movf	(??_writeFloat+0)+0,w
  2076  0D5E  0837               	addwf	(writeFloat@initPos),f
  2077  0D5F  07B6               	goto	l1837
  2078  0D60  2D61               	line	72
  2079                           ;LCD.c: 72:     }
  2080                           	
  2081                           l101:	
  2082  0D61                     	line	73
  2083                           	
  2084                           l1837:	
  2085  0D61                     ;LCD.c: 73:     setCursorLCD(2, initPos + 1);
  2086                           	movf	(writeFloat@initPos),w
  2087  0D61  0836               	addlw	01h
  2088  0D62  3E01               	movwf	(??_writeFloat+0)+0
  2089  0D63  00B7               	movf	(??_writeFloat+0)+0,w
  2090  0D64  0837               	movwf	(setCursorLCD@x)
  2091  0D65  00F3               	movlw	low(02h)
  2092  0D66  3002               	fcall	_setCursorLCD
  2093  0D67  120A  158A  22F1  120A  158A  	line	74
  2094                           	
  2095                           l1839:	
  2096  0D6C                     ;LCD.c: 74:     writeCharLCD('.');
  2097                           	movlw	low(02Eh)
  2098  0D6C  302E               	fcall	_writeCharLCD
  2099  0D6D  120A  158A  22CE  120A  158A  	line	75
  2100                           	
  2101                           l1841:	
  2102  0D72                     ;LCD.c: 75:     setCursorLCD(2, initPos + 2);
  2103                           	bcf	status, 5	;RP0=0, select bank0
  2104  0D72  1283               	bcf	status, 6	;RP1=0, select bank0
  2105  0D73  1303               	movf	(writeFloat@initPos),w
  2106  0D74  0836               	addlw	02h
  2107  0D75  3E02               	movwf	(??_writeFloat+0)+0
  2108  0D76  00B7               	movf	(??_writeFloat+0)+0,w
  2109  0D77  0837               	movwf	(setCursorLCD@x)
  2110  0D78  00F3               	movlw	low(02h)
  2111  0D79  3002               	fcall	_setCursorLCD
  2112  0D7A  120A  158A  22F1  120A  158A  	line	77
  2113                           	
  2114                           l1843:	
  2115  0D7F                     ;LCD.c: 77:     if(decimal < 10){
  2116                           	movlw	low(0Ah)
  2117  0D7F  300A               	bcf	status, 5	;RP0=0, select bank0
  2118  0D80  1283               	bcf	status, 6	;RP1=0, select bank0
  2119  0D81  1303               	subwf	(writeFloat@decimal),w
  2120  0D82  0235               	skipnc
  2121  0D83  1803               	goto	u1931
  2122  0D84  2D86               	goto	u1930
  2123  0D85  2D87               u1931:
  2124  0D86                     	goto	l1847
  2125  0D86  2D8E               u1930:
  2126  0D87                     	line	78
  2127                           	
  2128                           l1845:	
  2129  0D87                     ;LCD.c: 78:         writeCharLCD('0');
  2130                           	movlw	low(030h)
  2131  0D87  3030               	fcall	_writeCharLCD
  2132  0D88  120A  158A  22CE  120A  158A  	goto	l1847
  2133  0D8D  2D8E               	line	79
  2134                           ;LCD.c: 79:     }
  2135                           	
  2136                           l102:	
  2137  0D8E                     	line	80
  2138                           	
  2139                           l1847:	
  2140  0D8E                     ;LCD.c: 80:     writeIntLCD(decimal);
  2141                           	bcf	status, 5	;RP0=0, select bank0
  2142  0D8E  1283               	bcf	status, 6	;RP1=0, select bank0
  2143  0D8F  1303               	movf	(writeFloat@decimal),w
  2144  0D90  0835               	fcall	_writeIntLCD
  2145  0D91  120A  158A  230E  120A  158A  	line	82
  2146                           	
  2147                           l1849:	
  2148  0D96                     ;LCD.c: 82:     setCursorLCD(2, initPos + 4);
  2149                           	bcf	status, 5	;RP0=0, select bank0
  2150  0D96  1283               	bcf	status, 6	;RP1=0, select bank0
  2151  0D97  1303               	movf	(writeFloat@initPos),w
  2152  0D98  0836               	addlw	04h
  2153  0D99  3E04               	movwf	(??_writeFloat+0)+0
  2154  0D9A  00B7               	movf	(??_writeFloat+0)+0,w
  2155  0D9B  0837               	movwf	(setCursorLCD@x)
  2156  0D9C  00F3               	movlw	low(02h)
  2157  0D9D  3002               	fcall	_setCursorLCD
  2158  0D9E  120A  158A  22F1  120A  158A  	line	84
  2159                           	
  2160                           l103:	
  2161  0DA3                     	return
  2162  0DA3  0008               	opt stack 0
  2163                           GLOBAL	__end_of_writeFloat
  2164                           	__end_of_writeFloat:
  2165  0DA4                     	signat	_writeFloat,12409
  2166                           	global	_writeIntLCD
  2167                           
  2168 ;; *************** function _writeIntLCD *****************
  2169 ;; Defined at:
  2170 ;;		line 57 in file "LCD.c"
  2171 ;; Parameters:    Size  Location     Type
  2172 ;;  numero          1    wreg     unsigned char 
  2173 ;; Auto vars:     Size  Location     Type
  2174 ;;  numero          1   20[BANK0 ] unsigned char 
  2175 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  2176 ;; Return value:  Size  Location     Type
  2177 ;;                  1    wreg      void 
  2178 ;; Registers used:
  2179 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2180 ;; Tracked objects:
  2181 ;;		On entry : 0/0
  2182 ;;		On exit  : 0/0
  2183 ;;		Unchanged: 0/0
  2184 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2185 ;;      Params:         0       0       0       0       0
  2186 ;;      Locals:         0       5       0       0       0
  2187 ;;      Temps:          0       3       0       0       0
  2188 ;;      Totals:         0       8       0       0       0
  2189 ;;Total ram usage:        8 bytes
  2190 ;; Hardware stack levels used:    1
  2191 ;; Hardware stack levels required when called:    2
  2192 ;; This function calls:
  2193 ;;		_sprintf
  2194 ;;		_writeStrLCD
  2195 ;; This function is called by:
  2196 ;;		_writeFloat
  2197 ;;		_main
  2198 ;; This function uses a non-reentrant model
  2199 ;;
  2200                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2201                           	line	57
  2202                           global __ptext2
  2203                           __ptext2:	;psect for function _writeIntLCD
  2204  0B0E                     psect	text2
  2205                           	file	"LCD.c"
  2206                           	line	57
  2207                           	global	__size_of_writeIntLCD
  2208                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  2209  001E                     	
  2210                           _writeIntLCD:	
  2211  0B0E                     ;incstack = 0
  2212                           	opt	stack 5
  2213                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2214                           ;writeIntLCD@numero stored from wreg
  2215                           	bcf	status, 5	;RP0=0, select bank0
  2216  0B0E  1283               	bcf	status, 6	;RP1=0, select bank0
  2217  0B0F  1303               	movwf	(writeIntLCD@numero)
  2218  0B10  00B4               	line	59
  2219                           	
  2220                           l1781:	
  2221  0B11                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  2222                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2223  0B11  3017               	movwf	(??_writeIntLCD+0)+0
  2224  0B12  00AD               	movf	(??_writeIntLCD+0)+0,w
  2225  0B13  082D               	movwf	(sprintf@f)
  2226  0B14  00A0               	movf	(writeIntLCD@numero),w
  2227  0B15  0834               	movwf	(??_writeIntLCD+1)+0
  2228  0B16  00AE               	clrf	(??_writeIntLCD+1)+0+1
  2229  0B17  01AF               	movf	0+(??_writeIntLCD+1)+0,w
  2230  0B18  082E               	movwf	0+(?_sprintf)+01h
  2231  0B19  00A1               	movf	1+(??_writeIntLCD+1)+0,w
  2232  0B1A  082F               	movwf	1+(?_sprintf)+01h
  2233  0B1B  00A2               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  2234  0B1C  3030               	fcall	_sprintf
  2235  0B1D  120A  158A  2700  120A  158A  	line	60
  2236                           ;LCD.c: 60:     writeStrLCD(buffer);
  2237                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  2238  0B22  3030               	movwf	(writeStrLCD@string)
  2239  0B23  00F2               	movlw	(0x0)
  2240  0B24  3000               	movwf	(writeStrLCD@string+1)
  2241  0B25  00F3               	fcall	_writeStrLCD
  2242  0B26  120A  158A  2438  120A  158A  	line	61
  2243                           	
  2244                           l97:	
  2245  0B2B                     	return
  2246  0B2B  0008               	opt stack 0
  2247                           GLOBAL	__end_of_writeIntLCD
  2248                           	__end_of_writeIntLCD:
  2249  0B2C                     	signat	_writeIntLCD,4217
  2250                           	global	_sprintf
  2251                           
  2252 ;; *************** function _sprintf *****************
  2253 ;; Defined at:
  2254 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2255 ;; Parameters:    Size  Location     Type
  2256 ;;  sp              1    wreg     PTR unsigned char 
  2257 ;;		 -> writeIntLCD@buffer(4), 
  2258 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2259 ;;		 -> STR_1(3), 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2262 ;;		 -> writeIntLCD@buffer(4), 
  2263 ;;  tmpval          4    0        struct .
  2264 ;;  val             2    9[BANK0 ] unsigned int 
  2265 ;;  cp              2    0        PTR const unsigned char 
  2266 ;;  len             2    0        unsigned int 
  2267 ;;  c               1   12[BANK0 ] unsigned char 
  2268 ;;  prec            1    8[BANK0 ] char 
  2269 ;;  flag            1    7[BANK0 ] unsigned char 
  2270 ;;  ap              1    6[BANK0 ] PTR void [1]
  2271 ;;		 -> ?_sprintf(2), 
  2272 ;; Return value:  Size  Location     Type
  2273 ;;                  2    0[BANK0 ] int 
  2274 ;; Registers used:
  2275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2276 ;; Tracked objects:
  2277 ;;		On entry : 0/0
  2278 ;;		On exit  : 0/0
  2279 ;;		Unchanged: 0/0
  2280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2281 ;;      Params:         0       3       0       0       0
  2282 ;;      Locals:         0       7       0       0       0
  2283 ;;      Temps:          0       3       0       0       0
  2284 ;;      Totals:         0      13       0       0       0
  2285 ;;Total ram usage:       13 bytes
  2286 ;; Hardware stack levels used:    1
  2287 ;; Hardware stack levels required when called:    1
  2288 ;; This function calls:
  2289 ;;		___lwdiv
  2290 ;;		___lwmod
  2291 ;; This function is called by:
  2292 ;;		_writeIntLCD
  2293 ;; This function uses a non-reentrant model
  2294 ;;
  2295                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2296                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2297                           	line	500
  2298                           global __ptext3
  2299                           __ptext3:	;psect for function _sprintf
  2300  0F00                     psect	text3
  2301                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2302                           	line	500
  2303                           	global	__size_of_sprintf
  2304                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2305  0100                     	
  2306                           _sprintf:	
  2307  0F00                     ;incstack = 0
  2308                           	opt	stack 5
  2309                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2310                           ;sprintf@sp stored from wreg
  2311                           	bcf	status, 5	;RP0=0, select bank0
  2312  0F00  1283               	bcf	status, 6	;RP1=0, select bank0
  2313  0F01  1303               	movwf	(sprintf@sp)
  2314  0F02  00AB               	line	545
  2315                           	
  2316                           l1651:	
  2317  0F03                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2318                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2319  0F03  3021               	movwf	(??_sprintf+0)+0
  2320  0F04  00A3               	movf	(??_sprintf+0)+0,w
  2321  0F05  0823               	movwf	(sprintf@ap)
  2322  0F06  00A6               	line	548
  2323                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2324                           	goto	l1703
  2325  0F07  2FE6               	
  2326                           l276:	
  2327  0F08                     	line	550
  2328                           	
  2329                           l1653:	
  2330  0F08                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2331                           		movlw	37
  2332  0F08  3025               	xorwf	((sprintf@c)),w
  2333  0F09  062C               	btfsc	status,2
  2334  0F0A  1903               	goto	u1681
  2335  0F0B  2F0D               	goto	u1680
  2336  0F0C  2F0E               u1681:
  2337  0F0D                     	goto	l1659
  2338  0F0D  2F1A               u1680:
  2339  0F0E                     	line	553
  2340                           	
  2341                           l1655:	
  2342  0F0E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  2343                           	movf	(sprintf@c),w
  2344  0F0E  082C               	movwf	(??_sprintf+0)+0
  2345  0F0F  00A3               	movf	(sprintf@sp),w
  2346  0F10  082B               	movwf	fsr0
  2347  0F11  0084               	movf	(??_sprintf+0)+0,w
  2348  0F12  0823               	bcf	status, 7	;select IRP bank0
  2349  0F13  1383               	movwf	indf
  2350  0F14  0080               	
  2351                           l1657:	
  2352  0F15                     	movlw	low(01h)
  2353  0F15  3001               	movwf	(??_sprintf+0)+0
  2354  0F16  00A3               	movf	(??_sprintf+0)+0,w
  2355  0F17  0823               	addwf	(sprintf@sp),f
  2356  0F18  07AB               	line	554
  2357                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2358                           	goto	l1703
  2359  0F19  2FE6               	line	555
  2360                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2361                           	
  2362                           l277:	
  2363  0F1A                     	line	560
  2364                           	
  2365                           l1659:	
  2366  0F1A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2367                           	clrf	(sprintf@flag)
  2368  0F1A  01A7               	line	654
  2369                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2370                           	goto	l1663
  2371  0F1B  2F21               	line	656
  2372                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2373                           	
  2374                           l279:	
  2375  0F1C                     	line	657
  2376                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2377                           	goto	l1705
  2378  0F1C  2FFA               	line	716
  2379                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2380                           	
  2381                           l281:	
  2382  0F1D                     	goto	l1665
  2383  0F1D  2F3E               	line	717
  2384                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2385                           	
  2386                           l282:	
  2387  0F1E                     	line	718
  2388                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2389                           	goto	l1665
  2390  0F1E  2F3E               	line	821
  2391                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2392                           	
  2393                           l284:	
  2394  0F1F                     	line	832
  2395                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2396                           	goto	l1703
  2397  0F1F  2FE6               	line	841
  2398                           	
  2399                           l1661:	
  2400  0F20                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2401                           	goto	l1665
  2402  0F20  2F3E               	
  2403                           l278:	
  2404  0F21                     	
  2405                           l1663:	
  2406  0F21                     	movlw	01h
  2407  0F21  3001               	addwf	(sprintf@f),f
  2408  0F22  07A0               	movlw	-01h
  2409  0F23  30FF               	addwf	(sprintf@f),w
  2410  0F24  0720               	movwf	fsr0
  2411  0F25  0084               	fcall	stringdir
  2412  0F26  120A  158A  200A  120A  158A  	movwf	(sprintf@c)
  2413  0F2B  00AC               	movwf	(??_sprintf+0)+0
  2414  0F2C  00A3               	clrf	(??_sprintf+0)+0+1
  2415  0F2D  01A4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2416                           ; Switch size 1, requested type "space"
  2417                           ; Number of cases is 1, Range of values is 0 to 0
  2418                           ; switch strategies available:
  2419                           ; Name         Instructions Cycles
  2420                           ; simple_byte            4     3 (average)
  2421                           ; direct_byte           11     8 (fixed)
  2422                           ; jumptable            260     6 (fixed)
  2423                           ;	Chosen strategy is simple_byte
  2424                           
  2425                           	movf 1+(??_sprintf+0)+0,w
  2426  0F2E  0824               	opt asmopt_push
  2427                           	opt asmopt_off
  2428                           	xorlw	0^0	; case 0
  2429  0F2F  3A00               	skipnz
  2430  0F30  1903               	goto	l2359
  2431  0F31  2F33               	goto	l1703
  2432  0F32  2FE6               	opt asmopt_pop
  2433                           	
  2434                           l2359:	
  2435  0F33                     ; Switch size 1, requested type "space"
  2436                           ; Number of cases is 3, Range of values is 0 to 105
  2437                           ; switch strategies available:
  2438                           ; Name         Instructions Cycles
  2439                           ; simple_byte           10     6 (average)
  2440                           ; jumptable            260     6 (fixed)
  2441                           ;	Chosen strategy is simple_byte
  2442                           
  2443                           	movf 0+(??_sprintf+0)+0,w
  2444  0F33  0823               	opt asmopt_push
  2445                           	opt asmopt_off
  2446                           	xorlw	0^0	; case 0
  2447  0F34  3A00               	skipnz
  2448  0F35  1903               	goto	l1705
  2449  0F36  2FFA               	xorlw	100^0	; case 100
  2450  0F37  3A64               	skipnz
  2451  0F38  1903               	goto	l1665
  2452  0F39  2F3E               	xorlw	105^100	; case 105
  2453  0F3A  3A0D               	skipnz
  2454  0F3B  1903               	goto	l1665
  2455  0F3C  2F3E               	goto	l1703
  2456  0F3D  2FE6               	opt asmopt_pop
  2457                           
  2458                           	
  2459                           l283:	
  2460  0F3E                     	line	1278
  2461                           	
  2462                           l1665:	
  2463  0F3E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2464                           	movf	(sprintf@ap),w
  2465  0F3E  0826               	movwf	fsr0
  2466  0F3F  0084               	bcf	status, 7	;select IRP bank0
  2467  0F40  1383               	movf	indf,w
  2468  0F41  0800               	movwf	(sprintf@val)
  2469  0F42  00A9               	incf	fsr0,f
  2470  0F43  0A84               	movf	indf,w
  2471  0F44  0800               	movwf	(sprintf@val+1)
  2472  0F45  00AA               	
  2473                           l1667:	
  2474  0F46                     	movlw	low(02h)
  2475  0F46  3002               	movwf	(??_sprintf+0)+0
  2476  0F47  00A3               	movf	(??_sprintf+0)+0,w
  2477  0F48  0823               	addwf	(sprintf@ap),f
  2478  0F49  07A6               	line	1280
  2479                           	
  2480                           l1669:	
  2481  0F4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2482                           	btfss	(sprintf@val+1),7
  2483  0F4A  1FAA               	goto	u1691
  2484  0F4B  2F4D               	goto	u1690
  2485  0F4C  2F4E               u1691:
  2486  0F4D                     	goto	l1675
  2487  0F4D  2F58               u1690:
  2488  0F4E                     	line	1281
  2489                           	
  2490                           l1671:	
  2491  0F4E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2492                           	movlw	low(03h)
  2493  0F4E  3003               	movwf	(??_sprintf+0)+0
  2494  0F4F  00A3               	movf	(??_sprintf+0)+0,w
  2495  0F50  0823               	iorwf	(sprintf@flag),f
  2496  0F51  04A7               	line	1282
  2497                           	
  2498                           l1673:	
  2499  0F52                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2500                           	comf	(sprintf@val),f
  2501  0F52  09A9               	comf	(sprintf@val+1),f
  2502  0F53  09AA               	incf	(sprintf@val),f
  2503  0F54  0AA9               	skipnz
  2504  0F55  1903               	incf	(sprintf@val+1),f
  2505  0F56  0AAA               	goto	l1675
  2506  0F57  2F58               	line	1283
  2507                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  2508                           	
  2509                           l285:	
  2510  0F58                     	line	1324
  2511                           	
  2512                           l1675:	
  2513  0F58                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2514                           	clrf	(sprintf@c)
  2515  0F58  01AC               	incf	(sprintf@c),f
  2516  0F59  0AAC               	
  2517                           l1677:	
  2518  0F5A                     		movlw	5
  2519  0F5A  3005               	xorwf	((sprintf@c)),w
  2520  0F5B  062C               	btfss	status,2
  2521  0F5C  1D03               	goto	u1701
  2522  0F5D  2F5F               	goto	u1700
  2523  0F5E  2F60               u1701:
  2524  0F5F                     	goto	l1681
  2525  0F5F  2F62               u1700:
  2526  0F60                     	goto	l1687
  2527  0F60  2F8A               	
  2528                           l1679:	
  2529  0F61                     	goto	l1687
  2530  0F61  2F8A               	
  2531                           l286:	
  2532  0F62                     	line	1325
  2533                           	
  2534                           l1681:	
  2535  0F62                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2536                           	movf	(sprintf@c),w
  2537  0F62  082C               	movwf	(??_sprintf+0)+0
  2538  0F63  00A3               	addwf	(??_sprintf+0)+0,w
  2539  0F64  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2540  0F65  3E01               	movwf	fsr0
  2541  0F66  0084               	fcall	stringdir
  2542  0F67  120A  158A  200A  120A  158A  	movwf	(??_sprintf+1)+0
  2543  0F6C  00A4               	fcall	stringdir
  2544  0F6D  120A  158A  200A  120A  158A  	movwf	(??_sprintf+1)+0+1
  2545  0F72  00A5               	movf	1+(??_sprintf+1)+0,w
  2546  0F73  0825               	subwf	(sprintf@val+1),w
  2547  0F74  022A               	skipz
  2548  0F75  1D03               	goto	u1715
  2549  0F76  2F79               	movf	0+(??_sprintf+1)+0,w
  2550  0F77  0824               	subwf	(sprintf@val),w
  2551  0F78  0229               u1715:
  2552  0F79                     	skipnc
  2553  0F79  1803               	goto	u1711
  2554  0F7A  2F7C               	goto	u1710
  2555  0F7B  2F7D               u1711:
  2556  0F7C                     	goto	l1685
  2557  0F7C  2F7F               u1710:
  2558  0F7D                     	goto	l1687
  2559  0F7D  2F8A               	line	1326
  2560                           	
  2561                           l1683:	
  2562  0F7E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2563                           	goto	l1687
  2564  0F7E  2F8A               	
  2565                           l288:	
  2566  0F7F                     	
  2567                           l1685:	
  2568  0F7F                     	movlw	low(01h)
  2569  0F7F  3001               	movwf	(??_sprintf+0)+0
  2570  0F80  00A3               	movf	(??_sprintf+0)+0,w
  2571  0F81  0823               	addwf	(sprintf@c),f
  2572  0F82  07AC               		movlw	5
  2573  0F83  3005               	xorwf	((sprintf@c)),w
  2574  0F84  062C               	btfss	status,2
  2575  0F85  1D03               	goto	u1721
  2576  0F86  2F88               	goto	u1720
  2577  0F87  2F89               u1721:
  2578  0F88                     	goto	l1681
  2579  0F88  2F62               u1720:
  2580  0F89                     	goto	l1687
  2581  0F89  2F8A               	
  2582                           l287:	
  2583  0F8A                     	line	1457
  2584                           	
  2585                           l1687:	
  2586  0F8A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  2587                           	movf	(sprintf@flag),w
  2588  0F8A  0827               	andlw	03h
  2589  0F8B  3903               	btfsc	status,2
  2590  0F8C  1903               	goto	u1731
  2591  0F8D  2F8F               	goto	u1730
  2592  0F8E  2F90               u1731:
  2593  0F8F                     	goto	l1693
  2594  0F8F  2F9C               u1730:
  2595  0F90                     	line	1458
  2596                           	
  2597                           l1689:	
  2598  0F90                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  2599                           	movlw	low(02Dh)
  2600  0F90  302D               	movwf	(??_sprintf+0)+0
  2601  0F91  00A3               	movf	(sprintf@sp),w
  2602  0F92  082B               	movwf	fsr0
  2603  0F93  0084               	movf	(??_sprintf+0)+0,w
  2604  0F94  0823               	bcf	status, 7	;select IRP bank0
  2605  0F95  1383               	movwf	indf
  2606  0F96  0080               	
  2607                           l1691:	
  2608  0F97                     	movlw	low(01h)
  2609  0F97  3001               	movwf	(??_sprintf+0)+0
  2610  0F98  00A3               	movf	(??_sprintf+0)+0,w
  2611  0F99  0823               	addwf	(sprintf@sp),f
  2612  0F9A  07AB               	goto	l1693
  2613  0F9B  2F9C               	
  2614                           l289:	
  2615  0F9C                     	line	1491
  2616                           	
  2617                           l1693:	
  2618  0F9C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  2619                           	movf	(sprintf@c),w
  2620  0F9C  082C               	movwf	(??_sprintf+0)+0
  2621  0F9D  00A3               	movf	(??_sprintf+0)+0,w
  2622  0F9E  0823               	movwf	(sprintf@prec)
  2623  0F9F  00A8               	line	1493
  2624                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2625                           	goto	l1701
  2626  0FA0  2FDB               	
  2627                           l291:	
  2628  0FA1                     	line	1508
  2629                           	
  2630                           l1695:	
  2631  0FA1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  2632                           	movlw	0Ah
  2633  0FA1  300A               	movwf	(___lwmod@divisor)
  2634  0FA2  00F8               	movlw	0
  2635  0FA3  3000               	movwf	((___lwmod@divisor))+1
  2636  0FA4  00F9               	movf	(sprintf@prec),w
  2637  0FA5  0828               	movwf	(??_sprintf+0)+0
  2638  0FA6  00A3               	addwf	(??_sprintf+0)+0,w
  2639  0FA7  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2640  0FA8  3E01               	movwf	fsr0
  2641  0FA9  0084               	fcall	stringdir
  2642  0FAA  120A  158A  200A  120A  158A  	movwf	(___lwdiv@divisor)
  2643  0FAF  00F0               	fcall	stringdir
  2644  0FB0  120A  158A  200A  120A  158A  	movwf	(___lwdiv@divisor+1)
  2645  0FB5  00F1               	movf	(sprintf@val+1),w
  2646  0FB6  082A               	movwf	(___lwdiv@dividend+1)
  2647  0FB7  00F3               	movf	(sprintf@val),w
  2648  0FB8  0829               	movwf	(___lwdiv@dividend)
  2649  0FB9  00F2               	fcall	___lwdiv
  2650  0FBA  120A  158A  247C  120A  158A  	movf	(1+(?___lwdiv)),w
  2651  0FBF  0871               	movwf	(___lwmod@dividend+1)
  2652  0FC0  00FB               	movf	(0+(?___lwdiv)),w
  2653  0FC1  0870               	movwf	(___lwmod@dividend)
  2654  0FC2  00FA               	fcall	___lwmod
  2655  0FC3  120A  158A  23F7  120A  158A  	movf	(0+(?___lwmod)),w
  2656  0FC8  0878               	addlw	030h
  2657  0FC9  3E30               	bcf	status, 5	;RP0=0, select bank0
  2658  0FCA  1283               	bcf	status, 6	;RP1=0, select bank0
  2659  0FCB  1303               	movwf	(??_sprintf+1)+0
  2660  0FCC  00A4               	movf	(??_sprintf+1)+0,w
  2661  0FCD  0824               	movwf	(sprintf@c)
  2662  0FCE  00AC               	line	1543
  2663                           	
  2664                           l1697:	
  2665  0FCF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  2666                           	movf	(sprintf@c),w
  2667  0FCF  082C               	movwf	(??_sprintf+0)+0
  2668  0FD0  00A3               	movf	(sprintf@sp),w
  2669  0FD1  082B               	movwf	fsr0
  2670  0FD2  0084               	movf	(??_sprintf+0)+0,w
  2671  0FD3  0823               	bcf	status, 7	;select IRP bank0
  2672  0FD4  1383               	movwf	indf
  2673  0FD5  0080               	
  2674                           l1699:	
  2675  0FD6                     	movlw	low(01h)
  2676  0FD6  3001               	movwf	(??_sprintf+0)+0
  2677  0FD7  00A3               	movf	(??_sprintf+0)+0,w
  2678  0FD8  0823               	addwf	(sprintf@sp),f
  2679  0FD9  07AB               	goto	l1701
  2680  0FDA  2FDB               	line	1544
  2681                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2682                           	
  2683                           l290:	
  2684  0FDB                     	line	1493
  2685                           	
  2686                           l1701:	
  2687  0FDB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2688                           	movlw	low(-1)
  2689  0FDB  30FF               	movwf	(??_sprintf+0)+0
  2690  0FDC  00A3               	movf	(??_sprintf+0)+0,w
  2691  0FDD  0823               	addwf	(sprintf@prec),f
  2692  0FDE  07A8               		incf	(((sprintf@prec))),w
  2693  0FDF  0A28               	btfss	status,2
  2694  0FE0  1D03               	goto	u1741
  2695  0FE1  2FE3               	goto	u1740
  2696  0FE2  2FE4               u1741:
  2697  0FE3                     	goto	l1695
  2698  0FE3  2FA1               u1740:
  2699  0FE4                     	goto	l1703
  2700  0FE4  2FE6               	
  2701                           l292:	
  2702  0FE5                     	goto	l1703
  2703  0FE5  2FE6               	line	1552
  2704                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2705                           	
  2706                           l275:	
  2707  0FE6                     	line	548
  2708                           	
  2709                           l1703:	
  2710  0FE6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2711                           	movlw	01h
  2712  0FE6  3001               	addwf	(sprintf@f),f
  2713  0FE7  07A0               	movlw	-01h
  2714  0FE8  30FF               	addwf	(sprintf@f),w
  2715  0FE9  0720               	movwf	fsr0
  2716  0FEA  0084               	fcall	stringdir
  2717  0FEB  120A  158A  200A  120A  158A  	movwf	(??_sprintf+0)+0
  2718  0FF0  00A3               	movf	(??_sprintf+0)+0,w
  2719  0FF1  0823               	movwf	(sprintf@c)
  2720  0FF2  00AC               	movf	(((sprintf@c))),w
  2721  0FF3  082C               	btfss	status,2
  2722  0FF4  1D03               	goto	u1751
  2723  0FF5  2FF7               	goto	u1750
  2724  0FF6  2FF8               u1751:
  2725  0FF7                     	goto	l1653
  2726  0FF7  2F08               u1750:
  2727  0FF8                     	goto	l1705
  2728  0FF8  2FFA               	
  2729                           l293:	
  2730  0FF9                     	goto	l1705
  2731  0FF9  2FFA               	line	1554
  2732                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  2733                           	
  2734                           l280:	
  2735  0FFA                     	line	1557
  2736                           	
  2737                           l1705:	
  2738  0FFA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  2739                           	movf	(sprintf@sp),w
  2740  0FFA  082B               	movwf	fsr0
  2741  0FFB  0084               	bcf	status, 7	;select IRP bank0
  2742  0FFC  1383               	clrf	indf
  2743  0FFD  0180               	goto	l294
  2744  0FFE  2FFF               	line	1559
  2745                           	
  2746                           l1707:	
  2747  0FFF                     	line	1560
  2748                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  2749                           	
  2750                           l294:	
  2751  0FFF                     	return
  2752  0FFF  0008               	opt stack 0
  2753                           GLOBAL	__end_of_sprintf
  2754                           	__end_of_sprintf:
  2755  1000                     	signat	_sprintf,4698
  2756                           	global	___lwmod
  2757                           
  2758 ;; *************** function ___lwmod *****************
  2759 ;; Defined at:
  2760 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2761 ;; Parameters:    Size  Location     Type
  2762 ;;  divisor         2    8[COMMON] unsigned int 
  2763 ;;  dividend        2   10[COMMON] unsigned int 
  2764 ;; Auto vars:     Size  Location     Type
  2765 ;;  counter         1   13[COMMON] unsigned char 
  2766 ;; Return value:  Size  Location     Type
  2767 ;;                  2    8[COMMON] unsigned int 
  2768 ;; Registers used:
  2769 ;;		wreg, status,2, status,0
  2770 ;; Tracked objects:
  2771 ;;		On entry : 0/0
  2772 ;;		On exit  : 0/0
  2773 ;;		Unchanged: 0/0
  2774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2775 ;;      Params:         4       0       0       0       0
  2776 ;;      Locals:         1       0       0       0       0
  2777 ;;      Temps:          1       0       0       0       0
  2778 ;;      Totals:         6       0       0       0       0
  2779 ;;Total ram usage:        6 bytes
  2780 ;; Hardware stack levels used:    1
  2781 ;; This function calls:
  2782 ;;		Nothing
  2783 ;; This function is called by:
  2784 ;;		_sprintf
  2785 ;; This function uses a non-reentrant model
  2786 ;;
  2787                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2788                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2789                           	line	5
  2790                           global __ptext4
  2791                           __ptext4:	;psect for function ___lwmod
  2792  0BF7                     psect	text4
  2793                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2794                           	line	5
  2795                           	global	__size_of___lwmod
  2796                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2797  0041                     	
  2798                           ___lwmod:	
  2799  0BF7                     ;incstack = 0
  2800                           	opt	stack 5
  2801                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2802                           	line	12
  2803                           	
  2804                           l1613:	
  2805  0BF7                     	movf	((___lwmod@divisor)),w
  2806  0BF7  0878               iorwf	((___lwmod@divisor+1)),w
  2807  0BF8  0479               	btfsc	status,2
  2808  0BF9  1903               	goto	u1591
  2809  0BFA  2BFC               	goto	u1590
  2810  0BFB  2BFD               u1591:
  2811  0BFC                     	goto	l1631
  2812  0BFC  2C32               u1590:
  2813  0BFD                     	line	13
  2814                           	
  2815                           l1615:	
  2816  0BFD                     	clrf	(___lwmod@counter)
  2817  0BFD  01FD               	incf	(___lwmod@counter),f
  2818  0BFE  0AFD               	line	14
  2819                           	goto	l1621
  2820  0BFF  2C0C               	
  2821                           l575:	
  2822  0C00                     	line	15
  2823                           	
  2824                           l1617:	
  2825  0C00                     	movlw	01h
  2826  0C00  3001               	
  2827                           u1605:
  2828  0C01                     	clrc
  2829  0C01  1003               	rlf	(___lwmod@divisor),f
  2830  0C02  0DF8               	rlf	(___lwmod@divisor+1),f
  2831  0C03  0DF9               	addlw	-1
  2832  0C04  3EFF               	skipz
  2833  0C05  1D03               	goto	u1605
  2834  0C06  2C01               	line	16
  2835                           	
  2836                           l1619:	
  2837  0C07                     	movlw	low(01h)
  2838  0C07  3001               	movwf	(??___lwmod+0)+0
  2839  0C08  00FC               	movf	(??___lwmod+0)+0,w
  2840  0C09  087C               	addwf	(___lwmod@counter),f
  2841  0C0A  07FD               	goto	l1621
  2842  0C0B  2C0C               	line	17
  2843                           	
  2844                           l574:	
  2845  0C0C                     	line	14
  2846                           	
  2847                           l1621:	
  2848  0C0C                     	btfss	(___lwmod@divisor+1),(15)&7
  2849  0C0C  1FF9               	goto	u1611
  2850  0C0D  2C0F               	goto	u1610
  2851  0C0E  2C10               u1611:
  2852  0C0F                     	goto	l1617
  2853  0C0F  2C00               u1610:
  2854  0C10                     	goto	l1623
  2855  0C10  2C12               	
  2856                           l576:	
  2857  0C11                     	goto	l1623
  2858  0C11  2C12               	line	18
  2859                           	
  2860                           l577:	
  2861  0C12                     	line	19
  2862                           	
  2863                           l1623:	
  2864  0C12                     	movf	(___lwmod@divisor+1),w
  2865  0C12  0879               	subwf	(___lwmod@dividend+1),w
  2866  0C13  027B               	skipz
  2867  0C14  1D03               	goto	u1625
  2868  0C15  2C18               	movf	(___lwmod@divisor),w
  2869  0C16  0878               	subwf	(___lwmod@dividend),w
  2870  0C17  027A               u1625:
  2871  0C18                     	skipc
  2872  0C18  1C03               	goto	u1621
  2873  0C19  2C1B               	goto	u1620
  2874  0C1A  2C1C               u1621:
  2875  0C1B                     	goto	l1627
  2876  0C1B  2C23               u1620:
  2877  0C1C                     	line	20
  2878                           	
  2879                           l1625:	
  2880  0C1C                     	movf	(___lwmod@divisor),w
  2881  0C1C  0878               	subwf	(___lwmod@dividend),f
  2882  0C1D  02FA               	movf	(___lwmod@divisor+1),w
  2883  0C1E  0879               	skipc
  2884  0C1F  1C03               	decf	(___lwmod@dividend+1),f
  2885  0C20  03FB               	subwf	(___lwmod@dividend+1),f
  2886  0C21  02FB               	goto	l1627
  2887  0C22  2C23               	
  2888                           l578:	
  2889  0C23                     	line	21
  2890                           	
  2891                           l1627:	
  2892  0C23                     	movlw	01h
  2893  0C23  3001               	
  2894                           u1635:
  2895  0C24                     	clrc
  2896  0C24  1003               	rrf	(___lwmod@divisor+1),f
  2897  0C25  0CF9               	rrf	(___lwmod@divisor),f
  2898  0C26  0CF8               	addlw	-1
  2899  0C27  3EFF               	skipz
  2900  0C28  1D03               	goto	u1635
  2901  0C29  2C24               	line	22
  2902                           	
  2903                           l1629:	
  2904  0C2A                     	movlw	01h
  2905  0C2A  3001               	subwf	(___lwmod@counter),f
  2906  0C2B  02FD               	btfss	status,2
  2907  0C2C  1D03               	goto	u1641
  2908  0C2D  2C2F               	goto	u1640
  2909  0C2E  2C30               u1641:
  2910  0C2F                     	goto	l1623
  2911  0C2F  2C12               u1640:
  2912  0C30                     	goto	l1631
  2913  0C30  2C32               	
  2914                           l579:	
  2915  0C31                     	goto	l1631
  2916  0C31  2C32               	line	23
  2917                           	
  2918                           l573:	
  2919  0C32                     	line	24
  2920                           	
  2921                           l1631:	
  2922  0C32                     	movf	(___lwmod@dividend+1),w
  2923  0C32  087B               	movwf	(?___lwmod+1)
  2924  0C33  00F9               	movf	(___lwmod@dividend),w
  2925  0C34  087A               	movwf	(?___lwmod)
  2926  0C35  00F8               	goto	l580
  2927  0C36  2C37               	
  2928                           l1633:	
  2929  0C37                     	line	25
  2930                           	
  2931                           l580:	
  2932  0C37                     	return
  2933  0C37  0008               	opt stack 0
  2934                           GLOBAL	__end_of___lwmod
  2935                           	__end_of___lwmod:
  2936  0C38                     	signat	___lwmod,8314
  2937                           	global	___lwdiv
  2938                           
  2939 ;; *************** function ___lwdiv *****************
  2940 ;; Defined at:
  2941 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2942 ;; Parameters:    Size  Location     Type
  2943 ;;  divisor         2    0[COMMON] unsigned int 
  2944 ;;  dividend        2    2[COMMON] unsigned int 
  2945 ;; Auto vars:     Size  Location     Type
  2946 ;;  quotient        2    5[COMMON] unsigned int 
  2947 ;;  counter         1    7[COMMON] unsigned char 
  2948 ;; Return value:  Size  Location     Type
  2949 ;;                  2    0[COMMON] unsigned int 
  2950 ;; Registers used:
  2951 ;;		wreg, status,2, status,0
  2952 ;; Tracked objects:
  2953 ;;		On entry : 0/0
  2954 ;;		On exit  : 0/0
  2955 ;;		Unchanged: 0/0
  2956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2957 ;;      Params:         4       0       0       0       0
  2958 ;;      Locals:         3       0       0       0       0
  2959 ;;      Temps:          1       0       0       0       0
  2960 ;;      Totals:         8       0       0       0       0
  2961 ;;Total ram usage:        8 bytes
  2962 ;; Hardware stack levels used:    1
  2963 ;; This function calls:
  2964 ;;		Nothing
  2965 ;; This function is called by:
  2966 ;;		_sprintf
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  2970                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2971                           	line	5
  2972                           global __ptext5
  2973                           __ptext5:	;psect for function ___lwdiv
  2974  0C7C                     psect	text5
  2975                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  2976                           	line	5
  2977                           	global	__size_of___lwdiv
  2978                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  2979  004B                     	
  2980                           ___lwdiv:	
  2981  0C7C                     ;incstack = 0
  2982                           	opt	stack 5
  2983                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2984                           	line	13
  2985                           	
  2986                           l1587:	
  2987  0C7C                     	clrf	(___lwdiv@quotient)
  2988  0C7C  01F5               	clrf	(___lwdiv@quotient+1)
  2989  0C7D  01F6               	line	14
  2990                           	
  2991                           l1589:	
  2992  0C7E                     	movf	((___lwdiv@divisor)),w
  2993  0C7E  0870               iorwf	((___lwdiv@divisor+1)),w
  2994  0C7F  0471               	btfsc	status,2
  2995  0C80  1903               	goto	u1521
  2996  0C81  2C83               	goto	u1520
  2997  0C82  2C84               u1521:
  2998  0C83                     	goto	l1609
  2999  0C83  2CC1               u1520:
  3000  0C84                     	line	15
  3001                           	
  3002                           l1591:	
  3003  0C84                     	clrf	(___lwdiv@counter)
  3004  0C84  01F7               	incf	(___lwdiv@counter),f
  3005  0C85  0AF7               	line	16
  3006                           	goto	l1597
  3007  0C86  2C93               	
  3008                           l565:	
  3009  0C87                     	line	17
  3010                           	
  3011                           l1593:	
  3012  0C87                     	movlw	01h
  3013  0C87  3001               	
  3014                           u1535:
  3015  0C88                     	clrc
  3016  0C88  1003               	rlf	(___lwdiv@divisor),f
  3017  0C89  0DF0               	rlf	(___lwdiv@divisor+1),f
  3018  0C8A  0DF1               	addlw	-1
  3019  0C8B  3EFF               	skipz
  3020  0C8C  1D03               	goto	u1535
  3021  0C8D  2C88               	line	18
  3022                           	
  3023                           l1595:	
  3024  0C8E                     	movlw	low(01h)
  3025  0C8E  3001               	movwf	(??___lwdiv+0)+0
  3026  0C8F  00F4               	movf	(??___lwdiv+0)+0,w
  3027  0C90  0874               	addwf	(___lwdiv@counter),f
  3028  0C91  07F7               	goto	l1597
  3029  0C92  2C93               	line	19
  3030                           	
  3031                           l564:	
  3032  0C93                     	line	16
  3033                           	
  3034                           l1597:	
  3035  0C93                     	btfss	(___lwdiv@divisor+1),(15)&7
  3036  0C93  1FF1               	goto	u1541
  3037  0C94  2C96               	goto	u1540
  3038  0C95  2C97               u1541:
  3039  0C96                     	goto	l1593
  3040  0C96  2C87               u1540:
  3041  0C97                     	goto	l1599
  3042  0C97  2C99               	
  3043                           l566:	
  3044  0C98                     	goto	l1599
  3045  0C98  2C99               	line	20
  3046                           	
  3047                           l567:	
  3048  0C99                     	line	21
  3049                           	
  3050                           l1599:	
  3051  0C99                     	movlw	01h
  3052  0C99  3001               	
  3053                           u1555:
  3054  0C9A                     	clrc
  3055  0C9A  1003               	rlf	(___lwdiv@quotient),f
  3056  0C9B  0DF5               	rlf	(___lwdiv@quotient+1),f
  3057  0C9C  0DF6               	addlw	-1
  3058  0C9D  3EFF               	skipz
  3059  0C9E  1D03               	goto	u1555
  3060  0C9F  2C9A               	line	22
  3061                           	movf	(___lwdiv@divisor+1),w
  3062  0CA0  0871               	subwf	(___lwdiv@dividend+1),w
  3063  0CA1  0273               	skipz
  3064  0CA2  1D03               	goto	u1565
  3065  0CA3  2CA6               	movf	(___lwdiv@divisor),w
  3066  0CA4  0870               	subwf	(___lwdiv@dividend),w
  3067  0CA5  0272               u1565:
  3068  0CA6                     	skipc
  3069  0CA6  1C03               	goto	u1561
  3070  0CA7  2CA9               	goto	u1560
  3071  0CA8  2CAA               u1561:
  3072  0CA9                     	goto	l1605
  3073  0CA9  2CB2               u1560:
  3074  0CAA                     	line	23
  3075                           	
  3076                           l1601:	
  3077  0CAA                     	movf	(___lwdiv@divisor),w
  3078  0CAA  0870               	subwf	(___lwdiv@dividend),f
  3079  0CAB  02F2               	movf	(___lwdiv@divisor+1),w
  3080  0CAC  0871               	skipc
  3081  0CAD  1C03               	decf	(___lwdiv@dividend+1),f
  3082  0CAE  03F3               	subwf	(___lwdiv@dividend+1),f
  3083  0CAF  02F3               	line	24
  3084                           	
  3085                           l1603:	
  3086  0CB0                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3087  0CB0  1475               	goto	l1605
  3088  0CB1  2CB2               	line	25
  3089                           	
  3090                           l568:	
  3091  0CB2                     	line	26
  3092                           	
  3093                           l1605:	
  3094  0CB2                     	movlw	01h
  3095  0CB2  3001               	
  3096                           u1575:
  3097  0CB3                     	clrc
  3098  0CB3  1003               	rrf	(___lwdiv@divisor+1),f
  3099  0CB4  0CF1               	rrf	(___lwdiv@divisor),f
  3100  0CB5  0CF0               	addlw	-1
  3101  0CB6  3EFF               	skipz
  3102  0CB7  1D03               	goto	u1575
  3103  0CB8  2CB3               	line	27
  3104                           	
  3105                           l1607:	
  3106  0CB9                     	movlw	01h
  3107  0CB9  3001               	subwf	(___lwdiv@counter),f
  3108  0CBA  02F7               	btfss	status,2
  3109  0CBB  1D03               	goto	u1581
  3110  0CBC  2CBE               	goto	u1580
  3111  0CBD  2CBF               u1581:
  3112  0CBE                     	goto	l1599
  3113  0CBE  2C99               u1580:
  3114  0CBF                     	goto	l1609
  3115  0CBF  2CC1               	
  3116                           l569:	
  3117  0CC0                     	goto	l1609
  3118  0CC0  2CC1               	line	28
  3119                           	
  3120                           l563:	
  3121  0CC1                     	line	29
  3122                           	
  3123                           l1609:	
  3124  0CC1                     	movf	(___lwdiv@quotient+1),w
  3125  0CC1  0876               	movwf	(?___lwdiv+1)
  3126  0CC2  00F1               	movf	(___lwdiv@quotient),w
  3127  0CC3  0875               	movwf	(?___lwdiv)
  3128  0CC4  00F0               	goto	l570
  3129  0CC5  2CC6               	
  3130                           l1611:	
  3131  0CC6                     	line	30
  3132                           	
  3133                           l570:	
  3134  0CC6                     	return
  3135  0CC6  0008               	opt stack 0
  3136                           GLOBAL	__end_of___lwdiv
  3137                           	__end_of___lwdiv:
  3138  0CC7                     	signat	___lwdiv,8314
  3139                           	global	_setup
  3140                           
  3141 ;; *************** function _setup *****************
  3142 ;; Defined at:
  3143 ;;		line 99 in file "mainM.c"
  3144 ;; Parameters:    Size  Location     Type
  3145 ;;		None
  3146 ;; Auto vars:     Size  Location     Type
  3147 ;;		None
  3148 ;; Return value:  Size  Location     Type
  3149 ;;                  1    wreg      void 
  3150 ;; Registers used:
  3151 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3152 ;; Tracked objects:
  3153 ;;		On entry : 0/0
  3154 ;;		On exit  : 0/0
  3155 ;;		Unchanged: 0/0
  3156 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3157 ;;      Params:         0       0       0       0       0
  3158 ;;      Locals:         0       0       0       0       0
  3159 ;;      Temps:          0       1       0       0       0
  3160 ;;      Totals:         0       1       0       0       0
  3161 ;;Total ram usage:        1 bytes
  3162 ;; Hardware stack levels used:    1
  3163 ;; Hardware stack levels required when called:    2
  3164 ;; This function calls:
  3165 ;;		_I2C_Master_Init
  3166 ;;		_clcLCD
  3167 ;;		_initLCD
  3168 ;;		_setCursorLCD
  3169 ;;		_writeStrLCD
  3170 ;; This function is called by:
  3171 ;;		_main
  3172 ;; This function uses a non-reentrant model
  3173 ;;
  3174                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3175                           	file	"mainM.c"
  3176                           	line	99
  3177                           global __ptext6
  3178                           __ptext6:	;psect for function _setup
  3179  000A                     psect	text6
  3180                           	file	"mainM.c"
  3181                           	line	99
  3182                           	global	__size_of_setup
  3183                           	__size_of_setup	equ	__end_of_setup-_setup
  3184  005F                     	
  3185                           _setup:	
  3186  000A                     ;incstack = 0
  3187                           	opt	stack 5
  3188                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3189                           	line	101
  3190                           	
  3191                           l1851:	
  3192  000A                     ;mainM.c: 101:     ANSEL = 0;
  3193                           	bsf	status, 5	;RP0=1, select bank3
  3194  000A  1683               	bsf	status, 6	;RP1=1, select bank3
  3195  000B  1703               	clrf	(392)^0180h	;volatile
  3196  000C  0188               	line	102
  3197                           ;mainM.c: 102:     ANSELH = 0;
  3198                           	clrf	(393)^0180h	;volatile
  3199  000D  0189               	line	103
  3200                           ;mainM.c: 103:     TRISB = 0;
  3201                           	bsf	status, 5	;RP0=1, select bank1
  3202  000E  1683               	bcf	status, 6	;RP1=0, select bank1
  3203  000F  1303               	clrf	(134)^080h	;volatile
  3204  0010  0186               	line	104
  3205                           ;mainM.c: 104:     TRISD = 0;
  3206                           	clrf	(136)^080h	;volatile
  3207  0011  0188               	line	105
  3208                           ;mainM.c: 105:     PORTB = 0;
  3209                           	bcf	status, 5	;RP0=0, select bank0
  3210  0012  1283               	bcf	status, 6	;RP1=0, select bank0
  3211  0013  1303               	clrf	(6)	;volatile
  3212  0014  0186               	line	106
  3213                           ;mainM.c: 106:     PORTD = 0;
  3214                           	clrf	(8)	;volatile
  3215  0015  0188               	line	107
  3216                           	
  3217                           l1853:	
  3218  0016                     ;mainM.c: 107:     I2C_Master_Init(100000);
  3219                           	movlw	0
  3220  0016  3000               	movwf	(I2C_Master_Init@c+3)
  3221  0017  00A3               	movlw	01h
  3222  0018  3001               	movwf	(I2C_Master_Init@c+2)
  3223  0019  00A2               	movlw	086h
  3224  001A  3086               	movwf	(I2C_Master_Init@c+1)
  3225  001B  00A1               	movlw	0A0h
  3226  001C  30A0               	movwf	(I2C_Master_Init@c)
  3227  001D  00A0               
  3228                           	fcall	_I2C_Master_Init
  3229  001E  120A  158A  2385  120A  118A  	line	109
  3230                           	
  3231                           l1855:	
  3232  0023                     ;mainM.c: 109:     initLCD();
  3233                           	fcall	_initLCD
  3234  0023  120A  158A  23BD  120A  118A  	line	110
  3235                           	
  3236                           l1857:	
  3237  0028                     ;mainM.c: 110:     clcLCD();
  3238                           	fcall	_clcLCD
  3239  0028  120A  118A  2003  120A  118A  	line	113
  3240                           	
  3241                           l1859:	
  3242  002D                     ;mainM.c: 113:     setCursorLCD(1, 1);
  3243                           	clrf	(setCursorLCD@x)
  3244  002D  01F3               	incf	(setCursorLCD@x),f
  3245  002E  0AF3               	movlw	low(01h)
  3246  002F  3001               	fcall	_setCursorLCD
  3247  0030  120A  158A  22F1  120A  118A  	line	114
  3248                           	
  3249                           l1861:	
  3250  0035                     ;mainM.c: 114:     writeStrLCD("S1");
  3251                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3252  0035  300E               	movwf	(writeStrLCD@string)
  3253  0036  00F2               	movlw	80h
  3254  0037  3080               	movwf	(writeStrLCD@string+1)
  3255  0038  00F3               	fcall	_writeStrLCD
  3256  0039  120A  158A  2438  120A  118A  	line	115
  3257                           	
  3258                           l1863:	
  3259  003E                     ;mainM.c: 115:     setCursorLCD(1, 7);
  3260                           	movlw	low(07h)
  3261  003E  3007               	bcf	status, 5	;RP0=0, select bank0
  3262  003F  1283               	bcf	status, 6	;RP1=0, select bank0
  3263  0040  1303               	movwf	(??_setup+0)+0
  3264  0041  00A8               	movf	(??_setup+0)+0,w
  3265  0042  0828               	movwf	(setCursorLCD@x)
  3266  0043  00F3               	movlw	low(01h)
  3267  0044  3001               	fcall	_setCursorLCD
  3268  0045  120A  158A  22F1  120A  118A  	line	116
  3269                           	
  3270                           l1865:	
  3271  004A                     ;mainM.c: 116:     writeStrLCD("S2");
  3272                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3273  004A  3011               	movwf	(writeStrLCD@string)
  3274  004B  00F2               	movlw	80h
  3275  004C  3080               	movwf	(writeStrLCD@string+1)
  3276  004D  00F3               	fcall	_writeStrLCD
  3277  004E  120A  158A  2438  120A  118A  	line	117
  3278                           	
  3279                           l1867:	
  3280  0053                     ;mainM.c: 117:     setCursorLCD(1, 13);
  3281                           	movlw	low(0Dh)
  3282  0053  300D               	bcf	status, 5	;RP0=0, select bank0
  3283  0054  1283               	bcf	status, 6	;RP1=0, select bank0
  3284  0055  1303               	movwf	(??_setup+0)+0
  3285  0056  00A8               	movf	(??_setup+0)+0,w
  3286  0057  0828               	movwf	(setCursorLCD@x)
  3287  0058  00F3               	movlw	low(01h)
  3288  0059  3001               	fcall	_setCursorLCD
  3289  005A  120A  158A  22F1  120A  118A  	line	118
  3290                           	
  3291                           l1869:	
  3292  005F                     ;mainM.c: 118:     writeStrLCD("S3");
  3293                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3294  005F  3014               	movwf	(writeStrLCD@string)
  3295  0060  00F2               	movlw	80h
  3296  0061  3080               	movwf	(writeStrLCD@string+1)
  3297  0062  00F3               	fcall	_writeStrLCD
  3298  0063  120A  158A  2438  120A  118A  	line	119
  3299                           	
  3300                           l184:	
  3301  0068                     	return
  3302  0068  0008               	opt stack 0
  3303                           GLOBAL	__end_of_setup
  3304                           	__end_of_setup:
  3305  0069                     	signat	_setup,89
  3306                           	global	_writeStrLCD
  3307                           
  3308 ;; *************** function _writeStrLCD *****************
  3309 ;; Defined at:
  3310 ;;		line 21 in file "LCD.c"
  3311 ;; Parameters:    Size  Location     Type
  3312 ;;  string          2    2[COMMON] PTR unsigned char 
  3313 ;;		 -> STR_6(3), STR_5(3), STR_4(3), STR_3(3), 
  3314 ;;		 -> STR_2(3), writeIntLCD@buffer(4), 
  3315 ;; Auto vars:     Size  Location     Type
  3316 ;;  cont            2    7[COMMON] int 
  3317 ;; Return value:  Size  Location     Type
  3318 ;;                  1    wreg      void 
  3319 ;; Registers used:
  3320 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3321 ;; Tracked objects:
  3322 ;;		On entry : 0/0
  3323 ;;		On exit  : 0/0
  3324 ;;		Unchanged: 0/0
  3325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3326 ;;      Params:         2       0       0       0       0
  3327 ;;      Locals:         2       0       0       0       0
  3328 ;;      Temps:          3       0       0       0       0
  3329 ;;      Totals:         7       0       0       0       0
  3330 ;;Total ram usage:        7 bytes
  3331 ;; Hardware stack levels used:    1
  3332 ;; Hardware stack levels required when called:    1
  3333 ;; This function calls:
  3334 ;;		_writeCharLCD
  3335 ;; This function is called by:
  3336 ;;		_writeIntLCD
  3337 ;;		_main
  3338 ;;		_setup
  3339 ;; This function uses a non-reentrant model
  3340 ;;
  3341                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3342                           	file	"LCD.c"
  3343                           	line	21
  3344                           global __ptext7
  3345                           __ptext7:	;psect for function _writeStrLCD
  3346  0C38                     psect	text7
  3347                           	file	"LCD.c"
  3348                           	line	21
  3349                           	global	__size_of_writeStrLCD
  3350                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  3351  0044                     	
  3352                           _writeStrLCD:	
  3353  0C38                     ;incstack = 0
  3354                           	opt	stack 6
  3355                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3356                           	line	23
  3357                           	
  3358                           l1643:	
  3359  0C38                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  3360                           	clrf	(writeStrLCD@cont)
  3361  0C38  01F7               	clrf	(writeStrLCD@cont+1)
  3362  0C39  01F8               	goto	l1649
  3363  0C3A  2C5E               	
  3364                           l83:	
  3365  0C3B                     	line	24
  3366                           	
  3367                           l1645:	
  3368  0C3B                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  3369                           	movf	(writeStrLCD@cont),w
  3370  0C3B  0877               	addwf	(writeStrLCD@string),w
  3371  0C3C  0772               	movwf	(??_writeStrLCD+1)+0
  3372  0C3D  00F5               	movf	(writeStrLCD@string+1),w
  3373  0C3E  0873               	movwf	(??_writeStrLCD+0)+0
  3374  0C3F  00F4               	skipnc
  3375  0C40  1803               	incf	(??_writeStrLCD+0)+0,f
  3376  0C41  0AF4               	btfss	(writeStrLCD@cont),7
  3377  0C42  1FF7               	goto	u1650
  3378  0C43  2C45               	decf	(??_writeStrLCD+0)+0,f
  3379  0C44  03F4               u1650:
  3380  0C45                     	movf	(??_writeStrLCD+0)+0,w
  3381  0C45  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3382  0C46  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3383  0C47  0876               	bcf	status, 5	;RP0=0, select bank0
  3384  0C48  1283               	bcf	status, 6	;RP1=0, select bank0
  3385  0C49  1303               	movwf	btemp+1
  3386  0C4A  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3387  0C4B  0875               	movwf	fsr0
  3388  0C4C  0084               	fcall	stringtab
  3389  0C4D  120A  158A  2000  120A  158A  	fcall	_writeCharLCD
  3390  0C52  120A  158A  22CE  120A  158A  	line	25
  3391                           	
  3392                           l1647:	
  3393  0C57                     ;LCD.c: 25:     }
  3394                           	movlw	01h
  3395  0C57  3001               	addwf	(writeStrLCD@cont),f
  3396  0C58  07F7               	skipnc
  3397  0C59  1803               	incf	(writeStrLCD@cont+1),f
  3398  0C5A  0AF8               	movlw	0
  3399  0C5B  3000               	addwf	(writeStrLCD@cont+1),f
  3400  0C5C  07F8               	goto	l1649
  3401  0C5D  2C5E               	
  3402                           l82:	
  3403  0C5E                     	
  3404                           l1649:	
  3405  0C5E                     	movf	(writeStrLCD@cont),w
  3406  0C5E  0877               	addwf	(writeStrLCD@string),w
  3407  0C5F  0772               	movwf	(??_writeStrLCD+1)+0
  3408  0C60  00F5               	movf	(writeStrLCD@string+1),w
  3409  0C61  0873               	movwf	(??_writeStrLCD+0)+0
  3410  0C62  00F4               	skipnc
  3411  0C63  1803               	incf	(??_writeStrLCD+0)+0,f
  3412  0C64  0AF4               	btfss	(writeStrLCD@cont),7
  3413  0C65  1FF7               	goto	u1660
  3414  0C66  2C68               	decf	(??_writeStrLCD+0)+0,f
  3415  0C67  03F4               u1660:
  3416  0C68                     	movf	(??_writeStrLCD+0)+0,w
  3417  0C68  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3418  0C69  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3419  0C6A  0876               	bcf	status, 5	;RP0=0, select bank0
  3420  0C6B  1283               	bcf	status, 6	;RP1=0, select bank0
  3421  0C6C  1303               	movwf	btemp+1
  3422  0C6D  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3423  0C6E  0875               	movwf	fsr0
  3424  0C6F  0084               	fcall	stringtab
  3425  0C70  120A  158A  2000  120A  158A  	xorlw	0
  3426  0C75  3A00               	skipz
  3427  0C76  1D03               	goto	u1671
  3428  0C77  2C79               	goto	u1670
  3429  0C78  2C7A               u1671:
  3430  0C79                     	goto	l1645
  3431  0C79  2C3B               u1670:
  3432  0C7A                     	goto	l85
  3433  0C7A  2C7B               	
  3434                           l84:	
  3435  0C7B                     	line	26
  3436                           	
  3437                           l85:	
  3438  0C7B                     	return
  3439  0C7B  0008               	opt stack 0
  3440                           GLOBAL	__end_of_writeStrLCD
  3441                           	__end_of_writeStrLCD:
  3442  0C7C                     	signat	_writeStrLCD,4217
  3443                           	global	_writeCharLCD
  3444                           
  3445 ;; *************** function _writeCharLCD *****************
  3446 ;; Defined at:
  3447 ;;		line 28 in file "LCD.c"
  3448 ;; Parameters:    Size  Location     Type
  3449 ;;  character       1    wreg     unsigned char 
  3450 ;; Auto vars:     Size  Location     Type
  3451 ;;  character       1    1[COMMON] unsigned char 
  3452 ;; Return value:  Size  Location     Type
  3453 ;;                  1    wreg      void 
  3454 ;; Registers used:
  3455 ;;		wreg
  3456 ;; Tracked objects:
  3457 ;;		On entry : 0/0
  3458 ;;		On exit  : 0/0
  3459 ;;		Unchanged: 0/0
  3460 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3461 ;;      Params:         0       0       0       0       0
  3462 ;;      Locals:         1       0       0       0       0
  3463 ;;      Temps:          1       0       0       0       0
  3464 ;;      Totals:         2       0       0       0       0
  3465 ;;Total ram usage:        2 bytes
  3466 ;; Hardware stack levels used:    1
  3467 ;; This function calls:
  3468 ;;		Nothing
  3469 ;; This function is called by:
  3470 ;;		_writeStrLCD
  3471 ;;		_writeFloat
  3472 ;;		_main
  3473 ;; This function uses a non-reentrant model
  3474 ;;
  3475                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3476                           	line	28
  3477                           global __ptext8
  3478                           __ptext8:	;psect for function _writeCharLCD
  3479  0ACE                     psect	text8
  3480                           	file	"LCD.c"
  3481                           	line	28
  3482                           	global	__size_of_writeCharLCD
  3483                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  3484  000F                     	
  3485                           _writeCharLCD:	
  3486  0ACE                     ;incstack = 0
  3487                           	opt	stack 6
  3488                           ; Regs used in _writeCharLCD: [wreg]
  3489                           ;writeCharLCD@character stored from wreg
  3490                           	movwf	(writeCharLCD@character)
  3491  0ACE  00F1               	line	29
  3492                           	
  3493                           l1579:	
  3494  0ACF                     ;LCD.c: 29:    RD0 = 1;
  3495                           	bcf	status, 5	;RP0=0, select bank0
  3496  0ACF  1283               	bcf	status, 6	;RP1=0, select bank0
  3497  0AD0  1303               	bsf	(64/8),(64)&7	;volatile
  3498  0AD1  1408               	line	30
  3499                           	
  3500                           l1581:	
  3501  0AD2                     ;LCD.c: 30:    PORTB = character;
  3502                           	movf	(writeCharLCD@character),w
  3503  0AD2  0871               	movwf	(6)	;volatile
  3504  0AD3  0086               	line	31
  3505                           	
  3506                           l1583:	
  3507  0AD4                     ;LCD.c: 31:    RD1 = 1;
  3508                           	bsf	(65/8),(65)&7	;volatile
  3509  0AD4  1488               	line	32
  3510                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3511                           	opt asmopt_push
  3512                           opt asmopt_off
  3513                           	movlw	13
  3514  0AD5  300D               movwf	((??_writeCharLCD+0)+0),f
  3515  0AD6  00F0               	u3047:
  3516  0AD7                     decfsz	(??_writeCharLCD+0)+0,f
  3517  0AD7  0BF0               	goto	u3047
  3518  0AD8  2AD7               opt asmopt_pop
  3519                           
  3520                           	line	33
  3521                           	
  3522                           l1585:	
  3523  0AD9                     ;LCD.c: 33:    RD1 = 0;
  3524                           	bcf	status, 5	;RP0=0, select bank0
  3525  0AD9  1283               	bcf	status, 6	;RP1=0, select bank0
  3526  0ADA  1303               	bcf	(65/8),(65)&7	;volatile
  3527  0ADB  1088               	line	34
  3528                           	
  3529                           l88:	
  3530  0ADC                     	return
  3531  0ADC  0008               	opt stack 0
  3532                           GLOBAL	__end_of_writeCharLCD
  3533                           	__end_of_writeCharLCD:
  3534  0ADD                     	signat	_writeCharLCD,4217
  3535                           	global	_setCursorLCD
  3536                           
  3537 ;; *************** function _setCursorLCD *****************
  3538 ;; Defined at:
  3539 ;;		line 8 in file "LCD.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;  y               1    wreg     unsigned char 
  3542 ;;  x               1    3[COMMON] unsigned char 
  3543 ;; Auto vars:     Size  Location     Type
  3544 ;;  y               1    5[COMMON] unsigned char 
  3545 ;; Return value:  Size  Location     Type
  3546 ;;                  1    wreg      void 
  3547 ;; Registers used:
  3548 ;;		wreg, status,2, status,0, pclath, cstack
  3549 ;; Tracked objects:
  3550 ;;		On entry : 0/0
  3551 ;;		On exit  : 0/0
  3552 ;;		Unchanged: 0/0
  3553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3554 ;;      Params:         1       0       0       0       0
  3555 ;;      Locals:         1       0       0       0       0
  3556 ;;      Temps:          1       0       0       0       0
  3557 ;;      Totals:         3       0       0       0       0
  3558 ;;Total ram usage:        3 bytes
  3559 ;; Hardware stack levels used:    1
  3560 ;; Hardware stack levels required when called:    1
  3561 ;; This function calls:
  3562 ;;		_cmdLCD
  3563 ;; This function is called by:
  3564 ;;		_writeFloat
  3565 ;;		_main
  3566 ;;		_setup
  3567 ;; This function uses a non-reentrant model
  3568 ;;
  3569                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3570                           	line	8
  3571                           global __ptext9
  3572                           __ptext9:	;psect for function _setCursorLCD
  3573  0AF1                     psect	text9
  3574                           	file	"LCD.c"
  3575                           	line	8
  3576                           	global	__size_of_setCursorLCD
  3577                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  3578  001D                     	
  3579                           _setCursorLCD:	
  3580  0AF1                     ;incstack = 0
  3581                           	opt	stack 5
  3582                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  3583                           ;setCursorLCD@y stored from wreg
  3584                           	movwf	(setCursorLCD@y)
  3585  0AF1  00F5               	line	9
  3586                           	
  3587                           l1753:	
  3588  0AF2                     ;LCD.c: 9:     if(y == 1){
  3589                           		decf	((setCursorLCD@y)),w
  3590  0AF2  0375               	btfss	status,2
  3591  0AF3  1D03               	goto	u1861
  3592  0AF4  2AF6               	goto	u1860
  3593  0AF5  2AF7               u1861:
  3594  0AF6                     	goto	l1757
  3595  0AF6  2AFF               u1860:
  3596  0AF7                     	line	10
  3597                           	
  3598                           l1755:	
  3599  0AF7                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  3600                           	movf	(setCursorLCD@x),w
  3601  0AF7  0873               	addlw	07Fh
  3602  0AF8  3E7F               	movwf	(??_setCursorLCD+0)+0
  3603  0AF9  00F4               	movf	(??_setCursorLCD+0)+0,w
  3604  0AFA  0874               	bcf	status, 5	;RP0=0, select bank0
  3605  0AFB  1283               	bcf	status, 6	;RP1=0, select bank0
  3606  0AFC  1303               	movwf	(_cursor)
  3607  0AFD  00EE               	line	11
  3608                           ;LCD.c: 11:     }else{
  3609                           	goto	l1759
  3610  0AFE  2B07               	
  3611                           l74:	
  3612  0AFF                     	line	12
  3613                           	
  3614                           l1757:	
  3615  0AFF                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  3616                           	movf	(setCursorLCD@x),w
  3617  0AFF  0873               	addlw	0BFh
  3618  0B00  3EBF               	movwf	(??_setCursorLCD+0)+0
  3619  0B01  00F4               	movf	(??_setCursorLCD+0)+0,w
  3620  0B02  0874               	bcf	status, 5	;RP0=0, select bank0
  3621  0B03  1283               	bcf	status, 6	;RP1=0, select bank0
  3622  0B04  1303               	movwf	(_cursor)
  3623  0B05  00EE               	goto	l1759
  3624  0B06  2B07               	line	13
  3625                           ;LCD.c: 13:     }
  3626                           	
  3627                           l75:	
  3628  0B07                     	line	14
  3629                           	
  3630                           l1759:	
  3631  0B07                     ;LCD.c: 14:     cmdLCD(cursor);
  3632                           	movf	(_cursor),w
  3633  0B07  086E               	fcall	_cmdLCD
  3634  0B08  120A  158A  22DD  120A  158A  	line	15
  3635                           	
  3636                           l76:	
  3637  0B0D                     	return
  3638  0B0D  0008               	opt stack 0
  3639                           GLOBAL	__end_of_setCursorLCD
  3640                           	__end_of_setCursorLCD:
  3641  0B0E                     	signat	_setCursorLCD,8313
  3642                           	global	_initLCD
  3643                           
  3644 ;; *************** function _initLCD *****************
  3645 ;; Defined at:
  3646 ;;		line 36 in file "LCD.c"
  3647 ;; Parameters:    Size  Location     Type
  3648 ;;		None
  3649 ;; Auto vars:     Size  Location     Type
  3650 ;;		None
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  1    wreg      void 
  3653 ;; Registers used:
  3654 ;;		wreg, status,2, status,0, pclath, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3660 ;;      Params:         0       0       0       0       0
  3661 ;;      Locals:         0       0       0       0       0
  3662 ;;      Temps:          2       0       0       0       0
  3663 ;;      Totals:         2       0       0       0       0
  3664 ;;Total ram usage:        2 bytes
  3665 ;; Hardware stack levels used:    1
  3666 ;; Hardware stack levels required when called:    1
  3667 ;; This function calls:
  3668 ;;		_cmdLCD
  3669 ;; This function is called by:
  3670 ;;		_setup
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3674                           	line	36
  3675                           global __ptext10
  3676                           __ptext10:	;psect for function _initLCD
  3677  0BBD                     psect	text10
  3678                           	file	"LCD.c"
  3679                           	line	36
  3680                           	global	__size_of_initLCD
  3681                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3682  003A                     	
  3683                           _initLCD:	
  3684  0BBD                     ;incstack = 0
  3685                           	opt	stack 5
  3686                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3687                           	line	37
  3688                           	
  3689                           l1763:	
  3690  0BBD                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  3691                           	opt asmopt_push
  3692                           opt asmopt_off
  3693                           movlw	20
  3694  0BBD  3014               movwf	((??_initLCD+0)+0+1),f
  3695  0BBE  00F4               	movlw	121
  3696  0BBF  3079               movwf	((??_initLCD+0)+0),f
  3697  0BC0  00F3               	u3057:
  3698  0BC1                     decfsz	((??_initLCD+0)+0),f
  3699  0BC1  0BF3               	goto	u3057
  3700  0BC2  2BC1               	decfsz	((??_initLCD+0)+0+1),f
  3701  0BC3  0BF4               	goto	u3057
  3702  0BC4  2BC1               	nop2
  3703  0BC5  2BC6               opt asmopt_pop
  3704                           
  3705                           	line	38
  3706                           	
  3707                           l1765:	
  3708  0BC6                     ;LCD.c: 38:     cmdLCD(0x030);
  3709                           	movlw	low(030h)
  3710  0BC6  3030               	fcall	_cmdLCD
  3711  0BC7  120A  158A  22DD  120A  158A  	line	39
  3712                           	
  3713                           l1767:	
  3714  0BCC                     ;LCD.c: 39:     cmdLCD(0x030);
  3715                           	movlw	low(030h)
  3716  0BCC  3030               	fcall	_cmdLCD
  3717  0BCD  120A  158A  22DD  120A  158A  	line	40
  3718                           	
  3719                           l1769:	
  3720  0BD2                     ;LCD.c: 40:     cmdLCD(0x030);
  3721                           	movlw	low(030h)
  3722  0BD2  3030               	fcall	_cmdLCD
  3723  0BD3  120A  158A  22DD  120A  158A  	line	42
  3724                           	
  3725                           l1771:	
  3726  0BD8                     ;LCD.c: 42:     cmdLCD(0x38);
  3727                           	movlw	low(038h)
  3728  0BD8  3038               	fcall	_cmdLCD
  3729  0BD9  120A  158A  22DD  120A  158A  	line	43
  3730                           	
  3731                           l1773:	
  3732  0BDE                     ;LCD.c: 43:     cmdLCD(0x10);
  3733                           	movlw	low(010h)
  3734  0BDE  3010               	fcall	_cmdLCD
  3735  0BDF  120A  158A  22DD  120A  158A  	line	44
  3736                           	
  3737                           l1775:	
  3738  0BE4                     ;LCD.c: 44:     cmdLCD(0x01);
  3739                           	movlw	low(01h)
  3740  0BE4  3001               	fcall	_cmdLCD
  3741  0BE5  120A  158A  22DD  120A  158A  	line	45
  3742                           	
  3743                           l1777:	
  3744  0BEA                     ;LCD.c: 45:     cmdLCD(0x06);
  3745                           	movlw	low(06h)
  3746  0BEA  3006               	fcall	_cmdLCD
  3747  0BEB  120A  158A  22DD  120A  158A  	line	46
  3748                           	
  3749                           l1779:	
  3750  0BF0                     ;LCD.c: 46:     cmdLCD(0x0E);
  3751                           	movlw	low(0Eh)
  3752  0BF0  300E               	fcall	_cmdLCD
  3753  0BF1  120A  158A  22DD  120A  158A  	line	47
  3754                           	
  3755                           l91:	
  3756  0BF6                     	return
  3757  0BF6  0008               	opt stack 0
  3758                           GLOBAL	__end_of_initLCD
  3759                           	__end_of_initLCD:
  3760  0BF7                     	signat	_initLCD,89
  3761                           	global	_clcLCD
  3762                           
  3763 ;; *************** function _clcLCD *****************
  3764 ;; Defined at:
  3765 ;;		line 17 in file "LCD.c"
  3766 ;; Parameters:    Size  Location     Type
  3767 ;;		None
  3768 ;; Auto vars:     Size  Location     Type
  3769 ;;		None
  3770 ;; Return value:  Size  Location     Type
  3771 ;;                  1    wreg      void 
  3772 ;; Registers used:
  3773 ;;		wreg, status,2, status,0, pclath, cstack
  3774 ;; Tracked objects:
  3775 ;;		On entry : 0/0
  3776 ;;		On exit  : 0/0
  3777 ;;		Unchanged: 0/0
  3778 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3779 ;;      Params:         0       0       0       0       0
  3780 ;;      Locals:         0       0       0       0       0
  3781 ;;      Temps:          0       0       0       0       0
  3782 ;;      Totals:         0       0       0       0       0
  3783 ;;Total ram usage:        0 bytes
  3784 ;; Hardware stack levels used:    1
  3785 ;; Hardware stack levels required when called:    1
  3786 ;; This function calls:
  3787 ;;		_cmdLCD
  3788 ;; This function is called by:
  3789 ;;		_setup
  3790 ;; This function uses a non-reentrant model
  3791 ;;
  3792                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3793                           	line	17
  3794                           global __ptext11
  3795                           __ptext11:	;psect for function _clcLCD
  3796  0003                     psect	text11
  3797                           	file	"LCD.c"
  3798                           	line	17
  3799                           	global	__size_of_clcLCD
  3800                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  3801  0007                     	
  3802                           _clcLCD:	
  3803  0003                     ;incstack = 0
  3804                           	opt	stack 5
  3805                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  3806                           	line	18
  3807                           	
  3808                           l1761:	
  3809  0003                     ;LCD.c: 18:     cmdLCD(0x01);
  3810                           	movlw	low(01h)
  3811  0003  3001               	fcall	_cmdLCD
  3812  0004  120A  158A  22DD  120A  118A  	line	19
  3813                           	
  3814                           l79:	
  3815  0009                     	return
  3816  0009  0008               	opt stack 0
  3817                           GLOBAL	__end_of_clcLCD
  3818                           	__end_of_clcLCD:
  3819  000A                     	signat	_clcLCD,89
  3820                           	global	_cmdLCD
  3821                           
  3822 ;; *************** function _cmdLCD *****************
  3823 ;; Defined at:
  3824 ;;		line 49 in file "LCD.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  cmd             1    wreg     unsigned char 
  3827 ;; Auto vars:     Size  Location     Type
  3828 ;;  cmd             1    2[COMMON] unsigned char 
  3829 ;; Return value:  Size  Location     Type
  3830 ;;                  1    wreg      void 
  3831 ;; Registers used:
  3832 ;;		wreg
  3833 ;; Tracked objects:
  3834 ;;		On entry : 0/0
  3835 ;;		On exit  : 0/0
  3836 ;;		Unchanged: 0/0
  3837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3838 ;;      Params:         0       0       0       0       0
  3839 ;;      Locals:         1       0       0       0       0
  3840 ;;      Temps:          2       0       0       0       0
  3841 ;;      Totals:         3       0       0       0       0
  3842 ;;Total ram usage:        3 bytes
  3843 ;; Hardware stack levels used:    1
  3844 ;; This function calls:
  3845 ;;		Nothing
  3846 ;; This function is called by:
  3847 ;;		_setCursorLCD
  3848 ;;		_clcLCD
  3849 ;;		_initLCD
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3853                           	line	49
  3854                           global __ptext12
  3855                           __ptext12:	;psect for function _cmdLCD
  3856  0ADD                     psect	text12
  3857                           	file	"LCD.c"
  3858                           	line	49
  3859                           	global	__size_of_cmdLCD
  3860                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  3861  0014                     	
  3862                           _cmdLCD:	
  3863  0ADD                     ;incstack = 0
  3864                           	opt	stack 5
  3865                           ; Regs used in _cmdLCD: [wreg]
  3866                           ;cmdLCD@cmd stored from wreg
  3867                           	movwf	(cmdLCD@cmd)
  3868  0ADD  00F2               	line	50
  3869                           	
  3870                           l1635:	
  3871  0ADE                     ;LCD.c: 50:     RD0 = 0;
  3872                           	bcf	status, 5	;RP0=0, select bank0
  3873  0ADE  1283               	bcf	status, 6	;RP1=0, select bank0
  3874  0ADF  1303               	bcf	(64/8),(64)&7	;volatile
  3875  0AE0  1008               	line	51
  3876                           	
  3877                           l1637:	
  3878  0AE1                     ;LCD.c: 51:  PORTB = cmd;
  3879                           	movf	(cmdLCD@cmd),w
  3880  0AE1  0872               	movwf	(6)	;volatile
  3881  0AE2  0086               	line	52
  3882                           	
  3883                           l1639:	
  3884  0AE3                     ;LCD.c: 52:  RD1 = 1;
  3885                           	bsf	(65/8),(65)&7	;volatile
  3886  0AE3  1488               	line	53
  3887                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3888                           	opt asmopt_push
  3889                           opt asmopt_off
  3890                           movlw	6
  3891  0AE4  3006               movwf	((??_cmdLCD+0)+0+1),f
  3892  0AE5  00F1               	movlw	48
  3893  0AE6  3030               movwf	((??_cmdLCD+0)+0),f
  3894  0AE7  00F0               	u3067:
  3895  0AE8                     decfsz	((??_cmdLCD+0)+0),f
  3896  0AE8  0BF0               	goto	u3067
  3897  0AE9  2AE8               	decfsz	((??_cmdLCD+0)+0+1),f
  3898  0AEA  0BF1               	goto	u3067
  3899  0AEB  2AE8               	nop
  3900  0AEC  0000               opt asmopt_pop
  3901                           
  3902                           	line	54
  3903                           	
  3904                           l1641:	
  3905  0AED                     ;LCD.c: 54:     RD1 = 0;
  3906                           	bcf	status, 5	;RP0=0, select bank0
  3907  0AED  1283               	bcf	status, 6	;RP1=0, select bank0
  3908  0AEE  1303               	bcf	(65/8),(65)&7	;volatile
  3909  0AEF  1088               	line	55
  3910                           	
  3911                           l94:	
  3912  0AF0                     	return
  3913  0AF0  0008               	opt stack 0
  3914                           GLOBAL	__end_of_cmdLCD
  3915                           	__end_of_cmdLCD:
  3916  0AF1                     	signat	_cmdLCD,4217
  3917                           	global	_I2C_Master_Init
  3918                           
  3919 ;; *************** function _I2C_Master_Init *****************
  3920 ;; Defined at:
  3921 ;;		line 16 in file "I2C.c"
  3922 ;; Parameters:    Size  Location     Type
  3923 ;;  c               4    0[BANK0 ] const unsigned long 
  3924 ;; Auto vars:     Size  Location     Type
  3925 ;;		None
  3926 ;; Return value:  Size  Location     Type
  3927 ;;                  1    wreg      void 
  3928 ;; Registers used:
  3929 ;;		wreg, status,2, status,0, pclath, cstack
  3930 ;; Tracked objects:
  3931 ;;		On entry : 0/0
  3932 ;;		On exit  : 0/0
  3933 ;;		Unchanged: 0/0
  3934 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3935 ;;      Params:         0       4       0       0       0
  3936 ;;      Locals:         0       0       0       0       0
  3937 ;;      Temps:          0       4       0       0       0
  3938 ;;      Totals:         0       8       0       0       0
  3939 ;;Total ram usage:        8 bytes
  3940 ;; Hardware stack levels used:    1
  3941 ;; Hardware stack levels required when called:    1
  3942 ;; This function calls:
  3943 ;;		___lldiv
  3944 ;; This function is called by:
  3945 ;;		_setup
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  3949                           	file	"I2C.c"
  3950                           	line	16
  3951                           global __ptext13
  3952                           __ptext13:	;psect for function _I2C_Master_Init
  3953  0B85                     psect	text13
  3954                           	file	"I2C.c"
  3955                           	line	16
  3956                           	global	__size_of_I2C_Master_Init
  3957                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  3958  0038                     	
  3959                           _I2C_Master_Init:	
  3960  0B85                     ;incstack = 0
  3961                           	opt	stack 5
  3962                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3963                           	line	18
  3964                           	
  3965                           l1737:	
  3966  0B85                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  3967                           	movlw	low(028h)
  3968  0B85  3028               	bcf	status, 5	;RP0=0, select bank0
  3969  0B86  1283               	bcf	status, 6	;RP1=0, select bank0
  3970  0B87  1303               	movwf	(20)	;volatile
  3971  0B88  0094               	line	19
  3972                           	
  3973                           l1739:	
  3974  0B89                     ;I2C.c: 19:     SSPCON2 = 0;
  3975                           	bsf	status, 5	;RP0=1, select bank1
  3976  0B89  1683               	bcf	status, 6	;RP1=0, select bank1
  3977  0B8A  1303               	clrf	(145)^080h	;volatile
  3978  0B8B  0191               	line	20
  3979                           	
  3980                           l1741:	
  3981  0B8C                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  3982                           	bcf	status, 5	;RP0=0, select bank0
  3983  0B8C  1283               	bcf	status, 6	;RP1=0, select bank0
  3984  0B8D  1303               	movf	(I2C_Master_Init@c),w
  3985  0B8E  0820               	movwf	(??_I2C_Master_Init+0)+0
  3986  0B8F  00A4               	movf	(I2C_Master_Init@c+1),w
  3987  0B90  0821               	movwf	((??_I2C_Master_Init+0)+0+1)
  3988  0B91  00A5               	movf	(I2C_Master_Init@c+2),w
  3989  0B92  0822               	movwf	((??_I2C_Master_Init+0)+0+2)
  3990  0B93  00A6               	movf	(I2C_Master_Init@c+3),w
  3991  0B94  0823               	movwf	((??_I2C_Master_Init+0)+0+3)
  3992  0B95  00A7               	movlw	02h
  3993  0B96  3002               u1835:
  3994  0B97                     	clrc
  3995  0B97  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  3996  0B98  0DA4               	rlf	(??_I2C_Master_Init+0)+1,f
  3997  0B99  0DA5               	rlf	(??_I2C_Master_Init+0)+2,f
  3998  0B9A  0DA6               	rlf	(??_I2C_Master_Init+0)+3,f
  3999  0B9B  0DA7               u1830:
  4000  0B9C                     	addlw	-1
  4001  0B9C  3EFF               	skipz
  4002  0B9D  1D03               	goto	u1835
  4003  0B9E  2B97               	movf	3+(??_I2C_Master_Init+0)+0,w
  4004  0B9F  0827               	movwf	(___lldiv@divisor+3)
  4005  0BA0  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  4006  0BA1  0826               	movwf	(___lldiv@divisor+2)
  4007  0BA2  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  4008  0BA3  0825               	movwf	(___lldiv@divisor+1)
  4009  0BA4  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  4010  0BA5  0824               	movwf	(___lldiv@divisor)
  4011  0BA6  00F0               
  4012                           	movlw	0
  4013  0BA7  3000               	movwf	(___lldiv@dividend+3)
  4014  0BA8  00F7               	movlw	03Dh
  4015  0BA9  303D               	movwf	(___lldiv@dividend+2)
  4016  0BAA  00F6               	movlw	09h
  4017  0BAB  3009               	movwf	(___lldiv@dividend+1)
  4018  0BAC  00F5               	movlw	0
  4019  0BAD  3000               	movwf	(___lldiv@dividend)
  4020  0BAE  00F4               
  4021                           	fcall	___lldiv
  4022  0BAF  120A  158A  24C7  120A  158A  	movf	(0+(?___lldiv)),w
  4023  0BB4  0870               	addlw	0FFh
  4024  0BB5  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4025  0BB6  1683               	bcf	status, 6	;RP1=0, select bank1
  4026  0BB7  1303               	movwf	(147)^080h	;volatile
  4027  0BB8  0093               	line	21
  4028                           	
  4029                           l1743:	
  4030  0BB9                     ;I2C.c: 21:     SSPSTAT = 0;
  4031                           	clrf	(148)^080h	;volatile
  4032  0BB9  0194               	line	22
  4033                           	
  4034                           l1745:	
  4035  0BBA                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4036                           	bsf	(135)^080h,3	;volatile
  4037  0BBA  1587               	line	23
  4038                           	
  4039                           l1747:	
  4040  0BBB                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4041                           	bsf	(135)^080h,4	;volatile
  4042  0BBB  1607               	line	24
  4043                           	
  4044                           l29:	
  4045  0BBC                     	return
  4046  0BBC  0008               	opt stack 0
  4047                           GLOBAL	__end_of_I2C_Master_Init
  4048                           	__end_of_I2C_Master_Init:
  4049  0BBD                     	signat	_I2C_Master_Init,4217
  4050                           	global	___lldiv
  4051                           
  4052 ;; *************** function ___lldiv *****************
  4053 ;; Defined at:
  4054 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4055 ;; Parameters:    Size  Location     Type
  4056 ;;  divisor         4    0[COMMON] unsigned long 
  4057 ;;  dividend        4    4[COMMON] unsigned long 
  4058 ;; Auto vars:     Size  Location     Type
  4059 ;;  quotient        4    9[COMMON] unsigned long 
  4060 ;;  counter         1   13[COMMON] unsigned char 
  4061 ;; Return value:  Size  Location     Type
  4062 ;;                  4    0[COMMON] unsigned long 
  4063 ;; Registers used:
  4064 ;;		wreg, status,2, status,0
  4065 ;; Tracked objects:
  4066 ;;		On entry : 0/0
  4067 ;;		On exit  : 0/0
  4068 ;;		Unchanged: 0/0
  4069 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4070 ;;      Params:         8       0       0       0       0
  4071 ;;      Locals:         5       0       0       0       0
  4072 ;;      Temps:          1       0       0       0       0
  4073 ;;      Totals:        14       0       0       0       0
  4074 ;;Total ram usage:       14 bytes
  4075 ;; Hardware stack levels used:    1
  4076 ;; This function calls:
  4077 ;;		Nothing
  4078 ;; This function is called by:
  4079 ;;		_I2C_Master_Init
  4080 ;; This function uses a non-reentrant model
  4081 ;;
  4082                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  4083                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4084                           	line	5
  4085                           global __ptext14
  4086                           __ptext14:	;psect for function ___lldiv
  4087  0CC7                     psect	text14
  4088                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4089                           	line	5
  4090                           	global	__size_of___lldiv
  4091                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4092  006D                     	
  4093                           ___lldiv:	
  4094  0CC7                     ;incstack = 0
  4095                           	opt	stack 5
  4096                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4097                           	line	13
  4098                           	
  4099                           l1713:	
  4100  0CC7                     	movlw	high highword(0)
  4101  0CC7  3000               	movwf	(___lldiv@quotient+3)
  4102  0CC8  00FC               	movlw	low highword(0)
  4103  0CC9  3000               	movwf	(___lldiv@quotient+2)
  4104  0CCA  00FB               	movlw	high(0)
  4105  0CCB  3000               	movwf	(___lldiv@quotient+1)
  4106  0CCC  00FA               	movlw	low(0)
  4107  0CCD  3000               	movwf	(___lldiv@quotient)
  4108  0CCE  00F9               
  4109                           	line	14
  4110                           	movf	(___lldiv@divisor+3),w
  4111  0CCF  0873               	iorwf	(___lldiv@divisor+2),w
  4112  0CD0  0472               	iorwf	(___lldiv@divisor+1),w
  4113  0CD1  0471               	iorwf	(___lldiv@divisor),w
  4114  0CD2  0470               	skipnz
  4115  0CD3  1903               	goto	u1761
  4116  0CD4  2CD6               	goto	u1760
  4117  0CD5  2CD7               u1761:
  4118  0CD6                     	goto	l1733
  4119  0CD6  2D2A               u1760:
  4120  0CD7                     	line	15
  4121                           	
  4122                           l1715:	
  4123  0CD7                     	clrf	(___lldiv@counter)
  4124  0CD7  01FD               	incf	(___lldiv@counter),f
  4125  0CD8  0AFD               	line	16
  4126                           	goto	l1719
  4127  0CD9  2CE8               	
  4128                           l329:	
  4129  0CDA                     	line	17
  4130                           	
  4131                           l1717:	
  4132  0CDA                     	movlw	01h
  4133  0CDA  3001               	movwf	(??___lldiv+0)+0
  4134  0CDB  00F8               u1775:
  4135  0CDC                     	clrc
  4136  0CDC  1003               	rlf	(___lldiv@divisor),f
  4137  0CDD  0DF0               	rlf	(___lldiv@divisor+1),f
  4138  0CDE  0DF1               	rlf	(___lldiv@divisor+2),f
  4139  0CDF  0DF2               	rlf	(___lldiv@divisor+3),f
  4140  0CE0  0DF3               	decfsz	(??___lldiv+0)+0
  4141  0CE1  0BF8               	goto	u1775
  4142  0CE2  2CDC               	line	18
  4143                           	movlw	low(01h)
  4144  0CE3  3001               	movwf	(??___lldiv+0)+0
  4145  0CE4  00F8               	movf	(??___lldiv+0)+0,w
  4146  0CE5  0878               	addwf	(___lldiv@counter),f
  4147  0CE6  07FD               	goto	l1719
  4148  0CE7  2CE8               	line	19
  4149                           	
  4150                           l328:	
  4151  0CE8                     	line	16
  4152                           	
  4153                           l1719:	
  4154  0CE8                     	btfss	(___lldiv@divisor+3),(31)&7
  4155  0CE8  1FF3               	goto	u1781
  4156  0CE9  2CEB               	goto	u1780
  4157  0CEA  2CEC               u1781:
  4158  0CEB                     	goto	l1717
  4159  0CEB  2CDA               u1780:
  4160  0CEC                     	goto	l1721
  4161  0CEC  2CEE               	
  4162                           l330:	
  4163  0CED                     	goto	l1721
  4164  0CED  2CEE               	line	20
  4165                           	
  4166                           l331:	
  4167  0CEE                     	line	21
  4168                           	
  4169                           l1721:	
  4170  0CEE                     	movlw	01h
  4171  0CEE  3001               	movwf	(??___lldiv+0)+0
  4172  0CEF  00F8               u1795:
  4173  0CF0                     	clrc
  4174  0CF0  1003               	rlf	(___lldiv@quotient),f
  4175  0CF1  0DF9               	rlf	(___lldiv@quotient+1),f
  4176  0CF2  0DFA               	rlf	(___lldiv@quotient+2),f
  4177  0CF3  0DFB               	rlf	(___lldiv@quotient+3),f
  4178  0CF4  0DFC               	decfsz	(??___lldiv+0)+0
  4179  0CF5  0BF8               	goto	u1795
  4180  0CF6  2CF0               	line	22
  4181                           	
  4182                           l1723:	
  4183  0CF7                     	movf	(___lldiv@divisor+3),w
  4184  0CF7  0873               	subwf	(___lldiv@dividend+3),w
  4185  0CF8  0277               	skipz
  4186  0CF9  1D03               	goto	u1805
  4187  0CFA  2D05               	movf	(___lldiv@divisor+2),w
  4188  0CFB  0872               	subwf	(___lldiv@dividend+2),w
  4189  0CFC  0276               	skipz
  4190  0CFD  1D03               	goto	u1805
  4191  0CFE  2D05               	movf	(___lldiv@divisor+1),w
  4192  0CFF  0871               	subwf	(___lldiv@dividend+1),w
  4193  0D00  0275               	skipz
  4194  0D01  1D03               	goto	u1805
  4195  0D02  2D05               	movf	(___lldiv@divisor),w
  4196  0D03  0870               	subwf	(___lldiv@dividend),w
  4197  0D04  0274               u1805:
  4198  0D05                     	skipc
  4199  0D05  1C03               	goto	u1801
  4200  0D06  2D08               	goto	u1800
  4201  0D07  2D09               u1801:
  4202  0D08                     	goto	l1729
  4203  0D08  2D19               u1800:
  4204  0D09                     	line	23
  4205                           	
  4206                           l1725:	
  4207  0D09                     	movf	(___lldiv@divisor),w
  4208  0D09  0870               	subwf	(___lldiv@dividend),f
  4209  0D0A  02F4               	movf	(___lldiv@divisor+1),w
  4210  0D0B  0871               	skipc
  4211  0D0C  1C03               	incfsz	(___lldiv@divisor+1),w
  4212  0D0D  0F71               	subwf	(___lldiv@dividend+1),f
  4213  0D0E  02F5               	movf	(___lldiv@divisor+2),w
  4214  0D0F  0872               	skipc
  4215  0D10  1C03               	incfsz	(___lldiv@divisor+2),w
  4216  0D11  0F72               	subwf	(___lldiv@dividend+2),f
  4217  0D12  02F6               	movf	(___lldiv@divisor+3),w
  4218  0D13  0873               	skipc
  4219  0D14  1C03               	incfsz	(___lldiv@divisor+3),w
  4220  0D15  0F73               	subwf	(___lldiv@dividend+3),f
  4221  0D16  02F7               	line	24
  4222                           	
  4223                           l1727:	
  4224  0D17                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4225  0D17  1479               	goto	l1729
  4226  0D18  2D19               	line	25
  4227                           	
  4228                           l332:	
  4229  0D19                     	line	26
  4230                           	
  4231                           l1729:	
  4232  0D19                     	movlw	01h
  4233  0D19  3001               u1815:
  4234  0D1A                     	clrc
  4235  0D1A  1003               	rrf	(___lldiv@divisor+3),f
  4236  0D1B  0CF3               	rrf	(___lldiv@divisor+2),f
  4237  0D1C  0CF2               	rrf	(___lldiv@divisor+1),f
  4238  0D1D  0CF1               	rrf	(___lldiv@divisor),f
  4239  0D1E  0CF0               	addlw	-1
  4240  0D1F  3EFF               	skipz
  4241  0D20  1D03               	goto	u1815
  4242  0D21  2D1A               
  4243                           	line	27
  4244                           	
  4245                           l1731:	
  4246  0D22                     	movlw	01h
  4247  0D22  3001               	subwf	(___lldiv@counter),f
  4248  0D23  02FD               	btfss	status,2
  4249  0D24  1D03               	goto	u1821
  4250  0D25  2D27               	goto	u1820
  4251  0D26  2D28               u1821:
  4252  0D27                     	goto	l1721
  4253  0D27  2CEE               u1820:
  4254  0D28                     	goto	l1733
  4255  0D28  2D2A               	
  4256                           l333:	
  4257  0D29                     	goto	l1733
  4258  0D29  2D2A               	line	28
  4259                           	
  4260                           l327:	
  4261  0D2A                     	line	29
  4262                           	
  4263                           l1733:	
  4264  0D2A                     	movf	(___lldiv@quotient+3),w
  4265  0D2A  087C               	movwf	(?___lldiv+3)
  4266  0D2B  00F3               	movf	(___lldiv@quotient+2),w
  4267  0D2C  087B               	movwf	(?___lldiv+2)
  4268  0D2D  00F2               	movf	(___lldiv@quotient+1),w
  4269  0D2E  087A               	movwf	(?___lldiv+1)
  4270  0D2F  00F1               	movf	(___lldiv@quotient),w
  4271  0D30  0879               	movwf	(?___lldiv)
  4272  0D31  00F0               
  4273                           	goto	l334
  4274  0D32  2D33               	
  4275                           l1735:	
  4276  0D33                     	line	30
  4277                           	
  4278                           l334:	
  4279  0D33                     	return
  4280  0D33  0008               	opt stack 0
  4281                           GLOBAL	__end_of___lldiv
  4282                           	__end_of___lldiv:
  4283  0D34                     	signat	___lldiv,8316
  4284                           	global	___xxtofl
  4285                           
  4286 ;; *************** function ___xxtofl *****************
  4287 ;; Defined at:
  4288 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4289 ;; Parameters:    Size  Location     Type
  4290 ;;  sign            1    wreg     unsigned char 
  4291 ;;  val             4    0[COMMON] long 
  4292 ;; Auto vars:     Size  Location     Type
  4293 ;;  sign            1    8[COMMON] unsigned char 
  4294 ;;  arg             4   10[COMMON] unsigned long 
  4295 ;;  exp             1    9[COMMON] unsigned char 
  4296 ;; Return value:  Size  Location     Type
  4297 ;;                  4    0[COMMON] unsigned char 
  4298 ;; Registers used:
  4299 ;;		wreg, status,2, status,0
  4300 ;; Tracked objects:
  4301 ;;		On entry : 0/0
  4302 ;;		On exit  : 0/0
  4303 ;;		Unchanged: 0/0
  4304 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4305 ;;      Params:         4       0       0       0       0
  4306 ;;      Locals:         6       0       0       0       0
  4307 ;;      Temps:          4       0       0       0       0
  4308 ;;      Totals:        14       0       0       0       0
  4309 ;;Total ram usage:       14 bytes
  4310 ;; Hardware stack levels used:    1
  4311 ;; This function calls:
  4312 ;;		Nothing
  4313 ;; This function is called by:
  4314 ;;		_main
  4315 ;; This function uses a non-reentrant model
  4316 ;;
  4317                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  4318                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4319                           	line	10
  4320                           global __ptext15
  4321                           __ptext15:	;psect for function ___xxtofl
  4322  0E3E                     psect	text15
  4323                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4324                           	line	10
  4325                           	global	__size_of___xxtofl
  4326                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  4327  00C2                     	
  4328                           ___xxtofl:	
  4329  0E3E                     ;incstack = 0
  4330                           	opt	stack 7
  4331                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4332                           ;___xxtofl@sign stored from wreg
  4333                           	movwf	(___xxtofl@sign)
  4334  0E3E  00F8               	line	15
  4335                           	
  4336                           l2249:	
  4337  0E3F                     	movf	((___xxtofl@sign)),w
  4338  0E3F  0878               	btfsc	status,2
  4339  0E40  1903               	goto	u2881
  4340  0E41  2E43               	goto	u2880
  4341  0E42  2E44               u2881:
  4342  0E43                     	goto	l2255
  4343  0E43  2E58               u2880:
  4344  0E44                     	
  4345                           l2251:	
  4346  0E44                     	btfss	(___xxtofl@val+3),7
  4347  0E44  1FF3               	goto	u2891
  4348  0E45  2E47               	goto	u2890
  4349  0E46  2E48               u2891:
  4350  0E47                     	goto	l2255
  4351  0E47  2E58               u2890:
  4352  0E48                     	line	16
  4353                           	
  4354                           l2253:	
  4355  0E48                     	comf	(___xxtofl@val)+0,w
  4356  0E48  0970               	movwf	(___xxtofl@arg)
  4357  0E49  00FA               	comf	(___xxtofl@val)+1,w
  4358  0E4A  0971               	movwf	(___xxtofl@arg+1)
  4359  0E4B  00FB               	comf	(___xxtofl@val)+2,w
  4360  0E4C  0972               	movwf	(___xxtofl@arg+2)
  4361  0E4D  00FC               	comf	(___xxtofl@val)+3,w
  4362  0E4E  0973               	movwf	(___xxtofl@arg+3)
  4363  0E4F  00FD               	incf	(___xxtofl@arg),f
  4364  0E50  0AFA               	skipnz
  4365  0E51  1903               	incf	(___xxtofl@arg+1),f
  4366  0E52  0AFB               	skipnz
  4367  0E53  1903               	incf	(___xxtofl@arg+2),f
  4368  0E54  0AFC               	skipnz
  4369  0E55  1903               	incf	(___xxtofl@arg+3),f
  4370  0E56  0AFD               	line	17
  4371                           	goto	l706
  4372  0E57  2E60               	line	18
  4373                           	
  4374                           l705:	
  4375  0E58                     	line	19
  4376                           	
  4377                           l2255:	
  4378  0E58                     	movf	(___xxtofl@val+3),w
  4379  0E58  0873               	movwf	(___xxtofl@arg+3)
  4380  0E59  00FD               	movf	(___xxtofl@val+2),w
  4381  0E5A  0872               	movwf	(___xxtofl@arg+2)
  4382  0E5B  00FC               	movf	(___xxtofl@val+1),w
  4383  0E5C  0871               	movwf	(___xxtofl@arg+1)
  4384  0E5D  00FB               	movf	(___xxtofl@val),w
  4385  0E5E  0870               	movwf	(___xxtofl@arg)
  4386  0E5F  00FA               
  4387                           	line	20
  4388                           	
  4389                           l706:	
  4390  0E60                     	line	21
  4391                           	movf	(___xxtofl@val+3),w
  4392  0E60  0873               	iorwf	(___xxtofl@val+2),w
  4393  0E61  0472               	iorwf	(___xxtofl@val+1),w
  4394  0E62  0471               	iorwf	(___xxtofl@val),w
  4395  0E63  0470               	skipz
  4396  0E64  1D03               	goto	u2901
  4397  0E65  2E67               	goto	u2900
  4398  0E66  2E68               u2901:
  4399  0E67                     	goto	l2261
  4400  0E67  2E72               u2900:
  4401  0E68                     	line	22
  4402                           	
  4403                           l2257:	
  4404  0E68                     	movlw	0x0
  4405  0E68  3000               	movwf	(?___xxtofl+3)
  4406  0E69  00F3               	movlw	0x0
  4407  0E6A  3000               	movwf	(?___xxtofl+2)
  4408  0E6B  00F2               	movlw	0x0
  4409  0E6C  3000               	movwf	(?___xxtofl+1)
  4410  0E6D  00F1               	movlw	0x0
  4411  0E6E  3000               	movwf	(?___xxtofl)
  4412  0E6F  00F0               
  4413                           	goto	l708
  4414  0E70  2EFF               	
  4415                           l2259:	
  4416  0E71                     	goto	l708
  4417  0E71  2EFF               	
  4418                           l707:	
  4419  0E72                     	line	23
  4420                           	
  4421                           l2261:	
  4422  0E72                     	movlw	low(096h)
  4423  0E72  3096               	movwf	(??___xxtofl+0)+0
  4424  0E73  00F4               	movf	(??___xxtofl+0)+0,w
  4425  0E74  0874               	movwf	(___xxtofl@exp)
  4426  0E75  00F9               	line	24
  4427                           	goto	l2265
  4428  0E76  2E85               	
  4429                           l710:	
  4430  0E77                     	line	25
  4431                           	
  4432                           l2263:	
  4433  0E77                     	movlw	low(01h)
  4434  0E77  3001               	movwf	(??___xxtofl+0)+0
  4435  0E78  00F4               	movf	(??___xxtofl+0)+0,w
  4436  0E79  0874               	addwf	(___xxtofl@exp),f
  4437  0E7A  07F9               	line	26
  4438                           	movlw	01h
  4439  0E7B  3001               u2915:
  4440  0E7C                     	clrc
  4441  0E7C  1003               	rrf	(___xxtofl@arg+3),f
  4442  0E7D  0CFD               	rrf	(___xxtofl@arg+2),f
  4443  0E7E  0CFC               	rrf	(___xxtofl@arg+1),f
  4444  0E7F  0CFB               	rrf	(___xxtofl@arg),f
  4445  0E80  0CFA               	addlw	-1
  4446  0E81  3EFF               	skipz
  4447  0E82  1D03               	goto	u2915
  4448  0E83  2E7C               
  4449                           	goto	l2265
  4450  0E84  2E85               	line	27
  4451                           	
  4452                           l709:	
  4453  0E85                     	line	24
  4454                           	
  4455                           l2265:	
  4456  0E85                     	movlw	high highword(0FE000000h)
  4457  0E85  30FE               	andwf	(___xxtofl@arg+3),w
  4458  0E86  057D               	btfss	status,2
  4459  0E87  1D03               	goto	u2921
  4460  0E88  2E8A               	goto	u2920
  4461  0E89  2E8B               u2921:
  4462  0E8A                     	goto	l2263
  4463  0E8A  2E77               u2920:
  4464  0E8B                     	goto	l712
  4465  0E8B  2EA8               	
  4466                           l711:	
  4467  0E8C                     	line	28
  4468                           	goto	l712
  4469  0E8C  2EA8               	
  4470                           l713:	
  4471  0E8D                     	line	29
  4472                           	
  4473                           l2267:	
  4474  0E8D                     	movlw	low(01h)
  4475  0E8D  3001               	movwf	(??___xxtofl+0)+0
  4476  0E8E  00F4               	movf	(??___xxtofl+0)+0,w
  4477  0E8F  0874               	addwf	(___xxtofl@exp),f
  4478  0E90  07F9               	line	30
  4479                           	
  4480                           l2269:	
  4481  0E91                     	movlw	01h
  4482  0E91  3001               	addwf	(___xxtofl@arg),f
  4483  0E92  07FA               	movlw	0
  4484  0E93  3000               	skipnc
  4485  0E94  1803               movlw 1
  4486  0E95  3001               	addwf	(___xxtofl@arg+1),f
  4487  0E96  07FB               	movlw	0
  4488  0E97  3000               	skipnc
  4489  0E98  1803               movlw 1
  4490  0E99  3001               	addwf	(___xxtofl@arg+2),f
  4491  0E9A  07FC               	movlw	0
  4492  0E9B  3000               	skipnc
  4493  0E9C  1803               movlw 1
  4494  0E9D  3001               	addwf	(___xxtofl@arg+3),f
  4495  0E9E  07FD               	line	31
  4496                           	
  4497                           l2271:	
  4498  0E9F                     	movlw	01h
  4499  0E9F  3001               u2935:
  4500  0EA0                     	clrc
  4501  0EA0  1003               	rrf	(___xxtofl@arg+3),f
  4502  0EA1  0CFD               	rrf	(___xxtofl@arg+2),f
  4503  0EA2  0CFC               	rrf	(___xxtofl@arg+1),f
  4504  0EA3  0CFB               	rrf	(___xxtofl@arg),f
  4505  0EA4  0CFA               	addlw	-1
  4506  0EA5  3EFF               	skipz
  4507  0EA6  1D03               	goto	u2935
  4508  0EA7  2EA0               
  4509                           	line	32
  4510                           	
  4511                           l712:	
  4512  0EA8                     	line	28
  4513                           	movlw	high highword(0FF000000h)
  4514  0EA8  30FF               	andwf	(___xxtofl@arg+3),w
  4515  0EA9  057D               	btfss	status,2
  4516  0EAA  1D03               	goto	u2941
  4517  0EAB  2EAD               	goto	u2940
  4518  0EAC  2EAE               u2941:
  4519  0EAD                     	goto	l2267
  4520  0EAD  2E8D               u2940:
  4521  0EAE                     	goto	l2275
  4522  0EAE  2EBC               	
  4523                           l714:	
  4524  0EAF                     	line	33
  4525                           	goto	l2275
  4526  0EAF  2EBC               	
  4527                           l716:	
  4528  0EB0                     	line	34
  4529                           	
  4530                           l2273:	
  4531  0EB0                     	movlw	01h
  4532  0EB0  3001               	subwf	(___xxtofl@exp),f
  4533  0EB1  02F9               	line	35
  4534                           	movlw	01h
  4535  0EB2  3001               	movwf	(??___xxtofl+0)+0
  4536  0EB3  00F4               u2955:
  4537  0EB4                     	clrc
  4538  0EB4  1003               	rlf	(___xxtofl@arg),f
  4539  0EB5  0DFA               	rlf	(___xxtofl@arg+1),f
  4540  0EB6  0DFB               	rlf	(___xxtofl@arg+2),f
  4541  0EB7  0DFC               	rlf	(___xxtofl@arg+3),f
  4542  0EB8  0DFD               	decfsz	(??___xxtofl+0)+0
  4543  0EB9  0BF4               	goto	u2955
  4544  0EBA  2EB4               	goto	l2275
  4545  0EBB  2EBC               	line	36
  4546                           	
  4547                           l715:	
  4548  0EBC                     	line	33
  4549                           	
  4550                           l2275:	
  4551  0EBC                     	btfsc	(___xxtofl@arg+2),(23)&7
  4552  0EBC  1BFC               	goto	u2961
  4553  0EBD  2EBF               	goto	u2960
  4554  0EBE  2EC0               u2961:
  4555  0EBF                     	goto	l719
  4556  0EBF  2EC7               u2960:
  4557  0EC0                     	
  4558                           l2277:	
  4559  0EC0                     	movlw	low(02h)
  4560  0EC0  3002               	subwf	(___xxtofl@exp),w
  4561  0EC1  0279               	skipnc
  4562  0EC2  1803               	goto	u2971
  4563  0EC3  2EC5               	goto	u2970
  4564  0EC4  2EC6               u2971:
  4565  0EC5                     	goto	l2273
  4566  0EC5  2EB0               u2970:
  4567  0EC6                     	goto	l719
  4568  0EC6  2EC7               	
  4569                           l718:	
  4570  0EC7                     	
  4571                           l719:	
  4572  0EC7                     	line	37
  4573                           	btfsc	(___xxtofl@exp),(0)&7
  4574  0EC7  1879               	goto	u2981
  4575  0EC8  2ECA               	goto	u2980
  4576  0EC9  2ECB               u2981:
  4577  0ECA                     	goto	l720
  4578  0ECA  2ED3               u2980:
  4579  0ECB                     	line	38
  4580                           	
  4581                           l2279:	
  4582  0ECB                     	movlw	0FFh
  4583  0ECB  30FF               	andwf	(___xxtofl@arg),f
  4584  0ECC  05FA               	movlw	0FFh
  4585  0ECD  30FF               	andwf	(___xxtofl@arg+1),f
  4586  0ECE  05FB               	movlw	07Fh
  4587  0ECF  307F               	andwf	(___xxtofl@arg+2),f
  4588  0ED0  05FC               	movlw	0FFh
  4589  0ED1  30FF               	andwf	(___xxtofl@arg+3),f
  4590  0ED2  05FD               	
  4591                           l720:	
  4592  0ED3                     	line	39
  4593                           	clrc
  4594  0ED3  1003               	rrf	(___xxtofl@exp),f
  4595  0ED4  0CF9               
  4596                           	line	40
  4597                           	
  4598                           l2281:	
  4599  0ED5                     	movf	(___xxtofl@exp),w
  4600  0ED5  0879               	movwf	(??___xxtofl+0)+0
  4601  0ED6  00F4               	clrf	(??___xxtofl+0)+0+1
  4602  0ED7  01F5               	clrf	(??___xxtofl+0)+0+2
  4603  0ED8  01F6               	clrf	(??___xxtofl+0)+0+3
  4604  0ED9  01F7               	movlw	018h
  4605  0EDA  3018               u2995:
  4606  0EDB                     	clrc
  4607  0EDB  1003               	rlf	(??___xxtofl+0)+0,f
  4608  0EDC  0DF4               	rlf	(??___xxtofl+0)+1,f
  4609  0EDD  0DF5               	rlf	(??___xxtofl+0)+2,f
  4610  0EDE  0DF6               	rlf	(??___xxtofl+0)+3,f
  4611  0EDF  0DF7               u2990:
  4612  0EE0                     	addlw	-1
  4613  0EE0  3EFF               	skipz
  4614  0EE1  1D03               	goto	u2995
  4615  0EE2  2EDB               	movf	0+(??___xxtofl+0)+0,w
  4616  0EE3  0874               	iorwf	(___xxtofl@arg),f
  4617  0EE4  04FA               	movf	1+(??___xxtofl+0)+0,w
  4618  0EE5  0875               	iorwf	(___xxtofl@arg+1),f
  4619  0EE6  04FB               	movf	2+(??___xxtofl+0)+0,w
  4620  0EE7  0876               	iorwf	(___xxtofl@arg+2),f
  4621  0EE8  04FC               	movf	3+(??___xxtofl+0)+0,w
  4622  0EE9  0877               	iorwf	(___xxtofl@arg+3),f
  4623  0EEA  04FD               	line	41
  4624                           	
  4625                           l2283:	
  4626  0EEB                     	movf	((___xxtofl@sign)),w
  4627  0EEB  0878               	btfsc	status,2
  4628  0EEC  1903               	goto	u3001
  4629  0EED  2EEF               	goto	u3000
  4630  0EEE  2EF0               u3001:
  4631  0EEF                     	goto	l2289
  4632  0EEF  2EF6               u3000:
  4633  0EF0                     	
  4634                           l2285:	
  4635  0EF0                     	btfss	(___xxtofl@val+3),7
  4636  0EF0  1FF3               	goto	u3011
  4637  0EF1  2EF3               	goto	u3010
  4638  0EF2  2EF4               u3011:
  4639  0EF3                     	goto	l2289
  4640  0EF3  2EF6               u3010:
  4641  0EF4                     	line	42
  4642                           	
  4643                           l2287:	
  4644  0EF4                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  4645  0EF4  17FD               	goto	l2289
  4646  0EF5  2EF6               	
  4647                           l721:	
  4648  0EF6                     	line	43
  4649                           	
  4650                           l2289:	
  4651  0EF6                     	movf	(___xxtofl@arg+3),w
  4652  0EF6  087D               	movwf	(?___xxtofl+3)
  4653  0EF7  00F3               	movf	(___xxtofl@arg+2),w
  4654  0EF8  087C               	movwf	(?___xxtofl+2)
  4655  0EF9  00F2               	movf	(___xxtofl@arg+1),w
  4656  0EFA  087B               	movwf	(?___xxtofl+1)
  4657  0EFB  00F1               	movf	(___xxtofl@arg),w
  4658  0EFC  087A               	movwf	(?___xxtofl)
  4659  0EFD  00F0               
  4660                           	goto	l708
  4661  0EFE  2EFF               	
  4662                           l2291:	
  4663  0EFF                     	line	44
  4664                           	
  4665                           l708:	
  4666  0EFF                     	return
  4667  0EFF  0008               	opt stack 0
  4668                           GLOBAL	__end_of___xxtofl
  4669                           	__end_of___xxtofl:
  4670  0F00                     	signat	___xxtofl,8316
  4671                           	global	___fltol
  4672                           
  4673 ;; *************** function ___fltol *****************
  4674 ;; Defined at:
  4675 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4676 ;; Parameters:    Size  Location     Type
  4677 ;;  f1              4    0[COMMON] unsigned char 
  4678 ;; Auto vars:     Size  Location     Type
  4679 ;;  exp1            1   10[COMMON] unsigned char 
  4680 ;;  sign1           1    9[COMMON] unsigned char 
  4681 ;; Return value:  Size  Location     Type
  4682 ;;                  4    0[COMMON] long 
  4683 ;; Registers used:
  4684 ;;		wreg, status,2, status,0
  4685 ;; Tracked objects:
  4686 ;;		On entry : 0/0
  4687 ;;		On exit  : 0/0
  4688 ;;		Unchanged: 0/0
  4689 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4690 ;;      Params:         4       0       0       0       0
  4691 ;;      Locals:         2       0       0       0       0
  4692 ;;      Temps:          5       0       0       0       0
  4693 ;;      Totals:        11       0       0       0       0
  4694 ;;Total ram usage:       11 bytes
  4695 ;; Hardware stack levels used:    1
  4696 ;; This function calls:
  4697 ;;		Nothing
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  4703                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4704                           	line	43
  4705                           global __ptext16
  4706                           __ptext16:	;psect for function ___fltol
  4707  0DA4                     psect	text16
  4708                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4709                           	line	43
  4710                           	global	__size_of___fltol
  4711                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  4712  009A                     	
  4713                           ___fltol:	
  4714  0DA4                     ;incstack = 0
  4715                           	opt	stack 7
  4716                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4717                           	line	47
  4718                           	
  4719                           l1879:	
  4720  0DA4                     	movf	(___fltol@f1),w
  4721  0DA4  0870               	movwf	(??___fltol+0)+0
  4722  0DA5  00F4               	movf	(___fltol@f1+1),w
  4723  0DA6  0871               	movwf	((??___fltol+0)+0+1)
  4724  0DA7  00F5               	movf	(___fltol@f1+2),w
  4725  0DA8  0872               	movwf	((??___fltol+0)+0+2)
  4726  0DA9  00F6               	movf	(___fltol@f1+3),w
  4727  0DAA  0873               	movwf	((??___fltol+0)+0+3)
  4728  0DAB  00F7               	clrc
  4729  0DAC  1003               	rlf	(??___fltol+0)+2,w
  4730  0DAD  0D76               	rlf	(??___fltol+0)+3,w
  4731  0DAE  0D77               	movwf	(??___fltol+4)+0
  4732  0DAF  00F8               	movf	(??___fltol+4)+0,w
  4733  0DB0  0878               	movwf	(___fltol@exp1)
  4734  0DB1  00FA               	movf	(((___fltol@exp1))),w
  4735  0DB2  087A               	btfss	status,2
  4736  0DB3  1D03               	goto	u1951
  4737  0DB4  2DB6               	goto	u1950
  4738  0DB5  2DB7               u1951:
  4739  0DB6                     	goto	l1885
  4740  0DB6  2DC1               u1950:
  4741  0DB7                     	line	48
  4742                           	
  4743                           l1881:	
  4744  0DB7                     	movlw	high highword(0)
  4745  0DB7  3000               	movwf	(?___fltol+3)
  4746  0DB8  00F3               	movlw	low highword(0)
  4747  0DB9  3000               	movwf	(?___fltol+2)
  4748  0DBA  00F2               	movlw	high(0)
  4749  0DBB  3000               	movwf	(?___fltol+1)
  4750  0DBC  00F1               	movlw	low(0)
  4751  0DBD  3000               	movwf	(?___fltol)
  4752  0DBE  00F0               
  4753                           	goto	l484
  4754  0DBF  2E3D               	
  4755                           l1883:	
  4756  0DC0                     	goto	l484
  4757  0DC0  2E3D               	
  4758                           l483:	
  4759  0DC1                     	line	49
  4760                           	
  4761                           l1885:	
  4762  0DC1                     	movf	(___fltol@f1),w
  4763  0DC1  0870               	movwf	(??___fltol+0)+0
  4764  0DC2  00F4               	movf	(___fltol@f1+1),w
  4765  0DC3  0871               	movwf	((??___fltol+0)+0+1)
  4766  0DC4  00F5               	movf	(___fltol@f1+2),w
  4767  0DC5  0872               	movwf	((??___fltol+0)+0+2)
  4768  0DC6  00F6               	movf	(___fltol@f1+3),w
  4769  0DC7  0873               	movwf	((??___fltol+0)+0+3)
  4770  0DC8  00F7               	movlw	01Fh
  4771  0DC9  301F               u1965:
  4772  0DCA                     	clrc
  4773  0DCA  1003               	rrf	(??___fltol+0)+3,f
  4774  0DCB  0CF7               	rrf	(??___fltol+0)+2,f
  4775  0DCC  0CF6               	rrf	(??___fltol+0)+1,f
  4776  0DCD  0CF5               	rrf	(??___fltol+0)+0,f
  4777  0DCE  0CF4               u1960:
  4778  0DCF                     	addlw	-1
  4779  0DCF  3EFF               	skipz
  4780  0DD0  1D03               	goto	u1965
  4781  0DD1  2DCA               	movf	0+(??___fltol+0)+0,w
  4782  0DD2  0874               	movwf	(??___fltol+4)+0
  4783  0DD3  00F8               	movf	(??___fltol+4)+0,w
  4784  0DD4  0878               	movwf	(___fltol@sign1)
  4785  0DD5  00F9               	line	50
  4786                           	
  4787                           l1887:	
  4788  0DD6                     	bsf	(___fltol@f1)+(23/8),(23)&7
  4789  0DD6  17F2               	line	51
  4790                           	
  4791                           l1889:	
  4792  0DD7                     	movlw	0FFh
  4793  0DD7  30FF               	andwf	(___fltol@f1),f
  4794  0DD8  05F0               	movlw	0FFh
  4795  0DD9  30FF               	andwf	(___fltol@f1+1),f
  4796  0DDA  05F1               	movlw	0FFh
  4797  0DDB  30FF               	andwf	(___fltol@f1+2),f
  4798  0DDC  05F2               	movlw	0
  4799  0DDD  3000               	andwf	(___fltol@f1+3),f
  4800  0DDE  05F3               	line	52
  4801                           	
  4802                           l1891:	
  4803  0DDF                     	movlw	096h
  4804  0DDF  3096               	subwf	(___fltol@exp1),f
  4805  0DE0  02FA               	line	53
  4806                           	
  4807                           l1893:	
  4808  0DE1                     	btfss	(___fltol@exp1),7
  4809  0DE1  1FFA               	goto	u1971
  4810  0DE2  2DE4               	goto	u1970
  4811  0DE3  2DE5               u1971:
  4812  0DE4                     	goto	l1903
  4813  0DE4  2E0A               u1970:
  4814  0DE5                     	line	54
  4815                           	
  4816                           l1895:	
  4817  0DE5                     	movf	(___fltol@exp1),w
  4818  0DE5  087A               	xorlw	80h
  4819  0DE6  3A80               	addlw	-((-23)^80h)
  4820  0DE7  3E97               	skipnc
  4821  0DE8  1803               	goto	u1981
  4822  0DE9  2DEB               	goto	u1980
  4823  0DEA  2DEC               u1981:
  4824  0DEB                     	goto	l1901
  4825  0DEB  2DF7               u1980:
  4826  0DEC                     	line	55
  4827                           	
  4828                           l1897:	
  4829  0DEC                     	movlw	high highword(0)
  4830  0DEC  3000               	movwf	(?___fltol+3)
  4831  0DED  00F3               	movlw	low highword(0)
  4832  0DEE  3000               	movwf	(?___fltol+2)
  4833  0DEF  00F2               	movlw	high(0)
  4834  0DF0  3000               	movwf	(?___fltol+1)
  4835  0DF1  00F1               	movlw	low(0)
  4836  0DF2  3000               	movwf	(?___fltol)
  4837  0DF3  00F0               
  4838                           	goto	l484
  4839  0DF4  2E3D               	
  4840                           l1899:	
  4841  0DF5                     	goto	l484
  4842  0DF5  2E3D               	
  4843                           l486:	
  4844  0DF6                     	goto	l1901
  4845  0DF6  2DF7               	line	56
  4846                           	
  4847                           l487:	
  4848  0DF7                     	line	57
  4849                           	
  4850                           l1901:	
  4851  0DF7                     	movlw	01h
  4852  0DF7  3001               u1995:
  4853  0DF8                     	clrc
  4854  0DF8  1003               	rrf	(___fltol@f1+3),f
  4855  0DF9  0CF3               	rrf	(___fltol@f1+2),f
  4856  0DFA  0CF2               	rrf	(___fltol@f1+1),f
  4857  0DFB  0CF1               	rrf	(___fltol@f1),f
  4858  0DFC  0CF0               	addlw	-1
  4859  0DFD  3EFF               	skipz
  4860  0DFE  1D03               	goto	u1995
  4861  0DFF  2DF8               
  4862                           	line	58
  4863                           	movlw	low(01h)
  4864  0E00  3001               	movwf	(??___fltol+0)+0
  4865  0E01  00F4               	movf	(??___fltol+0)+0,w
  4866  0E02  0874               	addwf	(___fltol@exp1),f
  4867  0E03  07FA               	btfss	status,2
  4868  0E04  1D03               	goto	u2001
  4869  0E05  2E07               	goto	u2000
  4870  0E06  2E08               u2001:
  4871  0E07                     	goto	l1901
  4872  0E07  2DF7               u2000:
  4873  0E08                     	goto	l1911
  4874  0E08  2E2D               	
  4875                           l488:	
  4876  0E09                     	line	59
  4877                           	goto	l1911
  4878  0E09  2E2D               	
  4879                           l485:	
  4880  0E0A                     	line	60
  4881                           	
  4882                           l1903:	
  4883  0E0A                     	movlw	low(020h)
  4884  0E0A  3020               	subwf	(___fltol@exp1),w
  4885  0E0B  027A               	skipc
  4886  0E0C  1C03               	goto	u2011
  4887  0E0D  2E0F               	goto	u2010
  4888  0E0E  2E10               u2011:
  4889  0E0F                     	goto	l491
  4890  0E0F  2E26               u2010:
  4891  0E10                     	line	61
  4892                           	
  4893                           l1905:	
  4894  0E10                     	movlw	high highword(0)
  4895  0E10  3000               	movwf	(?___fltol+3)
  4896  0E11  00F3               	movlw	low highword(0)
  4897  0E12  3000               	movwf	(?___fltol+2)
  4898  0E13  00F2               	movlw	high(0)
  4899  0E14  3000               	movwf	(?___fltol+1)
  4900  0E15  00F1               	movlw	low(0)
  4901  0E16  3000               	movwf	(?___fltol)
  4902  0E17  00F0               
  4903                           	goto	l484
  4904  0E18  2E3D               	
  4905                           l1907:	
  4906  0E19                     	goto	l484
  4907  0E19  2E3D               	
  4908                           l490:	
  4909  0E1A                     	line	62
  4910                           	goto	l491
  4911  0E1A  2E26               	
  4912                           l492:	
  4913  0E1B                     	line	63
  4914                           	
  4915                           l1909:	
  4916  0E1B                     	movlw	01h
  4917  0E1B  3001               	movwf	(??___fltol+0)+0
  4918  0E1C  00F4               u2025:
  4919  0E1D                     	clrc
  4920  0E1D  1003               	rlf	(___fltol@f1),f
  4921  0E1E  0DF0               	rlf	(___fltol@f1+1),f
  4922  0E1F  0DF1               	rlf	(___fltol@f1+2),f
  4923  0E20  0DF2               	rlf	(___fltol@f1+3),f
  4924  0E21  0DF3               	decfsz	(??___fltol+0)+0
  4925  0E22  0BF4               	goto	u2025
  4926  0E23  2E1D               	line	64
  4927                           	movlw	01h
  4928  0E24  3001               	subwf	(___fltol@exp1),f
  4929  0E25  02FA               	line	65
  4930                           	
  4931                           l491:	
  4932  0E26                     	line	62
  4933                           	movf	((___fltol@exp1)),w
  4934  0E26  087A               	btfss	status,2
  4935  0E27  1D03               	goto	u2031
  4936  0E28  2E2A               	goto	u2030
  4937  0E29  2E2B               u2031:
  4938  0E2A                     	goto	l1909
  4939  0E2A  2E1B               u2030:
  4940  0E2B                     	goto	l1911
  4941  0E2B  2E2D               	
  4942                           l493:	
  4943  0E2C                     	goto	l1911
  4944  0E2C  2E2D               	line	66
  4945                           	
  4946                           l489:	
  4947  0E2D                     	line	67
  4948                           	
  4949                           l1911:	
  4950  0E2D                     	movf	((___fltol@sign1)),w
  4951  0E2D  0879               	btfsc	status,2
  4952  0E2E  1903               	goto	u2041
  4953  0E2F  2E31               	goto	u2040
  4954  0E30  2E32               u2041:
  4955  0E31                     	goto	l494
  4956  0E31  2E3D               u2040:
  4957  0E32                     	line	68
  4958                           	
  4959                           l1913:	
  4960  0E32                     	comf	(___fltol@f1),f
  4961  0E32  09F0               	comf	(___fltol@f1+1),f
  4962  0E33  09F1               	comf	(___fltol@f1+2),f
  4963  0E34  09F2               	comf	(___fltol@f1+3),f
  4964  0E35  09F3               	incf	(___fltol@f1),f
  4965  0E36  0AF0               	skipnz
  4966  0E37  1903               	incf	(___fltol@f1+1),f
  4967  0E38  0AF1               	skipnz
  4968  0E39  1903               	incf	(___fltol@f1+2),f
  4969  0E3A  0AF2               	skipnz
  4970  0E3B  1903               	incf	(___fltol@f1+3),f
  4971  0E3C  0AF3               	
  4972                           l494:	
  4973  0E3D                     	line	69
  4974                           	line	70
  4975                           	
  4976                           l484:	
  4977  0E3D                     	return
  4978  0E3D  0008               	opt stack 0
  4979                           GLOBAL	__end_of___fltol
  4980                           	__end_of___fltol:
  4981  0E3E                     	signat	___fltol,4220
  4982                           	global	___flneg
  4983                           
  4984 ;; *************** function ___flneg *****************
  4985 ;; Defined at:
  4986 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  4987 ;; Parameters:    Size  Location     Type
  4988 ;;  f1              4    0[BANK0 ] long 
  4989 ;; Auto vars:     Size  Location     Type
  4990 ;;		None
  4991 ;; Return value:  Size  Location     Type
  4992 ;;                  4    0[BANK0 ] long 
  4993 ;; Registers used:
  4994 ;;		wreg
  4995 ;; Tracked objects:
  4996 ;;		On entry : 0/0
  4997 ;;		On exit  : 0/0
  4998 ;;		Unchanged: 0/0
  4999 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5000 ;;      Params:         0       4       0       0       0
  5001 ;;      Locals:         0       0       0       0       0
  5002 ;;      Temps:          0       0       0       0       0
  5003 ;;      Totals:         0       4       0       0       0
  5004 ;;Total ram usage:        4 bytes
  5005 ;; Hardware stack levels used:    1
  5006 ;; This function calls:
  5007 ;;		Nothing
  5008 ;; This function is called by:
  5009 ;;		_main
  5010 ;; This function uses a non-reentrant model
  5011 ;;
  5012                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5013                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5014                           	line	15
  5015                           global __ptext17
  5016                           __ptext17:	;psect for function ___flneg
  5017  0ABF                     psect	text17
  5018                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5019                           	line	15
  5020                           	global	__size_of___flneg
  5021                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  5022  000F                     	
  5023                           ___flneg:	
  5024  0ABF                     ;incstack = 0
  5025                           	opt	stack 7
  5026                           ; Regs used in ___flneg: [wreg]
  5027                           	line	17
  5028                           	
  5029                           l1871:	
  5030  0ABF                     	bcf	status, 5	;RP0=0, select bank0
  5031  0ABF  1283               	bcf	status, 6	;RP1=0, select bank0
  5032  0AC0  1303               	movf	(___flneg@f1+3),w
  5033  0AC1  0823               	iorwf	(___flneg@f1+2),w
  5034  0AC2  0422               	iorwf	(___flneg@f1+1),w
  5035  0AC3  0421               	iorwf	(___flneg@f1),w
  5036  0AC4  0420               	skipnz
  5037  0AC5  1903               	goto	u1941
  5038  0AC6  2AC8               	goto	u1940
  5039  0AC7  2AC9               u1941:
  5040  0AC8                     	goto	l1875
  5041  0AC8  2ACC               u1940:
  5042  0AC9                     	line	18
  5043                           	
  5044                           l1873:	
  5045  0AC9                     	movlw	080h
  5046  0AC9  3080               	xorwf	(___flneg@f1+3),f
  5047  0ACA  06A3               	goto	l1875
  5048  0ACB  2ACC               	
  5049                           l479:	
  5050  0ACC                     	line	19
  5051                           	
  5052                           l1875:	
  5053  0ACC                     	goto	l480
  5054  0ACC  2ACD               	
  5055                           l1877:	
  5056  0ACD                     	line	20
  5057                           	
  5058                           l480:	
  5059  0ACD                     	return
  5060  0ACD  0008               	opt stack 0
  5061                           GLOBAL	__end_of___flneg
  5062                           	__end_of___flneg:
  5063  0ACE                     	signat	___flneg,4220
  5064                           	global	___flmul
  5065                           
  5066 ;; *************** function ___flmul *****************
  5067 ;; Defined at:
  5068 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5069 ;; Parameters:    Size  Location     Type
  5070 ;;  b               4   28[BANK0 ] long 
  5071 ;;  a               4   32[BANK0 ] long 
  5072 ;; Auto vars:     Size  Location     Type
  5073 ;;  prod            4   48[BANK0 ] struct .
  5074 ;;  grs             4   42[BANK0 ] unsigned long 
  5075 ;;  temp            2   52[BANK0 ] struct .
  5076 ;;  bexp            1   47[BANK0 ] unsigned char 
  5077 ;;  aexp            1   46[BANK0 ] unsigned char 
  5078 ;;  sign            1   41[BANK0 ] unsigned char 
  5079 ;; Return value:  Size  Location     Type
  5080 ;;                  4   28[BANK0 ] unsigned char 
  5081 ;; Registers used:
  5082 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5083 ;; Tracked objects:
  5084 ;;		On entry : 0/0
  5085 ;;		On exit  : 0/0
  5086 ;;		Unchanged: 0/0
  5087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5088 ;;      Params:         0       8       0       0       0
  5089 ;;      Locals:         0      13       0       0       0
  5090 ;;      Temps:          0       5       0       0       0
  5091 ;;      Totals:         0      26       0       0       0
  5092 ;;Total ram usage:       26 bytes
  5093 ;; Hardware stack levels used:    1
  5094 ;; Hardware stack levels required when called:    1
  5095 ;; This function calls:
  5096 ;;		__Umul8_16
  5097 ;; This function is called by:
  5098 ;;		_main
  5099 ;; This function uses a non-reentrant model
  5100 ;;
  5101                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5102                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5103                           	line	8
  5104                           global __ptext18
  5105                           __ptext18:	;psect for function ___flmul
  5106  0476                     psect	text18
  5107                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5108                           	line	8
  5109                           	global	__size_of___flmul
  5110                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  5111  0375                     	
  5112                           ___flmul:	
  5113  0476                     ;incstack = 0
  5114                           	opt	stack 6
  5115                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5116                           	line	17
  5117                           	
  5118                           l2109:	
  5119  0476                     	bcf	status, 5	;RP0=0, select bank0
  5120  0476  1283               	bcf	status, 6	;RP1=0, select bank0
  5121  0477  1303               	movf	0+(___flmul@b)+03h,w
  5122  0478  083F               	andlw	080h
  5123  0479  3980               	movwf	(??___flmul+0)+0
  5124  047A  00C4               	movf	(??___flmul+0)+0,w
  5125  047B  0844               	movwf	(___flmul@sign)
  5126  047C  00C9               	line	18
  5127                           	
  5128                           l2111:	
  5129  047D                     	movf	0+(___flmul@b)+03h,w
  5130  047D  083F               	movwf	(??___flmul+0)+0
  5131  047E  00C4               	addwf	(??___flmul+0)+0,w
  5132  047F  0744               	movwf	(??___flmul+1)+0
  5133  0480  00C5               	movf	(??___flmul+1)+0,w
  5134  0481  0845               	movwf	(___flmul@bexp)
  5135  0482  00CF               	line	19
  5136                           	
  5137                           l2113:	
  5138  0483                     	btfss	0+(___flmul@b)+02h,(7)&7
  5139  0483  1FBE               	goto	u2511
  5140  0484  2C86               	goto	u2510
  5141  0485  2C87               u2511:
  5142  0486                     	goto	l2117
  5143  0486  2C89               u2510:
  5144  0487                     	line	20
  5145                           	
  5146                           l2115:	
  5147  0487                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  5148  0487  144F               	goto	l2117
  5149  0488  2C89               	line	21
  5150                           	
  5151                           l676:	
  5152  0489                     	line	24
  5153                           	
  5154                           l2117:	
  5155  0489                     	movf	((___flmul@bexp)),w
  5156  0489  084F               	btfsc	status,2
  5157  048A  1903               	goto	u2521
  5158  048B  2C8D               	goto	u2520
  5159  048C  2C8E               u2521:
  5160  048D                     	goto	l2125
  5161  048D  2C9E               u2520:
  5162  048E                     	line	26
  5163                           	
  5164                           l2119:	
  5165  048E                     		incf	((___flmul@bexp)),w
  5166  048E  0A4F               	btfss	status,2
  5167  048F  1D03               	goto	u2531
  5168  0490  2C92               	goto	u2530
  5169  0491  2C93               u2531:
  5170  0492                     	goto	l2123
  5171  0492  2C9C               u2530:
  5172  0493                     	line	28
  5173                           	
  5174                           l2121:	
  5175  0493                     	movlw	0x0
  5176  0493  3000               	movwf	(___flmul@b+3)
  5177  0494  00BF               	movlw	0x0
  5178  0495  3000               	movwf	(___flmul@b+2)
  5179  0496  00BE               	movlw	0x0
  5180  0497  3000               	movwf	(___flmul@b+1)
  5181  0498  00BD               	movlw	0x0
  5182  0499  3000               	movwf	(___flmul@b)
  5183  049A  00BC               
  5184                           	goto	l2123
  5185  049B  2C9C               	line	29
  5186                           	
  5187                           l678:	
  5188  049C                     	line	31
  5189                           	
  5190                           l2123:	
  5191  049C                     	bsf	(___flmul@b)+(23/8),(23)&7
  5192  049C  17BE               	line	33
  5193                           	goto	l2127
  5194  049D  2CA7               	line	34
  5195                           	
  5196                           l677:	
  5197  049E                     	line	36
  5198                           	
  5199                           l2125:	
  5200  049E                     	movlw	0x0
  5201  049E  3000               	movwf	(___flmul@b+3)
  5202  049F  00BF               	movlw	0x0
  5203  04A0  3000               	movwf	(___flmul@b+2)
  5204  04A1  00BE               	movlw	0x0
  5205  04A2  3000               	movwf	(___flmul@b+1)
  5206  04A3  00BD               	movlw	0x0
  5207  04A4  3000               	movwf	(___flmul@b)
  5208  04A5  00BC               
  5209                           	goto	l2127
  5210  04A6  2CA7               	line	37
  5211                           	
  5212                           l679:	
  5213  04A7                     	line	39
  5214                           	
  5215                           l2127:	
  5216  04A7                     	movf	0+(___flmul@a)+03h,w
  5217  04A7  0843               	andlw	080h
  5218  04A8  3980               	movwf	(??___flmul+0)+0
  5219  04A9  00C4               	movf	(??___flmul+0)+0,w
  5220  04AA  0844               	xorwf	(___flmul@sign),f
  5221  04AB  06C9               	line	40
  5222                           	
  5223                           l2129:	
  5224  04AC                     	movf	0+(___flmul@a)+03h,w
  5225  04AC  0843               	movwf	(??___flmul+0)+0
  5226  04AD  00C4               	addwf	(??___flmul+0)+0,w
  5227  04AE  0744               	movwf	(??___flmul+1)+0
  5228  04AF  00C5               	movf	(??___flmul+1)+0,w
  5229  04B0  0845               	movwf	(___flmul@aexp)
  5230  04B1  00CE               	line	41
  5231                           	
  5232                           l2131:	
  5233  04B2                     	btfss	0+(___flmul@a)+02h,(7)&7
  5234  04B2  1FC2               	goto	u2541
  5235  04B3  2CB5               	goto	u2540
  5236  04B4  2CB6               u2541:
  5237  04B5                     	goto	l2135
  5238  04B5  2CB8               u2540:
  5239  04B6                     	line	42
  5240                           	
  5241                           l2133:	
  5242  04B6                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  5243  04B6  144E               	goto	l2135
  5244  04B7  2CB8               	line	43
  5245                           	
  5246                           l680:	
  5247  04B8                     	line	45
  5248                           	
  5249                           l2135:	
  5250  04B8                     	movf	((___flmul@aexp)),w
  5251  04B8  084E               	btfsc	status,2
  5252  04B9  1903               	goto	u2551
  5253  04BA  2CBC               	goto	u2550
  5254  04BB  2CBD               u2551:
  5255  04BC                     	goto	l2143
  5256  04BC  2CCD               u2550:
  5257  04BD                     	line	48
  5258                           	
  5259                           l2137:	
  5260  04BD                     		incf	((___flmul@aexp)),w
  5261  04BD  0A4E               	btfss	status,2
  5262  04BE  1D03               	goto	u2561
  5263  04BF  2CC1               	goto	u2560
  5264  04C0  2CC2               u2561:
  5265  04C1                     	goto	l2141
  5266  04C1  2CCB               u2560:
  5267  04C2                     	line	50
  5268                           	
  5269                           l2139:	
  5270  04C2                     	movlw	0x0
  5271  04C2  3000               	movwf	(___flmul@a+3)
  5272  04C3  00C3               	movlw	0x0
  5273  04C4  3000               	movwf	(___flmul@a+2)
  5274  04C5  00C2               	movlw	0x0
  5275  04C6  3000               	movwf	(___flmul@a+1)
  5276  04C7  00C1               	movlw	0x0
  5277  04C8  3000               	movwf	(___flmul@a)
  5278  04C9  00C0               
  5279                           	goto	l2141
  5280  04CA  2CCB               	line	51
  5281                           	
  5282                           l682:	
  5283  04CB                     	line	53
  5284                           	
  5285                           l2141:	
  5286  04CB                     	bsf	(___flmul@a)+(23/8),(23)&7
  5287  04CB  17C2               	line	54
  5288                           	goto	l2145
  5289  04CC  2CD6               	line	55
  5290                           	
  5291                           l681:	
  5292  04CD                     	line	57
  5293                           	
  5294                           l2143:	
  5295  04CD                     	movlw	0x0
  5296  04CD  3000               	movwf	(___flmul@a+3)
  5297  04CE  00C3               	movlw	0x0
  5298  04CF  3000               	movwf	(___flmul@a+2)
  5299  04D0  00C2               	movlw	0x0
  5300  04D1  3000               	movwf	(___flmul@a+1)
  5301  04D2  00C1               	movlw	0x0
  5302  04D3  3000               	movwf	(___flmul@a)
  5303  04D4  00C0               
  5304                           	goto	l2145
  5305  04D5  2CD6               	line	58
  5306                           	
  5307                           l683:	
  5308  04D6                     	line	65
  5309                           	
  5310                           l2145:	
  5311  04D6                     	movf	((___flmul@aexp)),w
  5312  04D6  084E               	btfsc	status,2
  5313  04D7  1903               	goto	u2571
  5314  04D8  2CDA               	goto	u2570
  5315  04D9  2CDB               u2571:
  5316  04DA                     	goto	l2149
  5317  04DA  2CE1               u2570:
  5318  04DB                     	
  5319                           l2147:	
  5320  04DB                     	movf	((___flmul@bexp)),w
  5321  04DB  084F               	btfss	status,2
  5322  04DC  1D03               	goto	u2581
  5323  04DD  2CDF               	goto	u2580
  5324  04DE  2CE0               u2581:
  5325  04DF                     	goto	l2153
  5326  04DF  2CEB               u2580:
  5327  04E0                     	goto	l2149
  5328  04E0  2CE1               	
  5329                           l686:	
  5330  04E1                     	line	66
  5331                           	
  5332                           l2149:	
  5333  04E1                     	movlw	0x0
  5334  04E1  3000               	movwf	(?___flmul+3)
  5335  04E2  00BF               	movlw	0x0
  5336  04E3  3000               	movwf	(?___flmul+2)
  5337  04E4  00BE               	movlw	0x0
  5338  04E5  3000               	movwf	(?___flmul+1)
  5339  04E6  00BD               	movlw	0x0
  5340  04E7  3000               	movwf	(?___flmul)
  5341  04E8  00BC               
  5342                           	goto	l687
  5343  04E9  2FEA               	
  5344                           l2151:	
  5345  04EA                     	goto	l687
  5346  04EA  2FEA               	line	67
  5347                           	
  5348                           l684:	
  5349  04EB                     	line	119
  5350                           	
  5351                           l2153:	
  5352  04EB                     	movf	(___flmul@b),w
  5353  04EB  083C               	movwf	(??___flmul+0)+0
  5354  04EC  00C4               	movf	(??___flmul+0)+0,w
  5355  04ED  0844               	movwf	(__Umul8_16@multiplicand)
  5356  04EE  00F0               	movf	0+(___flmul@a)+02h,w
  5357  04EF  0842               	fcall	__Umul8_16
  5358  04F0  120A  158A  232C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5359  04F5  0871               	bcf	status, 5	;RP0=0, select bank0
  5360  04F6  1283               	bcf	status, 6	;RP1=0, select bank0
  5361  04F7  1303               	movwf	(___flmul@temp+1)
  5362  04F8  00D5               	movf	(0+(?__Umul8_16)),w
  5363  04F9  0870               	movwf	(___flmul@temp)
  5364  04FA  00D4               	line	120
  5365                           	
  5366                           l2155:	
  5367  04FB                     	movf	(___flmul@temp),w
  5368  04FB  0854               	movwf	(??___flmul+0)+0
  5369  04FC  00C4               	clrf	(??___flmul+0)+0+1
  5370  04FD  01C5               	clrf	(??___flmul+0)+0+2
  5371  04FE  01C6               	clrf	(??___flmul+0)+0+3
  5372  04FF  01C7               	movf	3+(??___flmul+0)+0,w
  5373  0500  0847               	movwf	(___flmul@grs+3)
  5374  0501  00CD               	movf	2+(??___flmul+0)+0,w
  5375  0502  0846               	movwf	(___flmul@grs+2)
  5376  0503  00CC               	movf	1+(??___flmul+0)+0,w
  5377  0504  0845               	movwf	(___flmul@grs+1)
  5378  0505  00CB               	movf	0+(??___flmul+0)+0,w
  5379  0506  0844               	movwf	(___flmul@grs)
  5380  0507  00CA               
  5381                           	line	121
  5382                           	
  5383                           l2157:	
  5384  0508                     	movf	0+(___flmul@temp)+01h,w
  5385  0508  0855               	movwf	(??___flmul+0)+0
  5386  0509  00C4               	clrf	(??___flmul+0)+0+1
  5387  050A  01C5               	clrf	(??___flmul+0)+0+2
  5388  050B  01C6               	clrf	(??___flmul+0)+0+3
  5389  050C  01C7               	movf	3+(??___flmul+0)+0,w
  5390  050D  0847               	movwf	(___flmul@prod+3)
  5391  050E  00D3               	movf	2+(??___flmul+0)+0,w
  5392  050F  0846               	movwf	(___flmul@prod+2)
  5393  0510  00D2               	movf	1+(??___flmul+0)+0,w
  5394  0511  0845               	movwf	(___flmul@prod+1)
  5395  0512  00D1               	movf	0+(??___flmul+0)+0,w
  5396  0513  0844               	movwf	(___flmul@prod)
  5397  0514  00D0               
  5398                           	line	122
  5399                           	movf	0+(___flmul@b)+01h,w
  5400  0515  083D               	movwf	(??___flmul+0)+0
  5401  0516  00C4               	movf	(??___flmul+0)+0,w
  5402  0517  0844               	movwf	(__Umul8_16@multiplicand)
  5403  0518  00F0               	movf	0+(___flmul@a)+01h,w
  5404  0519  0841               	fcall	__Umul8_16
  5405  051A  120A  158A  232C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5406  051F  0871               	bcf	status, 5	;RP0=0, select bank0
  5407  0520  1283               	bcf	status, 6	;RP1=0, select bank0
  5408  0521  1303               	movwf	(___flmul@temp+1)
  5409  0522  00D5               	movf	(0+(?__Umul8_16)),w
  5410  0523  0870               	movwf	(___flmul@temp)
  5411  0524  00D4               	line	123
  5412                           	
  5413                           l2159:	
  5414  0525                     	movf	(___flmul@temp),w
  5415  0525  0854               	movwf	(??___flmul+0)+0
  5416  0526  00C4               	clrf	(??___flmul+0)+0+1
  5417  0527  01C5               	clrf	(??___flmul+0)+0+2
  5418  0528  01C6               	clrf	(??___flmul+0)+0+3
  5419  0529  01C7               	movf	0+(??___flmul+0)+0,w
  5420  052A  0844               	addwf	(___flmul@grs),f
  5421  052B  07CA               	movf	1+(??___flmul+0)+0,w
  5422  052C  0845               	clrz
  5423  052D  1103               	skipnc
  5424  052E  1803               	addlw	1
  5425  052F  3E01               	skipnz
  5426  0530  1903               	goto	u2591
  5427  0531  2D33               	addwf	(___flmul@grs+1),f
  5428  0532  07CB               u2591:
  5429  0533                     	movf	2+(??___flmul+0)+0,w
  5430  0533  0846               	clrz
  5431  0534  1103               	skipnc
  5432  0535  1803               	addlw	1
  5433  0536  3E01               	skipnz
  5434  0537  1903               	goto	u2592
  5435  0538  2D3A               	addwf	(___flmul@grs+2),f
  5436  0539  07CC               u2592:
  5437  053A                     	movf	3+(??___flmul+0)+0,w
  5438  053A  0847               	clrz
  5439  053B  1103               	skipnc
  5440  053C  1803               	addlw	1
  5441  053D  3E01               	skipnz
  5442  053E  1903               	goto	u2593
  5443  053F  2D41               	addwf	(___flmul@grs+3),f
  5444  0540  07CD               u2593:
  5445  0541                     
  5446                           	line	124
  5447                           	
  5448                           l2161:	
  5449  0541                     	movf	0+(___flmul@temp)+01h,w
  5450  0541  0855               	movwf	(??___flmul+0)+0
  5451  0542  00C4               	clrf	(??___flmul+0)+0+1
  5452  0543  01C5               	clrf	(??___flmul+0)+0+2
  5453  0544  01C6               	clrf	(??___flmul+0)+0+3
  5454  0545  01C7               	movf	0+(??___flmul+0)+0,w
  5455  0546  0844               	addwf	(___flmul@prod),f
  5456  0547  07D0               	movf	1+(??___flmul+0)+0,w
  5457  0548  0845               	clrz
  5458  0549  1103               	skipnc
  5459  054A  1803               	addlw	1
  5460  054B  3E01               	skipnz
  5461  054C  1903               	goto	u2601
  5462  054D  2D4F               	addwf	(___flmul@prod+1),f
  5463  054E  07D1               u2601:
  5464  054F                     	movf	2+(??___flmul+0)+0,w
  5465  054F  0846               	clrz
  5466  0550  1103               	skipnc
  5467  0551  1803               	addlw	1
  5468  0552  3E01               	skipnz
  5469  0553  1903               	goto	u2602
  5470  0554  2D56               	addwf	(___flmul@prod+2),f
  5471  0555  07D2               u2602:
  5472  0556                     	movf	3+(??___flmul+0)+0,w
  5473  0556  0847               	clrz
  5474  0557  1103               	skipnc
  5475  0558  1803               	addlw	1
  5476  0559  3E01               	skipnz
  5477  055A  1903               	goto	u2603
  5478  055B  2D5D               	addwf	(___flmul@prod+3),f
  5479  055C  07D3               u2603:
  5480  055D                     
  5481                           	line	125
  5482                           	movf	0+(___flmul@b)+02h,w
  5483  055D  083E               	movwf	(??___flmul+0)+0
  5484  055E  00C4               	movf	(??___flmul+0)+0,w
  5485  055F  0844               	movwf	(__Umul8_16@multiplicand)
  5486  0560  00F0               	movf	(___flmul@a),w
  5487  0561  0840               	fcall	__Umul8_16
  5488  0562  120A  158A  232C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5489  0567  0871               	bcf	status, 5	;RP0=0, select bank0
  5490  0568  1283               	bcf	status, 6	;RP1=0, select bank0
  5491  0569  1303               	movwf	(___flmul@temp+1)
  5492  056A  00D5               	movf	(0+(?__Umul8_16)),w
  5493  056B  0870               	movwf	(___flmul@temp)
  5494  056C  00D4               	line	126
  5495                           	
  5496                           l2163:	
  5497  056D                     	movf	(___flmul@temp),w
  5498  056D  0854               	movwf	(??___flmul+0)+0
  5499  056E  00C4               	clrf	(??___flmul+0)+0+1
  5500  056F  01C5               	clrf	(??___flmul+0)+0+2
  5501  0570  01C6               	clrf	(??___flmul+0)+0+3
  5502  0571  01C7               	movf	0+(??___flmul+0)+0,w
  5503  0572  0844               	addwf	(___flmul@grs),f
  5504  0573  07CA               	movf	1+(??___flmul+0)+0,w
  5505  0574  0845               	clrz
  5506  0575  1103               	skipnc
  5507  0576  1803               	addlw	1
  5508  0577  3E01               	skipnz
  5509  0578  1903               	goto	u2611
  5510  0579  2D7B               	addwf	(___flmul@grs+1),f
  5511  057A  07CB               u2611:
  5512  057B                     	movf	2+(??___flmul+0)+0,w
  5513  057B  0846               	clrz
  5514  057C  1103               	skipnc
  5515  057D  1803               	addlw	1
  5516  057E  3E01               	skipnz
  5517  057F  1903               	goto	u2612
  5518  0580  2D82               	addwf	(___flmul@grs+2),f
  5519  0581  07CC               u2612:
  5520  0582                     	movf	3+(??___flmul+0)+0,w
  5521  0582  0847               	clrz
  5522  0583  1103               	skipnc
  5523  0584  1803               	addlw	1
  5524  0585  3E01               	skipnz
  5525  0586  1903               	goto	u2613
  5526  0587  2D89               	addwf	(___flmul@grs+3),f
  5527  0588  07CD               u2613:
  5528  0589                     
  5529                           	line	127
  5530                           	
  5531                           l2165:	
  5532  0589                     	movf	0+(___flmul@temp)+01h,w
  5533  0589  0855               	movwf	(??___flmul+0)+0
  5534  058A  00C4               	clrf	(??___flmul+0)+0+1
  5535  058B  01C5               	clrf	(??___flmul+0)+0+2
  5536  058C  01C6               	clrf	(??___flmul+0)+0+3
  5537  058D  01C7               	movf	0+(??___flmul+0)+0,w
  5538  058E  0844               	addwf	(___flmul@prod),f
  5539  058F  07D0               	movf	1+(??___flmul+0)+0,w
  5540  0590  0845               	clrz
  5541  0591  1103               	skipnc
  5542  0592  1803               	addlw	1
  5543  0593  3E01               	skipnz
  5544  0594  1903               	goto	u2621
  5545  0595  2D97               	addwf	(___flmul@prod+1),f
  5546  0596  07D1               u2621:
  5547  0597                     	movf	2+(??___flmul+0)+0,w
  5548  0597  0846               	clrz
  5549  0598  1103               	skipnc
  5550  0599  1803               	addlw	1
  5551  059A  3E01               	skipnz
  5552  059B  1903               	goto	u2622
  5553  059C  2D9E               	addwf	(___flmul@prod+2),f
  5554  059D  07D2               u2622:
  5555  059E                     	movf	3+(??___flmul+0)+0,w
  5556  059E  0847               	clrz
  5557  059F  1103               	skipnc
  5558  05A0  1803               	addlw	1
  5559  05A1  3E01               	skipnz
  5560  05A2  1903               	goto	u2623
  5561  05A3  2DA5               	addwf	(___flmul@prod+3),f
  5562  05A4  07D3               u2623:
  5563  05A5                     
  5564                           	line	128
  5565                           	
  5566                           l2167:	
  5567  05A5                     	movlw	08h
  5568  05A5  3008               	movwf	(??___flmul+0)+0
  5569  05A6  00C4               u2635:
  5570  05A7                     	clrc
  5571  05A7  1003               	rlf	(___flmul@grs),f
  5572  05A8  0DCA               	rlf	(___flmul@grs+1),f
  5573  05A9  0DCB               	rlf	(___flmul@grs+2),f
  5574  05AA  0DCC               	rlf	(___flmul@grs+3),f
  5575  05AB  0DCD               	decfsz	(??___flmul+0)+0
  5576  05AC  0BC4               	goto	u2635
  5577  05AD  2DA7               	line	129
  5578                           	
  5579                           l2169:	
  5580  05AE                     	movf	0+(___flmul@b)+01h,w
  5581  05AE  083D               	movwf	(??___flmul+0)+0
  5582  05AF  00C4               	movf	(??___flmul+0)+0,w
  5583  05B0  0844               	movwf	(__Umul8_16@multiplicand)
  5584  05B1  00F0               	movf	(___flmul@a),w
  5585  05B2  0840               	fcall	__Umul8_16
  5586  05B3  120A  158A  232C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5587  05B8  0871               	bcf	status, 5	;RP0=0, select bank0
  5588  05B9  1283               	bcf	status, 6	;RP1=0, select bank0
  5589  05BA  1303               	movwf	(___flmul@temp+1)
  5590  05BB  00D5               	movf	(0+(?__Umul8_16)),w
  5591  05BC  0870               	movwf	(___flmul@temp)
  5592  05BD  00D4               	line	130
  5593                           	
  5594                           l2171:	
  5595  05BE                     	movf	(___flmul@temp),w
  5596  05BE  0854               	movwf	((??___flmul+0)+0)
  5597  05BF  00C4               	movf	(___flmul@temp+1),w
  5598  05C0  0855               	movwf	((??___flmul+0)+0+1)
  5599  05C1  00C5               	clrf	((??___flmul+0)+0+2)
  5600  05C2  01C6               	clrf	((??___flmul+0)+0+3)
  5601  05C3  01C7               	movf	0+(??___flmul+0)+0,w
  5602  05C4  0844               	addwf	(___flmul@grs),f
  5603  05C5  07CA               	movf	1+(??___flmul+0)+0,w
  5604  05C6  0845               	clrz
  5605  05C7  1103               	skipnc
  5606  05C8  1803               	addlw	1
  5607  05C9  3E01               	skipnz
  5608  05CA  1903               	goto	u2641
  5609  05CB  2DCD               	addwf	(___flmul@grs+1),f
  5610  05CC  07CB               u2641:
  5611  05CD                     	movf	2+(??___flmul+0)+0,w
  5612  05CD  0846               	clrz
  5613  05CE  1103               	skipnc
  5614  05CF  1803               	addlw	1
  5615  05D0  3E01               	skipnz
  5616  05D1  1903               	goto	u2642
  5617  05D2  2DD4               	addwf	(___flmul@grs+2),f
  5618  05D3  07CC               u2642:
  5619  05D4                     	movf	3+(??___flmul+0)+0,w
  5620  05D4  0847               	clrz
  5621  05D5  1103               	skipnc
  5622  05D6  1803               	addlw	1
  5623  05D7  3E01               	skipnz
  5624  05D8  1903               	goto	u2643
  5625  05D9  2DDB               	addwf	(___flmul@grs+3),f
  5626  05DA  07CD               u2643:
  5627  05DB                     
  5628                           	line	131
  5629                           	
  5630                           l2173:	
  5631  05DB                     	movf	(___flmul@b),w
  5632  05DB  083C               	movwf	(??___flmul+0)+0
  5633  05DC  00C4               	movf	(??___flmul+0)+0,w
  5634  05DD  0844               	movwf	(__Umul8_16@multiplicand)
  5635  05DE  00F0               	movf	0+(___flmul@a)+01h,w
  5636  05DF  0841               	fcall	__Umul8_16
  5637  05E0  120A  158A  232C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5638  05E5  0871               	bcf	status, 5	;RP0=0, select bank0
  5639  05E6  1283               	bcf	status, 6	;RP1=0, select bank0
  5640  05E7  1303               	movwf	(___flmul@temp+1)
  5641  05E8  00D5               	movf	(0+(?__Umul8_16)),w
  5642  05E9  0870               	movwf	(___flmul@temp)
  5643  05EA  00D4               	line	132
  5644                           	
  5645                           l2175:	
  5646  05EB                     	movf	(___flmul@temp),w
  5647  05EB  0854               	movwf	((??___flmul+0)+0)
  5648  05EC  00C4               	movf	(___flmul@temp+1),w
  5649  05ED  0855               	movwf	((??___flmul+0)+0+1)
  5650  05EE  00C5               	clrf	((??___flmul+0)+0+2)
  5651  05EF  01C6               	clrf	((??___flmul+0)+0+3)
  5652  05F0  01C7               	movf	0+(??___flmul+0)+0,w
  5653  05F1  0844               	addwf	(___flmul@grs),f
  5654  05F2  07CA               	movf	1+(??___flmul+0)+0,w
  5655  05F3  0845               	clrz
  5656  05F4  1103               	skipnc
  5657  05F5  1803               	addlw	1
  5658  05F6  3E01               	skipnz
  5659  05F7  1903               	goto	u2651
  5660  05F8  2DFA               	addwf	(___flmul@grs+1),f
  5661  05F9  07CB               u2651:
  5662  05FA                     	movf	2+(??___flmul+0)+0,w
  5663  05FA  0846               	clrz
  5664  05FB  1103               	skipnc
  5665  05FC  1803               	addlw	1
  5666  05FD  3E01               	skipnz
  5667  05FE  1903               	goto	u2652
  5668  05FF  2E01               	addwf	(___flmul@grs+2),f
  5669  0600  07CC               u2652:
  5670  0601                     	movf	3+(??___flmul+0)+0,w
  5671  0601  0847               	clrz
  5672  0602  1103               	skipnc
  5673  0603  1803               	addlw	1
  5674  0604  3E01               	skipnz
  5675  0605  1903               	goto	u2653
  5676  0606  2E08               	addwf	(___flmul@grs+3),f
  5677  0607  07CD               u2653:
  5678  0608                     
  5679                           	line	133
  5680                           	
  5681                           l2177:	
  5682  0608                     	movlw	08h
  5683  0608  3008               	movwf	(??___flmul+0)+0
  5684  0609  00C4               u2665:
  5685  060A                     	clrc
  5686  060A  1003               	rlf	(___flmul@grs),f
  5687  060B  0DCA               	rlf	(___flmul@grs+1),f
  5688  060C  0DCB               	rlf	(___flmul@grs+2),f
  5689  060D  0DCC               	rlf	(___flmul@grs+3),f
  5690  060E  0DCD               	decfsz	(??___flmul+0)+0
  5691  060F  0BC4               	goto	u2665
  5692  0610  2E0A               	line	134
  5693                           	movf	(___flmul@b),w
  5694  0611  083C               	movwf	(??___flmul+0)+0
  5695  0612  00C4               	movf	(??___flmul+0)+0,w
  5696  0613  0844               	movwf	(__Umul8_16@multiplicand)
  5697  0614  00F0               	movf	(___flmul@a),w
  5698  0615  0840               	fcall	__Umul8_16
  5699  0616  120A  158A  232C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5700  061B  0871               	bcf	status, 5	;RP0=0, select bank0
  5701  061C  1283               	bcf	status, 6	;RP1=0, select bank0
  5702  061D  1303               	movwf	(___flmul@temp+1)
  5703  061E  00D5               	movf	(0+(?__Umul8_16)),w
  5704  061F  0870               	movwf	(___flmul@temp)
  5705  0620  00D4               	line	135
  5706                           	
  5707                           l2179:	
  5708  0621                     	movf	(___flmul@temp),w
  5709  0621  0854               	movwf	((??___flmul+0)+0)
  5710  0622  00C4               	movf	(___flmul@temp+1),w
  5711  0623  0855               	movwf	((??___flmul+0)+0+1)
  5712  0624  00C5               	clrf	((??___flmul+0)+0+2)
  5713  0625  01C6               	clrf	((??___flmul+0)+0+3)
  5714  0626  01C7               	movf	0+(??___flmul+0)+0,w
  5715  0627  0844               	addwf	(___flmul@grs),f
  5716  0628  07CA               	movf	1+(??___flmul+0)+0,w
  5717  0629  0845               	clrz
  5718  062A  1103               	skipnc
  5719  062B  1803               	addlw	1
  5720  062C  3E01               	skipnz
  5721  062D  1903               	goto	u2671
  5722  062E  2E30               	addwf	(___flmul@grs+1),f
  5723  062F  07CB               u2671:
  5724  0630                     	movf	2+(??___flmul+0)+0,w
  5725  0630  0846               	clrz
  5726  0631  1103               	skipnc
  5727  0632  1803               	addlw	1
  5728  0633  3E01               	skipnz
  5729  0634  1903               	goto	u2672
  5730  0635  2E37               	addwf	(___flmul@grs+2),f
  5731  0636  07CC               u2672:
  5732  0637                     	movf	3+(??___flmul+0)+0,w
  5733  0637  0847               	clrz
  5734  0638  1103               	skipnc
  5735  0639  1803               	addlw	1
  5736  063A  3E01               	skipnz
  5737  063B  1903               	goto	u2673
  5738  063C  2E3E               	addwf	(___flmul@grs+3),f
  5739  063D  07CD               u2673:
  5740  063E                     
  5741                           	line	136
  5742                           	
  5743                           l2181:	
  5744  063E                     	movf	0+(___flmul@b)+01h,w
  5745  063E  083D               	movwf	(??___flmul+0)+0
  5746  063F  00C4               	movf	(??___flmul+0)+0,w
  5747  0640  0844               	movwf	(__Umul8_16@multiplicand)
  5748  0641  00F0               	movf	0+(___flmul@a)+02h,w
  5749  0642  0842               	fcall	__Umul8_16
  5750  0643  120A  158A  232C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5751  0648  0871               	bcf	status, 5	;RP0=0, select bank0
  5752  0649  1283               	bcf	status, 6	;RP1=0, select bank0
  5753  064A  1303               	movwf	(___flmul@temp+1)
  5754  064B  00D5               	movf	(0+(?__Umul8_16)),w
  5755  064C  0870               	movwf	(___flmul@temp)
  5756  064D  00D4               	line	137
  5757                           	movf	(___flmul@temp),w
  5758  064E  0854               	movwf	((??___flmul+0)+0)
  5759  064F  00C4               	movf	(___flmul@temp+1),w
  5760  0650  0855               	movwf	((??___flmul+0)+0+1)
  5761  0651  00C5               	clrf	((??___flmul+0)+0+2)
  5762  0652  01C6               	clrf	((??___flmul+0)+0+3)
  5763  0653  01C7               	movf	0+(??___flmul+0)+0,w
  5764  0654  0844               	addwf	(___flmul@prod),f
  5765  0655  07D0               	movf	1+(??___flmul+0)+0,w
  5766  0656  0845               	clrz
  5767  0657  1103               	skipnc
  5768  0658  1803               	addlw	1
  5769  0659  3E01               	skipnz
  5770  065A  1903               	goto	u2681
  5771  065B  2E5D               	addwf	(___flmul@prod+1),f
  5772  065C  07D1               u2681:
  5773  065D                     	movf	2+(??___flmul+0)+0,w
  5774  065D  0846               	clrz
  5775  065E  1103               	skipnc
  5776  065F  1803               	addlw	1
  5777  0660  3E01               	skipnz
  5778  0661  1903               	goto	u2682
  5779  0662  2E64               	addwf	(___flmul@prod+2),f
  5780  0663  07D2               u2682:
  5781  0664                     	movf	3+(??___flmul+0)+0,w
  5782  0664  0847               	clrz
  5783  0665  1103               	skipnc
  5784  0666  1803               	addlw	1
  5785  0667  3E01               	skipnz
  5786  0668  1903               	goto	u2683
  5787  0669  2E6B               	addwf	(___flmul@prod+3),f
  5788  066A  07D3               u2683:
  5789  066B                     
  5790                           	line	138
  5791                           	
  5792                           l2183:	
  5793  066B                     	movf	0+(___flmul@b)+02h,w
  5794  066B  083E               	movwf	(??___flmul+0)+0
  5795  066C  00C4               	movf	(??___flmul+0)+0,w
  5796  066D  0844               	movwf	(__Umul8_16@multiplicand)
  5797  066E  00F0               	movf	0+(___flmul@a)+01h,w
  5798  066F  0841               	fcall	__Umul8_16
  5799  0670  120A  158A  232C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5800  0675  0871               	bcf	status, 5	;RP0=0, select bank0
  5801  0676  1283               	bcf	status, 6	;RP1=0, select bank0
  5802  0677  1303               	movwf	(___flmul@temp+1)
  5803  0678  00D5               	movf	(0+(?__Umul8_16)),w
  5804  0679  0870               	movwf	(___flmul@temp)
  5805  067A  00D4               	line	139
  5806                           	
  5807                           l2185:	
  5808  067B                     	movf	(___flmul@temp),w
  5809  067B  0854               	movwf	((??___flmul+0)+0)
  5810  067C  00C4               	movf	(___flmul@temp+1),w
  5811  067D  0855               	movwf	((??___flmul+0)+0+1)
  5812  067E  00C5               	clrf	((??___flmul+0)+0+2)
  5813  067F  01C6               	clrf	((??___flmul+0)+0+3)
  5814  0680  01C7               	movf	0+(??___flmul+0)+0,w
  5815  0681  0844               	addwf	(___flmul@prod),f
  5816  0682  07D0               	movf	1+(??___flmul+0)+0,w
  5817  0683  0845               	clrz
  5818  0684  1103               	skipnc
  5819  0685  1803               	addlw	1
  5820  0686  3E01               	skipnz
  5821  0687  1903               	goto	u2691
  5822  0688  2E8A               	addwf	(___flmul@prod+1),f
  5823  0689  07D1               u2691:
  5824  068A                     	movf	2+(??___flmul+0)+0,w
  5825  068A  0846               	clrz
  5826  068B  1103               	skipnc
  5827  068C  1803               	addlw	1
  5828  068D  3E01               	skipnz
  5829  068E  1903               	goto	u2692
  5830  068F  2E91               	addwf	(___flmul@prod+2),f
  5831  0690  07D2               u2692:
  5832  0691                     	movf	3+(??___flmul+0)+0,w
  5833  0691  0847               	clrz
  5834  0692  1103               	skipnc
  5835  0693  1803               	addlw	1
  5836  0694  3E01               	skipnz
  5837  0695  1903               	goto	u2693
  5838  0696  2E98               	addwf	(___flmul@prod+3),f
  5839  0697  07D3               u2693:
  5840  0698                     
  5841                           	line	140
  5842                           	movf	0+(___flmul@b)+02h,w
  5843  0698  083E               	movwf	(??___flmul+0)+0
  5844  0699  00C4               	movf	(??___flmul+0)+0,w
  5845  069A  0844               	movwf	(__Umul8_16@multiplicand)
  5846  069B  00F0               	movf	0+(___flmul@a)+02h,w
  5847  069C  0842               	fcall	__Umul8_16
  5848  069D  120A  158A  232C  120A  118A  	movf	(1+(?__Umul8_16)),w
  5849  06A2  0871               	bcf	status, 5	;RP0=0, select bank0
  5850  06A3  1283               	bcf	status, 6	;RP1=0, select bank0
  5851  06A4  1303               	movwf	(___flmul@temp+1)
  5852  06A5  00D5               	movf	(0+(?__Umul8_16)),w
  5853  06A6  0870               	movwf	(___flmul@temp)
  5854  06A7  00D4               	line	141
  5855                           	
  5856                           l2187:	
  5857  06A8                     	movf	(___flmul@temp),w
  5858  06A8  0854               	movwf	((??___flmul+0)+0)
  5859  06A9  00C4               	movf	(___flmul@temp+1),w
  5860  06AA  0855               	movwf	((??___flmul+0)+0+1)
  5861  06AB  00C5               	clrf	((??___flmul+0)+0+2)
  5862  06AC  01C6               	clrf	((??___flmul+0)+0+3)
  5863  06AD  01C7               	movlw	08h
  5864  06AE  3008               u2705:
  5865  06AF                     	clrc
  5866  06AF  1003               	rlf	(??___flmul+0)+0,f
  5867  06B0  0DC4               	rlf	(??___flmul+0)+1,f
  5868  06B1  0DC5               	rlf	(??___flmul+0)+2,f
  5869  06B2  0DC6               	rlf	(??___flmul+0)+3,f
  5870  06B3  0DC7               u2700:
  5871  06B4                     	addlw	-1
  5872  06B4  3EFF               	skipz
  5873  06B5  1D03               	goto	u2705
  5874  06B6  2EAF               	movf	0+(??___flmul+0)+0,w
  5875  06B7  0844               	addwf	(___flmul@prod),f
  5876  06B8  07D0               	movf	1+(??___flmul+0)+0,w
  5877  06B9  0845               	clrz
  5878  06BA  1103               	skipnc
  5879  06BB  1803               	addlw	1
  5880  06BC  3E01               	skipnz
  5881  06BD  1903               	goto	u2711
  5882  06BE  2EC0               	addwf	(___flmul@prod+1),f
  5883  06BF  07D1               u2711:
  5884  06C0                     	movf	2+(??___flmul+0)+0,w
  5885  06C0  0846               	clrz
  5886  06C1  1103               	skipnc
  5887  06C2  1803               	addlw	1
  5888  06C3  3E01               	skipnz
  5889  06C4  1903               	goto	u2712
  5890  06C5  2EC7               	addwf	(___flmul@prod+2),f
  5891  06C6  07D2               u2712:
  5892  06C7                     	movf	3+(??___flmul+0)+0,w
  5893  06C7  0847               	clrz
  5894  06C8  1103               	skipnc
  5895  06C9  1803               	addlw	1
  5896  06CA  3E01               	skipnz
  5897  06CB  1903               	goto	u2713
  5898  06CC  2ECE               	addwf	(___flmul@prod+3),f
  5899  06CD  07D3               u2713:
  5900  06CE                     
  5901                           	line	145
  5902                           	
  5903                           l2189:	
  5904  06CE                     	movf	(___flmul@grs),w
  5905  06CE  084A               	movwf	(??___flmul+0)+0
  5906  06CF  00C4               	movf	(___flmul@grs+1),w
  5907  06D0  084B               	movwf	((??___flmul+0)+0+1)
  5908  06D1  00C5               	movf	(___flmul@grs+2),w
  5909  06D2  084C               	movwf	((??___flmul+0)+0+2)
  5910  06D3  00C6               	movf	(___flmul@grs+3),w
  5911  06D4  084D               	movwf	((??___flmul+0)+0+3)
  5912  06D5  00C7               	movlw	018h
  5913  06D6  3018               u2725:
  5914  06D7                     	clrc
  5915  06D7  1003               	rrf	(??___flmul+0)+3,f
  5916  06D8  0CC7               	rrf	(??___flmul+0)+2,f
  5917  06D9  0CC6               	rrf	(??___flmul+0)+1,f
  5918  06DA  0CC5               	rrf	(??___flmul+0)+0,f
  5919  06DB  0CC4               u2720:
  5920  06DC                     	addlw	-1
  5921  06DC  3EFF               	skipz
  5922  06DD  1D03               	goto	u2725
  5923  06DE  2ED7               	movf	0+(??___flmul+0)+0,w
  5924  06DF  0844               	addwf	(___flmul@prod),f
  5925  06E0  07D0               	movf	1+(??___flmul+0)+0,w
  5926  06E1  0845               	clrz
  5927  06E2  1103               	skipnc
  5928  06E3  1803               	addlw	1
  5929  06E4  3E01               	skipnz
  5930  06E5  1903               	goto	u2731
  5931  06E6  2EE8               	addwf	(___flmul@prod+1),f
  5932  06E7  07D1               u2731:
  5933  06E8                     	movf	2+(??___flmul+0)+0,w
  5934  06E8  0846               	clrz
  5935  06E9  1103               	skipnc
  5936  06EA  1803               	addlw	1
  5937  06EB  3E01               	skipnz
  5938  06EC  1903               	goto	u2732
  5939  06ED  2EEF               	addwf	(___flmul@prod+2),f
  5940  06EE  07D2               u2732:
  5941  06EF                     	movf	3+(??___flmul+0)+0,w
  5942  06EF  0847               	clrz
  5943  06F0  1103               	skipnc
  5944  06F1  1803               	addlw	1
  5945  06F2  3E01               	skipnz
  5946  06F3  1903               	goto	u2733
  5947  06F4  2EF6               	addwf	(___flmul@prod+3),f
  5948  06F5  07D3               u2733:
  5949  06F6                     
  5950                           	line	146
  5951                           	
  5952                           l2191:	
  5953  06F6                     	movlw	08h
  5954  06F6  3008               	movwf	(??___flmul+0)+0
  5955  06F7  00C4               u2745:
  5956  06F8                     	clrc
  5957  06F8  1003               	rlf	(___flmul@grs),f
  5958  06F9  0DCA               	rlf	(___flmul@grs+1),f
  5959  06FA  0DCB               	rlf	(___flmul@grs+2),f
  5960  06FB  0DCC               	rlf	(___flmul@grs+3),f
  5961  06FC  0DCD               	decfsz	(??___flmul+0)+0
  5962  06FD  0BC4               	goto	u2745
  5963  06FE  2EF8               	line	149
  5964                           	
  5965                           l2193:	
  5966  06FF                     	movf	(___flmul@bexp),w
  5967  06FF  084F               	addwf	(___flmul@aexp),w
  5968  0700  074E               	movwf	(??___flmul+0)+0
  5969  0701  00C4               	clrf	(??___flmul+0)+0+1
  5970  0702  01C5               	rlf	1+(??___flmul+0)+0,f
  5971  0703  0DC5               	
  5972                           	movf	0+(??___flmul+0)+0,w
  5973  0704  0844               	addlw	low(-126)
  5974  0705  3E82               	movwf	(___flmul@temp)
  5975  0706  00D4               	movf	1+(??___flmul+0)+0,w
  5976  0707  0845               	skipnc
  5977  0708  1803               	addlw	1
  5978  0709  3E01               	addlw	high(-126)
  5979  070A  3EFF               	movwf	1+(___flmul@temp)
  5980  070B  00D5               	line	152
  5981                           	goto	l2205
  5982  070C  2F2C               	
  5983                           l689:	
  5984  070D                     	line	153
  5985                           	
  5986                           l2195:	
  5987  070D                     	movlw	01h
  5988  070D  3001               	movwf	(??___flmul+0)+0
  5989  070E  00C4               u2755:
  5990  070F                     	clrc
  5991  070F  1003               	rlf	(___flmul@prod),f
  5992  0710  0DD0               	rlf	(___flmul@prod+1),f
  5993  0711  0DD1               	rlf	(___flmul@prod+2),f
  5994  0712  0DD2               	rlf	(___flmul@prod+3),f
  5995  0713  0DD3               	decfsz	(??___flmul+0)+0
  5996  0714  0BC4               	goto	u2755
  5997  0715  2F0F               	line	154
  5998                           	
  5999                           l2197:	
  6000  0716                     	btfss	(___flmul@grs+3),(31)&7
  6001  0716  1FCD               	goto	u2761
  6002  0717  2F19               	goto	u2760
  6003  0718  2F1A               u2761:
  6004  0719                     	goto	l2201
  6005  0719  2F1C               u2760:
  6006  071A                     	line	155
  6007                           	
  6008                           l2199:	
  6009  071A                     	bsf	(___flmul@prod)+(0/8),(0)&7
  6010  071A  1450               	goto	l2201
  6011  071B  2F1C               	line	156
  6012                           	
  6013                           l690:	
  6014  071C                     	line	157
  6015                           	
  6016                           l2201:	
  6017  071C                     	movlw	01h
  6018  071C  3001               	movwf	(??___flmul+0)+0
  6019  071D  00C4               u2775:
  6020  071E                     	clrc
  6021  071E  1003               	rlf	(___flmul@grs),f
  6022  071F  0DCA               	rlf	(___flmul@grs+1),f
  6023  0720  0DCB               	rlf	(___flmul@grs+2),f
  6024  0721  0DCC               	rlf	(___flmul@grs+3),f
  6025  0722  0DCD               	decfsz	(??___flmul+0)+0
  6026  0723  0BC4               	goto	u2775
  6027  0724  2F1E               	line	158
  6028                           	
  6029                           l2203:	
  6030  0725                     	movlw	0FFh
  6031  0725  30FF               	addwf	(___flmul@temp),f
  6032  0726  07D4               	skipnc
  6033  0727  1803               	incf	(___flmul@temp+1),f
  6034  0728  0AD5               	movlw	0FFh
  6035  0729  30FF               	addwf	(___flmul@temp+1),f
  6036  072A  07D5               	goto	l2205
  6037  072B  2F2C               	line	159
  6038                           	
  6039                           l688:	
  6040  072C                     	line	152
  6041                           	
  6042                           l2205:	
  6043  072C                     	btfss	(___flmul@prod+2),(23)&7
  6044  072C  1FD2               	goto	u2781
  6045  072D  2F2F               	goto	u2780
  6046  072E  2F30               u2781:
  6047  072F                     	goto	l2195
  6048  072F  2F0D               u2780:
  6049  0730                     	goto	l2207
  6050  0730  2F31               	
  6051                           l691:	
  6052  0731                     	line	163
  6053                           	
  6054                           l2207:	
  6055  0731                     	clrf	(___flmul@aexp)
  6056  0731  01CE               	line	164
  6057                           	
  6058                           l2209:	
  6059  0732                     	btfss	(___flmul@grs+3),(31)&7
  6060  0732  1FCD               	goto	u2791
  6061  0733  2F35               	goto	u2790
  6062  0734  2F36               u2791:
  6063  0735                     	goto	l2217
  6064  0735  2F56               u2790:
  6065  0736                     	line	165
  6066                           	
  6067                           l2211:	
  6068  0736                     	movlw	0FFh
  6069  0736  30FF               	andwf	(___flmul@grs),w
  6070  0737  054A               	movwf	(??___flmul+0)+0
  6071  0738  00C4               	movlw	0FFh
  6072  0739  30FF               	andwf	(___flmul@grs+1),w
  6073  073A  054B               	movwf	((??___flmul+0)+0+1)
  6074  073B  00C5               	movlw	0FFh
  6075  073C  30FF               	andwf	(___flmul@grs+2),w
  6076  073D  054C               	movwf	((??___flmul+0)+0+2)
  6077  073E  00C6               	movlw	07Fh
  6078  073F  307F               	andwf	(___flmul@grs+3),w
  6079  0740  054D               	movwf	((??___flmul+0)+0+3)
  6080  0741  00C7               	movf	3+(??___flmul+0)+0,w
  6081  0742  0847               	iorwf	2+(??___flmul+0)+0,w
  6082  0743  0446               	iorwf	1+(??___flmul+0)+0,w
  6083  0744  0445               	iorwf	0+(??___flmul+0)+0,w
  6084  0745  0444               	skipnz
  6085  0746  1903               	goto	u2801
  6086  0747  2F49               	goto	u2800
  6087  0748  2F4A               u2801:
  6088  0749                     	goto	l693
  6089  0749  2F4D               u2800:
  6090  074A                     	line	166
  6091                           	
  6092                           l2213:	
  6093  074A                     	clrf	(___flmul@aexp)
  6094  074A  01CE               	incf	(___flmul@aexp),f
  6095  074B  0ACE               	line	167
  6096                           	goto	l2217
  6097  074C  2F56               	line	168
  6098                           	
  6099                           l693:	
  6100  074D                     	line	169
  6101                           	btfss	(___flmul@prod),(0)&7
  6102  074D  1C50               	goto	u2811
  6103  074E  2F50               	goto	u2810
  6104  074F  2F51               u2811:
  6105  0750                     	goto	l2217
  6106  0750  2F56               u2810:
  6107  0751                     	line	170
  6108                           	
  6109                           l2215:	
  6110  0751                     	clrf	(___flmul@aexp)
  6111  0751  01CE               	incf	(___flmul@aexp),f
  6112  0752  0ACE               	goto	l2217
  6113  0753  2F56               	line	171
  6114                           	
  6115                           l695:	
  6116  0754                     	goto	l2217
  6117  0754  2F56               	line	172
  6118                           	
  6119                           l694:	
  6120  0755                     	goto	l2217
  6121  0755  2F56               	line	173
  6122                           	
  6123                           l692:	
  6124  0756                     	line	174
  6125                           	
  6126                           l2217:	
  6127  0756                     	movf	((___flmul@aexp)),w
  6128  0756  084E               	btfsc	status,2
  6129  0757  1903               	goto	u2821
  6130  0758  2F5A               	goto	u2820
  6131  0759  2F5B               u2821:
  6132  075A                     	goto	l2227
  6133  075A  2F8E               u2820:
  6134  075B                     	line	175
  6135                           	
  6136                           l2219:	
  6137  075B                     	movlw	01h
  6138  075B  3001               	addwf	(___flmul@prod),f
  6139  075C  07D0               	movlw	0
  6140  075D  3000               	skipnc
  6141  075E  1803               movlw 1
  6142  075F  3001               	addwf	(___flmul@prod+1),f
  6143  0760  07D1               	movlw	0
  6144  0761  3000               	skipnc
  6145  0762  1803               movlw 1
  6146  0763  3001               	addwf	(___flmul@prod+2),f
  6147  0764  07D2               	movlw	0
  6148  0765  3000               	skipnc
  6149  0766  1803               movlw 1
  6150  0767  3001               	addwf	(___flmul@prod+3),f
  6151  0768  07D3               	line	176
  6152                           	
  6153                           l2221:	
  6154  0769                     	btfss	(___flmul@prod+3),(24)&7
  6155  0769  1C53               	goto	u2831
  6156  076A  2F6C               	goto	u2830
  6157  076B  2F6D               u2831:
  6158  076C                     	goto	l2227
  6159  076C  2F8E               u2830:
  6160  076D                     	line	177
  6161                           	
  6162                           l2223:	
  6163  076D                     	movf	(___flmul@prod),w
  6164  076D  0850               	movwf	(??___flmul+0)+0
  6165  076E  00C4               	movf	(___flmul@prod+1),w
  6166  076F  0851               	movwf	((??___flmul+0)+0+1)
  6167  0770  00C5               	movf	(___flmul@prod+2),w
  6168  0771  0852               	movwf	((??___flmul+0)+0+2)
  6169  0772  00C6               	movf	(___flmul@prod+3),w
  6170  0773  0853               	movwf	((??___flmul+0)+0+3)
  6171  0774  00C7               	movlw	01h
  6172  0775  3001               	movwf	(??___flmul+4)+0
  6173  0776  00C8               u2845:
  6174  0777                     	rlf	(??___flmul+0)+3,w
  6175  0777  0D47               	rrf	(??___flmul+0)+3,f
  6176  0778  0CC7               	rrf	(??___flmul+0)+2,f
  6177  0779  0CC6               	rrf	(??___flmul+0)+1,f
  6178  077A  0CC5               	rrf	(??___flmul+0)+0,f
  6179  077B  0CC4               u2840:
  6180  077C                     	decfsz	(??___flmul+4)+0,f
  6181  077C  0BC8               	goto	u2845
  6182  077D  2F77               	movf	3+(??___flmul+0)+0,w
  6183  077E  0847               	movwf	(___flmul@prod+3)
  6184  077F  00D3               	movf	2+(??___flmul+0)+0,w
  6185  0780  0846               	movwf	(___flmul@prod+2)
  6186  0781  00D2               	movf	1+(??___flmul+0)+0,w
  6187  0782  0845               	movwf	(___flmul@prod+1)
  6188  0783  00D1               	movf	0+(??___flmul+0)+0,w
  6189  0784  0844               	movwf	(___flmul@prod)
  6190  0785  00D0               
  6191                           	line	178
  6192                           	
  6193                           l2225:	
  6194  0786                     	movlw	01h
  6195  0786  3001               	addwf	(___flmul@temp),f
  6196  0787  07D4               	skipnc
  6197  0788  1803               	incf	(___flmul@temp+1),f
  6198  0789  0AD5               	movlw	0
  6199  078A  3000               	addwf	(___flmul@temp+1),f
  6200  078B  07D5               	goto	l2227
  6201  078C  2F8E               	line	179
  6202                           	
  6203                           l697:	
  6204  078D                     	goto	l2227
  6205  078D  2F8E               	line	180
  6206                           	
  6207                           l696:	
  6208  078E                     	line	183
  6209                           	
  6210                           l2227:	
  6211  078E                     	movf	(___flmul@temp+1),w
  6212  078E  0855               	xorlw	80h
  6213  078F  3A80               	movwf	btemp+1
  6214  0790  00FF               	movlw	(0)^80h
  6215  0791  3080               	subwf	btemp+1,w
  6216  0792  027F               	skipz
  6217  0793  1D03               	goto	u2855
  6218  0794  2F97               	movlw	0FFh
  6219  0795  30FF               	subwf	(___flmul@temp),w
  6220  0796  0254               u2855:
  6221  0797                     
  6222                           	skipc
  6223  0797  1C03               	goto	u2851
  6224  0798  2F9A               	goto	u2850
  6225  0799  2F9B               u2851:
  6226  079A                     	goto	l2231
  6227  079A  2FA6               u2850:
  6228  079B                     	line	184
  6229                           	
  6230                           l2229:	
  6231  079B                     	movlw	07Fh
  6232  079B  307F               	bcf	status, 5	;RP0=0, select bank0
  6233  079C  1283               	bcf	status, 6	;RP1=0, select bank0
  6234  079D  1303               	movwf	(___flmul@prod+3)
  6235  079E  00D3               	movlw	080h
  6236  079F  3080               	movwf	(___flmul@prod+2)
  6237  07A0  00D2               	movlw	0
  6238  07A1  3000               	movwf	(___flmul@prod+1)
  6239  07A2  00D1               	movlw	0
  6240  07A3  3000               	movwf	(___flmul@prod)
  6241  07A4  00D0               
  6242                           	line	185
  6243                           	goto	l699
  6244  07A5  2FDD               	line	187
  6245                           	
  6246                           l698:	
  6247  07A6                     	
  6248                           l2231:	
  6249  07A6                     	bcf	status, 5	;RP0=0, select bank0
  6250  07A6  1283               	bcf	status, 6	;RP1=0, select bank0
  6251  07A7  1303               	movf	(___flmul@temp+1),w
  6252  07A8  0855               	xorlw	80h
  6253  07A9  3A80               	movwf	btemp+1
  6254  07AA  00FF               	movlw	(0)^80h
  6255  07AB  3080               	subwf	btemp+1,w
  6256  07AC  027F               	skipz
  6257  07AD  1D03               	goto	u2865
  6258  07AE  2FB1               	movlw	01h
  6259  07AF  3001               	subwf	(___flmul@temp),w
  6260  07B0  0254               u2865:
  6261  07B1                     
  6262                           	skipnc
  6263  07B1  1803               	goto	u2861
  6264  07B2  2FB4               	goto	u2860
  6265  07B3  2FB5               u2861:
  6266  07B4                     	goto	l2237
  6267  07B4  2FC1               u2860:
  6268  07B5                     	line	188
  6269                           	
  6270                           l2233:	
  6271  07B5                     	movlw	high highword(0)
  6272  07B5  3000               	bcf	status, 5	;RP0=0, select bank0
  6273  07B6  1283               	bcf	status, 6	;RP1=0, select bank0
  6274  07B7  1303               	movwf	(___flmul@prod+3)
  6275  07B8  00D3               	movlw	low highword(0)
  6276  07B9  3000               	movwf	(___flmul@prod+2)
  6277  07BA  00D2               	movlw	high(0)
  6278  07BB  3000               	movwf	(___flmul@prod+1)
  6279  07BC  00D1               	movlw	low(0)
  6280  07BD  3000               	movwf	(___flmul@prod)
  6281  07BE  00D0               
  6282                           	line	190
  6283                           	
  6284                           l2235:	
  6285  07BF                     	clrf	(___flmul@sign)
  6286  07BF  01C9               	line	191
  6287                           	goto	l699
  6288  07C0  2FDD               	line	192
  6289                           	
  6290                           l700:	
  6291  07C1                     	line	194
  6292                           	
  6293                           l2237:	
  6294  07C1                     	bcf	status, 5	;RP0=0, select bank0
  6295  07C1  1283               	bcf	status, 6	;RP1=0, select bank0
  6296  07C2  1303               	movf	(___flmul@temp),w
  6297  07C3  0854               	movwf	(??___flmul+0)+0
  6298  07C4  00C4               	movf	(??___flmul+0)+0,w
  6299  07C5  0844               	movwf	(___flmul@bexp)
  6300  07C6  00CF               	line	195
  6301                           	movlw	0FFh
  6302  07C7  30FF               	andwf	(___flmul@prod),f
  6303  07C8  05D0               	movlw	0FFh
  6304  07C9  30FF               	andwf	(___flmul@prod+1),f
  6305  07CA  05D1               	movlw	07Fh
  6306  07CB  307F               	andwf	(___flmul@prod+2),f
  6307  07CC  05D2               	movlw	0
  6308  07CD  3000               	andwf	(___flmul@prod+3),f
  6309  07CE  05D3               	line	196
  6310                           	
  6311                           l2239:	
  6312  07CF                     	btfss	(___flmul@bexp),(0)&7
  6313  07CF  1C4F               	goto	u2871
  6314  07D0  2FD2               	goto	u2870
  6315  07D1  2FD3               u2871:
  6316  07D2                     	goto	l2243
  6317  07D2  2FD5               u2870:
  6318  07D3                     	line	197
  6319                           	
  6320                           l2241:	
  6321  07D3                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  6322  07D3  17D2               	goto	l2243
  6323  07D4  2FD5               	line	198
  6324                           	
  6325                           l702:	
  6326  07D5                     	line	199
  6327                           	
  6328                           l2243:	
  6329  07D5                     	movf	(___flmul@bexp),w
  6330  07D5  084F               	movwf	(??___flmul+0)+0
  6331  07D6  00C4               	clrc
  6332  07D7  1003               	rrf	(??___flmul+0)+0,w
  6333  07D8  0C44               	movwf	(??___flmul+1)+0
  6334  07D9  00C5               	movf	(??___flmul+1)+0,w
  6335  07DA  0845               	movwf	0+(___flmul@prod)+03h
  6336  07DB  00D3               	goto	l699
  6337  07DC  2FDD               	line	200
  6338                           	
  6339                           l701:	
  6340  07DD                     	
  6341                           l699:	
  6342  07DD                     	line	201
  6343                           	movf	(___flmul@sign),w
  6344  07DD  0849               	movwf	(??___flmul+0)+0
  6345  07DE  00C4               	movf	(??___flmul+0)+0,w
  6346  07DF  0844               	iorwf	0+(___flmul@prod)+03h,f
  6347  07E0  04D3               	line	203
  6348                           	
  6349                           l2245:	
  6350  07E1                     	movf	(___flmul@prod+3),w
  6351  07E1  0853               	movwf	(?___flmul+3)
  6352  07E2  00BF               	movf	(___flmul@prod+2),w
  6353  07E3  0852               	movwf	(?___flmul+2)
  6354  07E4  00BE               	movf	(___flmul@prod+1),w
  6355  07E5  0851               	movwf	(?___flmul+1)
  6356  07E6  00BD               	movf	(___flmul@prod),w
  6357  07E7  0850               	movwf	(?___flmul)
  6358  07E8  00BC               
  6359                           	goto	l687
  6360  07E9  2FEA               	
  6361                           l2247:	
  6362  07EA                     	line	205
  6363                           	
  6364                           l687:	
  6365  07EA                     	return
  6366  07EA  0008               	opt stack 0
  6367                           GLOBAL	__end_of___flmul
  6368                           	__end_of___flmul:
  6369  07EB                     	signat	___flmul,8316
  6370                           	global	__Umul8_16
  6371                           
  6372 ;; *************** function __Umul8_16 *****************
  6373 ;; Defined at:
  6374 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6375 ;; Parameters:    Size  Location     Type
  6376 ;;  multiplier      1    wreg     unsigned char 
  6377 ;;  multiplicand    1    0[COMMON] unsigned char 
  6378 ;; Auto vars:     Size  Location     Type
  6379 ;;  multiplier      1    8[COMMON] unsigned char 
  6380 ;;  word_mpld       2    6[COMMON] unsigned int 
  6381 ;;  product         2    4[COMMON] unsigned int 
  6382 ;; Return value:  Size  Location     Type
  6383 ;;                  2    0[COMMON] unsigned int 
  6384 ;; Registers used:
  6385 ;;		wreg, status,2, status,0
  6386 ;; Tracked objects:
  6387 ;;		On entry : 0/0
  6388 ;;		On exit  : 0/0
  6389 ;;		Unchanged: 0/0
  6390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6391 ;;      Params:         2       0       0       0       0
  6392 ;;      Locals:         5       0       0       0       0
  6393 ;;      Temps:          2       0       0       0       0
  6394 ;;      Totals:         9       0       0       0       0
  6395 ;;Total ram usage:        9 bytes
  6396 ;; Hardware stack levels used:    1
  6397 ;; This function calls:
  6398 ;;		Nothing
  6399 ;; This function is called by:
  6400 ;;		___flmul
  6401 ;; This function uses a non-reentrant model
  6402 ;;
  6403                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  6404                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6405                           	line	4
  6406                           global __ptext19
  6407                           __ptext19:	;psect for function __Umul8_16
  6408  0B2C                     psect	text19
  6409                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6410                           	line	4
  6411                           	global	__size_of__Umul8_16
  6412                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  6413  002A                     	
  6414                           __Umul8_16:	
  6415  0B2C                     ;incstack = 0
  6416                           	opt	stack 6
  6417                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6418                           ;__Umul8_16@multiplier stored from wreg
  6419                           	movwf	(__Umul8_16@multiplier)
  6420  0B2C  00F8               	line	5
  6421                           	
  6422                           l1783:	
  6423  0B2D                     	clrf	(__Umul8_16@product)
  6424  0B2D  01F4               	clrf	(__Umul8_16@product+1)
  6425  0B2E  01F5               	line	6
  6426                           	
  6427                           l1785:	
  6428  0B2F                     	movf	(__Umul8_16@multiplicand),w
  6429  0B2F  0870               	movwf	(??__Umul8_16+0)+0
  6430  0B30  00F2               	clrf	(??__Umul8_16+0)+0+1
  6431  0B31  01F3               	movf	0+(??__Umul8_16+0)+0,w
  6432  0B32  0872               	movwf	(__Umul8_16@word_mpld)
  6433  0B33  00F6               	movf	1+(??__Umul8_16+0)+0,w
  6434  0B34  0873               	movwf	(__Umul8_16@word_mpld+1)
  6435  0B35  00F7               	goto	l1787
  6436  0B36  2B37               	line	50
  6437                           	
  6438                           l724:	
  6439  0B37                     	line	51
  6440                           	
  6441                           l1787:	
  6442  0B37                     	btfss	(__Umul8_16@multiplier),(0)&7
  6443  0B37  1C78               	goto	u1871
  6444  0B38  2B3A               	goto	u1870
  6445  0B39  2B3B               u1871:
  6446  0B3A                     	goto	l725
  6447  0B3A  2B41               u1870:
  6448  0B3B                     	line	52
  6449                           	
  6450                           l1789:	
  6451  0B3B                     	movf	(__Umul8_16@word_mpld),w
  6452  0B3B  0876               	addwf	(__Umul8_16@product),f
  6453  0B3C  07F4               	skipnc
  6454  0B3D  1803               	incf	(__Umul8_16@product+1),f
  6455  0B3E  0AF5               	movf	(__Umul8_16@word_mpld+1),w
  6456  0B3F  0877               	addwf	(__Umul8_16@product+1),f
  6457  0B40  07F5               	line	53
  6458                           	
  6459                           l725:	
  6460  0B41                     	line	54
  6461                           	movlw	01h
  6462  0B41  3001               	
  6463                           u1885:
  6464  0B42                     	clrc
  6465  0B42  1003               	rlf	(__Umul8_16@word_mpld),f
  6466  0B43  0DF6               	rlf	(__Umul8_16@word_mpld+1),f
  6467  0B44  0DF7               	addlw	-1
  6468  0B45  3EFF               	skipz
  6469  0B46  1D03               	goto	u1885
  6470  0B47  2B42               	line	55
  6471                           	clrc
  6472  0B48  1003               	rrf	(__Umul8_16@multiplier),f
  6473  0B49  0CF8               
  6474                           	line	56
  6475                           	
  6476                           l1791:	
  6477  0B4A                     	movf	((__Umul8_16@multiplier)),w
  6478  0B4A  0878               	btfss	status,2
  6479  0B4B  1D03               	goto	u1891
  6480  0B4C  2B4E               	goto	u1890
  6481  0B4D  2B4F               u1891:
  6482  0B4E                     	goto	l1787
  6483  0B4E  2B37               u1890:
  6484  0B4F                     	goto	l1793
  6485  0B4F  2B50               	
  6486                           l726:	
  6487  0B50                     	line	59
  6488                           	
  6489                           l1793:	
  6490  0B50                     	movf	(__Umul8_16@product+1),w
  6491  0B50  0875               	movwf	(?__Umul8_16+1)
  6492  0B51  00F1               	movf	(__Umul8_16@product),w
  6493  0B52  0874               	movwf	(?__Umul8_16)
  6494  0B53  00F0               	goto	l727
  6495  0B54  2B55               	
  6496                           l1795:	
  6497  0B55                     	line	60
  6498                           	
  6499                           l727:	
  6500  0B55                     	return
  6501  0B55  0008               	opt stack 0
  6502                           GLOBAL	__end_of__Umul8_16
  6503                           	__end_of__Umul8_16:
  6504  0B56                     	signat	__Umul8_16,8314
  6505                           	global	___fladd
  6506                           
  6507 ;; *************** function ___fladd *****************
  6508 ;; Defined at:
  6509 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  6510 ;; Parameters:    Size  Location     Type
  6511 ;;  b               4    4[BANK0 ] unsigned int 
  6512 ;;  a               4    8[BANK0 ] unsigned int 
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;  grs             1   27[BANK0 ] unsigned char 
  6515 ;;  bexp            1   26[BANK0 ] unsigned char 
  6516 ;;  aexp            1   25[BANK0 ] unsigned char 
  6517 ;;  signs           1   24[BANK0 ] unsigned char 
  6518 ;; Return value:  Size  Location     Type
  6519 ;;                  4    4[BANK0 ] unsigned char 
  6520 ;; Registers used:
  6521 ;;		wreg, status,2, status,0, btemp+1
  6522 ;; Tracked objects:
  6523 ;;		On entry : 0/0
  6524 ;;		On exit  : 0/0
  6525 ;;		Unchanged: 0/0
  6526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6527 ;;      Params:         0       8       0       0       0
  6528 ;;      Locals:         0       4       0       0       0
  6529 ;;      Temps:          0      12       0       0       0
  6530 ;;      Totals:         0      24       0       0       0
  6531 ;;Total ram usage:       24 bytes
  6532 ;; Hardware stack levels used:    1
  6533 ;; This function calls:
  6534 ;;		Nothing
  6535 ;; This function is called by:
  6536 ;;		_main
  6537 ;; This function uses a non-reentrant model
  6538 ;;
  6539                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  6540                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  6541                           	line	10
  6542                           global __ptext20
  6543                           __ptext20:	;psect for function ___fladd
  6544  01BA                     psect	text20
  6545                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  6546                           	line	10
  6547                           	global	__size_of___fladd
  6548                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  6549  02BC                     	
  6550                           ___fladd:	
  6551  01BA                     ;incstack = 0
  6552                           	opt	stack 7
  6553                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6554                           	line	21
  6555                           	
  6556                           l1915:	
  6557  01BA                     	bcf	status, 5	;RP0=0, select bank0
  6558  01BA  1283               	bcf	status, 6	;RP1=0, select bank0
  6559  01BB  1303               	movf	0+(___fladd@b)+03h,w
  6560  01BC  0827               	andlw	080h
  6561  01BD  3980               	movwf	(??___fladd+0)+0
  6562  01BE  00AC               	movf	(??___fladd+0)+0,w
  6563  01BF  082C               	movwf	(___fladd@signs)
  6564  01C0  00B8               	line	22
  6565                           	
  6566                           l1917:	
  6567  01C1                     	movf	0+(___fladd@b)+03h,w
  6568  01C1  0827               	movwf	(??___fladd+0)+0
  6569  01C2  00AC               	addwf	(??___fladd+0)+0,w
  6570  01C3  072C               	movwf	(??___fladd+1)+0
  6571  01C4  00AD               	movf	(??___fladd+1)+0,w
  6572  01C5  082D               	movwf	(___fladd@bexp)
  6573  01C6  00BA               	line	23
  6574                           	
  6575                           l1919:	
  6576  01C7                     	btfss	0+(___fladd@b)+02h,(7)&7
  6577  01C7  1FA6               	goto	u2051
  6578  01C8  29CA               	goto	u2050
  6579  01C9  29CB               u2051:
  6580  01CA                     	goto	l1923
  6581  01CA  29CD               u2050:
  6582  01CB                     	line	24
  6583                           	
  6584                           l1921:	
  6585  01CB                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  6586  01CB  143A               	goto	l1923
  6587  01CC  29CD               	line	25
  6588                           	
  6589                           l583:	
  6590  01CD                     	line	28
  6591                           	
  6592                           l1923:	
  6593  01CD                     	movf	((___fladd@bexp)),w
  6594  01CD  083A               	btfsc	status,2
  6595  01CE  1903               	goto	u2061
  6596  01CF  29D1               	goto	u2060
  6597  01D0  29D2               u2061:
  6598  01D1                     	goto	l1933
  6599  01D1  29E3               u2060:
  6600  01D2                     	line	30
  6601                           	
  6602                           l1925:	
  6603  01D2                     		incf	((___fladd@bexp)),w
  6604  01D2  0A3A               	btfss	status,2
  6605  01D3  1D03               	goto	u2071
  6606  01D4  29D6               	goto	u2070
  6607  01D5  29D7               u2071:
  6608  01D6                     	goto	l1929
  6609  01D6  29E0               u2070:
  6610  01D7                     	line	32
  6611                           	
  6612                           l1927:	
  6613  01D7                     	movlw	0x0
  6614  01D7  3000               	movwf	(___fladd@b+3)
  6615  01D8  00A7               	movlw	0x0
  6616  01D9  3000               	movwf	(___fladd@b+2)
  6617  01DA  00A6               	movlw	0x0
  6618  01DB  3000               	movwf	(___fladd@b+1)
  6619  01DC  00A5               	movlw	0x0
  6620  01DD  3000               	movwf	(___fladd@b)
  6621  01DE  00A4               
  6622                           	goto	l1929
  6623  01DF  29E0               	line	33
  6624                           	
  6625                           l585:	
  6626  01E0                     	line	35
  6627                           	
  6628                           l1929:	
  6629  01E0                     	bsf	(___fladd@b)+(23/8),(23)&7
  6630  01E0  17A6               	line	37
  6631                           	
  6632                           l1931:	
  6633  01E1                     	clrf	0+(___fladd@b)+03h
  6634  01E1  01A7               	line	38
  6635                           	goto	l1935
  6636  01E2  29EC               	line	39
  6637                           	
  6638                           l584:	
  6639  01E3                     	line	41
  6640                           	
  6641                           l1933:	
  6642  01E3                     	movlw	0x0
  6643  01E3  3000               	movwf	(___fladd@b+3)
  6644  01E4  00A7               	movlw	0x0
  6645  01E5  3000               	movwf	(___fladd@b+2)
  6646  01E6  00A6               	movlw	0x0
  6647  01E7  3000               	movwf	(___fladd@b+1)
  6648  01E8  00A5               	movlw	0x0
  6649  01E9  3000               	movwf	(___fladd@b)
  6650  01EA  00A4               
  6651                           	goto	l1935
  6652  01EB  29EC               	line	42
  6653                           	
  6654                           l586:	
  6655  01EC                     	line	44
  6656                           	
  6657                           l1935:	
  6658  01EC                     	movf	0+(___fladd@a)+03h,w
  6659  01EC  082B               	andlw	080h
  6660  01ED  3980               	movwf	(??___fladd+0)+0
  6661  01EE  00AC               	movf	(??___fladd+0)+0,w
  6662  01EF  082C               	movwf	(___fladd@aexp)
  6663  01F0  00B9               	line	46
  6664                           	
  6665                           l1937:	
  6666  01F1                     	movf	(___fladd@aexp),w
  6667  01F1  0839               	xorwf	(___fladd@signs),w
  6668  01F2  0638               	skipnz
  6669  01F3  1903               	goto	u2081
  6670  01F4  29F6               	goto	u2080
  6671  01F5  29F7               u2081:
  6672  01F6                     	goto	l1941
  6673  01F6  29F9               u2080:
  6674  01F7                     	line	47
  6675                           	
  6676                           l1939:	
  6677  01F7                     	bsf	(___fladd@signs)+(6/8),(6)&7
  6678  01F7  1738               	goto	l1941
  6679  01F8  29F9               	line	48
  6680                           	
  6681                           l587:	
  6682  01F9                     	line	49
  6683                           	
  6684                           l1941:	
  6685  01F9                     	movf	0+(___fladd@a)+03h,w
  6686  01F9  082B               	movwf	(??___fladd+0)+0
  6687  01FA  00AC               	addwf	(??___fladd+0)+0,w
  6688  01FB  072C               	movwf	(??___fladd+1)+0
  6689  01FC  00AD               	movf	(??___fladd+1)+0,w
  6690  01FD  082D               	movwf	(___fladd@aexp)
  6691  01FE  00B9               	line	50
  6692                           	
  6693                           l1943:	
  6694  01FF                     	btfss	0+(___fladd@a)+02h,(7)&7
  6695  01FF  1FAA               	goto	u2091
  6696  0200  2A02               	goto	u2090
  6697  0201  2A03               u2091:
  6698  0202                     	goto	l1947
  6699  0202  2A05               u2090:
  6700  0203                     	line	51
  6701                           	
  6702                           l1945:	
  6703  0203                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  6704  0203  1439               	goto	l1947
  6705  0204  2A05               	line	52
  6706                           	
  6707                           l588:	
  6708  0205                     	line	55
  6709                           	
  6710                           l1947:	
  6711  0205                     	movf	((___fladd@aexp)),w
  6712  0205  0839               	btfsc	status,2
  6713  0206  1903               	goto	u2101
  6714  0207  2A09               	goto	u2100
  6715  0208  2A0A               u2101:
  6716  0209                     	goto	l1957
  6717  0209  2A1B               u2100:
  6718  020A                     	line	57
  6719                           	
  6720                           l1949:	
  6721  020A                     		incf	((___fladd@aexp)),w
  6722  020A  0A39               	btfss	status,2
  6723  020B  1D03               	goto	u2111
  6724  020C  2A0E               	goto	u2110
  6725  020D  2A0F               u2111:
  6726  020E                     	goto	l1953
  6727  020E  2A18               u2110:
  6728  020F                     	line	59
  6729                           	
  6730                           l1951:	
  6731  020F                     	movlw	0x0
  6732  020F  3000               	movwf	(___fladd@a+3)
  6733  0210  00AB               	movlw	0x0
  6734  0211  3000               	movwf	(___fladd@a+2)
  6735  0212  00AA               	movlw	0x0
  6736  0213  3000               	movwf	(___fladd@a+1)
  6737  0214  00A9               	movlw	0x0
  6738  0215  3000               	movwf	(___fladd@a)
  6739  0216  00A8               
  6740                           	goto	l1953
  6741  0217  2A18               	line	60
  6742                           	
  6743                           l590:	
  6744  0218                     	line	62
  6745                           	
  6746                           l1953:	
  6747  0218                     	bsf	(___fladd@a)+(23/8),(23)&7
  6748  0218  17AA               	line	64
  6749                           	
  6750                           l1955:	
  6751  0219                     	clrf	0+(___fladd@a)+03h
  6752  0219  01AB               	line	65
  6753                           	goto	l591
  6754  021A  2A23               	line	66
  6755                           	
  6756                           l589:	
  6757  021B                     	line	68
  6758                           	
  6759                           l1957:	
  6760  021B                     	movlw	0x0
  6761  021B  3000               	movwf	(___fladd@a+3)
  6762  021C  00AB               	movlw	0x0
  6763  021D  3000               	movwf	(___fladd@a+2)
  6764  021E  00AA               	movlw	0x0
  6765  021F  3000               	movwf	(___fladd@a+1)
  6766  0220  00A9               	movlw	0x0
  6767  0221  3000               	movwf	(___fladd@a)
  6768  0222  00A8               
  6769                           	line	69
  6770                           	
  6771                           l591:	
  6772  0223                     	line	75
  6773                           	movf	(___fladd@bexp),w
  6774  0223  083A               	subwf	(___fladd@aexp),w
  6775  0224  0239               	skipnc
  6776  0225  1803               	goto	u2121
  6777  0226  2A28               	goto	u2120
  6778  0227  2A29               u2121:
  6779  0228                     	goto	l1993
  6780  0228  2A6F               u2120:
  6781  0229                     	line	77
  6782                           	
  6783                           l1959:	
  6784  0229                     	btfss	(___fladd@signs),(6)&7
  6785  0229  1F38               	goto	u2131
  6786  022A  2A2C               	goto	u2130
  6787  022B  2A2D               u2131:
  6788  022C                     	goto	l1963
  6789  022C  2A32               u2130:
  6790  022D                     	line	78
  6791                           	
  6792                           l1961:	
  6793  022D                     	movlw	low(080h)
  6794  022D  3080               	movwf	(??___fladd+0)+0
  6795  022E  00AC               	movf	(??___fladd+0)+0,w
  6796  022F  082C               	xorwf	(___fladd@signs),f
  6797  0230  06B8               	goto	l1963
  6798  0231  2A32               	line	79
  6799                           	
  6800                           l593:	
  6801  0232                     	line	81
  6802                           	
  6803                           l1963:	
  6804  0232                     	movf	(___fladd@bexp),w
  6805  0232  083A               	movwf	(??___fladd+0)+0
  6806  0233  00AC               	movf	(??___fladd+0)+0,w
  6807  0234  082C               	movwf	(___fladd@grs)
  6808  0235  00BB               	line	82
  6809                           	
  6810                           l1965:	
  6811  0236                     	movf	(___fladd@aexp),w
  6812  0236  0839               	movwf	(??___fladd+0)+0
  6813  0237  00AC               	movf	(??___fladd+0)+0,w
  6814  0238  082C               	movwf	(___fladd@bexp)
  6815  0239  00BA               	line	83
  6816                           	
  6817                           l1967:	
  6818  023A                     	movf	(___fladd@grs),w
  6819  023A  083B               	movwf	(??___fladd+0)+0
  6820  023B  00AC               	movf	(??___fladd+0)+0,w
  6821  023C  082C               	movwf	(___fladd@aexp)
  6822  023D  00B9               	line	84
  6823                           	
  6824                           l1969:	
  6825  023E                     	movf	(___fladd@b),w
  6826  023E  0824               	movwf	(??___fladd+0)+0
  6827  023F  00AC               	movf	(??___fladd+0)+0,w
  6828  0240  082C               	movwf	(___fladd@grs)
  6829  0241  00BB               	line	85
  6830                           	
  6831                           l1971:	
  6832  0242                     	movf	(___fladd@a),w
  6833  0242  0828               	movwf	(??___fladd+0)+0
  6834  0243  00AC               	movf	(??___fladd+0)+0,w
  6835  0244  082C               	movwf	(___fladd@b)
  6836  0245  00A4               	line	86
  6837                           	
  6838                           l1973:	
  6839  0246                     	movf	(___fladd@grs),w
  6840  0246  083B               	movwf	(??___fladd+0)+0
  6841  0247  00AC               	movf	(??___fladd+0)+0,w
  6842  0248  082C               	movwf	(___fladd@a)
  6843  0249  00A8               	line	87
  6844                           	
  6845                           l1975:	
  6846  024A                     	movf	0+(___fladd@b)+01h,w
  6847  024A  0825               	movwf	(??___fladd+0)+0
  6848  024B  00AC               	movf	(??___fladd+0)+0,w
  6849  024C  082C               	movwf	(___fladd@grs)
  6850  024D  00BB               	line	88
  6851                           	
  6852                           l1977:	
  6853  024E                     	movf	0+(___fladd@a)+01h,w
  6854  024E  0829               	movwf	(??___fladd+0)+0
  6855  024F  00AC               	movf	(??___fladd+0)+0,w
  6856  0250  082C               	movwf	0+(___fladd@b)+01h
  6857  0251  00A5               	line	89
  6858                           	
  6859                           l1979:	
  6860  0252                     	movf	(___fladd@grs),w
  6861  0252  083B               	movwf	(??___fladd+0)+0
  6862  0253  00AC               	movf	(??___fladd+0)+0,w
  6863  0254  082C               	movwf	0+(___fladd@a)+01h
  6864  0255  00A9               	line	90
  6865                           	
  6866                           l1981:	
  6867  0256                     	movf	0+(___fladd@b)+02h,w
  6868  0256  0826               	movwf	(??___fladd+0)+0
  6869  0257  00AC               	movf	(??___fladd+0)+0,w
  6870  0258  082C               	movwf	(___fladd@grs)
  6871  0259  00BB               	line	91
  6872                           	
  6873                           l1983:	
  6874  025A                     	movf	0+(___fladd@a)+02h,w
  6875  025A  082A               	movwf	(??___fladd+0)+0
  6876  025B  00AC               	movf	(??___fladd+0)+0,w
  6877  025C  082C               	movwf	0+(___fladd@b)+02h
  6878  025D  00A6               	line	92
  6879                           	
  6880                           l1985:	
  6881  025E                     	movf	(___fladd@grs),w
  6882  025E  083B               	movwf	(??___fladd+0)+0
  6883  025F  00AC               	movf	(??___fladd+0)+0,w
  6884  0260  082C               	movwf	0+(___fladd@a)+02h
  6885  0261  00AA               	line	93
  6886                           	
  6887                           l1987:	
  6888  0262                     	movf	0+(___fladd@b)+03h,w
  6889  0262  0827               	movwf	(??___fladd+0)+0
  6890  0263  00AC               	movf	(??___fladd+0)+0,w
  6891  0264  082C               	movwf	(___fladd@grs)
  6892  0265  00BB               	line	94
  6893                           	
  6894                           l1989:	
  6895  0266                     	movf	0+(___fladd@a)+03h,w
  6896  0266  082B               	movwf	(??___fladd+0)+0
  6897  0267  00AC               	movf	(??___fladd+0)+0,w
  6898  0268  082C               	movwf	0+(___fladd@b)+03h
  6899  0269  00A7               	line	95
  6900                           	
  6901                           l1991:	
  6902  026A                     	movf	(___fladd@grs),w
  6903  026A  083B               	movwf	(??___fladd+0)+0
  6904  026B  00AC               	movf	(??___fladd+0)+0,w
  6905  026C  082C               	movwf	0+(___fladd@a)+03h
  6906  026D  00AB               	goto	l1993
  6907  026E  2A6F               	line	96
  6908                           	
  6909                           l592:	
  6910  026F                     	line	98
  6911                           	
  6912                           l1993:	
  6913  026F                     	clrf	(___fladd@grs)
  6914  026F  01BB               	line	100
  6915                           	
  6916                           l1995:	
  6917  0270                     	movf	(___fladd@bexp),w
  6918  0270  083A               	movwf	(??___fladd+0)+0
  6919  0271  00AC               	clrf	(??___fladd+0)+0+1
  6920  0272  01AD               	comf	(??___fladd+0)+0,f
  6921  0273  09AC               	comf	(??___fladd+0)+1,f
  6922  0274  09AD               	incf	(??___fladd+0)+0,f
  6923  0275  0AAC               	skipnz
  6924  0276  1903               	incf	(??___fladd+0)+1,f
  6925  0277  0AAD               	movf	(___fladd@aexp),w
  6926  0278  0839               	addwf	0+(??___fladd+0)+0,w
  6927  0279  072C               	movwf	(??___fladd+2)+0
  6928  027A  00AE               	movf	1+(??___fladd+0)+0,w
  6929  027B  082D               	skipnc
  6930  027C  1803               	incf	1+(??___fladd+0)+0,w
  6931  027D  0A2D               	movwf	((??___fladd+2)+0)+1
  6932  027E  00AF               	movf	1+(??___fladd+2)+0,w
  6933  027F  082F               	xorlw	80h
  6934  0280  3A80               	movwf	btemp+1
  6935  0281  00FF               	movlw	(0)^80h
  6936  0282  3080               	subwf	btemp+1,w
  6937  0283  027F               	skipz
  6938  0284  1D03               	goto	u2145
  6939  0285  2A88               	movlw	01Ah
  6940  0286  301A               	subwf	0+(??___fladd+2)+0,w
  6941  0287  022E               u2145:
  6942  0288                     
  6943                           	skipc
  6944  0288  1C03               	goto	u2141
  6945  0289  2A8B               	goto	u2140
  6946  028A  2A8C               u2141:
  6947  028B                     	goto	l2011
  6948  028B  2ACD               u2140:
  6949  028C                     	line	101
  6950                           	
  6951                           l1997:	
  6952  028C                     	bcf	status, 5	;RP0=0, select bank0
  6953  028C  1283               	bcf	status, 6	;RP1=0, select bank0
  6954  028D  1303               	movf	(___fladd@b+3),w
  6955  028E  0827               	iorwf	(___fladd@b+2),w
  6956  028F  0426               	iorwf	(___fladd@b+1),w
  6957  0290  0425               	iorwf	(___fladd@b),w
  6958  0291  0424               	skipz
  6959  0292  1D03               	goto	u2151
  6960  0293  2A95               	goto	u2150
  6961  0294  2A97               u2151:
  6962  0295                     	movlw	1
  6963  0295  3001               	goto	u2160
  6964  0296  2A98               u2150:
  6965  0297                     	movlw	0
  6966  0297  3000               u2160:
  6967  0298                     	movwf	(??___fladd+0)+0
  6968  0298  00AC               	movf	(??___fladd+0)+0,w
  6969  0299  082C               	movwf	(___fladd@grs)
  6970  029A  00BB               	line	102
  6971                           	movlw	high highword(0)
  6972  029B  3000               	movwf	(___fladd@b+3)
  6973  029C  00A7               	movlw	low highword(0)
  6974  029D  3000               	movwf	(___fladd@b+2)
  6975  029E  00A6               	movlw	high(0)
  6976  029F  3000               	movwf	(___fladd@b+1)
  6977  02A0  00A5               	movlw	low(0)
  6978  02A1  3000               	movwf	(___fladd@b)
  6979  02A2  00A4               
  6980                           	line	103
  6981                           	movf	(___fladd@aexp),w
  6982  02A3  0839               	movwf	(??___fladd+0)+0
  6983  02A4  00AC               	movf	(??___fladd+0)+0,w
  6984  02A5  082C               	movwf	(___fladd@bexp)
  6985  02A6  00BA               	line	104
  6986                           	goto	l595
  6987  02A7  2AD6               	line	105
  6988                           	
  6989                           l594:	
  6990  02A8                     	line	106
  6991                           	goto	l2011
  6992  02A8  2ACD               	
  6993                           l597:	
  6994  02A9                     	line	109
  6995                           	btfss	(___fladd@grs),(0)&7
  6996  02A9  1C3B               	goto	u2171
  6997  02AA  2AAC               	goto	u2170
  6998  02AB  2AAD               u2171:
  6999  02AC                     	goto	l2001
  7000  02AC  2AB6               u2170:
  7001  02AD                     	line	110
  7002                           	
  7003                           l1999:	
  7004  02AD                     	movf	(___fladd@grs),w
  7005  02AD  083B               	movwf	(??___fladd+0)+0
  7006  02AE  00AC               	clrc
  7007  02AF  1003               	rrf	(??___fladd+0)+0,w
  7008  02B0  0C2C               	iorlw	01h
  7009  02B1  3801               	movwf	(??___fladd+1)+0
  7010  02B2  00AD               	movf	(??___fladd+1)+0,w
  7011  02B3  082D               	movwf	(___fladd@grs)
  7012  02B4  00BB               	line	111
  7013                           	goto	l2003
  7014  02B5  2AB9               	line	112
  7015                           	
  7016                           l598:	
  7017  02B6                     	line	113
  7018                           	
  7019                           l2001:	
  7020  02B6                     	clrc
  7021  02B6  1003               	rrf	(___fladd@grs),f
  7022  02B7  0CBB               
  7023                           	goto	l2003
  7024  02B8  2AB9               	line	114
  7025                           	
  7026                           l599:	
  7027  02B9                     	line	115
  7028                           	
  7029                           l2003:	
  7030  02B9                     	btfss	(___fladd@b),(0)&7
  7031  02B9  1C24               	goto	u2181
  7032  02BA  2ABC               	goto	u2180
  7033  02BB  2ABD               u2181:
  7034  02BC                     	goto	l2007
  7035  02BC  2ABF               u2180:
  7036  02BD                     	line	116
  7037                           	
  7038                           l2005:	
  7039  02BD                     	bsf	(___fladd@grs)+(7/8),(7)&7
  7040  02BD  17BB               	goto	l2007
  7041  02BE  2ABF               	line	117
  7042                           	
  7043                           l600:	
  7044  02BF                     	line	118
  7045                           	
  7046                           l2007:	
  7047  02BF                     	movlw	01h
  7048  02BF  3001               	movwf	(??___fladd+0)+0
  7049  02C0  00AC               u2195:
  7050  02C1                     	rlf	(___fladd@b+3),w
  7051  02C1  0D27               	rrf	(___fladd@b+3),f
  7052  02C2  0CA7               	rrf	(___fladd@b+2),f
  7053  02C3  0CA6               	rrf	(___fladd@b+1),f
  7054  02C4  0CA5               	rrf	(___fladd@b),f
  7055  02C5  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  7056  02C6  0BAC               	goto	u2195
  7057  02C7  2AC1               
  7058                           	line	119
  7059                           	
  7060                           l2009:	
  7061  02C8                     	movlw	low(01h)
  7062  02C8  3001               	movwf	(??___fladd+0)+0
  7063  02C9  00AC               	movf	(??___fladd+0)+0,w
  7064  02CA  082C               	addwf	(___fladd@bexp),f
  7065  02CB  07BA               	goto	l2011
  7066  02CC  2ACD               	line	120
  7067                           	
  7068                           l596:	
  7069  02CD                     	line	106
  7070                           	
  7071                           l2011:	
  7072  02CD                     	bcf	status, 5	;RP0=0, select bank0
  7073  02CD  1283               	bcf	status, 6	;RP1=0, select bank0
  7074  02CE  1303               	movf	(___fladd@aexp),w
  7075  02CF  0839               	subwf	(___fladd@bexp),w
  7076  02D0  023A               	skipc
  7077  02D1  1C03               	goto	u2201
  7078  02D2  2AD4               	goto	u2200
  7079  02D3  2AD5               u2201:
  7080  02D4                     	goto	l597
  7081  02D4  2AA9               u2200:
  7082  02D5                     	goto	l595
  7083  02D5  2AD6               	
  7084                           l601:	
  7085  02D6                     	line	121
  7086                           	
  7087                           l595:	
  7088  02D6                     	line	124
  7089                           	btfsc	(___fladd@signs),(6)&7
  7090  02D6  1B38               	goto	u2211
  7091  02D7  2AD9               	goto	u2210
  7092  02D8  2ADA               u2211:
  7093  02D9                     	goto	l2037
  7094  02D9  2B29               u2210:
  7095  02DA                     	line	127
  7096                           	
  7097                           l2013:	
  7098  02DA                     	movf	((___fladd@bexp)),w
  7099  02DA  083A               	btfss	status,2
  7100  02DB  1D03               	goto	u2221
  7101  02DC  2ADE               	goto	u2220
  7102  02DD  2ADF               u2221:
  7103  02DE                     	goto	l2019
  7104  02DE  2AE9               u2220:
  7105  02DF                     	line	128
  7106                           	
  7107                           l2015:	
  7108  02DF                     	movlw	0x0
  7109  02DF  3000               	movwf	(?___fladd+3)
  7110  02E0  00A7               	movlw	0x0
  7111  02E1  3000               	movwf	(?___fladd+2)
  7112  02E2  00A6               	movlw	0x0
  7113  02E3  3000               	movwf	(?___fladd+1)
  7114  02E4  00A5               	movlw	0x0
  7115  02E5  3000               	movwf	(?___fladd)
  7116  02E6  00A4               
  7117                           	goto	l604
  7118  02E7  2C75               	
  7119                           l2017:	
  7120  02E8                     	goto	l604
  7121  02E8  2C75               	line	129
  7122                           	
  7123                           l603:	
  7124  02E9                     	line	132
  7125                           	
  7126                           l2019:	
  7127  02E9                     	movf	(___fladd@a),w
  7128  02E9  0828               	addwf	(___fladd@b),f
  7129  02EA  07A4               	movf	(___fladd@a+1),w
  7130  02EB  0829               	clrz
  7131  02EC  1103               	skipnc
  7132  02ED  1803               	addlw	1
  7133  02EE  3E01               	skipnz
  7134  02EF  1903               	goto	u2231
  7135  02F0  2AF2               	addwf	(___fladd@b+1),f
  7136  02F1  07A5               u2231:
  7137  02F2                     	movf	(___fladd@a+2),w
  7138  02F2  082A               	clrz
  7139  02F3  1103               	skipnc
  7140  02F4  1803               	addlw	1
  7141  02F5  3E01               	skipnz
  7142  02F6  1903               	goto	u2232
  7143  02F7  2AF9               	addwf	(___fladd@b+2),f
  7144  02F8  07A6               u2232:
  7145  02F9                     	movf	(___fladd@a+3),w
  7146  02F9  082B               	clrz
  7147  02FA  1103               	skipnc
  7148  02FB  1803               	addlw	1
  7149  02FC  3E01               	skipnz
  7150  02FD  1903               	goto	u2233
  7151  02FE  2B00               	addwf	(___fladd@b+3),f
  7152  02FF  07A7               u2233:
  7153  0300                     
  7154                           	line	134
  7155                           	
  7156                           l2021:	
  7157  0300                     	btfss	(___fladd@b+3),(24)&7
  7158  0300  1C27               	goto	u2241
  7159  0301  2B03               	goto	u2240
  7160  0302  2B04               u2241:
  7161  0303                     	goto	l2071
  7162  0303  2BF2               u2240:
  7163  0304                     	line	135
  7164                           	
  7165                           l2023:	
  7166  0304                     	btfss	(___fladd@grs),(0)&7
  7167  0304  1C3B               	goto	u2251
  7168  0305  2B07               	goto	u2250
  7169  0306  2B08               u2251:
  7170  0307                     	goto	l2027
  7171  0307  2B11               u2250:
  7172  0308                     	line	136
  7173                           	
  7174                           l2025:	
  7175  0308                     	movf	(___fladd@grs),w
  7176  0308  083B               	movwf	(??___fladd+0)+0
  7177  0309  00AC               	clrc
  7178  030A  1003               	rrf	(??___fladd+0)+0,w
  7179  030B  0C2C               	iorlw	01h
  7180  030C  3801               	movwf	(??___fladd+1)+0
  7181  030D  00AD               	movf	(??___fladd+1)+0,w
  7182  030E  082D               	movwf	(___fladd@grs)
  7183  030F  00BB               	line	137
  7184                           	goto	l2029
  7185  0310  2B14               	line	138
  7186                           	
  7187                           l606:	
  7188  0311                     	line	139
  7189                           	
  7190                           l2027:	
  7191  0311                     	clrc
  7192  0311  1003               	rrf	(___fladd@grs),f
  7193  0312  0CBB               
  7194                           	goto	l2029
  7195  0313  2B14               	line	140
  7196                           	
  7197                           l607:	
  7198  0314                     	line	141
  7199                           	
  7200                           l2029:	
  7201  0314                     	btfss	(___fladd@b),(0)&7
  7202  0314  1C24               	goto	u2261
  7203  0315  2B17               	goto	u2260
  7204  0316  2B18               u2261:
  7205  0317                     	goto	l2033
  7206  0317  2B1A               u2260:
  7207  0318                     	line	142
  7208                           	
  7209                           l2031:	
  7210  0318                     	bsf	(___fladd@grs)+(7/8),(7)&7
  7211  0318  17BB               	goto	l2033
  7212  0319  2B1A               	line	143
  7213                           	
  7214                           l608:	
  7215  031A                     	line	144
  7216                           	
  7217                           l2033:	
  7218  031A                     	movlw	01h
  7219  031A  3001               	movwf	(??___fladd+0)+0
  7220  031B  00AC               u2275:
  7221  031C                     	rlf	(___fladd@b+3),w
  7222  031C  0D27               	rrf	(___fladd@b+3),f
  7223  031D  0CA7               	rrf	(___fladd@b+2),f
  7224  031E  0CA6               	rrf	(___fladd@b+1),f
  7225  031F  0CA5               	rrf	(___fladd@b),f
  7226  0320  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  7227  0321  0BAC               	goto	u2275
  7228  0322  2B1C               
  7229                           	line	145
  7230                           	
  7231                           l2035:	
  7232  0323                     	movlw	low(01h)
  7233  0323  3001               	movwf	(??___fladd+0)+0
  7234  0324  00AC               	movf	(??___fladd+0)+0,w
  7235  0325  082C               	addwf	(___fladd@bexp),f
  7236  0326  07BA               	goto	l2071
  7237  0327  2BF2               	line	146
  7238                           	
  7239                           l605:	
  7240  0328                     	line	148
  7241                           	goto	l2071
  7242  0328  2BF2               	line	149
  7243                           	
  7244                           l602:	
  7245  0329                     	line	153
  7246                           	
  7247                           l2037:	
  7248  0329                     	movf	(___fladd@b+3),w
  7249  0329  0827               	xorlw	80h
  7250  032A  3A80               	movwf	btemp+1
  7251  032B  00FF               	movf	(___fladd@a+3),w
  7252  032C  082B               	xorlw	80h
  7253  032D  3A80               	subwf	btemp+1,w
  7254  032E  027F               	
  7255                           	skipz
  7256  032F  1D03               	goto	u2283
  7257  0330  2B3B               	movf	(___fladd@a+2),w
  7258  0331  082A               	subwf	(___fladd@b+2),w
  7259  0332  0226               	skipz
  7260  0333  1D03               	goto	u2283
  7261  0334  2B3B               	movf	(___fladd@a+1),w
  7262  0335  0829               	subwf	(___fladd@b+1),w
  7263  0336  0225               	skipz
  7264  0337  1D03               	goto	u2283
  7265  0338  2B3B               	movf	(___fladd@a),w
  7266  0339  0828               	subwf	(___fladd@b),w
  7267  033A  0224               u2283:
  7268  033B                     	skipnc
  7269  033B  1803               	goto	u2281
  7270  033C  2B3E               	goto	u2280
  7271  033D  2B3F               u2281:
  7272  033E                     	goto	l2047
  7273  033E  2BA5               u2280:
  7274  033F                     	line	154
  7275                           	
  7276                           l2039:	
  7277  033F                     	movlw	0FFh
  7278  033F  30FF               	movwf	((??___fladd+0)+0)
  7279  0340  00AC               	movlw	0FFh
  7280  0341  30FF               	movwf	((??___fladd+0)+0+1)
  7281  0342  00AD               	movlw	0FFh
  7282  0343  30FF               	movwf	((??___fladd+0)+0+2)
  7283  0344  00AE               	movlw	0FFh
  7284  0345  30FF               	movwf	((??___fladd+0)+0+3)
  7285  0346  00AF               	movf	(___fladd@a),w
  7286  0347  0828               	movwf	(??___fladd+4)+0
  7287  0348  00B0               	movf	(___fladd@a+1),w
  7288  0349  0829               	movwf	((??___fladd+4)+0+1)
  7289  034A  00B1               	movf	(___fladd@a+2),w
  7290  034B  082A               	movwf	((??___fladd+4)+0+2)
  7291  034C  00B2               	movf	(___fladd@a+3),w
  7292  034D  082B               	movwf	((??___fladd+4)+0+3)
  7293  034E  00B3               	comf	(___fladd@b),w
  7294  034F  0924               	movwf	(??___fladd+8)+0
  7295  0350  00B4               	comf	(___fladd@b+1),w
  7296  0351  0925               	movwf	((??___fladd+8)+0+1)
  7297  0352  00B5               	comf	(___fladd@b+2),w
  7298  0353  0926               	movwf	((??___fladd+8)+0+2)
  7299  0354  00B6               	comf	(___fladd@b+3),w
  7300  0355  0927               	movwf	((??___fladd+8)+0+3)
  7301  0356  00B7               	incf	(??___fladd+8)+0,f
  7302  0357  0AB4               	skipnz
  7303  0358  1903               	incf	((??___fladd+8)+0+1),f
  7304  0359  0AB5               	skipnz
  7305  035A  1903               	incf	((??___fladd+8)+0+2),f
  7306  035B  0AB6               	skipnz
  7307  035C  1903               	incf	((??___fladd+8)+0+3),f
  7308  035D  0AB7               	movf	0+(??___fladd+8)+0,w
  7309  035E  0834               	addwf	(??___fladd+4)+0,f
  7310  035F  07B0               	movf	1+(??___fladd+8)+0,w
  7311  0360  0835               	skipnc
  7312  0361  1803               	incfsz	1+(??___fladd+8)+0,w
  7313  0362  0F35               	goto	u2290
  7314  0363  2B65               	goto	u2291
  7315  0364  2B66               u2290:
  7316  0365                     	addwf	(??___fladd+4)+1,f
  7317  0365  07B1               u2291:
  7318  0366                     	movf	2+(??___fladd+8)+0,w
  7319  0366  0836               	skipnc
  7320  0367  1803               	incfsz	2+(??___fladd+8)+0,w
  7321  0368  0F36               	goto	u2292
  7322  0369  2B6B               	goto	u2293
  7323  036A  2B6C               u2292:
  7324  036B                     	addwf	(??___fladd+4)+2,f
  7325  036B  07B2               u2293:
  7326  036C                     	movf	3+(??___fladd+8)+0,w
  7327  036C  0837               	skipnc
  7328  036D  1803               	incf	3+(??___fladd+8)+0,w
  7329  036E  0A37               	addwf	(??___fladd+4)+3,f
  7330  036F  07B3               	movf	0+(??___fladd+4)+0,w
  7331  0370  0830               	addwf	(??___fladd+0)+0,f
  7332  0371  07AC               	movf	1+(??___fladd+4)+0,w
  7333  0372  0831               	skipnc
  7334  0373  1803               	incfsz	1+(??___fladd+4)+0,w
  7335  0374  0F31               	goto	u2300
  7336  0375  2B77               	goto	u2301
  7337  0376  2B78               u2300:
  7338  0377                     	addwf	(??___fladd+0)+1,f
  7339  0377  07AD               u2301:
  7340  0378                     	movf	2+(??___fladd+4)+0,w
  7341  0378  0832               	skipnc
  7342  0379  1803               	incfsz	2+(??___fladd+4)+0,w
  7343  037A  0F32               	goto	u2302
  7344  037B  2B7D               	goto	u2303
  7345  037C  2B7E               u2302:
  7346  037D                     	addwf	(??___fladd+0)+2,f
  7347  037D  07AE               u2303:
  7348  037E                     	movf	3+(??___fladd+4)+0,w
  7349  037E  0833               	skipnc
  7350  037F  1803               	incf	3+(??___fladd+4)+0,w
  7351  0380  0A33               	addwf	(??___fladd+0)+3,f
  7352  0381  07AF               	movf	3+(??___fladd+0)+0,w
  7353  0382  082F               	movwf	(___fladd@b+3)
  7354  0383  00A7               	movf	2+(??___fladd+0)+0,w
  7355  0384  082E               	movwf	(___fladd@b+2)
  7356  0385  00A6               	movf	1+(??___fladd+0)+0,w
  7357  0386  082D               	movwf	(___fladd@b+1)
  7358  0387  00A5               	movf	0+(??___fladd+0)+0,w
  7359  0388  082C               	movwf	(___fladd@b)
  7360  0389  00A4               
  7361                           	line	155
  7362                           	movlw	low(080h)
  7363  038A  3080               	movwf	(??___fladd+0)+0
  7364  038B  00AC               	movf	(??___fladd+0)+0,w
  7365  038C  082C               	xorwf	(___fladd@signs),f
  7366  038D  06B8               	line	156
  7367                           	
  7368                           l2041:	
  7369  038E                     	comf	(___fladd@grs),f
  7370  038E  09BB               	incf	(___fladd@grs),f
  7371  038F  0ABB               	line	157
  7372                           	
  7373                           l2043:	
  7374  0390                     	movf	((___fladd@grs)),w
  7375  0390  083B               	btfss	status,2
  7376  0391  1D03               	goto	u2311
  7377  0392  2B94               	goto	u2310
  7378  0393  2B95               u2311:
  7379  0394                     	goto	l612
  7380  0394  2BB3               u2310:
  7381  0395                     	line	158
  7382                           	
  7383                           l2045:	
  7384  0395                     	movlw	01h
  7385  0395  3001               	addwf	(___fladd@b),f
  7386  0396  07A4               	movlw	0
  7387  0397  3000               	skipnc
  7388  0398  1803               movlw 1
  7389  0399  3001               	addwf	(___fladd@b+1),f
  7390  039A  07A5               	movlw	0
  7391  039B  3000               	skipnc
  7392  039C  1803               movlw 1
  7393  039D  3001               	addwf	(___fladd@b+2),f
  7394  039E  07A6               	movlw	0
  7395  039F  3000               	skipnc
  7396  03A0  1803               movlw 1
  7397  03A1  3001               	addwf	(___fladd@b+3),f
  7398  03A2  07A7               	goto	l612
  7399  03A3  2BB3               	line	159
  7400                           	
  7401                           l611:	
  7402  03A4                     	line	160
  7403                           	goto	l612
  7404  03A4  2BB3               	line	161
  7405                           	
  7406                           l610:	
  7407  03A5                     	line	162
  7408                           	
  7409                           l2047:	
  7410  03A5                     	movf	(___fladd@a),w
  7411  03A5  0828               	subwf	(___fladd@b),f
  7412  03A6  02A4               	movf	(___fladd@a+1),w
  7413  03A7  0829               	skipc
  7414  03A8  1C03               	incfsz	(___fladd@a+1),w
  7415  03A9  0F29               	subwf	(___fladd@b+1),f
  7416  03AA  02A5               	movf	(___fladd@a+2),w
  7417  03AB  082A               	skipc
  7418  03AC  1C03               	incfsz	(___fladd@a+2),w
  7419  03AD  0F2A               	subwf	(___fladd@b+2),f
  7420  03AE  02A6               	movf	(___fladd@a+3),w
  7421  03AF  082B               	skipc
  7422  03B0  1C03               	incfsz	(___fladd@a+3),w
  7423  03B1  0F2B               	subwf	(___fladd@b+3),f
  7424  03B2  02A7               	line	163
  7425                           	
  7426                           l612:	
  7427  03B3                     	line	166
  7428                           	movf	(___fladd@b+3),w
  7429  03B3  0827               	iorwf	(___fladd@b+2),w
  7430  03B4  0426               	iorwf	(___fladd@b+1),w
  7431  03B5  0425               	iorwf	(___fladd@b),w
  7432  03B6  0424               	skipz
  7433  03B7  1D03               	goto	u2321
  7434  03B8  2BBA               	goto	u2320
  7435  03B9  2BBB               u2321:
  7436  03BA                     	goto	l2069
  7437  03BA  2BEC               u2320:
  7438  03BB                     	
  7439                           l2049:	
  7440  03BB                     	movf	((___fladd@grs)),w
  7441  03BB  083B               	btfss	status,2
  7442  03BC  1D03               	goto	u2331
  7443  03BD  2BBF               	goto	u2330
  7444  03BE  2BC0               u2331:
  7445  03BF                     	goto	l2069
  7446  03BF  2BEC               u2330:
  7447  03C0                     	line	167
  7448                           	
  7449                           l2051:	
  7450  03C0                     	movlw	0x0
  7451  03C0  3000               	movwf	(?___fladd+3)
  7452  03C1  00A7               	movlw	0x0
  7453  03C2  3000               	movwf	(?___fladd+2)
  7454  03C3  00A6               	movlw	0x0
  7455  03C4  3000               	movwf	(?___fladd+1)
  7456  03C5  00A5               	movlw	0x0
  7457  03C6  3000               	movwf	(?___fladd)
  7458  03C7  00A4               
  7459                           	goto	l604
  7460  03C8  2C75               	
  7461                           l2053:	
  7462  03C9                     	goto	l604
  7463  03C9  2C75               	line	168
  7464                           	
  7465                           l613:	
  7466  03CA                     	line	171
  7467                           	goto	l2069
  7468  03CA  2BEC               	
  7469                           l615:	
  7470  03CB                     	line	172
  7471                           	
  7472                           l2055:	
  7473  03CB                     	movlw	01h
  7474  03CB  3001               	movwf	(??___fladd+0)+0
  7475  03CC  00AC               u2345:
  7476  03CD                     	clrc
  7477  03CD  1003               	rlf	(___fladd@b),f
  7478  03CE  0DA4               	rlf	(___fladd@b+1),f
  7479  03CF  0DA5               	rlf	(___fladd@b+2),f
  7480  03D0  0DA6               	rlf	(___fladd@b+3),f
  7481  03D1  0DA7               	decfsz	(??___fladd+0)+0
  7482  03D2  0BAC               	goto	u2345
  7483  03D3  2BCD               	line	173
  7484                           	
  7485                           l2057:	
  7486  03D4                     	btfss	(___fladd@grs),(7)&7
  7487  03D4  1FBB               	goto	u2351
  7488  03D5  2BD7               	goto	u2350
  7489  03D6  2BD8               u2351:
  7490  03D7                     	goto	l616
  7491  03D7  2BD9               u2350:
  7492  03D8                     	line	174
  7493                           	
  7494                           l2059:	
  7495  03D8                     	bsf	(___fladd@b)+(0/8),(0)&7
  7496  03D8  1424               	line	175
  7497                           	
  7498                           l616:	
  7499  03D9                     	line	176
  7500                           	btfss	(___fladd@grs),(0)&7
  7501  03D9  1C3B               	goto	u2361
  7502  03DA  2BDC               	goto	u2360
  7503  03DB  2BDD               u2361:
  7504  03DC                     	goto	l2063
  7505  03DC  2BE0               u2360:
  7506  03DD                     	line	177
  7507                           	
  7508                           l2061:	
  7509  03DD                     	setc
  7510  03DD  1403               	rlf	(___fladd@grs),f
  7511  03DE  0DBB               	line	178
  7512                           	goto	l2065
  7513  03DF  2BE3               	line	179
  7514                           	
  7515                           l617:	
  7516  03E0                     	line	180
  7517                           	
  7518                           l2063:	
  7519  03E0                     	clrc
  7520  03E0  1003               	rlf	(___fladd@grs),f
  7521  03E1  0DBB               
  7522                           	goto	l2065
  7523  03E2  2BE3               	line	181
  7524                           	
  7525                           l618:	
  7526  03E3                     	line	182
  7527                           	
  7528                           l2065:	
  7529  03E3                     	movf	((___fladd@bexp)),w
  7530  03E3  083A               	btfsc	status,2
  7531  03E4  1903               	goto	u2371
  7532  03E5  2BE7               	goto	u2370
  7533  03E6  2BE8               u2371:
  7534  03E7                     	goto	l2069
  7535  03E7  2BEC               u2370:
  7536  03E8                     	line	183
  7537                           	
  7538                           l2067:	
  7539  03E8                     	movlw	01h
  7540  03E8  3001               	subwf	(___fladd@bexp),f
  7541  03E9  02BA               	goto	l2069
  7542  03EA  2BEC               	line	184
  7543                           	
  7544                           l619:	
  7545  03EB                     	goto	l2069
  7546  03EB  2BEC               	line	185
  7547                           	
  7548                           l614:	
  7549  03EC                     	line	171
  7550                           	
  7551                           l2069:	
  7552  03EC                     	btfss	(___fladd@b+2),(23)&7
  7553  03EC  1FA6               	goto	u2381
  7554  03ED  2BEF               	goto	u2380
  7555  03EE  2BF0               u2381:
  7556  03EF                     	goto	l2055
  7557  03EF  2BCB               u2380:
  7558  03F0                     	goto	l2071
  7559  03F0  2BF2               	
  7560                           l620:	
  7561  03F1                     	goto	l2071
  7562  03F1  2BF2               	line	186
  7563                           	
  7564                           l609:	
  7565  03F2                     	line	192
  7566                           	
  7567                           l2071:	
  7568  03F2                     	clrf	(___fladd@aexp)
  7569  03F2  01B9               	line	193
  7570                           	
  7571                           l2073:	
  7572  03F3                     	btfss	(___fladd@grs),(7)&7
  7573  03F3  1FBB               	goto	u2391
  7574  03F4  2BF6               	goto	u2390
  7575  03F5  2BF7               u2391:
  7576  03F6                     	goto	l2081
  7577  03F6  2C09               u2390:
  7578  03F7                     	line	194
  7579                           	
  7580                           l2075:	
  7581  03F7                     	movf	(___fladd@grs),w
  7582  03F7  083B               	andlw	07Fh
  7583  03F8  397F               	btfsc	status,2
  7584  03F9  1903               	goto	u2401
  7585  03FA  2BFC               	goto	u2400
  7586  03FB  2BFD               u2401:
  7587  03FC                     	goto	l622
  7588  03FC  2C00               u2400:
  7589  03FD                     	line	195
  7590                           	
  7591                           l2077:	
  7592  03FD                     	clrf	(___fladd@aexp)
  7593  03FD  01B9               	incf	(___fladd@aexp),f
  7594  03FE  0AB9               	line	196
  7595                           	goto	l2081
  7596  03FF  2C09               	line	197
  7597                           	
  7598                           l622:	
  7599  0400                     	line	198
  7600                           	btfss	(___fladd@b),(0)&7
  7601  0400  1C24               	goto	u2411
  7602  0401  2C03               	goto	u2410
  7603  0402  2C04               u2411:
  7604  0403                     	goto	l2081
  7605  0403  2C09               u2410:
  7606  0404                     	line	199
  7607                           	
  7608                           l2079:	
  7609  0404                     	clrf	(___fladd@aexp)
  7610  0404  01B9               	incf	(___fladd@aexp),f
  7611  0405  0AB9               	goto	l2081
  7612  0406  2C09               	line	200
  7613                           	
  7614                           l624:	
  7615  0407                     	goto	l2081
  7616  0407  2C09               	line	201
  7617                           	
  7618                           l623:	
  7619  0408                     	goto	l2081
  7620  0408  2C09               	line	202
  7621                           	
  7622                           l621:	
  7623  0409                     	line	203
  7624                           	
  7625                           l2081:	
  7626  0409                     	movf	((___fladd@aexp)),w
  7627  0409  0839               	btfsc	status,2
  7628  040A  1903               	goto	u2421
  7629  040B  2C0D               	goto	u2420
  7630  040C  2C0E               u2421:
  7631  040D                     	goto	l625
  7632  040D  2C44               u2420:
  7633  040E                     	line	204
  7634                           	
  7635                           l2083:	
  7636  040E                     	movlw	01h
  7637  040E  3001               	addwf	(___fladd@b),f
  7638  040F  07A4               	movlw	0
  7639  0410  3000               	skipnc
  7640  0411  1803               movlw 1
  7641  0412  3001               	addwf	(___fladd@b+1),f
  7642  0413  07A5               	movlw	0
  7643  0414  3000               	skipnc
  7644  0415  1803               movlw 1
  7645  0416  3001               	addwf	(___fladd@b+2),f
  7646  0417  07A6               	movlw	0
  7647  0418  3000               	skipnc
  7648  0419  1803               movlw 1
  7649  041A  3001               	addwf	(___fladd@b+3),f
  7650  041B  07A7               	line	205
  7651                           	
  7652                           l2085:	
  7653  041C                     	btfss	(___fladd@b+3),(24)&7
  7654  041C  1C27               	goto	u2431
  7655  041D  2C1F               	goto	u2430
  7656  041E  2C20               u2431:
  7657  041F                     	goto	l625
  7658  041F  2C44               u2430:
  7659  0420                     	line	206
  7660                           	
  7661                           l2087:	
  7662  0420                     	movf	(___fladd@b),w
  7663  0420  0824               	movwf	(??___fladd+0)+0
  7664  0421  00AC               	movf	(___fladd@b+1),w
  7665  0422  0825               	movwf	((??___fladd+0)+0+1)
  7666  0423  00AD               	movf	(___fladd@b+2),w
  7667  0424  0826               	movwf	((??___fladd+0)+0+2)
  7668  0425  00AE               	movf	(___fladd@b+3),w
  7669  0426  0827               	movwf	((??___fladd+0)+0+3)
  7670  0427  00AF               	movlw	01h
  7671  0428  3001               	movwf	(??___fladd+4)+0
  7672  0429  00B0               u2445:
  7673  042A                     	rlf	(??___fladd+0)+3,w
  7674  042A  0D2F               	rrf	(??___fladd+0)+3,f
  7675  042B  0CAF               	rrf	(??___fladd+0)+2,f
  7676  042C  0CAE               	rrf	(??___fladd+0)+1,f
  7677  042D  0CAD               	rrf	(??___fladd+0)+0,f
  7678  042E  0CAC               u2440:
  7679  042F                     	decfsz	(??___fladd+4)+0,f
  7680  042F  0BB0               	goto	u2445
  7681  0430  2C2A               	movf	3+(??___fladd+0)+0,w
  7682  0431  082F               	movwf	(___fladd@b+3)
  7683  0432  00A7               	movf	2+(??___fladd+0)+0,w
  7684  0433  082E               	movwf	(___fladd@b+2)
  7685  0434  00A6               	movf	1+(??___fladd+0)+0,w
  7686  0435  082D               	movwf	(___fladd@b+1)
  7687  0436  00A5               	movf	0+(??___fladd+0)+0,w
  7688  0437  082C               	movwf	(___fladd@b)
  7689  0438  00A4               
  7690                           	line	207
  7691                           		incf	((___fladd@bexp)),w
  7692  0439  0A3A               	btfsc	status,2
  7693  043A  1903               	goto	u2451
  7694  043B  2C3D               	goto	u2450
  7695  043C  2C3E               u2451:
  7696  043D                     	goto	l625
  7697  043D  2C44               u2450:
  7698  043E                     	line	208
  7699                           	
  7700                           l2089:	
  7701  043E                     	movlw	low(01h)
  7702  043E  3001               	movwf	(??___fladd+0)+0
  7703  043F  00AC               	movf	(??___fladd+0)+0,w
  7704  0440  082C               	addwf	(___fladd@bexp),f
  7705  0441  07BA               	goto	l625
  7706  0442  2C44               	line	209
  7707                           	
  7708                           l627:	
  7709  0443                     	goto	l625
  7710  0443  2C44               	line	210
  7711                           	
  7712                           l626:	
  7713  0444                     	line	211
  7714                           	
  7715                           l625:	
  7716  0444                     	line	215
  7717                           		incf	((___fladd@bexp)),w
  7718  0444  0A3A               	btfsc	status,2
  7719  0445  1903               	goto	u2461
  7720  0446  2C48               	goto	u2460
  7721  0447  2C49               u2461:
  7722  0448                     	goto	l2093
  7723  0448  2C4F               u2460:
  7724  0449                     	
  7725                           l2091:	
  7726  0449                     	movf	((___fladd@bexp)),w
  7727  0449  083A               	btfss	status,2
  7728  044A  1D03               	goto	u2471
  7729  044B  2C4D               	goto	u2470
  7730  044C  2C4E               u2471:
  7731  044D                     	goto	l2099
  7732  044D  2C5F               u2470:
  7733  044E                     	goto	l2093
  7734  044E  2C4F               	
  7735                           l630:	
  7736  044F                     	line	216
  7737                           	
  7738                           l2093:	
  7739  044F                     	movlw	high highword(0)
  7740  044F  3000               	movwf	(___fladd@b+3)
  7741  0450  00A7               	movlw	low highword(0)
  7742  0451  3000               	movwf	(___fladd@b+2)
  7743  0452  00A6               	movlw	high(0)
  7744  0453  3000               	movwf	(___fladd@b+1)
  7745  0454  00A5               	movlw	low(0)
  7746  0455  3000               	movwf	(___fladd@b)
  7747  0456  00A4               
  7748                           	line	218
  7749                           	
  7750                           l2095:	
  7751  0457                     	movf	((___fladd@bexp)),w
  7752  0457  083A               	btfss	status,2
  7753  0458  1D03               	goto	u2481
  7754  0459  2C5B               	goto	u2480
  7755  045A  2C5C               u2481:
  7756  045B                     	goto	l2099
  7757  045B  2C5F               u2480:
  7758  045C                     	line	219
  7759                           	
  7760                           l2097:	
  7761  045C                     	clrf	(___fladd@signs)
  7762  045C  01B8               	goto	l2099
  7763  045D  2C5F               	line	220
  7764                           	
  7765                           l631:	
  7766  045E                     	goto	l2099
  7767  045E  2C5F               	line	221
  7768                           	
  7769                           l628:	
  7770  045F                     	line	225
  7771                           	
  7772                           l2099:	
  7773  045F                     	btfss	(___fladd@bexp),(0)&7
  7774  045F  1C3A               	goto	u2491
  7775  0460  2C62               	goto	u2490
  7776  0461  2C63               u2491:
  7777  0462                     	goto	l2103
  7778  0462  2C65               u2490:
  7779  0463                     	line	226
  7780                           	
  7781                           l2101:	
  7782  0463                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  7783  0463  17A6               	line	227
  7784                           	goto	l633
  7785  0464  2C69               	line	229
  7786                           	
  7787                           l632:	
  7788  0465                     	line	230
  7789                           	
  7790                           l2103:	
  7791  0465                     	movlw	low(07Fh)
  7792  0465  307F               	movwf	(??___fladd+0)+0
  7793  0466  00AC               	movf	(??___fladd+0)+0,w
  7794  0467  082C               	andwf	0+(___fladd@b)+02h,f
  7795  0468  05A6               	line	231
  7796                           	
  7797                           l633:	
  7798  0469                     	line	232
  7799                           	movf	(___fladd@bexp),w
  7800  0469  083A               	movwf	(??___fladd+0)+0
  7801  046A  00AC               	clrc
  7802  046B  1003               	rrf	(??___fladd+0)+0,w
  7803  046C  0C2C               	movwf	(??___fladd+1)+0
  7804  046D  00AD               	movf	(??___fladd+1)+0,w
  7805  046E  082D               	movwf	0+(___fladd@b)+03h
  7806  046F  00A7               	line	233
  7807                           	
  7808                           l2105:	
  7809  0470                     	btfss	(___fladd@signs),(7)&7
  7810  0470  1FB8               	goto	u2501
  7811  0471  2C73               	goto	u2500
  7812  0472  2C74               u2501:
  7813  0473                     	goto	l634
  7814  0473  2C75               u2500:
  7815  0474                     	line	234
  7816                           	
  7817                           l2107:	
  7818  0474                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  7819  0474  17A7               	line	235
  7820                           	
  7821                           l634:	
  7822  0475                     	line	236
  7823                           	line	237
  7824                           	
  7825                           l604:	
  7826  0475                     	return
  7827  0475  0008               	opt stack 0
  7828                           GLOBAL	__end_of___fladd
  7829                           	__end_of___fladd:
  7830  0476                     	signat	___fladd,8316
  7831                           	global	_I2C_Master_Write
  7832                           
  7833 ;; *************** function _I2C_Master_Write *****************
  7834 ;; Defined at:
  7835 ;;		line 65 in file "I2C.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;  d               2    0[COMMON] unsigned int 
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;		None
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  1    wreg      void 
  7842 ;; Registers used:
  7843 ;;		wreg, status,2, status,0, pclath, cstack
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7849 ;;      Params:         2       0       0       0       0
  7850 ;;      Locals:         0       0       0       0       0
  7851 ;;      Temps:          0       0       0       0       0
  7852 ;;      Totals:         2       0       0       0       0
  7853 ;;Total ram usage:        2 bytes
  7854 ;; Hardware stack levels used:    1
  7855 ;; Hardware stack levels required when called:    1
  7856 ;; This function calls:
  7857 ;;		_I2C_Master_Wait
  7858 ;; This function is called by:
  7859 ;;		_main
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  7863                           	file	"I2C.c"
  7864                           	line	65
  7865                           global __ptext21
  7866                           __ptext21:	;psect for function _I2C_Master_Write
  7867  0AA6                     psect	text21
  7868                           	file	"I2C.c"
  7869                           	line	65
  7870                           	global	__size_of_I2C_Master_Write
  7871                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
  7872  000A                     	
  7873                           _I2C_Master_Write:	
  7874  0AA6                     ;incstack = 0
  7875                           	opt	stack 6
  7876                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  7877                           	line	67
  7878                           	
  7879                           l1805:	
  7880  0AA6                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
  7881                           	fcall	_I2C_Master_Wait
  7882  0AA6  120A  158A  22B0  120A  158A  	line	68
  7883                           	
  7884                           l1807:	
  7885  0AAB                     ;I2C.c: 68:     SSPBUF = d;
  7886                           	movf	(I2C_Master_Write@d),w
  7887  0AAB  0870               	bcf	status, 5	;RP0=0, select bank0
  7888  0AAC  1283               	bcf	status, 6	;RP1=0, select bank0
  7889  0AAD  1303               	movwf	(19)	;volatile
  7890  0AAE  0093               	line	69
  7891                           	
  7892                           l47:	
  7893  0AAF                     	return
  7894  0AAF  0008               	opt stack 0
  7895                           GLOBAL	__end_of_I2C_Master_Write
  7896                           	__end_of_I2C_Master_Write:
  7897  0AB0                     	signat	_I2C_Master_Write,4217
  7898                           	global	_I2C_Master_Stop
  7899                           
  7900 ;; *************** function _I2C_Master_Stop *****************
  7901 ;; Defined at:
  7902 ;;		line 55 in file "I2C.c"
  7903 ;; Parameters:    Size  Location     Type
  7904 ;;		None
  7905 ;; Auto vars:     Size  Location     Type
  7906 ;;		None
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  1    wreg      void 
  7909 ;; Registers used:
  7910 ;;		wreg, status,2, status,0, pclath, cstack
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7916 ;;      Params:         0       0       0       0       0
  7917 ;;      Locals:         0       0       0       0       0
  7918 ;;      Temps:          0       0       0       0       0
  7919 ;;      Totals:         0       0       0       0       0
  7920 ;;Total ram usage:        0 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; Hardware stack levels required when called:    1
  7923 ;; This function calls:
  7924 ;;		_I2C_Master_Wait
  7925 ;; This function is called by:
  7926 ;;		_main
  7927 ;; This function uses a non-reentrant model
  7928 ;;
  7929                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  7930                           	line	55
  7931                           global __ptext22
  7932                           __ptext22:	;psect for function _I2C_Master_Stop
  7933  0A9D                     psect	text22
  7934                           	file	"I2C.c"
  7935                           	line	55
  7936                           	global	__size_of_I2C_Master_Stop
  7937                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
  7938  0009                     	
  7939                           _I2C_Master_Stop:	
  7940  0A9D                     ;incstack = 0
  7941                           	opt	stack 6
  7942                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  7943                           	line	57
  7944                           	
  7945                           l1801:	
  7946  0A9D                     ;I2C.c: 57:     I2C_Master_Wait();
  7947                           	fcall	_I2C_Master_Wait
  7948  0A9D  120A  158A  22B0  120A  158A  	line	58
  7949                           	
  7950                           l1803:	
  7951  0AA2                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  7952                           	bsf	status, 5	;RP0=1, select bank1
  7953  0AA2  1683               	bcf	status, 6	;RP1=0, select bank1
  7954  0AA3  1303               	bsf	(145)^080h,2	;volatile
  7955  0AA4  1511               	line	59
  7956                           	
  7957                           l44:	
  7958  0AA5                     	return
  7959  0AA5  0008               	opt stack 0
  7960                           GLOBAL	__end_of_I2C_Master_Stop
  7961                           	__end_of_I2C_Master_Stop:
  7962  0AA6                     	signat	_I2C_Master_Stop,89
  7963                           	global	_I2C_Master_Start
  7964                           
  7965 ;; *************** function _I2C_Master_Start *****************
  7966 ;; Defined at:
  7967 ;;		line 39 in file "I2C.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;		None
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;		None
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  1    wreg      void 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0, pclath, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7981 ;;      Params:         0       0       0       0       0
  7982 ;;      Locals:         0       0       0       0       0
  7983 ;;      Temps:          0       0       0       0       0
  7984 ;;      Totals:         0       0       0       0       0
  7985 ;;Total ram usage:        0 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    1
  7988 ;; This function calls:
  7989 ;;		_I2C_Master_Wait
  7990 ;; This function is called by:
  7991 ;;		_main
  7992 ;; This function uses a non-reentrant model
  7993 ;;
  7994                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  7995                           	line	39
  7996                           global __ptext23
  7997                           __ptext23:	;psect for function _I2C_Master_Start
  7998  0A94                     psect	text23
  7999                           	file	"I2C.c"
  8000                           	line	39
  8001                           	global	__size_of_I2C_Master_Start
  8002                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
  8003  0009                     	
  8004                           _I2C_Master_Start:	
  8005  0A94                     ;incstack = 0
  8006                           	opt	stack 6
  8007                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8008                           	line	41
  8009                           	
  8010                           l1797:	
  8011  0A94                     ;I2C.c: 41:     I2C_Master_Wait();
  8012                           	fcall	_I2C_Master_Wait
  8013  0A94  120A  158A  22B0  120A  158A  	line	42
  8014                           	
  8015                           l1799:	
  8016  0A99                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  8017                           	bsf	status, 5	;RP0=1, select bank1
  8018  0A99  1683               	bcf	status, 6	;RP1=0, select bank1
  8019  0A9A  1303               	bsf	(145)^080h,0	;volatile
  8020  0A9B  1411               	line	43
  8021                           	
  8022                           l38:	
  8023  0A9C                     	return
  8024  0A9C  0008               	opt stack 0
  8025                           GLOBAL	__end_of_I2C_Master_Start
  8026                           	__end_of_I2C_Master_Start:
  8027  0A9D                     	signat	_I2C_Master_Start,89
  8028                           	global	_I2C_Master_Read
  8029                           
  8030 ;; *************** function _I2C_Master_Read *****************
  8031 ;; Defined at:
  8032 ;;		line 74 in file "I2C.c"
  8033 ;; Parameters:    Size  Location     Type
  8034 ;;  a               2    0[COMMON] unsigned short 
  8035 ;; Auto vars:     Size  Location     Type
  8036 ;;  temp            2    4[COMMON] unsigned short 
  8037 ;; Return value:  Size  Location     Type
  8038 ;;                  2    0[COMMON] unsigned short 
  8039 ;; Registers used:
  8040 ;;		wreg, status,2, status,0, pclath, cstack
  8041 ;; Tracked objects:
  8042 ;;		On entry : 0/0
  8043 ;;		On exit  : 0/0
  8044 ;;		Unchanged: 0/0
  8045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8046 ;;      Params:         2       0       0       0       0
  8047 ;;      Locals:         2       0       0       0       0
  8048 ;;      Temps:          2       0       0       0       0
  8049 ;;      Totals:         6       0       0       0       0
  8050 ;;Total ram usage:        6 bytes
  8051 ;; Hardware stack levels used:    1
  8052 ;; Hardware stack levels required when called:    1
  8053 ;; This function calls:
  8054 ;;		_I2C_Master_Wait
  8055 ;; This function is called by:
  8056 ;;		_main
  8057 ;; This function uses a non-reentrant model
  8058 ;;
  8059                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8060                           	line	74
  8061                           global __ptext24
  8062                           __ptext24:	;psect for function _I2C_Master_Read
  8063  0B56                     psect	text24
  8064                           	file	"I2C.c"
  8065                           	line	74
  8066                           	global	__size_of_I2C_Master_Read
  8067                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  8068  002F                     	
  8069                           _I2C_Master_Read:	
  8070  0B56                     ;incstack = 0
  8071                           	opt	stack 6
  8072                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8073                           	line	77
  8074                           	
  8075                           l1809:	
  8076  0B56                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  8077                           	fcall	_I2C_Master_Wait
  8078  0B56  120A  158A  22B0  120A  158A  	line	78
  8079                           	
  8080                           l1811:	
  8081  0B5B                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  8082                           	bsf	status, 5	;RP0=1, select bank1
  8083  0B5B  1683               	bcf	status, 6	;RP1=0, select bank1
  8084  0B5C  1303               	bsf	(145)^080h,3	;volatile
  8085  0B5D  1591               	line	79
  8086                           ;I2C.c: 79:     I2C_Master_Wait();
  8087                           	fcall	_I2C_Master_Wait
  8088  0B5E  120A  158A  22B0  120A  158A  	line	80
  8089                           	
  8090                           l1813:	
  8091  0B63                     ;I2C.c: 80:     temp = SSPBUF;
  8092                           	bcf	status, 5	;RP0=0, select bank0
  8093  0B63  1283               	bcf	status, 6	;RP1=0, select bank0
  8094  0B64  1303               	movf	(19),w	;volatile
  8095  0B65  0813               	movwf	(??_I2C_Master_Read+0)+0
  8096  0B66  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  8097  0B67  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  8098  0B68  0872               	movwf	(I2C_Master_Read@temp)
  8099  0B69  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  8100  0B6A  0873               	movwf	(I2C_Master_Read@temp+1)
  8101  0B6B  00F5               	line	81
  8102                           	
  8103                           l1815:	
  8104  0B6C                     ;I2C.c: 81:     I2C_Master_Wait();
  8105                           	fcall	_I2C_Master_Wait
  8106  0B6C  120A  158A  22B0  120A  158A  	line	82
  8107                           	
  8108                           l1817:	
  8109  0B71                     ;I2C.c: 82:     if(a == 1){
  8110                           		decf	((I2C_Master_Read@a)),w
  8111  0B71  0370               iorwf	((I2C_Master_Read@a+1)),w
  8112  0B72  0471               	btfss	status,2
  8113  0B73  1D03               	goto	u1901
  8114  0B74  2B76               	goto	u1900
  8115  0B75  2B77               u1901:
  8116  0B76                     	goto	l50
  8117  0B76  2B7B               u1900:
  8118  0B77                     	line	83
  8119                           	
  8120                           l1819:	
  8121  0B77                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  8122                           	bsf	status, 5	;RP0=1, select bank1
  8123  0B77  1683               	bcf	status, 6	;RP1=0, select bank1
  8124  0B78  1303               	bcf	(145)^080h,5	;volatile
  8125  0B79  1291               	line	84
  8126                           ;I2C.c: 84:     }else{
  8127                           	goto	l51
  8128  0B7A  2B7E               	
  8129                           l50:	
  8130  0B7B                     	line	85
  8131                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  8132                           	bsf	status, 5	;RP0=1, select bank1
  8133  0B7B  1683               	bcf	status, 6	;RP1=0, select bank1
  8134  0B7C  1303               	bsf	(145)^080h,5	;volatile
  8135  0B7D  1691               	line	86
  8136                           ;I2C.c: 86:     }
  8137                           	
  8138                           l51:	
  8139  0B7E                     	line	87
  8140                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  8141                           	bsf	(145)^080h,4	;volatile
  8142  0B7E  1611               	line	88
  8143                           	
  8144                           l1821:	
  8145  0B7F                     ;I2C.c: 88:     return temp;
  8146                           	movf	(I2C_Master_Read@temp+1),w
  8147  0B7F  0875               	movwf	(?_I2C_Master_Read+1)
  8148  0B80  00F1               	movf	(I2C_Master_Read@temp),w
  8149  0B81  0874               	movwf	(?_I2C_Master_Read)
  8150  0B82  00F0               	goto	l52
  8151  0B83  2B84               	
  8152                           l1823:	
  8153  0B84                     	line	89
  8154                           	
  8155                           l52:	
  8156  0B84                     	return
  8157  0B84  0008               	opt stack 0
  8158                           GLOBAL	__end_of_I2C_Master_Read
  8159                           	__end_of_I2C_Master_Read:
  8160  0B85                     	signat	_I2C_Master_Read,4218
  8161                           	global	_I2C_Master_Wait
  8162                           
  8163 ;; *************** function _I2C_Master_Wait *****************
  8164 ;; Defined at:
  8165 ;;		line 32 in file "I2C.c"
  8166 ;; Parameters:    Size  Location     Type
  8167 ;;		None
  8168 ;; Auto vars:     Size  Location     Type
  8169 ;;		None
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  1    wreg      void 
  8172 ;; Registers used:
  8173 ;;		wreg, status,2
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8179 ;;      Params:         0       0       0       0       0
  8180 ;;      Locals:         0       0       0       0       0
  8181 ;;      Temps:          0       0       0       0       0
  8182 ;;      Totals:         0       0       0       0       0
  8183 ;;Total ram usage:        0 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; This function calls:
  8186 ;;		Nothing
  8187 ;; This function is called by:
  8188 ;;		_I2C_Master_Start
  8189 ;;		_I2C_Master_Stop
  8190 ;;		_I2C_Master_Write
  8191 ;;		_I2C_Master_Read
  8192 ;;		_I2C_Master_RepeatedStart
  8193 ;; This function uses a non-reentrant model
  8194 ;;
  8195                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  8196                           	line	32
  8197                           global __ptext25
  8198                           __ptext25:	;psect for function _I2C_Master_Wait
  8199  0AB0                     psect	text25
  8200                           	file	"I2C.c"
  8201                           	line	32
  8202                           	global	__size_of_I2C_Master_Wait
  8203                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
  8204  000F                     	
  8205                           _I2C_Master_Wait:	
  8206  0AB0                     ;incstack = 0
  8207                           	opt	stack 6
  8208                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8209                           	line	34
  8210                           	
  8211                           l1749:	
  8212  0AB0                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8213                           	goto	l32
  8214  0AB0  2AB1               	
  8215                           l33:	
  8216  0AB1                     	
  8217                           l32:	
  8218  0AB1                     	bsf	status, 5	;RP0=1, select bank1
  8219  0AB1  1683               	bcf	status, 6	;RP1=0, select bank1
  8220  0AB2  1303               	btfsc	(148)^080h,(2)&7	;volatile
  8221  0AB3  1914               	goto	u1841
  8222  0AB4  2AB6               	goto	u1840
  8223  0AB5  2AB7               u1841:
  8224  0AB6                     	goto	l32
  8225  0AB6  2AB1               u1840:
  8226  0AB7                     	
  8227                           l1751:	
  8228  0AB7                     	movf	(145)^080h,w	;volatile
  8229  0AB7  0811               	andlw	01Fh
  8230  0AB8  391F               	btfss	status,2
  8231  0AB9  1D03               	goto	u1851
  8232  0ABA  2ABC               	goto	u1850
  8233  0ABB  2ABD               u1851:
  8234  0ABC                     	goto	l32
  8235  0ABC  2AB1               u1850:
  8236  0ABD                     	goto	l35
  8237  0ABD  2ABE               	
  8238                           l34:	
  8239  0ABE                     	line	35
  8240                           	
  8241                           l35:	
  8242  0ABE                     	return
  8243  0ABE  0008               	opt stack 0
  8244                           GLOBAL	__end_of_I2C_Master_Wait
  8245                           	__end_of_I2C_Master_Wait:
  8246  0ABF                     	signat	_I2C_Master_Wait,89
  8247                           global	___latbits
  8248                           ___latbits	equ	2
  8249  0002                     	global	btemp
  8250                           	btemp set 07Eh
  8251  007E                     
  8252                           	DABS	1,126,2	;btemp
  8253                           	global	wtemp0
  8254                           	wtemp0 set btemp+0
  8255  007E                     	end


Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      79
    BANK1            80      0       8
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
		 -> STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), 
		 -> STR_2(CODE[3]), writeIntLCD@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _main->___flmul
    _writeFloat->_writeIntLCD
    _writeIntLCD->_sprintf
    _setup->_I2C_Master_Init
    ___flmul->___fladd
    ___fladd->___flneg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14116
                                             54 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                         _writeFloat
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeFloat                                           4     2      2    3001
                                             21 BANK0      4     2      2
                       _setCursorLCD
                       _writeCharLCD
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    1855
                                             13 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    1796
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                       _setCursorLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2     568
                                              2 COMMON     7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1     772
                                              3 COMMON     3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             28 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                              4 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _setCursorLCD
       _cmdLCD
     _writeStrLCD
       _writeCharLCD
   _writeCharLCD
   _writeFloat
     _setCursorLCD
       _cmdLCD
     _writeCharLCD
     _writeIntLCD
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _writeStrLCD
         _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      65       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       8       7       10.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      65      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Mar 06 09:02:42 2020

                        pc 0002                __CFG_CP$OFF 0000            writeStrLCD@cont 0077  
                       l32 0AB1                         l33 0AB1                         l34 0ABE  
                       l50 0B7B                         l35 0ABE                         l51 0B7E  
                       l52 0B84                         l44 0AA5                         l29 0BBC  
                       l38 0A9C                         l47 0AAF                         l74 0AFF  
                       l82 0C5E                         l91 0BF6                         l75 0B07  
                       l83 0C3B                         l76 0B0D                         l84 0C7B  
                       l85 0C7B                         l94 0AF0                         l79 0009  
                       l88 0ADC                         l97 0B2B                         _s3 0066  
                       fsr 0004        __Umul8_16@word_mpld 0076                        l100 0D56  
                      l101 0D61                        l102 0D8E                        l103 0DA3  
                      l330 0CED                        l331 0CEE                        l332 0D19  
                      l180 01B7                        l333 0D29                        l181 01B7  
                      l334 0D33                        l327 0D2A                        l600 02BF  
                      l328 0CE8                        l184 0068                        l280 0FFA  
                      l176 006F                        l601 02D6                        l329 0CDA  
                      l281 0F1D                        l177 0092                        l610 03A5  
                      l602 0329                        l290 0FDB                        l282 0F1E  
                      l178 00A1                        l611 03A4                        l603 02E9  
                      l275 0FE6                        l291 0FA1                        l283 0F3E  
                      l179 01B6                        l620 03F1                        l612 03B3  
                      l604 0475                        l700 07C1                        l292 0FE5  
                      l284 0F1F                        l276 0F08                        l621 0409  
                      l613 03CA                        l605 0328                        l701 07DD  
                      l293 0FF9                        l285 0F58                        l277 0F1A  
                      l630 044F                        l622 0400                        l614 03EC  
                      l606 0311                        l702 07D5                        l710 0E77  
                      l294 0FFF                        l286 0F62                        l278 0F21  
                      l631 045E                        l623 0408                        l615 03CB  
                      l607 0314                        l711 0E8C                        l287 0F8A  
                      l279 0F1C                        l632 0465                        l624 0407  
                      l616 03D9                        l608 031A                        l480 0ACD  
                      l720 0ED3                        l712 0EA8                        l288 0F7F  
                      l633 0469                        l625 0444                        l609 03F2  
                      l617 03E0                        l721 0EF6                        l713 0E8D  
                      l705 0E58                        l289 0F9C                        l634 0475  
                      l626 0444                        l618 03E3                        l490 0E1A  
                      l714 0EAF                        l706 0E60                        l570 0CC6  
                      l627 0443                        l619 03EB                        l491 0E26  
                      l483 0DC1                        l715 0EBC                        l707 0E72  
                      l563 0CC1                        l628 045F                        l724 0B37  
                      l492 0E1B                        l484 0E3D                        l716 0EB0  
                      l708 0EFF                        l564 0C93                        l580 0C37  
                      l725 0B41                        l493 0E2C                        l485 0E0A  
                      l709 0E85                        l565 0C87                        l573 0C32  
                      l590 0218                        l726 0B50                        l494 0E3D  
                      l486 0DF6                        l718 0EC7                        l566 0C98  
                      l574 0C0C                        l591 0223                        l583 01CD  
                      l727 0B55                        l479 0ACC                        l487 0DF7  
                      l719 0EC7                        l567 0C99                        l575 0C00  
                      l592 026F                        l584 01E3                        l680 04B8  
                      l488 0E09                        l568 0CB2                        l576 0C11  
                      l593 0232                        l585 01E0                        l681 04CD  
                      l489 0E2D                        l569 0CC0                        l577 0C12  
                      l594 02A8                        l586 01EC                        l690 071C  
                      l682 04CB                        l578 0C23                        l595 02D6  
                      l587 01F9                        l691 0731                        l683 04D6  
                      l579 0C31                        l596 02CD                        l588 0205  
                      l692 0756                        l684 04EB                        l676 0489  
                      l597 02A9                        l589 021B                        l693 074D  
                      l677 049E                        l598 02B6                        l694 0755  
                      l686 04E1                        l678 049C                        l599 02B9  
                      l695 0754                        l687 07EA                        l679 04A7  
                      l696 078E                        l688 072C                        l697 078D  
                      l689 070D                        l698 07A6                        l699 07DD  
                      _GIE 005F                        _RD0 0040                        _RD1 0041  
             __CFG_CPD$OFF 0000                        _adc 006D                        _lux 00A0  
                      fsr0 0004                        indf 0000               ___flmul@aexp 004E  
             ___flmul@bexp 004F               ___flmul@sign 0049               ___flmul@temp 0054  
             ___flmul@prod 0050               __CFG_LVP$OFF 0000               ___fltol@exp1 007A  
                     l2001 02B6                       l2003 02B9                       l2011 02CD  
                     l2101 0463                       l2021 0300                       l2013 02DA  
                     l2005 02BD                       l2103 0465                       l2031 0318  
                     l2023 0304                       l2015 02DF                       l2007 02BF  
                     l2111 047D                       l2105 0470                       l2041 038E  
                     l2033 031A                       l2025 0308                       l2017 02E8  
                     l2009 02C8                       l2201 071C                       l2121 0493  
                     l2113 0483                       l2107 0474                       l2051 03C0  
                     l2043 0390                       l2035 0323                       l2027 0311  
                     l2019 02E9                       l2211 0736                       l2203 0725  
                     l2131 04B2                       l2123 049C                       l2115 0487  
                     l2061 03DD                       l2053 03C9                       l2045 0395  
                     l2029 0314                       l2037 0329                       l2221 0769  
                     l2213 074A                       l2205 072C                       l2141 04CB  
                     l2133 04B6                       l2125 049E                       l2117 0489  
                     l2109 0476                       l2301 0074                       l2063 03E0  
                     l2055 03CB                       l2039 033F                       l2047 03A5  
                     l2071 03F2                       l2231 07A6                       l2223 076D  
                     l2215 0751                       l2207 0731                       l2151 04EA  
                     l2143 04CD                       l2135 04B8                       l2127 04A7  
                     l2119 048E                       l2311 00A5                       l2303 007D  
                     l2081 0409                       l2073 03F3                       l2065 03E3  
                     l2057 03D4                       l2049 03BB                       l2241 07D3  
                     l2233 07B5                       l2225 0786                       l2217 0756  
                     l2209 0732                       l2161 0541                       l2153 04EB  
                     l2145 04D6                       l2137 04BD                       l2129 04AC  
                     l1601 0CAA                       l2321 00D1                       l2313 00AA  
                     l2305 0083                       l2091 0449                       l2083 040E  
                     l2075 03F7                       l2067 03E8                       l2059 03D8  
                     l2243 07D5                       l2235 07BF                       l2219 075B  
                     l2227 078E                       l2171 05BE                       l2163 056D  
                     l2155 04FB                       l2147 04DB                       l2139 04C2  
                     l2251 0E44                       l1611 0CC6                       l1603 0CB0  
                     l2331 0192                       l2323 0106                       l2315 00B4  
                     l2307 0092                       l2093 044F                       l2085 041C  
                     l2077 03FD                       l2069 03EC                       l2245 07E1  
                     l2237 07C1                       l2229 079B                       l2181 063E  
                     l2173 05DB                       l2165 0589                       l2157 0508  
                     l2149 04E1                       l2261 0E72                       l2253 0E48  
                     l1605 0CB2                       l1621 0C0C                       l1613 0BF7  
                     l1701 0FDB                       l2333 019E                       l2325 0119  
                     l2317 00C0                       l2309 00A1                       l2095 0457  
                     l2087 0420                       l2079 0404                       l2247 07EA  
                     l2239 07CF                       l2191 06F6                       l2183 066B  
                     l2175 05EB                       l2167 05A5                       l2159 0525  
                     l2271 0E9F                       l2263 0E77                       l2255 0E58  
                     l1607 0CB9                       l1623 0C12                       l1615 0BFD  
                     l1631 0C32                       l1703 0FE6                       l2335 01A6  
                     l2327 0173                       l2319 00C8                       l1801 0A9D  
                     l2097 045C                       l2089 043E                       l2193 06FF  
                     l2185 067B                       l2177 0608                       l2169 05AE  
                     l2281 0ED5                       l2273 0EB0                       l2265 0E85  
                     l2257 0E68                       l2249 0E3F                       l1721 0CEE  
                     l1713 0CC7                       l1641 0AED                       l1609 0CC1  
                     l1633 0C37                       l1625 0C1C                       l1617 0C00  
                     l1705 0FFA                       l2337 01AC                       l2329 0186  
                     l1811 0B5B                       l1803 0AA2                       l2099 045F  
                     l2195 070D                       l2187 06A8                       l2179 0621  
                     l2291 0EFF                       l2283 0EEB                       l2275 0EBC  
                     l2267 0E8D                       l2259 0E71                       l1731 0D22  
                     l1723 0CF7                       l1715 0CD7                       l1635 0ADE  
                     l1643 0C38                       l1627 0C23                       l1619 0C07  
                     l1707 0FFF                       l1651 0F03                       l1821 0B7F  
                     l1813 0B63                       l1805 0AA6                       l2197 0716  
                     l2189 06CE                       l1901 0DF7                       l2285 0EF0  
                     l2277 0EC0                       l2269 0E91                       l1725 0D09  
                     l1717 0CDA                       l1733 0D2A                       l1741 0B8C  
                     l1637 0AE1                       l1581 0AD2                       l1645 0C3B  
                     l1629 0C2A                       l1661 0F20                       l1653 0F08  
                     l1751 0AB7                       l1823 0B84                       l1815 0B6C  
                     l1807 0AAB                       l2199 071A                       l1911 0E2D  
                     l1903 0E0A                       l2287 0EF4                       l2279 0ECB  
                     l1735 0D33                       l1727 0D17                       l1719 0CE8  
                     l1743 0BB9                       l1639 0AE3                       l1583 0AD4  
                     l1647 0C57                       l1591 0C84                       l1671 0F4E  
                     l2359 0F33                       l1663 0F21                       l1655 0F0E  
                     l1831 0D51                       l1817 0B71                       l1809 0B56  
                     l1921 01CB                       l1913 0E32                       l1905 0E10  
                     l2289 0EF6                       l1729 0D19                       l1745 0BBA  
                     l1737 0B85                       l1761 0003                       l1753 0AF2  
                     l1585 0AD9                       l1649 0C5E                       l1593 0C87  
                     l1681 0F62                       l1673 0F52                       l1665 0F3E  
                     l1657 0F15                       l1841 0D72                       l1833 0D56  
                     l1825 0D37                       l2297 0069                       l1819 0B77  
                     l1931 01E1                       l1923 01CD                       l1915 01BA  
                     l1907 0E19                       l1747 0BBB                       l1739 0B89  
                     l1771 0BD8                       l1763 0BBD                       l1755 0AF7  
                     l1579 0ACF                       l1851 000A                       l1595 0C8E  
                     l1587 0C7C                       l1691 0F97                       l1683 0F7E  
                     l1675 0F58                       l1667 0F46                       l1659 0F1A  
                     l1843 0D7F                       l1835 0D5C                       l1827 0D41  
                     l2299 006F                       l1749 0AB0                       l1941 01F9  
                     l1925 01D2                       l1933 01E3                       l1917 01C1  
                     l1909 0E1B                       l1773 0BDE                       l1765 0BC6  
                     l1757 0AFF                       l1861 0035                       l1853 0016  
                     l1597 0C93                       l1589 0C7E                       l1693 0F9C  
                     l1685 0F7F                       l1677 0F5A                       l1669 0F4A  
                     l1781 0B11                       l1845 0D87                       l1837 0D61  
                     l1829 0D49                       l1951 020F                       l1943 01FF  
                     l1935 01EC                       l1927 01D7                       l1919 01C7  
                     l1791 0B4A                       l1783 0B2D                       l1871 0ABF  
                     l1775 0BE4                       l1767 0BCC                       l1759 0B07  
                     l1863 003E                       l1855 0023                       l1599 0C99  
                     l1695 0FA1                       l1679 0F61                       l1687 0F8A  
                     l1847 0D8E                       l1839 0D6C                       l1961 022D  
                     l1953 0218                       l1945 0203                       l1937 01F1  
                     l1929 01E0                       l1793 0B50                       l1785 0B2F  
                     l1873 0AC9                       l1881 0DB7                       l1777 0BEA  
                     l1769 0BD2                       l1865 004A                       l1857 0028  
                     l1697 0FCF                       l1689 0F90                       l1849 0D96  
                     l1971 0242                       l1963 0232                       l1955 0219  
                     l1947 0205                       l1939 01F7                       l1795 0B55  
                     l1787 0B37                       l1875 0ACC                       l1891 0DDF  
                     l1883 0DC0                       l1779 0BF0                       l1867 0053  
                     l1859 002D                       l1699 0FD6                       l1797 0A94  
                     l1981 0256                       l1973 0246                       l1965 0236  
                     l1949 020A                       l1957 021B                       l1789 0B3B  
                     l1877 0ACD                       l1893 0DE1                       l1885 0DC1  
                     l1869 005F                       l1799 0A99                       l1991 026A  
                     l1983 025A                       l1975 024A                       l1967 023A  
                     l1959 0229                       l1895 0DE5                       l1887 0DD6  
                     l1879 0DA4                       l1985 025E                       l1977 024E  
                     l1969 023E                       l1993 026F                       l1897 0DEC  
                     l1889 0DD7                       l1995 0270                       l1987 0262  
                     l1979 0252                       l1899 0DF5                       l1997 028C  
                     l1989 0266                       l1999 02AD                       STR_1 0826  
                     STR_2 081A                       STR_3 081A                       STR_4 081D  
                     STR_5 0820                       STR_6 0823                       u2000 0E08  
                     u2001 0E07                       u2010 0E10                       u2011 0E0F  
                     u2100 020A                       u2101 0209                       u2110 020F  
                     u2030 0E2B                       u2111 020E                       u2031 0E2A  
                     u2200 02D5                       u2120 0229                       u2040 0E32  
                     u3000 0EF0                       u2201 02D4                       u2121 0228  
                     u2041 0E31                       u2025 0E1D                       u3001 0EEF  
                     u2210 02DA                       u2130 022D                       u2050 01CB  
                     u3010 0EF4                       u2211 02D9                       u2131 022C  
                     u2051 01CA                       u3011 0EF3                       u2300 0377  
                     u2220 02DF                       u2140 028C                       u2060 01D2  
                     u3020 0083                       u2301 0378                       u2221 02DE  
                     u2141 028B                       u2061 01D1                       u3021 0082  
                     u2310 0395                       u2302 037D                       u2150 0297  
                     u2070 01D7                       u2311 0394                       u2303 037E  
                     u2231 02F2                       u2151 0295                       u2071 01D6  
                     u2400 03FD                       u2320 03BB                       u2240 0304  
                     u2232 02F9                       u2160 0298                       u2080 01F7  
                     u1520 0C84                       u2401 03FC                       u2321 03BA  
                     u2241 0303                       u2233 0300                       u2145 0288  
                     u2081 01F6                       u1521 0C83                       u2410 0404  
                     u2330 03C0                       u2250 0308                       u2170 02AD  
                     u2090 0203                       u1610 0C10                       u2411 0403  
                     u2331 03BF                       u2251 0307                       u2171 02AC  
                     u2091 0202                       u1611 0C0F                       u2500 0474  
                     u2420 040E                       u2260 0318                       u2180 02BD  
                     u1540 0C97                       u1620 0C1C                       u1700 0F60  
                     u2501 0473                       u2421 040D                       u2261 0317  
                     u2181 02BC                       u1541 0C96                       u1621 0C1B  
                     u1605 0C01                       u1701 0F5F                       u3037 00B0  
                     u2430 0420                       u2350 03D8                       u2510 0487  
                     u1710 0F7D                       u2431 041F                       u2351 03D7  
                     u2511 0486                       u3047 0AD7                       u1535 0C88  
                     u1711 0F7C                       u2440 042F                       u2360 03DD  
                     u2280 033F                       u2520 048E                       u1800 0D09  
                     u1560 0CAA                       u1640 0C30                       u1720 0F89  
                     u2361 03DC                       u2345 03CD                       u2281 033E  
                     u2601 054F                       u2521 048D                       u1801 0D08  
                     u3057 0BC1                       u1561 0CA9                       u1641 0C2F  
                     u1625 0C18                       u1721 0F88                       u2450 043E  
                     u2370 03E8                       u2290 0365                       u2602 0556  
                     u2530 0493                       u1650 0C45                       u1730 0F90  
                     u2451 043D                       u2371 03E7                       u2291 0366  
                     u2283 033B                       u2275 031C                       u2195 02C1  
                     u2611 057B                       u2603 055D                       u2531 0492  
                     u3067 0AE8                       u1555 0C9A                       u1635 0C24  
                     u1731 0F8F                       u1715 0F79                       u1900 0B77  
                     u2460 0449                       u2380 03F0                       u2292 036B  
                     u2700 06B4                       u2612 0582                       u2540 04B6  
                     u1820 0D28                       u1660 0C68                       u1580 0CBF  
                     u1740 0FE4                       u1901 0B76                       u2461 0448  
                     u2445 042A                       u2381 03EF                       u2293 036C  
                     u2621 0597                       u2613 0589                       u2541 04B5  
                     u1821 0D27                       u1805 0D05                       u1581 0CBE  
                     u1565 0CA6                       u1741 0FE3                       u2470 044E  
                     u2390 03F7                       u2622 059E                       u2550 04BD  
                     u1830 0B9C                       u1670 0C7A                       u1590 0BFD  
                     u1750 0FF8                       u1910 0D51                       u2471 044D  
                     u2391 03F6                       u2711 06C0                       u2623 05A5  
                     u2551 04BC                       u1815 0D1A                       u1671 0C79  
                     u1575 0CB3                       u1591 0BFC                       u1751 0FF7  
                     u1911 0D50                       u1840 0AB7                       u2480 045C  
                     u2800 074A                       u2720 06DC                       u2712 06C7  
                     u2560 04C2                       u1760 0CD7                       u1680 0F0E  
                     u1920 0D5C                       u1841 0AB6                       u2481 045B  
                     u2801 0749                       u2713 06CE                       u2705 06AF  
                     u2641 05CD                       u2561 04C1                       u1761 0CD6  
                     u1681 0F0D                       u1921 0D5B                       u1850 0ABD  
                     u2490 0463                       u2810 0751                       u2642 05D4  
                     u2570 04DB                       u1690 0F4E                       u1930 0D87  
                     u1851 0ABC                       u2491 0462                       u2811 0750  
                     u2731 06E8                       u2651 05FA                       u2643 05DB  
                     u2635 05A7                       u2571 04DA                       u1835 0B97  
                     u1691 0F4D                       u1931 0D86                       u2820 075B  
                     u2732 06EF                       u2652 0601                       u2580 04E0  
                     u1940 0AC9                       u2900 0E68                       u1780 0CEC  
                     u1860 0AF7                       u2821 075A                       u2733 06F6  
                     u2725 06D7                       u2653 0608                       u2581 04DF  
                     u1941 0AC8                       u2901 0E67                       u1781 0CEB  
                     u1861 0AF6                       u1870 0B3B                       u2830 076D  
                     u1950 0DB7                       u1871 0B3A                       u2831 076C  
                     u2671 0630                       u2591 0533                       u1951 0DB6  
                     u1775 0CDC                       u2840 077C                       u2760 071A  
                     u2672 0637                       u2592 053A                       u1960 0DCF  
                     u2920 0E8B                       u2761 0719                       u2745 06F8  
                     u2681 065D                       u2673 063E                       u2665 060A  
                     u2593 0541                       u2921 0E8A                       u1890 0B4F  
                     u2850 079B                       u2682 0664                       u1970 0DE5  
                     u1891 0B4E                       u2851 079A                       u2755 070F  
                     u2691 068A                       u2683 066B                       u1971 0DE4  
                     u2915 0E7C                       u1795 0CF0                       _PEIE 005E  
                     u2860 07B5                       u2780 0730                       u2692 0691  
                     u1980 0DEC                       u2940 0EAE                       u1885 0B42  
                     u2861 07B4                       u2845 0777                       u2781 072F  
                     u2693 0698                       u1981 0DEB                       u1965 0DCA  
                     u2941 0EAD                       u2870 07D3                       u2790 0736  
                     u2871 07D2                       u2855 0797                       u2791 0735  
                     u2775 071E                       u2935 0EA0                       u2960 0EC0  
                     u2880 0E44                       u2865 07B1                       u2961 0EBF  
                     u2881 0E43                       u2970 0EC6                       u2890 0E48  
                     u1995 0DF8                       u2971 0EC5                       u2955 0EB4  
                     u2891 0E47                       u2980 0ECB                       u2981 0ECA  
                     u2990 0EE0                       u2995 0EDB               __CFG_WRT$OFF 0000  
                     _dec1 006B                       _dec2 0068          writeStrLCD@string 0072  
                     _main 0069                       btemp 007E                       start 0000  
            __CFG_IESO$OFF 0000           ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                _writeIntLCD 0B0E  
            ___fltol@sign1 0079            __end_of___fladd 0476                      ?_main 0070  
          __end_of___flneg 0ACE              __CFG_WDTE$OFF 0000            __end_of___flmul 07EB  
          __end_of___fltol 0E3E                      _ANSEL 0188            __end_of___lldiv 0D34  
          __end_of___lwdiv 0CC7            __end_of___lwmod 0C38                _writeStrLCD 0C38  
                    _PORTB 0006                      _PORTD 0008                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
           __CFG_FCMEN$OFF 0000            __end_of_initLCD 0BF7            __end_of_dpowers 081A  
                    _setup 000A      __size_of_writeCharLCD 000F             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 1000             __CFG_MCLRE$OFF 0000            __initialization 07EB  
             __end_of_main 01BA                     ??_main 0056               _writeCharLCD 0ACE  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072                     ?_setup 0070                     _ANSELH 0189  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 0F00  
           __CFG_PWRTE$OFF 0000          writeIntLCD@buffer 0030          writeIntLCD@numero 0034  
                   _clcLCD 0003                     _cmdLCD 0ADD                  ??___fladd 002C  
                ??___flneg 007E                  ??___flmul 0044                  ??___fltol 0074  
                ??___lldiv 0078                  ??___lwdiv 0074                  ??___lwmod 007C  
                   _float1 005E                     _float2 00A4                     _cursor 006E  
                   _toggle 0067                  ??_initLCD 0073         __size_of__Umul8_16 002A  
                ??_sprintf 0023               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070    __end_of__initialization 07FC          writeFloat@decimal 0035  
               ___flneg@f1 0020                 ___fltol@f1 0070          writeFloat@initPos 0036  
        writeFloat@integer 0038             __pcstackCOMMON 0070              __end_of_setup 0069  
                  ??_setup 0028                 __pbssBANK0 005A                 __pbssBANK1 00A0  
            ?_setCursorLCD 0073          __end_of__Umul8_16 0B56                 __pmaintext 0069  
                  ?_clcLCD 0070                    ?_cmdLCD 0070               ?_writeIntLCD 0070  
             ?_writeStrLCD 0072                  ?___xxtofl 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0800             ??_setCursorLCD 0074  
                  ___fladd 01BA              setCursorLCD@x 0073              setCursorLCD@y 0075  
          __size_of_clcLCD 0007                    ___flneg 0ABF            __size_of_cmdLCD 0014  
                  ___flmul 0476                    ___fltol 0DA4                    ___lldiv 0CC7  
                  ___lwdiv 0C7C                    ___lwmod 0BF7                    __ptext1 0D34  
                  __ptext2 0B0E                    __ptext3 0F00                    __ptext4 0BF7  
                  __ptext5 0C7C                    __ptext6 000A                    __ptext7 0C38  
                  __ptext8 0ACE                    __ptext9 0AF1                    _initLCD 0BBD  
                  _entero1 006C                    _entero2 0069                    _counter 006A  
                  _dpowers 0810                 ??___xxtofl 0074   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002F   __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009  
                  _sprintf 0F00                    clrloop0 0A8D       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
              ___fladd@grs 003B              ___xxtofl@sign 0078                  _TRISCbits 0087  
              ___flmul@grs 004A                 _writeFloat 0D34             __end_of_clcLCD 000A  
           __end_of_cmdLCD 0AF1       __end_of_setCursorLCD 0B0E       __size_of_writeIntLCD 001E  
      start_initialization 07EB       __size_of_writeStrLCD 0044          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0073                   ??_cmdLCD 0070  
                __Umul8_16 0B2C                  ___fladd@a 0028                  ___fladd@b 0024  
                ___flmul@a 0040                  ___flmul@b 003C                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00C2      writeCharLCD@character 0071  
              sprintf@flag 0027                sprintf@prec 0028           _I2C_Master_Start 0A94  
         _I2C_Master_Write 0AA6           ___lwdiv@dividend 0072                  cmdLCD@cmd 0072  
                 ?___fladd 0024                   ?___flneg 0020                   ?___flmul 003C  
                 ?___fltol 0070                   ?___lldiv 0070                ?_writeFloat 0035  
               ?__Umul8_16 0070                   ?___lwdiv 0070                   ?___lwmod 0078  
                __pstrings 0800                   ?_initLCD 0070              ?_writeCharLCD 0070  
         ___lwdiv@quotient 0075                   ?_sprintf 0020             __size_of_setup 005F  
                clear_ram0 0A8C      __size_of_setCursorLCD 001D                __stringbase 080F  
           ??_writeCharLCD 0070        I2C_Master_Read@temp 0074        __size_of_writeFloat 0070  
             _setCursorLCD 0AF1                ??__Umul8_16 0072           __size_of___fladd 02BC  
         __size_of___flneg 000F           __size_of___flmul 0375           __size_of___fltol 009A  
         __size_of___lldiv 006D           __size_of___lwdiv 004B           __size_of___lwmod 0041  
       __end_of__stringtab 0810                 sprintf@val 0029            _I2C_Master_Init 0B85  
          _I2C_Master_Read 0B56           __size_of_initLCD 003A                   ___xxtofl 0E3E  
          _I2C_Master_Wait 0AB0            _I2C_Master_Stop 0A9D            ___lwdiv@divisor 0070  
          ___lwdiv@counter 0077                   __ptext10 0BBD                   __ptext11 0003  
                 __ptext20 01BA                   __ptext12 0ADD                   __ptext21 0AA6  
                 __ptext13 0B85                   __ptext22 0A9D                   __ptext14 0CC7  
                 __ptext23 0A94                   __ptext15 0E3E                   __ptext24 0B56  
                 __ptext16 0DA4                   __ptext25 0AB0                   __ptext17 0ABF  
                 __ptext18 0476                   __ptext19 0B2C          __CFG_BOR4V$BOR40V 0000  
         __size_of_sprintf 0100              __size_of_main 0151                   _sensorF1 0062  
                 _sensorF2 005A              ??_writeIntLCD 002D              ??_writeStrLCD 0074  
 __end_of_I2C_Master_Start 0A9D   __end_of_I2C_Master_Write 0AB0                  sprintf@ap 0026  
                sprintf@sp 002B           ___lwmod@dividend 007A           ___lldiv@dividend 0074  
     __end_of_writeCharLCD 0ADD                  stringcode 080A               ??_writeFloat 0037  
  __end_of_I2C_Master_Init 0BBD    __end_of_I2C_Master_Read 0B85    __end_of_I2C_Master_Wait 0ABF  
  __end_of_I2C_Master_Stop 0AA6     __Umul8_16@multiplicand 0070                   sprintf@c 002C  
                 sprintf@f 0020           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                   stringdir 080A  
                 stringtab 0800        __end_of_writeIntLCD 0B2C                _SSPCON2bits 0091  
      __end_of_writeStrLCD 0C7C              ___fladd@signs 0038         __end_of_writeFloat 0DA4  
             ___fladd@aexp 0039               ___fladd@bexp 003A       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
