

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Mar 11 11:22:38 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     	FNCALL	_main,_I2C_Master_Read
  1024                           	FNCALL	_main,_I2C_Master_Start
  1025                           	FNCALL	_main,_I2C_Master_Stop
  1026                           	FNCALL	_main,_I2C_Master_Write
  1027                           	FNCALL	_main,___awdiv
  1028                           	FNCALL	_main,___awmod
  1029                           	FNCALL	_main,___fladd
  1030                           	FNCALL	_main,___fldiv
  1031                           	FNCALL	_main,___flmul
  1032                           	FNCALL	_main,___flneg
  1033                           	FNCALL	_main,___fltol
  1034                           	FNCALL	_main,___wmul
  1035                           	FNCALL	_main,___xxtofl
  1036                           	FNCALL	_main,_setCursorLCD
  1037                           	FNCALL	_main,_setup
  1038                           	FNCALL	_main,_writeCharLCD
  1039                           	FNCALL	_main,_writeIntLCD
  1040                           	FNCALL	_main,_writeStrLCD
  1041                           	FNCALL	_writeIntLCD,_sprintf
  1042                           	FNCALL	_writeIntLCD,_writeStrLCD
  1043                           	FNCALL	_writeStrLCD,_writeCharLCD
  1044                           	FNCALL	_sprintf,___lwdiv
  1045                           	FNCALL	_sprintf,___lwmod
  1046                           	FNCALL	_setup,_I2C_Master_Init
  1047                           	FNCALL	_setup,_clcLCD
  1048                           	FNCALL	_setup,_initLCD
  1049                           	FNCALL	_setup,_initUSART
  1050                           	FNCALL	_initLCD,_cmdLCD
  1051                           	FNCALL	_clcLCD,_cmdLCD
  1052                           	FNCALL	_I2C_Master_Init,___lldiv
  1053                           	FNCALL	_setCursorLCD,_cmdLCD
  1054                           	FNCALL	___flmul,__Umul8_16
  1055                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
  1056                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
  1057                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
  1058                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
  1059                           	FNROOT	_main
  1060                           	FNCALL	_isr,_readADC
  1061                           	FNCALL	_isr,_sendUSART
  1062                           	FNCALL	intlevel1,_isr
  1063                           	global	intlevel1
  1064                           	FNROOT	intlevel1
  1065                           	global	_dpowers
  1066                           psect	strings,class=STRING,delta=2,noexec
  1067                           global __pstrings
  1068                           __pstrings:
  1069  0800                     stringtab:
  1070  0800                     	global    __stringtab
  1071                           __stringtab:
  1072  0800                     ;	String table - string pointers are 1 byte each
  1073                           	btfsc	(btemp+1),7
  1074  0800  1BFF               	ljmp	stringcode
  1075  0801  280A               	bcf	status,7
  1076  0802  1383               	btfsc	(btemp+1),0
  1077  0803  187F               	bsf	status,7
  1078  0804  1783               	movf	indf,w
  1079  0805  0800               	incf fsr
  1080  0806  0A84               skipnz
  1081  0807  1903               incf btemp+1
  1082  0808  0AFF               	return
  1083  0809  0008               stringcode:stringdir:
  1084  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
  1085  080A  3008               movwf pclath
  1086  080B  008A               movf fsr,w
  1087  080C  0804               incf fsr
  1088  080D  0A84               	addwf pc
  1089  080E  0782               	global __stringbase
  1090                           __stringbase:
  1091  080F                     	retlw	0
  1092  080F  3400               psect	strings
  1093                           	global    __end_of__stringtab
  1094                           __end_of__stringtab:
  1095  0810                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  1096                           	line	358
  1097                           _dpowers:
  1098  0810                     	retlw	01h
  1099  0810  3401               	retlw	0
  1100  0811  3400               
  1101                           	retlw	0Ah
  1102  0812  340A               	retlw	0
  1103  0813  3400               
  1104                           	retlw	064h
  1105  0814  3464               	retlw	0
  1106  0815  3400               
  1107                           	retlw	0E8h
  1108  0816  34E8               	retlw	03h
  1109  0817  3403               
  1110                           	retlw	010h
  1111  0818  3410               	retlw	027h
  1112  0819  3427               
  1113                           	global __end_of_dpowers
  1114                           __end_of_dpowers:
  1115  081A                     	global	_dpowers
  1116                           	global	_receiveUSART
  1117                           	global	_mov
  1118                           	global	_signal
  1119                           	global	_count2
  1120                           	global	_hall
  1121                           	global	_screenCounter
  1122                           	global	_count
  1123                           	global	_entero1
  1124                           	global	_sensorF2
  1125                           	global	_float1
  1126                           	global	_sensorF1
  1127                           	global	_screenState
  1128                           	global	_antibounce2
  1129                           	global	_antibounce
  1130                           	global	_garage
  1131                           	global	_ir
  1132                           	global	_count3
  1133                           	global	_toggle3
  1134                           	global	_adcP
  1135                           	global	_toggle2
  1136                           	global	_toggle
  1137                           	global	_alarm
  1138                           	global	_dec1
  1139                           	global	_adc
  1140                           	global	_adcT
  1141                           	global	_cursor
  1142                           	global	_TXREG
  1143                           _TXREG	set	0x19
  1144  0019                     	global	_RCSTAbits
  1145                           _RCSTAbits	set	0x18
  1146  0018                     	global	_INTCONbits
  1147                           _INTCONbits	set	0xB
  1148  000B                     	global	_ADRESH
  1149                           _ADRESH	set	0x1E
  1150  001E                     	global	_PORTD
  1151                           _PORTD	set	0x8
  1152  0008                     	global	_RCREG
  1153                           _RCREG	set	0x1A
  1154  001A                     	global	_PORTAbits
  1155                           _PORTAbits	set	0x5
  1156  0005                     	global	_PIR1bits
  1157                           _PIR1bits	set	0xC
  1158  000C                     	global	_ADCON0bits
  1159                           _ADCON0bits	set	0x1F
  1160  001F                     	global	_PORTB
  1161                           _PORTB	set	0x6
  1162  0006                     	global	_SSPBUF
  1163                           _SSPBUF	set	0x13
  1164  0013                     	global	_SSPCON
  1165                           _SSPCON	set	0x14
  1166  0014                     	global	_RD1
  1167                           _RD1	set	0x41
  1168  0041                     	global	_RD0
  1169                           _RD0	set	0x40
  1170  0040                     	global	_SSPIF
  1171                           _SSPIF	set	0x63
  1172  0063                     	global	_PEIE
  1173                           _PEIE	set	0x5E
  1174  005E                     	global	_GIE
  1175                           _GIE	set	0x5F
  1176  005F                     	global	_SPBRGH
  1177                           _SPBRGH	set	0x9A
  1178  009A                     	global	_SPBRG
  1179                           _SPBRG	set	0x99
  1180  0099                     	global	_TXSTAbits
  1181                           _TXSTAbits	set	0x98
  1182  0098                     	global	_ADCON1bits
  1183                           _ADCON1bits	set	0x9F
  1184  009F                     	global	_PIE1bits
  1185                           _PIE1bits	set	0x8C
  1186  008C                     	global	_TRISBbits
  1187                           _TRISBbits	set	0x86
  1188  0086                     	global	_TRISEbits
  1189                           _TRISEbits	set	0x89
  1190  0089                     	global	_TRISAbits
  1191                           _TRISAbits	set	0x85
  1192  0085                     	global	_TRISD
  1193                           _TRISD	set	0x88
  1194  0088                     	global	_TRISB
  1195                           _TRISB	set	0x86
  1196  0086                     	global	_SSPCON2bits
  1197                           _SSPCON2bits	set	0x91
  1198  0091                     	global	_TRISCbits
  1199                           _TRISCbits	set	0x87
  1200  0087                     	global	_SSPSTAT
  1201                           _SSPSTAT	set	0x94
  1202  0094                     	global	_SSPADD
  1203                           _SSPADD	set	0x93
  1204  0093                     	global	_SSPCON2
  1205                           _SSPCON2	set	0x91
  1206  0091                     	global	_SSPIE
  1207                           _SSPIE	set	0x463
  1208  0463                     	global	_TRISC4
  1209                           _TRISC4	set	0x43C
  1210  043C                     	global	_TRISC3
  1211                           _TRISC3	set	0x43B
  1212  043B                     	global	_BAUDCTLbits
  1213                           _BAUDCTLbits	set	0x187
  1214  0187                     	global	_ANSELHbits
  1215                           _ANSELHbits	set	0x189
  1216  0189                     	global	_ANSELbits
  1217                           _ANSELbits	set	0x188
  1218  0188                     	global	_ANSELH
  1219                           _ANSELH	set	0x189
  1220  0189                     	global	_ANSEL
  1221                           _ANSEL	set	0x188
  1222  0188                     	
  1223                           STR_23:	
  1224  081A                     	retlw	80	;'P'
  1225  081A  3450               	retlw	85	;'U'
  1226  081B  3455               	retlw	69	;'E'
  1227  081C  3445               	retlw	82	;'R'
  1228  081D  3452               	retlw	84	;'T'
  1229  081E  3454               	retlw	65	;'A'
  1230  081F  3441               	retlw	32	;' '
  1231  0820  3420               	retlw	67	;'C'
  1232  0821  3443               	retlw	69	;'E'
  1233  0822  3445               	retlw	82	;'R'
  1234  0823  3452               	retlw	82	;'R'
  1235  0824  3452               	retlw	65	;'A'
  1236  0825  3441               	retlw	68	;'D'
  1237  0826  3444               	retlw	65	;'A'
  1238  0827  3441               	retlw	0
  1239  0828  3400               psect	strings
  1240                           	
  1241                           STR_22:	
  1242  0829                     	retlw	80	;'P'
  1243  0829  3450               	retlw	85	;'U'
  1244  082A  3455               	retlw	69	;'E'
  1245  082B  3445               	retlw	82	;'R'
  1246  082C  3452               	retlw	84	;'T'
  1247  082D  3454               	retlw	65	;'A'
  1248  082E  3441               	retlw	32	;' '
  1249  082F  3420               	retlw	65	;'A'
  1250  0830  3441               	retlw	66	;'B'
  1251  0831  3442               	retlw	73	;'I'
  1252  0832  3449               	retlw	69	;'E'
  1253  0833  3445               	retlw	82	;'R'
  1254  0834  3452               	retlw	84	;'T'
  1255  0835  3454               	retlw	65	;'A'
  1256  0836  3441               	retlw	0
  1257  0837  3400               psect	strings
  1258                           	
  1259                           STR_12:	
  1260  0838                     	retlw	71	;'G'
  1261  0838  3447               	retlw	65	;'A'
  1262  0839  3441               	retlw	82	;'R'
  1263  083A  3452               	retlw	65	;'A'
  1264  083B  3441               	retlw	71	;'G'
  1265  083C  3447               	retlw	69	;'E'
  1266  083D  3445               	retlw	32	;' '
  1267  083E  3420               	retlw	67	;'C'
  1268  083F  3443               	retlw	69	;'E'
  1269  0840  3445               	retlw	82	;'R'
  1270  0841  3452               	retlw	82	;'R'
  1271  0842  3452               	retlw	65	;'A'
  1272  0843  3441               	retlw	68	;'D'
  1273  0844  3444               	retlw	79	;'O'
  1274  0845  344F               	retlw	0
  1275  0846  3400               psect	strings
  1276                           	
  1277                           STR_10:	
  1278  0847                     	retlw	83	;'S'
  1279  0847  3453               	retlw	73	;'I'
  1280  0848  3449               	retlw	78	;'N'
  1281  0849  344E               	retlw	32	;' '
  1282  084A  3420               	retlw	77	;'M'
  1283  084B  344D               	retlw	79	;'O'
  1284  084C  344F               	retlw	86	;'V'
  1285  084D  3456               	retlw	73	;'I'
  1286  084E  3449               	retlw	77	;'M'
  1287  084F  344D               	retlw	73	;'I'
  1288  0850  3449               	retlw	69	;'E'
  1289  0851  3445               	retlw	78	;'N'
  1290  0852  344E               	retlw	84	;'T'
  1291  0853  3454               	retlw	79	;'O'
  1292  0854  344F               	retlw	0
  1293  0855  3400               psect	strings
  1294                           	
  1295                           STR_11:	
  1296  0856                     	retlw	71	;'G'
  1297  0856  3447               	retlw	65	;'A'
  1298  0857  3441               	retlw	82	;'R'
  1299  0858  3452               	retlw	65	;'A'
  1300  0859  3441               	retlw	71	;'G'
  1301  085A  3447               	retlw	69	;'E'
  1302  085B  3445               	retlw	32	;' '
  1303  085C  3420               	retlw	65	;'A'
  1304  085D  3441               	retlw	66	;'B'
  1305  085E  3442               	retlw	73	;'I'
  1306  085F  3449               	retlw	69	;'E'
  1307  0860  3445               	retlw	82	;'R'
  1308  0861  3452               	retlw	84	;'T'
  1309  0862  3454               	retlw	79	;'O'
  1310  0863  344F               	retlw	0
  1311  0864  3400               psect	strings
  1312                           	
  1313                           STR_5:	
  1314  0865                     	retlw	32	;' '
  1315  0865  3420               	retlw	32	;' '
  1316  0866  3420               	retlw	32	;' '
  1317  0867  3420               	retlw	32	;' '
  1318  0868  3420               	retlw	32	;' '
  1319  0869  3420               	retlw	32	;' '
  1320  086A  3420               	retlw	32	;' '
  1321  086B  3420               	retlw	32	;' '
  1322  086C  3420               	retlw	32	;' '
  1323  086D  3420               	retlw	32	;' '
  1324  086E  3420               	retlw	32	;' '
  1325  086F  3420               	retlw	0
  1326  0870  3400               psect	strings
  1327                           	
  1328                           STR_21:	
  1329  0871                     	retlw	68	;'D'
  1330  0871  3444               	retlw	69	;'E'
  1331  0872  3445               	retlw	83	;'S'
  1332  0873  3453               	retlw	67	;'C'
  1333  0874  3443               	retlw	65	;'A'
  1334  0875  3441               	retlw	84	;'T'
  1335  0876  3454               	retlw	73	;'I'
  1336  0877  3449               	retlw	86	;'V'
  1337  0878  3456               	retlw	65	;'A'
  1338  0879  3441               	retlw	68	;'D'
  1339  087A  3444               	retlw	65	;'A'
  1340  087B  3441               	retlw	0
  1341  087C  3400               psect	strings
  1342                           	
  1343                           STR_19:	
  1344  087D                     	retlw	65	;'A'
  1345  087D  3441               	retlw	76	;'L'
  1346  087E  344C               	retlw	65	;'A'
  1347  087F  3441               	retlw	82	;'R'
  1348  0880  3452               	retlw	77	;'M'
  1349  0881  344D               	retlw	65	;'A'
  1350  0882  3441               	retlw	32	;' '
  1351  0883  3420               	retlw	0
  1352  0884  3400               psect	strings
  1353                           	
  1354                           STR_6:	
  1355  0885                     	retlw	80	;'P'
  1356  0885  3450               	retlw	85	;'U'
  1357  0886  3455               	retlw	69	;'E'
  1358  0887  3445               	retlw	82	;'R'
  1359  0888  3452               	retlw	84	;'T'
  1360  0889  3454               	retlw	65	;'A'
  1361  088A  3441               	retlw	32	;' '
  1362  088B  3420               	retlw	0
  1363  088C  3400               psect	strings
  1364                           	
  1365                           STR_20:	
  1366  088D                     	retlw	65	;'A'
  1367  088D  3441               	retlw	67	;'C'
  1368  088E  3443               	retlw	84	;'T'
  1369  088F  3454               	retlw	73	;'I'
  1370  0890  3449               	retlw	86	;'V'
  1371  0891  3456               	retlw	65	;'A'
  1372  0892  3441               	retlw	0
  1373  0893  3400               psect	strings
  1374                           	
  1375                           STR_3:	
  1376  0894                     	retlw	84	;'T'
  1377  0894  3454               	retlw	69	;'E'
  1378  0895  3445               	retlw	77	;'M'
  1379  0896  344D               	retlw	80	;'P'
  1380  0897  3450               	retlw	32	;' '
  1381  0898  3420               	retlw	0
  1382  0899  3400               psect	strings
  1383                           	
  1384                           STR_4:	
  1385  089A                     	retlw	76	;'L'
  1386  089A  344C               	retlw	85	;'U'
  1387  089B  3455               	retlw	90	;'Z'
  1388  089C  345A               	retlw	32	;' '
  1389  089D  3420               	retlw	0
  1390  089E  3400               psect	strings
  1391                           	
  1392                           STR_1:	
  1393  089F                     	retlw	37	;'%'
  1394  089F  3425               	retlw	100	;'d'
  1395  08A0  3464               	retlw	0
  1396  08A1  3400               psect	strings
  1397                           STR_2	equ	STR_1+0
  1398  089F                     STR_24	equ	STR_11+0
  1399  0856                     STR_18	equ	STR_10+0
  1400  0847                     STR_9	equ	STR_10+4
  1401  084B                     STR_17	equ	STR_10+4
  1402  084B                     STR_25	equ	STR_12+0
  1403  0838                     STR_7	equ	STR_22+7
  1404  0830                     STR_15	equ	STR_22+7
  1405  0830                     STR_8	equ	STR_23+7
  1406  0821                     STR_16	equ	STR_23+7
  1407  0821                     STR_14	equ	STR_6+0
  1408  0885                     STR_13	equ	STR_5+0
  1409  0865                     ; #config settings
  1410                           global __CFG_FOSC$INTRC_NOCLKOUT
  1411                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
  1412  0000                     global __CFG_WDTE$OFF
  1413                           __CFG_WDTE$OFF equ 0x0
  1414  0000                     global __CFG_PWRTE$OFF
  1415                           __CFG_PWRTE$OFF equ 0x0
  1416  0000                     global __CFG_MCLRE$OFF
  1417                           __CFG_MCLRE$OFF equ 0x0
  1418  0000                     global __CFG_CP$OFF
  1419                           __CFG_CP$OFF equ 0x0
  1420  0000                     global __CFG_CPD$OFF
  1421                           __CFG_CPD$OFF equ 0x0
  1422  0000                     global __CFG_BOREN$OFF
  1423                           __CFG_BOREN$OFF equ 0x0
  1424  0000                     global __CFG_IESO$OFF
  1425                           __CFG_IESO$OFF equ 0x0
  1426  0000                     global __CFG_FCMEN$OFF
  1427                           __CFG_FCMEN$OFF equ 0x0
  1428  0000                     global __CFG_LVP$OFF
  1429                           __CFG_LVP$OFF equ 0x0
  1430  0000                     global __CFG_BOR4V$BOR40V
  1431                           __CFG_BOR4V$BOR40V equ 0x0
  1432  0000                     global __CFG_WRT$OFF
  1433                           __CFG_WRT$OFF equ 0x0
  1434  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\s79o."
  1435                           	line	#
  1436                           psect cinit,class=CODE,delta=2
  1437                           global start_initialization
  1438                           start_initialization:
  1439  000F                     
  1440                           global __initialization
  1441                           __initialization:
  1442  000F                     psect	bssCOMMON,class=COMMON,space=1,noexec
  1443                           global __pbssCOMMON
  1444                           __pbssCOMMON:
  1445  0070                     _receiveUSART:
  1446  0070                            ds      1
  1447  0070                     
  1448                           _mov:
  1449  0071                            ds      1
  1450  0071                     
  1451                           _signal:
  1452  0072                            ds      1
  1453  0072                     
  1454                           _count2:
  1455  0073                            ds      1
  1456  0073                     
  1457                           _hall:
  1458  0074                            ds      1
  1459  0074                     
  1460                           psect	bssBANK0,class=BANK0,space=1,noexec
  1461                           global __pbssBANK0
  1462                           __pbssBANK0:
  1463  006C                     _screenCounter:
  1464  006C                            ds      1
  1465  006C                     
  1466                           _count:
  1467  006D                            ds      1
  1468  006D                     
  1469                           _entero1:
  1470  006E                            ds      1
  1471  006E                     
  1472                           psect	bssBANK1,class=BANK1,space=1,noexec
  1473                           global __pbssBANK1
  1474                           __pbssBANK1:
  1475  00A0                     _float2:
  1476  00A0                            ds      4
  1477  00A0                     
  1478                           _sensorF2:
  1479  00A4                            ds      4
  1480  00A4                     
  1481                           _float1:
  1482  00A8                            ds      4
  1483  00A8                     
  1484                           _sensorF1:
  1485  00AC                            ds      4
  1486  00AC                     
  1487                           _screenState:
  1488  00B0                            ds      1
  1489  00B0                     
  1490                           _antibounce2:
  1491  00B1                            ds      1
  1492  00B1                     
  1493                           _antibounce:
  1494  00B2                            ds      1
  1495  00B2                     
  1496                           _garage:
  1497  00B3                            ds      1
  1498  00B3                     
  1499                           _ir:
  1500  00B4                            ds      1
  1501  00B4                     
  1502                           _count3:
  1503  00B5                            ds      1
  1504  00B5                     
  1505                           _toggle3:
  1506  00B6                            ds      1
  1507  00B6                     
  1508                           _adcP:
  1509  00B7                            ds      1
  1510  00B7                     
  1511                           _toggle2:
  1512  00B8                            ds      1
  1513  00B8                     
  1514                           _s3:
  1515  00B9                            ds      1
  1516  00B9                     
  1517                           _toggle:
  1518  00BA                            ds      1
  1519  00BA                     
  1520                           _dec2:
  1521  00BB                            ds      1
  1522  00BB                     
  1523                           _entero2:
  1524  00BC                            ds      1
  1525  00BC                     
  1526                           _alarm:
  1527  00BD                            ds      1
  1528  00BD                     
  1529                           _dec1:
  1530  00BE                            ds      1
  1531  00BE                     
  1532                           _adc:
  1533  00BF                            ds      1
  1534  00BF                     
  1535                           _adcT:
  1536  00C0                            ds      1
  1537  00C0                     
  1538                           _adcValue:
  1539  00C1                            ds      1
  1540  00C1                     
  1541                           _cursor:
  1542  00C2                            ds      1
  1543  00C2                     
  1544                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\s79o."
  1545                           	line	#
  1546                           psect clrtext,class=CODE,delta=2
  1547                           global clear_ram0
  1548                           ;	Called with FSR containing the base address, and
  1549                           ;	W with the last address+1
  1550                           clear_ram0:
  1551  110E                     	clrwdt			;clear the watchdog before getting into this loop
  1552  110E  0064               clrloop0:
  1553  110F                     	clrf	indf		;clear RAM location pointed to by FSR
  1554  110F  0180               	incf	fsr,f		;increment pointer
  1555  1110  0A84               	xorwf	fsr,w		;XOR with final address
  1556  1111  0604               	btfsc	status,2	;have we reached the end yet?
  1557  1112  1903               	retlw	0		;all done for this memory range, return
  1558  1113  3400               	xorwf	fsr,w		;XOR again to restore value
  1559  1114  0604               	goto	clrloop0		;do the next byte
  1560  1115  290F               
  1561                           ; Clear objects allocated to COMMON
  1562                           psect cinit,class=CODE,delta=2,merge=1
  1563                           	clrf	((__pbssCOMMON)+0)&07Fh
  1564  000F  01F0               	clrf	((__pbssCOMMON)+1)&07Fh
  1565  0010  01F1               	clrf	((__pbssCOMMON)+2)&07Fh
  1566  0011  01F2               	clrf	((__pbssCOMMON)+3)&07Fh
  1567  0012  01F3               	clrf	((__pbssCOMMON)+4)&07Fh
  1568  0013  01F4               ; Clear objects allocated to BANK0
  1569                           psect cinit,class=CODE,delta=2,merge=1
  1570                           	bcf	status, 5	;RP0=0, select bank0
  1571  0014  1283               	bcf	status, 6	;RP1=0, select bank0
  1572  0015  1303               	clrf	((__pbssBANK0)+0)&07Fh
  1573  0016  01EC               	clrf	((__pbssBANK0)+1)&07Fh
  1574  0017  01ED               	clrf	((__pbssBANK0)+2)&07Fh
  1575  0018  01EE               ; Clear objects allocated to BANK1
  1576                           psect cinit,class=CODE,delta=2,merge=1
  1577                           	bcf	status, 7	;select IRP bank0
  1578  0019  1383               	movlw	low(__pbssBANK1)
  1579  001A  30A0               	movwf	fsr
  1580  001B  0084               	movlw	low((__pbssBANK1)+023h)
  1581  001C  30C3               	fcall	clear_ram0
  1582  001D  160A  118A  210E  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1583                           global end_of_initialization,__end_of__initialization
  1584                           
  1585                           ;End of C runtime variable initialization code
  1586                           
  1587                           end_of_initialization:
  1588  0022                     __end_of__initialization:
  1589  0022                     clrf status
  1590  0022  0183               ljmp _main	;jump to C main() function
  1591  0023  120A  118A  2826   psect	cstackBANK1,class=BANK1,space=1,noexec
  1592                           global __pcstackBANK1
  1593                           __pcstackBANK1:
  1594  00C3                     ??___fldiv:	; 1 bytes @ 0x0
  1595  00C3                     	ds	5
  1596  00C3                     	global	___fldiv@rem
  1597                           ___fldiv@rem:	; 4 bytes @ 0x5
  1598  00C8                     	ds	4
  1599  00C8                     	global	___fldiv@sign
  1600                           ___fldiv@sign:	; 1 bytes @ 0x9
  1601  00CC                     	ds	1
  1602  00CC                     	global	___fldiv@new_exp
  1603                           ___fldiv@new_exp:	; 2 bytes @ 0xA
  1604  00CD                     	ds	2
  1605  00CD                     	global	___fldiv@grs
  1606                           ___fldiv@grs:	; 4 bytes @ 0xC
  1607  00CF                     	ds	4
  1608  00CF                     	global	___fldiv@bexp
  1609                           ___fldiv@bexp:	; 1 bytes @ 0x10
  1610  00D3                     	ds	1
  1611  00D3                     	global	___fldiv@aexp
  1612                           ___fldiv@aexp:	; 1 bytes @ 0x11
  1613  00D4                     	ds	1
  1614  00D4                     ??_main:	; 1 bytes @ 0x12
  1615  00D5                     	ds	4
  1616  00D5                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  1617                           global __pcstackCOMMON
  1618                           __pcstackCOMMON:
  1619  0075                     ?_cmdLCD:	; 1 bytes @ 0x0
  1620  0075                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1621  0075                     ?_readADC:	; 1 bytes @ 0x0
  1622  0075                     ??_readADC:	; 1 bytes @ 0x0
  1623  0075                     ?_sendUSART:	; 1 bytes @ 0x0
  1624  0075                     ??_sendUSART:	; 1 bytes @ 0x0
  1625  0075                     ?_setup:	; 1 bytes @ 0x0
  1626  0075                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1627  0075                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1628  0075                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1629  0075                     ?_clcLCD:	; 1 bytes @ 0x0
  1630  0075                     ?_initLCD:	; 1 bytes @ 0x0
  1631  0075                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1632  0075                     ?_isr:	; 1 bytes @ 0x0
  1633  0075                     ?_main:	; 1 bytes @ 0x0
  1634  0075                     	ds	1
  1635  0075                     	global	sendUSART@data
  1636                           sendUSART@data:	; 1 bytes @ 0x1
  1637  0076                     	ds	1
  1638  0076                     ??_isr:	; 1 bytes @ 0x2
  1639  0077                     	ds	3
  1640  0077                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1641                           global __pcstackBANK0
  1642                           __pcstackBANK0:
  1643  0020                     ??_cmdLCD:	; 1 bytes @ 0x0
  1644  0020                     ??_writeCharLCD:	; 1 bytes @ 0x0
  1645  0020                     ?_initUSART:	; 1 bytes @ 0x0
  1646  0020                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1647  0020                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1648  0020                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1649  0020                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1650  0020                     	global	?__Umul8_16
  1651                           ?__Umul8_16:	; 2 bytes @ 0x0
  1652  0020                     	global	?_I2C_Master_Read
  1653                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1654  0020                     	global	?___wmul
  1655                           ?___wmul:	; 2 bytes @ 0x0
  1656  0020                     	global	?___awmod
  1657                           ?___awmod:	; 2 bytes @ 0x0
  1658  0020                     	global	?___lwdiv
  1659                           ?___lwdiv:	; 2 bytes @ 0x0
  1660  0020                     	global	?___lldiv
  1661                           ?___lldiv:	; 4 bytes @ 0x0
  1662  0020                     	global	?___fltol
  1663                           ?___fltol:	; 4 bytes @ 0x0
  1664  0020                     	global	?___xxtofl
  1665                           ?___xxtofl:	; 4 bytes @ 0x0
  1666  0020                     	global	__Umul8_16@multiplicand
  1667                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1668  0020                     	global	I2C_Master_Write@d
  1669                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1670  0020                     	global	I2C_Master_Read@a
  1671                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1672  0020                     	global	initUSART@baudrate
  1673                           initUSART@baudrate:	; 2 bytes @ 0x0
  1674  0020                     	global	___wmul@multiplier
  1675                           ___wmul@multiplier:	; 2 bytes @ 0x0
  1676  0020                     	global	___awmod@divisor
  1677                           ___awmod@divisor:	; 2 bytes @ 0x0
  1678  0020                     	global	___lwdiv@divisor
  1679                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1680  0020                     	global	___lldiv@divisor
  1681                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1682  0020                     	global	___fltol@f1
  1683                           ___fltol@f1:	; 4 bytes @ 0x0
  1684  0020                     	global	___xxtofl@val
  1685                           ___xxtofl@val:	; 4 bytes @ 0x0
  1686  0020                     	ds	1
  1687  0020                     	global	writeCharLCD@character
  1688                           writeCharLCD@character:	; 1 bytes @ 0x1
  1689  0021                     	ds	1
  1690  0021                     ??__Umul8_16:	; 1 bytes @ 0x2
  1691  0022                     ??_I2C_Master_Write:	; 1 bytes @ 0x2
  1692  0022                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1693  0022                     ?_writeStrLCD:	; 1 bytes @ 0x2
  1694  0022                     	global	cmdLCD@cmd
  1695                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1696  0022                     	global	initUSART@txint
  1697                           initUSART@txint:	; 1 bytes @ 0x2
  1698  0022                     	global	writeStrLCD@string
  1699                           writeStrLCD@string:	; 2 bytes @ 0x2
  1700  0022                     	global	___wmul@multiplicand
  1701                           ___wmul@multiplicand:	; 2 bytes @ 0x2
  1702  0022                     	global	___awmod@dividend
  1703                           ___awmod@dividend:	; 2 bytes @ 0x2
  1704  0022                     	global	___lwdiv@dividend
  1705                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1706  0022                     	ds	1
  1707  0022                     ?_setCursorLCD:	; 1 bytes @ 0x3
  1708  0023                     ??_clcLCD:	; 1 bytes @ 0x3
  1709  0023                     ??_initLCD:	; 1 bytes @ 0x3
  1710  0023                     	global	setCursorLCD@x
  1711                           setCursorLCD@x:	; 1 bytes @ 0x3
  1712  0023                     	global	initUSART@rcint
  1713                           initUSART@rcint:	; 1 bytes @ 0x3
  1714  0023                     	ds	1
  1715  0023                     ??_setCursorLCD:	; 1 bytes @ 0x4
  1716  0024                     ??_writeStrLCD:	; 1 bytes @ 0x4
  1717  0024                     ??___wmul:	; 1 bytes @ 0x4
  1718  0024                     ??___awmod:	; 1 bytes @ 0x4
  1719  0024                     ??___fltol:	; 1 bytes @ 0x4
  1720  0024                     ??___lwdiv:	; 1 bytes @ 0x4
  1721  0024                     ??___xxtofl:	; 1 bytes @ 0x4
  1722  0024                     	global	initUSART@syncrono
  1723                           initUSART@syncrono:	; 1 bytes @ 0x4
  1724  0024                     	global	I2C_Master_Read@temp
  1725                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1726  0024                     	global	___wmul@product
  1727                           ___wmul@product:	; 2 bytes @ 0x4
  1728  0024                     	global	__Umul8_16@product
  1729                           __Umul8_16@product:	; 2 bytes @ 0x4
  1730  0024                     	global	___lldiv@dividend
  1731                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1732  0024                     	ds	1
  1733  0024                     ??_initUSART:	; 1 bytes @ 0x5
  1734  0025                     	global	setCursorLCD@y
  1735                           setCursorLCD@y:	; 1 bytes @ 0x5
  1736  0025                     	global	___awmod@counter
  1737                           ___awmod@counter:	; 1 bytes @ 0x5
  1738  0025                     	global	___lwdiv@counter
  1739                           ___lwdiv@counter:	; 1 bytes @ 0x5
  1740  0025                     	ds	1
  1741  0025                     	global	?___awdiv
  1742                           ?___awdiv:	; 2 bytes @ 0x6
  1743  0026                     	global	___awmod@sign
  1744                           ___awmod@sign:	; 1 bytes @ 0x6
  1745  0026                     	global	___awdiv@divisor
  1746                           ___awdiv@divisor:	; 2 bytes @ 0x6
  1747  0026                     	global	___lwdiv@quotient
  1748                           ___lwdiv@quotient:	; 2 bytes @ 0x6
  1749  0026                     	global	__Umul8_16@word_mpld
  1750                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1751  0026                     	ds	1
  1752  0026                     	global	writeStrLCD@cont
  1753                           writeStrLCD@cont:	; 2 bytes @ 0x7
  1754  0027                     	ds	1
  1755  0027                     ??___lldiv:	; 1 bytes @ 0x8
  1756  0028                     	global	?___lwmod
  1757                           ?___lwmod:	; 2 bytes @ 0x8
  1758  0028                     	global	___xxtofl@sign
  1759                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1760  0028                     	global	__Umul8_16@multiplier
  1761                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1762  0028                     	global	___awdiv@dividend
  1763                           ___awdiv@dividend:	; 2 bytes @ 0x8
  1764  0028                     	global	___lwmod@divisor
  1765                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1766  0028                     	ds	1
  1767  0028                     	global	___fltol@sign1
  1768                           ___fltol@sign1:	; 1 bytes @ 0x9
  1769  0029                     	global	___xxtofl@exp
  1770                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1771  0029                     	global	___lldiv@quotient
  1772                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1773  0029                     	ds	1
  1774  0029                     ??___awdiv:	; 1 bytes @ 0xA
  1775  002A                     	global	___fltol@exp1
  1776                           ___fltol@exp1:	; 1 bytes @ 0xA
  1777  002A                     	global	___lwmod@dividend
  1778                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1779  002A                     	global	___xxtofl@arg
  1780                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1781  002A                     	ds	1
  1782  002A                     	global	___awdiv@counter
  1783                           ___awdiv@counter:	; 1 bytes @ 0xB
  1784  002B                     	ds	1
  1785  002B                     ??___lwmod:	; 1 bytes @ 0xC
  1786  002C                     	global	___awdiv@sign
  1787                           ___awdiv@sign:	; 1 bytes @ 0xC
  1788  002C                     	ds	1
  1789  002C                     	global	___lldiv@counter
  1790                           ___lldiv@counter:	; 1 bytes @ 0xD
  1791  002D                     	global	___lwmod@counter
  1792                           ___lwmod@counter:	; 1 bytes @ 0xD
  1793  002D                     	global	___awdiv@quotient
  1794                           ___awdiv@quotient:	; 2 bytes @ 0xD
  1795  002D                     	ds	1
  1796  002D                     ?_I2C_Master_Init:	; 1 bytes @ 0xE
  1797  002E                     	global	?_sprintf
  1798                           ?_sprintf:	; 2 bytes @ 0xE
  1799  002E                     	global	?___flneg
  1800                           ?___flneg:	; 4 bytes @ 0xE
  1801  002E                     	global	sprintf@f
  1802                           sprintf@f:	; 1 bytes @ 0xE
  1803  002E                     	global	I2C_Master_Init@c
  1804                           I2C_Master_Init@c:	; 4 bytes @ 0xE
  1805  002E                     	global	___flneg@f1
  1806                           ___flneg@f1:	; 4 bytes @ 0xE
  1807  002E                     	ds	3
  1808  002E                     ??_sprintf:	; 1 bytes @ 0x11
  1809  0031                     	ds	1
  1810  0031                     ??_I2C_Master_Init:	; 1 bytes @ 0x12
  1811  0032                     ??___flneg:	; 1 bytes @ 0x12
  1812  0032                     	global	?___fladd
  1813                           ?___fladd:	; 4 bytes @ 0x12
  1814  0032                     	global	___fladd@b
  1815                           ___fladd@b:	; 4 bytes @ 0x12
  1816  0032                     	ds	2
  1817  0032                     	global	sprintf@ap
  1818                           sprintf@ap:	; 1 bytes @ 0x14
  1819  0034                     	ds	1
  1820  0034                     	global	sprintf@flag
  1821                           sprintf@flag:	; 1 bytes @ 0x15
  1822  0035                     	ds	1
  1823  0035                     ??_setup:	; 1 bytes @ 0x16
  1824  0036                     	global	sprintf@prec
  1825                           sprintf@prec:	; 1 bytes @ 0x16
  1826  0036                     	global	___fladd@a
  1827                           ___fladd@a:	; 4 bytes @ 0x16
  1828  0036                     	ds	1
  1829  0036                     	global	sprintf@val
  1830                           sprintf@val:	; 2 bytes @ 0x17
  1831  0037                     	ds	2
  1832  0037                     	global	sprintf@sp
  1833                           sprintf@sp:	; 1 bytes @ 0x19
  1834  0039                     	ds	1
  1835  0039                     ??___fladd:	; 1 bytes @ 0x1A
  1836  003A                     	global	sprintf@c
  1837                           sprintf@c:	; 1 bytes @ 0x1A
  1838  003A                     	ds	1
  1839  003A                     ??_writeIntLCD:	; 1 bytes @ 0x1B
  1840  003B                     	ds	3
  1841  003B                     	global	writeIntLCD@buffer
  1842                           writeIntLCD@buffer:	; 4 bytes @ 0x1E
  1843  003E                     	ds	4
  1844  003E                     	global	writeIntLCD@numero
  1845                           writeIntLCD@numero:	; 1 bytes @ 0x22
  1846  0042                     	ds	4
  1847  0042                     	global	___fladd@signs
  1848                           ___fladd@signs:	; 1 bytes @ 0x26
  1849  0046                     	ds	1
  1850  0046                     	global	___fladd@aexp
  1851                           ___fladd@aexp:	; 1 bytes @ 0x27
  1852  0047                     	ds	1
  1853  0047                     	global	___fladd@bexp
  1854                           ___fladd@bexp:	; 1 bytes @ 0x28
  1855  0048                     	ds	1
  1856  0048                     	global	___fladd@grs
  1857                           ___fladd@grs:	; 1 bytes @ 0x29
  1858  0049                     	ds	1
  1859  0049                     	global	?___flmul
  1860                           ?___flmul:	; 4 bytes @ 0x2A
  1861  004A                     	global	___flmul@b
  1862                           ___flmul@b:	; 4 bytes @ 0x2A
  1863  004A                     	ds	4
  1864  004A                     	global	___flmul@a
  1865                           ___flmul@a:	; 4 bytes @ 0x2E
  1866  004E                     	ds	4
  1867  004E                     ??___flmul:	; 1 bytes @ 0x32
  1868  0052                     	ds	5
  1869  0052                     	global	___flmul@sign
  1870                           ___flmul@sign:	; 1 bytes @ 0x37
  1871  0057                     	ds	1
  1872  0057                     	global	___flmul@aexp
  1873                           ___flmul@aexp:	; 1 bytes @ 0x38
  1874  0058                     	ds	1
  1875  0058                     	global	___flmul@grs
  1876                           ___flmul@grs:	; 4 bytes @ 0x39
  1877  0059                     	ds	4
  1878  0059                     	global	___flmul@bexp
  1879                           ___flmul@bexp:	; 1 bytes @ 0x3D
  1880  005D                     	ds	1
  1881  005D                     	global	___flmul@prod
  1882                           ___flmul@prod:	; 4 bytes @ 0x3E
  1883  005E                     	ds	4
  1884  005E                     	global	___flmul@temp
  1885                           ___flmul@temp:	; 2 bytes @ 0x42
  1886  0062                     	ds	2
  1887  0062                     	global	?___fldiv
  1888                           ?___fldiv:	; 4 bytes @ 0x44
  1889  0064                     	global	___fldiv@a
  1890                           ___fldiv@a:	; 4 bytes @ 0x44
  1891  0064                     	ds	4
  1892  0064                     	global	___fldiv@b
  1893                           ___fldiv@b:	; 4 bytes @ 0x48
  1894  0068                     	ds	4
  1895  0068                     ;!
  1896                           ;!Data Sizes:
  1897                           ;!    Strings     136
  1898                           ;!    Constant    10
  1899                           ;!    Data        0
  1900                           ;!    BSS         43
  1901                           ;!    Persistent  0
  1902                           ;!    Stack       0
  1903                           ;!
  1904                           ;!Auto Spaces:
  1905                           ;!    Space          Size  Autos    Used
  1906                           ;!    COMMON           14      5      10
  1907                           ;!    BANK0            80     76      79
  1908                           ;!    BANK1            80     22      57
  1909                           ;!    BANK3            96      0       0
  1910                           ;!    BANK2            96      0       0
  1911                           
  1912                           ;!
  1913                           ;!Pointer List with Targets:
  1914                           ;!
  1915                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1916                           ;!		 -> STR_2(CODE[3]), STR_1(CODE[3]), 
  1917                           ;!
  1918                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
  1919                           ;!		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 
  1920                           ;!
  1921                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1922                           ;!		 -> ?_sprintf(BANK0[2]), 
  1923                           ;!
  1924                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 15
  1925                           ;!		 -> STR_25(CODE[15]), STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), 
  1926                           ;!		 -> STR_21(CODE[12]), STR_20(CODE[7]), STR_19(CODE[8]), STR_18(CODE[15]), 
  1927                           ;!		 -> STR_17(CODE[11]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
  1928                           ;!		 -> STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[15]), STR_10(CODE[15]), 
  1929                           ;!		 -> STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[8]), STR_6(CODE[8]), 
  1930                           ;!		 -> STR_5(CODE[12]), STR_4(CODE[5]), STR_3(CODE[6]), writeIntLCD16@buffer(COMMON[5])
                                 , 
  1931                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1932                           ;!
  1933                           
  1934                           
  1935                           ;!
  1936                           ;!Critical Paths under _main in COMMON
  1937                           ;!
  1938                           ;!    None.
  1939                           ;!
  1940                           ;!Critical Paths under _isr in COMMON
  1941                           ;!
  1942                           ;!    _isr->_sendUSART
  1943                           ;!
  1944                           ;!Critical Paths under _main in BANK0
  1945                           ;!
  1946                           ;!    _main->___fldiv
  1947                           ;!    _writeIntLCD->_sprintf
  1948                           ;!    _writeStrLCD->_writeCharLCD
  1949                           ;!    _sprintf->___lwmod
  1950                           ;!    ___lwmod->___lwdiv
  1951                           ;!    _setup->_I2C_Master_Init
  1952                           ;!    _initLCD->_cmdLCD
  1953                           ;!    _clcLCD->_cmdLCD
  1954                           ;!    _I2C_Master_Init->___lldiv
  1955                           ;!    _setCursorLCD->_cmdLCD
  1956                           ;!    ___flneg->___xxtofl
  1957                           ;!    ___flmul->___fladd
  1958                           ;!    ___fldiv->___flmul
  1959                           ;!    ___fladd->___flneg
  1960                           ;!    ___awdiv->___wmul
  1961                           ;!
  1962                           ;!Critical Paths under _isr in BANK0
  1963                           ;!
  1964                           ;!    None.
  1965                           ;!
  1966                           ;!Critical Paths under _main in BANK1
  1967                           ;!
  1968                           ;!    _main->___fldiv
  1969                           ;!
  1970                           ;!Critical Paths under _isr in BANK1
  1971                           ;!
  1972                           ;!    None.
  1973                           ;!
  1974                           ;!Critical Paths under _main in BANK3
  1975                           ;!
  1976                           ;!    None.
  1977                           ;!
  1978                           ;!Critical Paths under _isr in BANK3
  1979                           ;!
  1980                           ;!    None.
  1981                           ;!
  1982                           ;!Critical Paths under _main in BANK2
  1983                           ;!
  1984                           ;!    None.
  1985                           ;!
  1986                           ;!Critical Paths under _isr in BANK2
  1987                           ;!
  1988                           ;!    None.
  1989                           
  1990 ;;
  1991 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1992 ;;
  1993                           
  1994                           ;!
  1995                           ;!Call Graph Tables:
  1996                           ;!
  1997                           ;! ---------------------------------------------------------------------------------
  1998                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1999                           ;! ---------------------------------------------------------------------------------
  2000                           ;! (0) _main                                                 4     4      0   20736
  2001                           ;!                                             18 BANK1      4     4      0
  2002                           ;!                    _I2C_Master_Read
  2003                           ;!                   _I2C_Master_Start
  2004                           ;!                    _I2C_Master_Stop
  2005                           ;!                   _I2C_Master_Write
  2006                           ;!                            ___awdiv
  2007                           ;!                            ___awmod
  2008                           ;!                            ___fladd
  2009                           ;!                            ___fldiv
  2010                           ;!                            ___flmul
  2011                           ;!                            ___flneg
  2012                           ;!                            ___fltol
  2013                           ;!                             ___wmul
  2014                           ;!                           ___xxtofl
  2015                           ;!                       _setCursorLCD
  2016                           ;!                              _setup
  2017                           ;!                       _writeCharLCD
  2018                           ;!                        _writeIntLCD
  2019                           ;!                        _writeStrLCD
  2020                           ;! ---------------------------------------------------------------------------------
  2021                           ;! (1) _writeIntLCD                                          8     8      0    4214
  2022                           ;!                                             27 BANK0      8     8      0
  2023                           ;!                            _sprintf
  2024                           ;!                        _writeStrLCD
  2025                           ;! ---------------------------------------------------------------------------------
  2026                           ;! (1) _writeStrLCD                                          7     5      2    2411
  2027                           ;!                                              2 BANK0      7     5      2
  2028                           ;!                       _writeCharLCD
  2029                           ;! ---------------------------------------------------------------------------------
  2030                           ;! (2) _writeCharLCD                                         2     2      0      31
  2031                           ;!                                              0 BANK0      2     2      0
  2032                           ;! ---------------------------------------------------------------------------------
  2033                           ;! (2) _sprintf                                             21    18      3    1680
  2034                           ;!                                             14 BANK0     13    10      3
  2035                           ;!                            ___lwdiv
  2036                           ;!                            ___lwmod
  2037                           ;! ---------------------------------------------------------------------------------
  2038                           ;! (3) ___lwmod                                              6     2      4     311
  2039                           ;!                                              8 BANK0      6     2      4
  2040                           ;!                            ___lwdiv (ARG)
  2041                           ;! ---------------------------------------------------------------------------------
  2042                           ;! (3) ___lwdiv                                              8     4      4     421
  2043                           ;!                                              0 BANK0      8     4      4
  2044                           ;! ---------------------------------------------------------------------------------
  2045                           ;! (1) _setup                                                0     0      0    1243
  2046                           ;!                    _I2C_Master_Init
  2047                           ;!                             _clcLCD
  2048                           ;!                            _initLCD
  2049                           ;!                          _initUSART
  2050                           ;! ---------------------------------------------------------------------------------
  2051                           ;! (2) _initUSART                                            5     0      5     639
  2052                           ;!                                              0 BANK0      5     0      5
  2053                           ;! ---------------------------------------------------------------------------------
  2054                           ;! (2) _initLCD                                              2     2      0      31
  2055                           ;!                                              3 BANK0      2     2      0
  2056                           ;!                             _cmdLCD
  2057                           ;! ---------------------------------------------------------------------------------
  2058                           ;! (2) _clcLCD                                               0     0      0      31
  2059                           ;!                             _cmdLCD
  2060                           ;! ---------------------------------------------------------------------------------
  2061                           ;! (2) _I2C_Master_Init                                      8     4      4     542
  2062                           ;!                                             14 BANK0      8     4      4
  2063                           ;!                            ___lldiv
  2064                           ;! ---------------------------------------------------------------------------------
  2065                           ;! (3) ___lldiv                                             14     6      8     421
  2066                           ;!                                              0 BANK0     14     6      8
  2067                           ;! ---------------------------------------------------------------------------------
  2068                           ;! (1) _setCursorLCD                                         3     2      1     844
  2069                           ;!                                              3 BANK0      3     2      1
  2070                           ;!                             _cmdLCD
  2071                           ;! ---------------------------------------------------------------------------------
  2072                           ;! (3) _cmdLCD                                               3     3      0      31
  2073                           ;!                                              0 BANK0      3     3      0
  2074                           ;! ---------------------------------------------------------------------------------
  2075                           ;! (1) ___xxtofl                                            14    10      4     656
  2076                           ;!                                              0 BANK0     14    10      4
  2077                           ;! ---------------------------------------------------------------------------------
  2078                           ;! (1) ___wmul                                               6     2      4     316
  2079                           ;!                                              0 BANK0      6     2      4
  2080                           ;! ---------------------------------------------------------------------------------
  2081                           ;! (1) ___fltol                                             11     7      4     517
  2082                           ;!                                              0 BANK0     11     7      4
  2083                           ;! ---------------------------------------------------------------------------------
  2084                           ;! (1) ___flneg                                              4     0      4     155
  2085                           ;!                                             14 BANK0      4     0      4
  2086                           ;!                           ___xxtofl (ARG)
  2087                           ;! ---------------------------------------------------------------------------------
  2088                           ;! (1) ___flmul                                             26    18      8    3533
  2089                           ;!                                             42 BANK0     26    18      8
  2090                           ;!                          __Umul8_16
  2091                           ;!                            ___fladd (ARG)
  2092                           ;!                            ___flneg (ARG)
  2093                           ;!                           ___xxtofl (ARG)
  2094                           ;! ---------------------------------------------------------------------------------
  2095                           ;! (2) __Umul8_16                                            9     7      2     980
  2096                           ;!                                              0 BANK0      9     7      2
  2097                           ;! ---------------------------------------------------------------------------------
  2098                           ;! (1) ___fldiv                                             26    18      8    2043
  2099                           ;!                                             68 BANK0      8     0      8
  2100                           ;!                                              0 BANK1     18    18      0
  2101                           ;!                            ___flmul (ARG)
  2102                           ;!                           ___xxtofl (ARG)
  2103                           ;! ---------------------------------------------------------------------------------
  2104                           ;! (1) ___fladd                                             24    16      8    2262
  2105                           ;!                                             18 BANK0     24    16      8
  2106                           ;!                            ___flneg (ARG)
  2107                           ;!                           ___xxtofl (ARG)
  2108                           ;! ---------------------------------------------------------------------------------
  2109                           ;! (1) ___awmod                                              7     3      4     973
  2110                           ;!                                              0 BANK0      7     3      4
  2111                           ;! ---------------------------------------------------------------------------------
  2112                           ;! (1) ___awdiv                                              9     5      4     452
  2113                           ;!                                              6 BANK0      9     5      4
  2114                           ;!                             ___wmul (ARG)
  2115                           ;! ---------------------------------------------------------------------------------
  2116                           ;! (1) _I2C_Master_Write                                     2     0      2     301
  2117                           ;!                                              0 BANK0      2     0      2
  2118                           ;!                    _I2C_Master_Wait
  2119                           ;! ---------------------------------------------------------------------------------
  2120                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  2121                           ;!                    _I2C_Master_Wait
  2122                           ;! ---------------------------------------------------------------------------------
  2123                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  2124                           ;!                    _I2C_Master_Wait
  2125                           ;! ---------------------------------------------------------------------------------
  2126                           ;! (1) _I2C_Master_Read                                      6     4      2     785
  2127                           ;!                                              0 BANK0      6     4      2
  2128                           ;!                    _I2C_Master_Wait
  2129                           ;! ---------------------------------------------------------------------------------
  2130                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  2131                           ;! ---------------------------------------------------------------------------------
  2132                           ;! Estimated maximum stack depth 3
  2133                           ;! ---------------------------------------------------------------------------------
  2134                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  2135                           ;! ---------------------------------------------------------------------------------
  2136                           ;! (4) _isr                                                  3     3      0      22
  2137                           ;!                                              2 COMMON     3     3      0
  2138                           ;!                            _readADC
  2139                           ;!                          _sendUSART
  2140                           ;! ---------------------------------------------------------------------------------
  2141                           ;! (5) _sendUSART                                            2     2      0      22
  2142                           ;!                                              0 COMMON     2     2      0
  2143                           ;! ---------------------------------------------------------------------------------
  2144                           ;! (5) _readADC                                              0     0      0       0
  2145                           ;! ---------------------------------------------------------------------------------
  2146                           ;! Estimated maximum stack depth 5
  2147                           ;! ---------------------------------------------------------------------------------
  2148                           ;!
  2149                           ;! Call Graph Graphs:
  2150                           ;!
  2151                           ;! _main (ROOT)
  2152                           ;!   _I2C_Master_Read
  2153                           ;!     _I2C_Master_Wait
  2154                           ;!   _I2C_Master_Start
  2155                           ;!     _I2C_Master_Wait
  2156                           ;!   _I2C_Master_Stop
  2157                           ;!     _I2C_Master_Wait
  2158                           ;!   _I2C_Master_Write
  2159                           ;!     _I2C_Master_Wait
  2160                           ;!   ___awdiv
  2161                           ;!     ___wmul (ARG)
  2162                           ;!   ___awmod
  2163                           ;!   ___fladd
  2164                           ;!     ___flneg (ARG)
  2165                           ;!       ___xxtofl (ARG)
  2166                           ;!     ___xxtofl (ARG)
  2167                           ;!   ___fldiv
  2168                           ;!     ___flmul (ARG)
  2169                           ;!       __Umul8_16
  2170                           ;!       ___fladd (ARG)
  2171                           ;!         ___flneg (ARG)
  2172                           ;!           ___xxtofl (ARG)
  2173                           ;!         ___xxtofl (ARG)
  2174                           ;!       ___flneg (ARG)
  2175                           ;!         ___xxtofl (ARG)
  2176                           ;!       ___xxtofl (ARG)
  2177                           ;!     ___xxtofl (ARG)
  2178                           ;!   ___flmul
  2179                           ;!     __Umul8_16
  2180                           ;!     ___fladd (ARG)
  2181                           ;!       ___flneg (ARG)
  2182                           ;!         ___xxtofl (ARG)
  2183                           ;!       ___xxtofl (ARG)
  2184                           ;!     ___flneg (ARG)
  2185                           ;!       ___xxtofl (ARG)
  2186                           ;!     ___xxtofl (ARG)
  2187                           ;!   ___flneg
  2188                           ;!     ___xxtofl (ARG)
  2189                           ;!   ___fltol
  2190                           ;!   ___wmul
  2191                           ;!   ___xxtofl
  2192                           ;!   _setCursorLCD
  2193                           ;!     _cmdLCD
  2194                           ;!   _setup
  2195                           ;!     _I2C_Master_Init
  2196                           ;!       ___lldiv
  2197                           ;!     _clcLCD
  2198                           ;!       _cmdLCD
  2199                           ;!     _initLCD
  2200                           ;!       _cmdLCD
  2201                           ;!     _initUSART
  2202                           ;!   _writeCharLCD
  2203                           ;!   _writeIntLCD
  2204                           ;!     _sprintf
  2205                           ;!       ___lwdiv
  2206                           ;!       ___lwmod
  2207                           ;!         ___lwdiv (ARG)
  2208                           ;!     _writeStrLCD
  2209                           ;!       _writeCharLCD
  2210                           ;!   _writeStrLCD
  2211                           ;!     _writeCharLCD
  2212                           ;!
  2213                           ;! _isr (ROOT)
  2214                           ;!   _readADC
  2215                           ;!   _sendUSART
  2216                           ;!
  2217                           
  2218                           ;! Address spaces:
  2219                           
  2220                           ;!Name               Size   Autos  Total    Cost      Usage
  2221                           ;!BITCOMMON            E      0       0       0        0.0%
  2222                           ;!EEDATA             100      0       0       0        0.0%
  2223                           ;!NULL                 0      0       0       0        0.0%
  2224                           ;!CODE                 0      0       0       0        0.0%
  2225                           ;!COMMON               E      5       A       1       71.4%
  2226                           ;!BITSFR0              0      0       0       1        0.0%
  2227                           ;!SFR0                 0      0       0       1        0.0%
  2228                           ;!BITSFR1              0      0       0       2        0.0%
  2229                           ;!SFR1                 0      0       0       2        0.0%
  2230                           ;!STACK                0      0       0       2        0.0%
  2231                           ;!ABS                  0      0      92       3        0.0%
  2232                           ;!BITBANK0            50      0       0       4        0.0%
  2233                           ;!BITSFR3              0      0       0       4        0.0%
  2234                           ;!SFR3                 0      0       0       4        0.0%
  2235                           ;!BANK0               50     4C      4F       5       98.8%
  2236                           ;!BITSFR2              0      0       0       5        0.0%
  2237                           ;!SFR2                 0      0       0       5        0.0%
  2238                           ;!BITBANK1            50      0       0       6        0.0%
  2239                           ;!BANK1               50     16      39       7       71.3%
  2240                           ;!BITBANK3            60      0       0       8        0.0%
  2241                           ;!BANK3               60      0       0       9        0.0%
  2242                           ;!BITBANK2            60      0       0      10        0.0%
  2243                           ;!BANK2               60      0       0      11        0.0%
  2244                           ;!DATA                 0      0      92      12        0.0%
  2245                           
  2246                           	global	_main
  2247                           
  2248 ;; *************** function _main *****************
  2249 ;; Defined at:
  2250 ;;		line 96 in file "mainM.c"
  2251 ;; Parameters:    Size  Location     Type
  2252 ;;		None
  2253 ;; Auto vars:     Size  Location     Type
  2254 ;;		None
  2255 ;; Return value:  Size  Location     Type
  2256 ;;                  1    wreg      void 
  2257 ;; Registers used:
  2258 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2259 ;; Tracked objects:
  2260 ;;		On entry : B00/0
  2261 ;;		On exit  : 0/0
  2262 ;;		Unchanged: 0/0
  2263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2264 ;;      Params:         0       0       0       0       0
  2265 ;;      Locals:         0       0       0       0       0
  2266 ;;      Temps:          0       0       4       0       0
  2267 ;;      Totals:         0       0       4       0       0
  2268 ;;Total ram usage:        4 bytes
  2269 ;; Hardware stack levels required when called:    5
  2270 ;; This function calls:
  2271 ;;		_I2C_Master_Read
  2272 ;;		_I2C_Master_Start
  2273 ;;		_I2C_Master_Stop
  2274 ;;		_I2C_Master_Write
  2275 ;;		___awdiv
  2276 ;;		___awmod
  2277 ;;		___fladd
  2278 ;;		___fldiv
  2279 ;;		___flmul
  2280 ;;		___flneg
  2281 ;;		___fltol
  2282 ;;		___wmul
  2283 ;;		___xxtofl
  2284 ;;		_setCursorLCD
  2285 ;;		_setup
  2286 ;;		_writeCharLCD
  2287 ;;		_writeIntLCD
  2288 ;;		_writeStrLCD
  2289 ;; This function is called by:
  2290 ;;		Startup code after reset
  2291 ;; This function uses a non-reentrant model
  2292 ;;
  2293                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  2294                           	file	"mainM.c"
  2295                           	line	96
  2296                           global __pmaintext
  2297                           __pmaintext:	;psect for function _main
  2298  0026                     psect	maintext
  2299                           	file	"mainM.c"
  2300                           	line	96
  2301                           	global	__size_of_main
  2302                           	__size_of_main	equ	__end_of_main-_main
  2303  0598                     	
  2304                           _main:	
  2305  0026                     ;incstack = 0
  2306                           	opt	stack 3
  2307                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2308                           	line	97
  2309                           	
  2310                           l4358:	
  2311  0026                     ;mainM.c: 97:     setup();
  2312                           	fcall	_setup
  2313  0026  160A  118A  22AC  120A  118A  	goto	l4360
  2314  002B  282C               	line	98
  2315                           ;mainM.c: 98:     while(1){
  2316                           	
  2317                           l249:	
  2318  002C                     	line	99
  2319                           	
  2320                           l4360:	
  2321  002C                     ;mainM.c: 99:         if(ADCON0bits.GO_DONE == 0){
  2322                           	bcf	status, 5	;RP0=0, select bank0
  2323  002C  1283               	bcf	status, 6	;RP1=0, select bank0
  2324  002D  1303               	btfsc	(31),1	;volatile
  2325  002E  189F               	goto	u6651
  2326  002F  2831               	goto	u6650
  2327  0030  2832               u6651:
  2328  0031                     	goto	l4364
  2329  0031  2834               u6650:
  2330  0032                     	line	100
  2331                           	
  2332                           l4362:	
  2333  0032                     ;mainM.c: 100:            ADCON0bits.GO_DONE = 1;
  2334                           	bsf	(31),1	;volatile
  2335  0032  149F               	goto	l4364
  2336  0033  2834               	line	101
  2337                           ;mainM.c: 101:         }
  2338                           	
  2339                           l250:	
  2340  0034                     	line	103
  2341                           	
  2342                           l4364:	
  2343  0034                     ;mainM.c: 103:         count = toggle%3;
  2344                           	movlw	03h
  2345  0034  3003               	movwf	(___awmod@divisor)
  2346  0035  00A0               	movlw	0
  2347  0036  3000               	movwf	((___awmod@divisor))+1
  2348  0037  00A1               	bsf	status, 5	;RP0=1, select bank1
  2349  0038  1683               	bcf	status, 6	;RP1=0, select bank1
  2350  0039  1303               	movf	(_toggle)^080h,w
  2351  003A  083A               	movwf	(??_main+0)^080h+0
  2352  003B  00D5               	clrf	(??_main+0)^080h+0+1
  2353  003C  01D6               	movf	0+(??_main+0)^080h+0,w
  2354  003D  0855               	bcf	status, 5	;RP0=0, select bank0
  2355  003E  1283               	bcf	status, 6	;RP1=0, select bank0
  2356  003F  1303               	movwf	(___awmod@dividend)
  2357  0040  00A2               	bsf	status, 5	;RP0=1, select bank1
  2358  0041  1683               	bcf	status, 6	;RP1=0, select bank1
  2359  0042  1303               	movf	1+(??_main+0)^080h+0,w
  2360  0043  0856               	bcf	status, 5	;RP0=0, select bank0
  2361  0044  1283               	bcf	status, 6	;RP1=0, select bank0
  2362  0045  1303               	movwf	(___awmod@dividend+1)
  2363  0046  00A3               	fcall	___awmod
  2364  0047  160A  118A  23BF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2365  004C  1283               	bcf	status, 6	;RP1=0, select bank0
  2366  004D  1303               	movf	(0+(?___awmod)),w
  2367  004E  0820               	bsf	status, 5	;RP0=1, select bank1
  2368  004F  1683               	bcf	status, 6	;RP1=0, select bank1
  2369  0050  1303               	movwf	(??_main+2)^080h+0
  2370  0051  00D7               	movf	(??_main+2)^080h+0,w
  2371  0052  0857               	bcf	status, 5	;RP0=0, select bank0
  2372  0053  1283               	bcf	status, 6	;RP1=0, select bank0
  2373  0054  1303               	movwf	(_count)
  2374  0055  00ED               	line	104
  2375                           ;mainM.c: 104:         I2C_Master_Start();
  2376                           	fcall	_I2C_Master_Start
  2377  0056  160A  118A  2116  120A  118A  	line	105
  2378                           ;mainM.c: 105:         I2C_Master_Write(0x69);
  2379                           	movlw	069h
  2380  005B  3069               	bcf	status, 5	;RP0=0, select bank0
  2381  005C  1283               	bcf	status, 6	;RP1=0, select bank0
  2382  005D  1303               	movwf	(I2C_Master_Write@d)
  2383  005E  00A0               	movlw	0
  2384  005F  3000               	movwf	((I2C_Master_Write@d))+1
  2385  0060  00A1               	fcall	_I2C_Master_Write
  2386  0061  160A  118A  211F  120A  118A  	line	106
  2387                           	
  2388                           l4366:	
  2389  0066                     ;mainM.c: 106:         if(count == 0){
  2390                           	bcf	status, 5	;RP0=0, select bank0
  2391  0066  1283               	bcf	status, 6	;RP1=0, select bank0
  2392  0067  1303               	movf	((_count)),w
  2393  0068  086D               	btfss	status,2
  2394  0069  1D03               	goto	u6661
  2395  006A  286C               	goto	u6660
  2396  006B  286D               u6661:
  2397  006C                     	goto	l4370
  2398  006C  287E               u6660:
  2399  006D                     	line	107
  2400                           	
  2401                           l4368:	
  2402  006D                     ;mainM.c: 107:             adcT = I2C_Master_Read(0);
  2403                           	movlw	0
  2404  006D  3000               	movwf	(I2C_Master_Read@a)
  2405  006E  00A0               	movwf	(I2C_Master_Read@a+1)
  2406  006F  00A1               	fcall	_I2C_Master_Read
  2407  0070  160A  118A  2204  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2408  0075  1283               	bcf	status, 6	;RP1=0, select bank0
  2409  0076  1303               	movf	(0+(?_I2C_Master_Read)),w
  2410  0077  0820               	bsf	status, 5	;RP0=1, select bank1
  2411  0078  1683               	bcf	status, 6	;RP1=0, select bank1
  2412  0079  1303               	movwf	(??_main+0)^080h+0
  2413  007A  00D5               	movf	(??_main+0)^080h+0,w
  2414  007B  0855               	movwf	(_adcT)^080h
  2415  007C  00C0               	line	108
  2416                           ;mainM.c: 108:         }else if(count == 1){
  2417                           	goto	l4378
  2418  007D  28AF               	
  2419                           l251:	
  2420  007E                     	
  2421                           l4370:	
  2422  007E                     	bcf	status, 5	;RP0=0, select bank0
  2423  007E  1283               		decf	((_count)),w
  2424  007F  036D               	btfss	status,2
  2425  0080  1D03               	goto	u6671
  2426  0081  2883               	goto	u6670
  2427  0082  2884               u6671:
  2428  0083                     	goto	l4374
  2429  0083  2895               u6670:
  2430  0084                     	line	109
  2431                           	
  2432                           l4372:	
  2433  0084                     ;mainM.c: 109:             alarm = I2C_Master_Read(0);
  2434                           	movlw	0
  2435  0084  3000               	movwf	(I2C_Master_Read@a)
  2436  0085  00A0               	movwf	(I2C_Master_Read@a+1)
  2437  0086  00A1               	fcall	_I2C_Master_Read
  2438  0087  160A  118A  2204  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2439  008C  1283               	bcf	status, 6	;RP1=0, select bank0
  2440  008D  1303               	movf	(0+(?_I2C_Master_Read)),w
  2441  008E  0820               	bsf	status, 5	;RP0=1, select bank1
  2442  008F  1683               	bcf	status, 6	;RP1=0, select bank1
  2443  0090  1303               	movwf	(??_main+0)^080h+0
  2444  0091  00D5               	movf	(??_main+0)^080h+0,w
  2445  0092  0855               	movwf	(_alarm)^080h
  2446  0093  00BD               	line	110
  2447                           ;mainM.c: 110:         }else if(count == 2){
  2448                           	goto	l4378
  2449  0094  28AF               	
  2450                           l253:	
  2451  0095                     	
  2452                           l4374:	
  2453  0095                     		movlw	2
  2454  0095  3002               	bcf	status, 5	;RP0=0, select bank0
  2455  0096  1283               	xorwf	((_count)),w
  2456  0097  066D               	btfss	status,2
  2457  0098  1D03               	goto	u6681
  2458  0099  289B               	goto	u6680
  2459  009A  289C               u6681:
  2460  009B                     	goto	l4378
  2461  009B  28AF               u6680:
  2462  009C                     	line	111
  2463                           	
  2464                           l4376:	
  2465  009C                     ;mainM.c: 111:             hall = I2C_Master_Read(0);
  2466                           	movlw	0
  2467  009C  3000               	movwf	(I2C_Master_Read@a)
  2468  009D  00A0               	movwf	(I2C_Master_Read@a+1)
  2469  009E  00A1               	fcall	_I2C_Master_Read
  2470  009F  160A  118A  2204  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2471  00A4  1283               	bcf	status, 6	;RP1=0, select bank0
  2472  00A5  1303               	movf	(0+(?_I2C_Master_Read)),w
  2473  00A6  0820               	bsf	status, 5	;RP0=1, select bank1
  2474  00A7  1683               	bcf	status, 6	;RP1=0, select bank1
  2475  00A8  1303               	movwf	(??_main+0)^080h+0
  2476  00A9  00D5               	movf	(??_main+0)^080h+0,w
  2477  00AA  0855               	movwf	(_hall)
  2478  00AB  00F4               	goto	l4378
  2479  00AC  28AF               	line	112
  2480                           ;mainM.c: 112:         }
  2481                           	
  2482                           l255:	
  2483  00AD                     	goto	l4378
  2484  00AD  28AF               	
  2485                           l254:	
  2486  00AE                     	goto	l4378
  2487  00AE  28AF               	
  2488                           l252:	
  2489  00AF                     	line	113
  2490                           	
  2491                           l4378:	
  2492  00AF                     ;mainM.c: 113:         toggle++;
  2493                           	movlw	low(01h)
  2494  00AF  3001               	bsf	status, 5	;RP0=1, select bank1
  2495  00B0  1683               	bcf	status, 6	;RP1=0, select bank1
  2496  00B1  1303               	movwf	(??_main+0)^080h+0
  2497  00B2  00D5               	movf	(??_main+0)^080h+0,w
  2498  00B3  0855               	addwf	(_toggle)^080h,f
  2499  00B4  07BA               	line	114
  2500                           	
  2501                           l4380:	
  2502  00B5                     ;mainM.c: 114:         I2C_Master_Stop();
  2503                           	fcall	_I2C_Master_Stop
  2504  00B5  120A  118A  27F7  120A  118A  	line	115
  2505                           	
  2506                           l4382:	
  2507  00BA                     ;mainM.c: 115:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2508                           	opt asmopt_push
  2509                           opt asmopt_off
  2510                           movlw	13
  2511  00BA  300D               	bsf	status, 5	;RP0=1, select bank1
  2512  00BB  1683               	bcf	status, 6	;RP1=0, select bank1
  2513  00BC  1303               movwf	((??_main+0)^080h+0+1),f
  2514  00BD  00D6               	movlw	251
  2515  00BE  30FB               movwf	((??_main+0)^080h+0),f
  2516  00BF  00D5               	u7017:
  2517  00C0                     decfsz	((??_main+0)^080h+0),f
  2518  00C0  0BD5               	goto	u7017
  2519  00C1  28C0               	decfsz	((??_main+0)^080h+0+1),f
  2520  00C2  0BD6               	goto	u7017
  2521  00C3  28C0               opt asmopt_pop
  2522                           
  2523                           	line	118
  2524                           	
  2525                           l4384:	
  2526  00C4                     ;mainM.c: 118:         count2 = toggle2%3;
  2527                           	movlw	03h
  2528  00C4  3003               	bcf	status, 5	;RP0=0, select bank0
  2529  00C5  1283               	bcf	status, 6	;RP1=0, select bank0
  2530  00C6  1303               	movwf	(___awmod@divisor)
  2531  00C7  00A0               	movlw	0
  2532  00C8  3000               	movwf	((___awmod@divisor))+1
  2533  00C9  00A1               	bsf	status, 5	;RP0=1, select bank1
  2534  00CA  1683               	bcf	status, 6	;RP1=0, select bank1
  2535  00CB  1303               	movf	(_toggle2)^080h,w
  2536  00CC  0838               	movwf	(??_main+0)^080h+0
  2537  00CD  00D5               	clrf	(??_main+0)^080h+0+1
  2538  00CE  01D6               	movf	0+(??_main+0)^080h+0,w
  2539  00CF  0855               	bcf	status, 5	;RP0=0, select bank0
  2540  00D0  1283               	bcf	status, 6	;RP1=0, select bank0
  2541  00D1  1303               	movwf	(___awmod@dividend)
  2542  00D2  00A2               	bsf	status, 5	;RP0=1, select bank1
  2543  00D3  1683               	bcf	status, 6	;RP1=0, select bank1
  2544  00D4  1303               	movf	1+(??_main+0)^080h+0,w
  2545  00D5  0856               	bcf	status, 5	;RP0=0, select bank0
  2546  00D6  1283               	bcf	status, 6	;RP1=0, select bank0
  2547  00D7  1303               	movwf	(___awmod@dividend+1)
  2548  00D8  00A3               	fcall	___awmod
  2549  00D9  160A  118A  23BF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2550  00DE  1283               	bcf	status, 6	;RP1=0, select bank0
  2551  00DF  1303               	movf	(0+(?___awmod)),w
  2552  00E0  0820               	bsf	status, 5	;RP0=1, select bank1
  2553  00E1  1683               	bcf	status, 6	;RP1=0, select bank1
  2554  00E2  1303               	movwf	(??_main+2)^080h+0
  2555  00E3  00D7               	movf	(??_main+2)^080h+0,w
  2556  00E4  0857               	movwf	(_count2)
  2557  00E5  00F3               	line	119
  2558                           	
  2559                           l4386:	
  2560  00E6                     ;mainM.c: 119:         I2C_Master_Start();
  2561                           	fcall	_I2C_Master_Start
  2562  00E6  160A  118A  2116  120A  118A  	line	120
  2563                           	
  2564                           l4388:	
  2565  00EB                     ;mainM.c: 120:         I2C_Master_Write(0x61);
  2566                           	movlw	061h
  2567  00EB  3061               	bcf	status, 5	;RP0=0, select bank0
  2568  00EC  1283               	bcf	status, 6	;RP1=0, select bank0
  2569  00ED  1303               	movwf	(I2C_Master_Write@d)
  2570  00EE  00A0               	movlw	0
  2571  00EF  3000               	movwf	((I2C_Master_Write@d))+1
  2572  00F0  00A1               	fcall	_I2C_Master_Write
  2573  00F1  160A  118A  211F  120A  118A  	line	121
  2574                           	
  2575                           l4390:	
  2576  00F6                     ;mainM.c: 121:         if(count2 == 0){
  2577                           	movf	((_count2)),w
  2578  00F6  0873               	btfss	status,2
  2579  00F7  1D03               	goto	u6691
  2580  00F8  28FA               	goto	u6690
  2581  00F9  28FB               u6691:
  2582  00FA                     	goto	l4394
  2583  00FA  290E               u6690:
  2584  00FB                     	line	122
  2585                           	
  2586                           l4392:	
  2587  00FB                     ;mainM.c: 122:             signal = I2C_Master_Read(0);
  2588                           	movlw	0
  2589  00FB  3000               	bcf	status, 5	;RP0=0, select bank0
  2590  00FC  1283               	bcf	status, 6	;RP1=0, select bank0
  2591  00FD  1303               	movwf	(I2C_Master_Read@a)
  2592  00FE  00A0               	movwf	(I2C_Master_Read@a+1)
  2593  00FF  00A1               	fcall	_I2C_Master_Read
  2594  0100  160A  118A  2204  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2595  0105  1283               	bcf	status, 6	;RP1=0, select bank0
  2596  0106  1303               	movf	(0+(?_I2C_Master_Read)),w
  2597  0107  0820               	bsf	status, 5	;RP0=1, select bank1
  2598  0108  1683               	bcf	status, 6	;RP1=0, select bank1
  2599  0109  1303               	movwf	(??_main+0)^080h+0
  2600  010A  00D5               	movf	(??_main+0)^080h+0,w
  2601  010B  0855               	movwf	(_signal)
  2602  010C  00F2               	line	123
  2603                           ;mainM.c: 123:         }else if(count2 == 1){
  2604                           	goto	l4402
  2605  010D  2941               	
  2606                           l256:	
  2607  010E                     	
  2608                           l4394:	
  2609  010E                     		decf	((_count2)),w
  2610  010E  0373               	btfss	status,2
  2611  010F  1D03               	goto	u6701
  2612  0110  2912               	goto	u6700
  2613  0111  2913               u6701:
  2614  0112                     	goto	l4398
  2615  0112  2926               u6700:
  2616  0113                     	line	124
  2617                           	
  2618                           l4396:	
  2619  0113                     ;mainM.c: 124:             adcP = I2C_Master_Read(0);
  2620                           	movlw	0
  2621  0113  3000               	bcf	status, 5	;RP0=0, select bank0
  2622  0114  1283               	bcf	status, 6	;RP1=0, select bank0
  2623  0115  1303               	movwf	(I2C_Master_Read@a)
  2624  0116  00A0               	movwf	(I2C_Master_Read@a+1)
  2625  0117  00A1               	fcall	_I2C_Master_Read
  2626  0118  160A  118A  2204  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2627  011D  1283               	bcf	status, 6	;RP1=0, select bank0
  2628  011E  1303               	movf	(0+(?_I2C_Master_Read)),w
  2629  011F  0820               	bsf	status, 5	;RP0=1, select bank1
  2630  0120  1683               	bcf	status, 6	;RP1=0, select bank1
  2631  0121  1303               	movwf	(??_main+0)^080h+0
  2632  0122  00D5               	movf	(??_main+0)^080h+0,w
  2633  0123  0855               	movwf	(_adcP)^080h
  2634  0124  00B7               	line	125
  2635                           ;mainM.c: 125:         }else if(count2 == 2){
  2636                           	goto	l4402
  2637  0125  2941               	
  2638                           l258:	
  2639  0126                     	
  2640                           l4398:	
  2641  0126                     		movlw	2
  2642  0126  3002               	xorwf	((_count2)),w
  2643  0127  0673               	btfss	status,2
  2644  0128  1D03               	goto	u6711
  2645  0129  292B               	goto	u6710
  2646  012A  292C               u6711:
  2647  012B                     	goto	l4402
  2648  012B  2941               u6710:
  2649  012C                     	line	126
  2650                           	
  2651                           l4400:	
  2652  012C                     ;mainM.c: 126:             mov = I2C_Master_Read(0);
  2653                           	movlw	0
  2654  012C  3000               	bcf	status, 5	;RP0=0, select bank0
  2655  012D  1283               	bcf	status, 6	;RP1=0, select bank0
  2656  012E  1303               	movwf	(I2C_Master_Read@a)
  2657  012F  00A0               	movwf	(I2C_Master_Read@a+1)
  2658  0130  00A1               	fcall	_I2C_Master_Read
  2659  0131  160A  118A  2204  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2660  0136  1283               	bcf	status, 6	;RP1=0, select bank0
  2661  0137  1303               	movf	(0+(?_I2C_Master_Read)),w
  2662  0138  0820               	bsf	status, 5	;RP0=1, select bank1
  2663  0139  1683               	bcf	status, 6	;RP1=0, select bank1
  2664  013A  1303               	movwf	(??_main+0)^080h+0
  2665  013B  00D5               	movf	(??_main+0)^080h+0,w
  2666  013C  0855               	movwf	(_mov)
  2667  013D  00F1               	goto	l4402
  2668  013E  2941               	line	127
  2669                           ;mainM.c: 127:         }
  2670                           	
  2671                           l260:	
  2672  013F                     	goto	l4402
  2673  013F  2941               	
  2674                           l259:	
  2675  0140                     	goto	l4402
  2676  0140  2941               	
  2677                           l257:	
  2678  0141                     	line	128
  2679                           	
  2680                           l4402:	
  2681  0141                     ;mainM.c: 128:         toggle2++;
  2682                           	movlw	low(01h)
  2683  0141  3001               	bsf	status, 5	;RP0=1, select bank1
  2684  0142  1683               	bcf	status, 6	;RP1=0, select bank1
  2685  0143  1303               	movwf	(??_main+0)^080h+0
  2686  0144  00D5               	movf	(??_main+0)^080h+0,w
  2687  0145  0855               	addwf	(_toggle2)^080h,f
  2688  0146  07B8               	line	129
  2689                           	
  2690                           l4404:	
  2691  0147                     ;mainM.c: 129:         I2C_Master_Stop();
  2692                           	fcall	_I2C_Master_Stop
  2693  0147  120A  118A  27F7  120A  118A  	line	130
  2694                           	
  2695                           l4406:	
  2696  014C                     ;mainM.c: 130:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2697                           	opt asmopt_push
  2698                           opt asmopt_off
  2699                           movlw	13
  2700  014C  300D               	bsf	status, 5	;RP0=1, select bank1
  2701  014D  1683               	bcf	status, 6	;RP1=0, select bank1
  2702  014E  1303               movwf	((??_main+0)^080h+0+1),f
  2703  014F  00D6               	movlw	251
  2704  0150  30FB               movwf	((??_main+0)^080h+0),f
  2705  0151  00D5               	u7027:
  2706  0152                     decfsz	((??_main+0)^080h+0),f
  2707  0152  0BD5               	goto	u7027
  2708  0153  2952               	decfsz	((??_main+0)^080h+0+1),f
  2709  0154  0BD6               	goto	u7027
  2710  0155  2952               opt asmopt_pop
  2711                           
  2712                           	line	133
  2713                           	
  2714                           l4408:	
  2715  0156                     ;mainM.c: 133:         count3 = toggle3%2;
  2716                           	bsf	status, 5	;RP0=1, select bank1
  2717  0156  1683               	bcf	status, 6	;RP1=0, select bank1
  2718  0157  1303               	movf	(_toggle3)^080h,w
  2719  0158  0836               	andlw	01h
  2720  0159  3901               	movwf	(??_main+0)^080h+0
  2721  015A  00D5               	movf	(??_main+0)^080h+0,w
  2722  015B  0855               	movwf	(_count3)^080h
  2723  015C  00B5               	line	134
  2724                           	
  2725                           l4410:	
  2726  015D                     ;mainM.c: 134:         I2C_Master_Start();
  2727                           	fcall	_I2C_Master_Start
  2728  015D  160A  118A  2116  120A  118A  	line	135
  2729                           	
  2730                           l4412:	
  2731  0162                     ;mainM.c: 135:         I2C_Master_Write(0x71);
  2732                           	movlw	071h
  2733  0162  3071               	bcf	status, 5	;RP0=0, select bank0
  2734  0163  1283               	bcf	status, 6	;RP1=0, select bank0
  2735  0164  1303               	movwf	(I2C_Master_Write@d)
  2736  0165  00A0               	movlw	0
  2737  0166  3000               	movwf	((I2C_Master_Write@d))+1
  2738  0167  00A1               	fcall	_I2C_Master_Write
  2739  0168  160A  118A  211F  120A  118A  	line	136
  2740                           	
  2741                           l4414:	
  2742  016D                     ;mainM.c: 136:         if(count3 == 0){
  2743                           	bsf	status, 5	;RP0=1, select bank1
  2744  016D  1683               	bcf	status, 6	;RP1=0, select bank1
  2745  016E  1303               	movf	((_count3)^080h),w
  2746  016F  0835               	btfss	status,2
  2747  0170  1D03               	goto	u6721
  2748  0171  2973               	goto	u6720
  2749  0172  2974               u6721:
  2750  0173                     	goto	l4418
  2751  0173  2987               u6720:
  2752  0174                     	line	137
  2753                           	
  2754                           l4416:	
  2755  0174                     ;mainM.c: 137:             ir = I2C_Master_Read(0);
  2756                           	movlw	0
  2757  0174  3000               	bcf	status, 5	;RP0=0, select bank0
  2758  0175  1283               	bcf	status, 6	;RP1=0, select bank0
  2759  0176  1303               	movwf	(I2C_Master_Read@a)
  2760  0177  00A0               	movwf	(I2C_Master_Read@a+1)
  2761  0178  00A1               	fcall	_I2C_Master_Read
  2762  0179  160A  118A  2204  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2763  017E  1283               	bcf	status, 6	;RP1=0, select bank0
  2764  017F  1303               	movf	(0+(?_I2C_Master_Read)),w
  2765  0180  0820               	bsf	status, 5	;RP0=1, select bank1
  2766  0181  1683               	bcf	status, 6	;RP1=0, select bank1
  2767  0182  1303               	movwf	(??_main+0)^080h+0
  2768  0183  00D5               	movf	(??_main+0)^080h+0,w
  2769  0184  0855               	movwf	(_ir)^080h
  2770  0185  00B4               	line	138
  2771                           ;mainM.c: 138:         }else if(count3 == 1){
  2772                           	goto	l4422
  2773  0186  29A0               	
  2774                           l261:	
  2775  0187                     	
  2776                           l4418:	
  2777  0187                     		decf	((_count3)^080h),w
  2778  0187  0335               	btfss	status,2
  2779  0188  1D03               	goto	u6731
  2780  0189  298B               	goto	u6730
  2781  018A  298C               u6731:
  2782  018B                     	goto	l4422
  2783  018B  29A0               u6730:
  2784  018C                     	line	139
  2785                           	
  2786                           l4420:	
  2787  018C                     ;mainM.c: 139:             garage = I2C_Master_Read(0);
  2788                           	movlw	0
  2789  018C  3000               	bcf	status, 5	;RP0=0, select bank0
  2790  018D  1283               	bcf	status, 6	;RP1=0, select bank0
  2791  018E  1303               	movwf	(I2C_Master_Read@a)
  2792  018F  00A0               	movwf	(I2C_Master_Read@a+1)
  2793  0190  00A1               	fcall	_I2C_Master_Read
  2794  0191  160A  118A  2204  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2795  0196  1283               	bcf	status, 6	;RP1=0, select bank0
  2796  0197  1303               	movf	(0+(?_I2C_Master_Read)),w
  2797  0198  0820               	bsf	status, 5	;RP0=1, select bank1
  2798  0199  1683               	bcf	status, 6	;RP1=0, select bank1
  2799  019A  1303               	movwf	(??_main+0)^080h+0
  2800  019B  00D5               	movf	(??_main+0)^080h+0,w
  2801  019C  0855               	movwf	(_garage)^080h
  2802  019D  00B3               	goto	l4422
  2803  019E  29A0               	line	140
  2804                           ;mainM.c: 140:         }
  2805                           	
  2806                           l263:	
  2807  019F                     	goto	l4422
  2808  019F  29A0               	
  2809                           l262:	
  2810  01A0                     	line	141
  2811                           	
  2812                           l4422:	
  2813  01A0                     ;mainM.c: 141:         toggle3++;
  2814                           	movlw	low(01h)
  2815  01A0  3001               	movwf	(??_main+0)^080h+0
  2816  01A1  00D5               	movf	(??_main+0)^080h+0,w
  2817  01A2  0855               	addwf	(_toggle3)^080h,f
  2818  01A3  07B6               	line	142
  2819                           	
  2820                           l4424:	
  2821  01A4                     ;mainM.c: 142:         I2C_Master_Stop();
  2822                           	fcall	_I2C_Master_Stop
  2823  01A4  120A  118A  27F7  120A  118A  	line	143
  2824                           	
  2825                           l4426:	
  2826  01A9                     ;mainM.c: 143:         _delay((unsigned long)((10)*(4000000/4000.0)));
  2827                           	opt asmopt_push
  2828                           opt asmopt_off
  2829                           movlw	13
  2830  01A9  300D               	bsf	status, 5	;RP0=1, select bank1
  2831  01AA  1683               	bcf	status, 6	;RP1=0, select bank1
  2832  01AB  1303               movwf	((??_main+0)^080h+0+1),f
  2833  01AC  00D6               	movlw	251
  2834  01AD  30FB               movwf	((??_main+0)^080h+0),f
  2835  01AE  00D5               	u7037:
  2836  01AF                     decfsz	((??_main+0)^080h+0),f
  2837  01AF  0BD5               	goto	u7037
  2838  01B0  29AF               	decfsz	((??_main+0)^080h+0+1),f
  2839  01B1  0BD6               	goto	u7037
  2840  01B2  29AF               opt asmopt_pop
  2841                           
  2842                           	line	147
  2843                           	
  2844                           l4428:	
  2845  01B3                     ;mainM.c: 147:         sensorF1 = (float) adcT * 5/255;
  2846                           	movlw	0x43
  2847  01B3  3043               	bcf	status, 5	;RP0=0, select bank0
  2848  01B4  1283               	bcf	status, 6	;RP1=0, select bank0
  2849  01B5  1303               	movwf	(___fldiv@a+3)
  2850  01B6  00E7               	movlw	0x7f
  2851  01B7  307F               	movwf	(___fldiv@a+2)
  2852  01B8  00E6               	movlw	0x0
  2853  01B9  3000               	movwf	(___fldiv@a+1)
  2854  01BA  00E5               	movlw	0x0
  2855  01BB  3000               	movwf	(___fldiv@a)
  2856  01BC  00E4               
  2857                           	movlw	0x40
  2858  01BD  3040               	movwf	(___flmul@b+3)
  2859  01BE  00CD               	movlw	0xa0
  2860  01BF  30A0               	movwf	(___flmul@b+2)
  2861  01C0  00CC               	movlw	0x0
  2862  01C1  3000               	movwf	(___flmul@b+1)
  2863  01C2  00CB               	movlw	0x0
  2864  01C3  3000               	movwf	(___flmul@b)
  2865  01C4  00CA               
  2866                           	bsf	status, 5	;RP0=1, select bank1
  2867  01C5  1683               	bcf	status, 6	;RP1=0, select bank1
  2868  01C6  1303               	movf	(_adcT)^080h,w
  2869  01C7  0840               	movwf	(??_main+0)^080h+0
  2870  01C8  00D5               	clrf	(??_main+0)^080h+0+1
  2871  01C9  01D6               	clrf	(??_main+0)^080h+0+2
  2872  01CA  01D7               	clrf	(??_main+0)^080h+0+3
  2873  01CB  01D8               	movf	3+(??_main+0)^080h+0,w
  2874  01CC  0858               	bcf	status, 5	;RP0=0, select bank0
  2875  01CD  1283               	bcf	status, 6	;RP1=0, select bank0
  2876  01CE  1303               	movwf	(___xxtofl@val+3)
  2877  01CF  00A3               	bsf	status, 5	;RP0=1, select bank1
  2878  01D0  1683               	bcf	status, 6	;RP1=0, select bank1
  2879  01D1  1303               	movf	2+(??_main+0)^080h+0,w
  2880  01D2  0857               	bcf	status, 5	;RP0=0, select bank0
  2881  01D3  1283               	bcf	status, 6	;RP1=0, select bank0
  2882  01D4  1303               	movwf	(___xxtofl@val+2)
  2883  01D5  00A2               	bsf	status, 5	;RP0=1, select bank1
  2884  01D6  1683               	bcf	status, 6	;RP1=0, select bank1
  2885  01D7  1303               	movf	1+(??_main+0)^080h+0,w
  2886  01D8  0856               	bcf	status, 5	;RP0=0, select bank0
  2887  01D9  1283               	bcf	status, 6	;RP1=0, select bank0
  2888  01DA  1303               	movwf	(___xxtofl@val+1)
  2889  01DB  00A1               	bsf	status, 5	;RP0=1, select bank1
  2890  01DC  1683               	bcf	status, 6	;RP1=0, select bank1
  2891  01DD  1303               	movf	0+(??_main+0)^080h+0,w
  2892  01DE  0855               	bcf	status, 5	;RP0=0, select bank0
  2893  01DF  1283               	bcf	status, 6	;RP1=0, select bank0
  2894  01E0  1303               	movwf	(___xxtofl@val)
  2895  01E1  00A0               
  2896                           	movlw	low(0)
  2897  01E2  3000               	fcall	___xxtofl
  2898  01E3  120A  118A  26C0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2899  01E8  1283               	bcf	status, 6	;RP1=0, select bank0
  2900  01E9  1303               	movf	(3+(?___xxtofl)),w
  2901  01EA  0823               	movwf	(___flmul@a+3)
  2902  01EB  00D1               	movf	(2+(?___xxtofl)),w
  2903  01EC  0822               	movwf	(___flmul@a+2)
  2904  01ED  00D0               	movf	(1+(?___xxtofl)),w
  2905  01EE  0821               	movwf	(___flmul@a+1)
  2906  01EF  00CF               	movf	(0+(?___xxtofl)),w
  2907  01F0  0820               	movwf	(___flmul@a)
  2908  01F1  00CE               
  2909                           	fcall	___flmul
  2910  01F2  120A  158A  248B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2911  01F7  1283               	bcf	status, 6	;RP1=0, select bank0
  2912  01F8  1303               	movf	(3+(?___flmul)),w
  2913  01F9  084D               	movwf	(___fldiv@b+3)
  2914  01FA  00EB               	movf	(2+(?___flmul)),w
  2915  01FB  084C               	movwf	(___fldiv@b+2)
  2916  01FC  00EA               	movf	(1+(?___flmul)),w
  2917  01FD  084B               	movwf	(___fldiv@b+1)
  2918  01FE  00E9               	movf	(0+(?___flmul)),w
  2919  01FF  084A               	movwf	(___fldiv@b)
  2920  0200  00E8               
  2921                           	fcall	___fldiv
  2922  0201  120A  158A  21C8  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2923  0206  1283               	bcf	status, 6	;RP1=0, select bank0
  2924  0207  1303               	movf	(3+(?___fldiv)),w
  2925  0208  0867               	bsf	status, 5	;RP0=1, select bank1
  2926  0209  1683               	bcf	status, 6	;RP1=0, select bank1
  2927  020A  1303               	movwf	(_sensorF1+3)^080h
  2928  020B  00AF               	bcf	status, 5	;RP0=0, select bank0
  2929  020C  1283               	bcf	status, 6	;RP1=0, select bank0
  2930  020D  1303               	movf	(2+(?___fldiv)),w
  2931  020E  0866               	bsf	status, 5	;RP0=1, select bank1
  2932  020F  1683               	bcf	status, 6	;RP1=0, select bank1
  2933  0210  1303               	movwf	(_sensorF1+2)^080h
  2934  0211  00AE               	bcf	status, 5	;RP0=0, select bank0
  2935  0212  1283               	bcf	status, 6	;RP1=0, select bank0
  2936  0213  1303               	movf	(1+(?___fldiv)),w
  2937  0214  0865               	bsf	status, 5	;RP0=1, select bank1
  2938  0215  1683               	bcf	status, 6	;RP1=0, select bank1
  2939  0216  1303               	movwf	(_sensorF1+1)^080h
  2940  0217  00AD               	bcf	status, 5	;RP0=0, select bank0
  2941  0218  1283               	bcf	status, 6	;RP1=0, select bank0
  2942  0219  1303               	movf	(0+(?___fldiv)),w
  2943  021A  0864               	bsf	status, 5	;RP0=1, select bank1
  2944  021B  1683               	bcf	status, 6	;RP1=0, select bank1
  2945  021C  1303               	movwf	(_sensorF1)^080h
  2946  021D  00AC               
  2947                           	line	148
  2948                           	
  2949                           l4430:	
  2950  021E                     ;mainM.c: 148:         sensorF2 = (float) sensorF1/0.01;
  2951                           	movlw	0x3c
  2952  021E  303C               	bcf	status, 5	;RP0=0, select bank0
  2953  021F  1283               	bcf	status, 6	;RP1=0, select bank0
  2954  0220  1303               	movwf	(___fldiv@a+3)
  2955  0221  00E7               	movlw	0x23
  2956  0222  3023               	movwf	(___fldiv@a+2)
  2957  0223  00E6               	movlw	0xd7
  2958  0224  30D7               	movwf	(___fldiv@a+1)
  2959  0225  00E5               	movlw	0xa
  2960  0226  300A               	movwf	(___fldiv@a)
  2961  0227  00E4               
  2962                           	bsf	status, 5	;RP0=1, select bank1
  2963  0228  1683               	bcf	status, 6	;RP1=0, select bank1
  2964  0229  1303               	movf	(_sensorF1+3)^080h,w
  2965  022A  082F               	bcf	status, 5	;RP0=0, select bank0
  2966  022B  1283               	bcf	status, 6	;RP1=0, select bank0
  2967  022C  1303               	movwf	(___fldiv@b+3)
  2968  022D  00EB               	bsf	status, 5	;RP0=1, select bank1
  2969  022E  1683               	bcf	status, 6	;RP1=0, select bank1
  2970  022F  1303               	movf	(_sensorF1+2)^080h,w
  2971  0230  082E               	bcf	status, 5	;RP0=0, select bank0
  2972  0231  1283               	bcf	status, 6	;RP1=0, select bank0
  2973  0232  1303               	movwf	(___fldiv@b+2)
  2974  0233  00EA               	bsf	status, 5	;RP0=1, select bank1
  2975  0234  1683               	bcf	status, 6	;RP1=0, select bank1
  2976  0235  1303               	movf	(_sensorF1+1)^080h,w
  2977  0236  082D               	bcf	status, 5	;RP0=0, select bank0
  2978  0237  1283               	bcf	status, 6	;RP1=0, select bank0
  2979  0238  1303               	movwf	(___fldiv@b+1)
  2980  0239  00E9               	bsf	status, 5	;RP0=1, select bank1
  2981  023A  1683               	bcf	status, 6	;RP1=0, select bank1
  2982  023B  1303               	movf	(_sensorF1)^080h,w
  2983  023C  082C               	bcf	status, 5	;RP0=0, select bank0
  2984  023D  1283               	bcf	status, 6	;RP1=0, select bank0
  2985  023E  1303               	movwf	(___fldiv@b)
  2986  023F  00E8               
  2987                           	fcall	___fldiv
  2988  0240  120A  158A  21C8  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  2989  0245  1283               	bcf	status, 6	;RP1=0, select bank0
  2990  0246  1303               	movf	(3+(?___fldiv)),w
  2991  0247  0867               	bsf	status, 5	;RP0=1, select bank1
  2992  0248  1683               	bcf	status, 6	;RP1=0, select bank1
  2993  0249  1303               	movwf	(_sensorF2+3)^080h
  2994  024A  00A7               	bcf	status, 5	;RP0=0, select bank0
  2995  024B  1283               	bcf	status, 6	;RP1=0, select bank0
  2996  024C  1303               	movf	(2+(?___fldiv)),w
  2997  024D  0866               	bsf	status, 5	;RP0=1, select bank1
  2998  024E  1683               	bcf	status, 6	;RP1=0, select bank1
  2999  024F  1303               	movwf	(_sensorF2+2)^080h
  3000  0250  00A6               	bcf	status, 5	;RP0=0, select bank0
  3001  0251  1283               	bcf	status, 6	;RP1=0, select bank0
  3002  0252  1303               	movf	(1+(?___fldiv)),w
  3003  0253  0865               	bsf	status, 5	;RP0=1, select bank1
  3004  0254  1683               	bcf	status, 6	;RP1=0, select bank1
  3005  0255  1303               	movwf	(_sensorF2+1)^080h
  3006  0256  00A5               	bcf	status, 5	;RP0=0, select bank0
  3007  0257  1283               	bcf	status, 6	;RP1=0, select bank0
  3008  0258  1303               	movf	(0+(?___fldiv)),w
  3009  0259  0864               	bsf	status, 5	;RP0=1, select bank1
  3010  025A  1683               	bcf	status, 6	;RP1=0, select bank1
  3011  025B  1303               	movwf	(_sensorF2)^080h
  3012  025C  00A4               
  3013                           	line	149
  3014                           	
  3015                           l4432:	
  3016  025D                     ;mainM.c: 149:         entero1 = (int) sensorF2;
  3017                           	movf	(_sensorF2+3)^080h,w
  3018  025D  0827               	bcf	status, 5	;RP0=0, select bank0
  3019  025E  1283               	bcf	status, 6	;RP1=0, select bank0
  3020  025F  1303               	movwf	(___fltol@f1+3)
  3021  0260  00A3               	bsf	status, 5	;RP0=1, select bank1
  3022  0261  1683               	bcf	status, 6	;RP1=0, select bank1
  3023  0262  1303               	movf	(_sensorF2+2)^080h,w
  3024  0263  0826               	bcf	status, 5	;RP0=0, select bank0
  3025  0264  1283               	bcf	status, 6	;RP1=0, select bank0
  3026  0265  1303               	movwf	(___fltol@f1+2)
  3027  0266  00A2               	bsf	status, 5	;RP0=1, select bank1
  3028  0267  1683               	bcf	status, 6	;RP1=0, select bank1
  3029  0268  1303               	movf	(_sensorF2+1)^080h,w
  3030  0269  0825               	bcf	status, 5	;RP0=0, select bank0
  3031  026A  1283               	bcf	status, 6	;RP1=0, select bank0
  3032  026B  1303               	movwf	(___fltol@f1+1)
  3033  026C  00A1               	bsf	status, 5	;RP0=1, select bank1
  3034  026D  1683               	bcf	status, 6	;RP1=0, select bank1
  3035  026E  1303               	movf	(_sensorF2)^080h,w
  3036  026F  0824               	bcf	status, 5	;RP0=0, select bank0
  3037  0270  1283               	bcf	status, 6	;RP1=0, select bank0
  3038  0271  1303               	movwf	(___fltol@f1)
  3039  0272  00A0               
  3040                           	fcall	___fltol
  3041  0273  120A  158A  212C  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3042  0278  1283               	bcf	status, 6	;RP1=0, select bank0
  3043  0279  1303               	movf	(0+(?___fltol)),w
  3044  027A  0820               	bsf	status, 5	;RP0=1, select bank1
  3045  027B  1683               	bcf	status, 6	;RP1=0, select bank1
  3046  027C  1303               	movwf	(??_main+0)^080h+0
  3047  027D  00D5               	movf	(??_main+0)^080h+0,w
  3048  027E  0855               	bcf	status, 5	;RP0=0, select bank0
  3049  027F  1283               	bcf	status, 6	;RP1=0, select bank0
  3050  0280  1303               	movwf	(_entero1)
  3051  0281  00EE               	line	150
  3052                           	
  3053                           l4434:	
  3054  0282                     ;mainM.c: 150:         float1 = (sensorF2 - entero1)*100;
  3055                           	movlw	0x42
  3056  0282  3042               	movwf	(___flmul@b+3)
  3057  0283  00CD               	movlw	0xc8
  3058  0284  30C8               	movwf	(___flmul@b+2)
  3059  0285  00CC               	movlw	0x0
  3060  0286  3000               	movwf	(___flmul@b+1)
  3061  0287  00CB               	movlw	0x0
  3062  0288  3000               	movwf	(___flmul@b)
  3063  0289  00CA               
  3064                           	bsf	status, 5	;RP0=1, select bank1
  3065  028A  1683               	bcf	status, 6	;RP1=0, select bank1
  3066  028B  1303               	movf	(_sensorF2+3)^080h,w
  3067  028C  0827               	bcf	status, 5	;RP0=0, select bank0
  3068  028D  1283               	bcf	status, 6	;RP1=0, select bank0
  3069  028E  1303               	movwf	(___fladd@b+3)
  3070  028F  00B5               	bsf	status, 5	;RP0=1, select bank1
  3071  0290  1683               	bcf	status, 6	;RP1=0, select bank1
  3072  0291  1303               	movf	(_sensorF2+2)^080h,w
  3073  0292  0826               	bcf	status, 5	;RP0=0, select bank0
  3074  0293  1283               	bcf	status, 6	;RP1=0, select bank0
  3075  0294  1303               	movwf	(___fladd@b+2)
  3076  0295  00B4               	bsf	status, 5	;RP0=1, select bank1
  3077  0296  1683               	bcf	status, 6	;RP1=0, select bank1
  3078  0297  1303               	movf	(_sensorF2+1)^080h,w
  3079  0298  0825               	bcf	status, 5	;RP0=0, select bank0
  3080  0299  1283               	bcf	status, 6	;RP1=0, select bank0
  3081  029A  1303               	movwf	(___fladd@b+1)
  3082  029B  00B3               	bsf	status, 5	;RP0=1, select bank1
  3083  029C  1683               	bcf	status, 6	;RP1=0, select bank1
  3084  029D  1303               	movf	(_sensorF2)^080h,w
  3085  029E  0824               	bcf	status, 5	;RP0=0, select bank0
  3086  029F  1283               	bcf	status, 6	;RP1=0, select bank0
  3087  02A0  1303               	movwf	(___fladd@b)
  3088  02A1  00B2               
  3089                           	movf	(_entero1),w
  3090  02A2  086E               	bsf	status, 5	;RP0=1, select bank1
  3091  02A3  1683               	bcf	status, 6	;RP1=0, select bank1
  3092  02A4  1303               	movwf	(??_main+0)^080h+0
  3093  02A5  00D5               	clrf	(??_main+0)^080h+0+1
  3094  02A6  01D6               	clrf	(??_main+0)^080h+0+2
  3095  02A7  01D7               	clrf	(??_main+0)^080h+0+3
  3096  02A8  01D8               	movf	3+(??_main+0)^080h+0,w
  3097  02A9  0858               	bcf	status, 5	;RP0=0, select bank0
  3098  02AA  1283               	bcf	status, 6	;RP1=0, select bank0
  3099  02AB  1303               	movwf	(___xxtofl@val+3)
  3100  02AC  00A3               	bsf	status, 5	;RP0=1, select bank1
  3101  02AD  1683               	bcf	status, 6	;RP1=0, select bank1
  3102  02AE  1303               	movf	2+(??_main+0)^080h+0,w
  3103  02AF  0857               	bcf	status, 5	;RP0=0, select bank0
  3104  02B0  1283               	bcf	status, 6	;RP1=0, select bank0
  3105  02B1  1303               	movwf	(___xxtofl@val+2)
  3106  02B2  00A2               	bsf	status, 5	;RP0=1, select bank1
  3107  02B3  1683               	bcf	status, 6	;RP1=0, select bank1
  3108  02B4  1303               	movf	1+(??_main+0)^080h+0,w
  3109  02B5  0856               	bcf	status, 5	;RP0=0, select bank0
  3110  02B6  1283               	bcf	status, 6	;RP1=0, select bank0
  3111  02B7  1303               	movwf	(___xxtofl@val+1)
  3112  02B8  00A1               	bsf	status, 5	;RP0=1, select bank1
  3113  02B9  1683               	bcf	status, 6	;RP1=0, select bank1
  3114  02BA  1303               	movf	0+(??_main+0)^080h+0,w
  3115  02BB  0855               	bcf	status, 5	;RP0=0, select bank0
  3116  02BC  1283               	bcf	status, 6	;RP1=0, select bank0
  3117  02BD  1303               	movwf	(___xxtofl@val)
  3118  02BE  00A0               
  3119                           	movlw	low(01h)
  3120  02BF  3001               	fcall	___xxtofl
  3121  02C0  120A  118A  26C0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3122  02C5  1283               	bcf	status, 6	;RP1=0, select bank0
  3123  02C6  1303               	movf	(3+(?___xxtofl)),w
  3124  02C7  0823               	movwf	(___flneg@f1+3)
  3125  02C8  00B1               	movf	(2+(?___xxtofl)),w
  3126  02C9  0822               	movwf	(___flneg@f1+2)
  3127  02CA  00B0               	movf	(1+(?___xxtofl)),w
  3128  02CB  0821               	movwf	(___flneg@f1+1)
  3129  02CC  00AF               	movf	(0+(?___xxtofl)),w
  3130  02CD  0820               	movwf	(___flneg@f1)
  3131  02CE  00AE               
  3132                           	fcall	___flneg
  3133  02CF  160A  118A  2138  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3134  02D4  1283               	bcf	status, 6	;RP1=0, select bank0
  3135  02D5  1303               	movf	(3+(?___flneg)),w
  3136  02D6  0831               	movwf	(___fladd@a+3)
  3137  02D7  00B9               	movf	(2+(?___flneg)),w
  3138  02D8  0830               	movwf	(___fladd@a+2)
  3139  02D9  00B8               	movf	(1+(?___flneg)),w
  3140  02DA  082F               	movwf	(___fladd@a+1)
  3141  02DB  00B7               	movf	(0+(?___flneg)),w
  3142  02DC  082E               	movwf	(___fladd@a)
  3143  02DD  00B6               
  3144                           	fcall	___fladd
  3145  02DE  160A  118A  2544  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3146  02E3  1283               	bcf	status, 6	;RP1=0, select bank0
  3147  02E4  1303               	movf	(3+(?___fladd)),w
  3148  02E5  0835               	movwf	(___flmul@a+3)
  3149  02E6  00D1               	movf	(2+(?___fladd)),w
  3150  02E7  0834               	movwf	(___flmul@a+2)
  3151  02E8  00D0               	movf	(1+(?___fladd)),w
  3152  02E9  0833               	movwf	(___flmul@a+1)
  3153  02EA  00CF               	movf	(0+(?___fladd)),w
  3154  02EB  0832               	movwf	(___flmul@a)
  3155  02EC  00CE               
  3156                           	fcall	___flmul
  3157  02ED  120A  158A  248B  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3158  02F2  1283               	bcf	status, 6	;RP1=0, select bank0
  3159  02F3  1303               	movf	(3+(?___flmul)),w
  3160  02F4  084D               	bsf	status, 5	;RP0=1, select bank1
  3161  02F5  1683               	bcf	status, 6	;RP1=0, select bank1
  3162  02F6  1303               	movwf	(_float1+3)^080h
  3163  02F7  00AB               	bcf	status, 5	;RP0=0, select bank0
  3164  02F8  1283               	bcf	status, 6	;RP1=0, select bank0
  3165  02F9  1303               	movf	(2+(?___flmul)),w
  3166  02FA  084C               	bsf	status, 5	;RP0=1, select bank1
  3167  02FB  1683               	bcf	status, 6	;RP1=0, select bank1
  3168  02FC  1303               	movwf	(_float1+2)^080h
  3169  02FD  00AA               	bcf	status, 5	;RP0=0, select bank0
  3170  02FE  1283               	bcf	status, 6	;RP1=0, select bank0
  3171  02FF  1303               	movf	(1+(?___flmul)),w
  3172  0300  084B               	bsf	status, 5	;RP0=1, select bank1
  3173  0301  1683               	bcf	status, 6	;RP1=0, select bank1
  3174  0302  1303               	movwf	(_float1+1)^080h
  3175  0303  00A9               	bcf	status, 5	;RP0=0, select bank0
  3176  0304  1283               	bcf	status, 6	;RP1=0, select bank0
  3177  0305  1303               	movf	(0+(?___flmul)),w
  3178  0306  084A               	bsf	status, 5	;RP0=1, select bank1
  3179  0307  1683               	bcf	status, 6	;RP1=0, select bank1
  3180  0308  1303               	movwf	(_float1)^080h
  3181  0309  00A8               
  3182                           	line	151
  3183                           	
  3184                           l4436:	
  3185  030A                     ;mainM.c: 151:         dec1 = (int) float1;
  3186                           	movf	(_float1+3)^080h,w
  3187  030A  082B               	bcf	status, 5	;RP0=0, select bank0
  3188  030B  1283               	bcf	status, 6	;RP1=0, select bank0
  3189  030C  1303               	movwf	(___fltol@f1+3)
  3190  030D  00A3               	bsf	status, 5	;RP0=1, select bank1
  3191  030E  1683               	bcf	status, 6	;RP1=0, select bank1
  3192  030F  1303               	movf	(_float1+2)^080h,w
  3193  0310  082A               	bcf	status, 5	;RP0=0, select bank0
  3194  0311  1283               	bcf	status, 6	;RP1=0, select bank0
  3195  0312  1303               	movwf	(___fltol@f1+2)
  3196  0313  00A2               	bsf	status, 5	;RP0=1, select bank1
  3197  0314  1683               	bcf	status, 6	;RP1=0, select bank1
  3198  0315  1303               	movf	(_float1+1)^080h,w
  3199  0316  0829               	bcf	status, 5	;RP0=0, select bank0
  3200  0317  1283               	bcf	status, 6	;RP1=0, select bank0
  3201  0318  1303               	movwf	(___fltol@f1+1)
  3202  0319  00A1               	bsf	status, 5	;RP0=1, select bank1
  3203  031A  1683               	bcf	status, 6	;RP1=0, select bank1
  3204  031B  1303               	movf	(_float1)^080h,w
  3205  031C  0828               	bcf	status, 5	;RP0=0, select bank0
  3206  031D  1283               	bcf	status, 6	;RP1=0, select bank0
  3207  031E  1303               	movwf	(___fltol@f1)
  3208  031F  00A0               
  3209                           	fcall	___fltol
  3210  0320  120A  158A  212C  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3211  0325  1283               	bcf	status, 6	;RP1=0, select bank0
  3212  0326  1303               	movf	(0+(?___fltol)),w
  3213  0327  0820               	bsf	status, 5	;RP0=1, select bank1
  3214  0328  1683               	bcf	status, 6	;RP1=0, select bank1
  3215  0329  1303               	movwf	(??_main+0)^080h+0
  3216  032A  00D5               	movf	(??_main+0)^080h+0,w
  3217  032B  0855               	movwf	(_dec1)^080h
  3218  032C  00BE               	line	154
  3219                           	
  3220                           l4438:	
  3221  032D                     ;mainM.c: 154:         if(PORTAbits.RA1){
  3222                           	bcf	status, 5	;RP0=0, select bank0
  3223  032D  1283               	bcf	status, 6	;RP1=0, select bank0
  3224  032E  1303               	btfss	(5),1	;volatile
  3225  032F  1C85               	goto	u6741
  3226  0330  2B32               	goto	u6740
  3227  0331  2B33               u6741:
  3228  0332                     	goto	l264
  3229  0332  2B37               u6740:
  3230  0333                     	line	155
  3231                           	
  3232                           l4440:	
  3233  0333                     ;mainM.c: 155:             antibounce = 1;
  3234                           	bsf	status, 5	;RP0=1, select bank1
  3235  0333  1683               	bcf	status, 6	;RP1=0, select bank1
  3236  0334  1303               	clrf	(_antibounce)^080h
  3237  0335  01B2               	incf	(_antibounce)^080h,f
  3238  0336  0AB2               	line	156
  3239                           ;mainM.c: 156:         }
  3240                           	
  3241                           l264:	
  3242  0337                     	line	157
  3243                           ;mainM.c: 157:         if(PORTAbits.RA1 == 0 && antibounce){
  3244                           	bcf	status, 5	;RP0=0, select bank0
  3245  0337  1283               	btfsc	(5),1	;volatile
  3246  0338  1885               	goto	u6751
  3247  0339  2B3B               	goto	u6750
  3248  033A  2B3C               u6751:
  3249  033B                     	goto	l4450
  3250  033B  2B6F               u6750:
  3251  033C                     	
  3252                           l4442:	
  3253  033C                     	bsf	status, 5	;RP0=1, select bank1
  3254  033C  1683               	bcf	status, 6	;RP1=0, select bank1
  3255  033D  1303               	movf	((_antibounce)^080h),w
  3256  033E  0832               	btfsc	status,2
  3257  033F  1903               	goto	u6761
  3258  0340  2B42               	goto	u6760
  3259  0341  2B43               u6761:
  3260  0342                     	goto	l4450
  3261  0342  2B6F               u6760:
  3262  0343                     	line	158
  3263                           	
  3264                           l4444:	
  3265  0343                     ;mainM.c: 158:             screenCounter++;
  3266                           	movlw	low(01h)
  3267  0343  3001               	movwf	(??_main+0)^080h+0
  3268  0344  00D5               	movf	(??_main+0)^080h+0,w
  3269  0345  0855               	bcf	status, 5	;RP0=0, select bank0
  3270  0346  1283               	bcf	status, 6	;RP1=0, select bank0
  3271  0347  1303               	addwf	(_screenCounter),f
  3272  0348  07EC               	line	159
  3273                           	
  3274                           l4446:	
  3275  0349                     ;mainM.c: 159:             screenCounter = screenCounter%3;
  3276                           	movlw	03h
  3277  0349  3003               	movwf	(___awmod@divisor)
  3278  034A  00A0               	movlw	0
  3279  034B  3000               	movwf	((___awmod@divisor))+1
  3280  034C  00A1               	movf	(_screenCounter),w
  3281  034D  086C               	bsf	status, 5	;RP0=1, select bank1
  3282  034E  1683               	bcf	status, 6	;RP1=0, select bank1
  3283  034F  1303               	movwf	(??_main+0)^080h+0
  3284  0350  00D5               	clrf	(??_main+0)^080h+0+1
  3285  0351  01D6               	movf	0+(??_main+0)^080h+0,w
  3286  0352  0855               	bcf	status, 5	;RP0=0, select bank0
  3287  0353  1283               	bcf	status, 6	;RP1=0, select bank0
  3288  0354  1303               	movwf	(___awmod@dividend)
  3289  0355  00A2               	bsf	status, 5	;RP0=1, select bank1
  3290  0356  1683               	bcf	status, 6	;RP1=0, select bank1
  3291  0357  1303               	movf	1+(??_main+0)^080h+0,w
  3292  0358  0856               	bcf	status, 5	;RP0=0, select bank0
  3293  0359  1283               	bcf	status, 6	;RP1=0, select bank0
  3294  035A  1303               	movwf	(___awmod@dividend+1)
  3295  035B  00A3               	fcall	___awmod
  3296  035C  160A  118A  23BF  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3297  0361  1283               	bcf	status, 6	;RP1=0, select bank0
  3298  0362  1303               	movf	(0+(?___awmod)),w
  3299  0363  0820               	bsf	status, 5	;RP0=1, select bank1
  3300  0364  1683               	bcf	status, 6	;RP1=0, select bank1
  3301  0365  1303               	movwf	(??_main+2)^080h+0
  3302  0366  00D7               	movf	(??_main+2)^080h+0,w
  3303  0367  0857               	bcf	status, 5	;RP0=0, select bank0
  3304  0368  1283               	bcf	status, 6	;RP1=0, select bank0
  3305  0369  1303               	movwf	(_screenCounter)
  3306  036A  00EC               	line	160
  3307                           	
  3308                           l4448:	
  3309  036B                     ;mainM.c: 160:             antibounce = 0;
  3310                           	bsf	status, 5	;RP0=1, select bank1
  3311  036B  1683               	bcf	status, 6	;RP1=0, select bank1
  3312  036C  1303               	clrf	(_antibounce)^080h
  3313  036D  01B2               	goto	l4450
  3314  036E  2B6F               	line	161
  3315                           ;mainM.c: 161:         }
  3316                           	
  3317                           l265:	
  3318  036F                     	line	164
  3319                           	
  3320                           l4450:	
  3321  036F                     ;mainM.c: 164:         if(PORTAbits.RA2){
  3322                           	bcf	status, 5	;RP0=0, select bank0
  3323  036F  1283               	btfss	(5),2	;volatile
  3324  0370  1D05               	goto	u6771
  3325  0371  2B73               	goto	u6770
  3326  0372  2B74               u6771:
  3327  0373                     	goto	l266
  3328  0373  2B78               u6770:
  3329  0374                     	line	165
  3330                           	
  3331                           l4452:	
  3332  0374                     ;mainM.c: 165:             antibounce2 = 1;
  3333                           	bsf	status, 5	;RP0=1, select bank1
  3334  0374  1683               	bcf	status, 6	;RP1=0, select bank1
  3335  0375  1303               	clrf	(_antibounce2)^080h
  3336  0376  01B1               	incf	(_antibounce2)^080h,f
  3337  0377  0AB1               	line	166
  3338                           ;mainM.c: 166:         }
  3339                           	
  3340                           l266:	
  3341  0378                     	line	167
  3342                           ;mainM.c: 167:         if(PORTAbits.RA2 == 0 && antibounce2){
  3343                           	bcf	status, 5	;RP0=0, select bank0
  3344  0378  1283               	btfsc	(5),2	;volatile
  3345  0379  1905               	goto	u6781
  3346  037A  2B7C               	goto	u6780
  3347  037B  2B7D               u6781:
  3348  037C                     	goto	l4462
  3349  037C  2B8F               u6780:
  3350  037D                     	
  3351                           l4454:	
  3352  037D                     	bsf	status, 5	;RP0=1, select bank1
  3353  037D  1683               	bcf	status, 6	;RP1=0, select bank1
  3354  037E  1303               	movf	((_antibounce2)^080h),w
  3355  037F  0831               	btfsc	status,2
  3356  0380  1903               	goto	u6791
  3357  0381  2B83               	goto	u6790
  3358  0382  2B84               u6791:
  3359  0383                     	goto	l4462
  3360  0383  2B8F               u6790:
  3361  0384                     	line	168
  3362                           	
  3363                           l4456:	
  3364  0384                     ;mainM.c: 168:             screenState++;
  3365                           	movlw	low(01h)
  3366  0384  3001               	movwf	(??_main+0)^080h+0
  3367  0385  00D5               	movf	(??_main+0)^080h+0,w
  3368  0386  0855               	addwf	(_screenState)^080h,f
  3369  0387  07B0               	line	169
  3370                           	
  3371                           l4458:	
  3372  0388                     ;mainM.c: 169:             screenState = screenState%2;
  3373                           	movf	(_screenState)^080h,w
  3374  0388  0830               	andlw	01h
  3375  0389  3901               	movwf	(??_main+0)^080h+0
  3376  038A  00D5               	movf	(??_main+0)^080h+0,w
  3377  038B  0855               	movwf	(_screenState)^080h
  3378  038C  00B0               	line	170
  3379                           	
  3380                           l4460:	
  3381  038D                     ;mainM.c: 170:             antibounce2 = 0;
  3382                           	clrf	(_antibounce2)^080h
  3383  038D  01B1               	goto	l4462
  3384  038E  2B8F               	line	171
  3385                           ;mainM.c: 171:         }
  3386                           	
  3387                           l267:	
  3388  038F                     	line	173
  3389                           	
  3390                           l4462:	
  3391  038F                     ;mainM.c: 173:         if(signal){
  3392                           	movf	((_signal)),w
  3393  038F  0872               	btfsc	status,2
  3394  0390  1903               	goto	u6801
  3395  0391  2B93               	goto	u6800
  3396  0392  2B94               u6801:
  3397  0393                     	goto	l268
  3398  0393  2B97               u6800:
  3399  0394                     	line	174
  3400                           	
  3401                           l4464:	
  3402  0394                     ;mainM.c: 174:             PORTAbits.RA0 = 1;
  3403                           	bcf	status, 5	;RP0=0, select bank0
  3404  0394  1283               	bsf	(5),0	;volatile
  3405  0395  1405               	line	175
  3406                           ;mainM.c: 175:         }else{
  3407                           	goto	l4466
  3408  0396  2B9A               	
  3409                           l268:	
  3410  0397                     	line	176
  3411                           ;mainM.c: 176:             PORTAbits.RA0 = 0;
  3412                           	bcf	status, 5	;RP0=0, select bank0
  3413  0397  1283               	bcf	(5),0	;volatile
  3414  0398  1005               	goto	l4466
  3415  0399  2B9A               	line	177
  3416                           ;mainM.c: 177:         }
  3417                           	
  3418                           l269:	
  3419  039A                     	line	179
  3420                           	
  3421                           l4466:	
  3422  039A                     ;mainM.c: 179:         if(entero1 >= 60){
  3423                           	movlw	low(03Ch)
  3424  039A  303C               	subwf	(_entero1),w
  3425  039B  026E               	skipc
  3426  039C  1C03               	goto	u6811
  3427  039D  2B9F               	goto	u6810
  3428  039E  2BA0               u6811:
  3429  039F                     	goto	l270
  3430  039F  2BA2               u6810:
  3431  03A0                     	line	180
  3432                           	
  3433                           l4468:	
  3434  03A0                     ;mainM.c: 180:             PORTAbits.RA4 = 1;
  3435                           	bsf	(5),4	;volatile
  3436  03A0  1605               	line	181
  3437                           ;mainM.c: 181:         }else{
  3438                           	goto	l4470
  3439  03A1  2BA4               	
  3440                           l270:	
  3441  03A2                     	line	182
  3442                           ;mainM.c: 182:             PORTAbits.RA4 = 0;
  3443                           	bcf	(5),4	;volatile
  3444  03A2  1205               	goto	l4470
  3445  03A3  2BA4               	line	183
  3446                           ;mainM.c: 183:         }
  3447                           	
  3448                           l271:	
  3449  03A4                     	line	223
  3450                           	
  3451                           l4470:	
  3452  03A4                     ;mainM.c: 223:         if(screenState == 0){
  3453                           	bsf	status, 5	;RP0=1, select bank1
  3454  03A4  1683               	bcf	status, 6	;RP1=0, select bank1
  3455  03A5  1303               	movf	((_screenState)^080h),w
  3456  03A6  0830               	btfss	status,2
  3457  03A7  1D03               	goto	u6821
  3458  03A8  2BAA               	goto	u6820
  3459  03A9  2BAB               u6821:
  3460  03AA                     	goto	l4520
  3461  03AA  2CC9               u6820:
  3462  03AB                     	line	224
  3463                           	
  3464                           l4472:	
  3465  03AB                     ;mainM.c: 224:             setCursorLCD(1, 1);
  3466                           	bcf	status, 5	;RP0=0, select bank0
  3467  03AB  1283               	bcf	status, 6	;RP1=0, select bank0
  3468  03AC  1303               	clrf	(setCursorLCD@x)
  3469  03AD  01A3               	incf	(setCursorLCD@x),f
  3470  03AE  0AA3               	movlw	low(01h)
  3471  03AF  3001               	fcall	_setCursorLCD
  3472  03B0  160A  118A  216E  120A  118A  	line	225
  3473                           	
  3474                           l4474:	
  3475  03B5                     ;mainM.c: 225:             if(screenCounter == 0){
  3476                           	bcf	status, 5	;RP0=0, select bank0
  3477  03B5  1283               	bcf	status, 6	;RP1=0, select bank0
  3478  03B6  1303               	movf	((_screenCounter)),w
  3479  03B7  086C               	btfss	status,2
  3480  03B8  1D03               	goto	u6831
  3481  03B9  2BBB               	goto	u6830
  3482  03BA  2BBC               u6831:
  3483  03BB                     	goto	l4482
  3484  03BB  2BDA               u6830:
  3485  03BC                     	line	226
  3486                           	
  3487                           l4476:	
  3488  03BC                     ;mainM.c: 226:                 writeStrLCD("TEMP ");
  3489                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3490  03BC  3085               	movwf	(writeStrLCD@string)
  3491  03BD  00A2               	movlw	80h
  3492  03BE  3080               	movwf	(writeStrLCD@string+1)
  3493  03BF  00A3               	fcall	_writeStrLCD
  3494  03C0  160A  118A  232A  120A  118A  	line	227
  3495                           ;mainM.c: 227:                 writeIntLCD(entero1);
  3496                           	bcf	status, 5	;RP0=0, select bank0
  3497  03C5  1283               	bcf	status, 6	;RP1=0, select bank0
  3498  03C6  1303               	movf	(_entero1),w
  3499  03C7  086E               	fcall	_writeIntLCD
  3500  03C8  160A  118A  218E  120A  118A  	line	228
  3501                           	
  3502                           l4478:	
  3503  03CD                     ;mainM.c: 228:                 writeCharLCD('°');
  3504                           	movlw	low(0B0h)
  3505  03CD  30B0               	fcall	_writeCharLCD
  3506  03CE  160A  118A  2147  120A  118A  	line	229
  3507                           	
  3508                           l4480:	
  3509  03D3                     ;mainM.c: 229:                 writeCharLCD('C');
  3510                           	movlw	low(043h)
  3511  03D3  3043               	fcall	_writeCharLCD
  3512  03D4  160A  118A  2147  120A  118A  	line	230
  3513                           ;mainM.c: 230:             }else if(screenCounter == 1){
  3514                           	goto	l274
  3515  03D9  2C28               	
  3516                           l273:	
  3517  03DA                     	
  3518                           l4482:	
  3519  03DA                     	bcf	status, 5	;RP0=0, select bank0
  3520  03DA  1283               	bcf	status, 6	;RP1=0, select bank0
  3521  03DB  1303               		decf	((_screenCounter)),w
  3522  03DC  036C               	btfss	status,2
  3523  03DD  1D03               	goto	u6841
  3524  03DE  2BE0               	goto	u6840
  3525  03DF  2BE1               u6841:
  3526  03E0                     	goto	l274
  3527  03E0  2C28               u6840:
  3528  03E1                     	line	231
  3529                           	
  3530                           l4484:	
  3531  03E1                     ;mainM.c: 231:                 writeStrLCD("LUZ ");
  3532                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3533  03E1  308B               	movwf	(writeStrLCD@string)
  3534  03E2  00A2               	movlw	80h
  3535  03E3  3080               	movwf	(writeStrLCD@string+1)
  3536  03E4  00A3               	fcall	_writeStrLCD
  3537  03E5  160A  118A  232A  120A  118A  	line	232
  3538                           ;mainM.c: 232:                 writeIntLCD((uint8_t) adcP*100/255);
  3539                           	movlw	0FFh
  3540  03EA  30FF               	bcf	status, 5	;RP0=0, select bank0
  3541  03EB  1283               	bcf	status, 6	;RP1=0, select bank0
  3542  03EC  1303               	movwf	(___awdiv@divisor)
  3543  03ED  00A6               	movlw	0
  3544  03EE  3000               	movwf	((___awdiv@divisor))+1
  3545  03EF  00A7               	bsf	status, 5	;RP0=1, select bank1
  3546  03F0  1683               	bcf	status, 6	;RP1=0, select bank1
  3547  03F1  1303               	movf	(_adcP)^080h,w
  3548  03F2  0837               	movwf	(??_main+0)^080h+0
  3549  03F3  00D5               	clrf	(??_main+0)^080h+0+1
  3550  03F4  01D6               	movf	0+(??_main+0)^080h+0,w
  3551  03F5  0855               	bcf	status, 5	;RP0=0, select bank0
  3552  03F6  1283               	bcf	status, 6	;RP1=0, select bank0
  3553  03F7  1303               	movwf	(___wmul@multiplier)
  3554  03F8  00A0               	bsf	status, 5	;RP0=1, select bank1
  3555  03F9  1683               	bcf	status, 6	;RP1=0, select bank1
  3556  03FA  1303               	movf	1+(??_main+0)^080h+0,w
  3557  03FB  0856               	bcf	status, 5	;RP0=0, select bank0
  3558  03FC  1283               	bcf	status, 6	;RP1=0, select bank0
  3559  03FD  1303               	movwf	(___wmul@multiplier+1)
  3560  03FE  00A1               	movlw	064h
  3561  03FF  3064               	movwf	(___wmul@multiplicand)
  3562  0400  00A2               	movlw	0
  3563  0401  3000               	movwf	((___wmul@multiplicand))+1
  3564  0402  00A3               	fcall	___wmul
  3565  0403  160A  118A  21AE  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3566  0408  1283               	bcf	status, 6	;RP1=0, select bank0
  3567  0409  1303               	movf	(1+(?___wmul)),w
  3568  040A  0821               	movwf	(___awdiv@dividend+1)
  3569  040B  00A9               	movf	(0+(?___wmul)),w
  3570  040C  0820               	movwf	(___awdiv@dividend)
  3571  040D  00A8               	fcall	___awdiv
  3572  040E  120A  118A  2784  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  3573  0413  1283               	bcf	status, 6	;RP1=0, select bank0
  3574  0414  1303               	movf	(0+(?___awdiv)),w
  3575  0415  0826               	fcall	_writeIntLCD
  3576  0416  160A  118A  218E  120A  118A  	line	233
  3577                           	
  3578                           l4486:	
  3579  041B                     ;mainM.c: 233:                 writeCharLCD(' ');
  3580                           	movlw	low(020h)
  3581  041B  3020               	fcall	_writeCharLCD
  3582  041C  160A  118A  2147  120A  118A  	line	234
  3583                           	
  3584                           l4488:	
  3585  0421                     ;mainM.c: 234:                 writeCharLCD('%');
  3586                           	movlw	low(025h)
  3587  0421  3025               	fcall	_writeCharLCD
  3588  0422  160A  118A  2147  120A  118A  	goto	l274
  3589  0427  2C28               	line	235
  3590                           ;mainM.c: 235:             }
  3591                           	
  3592                           l275:	
  3593  0428                     	
  3594                           l274:	
  3595  0428                     	line	236
  3596                           ;mainM.c: 236:             writeStrLCD("           ");
  3597                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3598  0428  3056               	bcf	status, 5	;RP0=0, select bank0
  3599  0429  1283               	bcf	status, 6	;RP1=0, select bank0
  3600  042A  1303               	movwf	(writeStrLCD@string)
  3601  042B  00A2               	movlw	80h
  3602  042C  3080               	movwf	(writeStrLCD@string+1)
  3603  042D  00A3               	fcall	_writeStrLCD
  3604  042E  160A  118A  232A  120A  118A  	line	239
  3605                           	
  3606                           l4490:	
  3607  0433                     ;mainM.c: 239:             setCursorLCD(2, 1);
  3608                           	bcf	status, 5	;RP0=0, select bank0
  3609  0433  1283               	bcf	status, 6	;RP1=0, select bank0
  3610  0434  1303               	clrf	(setCursorLCD@x)
  3611  0435  01A3               	incf	(setCursorLCD@x),f
  3612  0436  0AA3               	movlw	low(02h)
  3613  0437  3002               	fcall	_setCursorLCD
  3614  0438  160A  118A  216E  120A  118A  	line	240
  3615                           	
  3616                           l4492:	
  3617  043D                     ;mainM.c: 240:             if(screenCounter == 0){
  3618                           	bcf	status, 5	;RP0=0, select bank0
  3619  043D  1283               	bcf	status, 6	;RP1=0, select bank0
  3620  043E  1303               	movf	((_screenCounter)),w
  3621  043F  086C               	btfss	status,2
  3622  0440  1D03               	goto	u6851
  3623  0441  2C43               	goto	u6850
  3624  0442  2C44               u6851:
  3625  0443                     	goto	l4504
  3626  0443  2C71               u6850:
  3627  0444                     	line	241
  3628                           	
  3629                           l4494:	
  3630  0444                     ;mainM.c: 241:                 writeStrLCD("PUERTA ");
  3631                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3632  0444  3076               	movwf	(writeStrLCD@string)
  3633  0445  00A2               	movlw	80h
  3634  0446  3080               	movwf	(writeStrLCD@string+1)
  3635  0447  00A3               	fcall	_writeStrLCD
  3636  0448  160A  118A  232A  120A  118A  	line	242
  3637                           	
  3638                           l4496:	
  3639  044D                     ;mainM.c: 242:                 if(hall){
  3640                           	movf	((_hall)),w
  3641  044D  0874               	btfsc	status,2
  3642  044E  1903               	goto	u6861
  3643  044F  2C51               	goto	u6860
  3644  0450  2C52               u6861:
  3645  0451                     	goto	l4500
  3646  0451  2C5E               u6860:
  3647  0452                     	line	243
  3648                           	
  3649                           l4498:	
  3650  0452                     ;mainM.c: 243:                     writeStrLCD("ABIERTA");
  3651                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  3652  0452  3021               	bcf	status, 5	;RP0=0, select bank0
  3653  0453  1283               	bcf	status, 6	;RP1=0, select bank0
  3654  0454  1303               	movwf	(writeStrLCD@string)
  3655  0455  00A2               	movlw	80h
  3656  0456  3080               	movwf	(writeStrLCD@string+1)
  3657  0457  00A3               	fcall	_writeStrLCD
  3658  0458  160A  118A  232A  120A  118A  	line	244
  3659                           ;mainM.c: 244:                 }else{
  3660                           	goto	l4502
  3661  045D  2C6A               	
  3662                           l277:	
  3663  045E                     	line	245
  3664                           	
  3665                           l4500:	
  3666  045E                     ;mainM.c: 245:                     writeStrLCD("CERRADA");
  3667                           	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  3668  045E  3012               	bcf	status, 5	;RP0=0, select bank0
  3669  045F  1283               	bcf	status, 6	;RP1=0, select bank0
  3670  0460  1303               	movwf	(writeStrLCD@string)
  3671  0461  00A2               	movlw	80h
  3672  0462  3080               	movwf	(writeStrLCD@string+1)
  3673  0463  00A3               	fcall	_writeStrLCD
  3674  0464  160A  118A  232A  120A  118A  	goto	l4502
  3675  0469  2C6A               	line	246
  3676                           ;mainM.c: 246:                 }
  3677                           	
  3678                           l278:	
  3679  046A                     	line	247
  3680                           	
  3681                           l4502:	
  3682  046A                     ;mainM.c: 247:                 writeCharLCD(' ');
  3683                           	movlw	low(020h)
  3684  046A  3020               	fcall	_writeCharLCD
  3685  046B  160A  118A  2147  120A  118A  	line	248
  3686                           ;mainM.c: 248:             }else if(screenCounter == 1){
  3687                           	goto	l279
  3688  0470  2CBD               	
  3689                           l276:	
  3690  0471                     	
  3691                           l4504:	
  3692  0471                     	bcf	status, 5	;RP0=0, select bank0
  3693  0471  1283               	bcf	status, 6	;RP1=0, select bank0
  3694  0472  1303               		decf	((_screenCounter)),w
  3695  0473  036C               	btfss	status,2
  3696  0474  1D03               	goto	u6871
  3697  0475  2C77               	goto	u6870
  3698  0476  2C78               u6871:
  3699  0477                     	goto	l4512
  3700  0477  2C94               u6870:
  3701  0478                     	line	249
  3702                           	
  3703                           l4506:	
  3704  0478                     ;mainM.c: 249:                 if(mov){
  3705                           	movf	((_mov)),w
  3706  0478  0871               	btfsc	status,2
  3707  0479  1903               	goto	u6881
  3708  047A  2C7C               	goto	u6880
  3709  047B  2C7D               u6881:
  3710  047C                     	goto	l4510
  3711  047C  2C87               u6880:
  3712  047D                     	line	250
  3713                           	
  3714                           l4508:	
  3715  047D                     ;mainM.c: 250:                     writeStrLCD("MOVIMIENTO");
  3716                           	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  3717  047D  303C               	movwf	(writeStrLCD@string)
  3718  047E  00A2               	movlw	80h
  3719  047F  3080               	movwf	(writeStrLCD@string+1)
  3720  0480  00A3               	fcall	_writeStrLCD
  3721  0481  160A  118A  232A  120A  118A  	line	251
  3722                           ;mainM.c: 251:                 }else{
  3723                           	goto	l279
  3724  0486  2CBD               	
  3725                           l281:	
  3726  0487                     	line	252
  3727                           	
  3728                           l4510:	
  3729  0487                     ;mainM.c: 252:                     writeStrLCD("SIN MOVIMIENTO");
  3730                           	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  3731  0487  3038               	bcf	status, 5	;RP0=0, select bank0
  3732  0488  1283               	bcf	status, 6	;RP1=0, select bank0
  3733  0489  1303               	movwf	(writeStrLCD@string)
  3734  048A  00A2               	movlw	80h
  3735  048B  3080               	movwf	(writeStrLCD@string+1)
  3736  048C  00A3               	fcall	_writeStrLCD
  3737  048D  160A  118A  232A  120A  118A  	goto	l279
  3738  0492  2CBD               	line	253
  3739                           ;mainM.c: 253:                 }
  3740                           	
  3741                           l282:	
  3742  0493                     	line	254
  3743                           ;mainM.c: 254:             }else if(screenCounter == 2){
  3744                           	goto	l279
  3745  0493  2CBD               	
  3746                           l280:	
  3747  0494                     	
  3748                           l4512:	
  3749  0494                     		movlw	2
  3750  0494  3002               	bcf	status, 5	;RP0=0, select bank0
  3751  0495  1283               	bcf	status, 6	;RP1=0, select bank0
  3752  0496  1303               	xorwf	((_screenCounter)),w
  3753  0497  066C               	btfss	status,2
  3754  0498  1D03               	goto	u6891
  3755  0499  2C9B               	goto	u6890
  3756  049A  2C9C               u6891:
  3757  049B                     	goto	l279
  3758  049B  2CBD               u6890:
  3759  049C                     	line	255
  3760                           	
  3761                           l4514:	
  3762  049C                     ;mainM.c: 255:                 if(garage){
  3763                           	bsf	status, 5	;RP0=1, select bank1
  3764  049C  1683               	bcf	status, 6	;RP1=0, select bank1
  3765  049D  1303               	movf	((_garage)^080h),w
  3766  049E  0833               	btfsc	status,2
  3767  049F  1903               	goto	u6901
  3768  04A0  2CA2               	goto	u6900
  3769  04A1  2CA3               u6901:
  3770  04A2                     	goto	l4518
  3771  04A2  2CAF               u6900:
  3772  04A3                     	line	256
  3773                           	
  3774                           l4516:	
  3775  04A3                     ;mainM.c: 256:                     writeStrLCD("GARAGE ABIERTO");
  3776                           	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
  3777  04A3  3047               	bcf	status, 5	;RP0=0, select bank0
  3778  04A4  1283               	bcf	status, 6	;RP1=0, select bank0
  3779  04A5  1303               	movwf	(writeStrLCD@string)
  3780  04A6  00A2               	movlw	80h
  3781  04A7  3080               	movwf	(writeStrLCD@string+1)
  3782  04A8  00A3               	fcall	_writeStrLCD
  3783  04A9  160A  118A  232A  120A  118A  	line	257
  3784                           ;mainM.c: 257:                 }else{
  3785                           	goto	l279
  3786  04AE  2CBD               	
  3787                           l285:	
  3788  04AF                     	line	258
  3789                           	
  3790                           l4518:	
  3791  04AF                     ;mainM.c: 258:                     writeStrLCD("GARAGE CERRADO");
  3792                           	movlw	(low((((STR_12)-__stringbase)|8000h)))&0ffh
  3793  04AF  3029               	bcf	status, 5	;RP0=0, select bank0
  3794  04B0  1283               	bcf	status, 6	;RP1=0, select bank0
  3795  04B1  1303               	movwf	(writeStrLCD@string)
  3796  04B2  00A2               	movlw	80h
  3797  04B3  3080               	movwf	(writeStrLCD@string+1)
  3798  04B4  00A3               	fcall	_writeStrLCD
  3799  04B5  160A  118A  232A  120A  118A  	goto	l279
  3800  04BA  2CBD               	line	259
  3801                           ;mainM.c: 259:                 }
  3802                           	
  3803                           l286:	
  3804  04BB                     	goto	l279
  3805  04BB  2CBD               	line	260
  3806                           ;mainM.c: 260:             }
  3807                           	
  3808                           l284:	
  3809  04BC                     	goto	l279
  3810  04BC  2CBD               	
  3811                           l283:	
  3812  04BD                     	
  3813                           l279:	
  3814  04BD                     	line	261
  3815                           ;mainM.c: 261:             writeStrLCD("           ");
  3816                           	movlw	(low((((STR_13)-__stringbase)|8000h)))&0ffh
  3817  04BD  3056               	bcf	status, 5	;RP0=0, select bank0
  3818  04BE  1283               	bcf	status, 6	;RP1=0, select bank0
  3819  04BF  1303               	movwf	(writeStrLCD@string)
  3820  04C0  00A2               	movlw	80h
  3821  04C1  3080               	movwf	(writeStrLCD@string+1)
  3822  04C2  00A3               	fcall	_writeStrLCD
  3823  04C3  160A  118A  232A  120A  118A  	line	262
  3824                           ;mainM.c: 262:         }else{
  3825                           	goto	l4360
  3826  04C8  282C               	
  3827                           l272:	
  3828  04C9                     	line	263
  3829                           	
  3830                           l4520:	
  3831  04C9                     ;mainM.c: 263:             setCursorLCD(1, 1);
  3832                           	bcf	status, 5	;RP0=0, select bank0
  3833  04C9  1283               	bcf	status, 6	;RP1=0, select bank0
  3834  04CA  1303               	clrf	(setCursorLCD@x)
  3835  04CB  01A3               	incf	(setCursorLCD@x),f
  3836  04CC  0AA3               	movlw	low(01h)
  3837  04CD  3001               	fcall	_setCursorLCD
  3838  04CE  160A  118A  216E  120A  118A  	line	264
  3839                           	
  3840                           l4522:	
  3841  04D3                     ;mainM.c: 264:             if(screenCounter == 0){
  3842                           	bcf	status, 5	;RP0=0, select bank0
  3843  04D3  1283               	bcf	status, 6	;RP1=0, select bank0
  3844  04D4  1303               	movf	((_screenCounter)),w
  3845  04D5  086C               	btfss	status,2
  3846  04D6  1D03               	goto	u6911
  3847  04D7  2CD9               	goto	u6910
  3848  04D8  2CDA               u6911:
  3849  04D9                     	goto	l4534
  3850  04D9  2D07               u6910:
  3851  04DA                     	line	265
  3852                           	
  3853                           l4524:	
  3854  04DA                     ;mainM.c: 265:                 writeStrLCD("PUERTA ");
  3855                           	movlw	(low((((STR_14)-__stringbase)|8000h)))&0ffh
  3856  04DA  3076               	movwf	(writeStrLCD@string)
  3857  04DB  00A2               	movlw	80h
  3858  04DC  3080               	movwf	(writeStrLCD@string+1)
  3859  04DD  00A3               	fcall	_writeStrLCD
  3860  04DE  160A  118A  232A  120A  118A  	line	266
  3861                           	
  3862                           l4526:	
  3863  04E3                     ;mainM.c: 266:                 if(hall){
  3864                           	movf	((_hall)),w
  3865  04E3  0874               	btfsc	status,2
  3866  04E4  1903               	goto	u6921
  3867  04E5  2CE7               	goto	u6920
  3868  04E6  2CE8               u6921:
  3869  04E7                     	goto	l4530
  3870  04E7  2CF4               u6920:
  3871  04E8                     	line	267
  3872                           	
  3873                           l4528:	
  3874  04E8                     ;mainM.c: 267:                     writeStrLCD("ABIERTA");
  3875                           	movlw	(low((((STR_15)-__stringbase)|8000h)))&0ffh
  3876  04E8  3021               	bcf	status, 5	;RP0=0, select bank0
  3877  04E9  1283               	bcf	status, 6	;RP1=0, select bank0
  3878  04EA  1303               	movwf	(writeStrLCD@string)
  3879  04EB  00A2               	movlw	80h
  3880  04EC  3080               	movwf	(writeStrLCD@string+1)
  3881  04ED  00A3               	fcall	_writeStrLCD
  3882  04EE  160A  118A  232A  120A  118A  	line	268
  3883                           ;mainM.c: 268:                 }else{
  3884                           	goto	l4532
  3885  04F3  2D00               	
  3886                           l289:	
  3887  04F4                     	line	269
  3888                           	
  3889                           l4530:	
  3890  04F4                     ;mainM.c: 269:                     writeStrLCD("CERRADA");
  3891                           	movlw	(low((((STR_16)-__stringbase)|8000h)))&0ffh
  3892  04F4  3012               	bcf	status, 5	;RP0=0, select bank0
  3893  04F5  1283               	bcf	status, 6	;RP1=0, select bank0
  3894  04F6  1303               	movwf	(writeStrLCD@string)
  3895  04F7  00A2               	movlw	80h
  3896  04F8  3080               	movwf	(writeStrLCD@string+1)
  3897  04F9  00A3               	fcall	_writeStrLCD
  3898  04FA  160A  118A  232A  120A  118A  	goto	l4532
  3899  04FF  2D00               	line	270
  3900                           ;mainM.c: 270:                 }
  3901                           	
  3902                           l290:	
  3903  0500                     	line	271
  3904                           	
  3905                           l4532:	
  3906  0500                     ;mainM.c: 271:                 writeCharLCD(' ');
  3907                           	movlw	low(020h)
  3908  0500  3020               	fcall	_writeCharLCD
  3909  0501  160A  118A  2147  120A  118A  	line	272
  3910                           ;mainM.c: 272:             }else if(screenCounter == 1){
  3911                           	goto	l4542
  3912  0506  2D2B               	
  3913                           l288:	
  3914  0507                     	
  3915                           l4534:	
  3916  0507                     	bcf	status, 5	;RP0=0, select bank0
  3917  0507  1283               	bcf	status, 6	;RP1=0, select bank0
  3918  0508  1303               		decf	((_screenCounter)),w
  3919  0509  036C               	btfss	status,2
  3920  050A  1D03               	goto	u6931
  3921  050B  2D0D               	goto	u6930
  3922  050C  2D0E               u6931:
  3923  050D                     	goto	l4542
  3924  050D  2D2B               u6930:
  3925  050E                     	line	273
  3926                           	
  3927                           l4536:	
  3928  050E                     ;mainM.c: 273:                 if(mov){
  3929                           	movf	((_mov)),w
  3930  050E  0871               	btfsc	status,2
  3931  050F  1903               	goto	u6941
  3932  0510  2D12               	goto	u6940
  3933  0511  2D13               u6941:
  3934  0512                     	goto	l4540
  3935  0512  2D1D               u6940:
  3936  0513                     	line	274
  3937                           	
  3938                           l4538:	
  3939  0513                     ;mainM.c: 274:                     writeStrLCD("MOVIMIENTO");
  3940                           	movlw	(low((((STR_17)-__stringbase)|8000h)))&0ffh
  3941  0513  303C               	movwf	(writeStrLCD@string)
  3942  0514  00A2               	movlw	80h
  3943  0515  3080               	movwf	(writeStrLCD@string+1)
  3944  0516  00A3               	fcall	_writeStrLCD
  3945  0517  160A  118A  232A  120A  118A  	line	275
  3946                           ;mainM.c: 275:                 }else{
  3947                           	goto	l4542
  3948  051C  2D2B               	
  3949                           l293:	
  3950  051D                     	line	276
  3951                           	
  3952                           l4540:	
  3953  051D                     ;mainM.c: 276:                     writeStrLCD("SIN MOVIMIENTO");
  3954                           	movlw	(low((((STR_18)-__stringbase)|8000h)))&0ffh
  3955  051D  3038               	bcf	status, 5	;RP0=0, select bank0
  3956  051E  1283               	bcf	status, 6	;RP1=0, select bank0
  3957  051F  1303               	movwf	(writeStrLCD@string)
  3958  0520  00A2               	movlw	80h
  3959  0521  3080               	movwf	(writeStrLCD@string+1)
  3960  0522  00A3               	fcall	_writeStrLCD
  3961  0523  160A  118A  232A  120A  118A  	goto	l4542
  3962  0528  2D2B               	line	277
  3963                           ;mainM.c: 277:                 }
  3964                           	
  3965                           l294:	
  3966  0529                     	goto	l4542
  3967  0529  2D2B               	line	278
  3968                           ;mainM.c: 278:             }
  3969                           	
  3970                           l292:	
  3971  052A                     	goto	l4542
  3972  052A  2D2B               	
  3973                           l291:	
  3974  052B                     	line	279
  3975                           	
  3976                           l4542:	
  3977  052B                     ;mainM.c: 279:             setCursorLCD(2, 1);
  3978                           	bcf	status, 5	;RP0=0, select bank0
  3979  052B  1283               	bcf	status, 6	;RP1=0, select bank0
  3980  052C  1303               	clrf	(setCursorLCD@x)
  3981  052D  01A3               	incf	(setCursorLCD@x),f
  3982  052E  0AA3               	movlw	low(02h)
  3983  052F  3002               	fcall	_setCursorLCD
  3984  0530  160A  118A  216E  120A  118A  	line	280
  3985                           	
  3986                           l4544:	
  3987  0535                     ;mainM.c: 280:             if(screenCounter == 0){
  3988                           	bcf	status, 5	;RP0=0, select bank0
  3989  0535  1283               	bcf	status, 6	;RP1=0, select bank0
  3990  0536  1303               	movf	((_screenCounter)),w
  3991  0537  086C               	btfss	status,2
  3992  0538  1D03               	goto	u6951
  3993  0539  2D3B               	goto	u6950
  3994  053A  2D3C               u6951:
  3995  053B                     	goto	l4556
  3996  053B  2D6B               u6950:
  3997  053C                     	line	281
  3998                           	
  3999                           l4546:	
  4000  053C                     ;mainM.c: 281:                 writeStrLCD("ALARMA ");
  4001                           	movlw	(low((((STR_19)-__stringbase)|8000h)))&0ffh
  4002  053C  306E               	movwf	(writeStrLCD@string)
  4003  053D  00A2               	movlw	80h
  4004  053E  3080               	movwf	(writeStrLCD@string+1)
  4005  053F  00A3               	fcall	_writeStrLCD
  4006  0540  160A  118A  232A  120A  118A  	line	282
  4007                           	
  4008                           l4548:	
  4009  0545                     ;mainM.c: 282:                 if(alarm){
  4010                           	bsf	status, 5	;RP0=1, select bank1
  4011  0545  1683               	bcf	status, 6	;RP1=0, select bank1
  4012  0546  1303               	movf	((_alarm)^080h),w
  4013  0547  083D               	btfsc	status,2
  4014  0548  1903               	goto	u6961
  4015  0549  2D4B               	goto	u6960
  4016  054A  2D4C               u6961:
  4017  054B                     	goto	l4552
  4018  054B  2D58               u6960:
  4019  054C                     	line	283
  4020                           	
  4021                           l4550:	
  4022  054C                     ;mainM.c: 283:                     writeStrLCD("ACTIVA");
  4023                           	movlw	(low((((STR_20)-__stringbase)|8000h)))&0ffh
  4024  054C  307E               	bcf	status, 5	;RP0=0, select bank0
  4025  054D  1283               	bcf	status, 6	;RP1=0, select bank0
  4026  054E  1303               	movwf	(writeStrLCD@string)
  4027  054F  00A2               	movlw	80h
  4028  0550  3080               	movwf	(writeStrLCD@string+1)
  4029  0551  00A3               	fcall	_writeStrLCD
  4030  0552  160A  118A  232A  120A  118A  	line	284
  4031                           ;mainM.c: 284:                 }else{
  4032                           	goto	l4554
  4033  0557  2D64               	
  4034                           l296:	
  4035  0558                     	line	285
  4036                           	
  4037                           l4552:	
  4038  0558                     ;mainM.c: 285:                     writeStrLCD("DESCATIVADA");
  4039                           	movlw	(low((((STR_21)-__stringbase)|8000h)))&0ffh
  4040  0558  3062               	bcf	status, 5	;RP0=0, select bank0
  4041  0559  1283               	bcf	status, 6	;RP1=0, select bank0
  4042  055A  1303               	movwf	(writeStrLCD@string)
  4043  055B  00A2               	movlw	80h
  4044  055C  3080               	movwf	(writeStrLCD@string+1)
  4045  055D  00A3               	fcall	_writeStrLCD
  4046  055E  160A  118A  232A  120A  118A  	goto	l4554
  4047  0563  2D64               	line	286
  4048                           ;mainM.c: 286:                 }
  4049                           	
  4050                           l297:	
  4051  0564                     	line	287
  4052                           	
  4053                           l4554:	
  4054  0564                     ;mainM.c: 287:                 writeCharLCD(' ');
  4055                           	movlw	low(020h)
  4056  0564  3020               	fcall	_writeCharLCD
  4057  0565  160A  118A  2147  120A  118A  	line	288
  4058                           ;mainM.c: 288:             }else if(screenCounter == 1){
  4059                           	goto	l4360
  4060  056A  282C               	
  4061                           l295:	
  4062  056B                     	
  4063                           l4556:	
  4064  056B                     	bcf	status, 5	;RP0=0, select bank0
  4065  056B  1283               	bcf	status, 6	;RP1=0, select bank0
  4066  056C  1303               		decf	((_screenCounter)),w
  4067  056D  036C               	btfss	status,2
  4068  056E  1D03               	goto	u6971
  4069  056F  2D71               	goto	u6970
  4070  0570  2D72               u6971:
  4071  0571                     	goto	l4564
  4072  0571  2D8E               u6970:
  4073  0572                     	line	289
  4074                           	
  4075                           l4558:	
  4076  0572                     ;mainM.c: 289:                 if(signal){
  4077                           	movf	((_signal)),w
  4078  0572  0872               	btfsc	status,2
  4079  0573  1903               	goto	u6981
  4080  0574  2D76               	goto	u6980
  4081  0575  2D77               u6981:
  4082  0576                     	goto	l4562
  4083  0576  2D81               u6980:
  4084  0577                     	line	290
  4085                           	
  4086                           l4560:	
  4087  0577                     ;mainM.c: 290:                     writeStrLCD("PUERTA ABIERTA");
  4088                           	movlw	(low((((STR_22)-__stringbase)|8000h)))&0ffh
  4089  0577  301A               	movwf	(writeStrLCD@string)
  4090  0578  00A2               	movlw	80h
  4091  0579  3080               	movwf	(writeStrLCD@string+1)
  4092  057A  00A3               	fcall	_writeStrLCD
  4093  057B  160A  118A  232A  120A  118A  	line	291
  4094                           ;mainM.c: 291:                 }else{
  4095                           	goto	l4360
  4096  0580  282C               	
  4097                           l300:	
  4098  0581                     	line	292
  4099                           	
  4100                           l4562:	
  4101  0581                     ;mainM.c: 292:                     writeStrLCD("PUERTA CERRADA");
  4102                           	movlw	(low((((STR_23)-__stringbase)|8000h)))&0ffh
  4103  0581  300B               	bcf	status, 5	;RP0=0, select bank0
  4104  0582  1283               	bcf	status, 6	;RP1=0, select bank0
  4105  0583  1303               	movwf	(writeStrLCD@string)
  4106  0584  00A2               	movlw	80h
  4107  0585  3080               	movwf	(writeStrLCD@string+1)
  4108  0586  00A3               	fcall	_writeStrLCD
  4109  0587  160A  118A  232A  120A  118A  	goto	l4360
  4110  058C  282C               	line	293
  4111                           ;mainM.c: 293:                 }
  4112                           	
  4113                           l301:	
  4114  058D                     	line	294
  4115                           ;mainM.c: 294:             }else if(screenCounter == 2){
  4116                           	goto	l4360
  4117  058D  282C               	
  4118                           l299:	
  4119  058E                     	
  4120                           l4564:	
  4121  058E                     		movlw	2
  4122  058E  3002               	bcf	status, 5	;RP0=0, select bank0
  4123  058F  1283               	bcf	status, 6	;RP1=0, select bank0
  4124  0590  1303               	xorwf	((_screenCounter)),w
  4125  0591  066C               	btfss	status,2
  4126  0592  1D03               	goto	u6991
  4127  0593  2D95               	goto	u6990
  4128  0594  2D96               u6991:
  4129  0595                     	goto	l4360
  4130  0595  282C               u6990:
  4131  0596                     	line	295
  4132                           	
  4133                           l4566:	
  4134  0596                     ;mainM.c: 295:                 if(garage){
  4135                           	bsf	status, 5	;RP0=1, select bank1
  4136  0596  1683               	bcf	status, 6	;RP1=0, select bank1
  4137  0597  1303               	movf	((_garage)^080h),w
  4138  0598  0833               	btfsc	status,2
  4139  0599  1903               	goto	u7001
  4140  059A  2D9C               	goto	u7000
  4141  059B  2D9D               u7001:
  4142  059C                     	goto	l4570
  4143  059C  2DA9               u7000:
  4144  059D                     	line	296
  4145                           	
  4146                           l4568:	
  4147  059D                     ;mainM.c: 296:                     writeStrLCD("GARAGE ABIERTO");
  4148                           	movlw	(low((((STR_24)-__stringbase)|8000h)))&0ffh
  4149  059D  3047               	bcf	status, 5	;RP0=0, select bank0
  4150  059E  1283               	bcf	status, 6	;RP1=0, select bank0
  4151  059F  1303               	movwf	(writeStrLCD@string)
  4152  05A0  00A2               	movlw	80h
  4153  05A1  3080               	movwf	(writeStrLCD@string+1)
  4154  05A2  00A3               	fcall	_writeStrLCD
  4155  05A3  160A  118A  232A  120A  118A  	line	297
  4156                           ;mainM.c: 297:                 }else{
  4157                           	goto	l4360
  4158  05A8  282C               	
  4159                           l304:	
  4160  05A9                     	line	298
  4161                           	
  4162                           l4570:	
  4163  05A9                     ;mainM.c: 298:                     writeStrLCD("GARAGE CERRADO");
  4164                           	movlw	(low((((STR_25)-__stringbase)|8000h)))&0ffh
  4165  05A9  3029               	bcf	status, 5	;RP0=0, select bank0
  4166  05AA  1283               	bcf	status, 6	;RP1=0, select bank0
  4167  05AB  1303               	movwf	(writeStrLCD@string)
  4168  05AC  00A2               	movlw	80h
  4169  05AD  3080               	movwf	(writeStrLCD@string+1)
  4170  05AE  00A3               	fcall	_writeStrLCD
  4171  05AF  160A  118A  232A  120A  118A  	goto	l4360
  4172  05B4  282C               	line	299
  4173                           ;mainM.c: 299:                 }
  4174                           	
  4175                           l305:	
  4176  05B5                     	goto	l4360
  4177  05B5  282C               	line	300
  4178                           ;mainM.c: 300:             }
  4179                           	
  4180                           l303:	
  4181  05B6                     	goto	l4360
  4182  05B6  282C               	
  4183                           l302:	
  4184  05B7                     	goto	l4360
  4185  05B7  282C               	
  4186                           l298:	
  4187  05B8                     	goto	l4360
  4188  05B8  282C               	line	301
  4189                           ;mainM.c: 301:         }
  4190                           	
  4191                           l287:	
  4192  05B9                     	goto	l4360
  4193  05B9  282C               	line	302
  4194                           ;mainM.c: 302:     }
  4195                           	
  4196                           l306:	
  4197  05BA                     	goto	l4360
  4198  05BA  282C               	
  4199                           l307:	
  4200  05BB                     	line	304
  4201                           ;mainM.c: 303:     return;
  4202                           	
  4203                           l308:	
  4204  05BB                     	global	start
  4205                           	ljmp	start
  4206  05BB  120A  118A  280C   	opt stack 0
  4207                           GLOBAL	__end_of_main
  4208                           	__end_of_main:
  4209  05BE                     	signat	_main,89
  4210                           	global	_writeIntLCD
  4211                           
  4212 ;; *************** function _writeIntLCD *****************
  4213 ;; Defined at:
  4214 ;;		line 57 in file "LCD.c"
  4215 ;; Parameters:    Size  Location     Type
  4216 ;;  numero          1    wreg     unsigned char 
  4217 ;; Auto vars:     Size  Location     Type
  4218 ;;  numero          1   34[BANK0 ] unsigned char 
  4219 ;;  buffer          4   30[BANK0 ] unsigned char [4]
  4220 ;; Return value:  Size  Location     Type
  4221 ;;                  1    wreg      void 
  4222 ;; Registers used:
  4223 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4224 ;; Tracked objects:
  4225 ;;		On entry : 0/0
  4226 ;;		On exit  : 0/0
  4227 ;;		Unchanged: 0/0
  4228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4229 ;;      Params:         0       0       0       0       0
  4230 ;;      Locals:         0       5       0       0       0
  4231 ;;      Temps:          0       3       0       0       0
  4232 ;;      Totals:         0       8       0       0       0
  4233 ;;Total ram usage:        8 bytes
  4234 ;; Hardware stack levels used:    1
  4235 ;; Hardware stack levels required when called:    4
  4236 ;; This function calls:
  4237 ;;		_sprintf
  4238 ;;		_writeStrLCD
  4239 ;; This function is called by:
  4240 ;;		_main
  4241 ;;		_writeFloat
  4242 ;; This function uses a non-reentrant model
  4243 ;;
  4244                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4245                           	file	"LCD.c"
  4246                           	line	57
  4247                           global __ptext1
  4248                           __ptext1:	;psect for function _writeIntLCD
  4249  118E                     psect	text1
  4250                           	file	"LCD.c"
  4251                           	line	57
  4252                           	global	__size_of_writeIntLCD
  4253                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  4254  0020                     	
  4255                           _writeIntLCD:	
  4256  118E                     ;incstack = 0
  4257                           	opt	stack 3
  4258                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4259                           ;writeIntLCD@numero stored from wreg
  4260                           	bcf	status, 5	;RP0=0, select bank0
  4261  118E  1283               	bcf	status, 6	;RP1=0, select bank0
  4262  118F  1303               	movwf	(writeIntLCD@numero)
  4263  1190  00C2               	line	59
  4264                           	
  4265                           l3882:	
  4266  1191                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  4267                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  4268  1191  3090               	movwf	(??_writeIntLCD+0)+0
  4269  1192  00BB               	movf	(??_writeIntLCD+0)+0,w
  4270  1193  083B               	movwf	(sprintf@f)
  4271  1194  00AE               	movf	(writeIntLCD@numero),w
  4272  1195  0842               	movwf	(??_writeIntLCD+1)+0
  4273  1196  00BC               	clrf	(??_writeIntLCD+1)+0+1
  4274  1197  01BD               	movf	0+(??_writeIntLCD+1)+0,w
  4275  1198  083C               	movwf	0+(?_sprintf)+01h
  4276  1199  00AF               	movf	1+(??_writeIntLCD+1)+0,w
  4277  119A  083D               	movwf	1+(?_sprintf)+01h
  4278  119B  00B0               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  4279  119C  303E               	fcall	_sprintf
  4280  119D  120A  118A  25BE  160A  118A  	line	60
  4281                           ;LCD.c: 60:     writeStrLCD(buffer);
  4282                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  4283  11A2  303E               	bcf	status, 5	;RP0=0, select bank0
  4284  11A3  1283               	bcf	status, 6	;RP1=0, select bank0
  4285  11A4  1303               	movwf	(writeStrLCD@string)
  4286  11A5  00A2               	movlw	(0x0)
  4287  11A6  3000               	movwf	(writeStrLCD@string+1)
  4288  11A7  00A3               	fcall	_writeStrLCD
  4289  11A8  160A  118A  232A  160A  118A  	line	61
  4290                           	
  4291                           l97:	
  4292  11AD                     	return
  4293  11AD  0008               	opt stack 0
  4294                           GLOBAL	__end_of_writeIntLCD
  4295                           	__end_of_writeIntLCD:
  4296  11AE                     	signat	_writeIntLCD,4217
  4297                           	global	_writeStrLCD
  4298                           
  4299 ;; *************** function _writeStrLCD *****************
  4300 ;; Defined at:
  4301 ;;		line 21 in file "LCD.c"
  4302 ;; Parameters:    Size  Location     Type
  4303 ;;  string          2    2[BANK0 ] PTR unsigned char 
  4304 ;;		 -> STR_25(15), STR_24(15), STR_23(15), STR_22(15), 
  4305 ;;		 -> STR_21(12), STR_20(7), STR_19(8), STR_18(15), 
  4306 ;;		 -> STR_17(11), STR_16(8), STR_15(8), STR_14(8), 
  4307 ;;		 -> STR_13(12), STR_12(15), STR_11(15), STR_10(15), 
  4308 ;;		 -> STR_9(11), STR_8(8), STR_7(8), STR_6(8), 
  4309 ;;		 -> STR_5(12), STR_4(5), STR_3(6), writeIntLCD16@buffer(5), 
  4310 ;;		 -> writeIntLCD@buffer(4), 
  4311 ;; Auto vars:     Size  Location     Type
  4312 ;;  cont            2    7[BANK0 ] int 
  4313 ;; Return value:  Size  Location     Type
  4314 ;;                  1    wreg      void 
  4315 ;; Registers used:
  4316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4317 ;; Tracked objects:
  4318 ;;		On entry : 0/0
  4319 ;;		On exit  : 0/0
  4320 ;;		Unchanged: 0/0
  4321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4322 ;;      Params:         0       2       0       0       0
  4323 ;;      Locals:         0       2       0       0       0
  4324 ;;      Temps:          0       3       0       0       0
  4325 ;;      Totals:         0       7       0       0       0
  4326 ;;Total ram usage:        7 bytes
  4327 ;; Hardware stack levels used:    1
  4328 ;; Hardware stack levels required when called:    3
  4329 ;; This function calls:
  4330 ;;		_writeCharLCD
  4331 ;; This function is called by:
  4332 ;;		_writeIntLCD
  4333 ;;		_main
  4334 ;;		_writeIntLCD16
  4335 ;; This function uses a non-reentrant model
  4336 ;;
  4337                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4338                           	line	21
  4339                           global __ptext2
  4340                           __ptext2:	;psect for function _writeStrLCD
  4341  132A                     psect	text2
  4342                           	file	"LCD.c"
  4343                           	line	21
  4344                           	global	__size_of_writeStrLCD
  4345                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  4346  0048                     	
  4347                           _writeStrLCD:	
  4348  132A                     ;incstack = 0
  4349                           	opt	stack 4
  4350                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4351                           	line	23
  4352                           	
  4353                           l3704:	
  4354  132A                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  4355                           	bcf	status, 5	;RP0=0, select bank0
  4356  132A  1283               	bcf	status, 6	;RP1=0, select bank0
  4357  132B  1303               	clrf	(writeStrLCD@cont)
  4358  132C  01A7               	clrf	(writeStrLCD@cont+1)
  4359  132D  01A8               	goto	l3710
  4360  132E  2B54               	
  4361                           l83:	
  4362  132F                     	line	24
  4363                           	
  4364                           l3706:	
  4365  132F                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  4366                           	movf	(writeStrLCD@cont),w
  4367  132F  0827               	addwf	(writeStrLCD@string),w
  4368  1330  0722               	movwf	(??_writeStrLCD+1)+0
  4369  1331  00A5               	movf	(writeStrLCD@string+1),w
  4370  1332  0823               	movwf	(??_writeStrLCD+0)+0
  4371  1333  00A4               	skipnc
  4372  1334  1803               	incf	(??_writeStrLCD+0)+0,f
  4373  1335  0AA4               	btfss	(writeStrLCD@cont),7
  4374  1336  1FA7               	goto	u5330
  4375  1337  2B39               	decf	(??_writeStrLCD+0)+0,f
  4376  1338  03A4               u5330:
  4377  1339                     	bcf	status, 5	;RP0=0, select bank0
  4378  1339  1283               	bcf	status, 6	;RP1=0, select bank0
  4379  133A  1303               	movf	(??_writeStrLCD+0)+0,w
  4380  133B  0824               	movwf	0+((??_writeStrLCD+1)+0)+1
  4381  133C  00A6               	movf	1+(??_writeStrLCD+1)+0,w
  4382  133D  0826               	movwf	btemp+1
  4383  133E  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  4384  133F  0825               	movwf	fsr0
  4385  1340  0084               	fcall	stringtab
  4386  1341  120A  158A  2000  160A  118A  	fcall	_writeCharLCD
  4387  1346  160A  118A  2147  160A  118A  	line	25
  4388                           	
  4389                           l3708:	
  4390  134B                     ;LCD.c: 25:     }
  4391                           	movlw	01h
  4392  134B  3001               	bcf	status, 5	;RP0=0, select bank0
  4393  134C  1283               	bcf	status, 6	;RP1=0, select bank0
  4394  134D  1303               	addwf	(writeStrLCD@cont),f
  4395  134E  07A7               	skipnc
  4396  134F  1803               	incf	(writeStrLCD@cont+1),f
  4397  1350  0AA8               	movlw	0
  4398  1351  3000               	addwf	(writeStrLCD@cont+1),f
  4399  1352  07A8               	goto	l3710
  4400  1353  2B54               	
  4401                           l82:	
  4402  1354                     	
  4403                           l3710:	
  4404  1354                     	movf	(writeStrLCD@cont),w
  4405  1354  0827               	addwf	(writeStrLCD@string),w
  4406  1355  0722               	movwf	(??_writeStrLCD+1)+0
  4407  1356  00A5               	movf	(writeStrLCD@string+1),w
  4408  1357  0823               	movwf	(??_writeStrLCD+0)+0
  4409  1358  00A4               	skipnc
  4410  1359  1803               	incf	(??_writeStrLCD+0)+0,f
  4411  135A  0AA4               	btfss	(writeStrLCD@cont),7
  4412  135B  1FA7               	goto	u5340
  4413  135C  2B5E               	decf	(??_writeStrLCD+0)+0,f
  4414  135D  03A4               u5340:
  4415  135E                     	bcf	status, 5	;RP0=0, select bank0
  4416  135E  1283               	bcf	status, 6	;RP1=0, select bank0
  4417  135F  1303               	movf	(??_writeStrLCD+0)+0,w
  4418  1360  0824               	movwf	0+((??_writeStrLCD+1)+0)+1
  4419  1361  00A6               	movf	1+(??_writeStrLCD+1)+0,w
  4420  1362  0826               	movwf	btemp+1
  4421  1363  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  4422  1364  0825               	movwf	fsr0
  4423  1365  0084               	fcall	stringtab
  4424  1366  120A  158A  2000  160A  118A  	xorlw	0
  4425  136B  3A00               	skipz
  4426  136C  1D03               	goto	u5351
  4427  136D  2B6F               	goto	u5350
  4428  136E  2B70               u5351:
  4429  136F                     	goto	l3706
  4430  136F  2B2F               u5350:
  4431  1370                     	goto	l85
  4432  1370  2B71               	
  4433                           l84:	
  4434  1371                     	line	26
  4435                           	
  4436                           l85:	
  4437  1371                     	return
  4438  1371  0008               	opt stack 0
  4439                           GLOBAL	__end_of_writeStrLCD
  4440                           	__end_of_writeStrLCD:
  4441  1372                     	signat	_writeStrLCD,4217
  4442                           	global	_writeCharLCD
  4443                           
  4444 ;; *************** function _writeCharLCD *****************
  4445 ;; Defined at:
  4446 ;;		line 28 in file "LCD.c"
  4447 ;; Parameters:    Size  Location     Type
  4448 ;;  character       1    wreg     unsigned char 
  4449 ;; Auto vars:     Size  Location     Type
  4450 ;;  character       1    1[BANK0 ] unsigned char 
  4451 ;; Return value:  Size  Location     Type
  4452 ;;                  1    wreg      void 
  4453 ;; Registers used:
  4454 ;;		wreg
  4455 ;; Tracked objects:
  4456 ;;		On entry : 0/0
  4457 ;;		On exit  : 0/0
  4458 ;;		Unchanged: 0/0
  4459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4460 ;;      Params:         0       0       0       0       0
  4461 ;;      Locals:         0       1       0       0       0
  4462 ;;      Temps:          0       1       0       0       0
  4463 ;;      Totals:         0       2       0       0       0
  4464 ;;Total ram usage:        2 bytes
  4465 ;; Hardware stack levels used:    1
  4466 ;; Hardware stack levels required when called:    2
  4467 ;; This function calls:
  4468 ;;		Nothing
  4469 ;; This function is called by:
  4470 ;;		_writeStrLCD
  4471 ;;		_main
  4472 ;;		_writeFloat
  4473 ;; This function uses a non-reentrant model
  4474 ;;
  4475                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4476                           	line	28
  4477                           global __ptext3
  4478                           __ptext3:	;psect for function _writeCharLCD
  4479  1147                     psect	text3
  4480                           	file	"LCD.c"
  4481                           	line	28
  4482                           	global	__size_of_writeCharLCD
  4483                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  4484  0012                     	
  4485                           _writeCharLCD:	
  4486  1147                     ;incstack = 0
  4487                           	opt	stack 4
  4488                           ; Regs used in _writeCharLCD: [wreg]
  4489                           ;writeCharLCD@character stored from wreg
  4490                           	bcf	status, 5	;RP0=0, select bank0
  4491  1147  1283               	bcf	status, 6	;RP1=0, select bank0
  4492  1148  1303               	movwf	(writeCharLCD@character)
  4493  1149  00A1               	line	29
  4494                           	
  4495                           l3628:	
  4496  114A                     ;LCD.c: 29:    RD0 = 1;
  4497                           	bsf	(64/8),(64)&7	;volatile
  4498  114A  1408               	line	30
  4499                           	
  4500                           l3630:	
  4501  114B                     ;LCD.c: 30:    PORTB = character;
  4502                           	movf	(writeCharLCD@character),w
  4503  114B  0821               	movwf	(6)	;volatile
  4504  114C  0086               	line	31
  4505                           	
  4506                           l3632:	
  4507  114D                     ;LCD.c: 31:    RD1 = 1;
  4508                           	bsf	(65/8),(65)&7	;volatile
  4509  114D  1488               	line	32
  4510                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  4511                           	opt asmopt_push
  4512                           opt asmopt_off
  4513                           	movlw	12
  4514  114E  300C               	bcf	status, 5	;RP0=0, select bank0
  4515  114F  1283               	bcf	status, 6	;RP1=0, select bank0
  4516  1150  1303               movwf	((??_writeCharLCD+0)+0),f
  4517  1151  00A0               	u7047:
  4518  1152                     decfsz	(??_writeCharLCD+0)+0,f
  4519  1152  0BA0               	goto	u7047
  4520  1153  2952               	nop
  4521  1154  0000               opt asmopt_pop
  4522                           
  4523                           	line	33
  4524                           	
  4525                           l3634:	
  4526  1155                     ;LCD.c: 33:    RD1 = 0;
  4527                           	bcf	status, 5	;RP0=0, select bank0
  4528  1155  1283               	bcf	status, 6	;RP1=0, select bank0
  4529  1156  1303               	bcf	(65/8),(65)&7	;volatile
  4530  1157  1088               	line	34
  4531                           	
  4532                           l88:	
  4533  1158                     	return
  4534  1158  0008               	opt stack 0
  4535                           GLOBAL	__end_of_writeCharLCD
  4536                           	__end_of_writeCharLCD:
  4537  1159                     	signat	_writeCharLCD,4217
  4538                           	global	_sprintf
  4539                           
  4540 ;; *************** function _sprintf *****************
  4541 ;; Defined at:
  4542 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4543 ;; Parameters:    Size  Location     Type
  4544 ;;  sp              1    wreg     PTR unsigned char 
  4545 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  4546 ;;  f               1   14[BANK0 ] PTR const unsigned char 
  4547 ;;		 -> STR_2(3), STR_1(3), 
  4548 ;; Auto vars:     Size  Location     Type
  4549 ;;  sp              1   25[BANK0 ] PTR unsigned char 
  4550 ;;		 -> writeIntLCD16@buffer(5), writeIntLCD@buffer(4), 
  4551 ;;  tmpval          4    0        struct .
  4552 ;;  val             2   23[BANK0 ] unsigned int 
  4553 ;;  cp              2    0        PTR const unsigned char 
  4554 ;;  len             2    0        unsigned int 
  4555 ;;  c               1   26[BANK0 ] unsigned char 
  4556 ;;  prec            1   22[BANK0 ] char 
  4557 ;;  flag            1   21[BANK0 ] unsigned char 
  4558 ;;  ap              1   20[BANK0 ] PTR void [1]
  4559 ;;		 -> ?_sprintf(2), 
  4560 ;; Return value:  Size  Location     Type
  4561 ;;                  2   14[BANK0 ] int 
  4562 ;; Registers used:
  4563 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4564 ;; Tracked objects:
  4565 ;;		On entry : 0/0
  4566 ;;		On exit  : 0/0
  4567 ;;		Unchanged: 0/0
  4568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4569 ;;      Params:         0       3       0       0       0
  4570 ;;      Locals:         0       7       0       0       0
  4571 ;;      Temps:          0       3       0       0       0
  4572 ;;      Totals:         0      13       0       0       0
  4573 ;;Total ram usage:       13 bytes
  4574 ;; Hardware stack levels used:    1
  4575 ;; Hardware stack levels required when called:    3
  4576 ;; This function calls:
  4577 ;;		___lwdiv
  4578 ;;		___lwmod
  4579 ;; This function is called by:
  4580 ;;		_writeIntLCD
  4581 ;;		_writeIntLCD16
  4582 ;; This function uses a non-reentrant model
  4583 ;;
  4584                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4585                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4586                           	line	500
  4587                           global __ptext4
  4588                           __ptext4:	;psect for function _sprintf
  4589  05BE                     psect	text4
  4590                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  4591                           	line	500
  4592                           	global	__size_of_sprintf
  4593                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  4594  0102                     	
  4595                           _sprintf:	
  4596  05BE                     ;incstack = 0
  4597                           	opt	stack 3
  4598                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4599                           ;sprintf@sp stored from wreg
  4600                           	bcf	status, 5	;RP0=0, select bank0
  4601  05BE  1283               	bcf	status, 6	;RP1=0, select bank0
  4602  05BF  1303               	movwf	(sprintf@sp)
  4603  05C0  00B9               	line	545
  4604                           	
  4605                           l3730:	
  4606  05C1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  4607                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  4608  05C1  302F               	movwf	(??_sprintf+0)+0
  4609  05C2  00B1               	movf	(??_sprintf+0)+0,w
  4610  05C3  0831               	movwf	(sprintf@ap)
  4611  05C4  00B4               	line	548
  4612                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  4613                           	goto	l3782
  4614  05C5  2EA6               	
  4615                           l505:	
  4616  05C6                     	line	550
  4617                           	
  4618                           l3732:	
  4619  05C6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  4620                           		movlw	37
  4621  05C6  3025               	xorwf	((sprintf@c)),w
  4622  05C7  063A               	btfsc	status,2
  4623  05C8  1903               	goto	u5361
  4624  05C9  2DCB               	goto	u5360
  4625  05CA  2DCC               u5361:
  4626  05CB                     	goto	l3738
  4627  05CB  2DD8               u5360:
  4628  05CC                     	line	553
  4629                           	
  4630                           l3734:	
  4631  05CC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  4632                           	movf	(sprintf@c),w
  4633  05CC  083A               	movwf	(??_sprintf+0)+0
  4634  05CD  00B1               	movf	(sprintf@sp),w
  4635  05CE  0839               	movwf	fsr0
  4636  05CF  0084               	movf	(??_sprintf+0)+0,w
  4637  05D0  0831               	bcf	status, 7	;select IRP bank0
  4638  05D1  1383               	movwf	indf
  4639  05D2  0080               	
  4640                           l3736:	
  4641  05D3                     	movlw	low(01h)
  4642  05D3  3001               	movwf	(??_sprintf+0)+0
  4643  05D4  00B1               	movf	(??_sprintf+0)+0,w
  4644  05D5  0831               	addwf	(sprintf@sp),f
  4645  05D6  07B9               	line	554
  4646                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  4647                           	goto	l3782
  4648  05D7  2EA6               	line	555
  4649                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  4650                           	
  4651                           l506:	
  4652  05D8                     	line	560
  4653                           	
  4654                           l3738:	
  4655  05D8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  4656                           	clrf	(sprintf@flag)
  4657  05D8  01B5               	line	654
  4658                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  4659                           	goto	l3742
  4660  05D9  2DDF               	line	656
  4661                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  4662                           	
  4663                           l508:	
  4664  05DA                     	line	657
  4665                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  4666                           	goto	l3784
  4667  05DA  2EBA               	line	716
  4668                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  4669                           	
  4670                           l510:	
  4671  05DB                     	goto	l3744
  4672  05DB  2DFC               	line	717
  4673                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  4674                           	
  4675                           l511:	
  4676  05DC                     	line	718
  4677                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  4678                           	goto	l3744
  4679  05DC  2DFC               	line	821
  4680                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  4681                           	
  4682                           l513:	
  4683  05DD                     	line	832
  4684                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  4685                           	goto	l3782
  4686  05DD  2EA6               	line	841
  4687                           	
  4688                           l3740:	
  4689  05DE                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  4690                           	goto	l3744
  4691  05DE  2DFC               	
  4692                           l507:	
  4693  05DF                     	
  4694                           l3742:	
  4695  05DF                     	movlw	01h
  4696  05DF  3001               	addwf	(sprintf@f),f
  4697  05E0  07AE               	movlw	-01h
  4698  05E1  30FF               	addwf	(sprintf@f),w
  4699  05E2  072E               	movwf	fsr0
  4700  05E3  0084               	fcall	stringdir
  4701  05E4  120A  158A  200A  120A  118A  	movwf	(sprintf@c)
  4702  05E9  00BA               	movwf	(??_sprintf+0)+0
  4703  05EA  00B1               	clrf	(??_sprintf+0)+0+1
  4704  05EB  01B2               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4705                           ; Switch size 1, requested type "space"
  4706                           ; Number of cases is 1, Range of values is 0 to 0
  4707                           ; switch strategies available:
  4708                           ; Name         Instructions Cycles
  4709                           ; simple_byte            4     3 (average)
  4710                           ; direct_byte           11     8 (fixed)
  4711                           ; jumptable            260     6 (fixed)
  4712                           ;	Chosen strategy is simple_byte
  4713                           
  4714                           	movf 1+(??_sprintf+0)+0,w
  4715  05EC  0832               	opt asmopt_push
  4716                           	opt asmopt_off
  4717                           	xorlw	0^0	; case 0
  4718  05ED  3A00               	skipnz
  4719  05EE  1903               	goto	l4592
  4720  05EF  2DF1               	goto	l3782
  4721  05F0  2EA6               	opt asmopt_pop
  4722                           	
  4723                           l4592:	
  4724  05F1                     ; Switch size 1, requested type "space"
  4725                           ; Number of cases is 3, Range of values is 0 to 105
  4726                           ; switch strategies available:
  4727                           ; Name         Instructions Cycles
  4728                           ; simple_byte           10     6 (average)
  4729                           ; jumptable            260     6 (fixed)
  4730                           ;	Chosen strategy is simple_byte
  4731                           
  4732                           	movf 0+(??_sprintf+0)+0,w
  4733  05F1  0831               	opt asmopt_push
  4734                           	opt asmopt_off
  4735                           	xorlw	0^0	; case 0
  4736  05F2  3A00               	skipnz
  4737  05F3  1903               	goto	l3784
  4738  05F4  2EBA               	xorlw	100^0	; case 100
  4739  05F5  3A64               	skipnz
  4740  05F6  1903               	goto	l3744
  4741  05F7  2DFC               	xorlw	105^100	; case 105
  4742  05F8  3A0D               	skipnz
  4743  05F9  1903               	goto	l3744
  4744  05FA  2DFC               	goto	l3782
  4745  05FB  2EA6               	opt asmopt_pop
  4746                           
  4747                           	
  4748                           l512:	
  4749  05FC                     	line	1278
  4750                           	
  4751                           l3744:	
  4752  05FC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  4753                           	movf	(sprintf@ap),w
  4754  05FC  0834               	movwf	fsr0
  4755  05FD  0084               	bcf	status, 7	;select IRP bank0
  4756  05FE  1383               	movf	indf,w
  4757  05FF  0800               	movwf	(sprintf@val)
  4758  0600  00B7               	incf	fsr0,f
  4759  0601  0A84               	movf	indf,w
  4760  0602  0800               	movwf	(sprintf@val+1)
  4761  0603  00B8               	
  4762                           l3746:	
  4763  0604                     	movlw	low(02h)
  4764  0604  3002               	movwf	(??_sprintf+0)+0
  4765  0605  00B1               	movf	(??_sprintf+0)+0,w
  4766  0606  0831               	addwf	(sprintf@ap),f
  4767  0607  07B4               	line	1280
  4768                           	
  4769                           l3748:	
  4770  0608                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  4771                           	btfss	(sprintf@val+1),7
  4772  0608  1FB8               	goto	u5371
  4773  0609  2E0B               	goto	u5370
  4774  060A  2E0C               u5371:
  4775  060B                     	goto	l3754
  4776  060B  2E16               u5370:
  4777  060C                     	line	1281
  4778                           	
  4779                           l3750:	
  4780  060C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  4781                           	movlw	low(03h)
  4782  060C  3003               	movwf	(??_sprintf+0)+0
  4783  060D  00B1               	movf	(??_sprintf+0)+0,w
  4784  060E  0831               	iorwf	(sprintf@flag),f
  4785  060F  04B5               	line	1282
  4786                           	
  4787                           l3752:	
  4788  0610                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  4789                           	comf	(sprintf@val),f
  4790  0610  09B7               	comf	(sprintf@val+1),f
  4791  0611  09B8               	incf	(sprintf@val),f
  4792  0612  0AB7               	skipnz
  4793  0613  1903               	incf	(sprintf@val+1),f
  4794  0614  0AB8               	goto	l3754
  4795  0615  2E16               	line	1283
  4796                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  4797                           	
  4798                           l514:	
  4799  0616                     	line	1324
  4800                           	
  4801                           l3754:	
  4802  0616                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  4803                           	clrf	(sprintf@c)
  4804  0616  01BA               	incf	(sprintf@c),f
  4805  0617  0ABA               	
  4806                           l3756:	
  4807  0618                     		movlw	5
  4808  0618  3005               	xorwf	((sprintf@c)),w
  4809  0619  063A               	btfss	status,2
  4810  061A  1D03               	goto	u5381
  4811  061B  2E1D               	goto	u5380
  4812  061C  2E1E               u5381:
  4813  061D                     	goto	l3760
  4814  061D  2E20               u5380:
  4815  061E                     	goto	l3766
  4816  061E  2E48               	
  4817                           l3758:	
  4818  061F                     	goto	l3766
  4819  061F  2E48               	
  4820                           l515:	
  4821  0620                     	line	1325
  4822                           	
  4823                           l3760:	
  4824  0620                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  4825                           	movf	(sprintf@c),w
  4826  0620  083A               	movwf	(??_sprintf+0)+0
  4827  0621  00B1               	addwf	(??_sprintf+0)+0,w
  4828  0622  0731               	addlw	low((((_dpowers)-__stringbase)|8000h))
  4829  0623  3E01               	movwf	fsr0
  4830  0624  0084               	fcall	stringdir
  4831  0625  120A  158A  200A  120A  118A  	movwf	(??_sprintf+1)+0
  4832  062A  00B2               	fcall	stringdir
  4833  062B  120A  158A  200A  120A  118A  	movwf	(??_sprintf+1)+0+1
  4834  0630  00B3               	movf	1+(??_sprintf+1)+0,w
  4835  0631  0833               	subwf	(sprintf@val+1),w
  4836  0632  0238               	skipz
  4837  0633  1D03               	goto	u5395
  4838  0634  2E37               	movf	0+(??_sprintf+1)+0,w
  4839  0635  0832               	subwf	(sprintf@val),w
  4840  0636  0237               u5395:
  4841  0637                     	skipnc
  4842  0637  1803               	goto	u5391
  4843  0638  2E3A               	goto	u5390
  4844  0639  2E3B               u5391:
  4845  063A                     	goto	l3764
  4846  063A  2E3D               u5390:
  4847  063B                     	goto	l3766
  4848  063B  2E48               	line	1326
  4849                           	
  4850                           l3762:	
  4851  063C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  4852                           	goto	l3766
  4853  063C  2E48               	
  4854                           l517:	
  4855  063D                     	
  4856                           l3764:	
  4857  063D                     	movlw	low(01h)
  4858  063D  3001               	movwf	(??_sprintf+0)+0
  4859  063E  00B1               	movf	(??_sprintf+0)+0,w
  4860  063F  0831               	addwf	(sprintf@c),f
  4861  0640  07BA               		movlw	5
  4862  0641  3005               	xorwf	((sprintf@c)),w
  4863  0642  063A               	btfss	status,2
  4864  0643  1D03               	goto	u5401
  4865  0644  2E46               	goto	u5400
  4866  0645  2E47               u5401:
  4867  0646                     	goto	l3760
  4868  0646  2E20               u5400:
  4869  0647                     	goto	l3766
  4870  0647  2E48               	
  4871                           l516:	
  4872  0648                     	line	1457
  4873                           	
  4874                           l3766:	
  4875  0648                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  4876                           	movf	(sprintf@flag),w
  4877  0648  0835               	andlw	03h
  4878  0649  3903               	btfsc	status,2
  4879  064A  1903               	goto	u5411
  4880  064B  2E4D               	goto	u5410
  4881  064C  2E4E               u5411:
  4882  064D                     	goto	l3772
  4883  064D  2E5A               u5410:
  4884  064E                     	line	1458
  4885                           	
  4886                           l3768:	
  4887  064E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  4888                           	movlw	low(02Dh)
  4889  064E  302D               	movwf	(??_sprintf+0)+0
  4890  064F  00B1               	movf	(sprintf@sp),w
  4891  0650  0839               	movwf	fsr0
  4892  0651  0084               	movf	(??_sprintf+0)+0,w
  4893  0652  0831               	bcf	status, 7	;select IRP bank0
  4894  0653  1383               	movwf	indf
  4895  0654  0080               	
  4896                           l3770:	
  4897  0655                     	movlw	low(01h)
  4898  0655  3001               	movwf	(??_sprintf+0)+0
  4899  0656  00B1               	movf	(??_sprintf+0)+0,w
  4900  0657  0831               	addwf	(sprintf@sp),f
  4901  0658  07B9               	goto	l3772
  4902  0659  2E5A               	
  4903                           l518:	
  4904  065A                     	line	1491
  4905                           	
  4906                           l3772:	
  4907  065A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  4908                           	movf	(sprintf@c),w
  4909  065A  083A               	movwf	(??_sprintf+0)+0
  4910  065B  00B1               	movf	(??_sprintf+0)+0,w
  4911  065C  0831               	movwf	(sprintf@prec)
  4912  065D  00B6               	line	1493
  4913                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4914                           	goto	l3780
  4915  065E  2E9B               	
  4916                           l520:	
  4917  065F                     	line	1508
  4918                           	
  4919                           l3774:	
  4920  065F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  4921                           	movlw	0Ah
  4922  065F  300A               	movwf	(___lwmod@divisor)
  4923  0660  00A8               	movlw	0
  4924  0661  3000               	movwf	((___lwmod@divisor))+1
  4925  0662  00A9               	movf	(sprintf@prec),w
  4926  0663  0836               	movwf	(??_sprintf+0)+0
  4927  0664  00B1               	addwf	(??_sprintf+0)+0,w
  4928  0665  0731               	addlw	low((((_dpowers)-__stringbase)|8000h))
  4929  0666  3E01               	movwf	fsr0
  4930  0667  0084               	fcall	stringdir
  4931  0668  120A  158A  200A  120A  118A  	movwf	(___lwdiv@divisor)
  4932  066D  00A0               	fcall	stringdir
  4933  066E  120A  158A  200A  120A  118A  	movwf	(___lwdiv@divisor+1)
  4934  0673  00A1               	movf	(sprintf@val+1),w
  4935  0674  0838               	movwf	(___lwdiv@dividend+1)
  4936  0675  00A3               	movf	(sprintf@val),w
  4937  0676  0837               	movwf	(___lwdiv@dividend)
  4938  0677  00A2               	fcall	___lwdiv
  4939  0678  160A  118A  2372  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4940  067D  1283               	bcf	status, 6	;RP1=0, select bank0
  4941  067E  1303               	movf	(1+(?___lwdiv)),w
  4942  067F  0821               	movwf	(___lwmod@dividend+1)
  4943  0680  00AB               	movf	(0+(?___lwdiv)),w
  4944  0681  0820               	movwf	(___lwmod@dividend)
  4945  0682  00AA               	fcall	___lwmod
  4946  0683  160A  118A  22E7  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  4947  0688  1283               	bcf	status, 6	;RP1=0, select bank0
  4948  0689  1303               	movf	(0+(?___lwmod)),w
  4949  068A  0828               	addlw	030h
  4950  068B  3E30               	movwf	(??_sprintf+1)+0
  4951  068C  00B2               	movf	(??_sprintf+1)+0,w
  4952  068D  0832               	movwf	(sprintf@c)
  4953  068E  00BA               	line	1543
  4954                           	
  4955                           l3776:	
  4956  068F                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  4957                           	movf	(sprintf@c),w
  4958  068F  083A               	movwf	(??_sprintf+0)+0
  4959  0690  00B1               	movf	(sprintf@sp),w
  4960  0691  0839               	movwf	fsr0
  4961  0692  0084               	movf	(??_sprintf+0)+0,w
  4962  0693  0831               	bcf	status, 7	;select IRP bank0
  4963  0694  1383               	movwf	indf
  4964  0695  0080               	
  4965                           l3778:	
  4966  0696                     	movlw	low(01h)
  4967  0696  3001               	movwf	(??_sprintf+0)+0
  4968  0697  00B1               	movf	(??_sprintf+0)+0,w
  4969  0698  0831               	addwf	(sprintf@sp),f
  4970  0699  07B9               	goto	l3780
  4971  069A  2E9B               	line	1544
  4972                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  4973                           	
  4974                           l519:	
  4975  069B                     	line	1493
  4976                           	
  4977                           l3780:	
  4978  069B                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  4979                           	movlw	low(-1)
  4980  069B  30FF               	movwf	(??_sprintf+0)+0
  4981  069C  00B1               	movf	(??_sprintf+0)+0,w
  4982  069D  0831               	addwf	(sprintf@prec),f
  4983  069E  07B6               		incf	(((sprintf@prec))),w
  4984  069F  0A36               	btfss	status,2
  4985  06A0  1D03               	goto	u5421
  4986  06A1  2EA3               	goto	u5420
  4987  06A2  2EA4               u5421:
  4988  06A3                     	goto	l3774
  4989  06A3  2E5F               u5420:
  4990  06A4                     	goto	l3782
  4991  06A4  2EA6               	
  4992                           l521:	
  4993  06A5                     	goto	l3782
  4994  06A5  2EA6               	line	1552
  4995                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  4996                           	
  4997                           l504:	
  4998  06A6                     	line	548
  4999                           	
  5000                           l3782:	
  5001  06A6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  5002                           	movlw	01h
  5003  06A6  3001               	addwf	(sprintf@f),f
  5004  06A7  07AE               	movlw	-01h
  5005  06A8  30FF               	addwf	(sprintf@f),w
  5006  06A9  072E               	movwf	fsr0
  5007  06AA  0084               	fcall	stringdir
  5008  06AB  120A  158A  200A  120A  118A  	movwf	(??_sprintf+0)+0
  5009  06B0  00B1               	movf	(??_sprintf+0)+0,w
  5010  06B1  0831               	movwf	(sprintf@c)
  5011  06B2  00BA               	movf	(((sprintf@c))),w
  5012  06B3  083A               	btfss	status,2
  5013  06B4  1D03               	goto	u5431
  5014  06B5  2EB7               	goto	u5430
  5015  06B6  2EB8               u5431:
  5016  06B7                     	goto	l3732
  5017  06B7  2DC6               u5430:
  5018  06B8                     	goto	l3784
  5019  06B8  2EBA               	
  5020                           l522:	
  5021  06B9                     	goto	l3784
  5022  06B9  2EBA               	line	1554
  5023                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  5024                           	
  5025                           l509:	
  5026  06BA                     	line	1557
  5027                           	
  5028                           l3784:	
  5029  06BA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  5030                           	movf	(sprintf@sp),w
  5031  06BA  0839               	movwf	fsr0
  5032  06BB  0084               	bcf	status, 7	;select IRP bank0
  5033  06BC  1383               	clrf	indf
  5034  06BD  0180               	goto	l523
  5035  06BE  2EBF               	line	1559
  5036                           	
  5037                           l3786:	
  5038  06BF                     	line	1560
  5039                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  5040                           	
  5041                           l523:	
  5042  06BF                     	return
  5043  06BF  0008               	opt stack 0
  5044                           GLOBAL	__end_of_sprintf
  5045                           	__end_of_sprintf:
  5046  06C0                     	signat	_sprintf,4698
  5047                           	global	___lwmod
  5048                           
  5049 ;; *************** function ___lwmod *****************
  5050 ;; Defined at:
  5051 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  5052 ;; Parameters:    Size  Location     Type
  5053 ;;  divisor         2    8[BANK0 ] unsigned int 
  5054 ;;  dividend        2   10[BANK0 ] unsigned int 
  5055 ;; Auto vars:     Size  Location     Type
  5056 ;;  counter         1   13[BANK0 ] unsigned char 
  5057 ;; Return value:  Size  Location     Type
  5058 ;;                  2    8[BANK0 ] unsigned int 
  5059 ;; Registers used:
  5060 ;;		wreg, status,2, status,0
  5061 ;; Tracked objects:
  5062 ;;		On entry : 0/0
  5063 ;;		On exit  : 0/0
  5064 ;;		Unchanged: 0/0
  5065 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5066 ;;      Params:         0       4       0       0       0
  5067 ;;      Locals:         0       1       0       0       0
  5068 ;;      Temps:          0       1       0       0       0
  5069 ;;      Totals:         0       6       0       0       0
  5070 ;;Total ram usage:        6 bytes
  5071 ;; Hardware stack levels used:    1
  5072 ;; Hardware stack levels required when called:    2
  5073 ;; This function calls:
  5074 ;;		Nothing
  5075 ;; This function is called by:
  5076 ;;		_sprintf
  5077 ;; This function uses a non-reentrant model
  5078 ;;
  5079                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  5080                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  5081                           	line	5
  5082                           global __ptext5
  5083                           __ptext5:	;psect for function ___lwmod
  5084  12E7                     psect	text5
  5085                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  5086                           	line	5
  5087                           	global	__size_of___lwmod
  5088                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  5089  0043                     	
  5090                           ___lwmod:	
  5091  12E7                     ;incstack = 0
  5092                           	opt	stack 3
  5093                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5094                           	line	12
  5095                           	
  5096                           l2402:	
  5097  12E7                     	bcf	status, 5	;RP0=0, select bank0
  5098  12E7  1283               	bcf	status, 6	;RP1=0, select bank0
  5099  12E8  1303               	movf	((___lwmod@divisor)),w
  5100  12E9  0828               iorwf	((___lwmod@divisor+1)),w
  5101  12EA  0429               	btfsc	status,2
  5102  12EB  1903               	goto	u2721
  5103  12EC  2AEE               	goto	u2720
  5104  12ED  2AEF               u2721:
  5105  12EE                     	goto	l2420
  5106  12EE  2B24               u2720:
  5107  12EF                     	line	13
  5108                           	
  5109                           l2404:	
  5110  12EF                     	clrf	(___lwmod@counter)
  5111  12EF  01AD               	incf	(___lwmod@counter),f
  5112  12F0  0AAD               	line	14
  5113                           	goto	l2410
  5114  12F1  2AFE               	
  5115                           l804:	
  5116  12F2                     	line	15
  5117                           	
  5118                           l2406:	
  5119  12F2                     	movlw	01h
  5120  12F2  3001               	
  5121                           u2735:
  5122  12F3                     	clrc
  5123  12F3  1003               	rlf	(___lwmod@divisor),f
  5124  12F4  0DA8               	rlf	(___lwmod@divisor+1),f
  5125  12F5  0DA9               	addlw	-1
  5126  12F6  3EFF               	skipz
  5127  12F7  1D03               	goto	u2735
  5128  12F8  2AF3               	line	16
  5129                           	
  5130                           l2408:	
  5131  12F9                     	movlw	low(01h)
  5132  12F9  3001               	movwf	(??___lwmod+0)+0
  5133  12FA  00AC               	movf	(??___lwmod+0)+0,w
  5134  12FB  082C               	addwf	(___lwmod@counter),f
  5135  12FC  07AD               	goto	l2410
  5136  12FD  2AFE               	line	17
  5137                           	
  5138                           l803:	
  5139  12FE                     	line	14
  5140                           	
  5141                           l2410:	
  5142  12FE                     	btfss	(___lwmod@divisor+1),(15)&7
  5143  12FE  1FA9               	goto	u2741
  5144  12FF  2B01               	goto	u2740
  5145  1300  2B02               u2741:
  5146  1301                     	goto	l2406
  5147  1301  2AF2               u2740:
  5148  1302                     	goto	l2412
  5149  1302  2B04               	
  5150                           l805:	
  5151  1303                     	goto	l2412
  5152  1303  2B04               	line	18
  5153                           	
  5154                           l806:	
  5155  1304                     	line	19
  5156                           	
  5157                           l2412:	
  5158  1304                     	movf	(___lwmod@divisor+1),w
  5159  1304  0829               	subwf	(___lwmod@dividend+1),w
  5160  1305  022B               	skipz
  5161  1306  1D03               	goto	u2755
  5162  1307  2B0A               	movf	(___lwmod@divisor),w
  5163  1308  0828               	subwf	(___lwmod@dividend),w
  5164  1309  022A               u2755:
  5165  130A                     	skipc
  5166  130A  1C03               	goto	u2751
  5167  130B  2B0D               	goto	u2750
  5168  130C  2B0E               u2751:
  5169  130D                     	goto	l2416
  5170  130D  2B15               u2750:
  5171  130E                     	line	20
  5172                           	
  5173                           l2414:	
  5174  130E                     	movf	(___lwmod@divisor),w
  5175  130E  0828               	subwf	(___lwmod@dividend),f
  5176  130F  02AA               	movf	(___lwmod@divisor+1),w
  5177  1310  0829               	skipc
  5178  1311  1C03               	decf	(___lwmod@dividend+1),f
  5179  1312  03AB               	subwf	(___lwmod@dividend+1),f
  5180  1313  02AB               	goto	l2416
  5181  1314  2B15               	
  5182                           l807:	
  5183  1315                     	line	21
  5184                           	
  5185                           l2416:	
  5186  1315                     	movlw	01h
  5187  1315  3001               	
  5188                           u2765:
  5189  1316                     	clrc
  5190  1316  1003               	rrf	(___lwmod@divisor+1),f
  5191  1317  0CA9               	rrf	(___lwmod@divisor),f
  5192  1318  0CA8               	addlw	-1
  5193  1319  3EFF               	skipz
  5194  131A  1D03               	goto	u2765
  5195  131B  2B16               	line	22
  5196                           	
  5197                           l2418:	
  5198  131C                     	movlw	01h
  5199  131C  3001               	subwf	(___lwmod@counter),f
  5200  131D  02AD               	btfss	status,2
  5201  131E  1D03               	goto	u2771
  5202  131F  2B21               	goto	u2770
  5203  1320  2B22               u2771:
  5204  1321                     	goto	l2412
  5205  1321  2B04               u2770:
  5206  1322                     	goto	l2420
  5207  1322  2B24               	
  5208                           l808:	
  5209  1323                     	goto	l2420
  5210  1323  2B24               	line	23
  5211                           	
  5212                           l802:	
  5213  1324                     	line	24
  5214                           	
  5215                           l2420:	
  5216  1324                     	movf	(___lwmod@dividend+1),w
  5217  1324  082B               	movwf	(?___lwmod+1)
  5218  1325  00A9               	movf	(___lwmod@dividend),w
  5219  1326  082A               	movwf	(?___lwmod)
  5220  1327  00A8               	goto	l809
  5221  1328  2B29               	
  5222                           l2422:	
  5223  1329                     	line	25
  5224                           	
  5225                           l809:	
  5226  1329                     	return
  5227  1329  0008               	opt stack 0
  5228                           GLOBAL	__end_of___lwmod
  5229                           	__end_of___lwmod:
  5230  132A                     	signat	___lwmod,8314
  5231                           	global	___lwdiv
  5232                           
  5233 ;; *************** function ___lwdiv *****************
  5234 ;; Defined at:
  5235 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  5236 ;; Parameters:    Size  Location     Type
  5237 ;;  divisor         2    0[BANK0 ] unsigned int 
  5238 ;;  dividend        2    2[BANK0 ] unsigned int 
  5239 ;; Auto vars:     Size  Location     Type
  5240 ;;  quotient        2    6[BANK0 ] unsigned int 
  5241 ;;  counter         1    5[BANK0 ] unsigned char 
  5242 ;; Return value:  Size  Location     Type
  5243 ;;                  2    0[BANK0 ] unsigned int 
  5244 ;; Registers used:
  5245 ;;		wreg, status,2, status,0
  5246 ;; Tracked objects:
  5247 ;;		On entry : 0/0
  5248 ;;		On exit  : 0/0
  5249 ;;		Unchanged: 0/0
  5250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5251 ;;      Params:         0       4       0       0       0
  5252 ;;      Locals:         0       3       0       0       0
  5253 ;;      Temps:          0       1       0       0       0
  5254 ;;      Totals:         0       8       0       0       0
  5255 ;;Total ram usage:        8 bytes
  5256 ;; Hardware stack levels used:    1
  5257 ;; Hardware stack levels required when called:    2
  5258 ;; This function calls:
  5259 ;;		Nothing
  5260 ;; This function is called by:
  5261 ;;		_sprintf
  5262 ;; This function uses a non-reentrant model
  5263 ;;
  5264                           psect	text6,local,class=CODE,delta=2,merge=1,group=1
  5265                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  5266                           	line	5
  5267                           global __ptext6
  5268                           __ptext6:	;psect for function ___lwdiv
  5269  1372                     psect	text6
  5270                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  5271                           	line	5
  5272                           	global	__size_of___lwdiv
  5273                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  5274  004D                     	
  5275                           ___lwdiv:	
  5276  1372                     ;incstack = 0
  5277                           	opt	stack 3
  5278                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5279                           	line	13
  5280                           	
  5281                           l3660:	
  5282  1372                     	bcf	status, 5	;RP0=0, select bank0
  5283  1372  1283               	bcf	status, 6	;RP1=0, select bank0
  5284  1373  1303               	clrf	(___lwdiv@quotient)
  5285  1374  01A6               	clrf	(___lwdiv@quotient+1)
  5286  1375  01A7               	line	14
  5287                           	
  5288                           l3662:	
  5289  1376                     	movf	((___lwdiv@divisor)),w
  5290  1376  0820               iorwf	((___lwdiv@divisor+1)),w
  5291  1377  0421               	btfsc	status,2
  5292  1378  1903               	goto	u5231
  5293  1379  2B7B               	goto	u5230
  5294  137A  2B7C               u5231:
  5295  137B                     	goto	l3682
  5296  137B  2BB9               u5230:
  5297  137C                     	line	15
  5298                           	
  5299                           l3664:	
  5300  137C                     	clrf	(___lwdiv@counter)
  5301  137C  01A5               	incf	(___lwdiv@counter),f
  5302  137D  0AA5               	line	16
  5303                           	goto	l3670
  5304  137E  2B8B               	
  5305                           l794:	
  5306  137F                     	line	17
  5307                           	
  5308                           l3666:	
  5309  137F                     	movlw	01h
  5310  137F  3001               	
  5311                           u5245:
  5312  1380                     	clrc
  5313  1380  1003               	rlf	(___lwdiv@divisor),f
  5314  1381  0DA0               	rlf	(___lwdiv@divisor+1),f
  5315  1382  0DA1               	addlw	-1
  5316  1383  3EFF               	skipz
  5317  1384  1D03               	goto	u5245
  5318  1385  2B80               	line	18
  5319                           	
  5320                           l3668:	
  5321  1386                     	movlw	low(01h)
  5322  1386  3001               	movwf	(??___lwdiv+0)+0
  5323  1387  00A4               	movf	(??___lwdiv+0)+0,w
  5324  1388  0824               	addwf	(___lwdiv@counter),f
  5325  1389  07A5               	goto	l3670
  5326  138A  2B8B               	line	19
  5327                           	
  5328                           l793:	
  5329  138B                     	line	16
  5330                           	
  5331                           l3670:	
  5332  138B                     	btfss	(___lwdiv@divisor+1),(15)&7
  5333  138B  1FA1               	goto	u5251
  5334  138C  2B8E               	goto	u5250
  5335  138D  2B8F               u5251:
  5336  138E                     	goto	l3666
  5337  138E  2B7F               u5250:
  5338  138F                     	goto	l3672
  5339  138F  2B91               	
  5340                           l795:	
  5341  1390                     	goto	l3672
  5342  1390  2B91               	line	20
  5343                           	
  5344                           l796:	
  5345  1391                     	line	21
  5346                           	
  5347                           l3672:	
  5348  1391                     	movlw	01h
  5349  1391  3001               	
  5350                           u5265:
  5351  1392                     	clrc
  5352  1392  1003               	rlf	(___lwdiv@quotient),f
  5353  1393  0DA6               	rlf	(___lwdiv@quotient+1),f
  5354  1394  0DA7               	addlw	-1
  5355  1395  3EFF               	skipz
  5356  1396  1D03               	goto	u5265
  5357  1397  2B92               	line	22
  5358                           	movf	(___lwdiv@divisor+1),w
  5359  1398  0821               	subwf	(___lwdiv@dividend+1),w
  5360  1399  0223               	skipz
  5361  139A  1D03               	goto	u5275
  5362  139B  2B9E               	movf	(___lwdiv@divisor),w
  5363  139C  0820               	subwf	(___lwdiv@dividend),w
  5364  139D  0222               u5275:
  5365  139E                     	skipc
  5366  139E  1C03               	goto	u5271
  5367  139F  2BA1               	goto	u5270
  5368  13A0  2BA2               u5271:
  5369  13A1                     	goto	l3678
  5370  13A1  2BAA               u5270:
  5371  13A2                     	line	23
  5372                           	
  5373                           l3674:	
  5374  13A2                     	movf	(___lwdiv@divisor),w
  5375  13A2  0820               	subwf	(___lwdiv@dividend),f
  5376  13A3  02A2               	movf	(___lwdiv@divisor+1),w
  5377  13A4  0821               	skipc
  5378  13A5  1C03               	decf	(___lwdiv@dividend+1),f
  5379  13A6  03A3               	subwf	(___lwdiv@dividend+1),f
  5380  13A7  02A3               	line	24
  5381                           	
  5382                           l3676:	
  5383  13A8                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  5384  13A8  1426               	goto	l3678
  5385  13A9  2BAA               	line	25
  5386                           	
  5387                           l797:	
  5388  13AA                     	line	26
  5389                           	
  5390                           l3678:	
  5391  13AA                     	movlw	01h
  5392  13AA  3001               	
  5393                           u5285:
  5394  13AB                     	clrc
  5395  13AB  1003               	rrf	(___lwdiv@divisor+1),f
  5396  13AC  0CA1               	rrf	(___lwdiv@divisor),f
  5397  13AD  0CA0               	addlw	-1
  5398  13AE  3EFF               	skipz
  5399  13AF  1D03               	goto	u5285
  5400  13B0  2BAB               	line	27
  5401                           	
  5402                           l3680:	
  5403  13B1                     	movlw	01h
  5404  13B1  3001               	subwf	(___lwdiv@counter),f
  5405  13B2  02A5               	btfss	status,2
  5406  13B3  1D03               	goto	u5291
  5407  13B4  2BB6               	goto	u5290
  5408  13B5  2BB7               u5291:
  5409  13B6                     	goto	l3672
  5410  13B6  2B91               u5290:
  5411  13B7                     	goto	l3682
  5412  13B7  2BB9               	
  5413                           l798:	
  5414  13B8                     	goto	l3682
  5415  13B8  2BB9               	line	28
  5416                           	
  5417                           l792:	
  5418  13B9                     	line	29
  5419                           	
  5420                           l3682:	
  5421  13B9                     	movf	(___lwdiv@quotient+1),w
  5422  13B9  0827               	movwf	(?___lwdiv+1)
  5423  13BA  00A1               	movf	(___lwdiv@quotient),w
  5424  13BB  0826               	movwf	(?___lwdiv)
  5425  13BC  00A0               	goto	l799
  5426  13BD  2BBE               	
  5427                           l3684:	
  5428  13BE                     	line	30
  5429                           	
  5430                           l799:	
  5431  13BE                     	return
  5432  13BE  0008               	opt stack 0
  5433                           GLOBAL	__end_of___lwdiv
  5434                           	__end_of___lwdiv:
  5435  13BF                     	signat	___lwdiv,8314
  5436                           	global	_setup
  5437                           
  5438 ;; *************** function _setup *****************
  5439 ;; Defined at:
  5440 ;;		line 308 in file "mainM.c"
  5441 ;; Parameters:    Size  Location     Type
  5442 ;;		None
  5443 ;; Auto vars:     Size  Location     Type
  5444 ;;		None
  5445 ;; Return value:  Size  Location     Type
  5446 ;;                  1    wreg      void 
  5447 ;; Registers used:
  5448 ;;		wreg, status,2, status,0, pclath, cstack
  5449 ;; Tracked objects:
  5450 ;;		On entry : 0/0
  5451 ;;		On exit  : 0/0
  5452 ;;		Unchanged: 0/0
  5453 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5454 ;;      Params:         0       0       0       0       0
  5455 ;;      Locals:         0       0       0       0       0
  5456 ;;      Temps:          0       0       0       0       0
  5457 ;;      Totals:         0       0       0       0       0
  5458 ;;Total ram usage:        0 bytes
  5459 ;; Hardware stack levels used:    1
  5460 ;; Hardware stack levels required when called:    4
  5461 ;; This function calls:
  5462 ;;		_I2C_Master_Init
  5463 ;;		_clcLCD
  5464 ;;		_initLCD
  5465 ;;		_initUSART
  5466 ;; This function is called by:
  5467 ;;		_main
  5468 ;; This function uses a non-reentrant model
  5469 ;;
  5470                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5471                           	file	"mainM.c"
  5472                           	line	308
  5473                           global __ptext7
  5474                           __ptext7:	;psect for function _setup
  5475  12AC                     psect	text7
  5476                           	file	"mainM.c"
  5477                           	line	308
  5478                           	global	__size_of_setup
  5479                           	__size_of_setup	equ	__end_of_setup-_setup
  5480  003B                     	
  5481                           _setup:	
  5482  12AC                     ;incstack = 0
  5483                           	opt	stack 3
  5484                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
  5485                           	line	310
  5486                           	
  5487                           l3884:	
  5488  12AC                     ;mainM.c: 310:     ANSEL = 0;
  5489                           	bsf	status, 5	;RP0=1, select bank3
  5490  12AC  1683               	bsf	status, 6	;RP1=1, select bank3
  5491  12AD  1703               	clrf	(392)^0180h	;volatile
  5492  12AE  0188               	line	311
  5493                           ;mainM.c: 311:     ANSELH = 0;
  5494                           	clrf	(393)^0180h	;volatile
  5495  12AF  0189               	line	312
  5496                           ;mainM.c: 312:     TRISB = 0;
  5497                           	bsf	status, 5	;RP0=1, select bank1
  5498  12B0  1683               	bcf	status, 6	;RP1=0, select bank1
  5499  12B1  1303               	clrf	(134)^080h	;volatile
  5500  12B2  0186               	line	313
  5501                           ;mainM.c: 313:     TRISD = 0;
  5502                           	clrf	(136)^080h	;volatile
  5503  12B3  0188               	line	314
  5504                           ;mainM.c: 314:     PORTB = 0;
  5505                           	bcf	status, 5	;RP0=0, select bank0
  5506  12B4  1283               	bcf	status, 6	;RP1=0, select bank0
  5507  12B5  1303               	clrf	(6)	;volatile
  5508  12B6  0186               	line	315
  5509                           ;mainM.c: 315:     PORTD = 0;
  5510                           	clrf	(8)	;volatile
  5511  12B7  0188               	line	316
  5512                           	
  5513                           l3886:	
  5514  12B8                     ;mainM.c: 316:     I2C_Master_Init(100000);
  5515                           	movlw	0
  5516  12B8  3000               	movwf	(I2C_Master_Init@c+3)
  5517  12B9  00B1               	movlw	01h
  5518  12BA  3001               	movwf	(I2C_Master_Init@c+2)
  5519  12BB  00B0               	movlw	086h
  5520  12BC  3086               	movwf	(I2C_Master_Init@c+1)
  5521  12BD  00AF               	movlw	0A0h
  5522  12BE  30A0               	movwf	(I2C_Master_Init@c)
  5523  12BF  00AE               
  5524                           	fcall	_I2C_Master_Init
  5525  12C0  160A  118A  2237  160A  118A  	line	318
  5526                           	
  5527                           l3888:	
  5528  12C5                     ;mainM.c: 318:     initUSART(9600, 1, 1, 0);
  5529                           	movlw	080h
  5530  12C5  3080               	bcf	status, 5	;RP0=0, select bank0
  5531  12C6  1283               	bcf	status, 6	;RP1=0, select bank0
  5532  12C7  1303               	movwf	(initUSART@baudrate)
  5533  12C8  00A0               	movlw	025h
  5534  12C9  3025               	movwf	((initUSART@baudrate))+1
  5535  12CA  00A1               	clrf	(initUSART@txint)
  5536  12CB  01A2               	incf	(initUSART@txint),f
  5537  12CC  0AA2               	clrf	(initUSART@rcint)
  5538  12CD  01A3               	incf	(initUSART@rcint),f
  5539  12CE  0AA3               	clrf	(initUSART@syncrono)
  5540  12CF  01A4               	fcall	_initUSART
  5541  12D0  160A  118A  2424  160A  118A  	line	320
  5542                           	
  5543                           l3890:	
  5544  12D5                     ;mainM.c: 320:     initLCD();
  5545                           	fcall	_initLCD
  5546  12D5  160A  118A  2271  160A  118A  	line	321
  5547                           	
  5548                           l3892:	
  5549  12DA                     ;mainM.c: 321:     clcLCD();
  5550                           	fcall	_clcLCD
  5551  12DA  160A  118A  2107  160A  118A  	line	323
  5552                           	
  5553                           l3894:	
  5554  12DF                     ;mainM.c: 323:     TRISAbits.TRISA1 = 1;
  5555                           	bsf	status, 5	;RP0=1, select bank1
  5556  12DF  1683               	bcf	status, 6	;RP1=0, select bank1
  5557  12E0  1303               	bsf	(133)^080h,1	;volatile
  5558  12E1  1485               	line	324
  5559                           	
  5560                           l3896:	
  5561  12E2                     ;mainM.c: 324:     TRISAbits.TRISA2 = 1;
  5562                           	bsf	(133)^080h,2	;volatile
  5563  12E2  1505               	line	325
  5564                           	
  5565                           l3898:	
  5566  12E3                     ;mainM.c: 325:     TRISAbits.TRISA0 = 0;
  5567                           	bcf	(133)^080h,0	;volatile
  5568  12E3  1005               	line	326
  5569                           	
  5570                           l3900:	
  5571  12E4                     ;mainM.c: 326:     TRISAbits.TRISA4 = 0;
  5572                           	bcf	(133)^080h,4	;volatile
  5573  12E4  1205               	line	327
  5574                           	
  5575                           l3902:	
  5576  12E5                     ;mainM.c: 327:     TRISAbits.TRISA5 = 0;
  5577                           	bcf	(133)^080h,5	;volatile
  5578  12E5  1285               	line	328
  5579                           	
  5580                           l311:	
  5581  12E6                     	return
  5582  12E6  0008               	opt stack 0
  5583                           GLOBAL	__end_of_setup
  5584                           	__end_of_setup:
  5585  12E7                     	signat	_setup,89
  5586                           	global	_initUSART
  5587                           
  5588 ;; *************** function _initUSART *****************
  5589 ;; Defined at:
  5590 ;;		line 5 in file "USART.c"
  5591 ;; Parameters:    Size  Location     Type
  5592 ;;  baudrate        2    0[BANK0 ] unsigned int 
  5593 ;;  txint           1    2[BANK0 ] unsigned char 
  5594 ;;  rcint           1    3[BANK0 ] unsigned char 
  5595 ;;  syncrono        1    4[BANK0 ] unsigned char 
  5596 ;; Auto vars:     Size  Location     Type
  5597 ;;		None
  5598 ;; Return value:  Size  Location     Type
  5599 ;;                  1    wreg      void 
  5600 ;; Registers used:
  5601 ;;		wreg, status,2, status,0
  5602 ;; Tracked objects:
  5603 ;;		On entry : 0/0
  5604 ;;		On exit  : 0/0
  5605 ;;		Unchanged: 0/0
  5606 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5607 ;;      Params:         0       5       0       0       0
  5608 ;;      Locals:         0       0       0       0       0
  5609 ;;      Temps:          0       0       0       0       0
  5610 ;;      Totals:         0       5       0       0       0
  5611 ;;Total ram usage:        5 bytes
  5612 ;; Hardware stack levels used:    1
  5613 ;; Hardware stack levels required when called:    2
  5614 ;; This function calls:
  5615 ;;		Nothing
  5616 ;; This function is called by:
  5617 ;;		_setup
  5618 ;; This function uses a non-reentrant model
  5619 ;;
  5620                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5621                           	file	"USART.c"
  5622                           	line	5
  5623                           global __ptext8
  5624                           __ptext8:	;psect for function _initUSART
  5625  1424                     psect	text8
  5626                           	file	"USART.c"
  5627                           	line	5
  5628                           	global	__size_of_initUSART
  5629                           	__size_of_initUSART	equ	__end_of_initUSART-_initUSART
  5630  008E                     	
  5631                           _initUSART:	
  5632  1424                     ;incstack = 0
  5633                           	opt	stack 4
  5634                           ; Regs used in _initUSART: [wreg+status,2+status,0]
  5635                           	line	6
  5636                           	
  5637                           l3792:	
  5638  1424                     ;USART.c: 6:     TRISCbits.TRISC7 = 1;
  5639                           	bsf	status, 5	;RP0=1, select bank1
  5640  1424  1683               	bcf	status, 6	;RP1=0, select bank1
  5641  1425  1303               	bsf	(135)^080h,7	;volatile
  5642  1426  1787               	line	8
  5643                           ;USART.c: 8:     PIE1bits.RCIE = 0;
  5644                           	bcf	(140)^080h,5	;volatile
  5645  1427  128C               	line	10
  5646                           ;USART.c: 10:     RCSTAbits.SPEN = 1;
  5647                           	bcf	status, 5	;RP0=0, select bank0
  5648  1428  1283               	bcf	status, 6	;RP1=0, select bank0
  5649  1429  1303               	bsf	(24),7	;volatile
  5650  142A  1798               	line	11
  5651                           	
  5652                           l3794:	
  5653  142B                     ;USART.c: 11:     TXSTAbits.SYNC = syncrono;
  5654                           	rrf	(initUSART@syncrono),w
  5655  142B  0C24               	bsf	status, 5	;RP0=1, select bank1
  5656  142C  1683               	bcf	status, 6	;RP1=0, select bank1
  5657  142D  1303               	skipc
  5658  142E  1C03               	bcf	(152)^080h,4	;volatile
  5659  142F  1218               	skipnc
  5660  1430  1803               	bsf	(152)^080h,4	;volatile
  5661  1431  1618               	line	13
  5662                           	
  5663                           l3796:	
  5664  1432                     ;USART.c: 13:     if(rcint){
  5665                           	bcf	status, 5	;RP0=0, select bank0
  5666  1432  1283               	bcf	status, 6	;RP1=0, select bank0
  5667  1433  1303               	movf	((initUSART@rcint)),w
  5668  1434  0823               	btfsc	status,2
  5669  1435  1903               	goto	u5441
  5670  1436  2C38               	goto	u5440
  5671  1437  2C39               u5441:
  5672  1438                     	goto	l3800
  5673  1438  2C41               u5440:
  5674  1439                     	line	14
  5675                           	
  5676                           l3798:	
  5677  1439                     ;USART.c: 14:         RCSTAbits.CREN = 1;
  5678                           	bsf	(24),4	;volatile
  5679  1439  1618               	line	15
  5680                           ;USART.c: 15:         PIE1bits.RCIE = 1;
  5681                           	bsf	status, 5	;RP0=1, select bank1
  5682  143A  1683               	bcf	status, 6	;RP1=0, select bank1
  5683  143B  1303               	bsf	(140)^080h,5	;volatile
  5684  143C  168C               	line	16
  5685                           ;USART.c: 16:         PIR1bits.RCIF = 0;
  5686                           	bcf	status, 5	;RP0=0, select bank0
  5687  143D  1283               	bcf	status, 6	;RP1=0, select bank0
  5688  143E  1303               	bcf	(12),5	;volatile
  5689  143F  128C               	goto	l3800
  5690  1440  2C41               	line	17
  5691                           ;USART.c: 17:     }
  5692                           	
  5693                           l394:	
  5694  1441                     	line	18
  5695                           	
  5696                           l3800:	
  5697  1441                     ;USART.c: 18:     if(txint){
  5698                           	movf	((initUSART@txint)),w
  5699  1441  0822               	btfsc	status,2
  5700  1442  1903               	goto	u5451
  5701  1443  2C45               	goto	u5450
  5702  1444  2C46               u5451:
  5703  1445                     	goto	l395
  5704  1445  2C49               u5450:
  5705  1446                     	line	19
  5706                           	
  5707                           l3802:	
  5708  1446                     ;USART.c: 19:         TXSTAbits.TXEN = 1;
  5709                           	bsf	status, 5	;RP0=1, select bank1
  5710  1446  1683               	bcf	status, 6	;RP1=0, select bank1
  5711  1447  1303               	bsf	(152)^080h,5	;volatile
  5712  1448  1698               	line	20
  5713                           ;USART.c: 20:     }
  5714                           	
  5715                           l395:	
  5716  1449                     	line	22
  5717                           ;USART.c: 22:     BAUDCTLbits.BRG16 = 1;
  5718                           	bsf	status, 5	;RP0=1, select bank3
  5719  1449  1683               	bsf	status, 6	;RP1=1, select bank3
  5720  144A  1703               	bsf	(391)^0180h,3	;volatile
  5721  144B  1587               	line	23
  5722                           ;USART.c: 23:     TXSTAbits.BRGH = 0;
  5723                           	bsf	status, 5	;RP0=1, select bank1
  5724  144C  1683               	bcf	status, 6	;RP1=0, select bank1
  5725  144D  1303               	bcf	(152)^080h,2	;volatile
  5726  144E  1118               	line	25
  5727                           	
  5728                           l3804:	
  5729  144F                     ;USART.c: 25:     if(baudrate == 300){
  5730                           		movlw	44
  5731  144F  302C               	bcf	status, 5	;RP0=0, select bank0
  5732  1450  1283               	bcf	status, 6	;RP1=0, select bank0
  5733  1451  1303               	xorwf	((initUSART@baudrate)),w
  5734  1452  0620               	skipz
  5735  1453  1D03               	goto	u5461
  5736  1454  2C59               	decf	((initUSART@baudrate+1)),w
  5737  1455  0321               	btfss	status,2
  5738  1456  1D03               	goto	u5461
  5739  1457  2C59               	goto	u5460
  5740  1458  2C5A               u5461:
  5741  1459                     	goto	l3808
  5742  1459  2C61               u5460:
  5743  145A                     	line	26
  5744                           	
  5745                           l3806:	
  5746  145A                     ;USART.c: 26:         SPBRG = 0x40;
  5747                           	movlw	low(040h)
  5748  145A  3040               	bsf	status, 5	;RP0=1, select bank1
  5749  145B  1683               	bcf	status, 6	;RP1=0, select bank1
  5750  145C  1303               	movwf	(153)^080h	;volatile
  5751  145D  0099               	line	27
  5752                           ;USART.c: 27:         SPBRGH = 0x03;
  5753                           	movlw	low(03h)
  5754  145E  3003               	movwf	(154)^080h	;volatile
  5755  145F  009A               	line	28
  5756                           ;USART.c: 28:     } else if (baudrate == 1200){
  5757                           	goto	l3828
  5758  1460  2CAF               	
  5759                           l396:	
  5760  1461                     	
  5761                           l3808:	
  5762  1461                     		movlw	176
  5763  1461  30B0               	bcf	status, 5	;RP0=0, select bank0
  5764  1462  1283               	xorwf	((initUSART@baudrate)),w
  5765  1463  0620               	movlw	4
  5766  1464  3004               	skipnz
  5767  1465  1903               	xorwf	((initUSART@baudrate+1)),w
  5768  1466  0621               	btfss	status,2
  5769  1467  1D03               	goto	u5471
  5770  1468  2C6A               	goto	u5470
  5771  1469  2C6B               u5471:
  5772  146A                     	goto	l3812
  5773  146A  2C70               u5470:
  5774  146B                     	line	29
  5775                           	
  5776                           l3810:	
  5777  146B                     ;USART.c: 29:         SPBRG = 207;
  5778                           	movlw	low(0CFh)
  5779  146B  30CF               	bsf	status, 5	;RP0=1, select bank1
  5780  146C  1683               	bcf	status, 6	;RP1=0, select bank1
  5781  146D  1303               	movwf	(153)^080h	;volatile
  5782  146E  0099               	line	30
  5783                           ;USART.c: 30:     } else if (baudrate == 2400){
  5784                           	goto	l3828
  5785  146F  2CAF               	
  5786                           l398:	
  5787  1470                     	
  5788                           l3812:	
  5789  1470                     		movlw	96
  5790  1470  3060               	bcf	status, 5	;RP0=0, select bank0
  5791  1471  1283               	xorwf	((initUSART@baudrate)),w
  5792  1472  0620               	movlw	9
  5793  1473  3009               	skipnz
  5794  1474  1903               	xorwf	((initUSART@baudrate+1)),w
  5795  1475  0621               	btfss	status,2
  5796  1476  1D03               	goto	u5481
  5797  1477  2C79               	goto	u5480
  5798  1478  2C7A               u5481:
  5799  1479                     	goto	l3816
  5800  1479  2C7F               u5480:
  5801  147A                     	line	31
  5802                           	
  5803                           l3814:	
  5804  147A                     ;USART.c: 31:         SPBRG = 103;
  5805                           	movlw	low(067h)
  5806  147A  3067               	bsf	status, 5	;RP0=1, select bank1
  5807  147B  1683               	bcf	status, 6	;RP1=0, select bank1
  5808  147C  1303               	movwf	(153)^080h	;volatile
  5809  147D  0099               	line	32
  5810                           ;USART.c: 32:     } else if (baudrate == 9600){
  5811                           	goto	l3828
  5812  147E  2CAF               	
  5813                           l400:	
  5814  147F                     	
  5815                           l3816:	
  5816  147F                     		movlw	128
  5817  147F  3080               	bcf	status, 5	;RP0=0, select bank0
  5818  1480  1283               	xorwf	((initUSART@baudrate)),w
  5819  1481  0620               	movlw	37
  5820  1482  3025               	skipnz
  5821  1483  1903               	xorwf	((initUSART@baudrate+1)),w
  5822  1484  0621               	btfss	status,2
  5823  1485  1D03               	goto	u5491
  5824  1486  2C88               	goto	u5490
  5825  1487  2C89               u5491:
  5826  1488                     	goto	l3820
  5827  1488  2C8E               u5490:
  5828  1489                     	line	33
  5829                           	
  5830                           l3818:	
  5831  1489                     ;USART.c: 33:         SPBRG = 25;
  5832                           	movlw	low(019h)
  5833  1489  3019               	bsf	status, 5	;RP0=1, select bank1
  5834  148A  1683               	bcf	status, 6	;RP1=0, select bank1
  5835  148B  1303               	movwf	(153)^080h	;volatile
  5836  148C  0099               	line	34
  5837                           ;USART.c: 34:     } else if (baudrate == 10417){
  5838                           	goto	l3828
  5839  148D  2CAF               	
  5840                           l402:	
  5841  148E                     	
  5842                           l3820:	
  5843  148E                     		movlw	177
  5844  148E  30B1               	bcf	status, 5	;RP0=0, select bank0
  5845  148F  1283               	xorwf	((initUSART@baudrate)),w
  5846  1490  0620               	movlw	40
  5847  1491  3028               	skipnz
  5848  1492  1903               	xorwf	((initUSART@baudrate+1)),w
  5849  1493  0621               	btfss	status,2
  5850  1494  1D03               	goto	u5501
  5851  1495  2C97               	goto	u5500
  5852  1496  2C98               u5501:
  5853  1497                     	goto	l3824
  5854  1497  2C9D               u5500:
  5855  1498                     	line	35
  5856                           	
  5857                           l3822:	
  5858  1498                     ;USART.c: 35:         SPBRG = 23;
  5859                           	movlw	low(017h)
  5860  1498  3017               	bsf	status, 5	;RP0=1, select bank1
  5861  1499  1683               	bcf	status, 6	;RP1=0, select bank1
  5862  149A  1303               	movwf	(153)^080h	;volatile
  5863  149B  0099               	line	36
  5864                           ;USART.c: 36:     } else if (baudrate == 19200){
  5865                           	goto	l3828
  5866  149C  2CAF               	
  5867                           l404:	
  5868  149D                     	
  5869                           l3824:	
  5870  149D                     		movlw	75
  5871  149D  304B               	bcf	status, 5	;RP0=0, select bank0
  5872  149E  1283               	xorwf	((initUSART@baudrate+1)),w
  5873  149F  0621               iorwf	((initUSART@baudrate)),w
  5874  14A0  0420               	btfss	status,2
  5875  14A1  1D03               	goto	u5511
  5876  14A2  2CA4               	goto	u5510
  5877  14A3  2CA5               u5511:
  5878  14A4                     	goto	l3828
  5879  14A4  2CAF               u5510:
  5880  14A5                     	line	37
  5881                           	
  5882                           l3826:	
  5883  14A5                     ;USART.c: 37:         SPBRG = 12;
  5884                           	movlw	low(0Ch)
  5885  14A5  300C               	bsf	status, 5	;RP0=1, select bank1
  5886  14A6  1683               	bcf	status, 6	;RP1=0, select bank1
  5887  14A7  1303               	movwf	(153)^080h	;volatile
  5888  14A8  0099               	goto	l3828
  5889  14A9  2CAF               	line	38
  5890                           ;USART.c: 38:     }
  5891                           	
  5892                           l406:	
  5893  14AA                     	goto	l3828
  5894  14AA  2CAF               	
  5895                           l405:	
  5896  14AB                     	goto	l3828
  5897  14AB  2CAF               	
  5898                           l403:	
  5899  14AC                     	goto	l3828
  5900  14AC  2CAF               	
  5901                           l401:	
  5902  14AD                     	goto	l3828
  5903  14AD  2CAF               	
  5904                           l399:	
  5905  14AE                     	goto	l3828
  5906  14AE  2CAF               	
  5907                           l397:	
  5908  14AF                     	line	39
  5909                           	
  5910                           l3828:	
  5911  14AF                     ;USART.c: 39:     INTCONbits.PEIE = 1;
  5912                           	bsf	(11),6	;volatile
  5913  14AF  170B               	line	40
  5914                           	
  5915                           l3830:	
  5916  14B0                     ;USART.c: 40:     INTCONbits.GIE = 1;
  5917                           	bsf	(11),7	;volatile
  5918  14B0  178B               	line	41
  5919                           	
  5920                           l407:	
  5921  14B1                     	return
  5922  14B1  0008               	opt stack 0
  5923                           GLOBAL	__end_of_initUSART
  5924                           	__end_of_initUSART:
  5925  14B2                     	signat	_initUSART,16505
  5926                           	global	_initLCD
  5927                           
  5928 ;; *************** function _initLCD *****************
  5929 ;; Defined at:
  5930 ;;		line 36 in file "LCD.c"
  5931 ;; Parameters:    Size  Location     Type
  5932 ;;		None
  5933 ;; Auto vars:     Size  Location     Type
  5934 ;;		None
  5935 ;; Return value:  Size  Location     Type
  5936 ;;                  1    wreg      void 
  5937 ;; Registers used:
  5938 ;;		wreg, status,2, status,0, pclath, cstack
  5939 ;; Tracked objects:
  5940 ;;		On entry : 0/0
  5941 ;;		On exit  : 0/0
  5942 ;;		Unchanged: 0/0
  5943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5944 ;;      Params:         0       0       0       0       0
  5945 ;;      Locals:         0       0       0       0       0
  5946 ;;      Temps:          0       2       0       0       0
  5947 ;;      Totals:         0       2       0       0       0
  5948 ;;Total ram usage:        2 bytes
  5949 ;; Hardware stack levels used:    1
  5950 ;; Hardware stack levels required when called:    3
  5951 ;; This function calls:
  5952 ;;		_cmdLCD
  5953 ;; This function is called by:
  5954 ;;		_setup
  5955 ;; This function uses a non-reentrant model
  5956 ;;
  5957                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5958                           	file	"LCD.c"
  5959                           	line	36
  5960                           global __ptext9
  5961                           __ptext9:	;psect for function _initLCD
  5962  1271                     psect	text9
  5963                           	file	"LCD.c"
  5964                           	line	36
  5965                           	global	__size_of_initLCD
  5966                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  5967  003B                     	
  5968                           _initLCD:	
  5969  1271                     ;incstack = 0
  5970                           	opt	stack 3
  5971                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  5972                           	line	37
  5973                           	
  5974                           l3712:	
  5975  1271                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  5976                           	opt asmopt_push
  5977                           opt asmopt_off
  5978                           movlw	20
  5979  1271  3014               	bcf	status, 5	;RP0=0, select bank0
  5980  1272  1283               	bcf	status, 6	;RP1=0, select bank0
  5981  1273  1303               movwf	((??_initLCD+0)+0+1),f
  5982  1274  00A4               	movlw	121
  5983  1275  3079               movwf	((??_initLCD+0)+0),f
  5984  1276  00A3               	u7057:
  5985  1277                     decfsz	((??_initLCD+0)+0),f
  5986  1277  0BA3               	goto	u7057
  5987  1278  2A77               	decfsz	((??_initLCD+0)+0+1),f
  5988  1279  0BA4               	goto	u7057
  5989  127A  2A77               opt asmopt_pop
  5990                           
  5991                           	line	38
  5992                           	
  5993                           l3714:	
  5994  127B                     ;LCD.c: 38:     cmdLCD(0x030);
  5995                           	movlw	low(030h)
  5996  127B  3030               	fcall	_cmdLCD
  5997  127C  120A  158A  20A7  160A  118A  	line	39
  5998                           	
  5999                           l3716:	
  6000  1281                     ;LCD.c: 39:     cmdLCD(0x030);
  6001                           	movlw	low(030h)
  6002  1281  3030               	fcall	_cmdLCD
  6003  1282  120A  158A  20A7  160A  118A  	line	40
  6004                           	
  6005                           l3718:	
  6006  1287                     ;LCD.c: 40:     cmdLCD(0x030);
  6007                           	movlw	low(030h)
  6008  1287  3030               	fcall	_cmdLCD
  6009  1288  120A  158A  20A7  160A  118A  	line	42
  6010                           	
  6011                           l3720:	
  6012  128D                     ;LCD.c: 42:     cmdLCD(0x38);
  6013                           	movlw	low(038h)
  6014  128D  3038               	fcall	_cmdLCD
  6015  128E  120A  158A  20A7  160A  118A  	line	43
  6016                           	
  6017                           l3722:	
  6018  1293                     ;LCD.c: 43:     cmdLCD(0x10);
  6019                           	movlw	low(010h)
  6020  1293  3010               	fcall	_cmdLCD
  6021  1294  120A  158A  20A7  160A  118A  	line	44
  6022                           	
  6023                           l3724:	
  6024  1299                     ;LCD.c: 44:     cmdLCD(0x01);
  6025                           	movlw	low(01h)
  6026  1299  3001               	fcall	_cmdLCD
  6027  129A  120A  158A  20A7  160A  118A  	line	45
  6028                           	
  6029                           l3726:	
  6030  129F                     ;LCD.c: 45:     cmdLCD(0x06);
  6031                           	movlw	low(06h)
  6032  129F  3006               	fcall	_cmdLCD
  6033  12A0  120A  158A  20A7  160A  118A  	line	46
  6034                           	
  6035                           l3728:	
  6036  12A5                     ;LCD.c: 46:     cmdLCD(0x0E);
  6037                           	movlw	low(0Eh)
  6038  12A5  300E               	fcall	_cmdLCD
  6039  12A6  120A  158A  20A7  160A  118A  	line	47
  6040                           	
  6041                           l91:	
  6042  12AB                     	return
  6043  12AB  0008               	opt stack 0
  6044                           GLOBAL	__end_of_initLCD
  6045                           	__end_of_initLCD:
  6046  12AC                     	signat	_initLCD,89
  6047                           	global	_clcLCD
  6048                           
  6049 ;; *************** function _clcLCD *****************
  6050 ;; Defined at:
  6051 ;;		line 17 in file "LCD.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;		None
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      void 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0, pclath, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6065 ;;      Params:         0       0       0       0       0
  6066 ;;      Locals:         0       0       0       0       0
  6067 ;;      Temps:          0       0       0       0       0
  6068 ;;      Totals:         0       0       0       0       0
  6069 ;;Total ram usage:        0 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    3
  6072 ;; This function calls:
  6073 ;;		_cmdLCD
  6074 ;; This function is called by:
  6075 ;;		_setup
  6076 ;; This function uses a non-reentrant model
  6077 ;;
  6078                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  6079                           	line	17
  6080                           global __ptext10
  6081                           __ptext10:	;psect for function _clcLCD
  6082  1107                     psect	text10
  6083                           	file	"LCD.c"
  6084                           	line	17
  6085                           	global	__size_of_clcLCD
  6086                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  6087  0007                     	
  6088                           _clcLCD:	
  6089  1107                     ;incstack = 0
  6090                           	opt	stack 3
  6091                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  6092                           	line	18
  6093                           	
  6094                           l3702:	
  6095  1107                     ;LCD.c: 18:     cmdLCD(0x01);
  6096                           	movlw	low(01h)
  6097  1107  3001               	fcall	_cmdLCD
  6098  1108  120A  158A  20A7  160A  118A  	line	19
  6099                           	
  6100                           l79:	
  6101  110D                     	return
  6102  110D  0008               	opt stack 0
  6103                           GLOBAL	__end_of_clcLCD
  6104                           	__end_of_clcLCD:
  6105  110E                     	signat	_clcLCD,89
  6106                           	global	_I2C_Master_Init
  6107                           
  6108 ;; *************** function _I2C_Master_Init *****************
  6109 ;; Defined at:
  6110 ;;		line 16 in file "I2C.c"
  6111 ;; Parameters:    Size  Location     Type
  6112 ;;  c               4   14[BANK0 ] const unsigned long 
  6113 ;; Auto vars:     Size  Location     Type
  6114 ;;		None
  6115 ;; Return value:  Size  Location     Type
  6116 ;;                  1    wreg      void 
  6117 ;; Registers used:
  6118 ;;		wreg, status,2, status,0, pclath, cstack
  6119 ;; Tracked objects:
  6120 ;;		On entry : 0/0
  6121 ;;		On exit  : 0/0
  6122 ;;		Unchanged: 0/0
  6123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6124 ;;      Params:         0       4       0       0       0
  6125 ;;      Locals:         0       0       0       0       0
  6126 ;;      Temps:          0       4       0       0       0
  6127 ;;      Totals:         0       8       0       0       0
  6128 ;;Total ram usage:        8 bytes
  6129 ;; Hardware stack levels used:    1
  6130 ;; Hardware stack levels required when called:    3
  6131 ;; This function calls:
  6132 ;;		___lldiv
  6133 ;; This function is called by:
  6134 ;;		_setup
  6135 ;; This function uses a non-reentrant model
  6136 ;;
  6137                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6138                           	file	"I2C.c"
  6139                           	line	16
  6140                           global __ptext11
  6141                           __ptext11:	;psect for function _I2C_Master_Init
  6142  1237                     psect	text11
  6143                           	file	"I2C.c"
  6144                           	line	16
  6145                           	global	__size_of_I2C_Master_Init
  6146                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  6147  003A                     	
  6148                           _I2C_Master_Init:	
  6149  1237                     ;incstack = 0
  6150                           	opt	stack 3
  6151                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  6152                           	line	18
  6153                           	
  6154                           l3686:	
  6155  1237                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  6156                           	movlw	low(028h)
  6157  1237  3028               	bcf	status, 5	;RP0=0, select bank0
  6158  1238  1283               	bcf	status, 6	;RP1=0, select bank0
  6159  1239  1303               	movwf	(20)	;volatile
  6160  123A  0094               	line	19
  6161                           	
  6162                           l3688:	
  6163  123B                     ;I2C.c: 19:     SSPCON2 = 0;
  6164                           	bsf	status, 5	;RP0=1, select bank1
  6165  123B  1683               	bcf	status, 6	;RP1=0, select bank1
  6166  123C  1303               	clrf	(145)^080h	;volatile
  6167  123D  0191               	line	20
  6168                           	
  6169                           l3690:	
  6170  123E                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  6171                           	bcf	status, 5	;RP0=0, select bank0
  6172  123E  1283               	bcf	status, 6	;RP1=0, select bank0
  6173  123F  1303               	movf	(I2C_Master_Init@c),w
  6174  1240  082E               	movwf	(??_I2C_Master_Init+0)+0
  6175  1241  00B2               	movf	(I2C_Master_Init@c+1),w
  6176  1242  082F               	movwf	((??_I2C_Master_Init+0)+0+1)
  6177  1243  00B3               	movf	(I2C_Master_Init@c+2),w
  6178  1244  0830               	movwf	((??_I2C_Master_Init+0)+0+2)
  6179  1245  00B4               	movf	(I2C_Master_Init@c+3),w
  6180  1246  0831               	movwf	((??_I2C_Master_Init+0)+0+3)
  6181  1247  00B5               	movlw	02h
  6182  1248  3002               u5305:
  6183  1249                     	clrc
  6184  1249  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  6185  124A  0DB2               	rlf	(??_I2C_Master_Init+0)+1,f
  6186  124B  0DB3               	rlf	(??_I2C_Master_Init+0)+2,f
  6187  124C  0DB4               	rlf	(??_I2C_Master_Init+0)+3,f
  6188  124D  0DB5               u5300:
  6189  124E                     	addlw	-1
  6190  124E  3EFF               	skipz
  6191  124F  1D03               	goto	u5305
  6192  1250  2A49               	movf	3+(??_I2C_Master_Init+0)+0,w
  6193  1251  0835               	movwf	(___lldiv@divisor+3)
  6194  1252  00A3               	movf	2+(??_I2C_Master_Init+0)+0,w
  6195  1253  0834               	movwf	(___lldiv@divisor+2)
  6196  1254  00A2               	movf	1+(??_I2C_Master_Init+0)+0,w
  6197  1255  0833               	movwf	(___lldiv@divisor+1)
  6198  1256  00A1               	movf	0+(??_I2C_Master_Init+0)+0,w
  6199  1257  0832               	movwf	(___lldiv@divisor)
  6200  1258  00A0               
  6201                           	movlw	0
  6202  1259  3000               	movwf	(___lldiv@dividend+3)
  6203  125A  00A7               	movlw	03Dh
  6204  125B  303D               	movwf	(___lldiv@dividend+2)
  6205  125C  00A6               	movlw	09h
  6206  125D  3009               	movwf	(___lldiv@dividend+1)
  6207  125E  00A5               	movlw	0
  6208  125F  3000               	movwf	(___lldiv@dividend)
  6209  1260  00A4               
  6210                           	fcall	___lldiv
  6211  1261  120A  158A  20BD  160A  118A  	bcf	status, 5	;RP0=0, select bank0
  6212  1266  1283               	bcf	status, 6	;RP1=0, select bank0
  6213  1267  1303               	movf	(0+(?___lldiv)),w
  6214  1268  0820               	addlw	0FFh
  6215  1269  3EFF               	bsf	status, 5	;RP0=1, select bank1
  6216  126A  1683               	bcf	status, 6	;RP1=0, select bank1
  6217  126B  1303               	movwf	(147)^080h	;volatile
  6218  126C  0093               	line	21
  6219                           	
  6220                           l3692:	
  6221  126D                     ;I2C.c: 21:     SSPSTAT = 0;
  6222                           	clrf	(148)^080h	;volatile
  6223  126D  0194               	line	22
  6224                           	
  6225                           l3694:	
  6226  126E                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  6227                           	bsf	(135)^080h,3	;volatile
  6228  126E  1587               	line	23
  6229                           	
  6230                           l3696:	
  6231  126F                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  6232                           	bsf	(135)^080h,4	;volatile
  6233  126F  1607               	line	24
  6234                           	
  6235                           l29:	
  6236  1270                     	return
  6237  1270  0008               	opt stack 0
  6238                           GLOBAL	__end_of_I2C_Master_Init
  6239                           	__end_of_I2C_Master_Init:
  6240  1271                     	signat	_I2C_Master_Init,4217
  6241                           	global	___lldiv
  6242                           
  6243 ;; *************** function ___lldiv *****************
  6244 ;; Defined at:
  6245 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  6246 ;; Parameters:    Size  Location     Type
  6247 ;;  divisor         4    0[BANK0 ] unsigned long 
  6248 ;;  dividend        4    4[BANK0 ] unsigned long 
  6249 ;; Auto vars:     Size  Location     Type
  6250 ;;  quotient        4    9[BANK0 ] unsigned long 
  6251 ;;  counter         1   13[BANK0 ] unsigned char 
  6252 ;; Return value:  Size  Location     Type
  6253 ;;                  4    0[BANK0 ] unsigned long 
  6254 ;; Registers used:
  6255 ;;		wreg, status,2, status,0
  6256 ;; Tracked objects:
  6257 ;;		On entry : 0/0
  6258 ;;		On exit  : 0/0
  6259 ;;		Unchanged: 0/0
  6260 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6261 ;;      Params:         0       8       0       0       0
  6262 ;;      Locals:         0       5       0       0       0
  6263 ;;      Temps:          0       1       0       0       0
  6264 ;;      Totals:         0      14       0       0       0
  6265 ;;Total ram usage:       14 bytes
  6266 ;; Hardware stack levels used:    1
  6267 ;; Hardware stack levels required when called:    2
  6268 ;; This function calls:
  6269 ;;		Nothing
  6270 ;; This function is called by:
  6271 ;;		_I2C_Master_Init
  6272 ;; This function uses a non-reentrant model
  6273 ;;
  6274                           psect	text12,local,class=CODE,delta=2,merge=1,group=1
  6275                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  6276                           	line	5
  6277                           global __ptext12
  6278                           __ptext12:	;psect for function ___lldiv
  6279  08BD                     psect	text12
  6280                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  6281                           	line	5
  6282                           	global	__size_of___lldiv
  6283                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  6284  006F                     	
  6285                           ___lldiv:	
  6286  08BD                     ;incstack = 0
  6287                           	opt	stack 3
  6288                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6289                           	line	13
  6290                           	
  6291                           l3636:	
  6292  08BD                     	movlw	high highword(0)
  6293  08BD  3000               	bcf	status, 5	;RP0=0, select bank0
  6294  08BE  1283               	bcf	status, 6	;RP1=0, select bank0
  6295  08BF  1303               	movwf	(___lldiv@quotient+3)
  6296  08C0  00AC               	movlw	low highword(0)
  6297  08C1  3000               	movwf	(___lldiv@quotient+2)
  6298  08C2  00AB               	movlw	high(0)
  6299  08C3  3000               	movwf	(___lldiv@quotient+1)
  6300  08C4  00AA               	movlw	low(0)
  6301  08C5  3000               	movwf	(___lldiv@quotient)
  6302  08C6  00A9               
  6303                           	line	14
  6304                           	movf	(___lldiv@divisor+3),w
  6305  08C7  0823               	iorwf	(___lldiv@divisor+2),w
  6306  08C8  0422               	iorwf	(___lldiv@divisor+1),w
  6307  08C9  0421               	iorwf	(___lldiv@divisor),w
  6308  08CA  0420               	skipnz
  6309  08CB  1903               	goto	u5161
  6310  08CC  28CE               	goto	u5160
  6311  08CD  28CF               u5161:
  6312  08CE                     	goto	l3656
  6313  08CE  2922               u5160:
  6314  08CF                     	line	15
  6315                           	
  6316                           l3638:	
  6317  08CF                     	clrf	(___lldiv@counter)
  6318  08CF  01AD               	incf	(___lldiv@counter),f
  6319  08D0  0AAD               	line	16
  6320                           	goto	l3642
  6321  08D1  28E0               	
  6322                           l558:	
  6323  08D2                     	line	17
  6324                           	
  6325                           l3640:	
  6326  08D2                     	movlw	01h
  6327  08D2  3001               	movwf	(??___lldiv+0)+0
  6328  08D3  00A8               u5175:
  6329  08D4                     	clrc
  6330  08D4  1003               	rlf	(___lldiv@divisor),f
  6331  08D5  0DA0               	rlf	(___lldiv@divisor+1),f
  6332  08D6  0DA1               	rlf	(___lldiv@divisor+2),f
  6333  08D7  0DA2               	rlf	(___lldiv@divisor+3),f
  6334  08D8  0DA3               	decfsz	(??___lldiv+0)+0
  6335  08D9  0BA8               	goto	u5175
  6336  08DA  28D4               	line	18
  6337                           	movlw	low(01h)
  6338  08DB  3001               	movwf	(??___lldiv+0)+0
  6339  08DC  00A8               	movf	(??___lldiv+0)+0,w
  6340  08DD  0828               	addwf	(___lldiv@counter),f
  6341  08DE  07AD               	goto	l3642
  6342  08DF  28E0               	line	19
  6343                           	
  6344                           l557:	
  6345  08E0                     	line	16
  6346                           	
  6347                           l3642:	
  6348  08E0                     	btfss	(___lldiv@divisor+3),(31)&7
  6349  08E0  1FA3               	goto	u5181
  6350  08E1  28E3               	goto	u5180
  6351  08E2  28E4               u5181:
  6352  08E3                     	goto	l3640
  6353  08E3  28D2               u5180:
  6354  08E4                     	goto	l3644
  6355  08E4  28E6               	
  6356                           l559:	
  6357  08E5                     	goto	l3644
  6358  08E5  28E6               	line	20
  6359                           	
  6360                           l560:	
  6361  08E6                     	line	21
  6362                           	
  6363                           l3644:	
  6364  08E6                     	movlw	01h
  6365  08E6  3001               	movwf	(??___lldiv+0)+0
  6366  08E7  00A8               u5195:
  6367  08E8                     	clrc
  6368  08E8  1003               	rlf	(___lldiv@quotient),f
  6369  08E9  0DA9               	rlf	(___lldiv@quotient+1),f
  6370  08EA  0DAA               	rlf	(___lldiv@quotient+2),f
  6371  08EB  0DAB               	rlf	(___lldiv@quotient+3),f
  6372  08EC  0DAC               	decfsz	(??___lldiv+0)+0
  6373  08ED  0BA8               	goto	u5195
  6374  08EE  28E8               	line	22
  6375                           	
  6376                           l3646:	
  6377  08EF                     	movf	(___lldiv@divisor+3),w
  6378  08EF  0823               	subwf	(___lldiv@dividend+3),w
  6379  08F0  0227               	skipz
  6380  08F1  1D03               	goto	u5205
  6381  08F2  28FD               	movf	(___lldiv@divisor+2),w
  6382  08F3  0822               	subwf	(___lldiv@dividend+2),w
  6383  08F4  0226               	skipz
  6384  08F5  1D03               	goto	u5205
  6385  08F6  28FD               	movf	(___lldiv@divisor+1),w
  6386  08F7  0821               	subwf	(___lldiv@dividend+1),w
  6387  08F8  0225               	skipz
  6388  08F9  1D03               	goto	u5205
  6389  08FA  28FD               	movf	(___lldiv@divisor),w
  6390  08FB  0820               	subwf	(___lldiv@dividend),w
  6391  08FC  0224               u5205:
  6392  08FD                     	skipc
  6393  08FD  1C03               	goto	u5201
  6394  08FE  2900               	goto	u5200
  6395  08FF  2901               u5201:
  6396  0900                     	goto	l3652
  6397  0900  2911               u5200:
  6398  0901                     	line	23
  6399                           	
  6400                           l3648:	
  6401  0901                     	movf	(___lldiv@divisor),w
  6402  0901  0820               	subwf	(___lldiv@dividend),f
  6403  0902  02A4               	movf	(___lldiv@divisor+1),w
  6404  0903  0821               	skipc
  6405  0904  1C03               	incfsz	(___lldiv@divisor+1),w
  6406  0905  0F21               	subwf	(___lldiv@dividend+1),f
  6407  0906  02A5               	movf	(___lldiv@divisor+2),w
  6408  0907  0822               	skipc
  6409  0908  1C03               	incfsz	(___lldiv@divisor+2),w
  6410  0909  0F22               	subwf	(___lldiv@dividend+2),f
  6411  090A  02A6               	movf	(___lldiv@divisor+3),w
  6412  090B  0823               	skipc
  6413  090C  1C03               	incfsz	(___lldiv@divisor+3),w
  6414  090D  0F23               	subwf	(___lldiv@dividend+3),f
  6415  090E  02A7               	line	24
  6416                           	
  6417                           l3650:	
  6418  090F                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  6419  090F  1429               	goto	l3652
  6420  0910  2911               	line	25
  6421                           	
  6422                           l561:	
  6423  0911                     	line	26
  6424                           	
  6425                           l3652:	
  6426  0911                     	movlw	01h
  6427  0911  3001               u5215:
  6428  0912                     	clrc
  6429  0912  1003               	rrf	(___lldiv@divisor+3),f
  6430  0913  0CA3               	rrf	(___lldiv@divisor+2),f
  6431  0914  0CA2               	rrf	(___lldiv@divisor+1),f
  6432  0915  0CA1               	rrf	(___lldiv@divisor),f
  6433  0916  0CA0               	addlw	-1
  6434  0917  3EFF               	skipz
  6435  0918  1D03               	goto	u5215
  6436  0919  2912               
  6437                           	line	27
  6438                           	
  6439                           l3654:	
  6440  091A                     	movlw	01h
  6441  091A  3001               	subwf	(___lldiv@counter),f
  6442  091B  02AD               	btfss	status,2
  6443  091C  1D03               	goto	u5221
  6444  091D  291F               	goto	u5220
  6445  091E  2920               u5221:
  6446  091F                     	goto	l3644
  6447  091F  28E6               u5220:
  6448  0920                     	goto	l3656
  6449  0920  2922               	
  6450                           l562:	
  6451  0921                     	goto	l3656
  6452  0921  2922               	line	28
  6453                           	
  6454                           l556:	
  6455  0922                     	line	29
  6456                           	
  6457                           l3656:	
  6458  0922                     	movf	(___lldiv@quotient+3),w
  6459  0922  082C               	movwf	(?___lldiv+3)
  6460  0923  00A3               	movf	(___lldiv@quotient+2),w
  6461  0924  082B               	movwf	(?___lldiv+2)
  6462  0925  00A2               	movf	(___lldiv@quotient+1),w
  6463  0926  082A               	movwf	(?___lldiv+1)
  6464  0927  00A1               	movf	(___lldiv@quotient),w
  6465  0928  0829               	movwf	(?___lldiv)
  6466  0929  00A0               
  6467                           	goto	l563
  6468  092A  292B               	
  6469                           l3658:	
  6470  092B                     	line	30
  6471                           	
  6472                           l563:	
  6473  092B                     	return
  6474  092B  0008               	opt stack 0
  6475                           GLOBAL	__end_of___lldiv
  6476                           	__end_of___lldiv:
  6477  092C                     	signat	___lldiv,8316
  6478                           	global	_setCursorLCD
  6479                           
  6480 ;; *************** function _setCursorLCD *****************
  6481 ;; Defined at:
  6482 ;;		line 8 in file "LCD.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  y               1    wreg     unsigned char 
  6485 ;;  x               1    3[BANK0 ] unsigned char 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  y               1    5[BANK0 ] unsigned char 
  6488 ;; Return value:  Size  Location     Type
  6489 ;;                  1    wreg      void 
  6490 ;; Registers used:
  6491 ;;		wreg, status,2, status,0, pclath, cstack
  6492 ;; Tracked objects:
  6493 ;;		On entry : 0/0
  6494 ;;		On exit  : 0/0
  6495 ;;		Unchanged: 0/0
  6496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6497 ;;      Params:         0       1       0       0       0
  6498 ;;      Locals:         0       1       0       0       0
  6499 ;;      Temps:          0       1       0       0       0
  6500 ;;      Totals:         0       3       0       0       0
  6501 ;;Total ram usage:        3 bytes
  6502 ;; Hardware stack levels used:    1
  6503 ;; Hardware stack levels required when called:    3
  6504 ;; This function calls:
  6505 ;;		_cmdLCD
  6506 ;; This function is called by:
  6507 ;;		_main
  6508 ;;		_writeFloat
  6509 ;; This function uses a non-reentrant model
  6510 ;;
  6511                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6512                           	file	"LCD.c"
  6513                           	line	8
  6514                           global __ptext13
  6515                           __ptext13:	;psect for function _setCursorLCD
  6516  116E                     psect	text13
  6517                           	file	"LCD.c"
  6518                           	line	8
  6519                           	global	__size_of_setCursorLCD
  6520                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  6521  0020                     	
  6522                           _setCursorLCD:	
  6523  116E                     ;incstack = 0
  6524                           	opt	stack 4
  6525                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  6526                           ;setCursorLCD@y stored from wreg
  6527                           	bcf	status, 5	;RP0=0, select bank0
  6528  116E  1283               	bcf	status, 6	;RP1=0, select bank0
  6529  116F  1303               	movwf	(setCursorLCD@y)
  6530  1170  00A5               	line	9
  6531                           	
  6532                           l3874:	
  6533  1171                     ;LCD.c: 9:     if(y == 1){
  6534                           		decf	((setCursorLCD@y)),w
  6535  1171  0325               	btfss	status,2
  6536  1172  1D03               	goto	u5561
  6537  1173  2975               	goto	u5560
  6538  1174  2976               u5561:
  6539  1175                     	goto	l3878
  6540  1175  297E               u5560:
  6541  1176                     	line	10
  6542                           	
  6543                           l3876:	
  6544  1176                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  6545                           	movf	(setCursorLCD@x),w
  6546  1176  0823               	addlw	07Fh
  6547  1177  3E7F               	movwf	(??_setCursorLCD+0)+0
  6548  1178  00A4               	movf	(??_setCursorLCD+0)+0,w
  6549  1179  0824               	bsf	status, 5	;RP0=1, select bank1
  6550  117A  1683               	bcf	status, 6	;RP1=0, select bank1
  6551  117B  1303               	movwf	(_cursor)^080h
  6552  117C  00C2               	line	11
  6553                           ;LCD.c: 11:     }else{
  6554                           	goto	l3880
  6555  117D  2987               	
  6556                           l74:	
  6557  117E                     	line	12
  6558                           	
  6559                           l3878:	
  6560  117E                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  6561                           	bcf	status, 5	;RP0=0, select bank0
  6562  117E  1283               	movf	(setCursorLCD@x),w
  6563  117F  0823               	addlw	0BFh
  6564  1180  3EBF               	movwf	(??_setCursorLCD+0)+0
  6565  1181  00A4               	movf	(??_setCursorLCD+0)+0,w
  6566  1182  0824               	bsf	status, 5	;RP0=1, select bank1
  6567  1183  1683               	bcf	status, 6	;RP1=0, select bank1
  6568  1184  1303               	movwf	(_cursor)^080h
  6569  1185  00C2               	goto	l3880
  6570  1186  2987               	line	13
  6571                           ;LCD.c: 13:     }
  6572                           	
  6573                           l75:	
  6574  1187                     	line	14
  6575                           	
  6576                           l3880:	
  6577  1187                     ;LCD.c: 14:     cmdLCD(cursor);
  6578                           	movf	(_cursor)^080h,w
  6579  1187  0842               	fcall	_cmdLCD
  6580  1188  120A  158A  20A7  160A  118A  	line	15
  6581                           	
  6582                           l76:	
  6583  118D                     	return
  6584  118D  0008               	opt stack 0
  6585                           GLOBAL	__end_of_setCursorLCD
  6586                           	__end_of_setCursorLCD:
  6587  118E                     	signat	_setCursorLCD,8313
  6588                           	global	_cmdLCD
  6589                           
  6590 ;; *************** function _cmdLCD *****************
  6591 ;; Defined at:
  6592 ;;		line 49 in file "LCD.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  cmd             1    wreg     unsigned char 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  cmd             1    2[BANK0 ] unsigned char 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6606 ;;      Params:         0       0       0       0       0
  6607 ;;      Locals:         0       1       0       0       0
  6608 ;;      Temps:          0       2       0       0       0
  6609 ;;      Totals:         0       3       0       0       0
  6610 ;;Total ram usage:        3 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    2
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_setCursorLCD
  6617 ;;		_clcLCD
  6618 ;;		_initLCD
  6619 ;; This function uses a non-reentrant model
  6620 ;;
  6621                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6622                           	line	49
  6623                           global __ptext14
  6624                           __ptext14:	;psect for function _cmdLCD
  6625  08A7                     psect	text14
  6626                           	file	"LCD.c"
  6627                           	line	49
  6628                           	global	__size_of_cmdLCD
  6629                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  6630  0016                     	
  6631                           _cmdLCD:	
  6632  08A7                     ;incstack = 0
  6633                           	opt	stack 3
  6634                           ; Regs used in _cmdLCD: [wreg]
  6635                           ;cmdLCD@cmd stored from wreg
  6636                           	bcf	status, 5	;RP0=0, select bank0
  6637  08A7  1283               	bcf	status, 6	;RP1=0, select bank0
  6638  08A8  1303               	movwf	(cmdLCD@cmd)
  6639  08A9  00A2               	line	50
  6640                           	
  6641                           l3620:	
  6642  08AA                     ;LCD.c: 50:     RD0 = 0;
  6643                           	bcf	(64/8),(64)&7	;volatile
  6644  08AA  1008               	line	51
  6645                           	
  6646                           l3622:	
  6647  08AB                     ;LCD.c: 51:  PORTB = cmd;
  6648                           	movf	(cmdLCD@cmd),w
  6649  08AB  0822               	movwf	(6)	;volatile
  6650  08AC  0086               	line	52
  6651                           	
  6652                           l3624:	
  6653  08AD                     ;LCD.c: 52:  RD1 = 1;
  6654                           	bsf	(65/8),(65)&7	;volatile
  6655  08AD  1488               	line	53
  6656                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  6657                           	opt asmopt_push
  6658                           opt asmopt_off
  6659                           movlw	6
  6660  08AE  3006               	bcf	status, 5	;RP0=0, select bank0
  6661  08AF  1283               	bcf	status, 6	;RP1=0, select bank0
  6662  08B0  1303               movwf	((??_cmdLCD+0)+0+1),f
  6663  08B1  00A1               	movlw	47
  6664  08B2  302F               movwf	((??_cmdLCD+0)+0),f
  6665  08B3  00A0               	u7067:
  6666  08B4                     decfsz	((??_cmdLCD+0)+0),f
  6667  08B4  0BA0               	goto	u7067
  6668  08B5  28B4               	decfsz	((??_cmdLCD+0)+0+1),f
  6669  08B6  0BA1               	goto	u7067
  6670  08B7  28B4               	nop2
  6671  08B8  28B9               opt asmopt_pop
  6672                           
  6673                           	line	54
  6674                           	
  6675                           l3626:	
  6676  08B9                     ;LCD.c: 54:     RD1 = 0;
  6677                           	bcf	status, 5	;RP0=0, select bank0
  6678  08B9  1283               	bcf	status, 6	;RP1=0, select bank0
  6679  08BA  1303               	bcf	(65/8),(65)&7	;volatile
  6680  08BB  1088               	line	55
  6681                           	
  6682                           l94:	
  6683  08BC                     	return
  6684  08BC  0008               	opt stack 0
  6685                           GLOBAL	__end_of_cmdLCD
  6686                           	__end_of_cmdLCD:
  6687  08BD                     	signat	_cmdLCD,4217
  6688                           	global	___xxtofl
  6689                           
  6690 ;; *************** function ___xxtofl *****************
  6691 ;; Defined at:
  6692 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  6693 ;; Parameters:    Size  Location     Type
  6694 ;;  sign            1    wreg     unsigned char 
  6695 ;;  val             4    0[BANK0 ] long 
  6696 ;; Auto vars:     Size  Location     Type
  6697 ;;  sign            1    8[BANK0 ] unsigned char 
  6698 ;;  arg             4   10[BANK0 ] unsigned long 
  6699 ;;  exp             1    9[BANK0 ] unsigned char 
  6700 ;; Return value:  Size  Location     Type
  6701 ;;                  4    0[BANK0 ] unsigned char 
  6702 ;; Registers used:
  6703 ;;		wreg, status,2, status,0
  6704 ;; Tracked objects:
  6705 ;;		On entry : 0/0
  6706 ;;		On exit  : 0/0
  6707 ;;		Unchanged: 0/0
  6708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6709 ;;      Params:         0       4       0       0       0
  6710 ;;      Locals:         0       6       0       0       0
  6711 ;;      Temps:          0       4       0       0       0
  6712 ;;      Totals:         0      14       0       0       0
  6713 ;;Total ram usage:       14 bytes
  6714 ;; Hardware stack levels used:    1
  6715 ;; Hardware stack levels required when called:    2
  6716 ;; This function calls:
  6717 ;;		Nothing
  6718 ;; This function is called by:
  6719 ;;		_main
  6720 ;; This function uses a non-reentrant model
  6721 ;;
  6722                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  6723                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  6724                           	line	10
  6725                           global __ptext15
  6726                           __ptext15:	;psect for function ___xxtofl
  6727  06C0                     psect	text15
  6728                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  6729                           	line	10
  6730                           	global	__size_of___xxtofl
  6731                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  6732  00C4                     	
  6733                           ___xxtofl:	
  6734  06C0                     ;incstack = 0
  6735                           	opt	stack 5
  6736                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6737                           ;___xxtofl@sign stored from wreg
  6738                           	bcf	status, 5	;RP0=0, select bank0
  6739  06C0  1283               	bcf	status, 6	;RP1=0, select bank0
  6740  06C1  1303               	movwf	(___xxtofl@sign)
  6741  06C2  00A8               	line	15
  6742                           	
  6743                           l4282:	
  6744  06C3                     	movf	((___xxtofl@sign)),w
  6745  06C3  0828               	btfsc	status,2
  6746  06C4  1903               	goto	u6481
  6747  06C5  2EC7               	goto	u6480
  6748  06C6  2EC8               u6481:
  6749  06C7                     	goto	l4288
  6750  06C7  2EDC               u6480:
  6751  06C8                     	
  6752                           l4284:	
  6753  06C8                     	btfss	(___xxtofl@val+3),7
  6754  06C8  1FA3               	goto	u6491
  6755  06C9  2ECB               	goto	u6490
  6756  06CA  2ECC               u6491:
  6757  06CB                     	goto	l4288
  6758  06CB  2EDC               u6490:
  6759  06CC                     	line	16
  6760                           	
  6761                           l4286:	
  6762  06CC                     	comf	(___xxtofl@val)+0,w
  6763  06CC  0920               	movwf	(___xxtofl@arg)
  6764  06CD  00AA               	comf	(___xxtofl@val)+1,w
  6765  06CE  0921               	movwf	(___xxtofl@arg+1)
  6766  06CF  00AB               	comf	(___xxtofl@val)+2,w
  6767  06D0  0922               	movwf	(___xxtofl@arg+2)
  6768  06D1  00AC               	comf	(___xxtofl@val)+3,w
  6769  06D2  0923               	movwf	(___xxtofl@arg+3)
  6770  06D3  00AD               	incf	(___xxtofl@arg),f
  6771  06D4  0AAA               	skipnz
  6772  06D5  1903               	incf	(___xxtofl@arg+1),f
  6773  06D6  0AAB               	skipnz
  6774  06D7  1903               	incf	(___xxtofl@arg+2),f
  6775  06D8  0AAC               	skipnz
  6776  06D9  1903               	incf	(___xxtofl@arg+3),f
  6777  06DA  0AAD               	line	17
  6778                           	goto	l935
  6779  06DB  2EE4               	line	18
  6780                           	
  6781                           l934:	
  6782  06DC                     	line	19
  6783                           	
  6784                           l4288:	
  6785  06DC                     	movf	(___xxtofl@val+3),w
  6786  06DC  0823               	movwf	(___xxtofl@arg+3)
  6787  06DD  00AD               	movf	(___xxtofl@val+2),w
  6788  06DE  0822               	movwf	(___xxtofl@arg+2)
  6789  06DF  00AC               	movf	(___xxtofl@val+1),w
  6790  06E0  0821               	movwf	(___xxtofl@arg+1)
  6791  06E1  00AB               	movf	(___xxtofl@val),w
  6792  06E2  0820               	movwf	(___xxtofl@arg)
  6793  06E3  00AA               
  6794                           	line	20
  6795                           	
  6796                           l935:	
  6797  06E4                     	line	21
  6798                           	movf	(___xxtofl@val+3),w
  6799  06E4  0823               	iorwf	(___xxtofl@val+2),w
  6800  06E5  0422               	iorwf	(___xxtofl@val+1),w
  6801  06E6  0421               	iorwf	(___xxtofl@val),w
  6802  06E7  0420               	skipz
  6803  06E8  1D03               	goto	u6501
  6804  06E9  2EEB               	goto	u6500
  6805  06EA  2EEC               u6501:
  6806  06EB                     	goto	l4294
  6807  06EB  2EF6               u6500:
  6808  06EC                     	line	22
  6809                           	
  6810                           l4290:	
  6811  06EC                     	movlw	0x0
  6812  06EC  3000               	movwf	(?___xxtofl+3)
  6813  06ED  00A3               	movlw	0x0
  6814  06EE  3000               	movwf	(?___xxtofl+2)
  6815  06EF  00A2               	movlw	0x0
  6816  06F0  3000               	movwf	(?___xxtofl+1)
  6817  06F1  00A1               	movlw	0x0
  6818  06F2  3000               	movwf	(?___xxtofl)
  6819  06F3  00A0               
  6820                           	goto	l937
  6821  06F4  2F83               	
  6822                           l4292:	
  6823  06F5                     	goto	l937
  6824  06F5  2F83               	
  6825                           l936:	
  6826  06F6                     	line	23
  6827                           	
  6828                           l4294:	
  6829  06F6                     	movlw	low(096h)
  6830  06F6  3096               	movwf	(??___xxtofl+0)+0
  6831  06F7  00A4               	movf	(??___xxtofl+0)+0,w
  6832  06F8  0824               	movwf	(___xxtofl@exp)
  6833  06F9  00A9               	line	24
  6834                           	goto	l4298
  6835  06FA  2F09               	
  6836                           l939:	
  6837  06FB                     	line	25
  6838                           	
  6839                           l4296:	
  6840  06FB                     	movlw	low(01h)
  6841  06FB  3001               	movwf	(??___xxtofl+0)+0
  6842  06FC  00A4               	movf	(??___xxtofl+0)+0,w
  6843  06FD  0824               	addwf	(___xxtofl@exp),f
  6844  06FE  07A9               	line	26
  6845                           	movlw	01h
  6846  06FF  3001               u6515:
  6847  0700                     	clrc
  6848  0700  1003               	rrf	(___xxtofl@arg+3),f
  6849  0701  0CAD               	rrf	(___xxtofl@arg+2),f
  6850  0702  0CAC               	rrf	(___xxtofl@arg+1),f
  6851  0703  0CAB               	rrf	(___xxtofl@arg),f
  6852  0704  0CAA               	addlw	-1
  6853  0705  3EFF               	skipz
  6854  0706  1D03               	goto	u6515
  6855  0707  2F00               
  6856                           	goto	l4298
  6857  0708  2F09               	line	27
  6858                           	
  6859                           l938:	
  6860  0709                     	line	24
  6861                           	
  6862                           l4298:	
  6863  0709                     	movlw	high highword(0FE000000h)
  6864  0709  30FE               	andwf	(___xxtofl@arg+3),w
  6865  070A  052D               	btfss	status,2
  6866  070B  1D03               	goto	u6521
  6867  070C  2F0E               	goto	u6520
  6868  070D  2F0F               u6521:
  6869  070E                     	goto	l4296
  6870  070E  2EFB               u6520:
  6871  070F                     	goto	l941
  6872  070F  2F2C               	
  6873                           l940:	
  6874  0710                     	line	28
  6875                           	goto	l941
  6876  0710  2F2C               	
  6877                           l942:	
  6878  0711                     	line	29
  6879                           	
  6880                           l4300:	
  6881  0711                     	movlw	low(01h)
  6882  0711  3001               	movwf	(??___xxtofl+0)+0
  6883  0712  00A4               	movf	(??___xxtofl+0)+0,w
  6884  0713  0824               	addwf	(___xxtofl@exp),f
  6885  0714  07A9               	line	30
  6886                           	
  6887                           l4302:	
  6888  0715                     	movlw	01h
  6889  0715  3001               	addwf	(___xxtofl@arg),f
  6890  0716  07AA               	movlw	0
  6891  0717  3000               	skipnc
  6892  0718  1803               movlw 1
  6893  0719  3001               	addwf	(___xxtofl@arg+1),f
  6894  071A  07AB               	movlw	0
  6895  071B  3000               	skipnc
  6896  071C  1803               movlw 1
  6897  071D  3001               	addwf	(___xxtofl@arg+2),f
  6898  071E  07AC               	movlw	0
  6899  071F  3000               	skipnc
  6900  0720  1803               movlw 1
  6901  0721  3001               	addwf	(___xxtofl@arg+3),f
  6902  0722  07AD               	line	31
  6903                           	
  6904                           l4304:	
  6905  0723                     	movlw	01h
  6906  0723  3001               u6535:
  6907  0724                     	clrc
  6908  0724  1003               	rrf	(___xxtofl@arg+3),f
  6909  0725  0CAD               	rrf	(___xxtofl@arg+2),f
  6910  0726  0CAC               	rrf	(___xxtofl@arg+1),f
  6911  0727  0CAB               	rrf	(___xxtofl@arg),f
  6912  0728  0CAA               	addlw	-1
  6913  0729  3EFF               	skipz
  6914  072A  1D03               	goto	u6535
  6915  072B  2F24               
  6916                           	line	32
  6917                           	
  6918                           l941:	
  6919  072C                     	line	28
  6920                           	movlw	high highword(0FF000000h)
  6921  072C  30FF               	andwf	(___xxtofl@arg+3),w
  6922  072D  052D               	btfss	status,2
  6923  072E  1D03               	goto	u6541
  6924  072F  2F31               	goto	u6540
  6925  0730  2F32               u6541:
  6926  0731                     	goto	l4300
  6927  0731  2F11               u6540:
  6928  0732                     	goto	l4308
  6929  0732  2F40               	
  6930                           l943:	
  6931  0733                     	line	33
  6932                           	goto	l4308
  6933  0733  2F40               	
  6934                           l945:	
  6935  0734                     	line	34
  6936                           	
  6937                           l4306:	
  6938  0734                     	movlw	01h
  6939  0734  3001               	subwf	(___xxtofl@exp),f
  6940  0735  02A9               	line	35
  6941                           	movlw	01h
  6942  0736  3001               	movwf	(??___xxtofl+0)+0
  6943  0737  00A4               u6555:
  6944  0738                     	clrc
  6945  0738  1003               	rlf	(___xxtofl@arg),f
  6946  0739  0DAA               	rlf	(___xxtofl@arg+1),f
  6947  073A  0DAB               	rlf	(___xxtofl@arg+2),f
  6948  073B  0DAC               	rlf	(___xxtofl@arg+3),f
  6949  073C  0DAD               	decfsz	(??___xxtofl+0)+0
  6950  073D  0BA4               	goto	u6555
  6951  073E  2F38               	goto	l4308
  6952  073F  2F40               	line	36
  6953                           	
  6954                           l944:	
  6955  0740                     	line	33
  6956                           	
  6957                           l4308:	
  6958  0740                     	btfsc	(___xxtofl@arg+2),(23)&7
  6959  0740  1BAC               	goto	u6561
  6960  0741  2F43               	goto	u6560
  6961  0742  2F44               u6561:
  6962  0743                     	goto	l948
  6963  0743  2F4B               u6560:
  6964  0744                     	
  6965                           l4310:	
  6966  0744                     	movlw	low(02h)
  6967  0744  3002               	subwf	(___xxtofl@exp),w
  6968  0745  0229               	skipnc
  6969  0746  1803               	goto	u6571
  6970  0747  2F49               	goto	u6570
  6971  0748  2F4A               u6571:
  6972  0749                     	goto	l4306
  6973  0749  2F34               u6570:
  6974  074A                     	goto	l948
  6975  074A  2F4B               	
  6976                           l947:	
  6977  074B                     	
  6978                           l948:	
  6979  074B                     	line	37
  6980                           	btfsc	(___xxtofl@exp),(0)&7
  6981  074B  1829               	goto	u6581
  6982  074C  2F4E               	goto	u6580
  6983  074D  2F4F               u6581:
  6984  074E                     	goto	l949
  6985  074E  2F57               u6580:
  6986  074F                     	line	38
  6987                           	
  6988                           l4312:	
  6989  074F                     	movlw	0FFh
  6990  074F  30FF               	andwf	(___xxtofl@arg),f
  6991  0750  05AA               	movlw	0FFh
  6992  0751  30FF               	andwf	(___xxtofl@arg+1),f
  6993  0752  05AB               	movlw	07Fh
  6994  0753  307F               	andwf	(___xxtofl@arg+2),f
  6995  0754  05AC               	movlw	0FFh
  6996  0755  30FF               	andwf	(___xxtofl@arg+3),f
  6997  0756  05AD               	
  6998                           l949:	
  6999  0757                     	line	39
  7000                           	clrc
  7001  0757  1003               	rrf	(___xxtofl@exp),f
  7002  0758  0CA9               
  7003                           	line	40
  7004                           	
  7005                           l4314:	
  7006  0759                     	movf	(___xxtofl@exp),w
  7007  0759  0829               	movwf	(??___xxtofl+0)+0
  7008  075A  00A4               	clrf	(??___xxtofl+0)+0+1
  7009  075B  01A5               	clrf	(??___xxtofl+0)+0+2
  7010  075C  01A6               	clrf	(??___xxtofl+0)+0+3
  7011  075D  01A7               	movlw	018h
  7012  075E  3018               u6595:
  7013  075F                     	clrc
  7014  075F  1003               	rlf	(??___xxtofl+0)+0,f
  7015  0760  0DA4               	rlf	(??___xxtofl+0)+1,f
  7016  0761  0DA5               	rlf	(??___xxtofl+0)+2,f
  7017  0762  0DA6               	rlf	(??___xxtofl+0)+3,f
  7018  0763  0DA7               u6590:
  7019  0764                     	addlw	-1
  7020  0764  3EFF               	skipz
  7021  0765  1D03               	goto	u6595
  7022  0766  2F5F               	movf	0+(??___xxtofl+0)+0,w
  7023  0767  0824               	iorwf	(___xxtofl@arg),f
  7024  0768  04AA               	movf	1+(??___xxtofl+0)+0,w
  7025  0769  0825               	iorwf	(___xxtofl@arg+1),f
  7026  076A  04AB               	movf	2+(??___xxtofl+0)+0,w
  7027  076B  0826               	iorwf	(___xxtofl@arg+2),f
  7028  076C  04AC               	movf	3+(??___xxtofl+0)+0,w
  7029  076D  0827               	iorwf	(___xxtofl@arg+3),f
  7030  076E  04AD               	line	41
  7031                           	
  7032                           l4316:	
  7033  076F                     	movf	((___xxtofl@sign)),w
  7034  076F  0828               	btfsc	status,2
  7035  0770  1903               	goto	u6601
  7036  0771  2F73               	goto	u6600
  7037  0772  2F74               u6601:
  7038  0773                     	goto	l4322
  7039  0773  2F7A               u6600:
  7040  0774                     	
  7041                           l4318:	
  7042  0774                     	btfss	(___xxtofl@val+3),7
  7043  0774  1FA3               	goto	u6611
  7044  0775  2F77               	goto	u6610
  7045  0776  2F78               u6611:
  7046  0777                     	goto	l4322
  7047  0777  2F7A               u6610:
  7048  0778                     	line	42
  7049                           	
  7050                           l4320:	
  7051  0778                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  7052  0778  17AD               	goto	l4322
  7053  0779  2F7A               	
  7054                           l950:	
  7055  077A                     	line	43
  7056                           	
  7057                           l4322:	
  7058  077A                     	movf	(___xxtofl@arg+3),w
  7059  077A  082D               	movwf	(?___xxtofl+3)
  7060  077B  00A3               	movf	(___xxtofl@arg+2),w
  7061  077C  082C               	movwf	(?___xxtofl+2)
  7062  077D  00A2               	movf	(___xxtofl@arg+1),w
  7063  077E  082B               	movwf	(?___xxtofl+1)
  7064  077F  00A1               	movf	(___xxtofl@arg),w
  7065  0780  082A               	movwf	(?___xxtofl)
  7066  0781  00A0               
  7067                           	goto	l937
  7068  0782  2F83               	
  7069                           l4324:	
  7070  0783                     	line	44
  7071                           	
  7072                           l937:	
  7073  0783                     	return
  7074  0783  0008               	opt stack 0
  7075                           GLOBAL	__end_of___xxtofl
  7076                           	__end_of___xxtofl:
  7077  0784                     	signat	___xxtofl,8316
  7078                           	global	___wmul
  7079                           
  7080 ;; *************** function ___wmul *****************
  7081 ;; Defined at:
  7082 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7083 ;; Parameters:    Size  Location     Type
  7084 ;;  multiplier      2    0[BANK0 ] unsigned int 
  7085 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  7086 ;; Auto vars:     Size  Location     Type
  7087 ;;  product         2    4[BANK0 ] unsigned int 
  7088 ;; Return value:  Size  Location     Type
  7089 ;;                  2    0[BANK0 ] unsigned int 
  7090 ;; Registers used:
  7091 ;;		wreg, status,2, status,0
  7092 ;; Tracked objects:
  7093 ;;		On entry : 0/0
  7094 ;;		On exit  : 0/0
  7095 ;;		Unchanged: 0/0
  7096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7097 ;;      Params:         0       4       0       0       0
  7098 ;;      Locals:         0       2       0       0       0
  7099 ;;      Temps:          0       0       0       0       0
  7100 ;;      Totals:         0       6       0       0       0
  7101 ;;Total ram usage:        6 bytes
  7102 ;; Hardware stack levels used:    1
  7103 ;; Hardware stack levels required when called:    2
  7104 ;; This function calls:
  7105 ;;		Nothing
  7106 ;; This function is called by:
  7107 ;;		_main
  7108 ;; This function uses a non-reentrant model
  7109 ;;
  7110                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  7111                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7112                           	line	15
  7113                           global __ptext16
  7114                           __ptext16:	;psect for function ___wmul
  7115  11AE                     psect	text16
  7116                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul16.c"
  7117                           	line	15
  7118                           	global	__size_of___wmul
  7119                           	__size_of___wmul	equ	__end_of___wmul-___wmul
  7120  002A                     	
  7121                           ___wmul:	
  7122  11AE                     ;incstack = 0
  7123                           	opt	stack 5
  7124                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7125                           	line	43
  7126                           	
  7127                           l3904:	
  7128  11AE                     	bcf	status, 5	;RP0=0, select bank0
  7129  11AE  1283               	bcf	status, 6	;RP1=0, select bank0
  7130  11AF  1303               	clrf	(___wmul@product)
  7131  11B0  01A4               	clrf	(___wmul@product+1)
  7132  11B1  01A5               	goto	l3906
  7133  11B2  29B3               	line	44
  7134                           	
  7135                           l526:	
  7136  11B3                     	line	45
  7137                           	
  7138                           l3906:	
  7139  11B3                     	btfss	(___wmul@multiplier),(0)&7
  7140  11B3  1C20               	goto	u5571
  7141  11B4  29B6               	goto	u5570
  7142  11B5  29B7               u5571:
  7143  11B6                     	goto	l527
  7144  11B6  29BD               u5570:
  7145  11B7                     	line	46
  7146                           	
  7147                           l3908:	
  7148  11B7                     	movf	(___wmul@multiplicand),w
  7149  11B7  0822               	addwf	(___wmul@product),f
  7150  11B8  07A4               	skipnc
  7151  11B9  1803               	incf	(___wmul@product+1),f
  7152  11BA  0AA5               	movf	(___wmul@multiplicand+1),w
  7153  11BB  0823               	addwf	(___wmul@product+1),f
  7154  11BC  07A5               	
  7155                           l527:	
  7156  11BD                     	line	47
  7157                           	movlw	01h
  7158  11BD  3001               	
  7159                           u5585:
  7160  11BE                     	clrc
  7161  11BE  1003               	rlf	(___wmul@multiplicand),f
  7162  11BF  0DA2               	rlf	(___wmul@multiplicand+1),f
  7163  11C0  0DA3               	addlw	-1
  7164  11C1  3EFF               	skipz
  7165  11C2  1D03               	goto	u5585
  7166  11C3  29BE               	line	48
  7167                           	
  7168                           l3910:	
  7169  11C4                     	movlw	01h
  7170  11C4  3001               	
  7171                           u5595:
  7172  11C5                     	clrc
  7173  11C5  1003               	rrf	(___wmul@multiplier+1),f
  7174  11C6  0CA1               	rrf	(___wmul@multiplier),f
  7175  11C7  0CA0               	addlw	-1
  7176  11C8  3EFF               	skipz
  7177  11C9  1D03               	goto	u5595
  7178  11CA  29C5               	line	49
  7179                           	
  7180                           l3912:	
  7181  11CB                     	movf	((___wmul@multiplier)),w
  7182  11CB  0820               iorwf	((___wmul@multiplier+1)),w
  7183  11CC  0421               	btfss	status,2
  7184  11CD  1D03               	goto	u5601
  7185  11CE  29D0               	goto	u5600
  7186  11CF  29D1               u5601:
  7187  11D0                     	goto	l3906
  7188  11D0  29B3               u5600:
  7189  11D1                     	goto	l3914
  7190  11D1  29D2               	
  7191                           l528:	
  7192  11D2                     	line	52
  7193                           	
  7194                           l3914:	
  7195  11D2                     	movf	(___wmul@product+1),w
  7196  11D2  0825               	movwf	(?___wmul+1)
  7197  11D3  00A1               	movf	(___wmul@product),w
  7198  11D4  0824               	movwf	(?___wmul)
  7199  11D5  00A0               	goto	l529
  7200  11D6  29D7               	
  7201                           l3916:	
  7202  11D7                     	line	53
  7203                           	
  7204                           l529:	
  7205  11D7                     	return
  7206  11D7  0008               	opt stack 0
  7207                           GLOBAL	__end_of___wmul
  7208                           	__end_of___wmul:
  7209  11D8                     	signat	___wmul,8314
  7210                           	global	___fltol
  7211                           
  7212 ;; *************** function ___fltol *****************
  7213 ;; Defined at:
  7214 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  7215 ;; Parameters:    Size  Location     Type
  7216 ;;  f1              4    0[BANK0 ] unsigned int 
  7217 ;; Auto vars:     Size  Location     Type
  7218 ;;  exp1            1   10[BANK0 ] unsigned char 
  7219 ;;  sign1           1    9[BANK0 ] unsigned char 
  7220 ;; Return value:  Size  Location     Type
  7221 ;;                  4    0[BANK0 ] long 
  7222 ;; Registers used:
  7223 ;;		wreg, status,2, status,0
  7224 ;; Tracked objects:
  7225 ;;		On entry : 0/0
  7226 ;;		On exit  : 0/0
  7227 ;;		Unchanged: 0/0
  7228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7229 ;;      Params:         0       4       0       0       0
  7230 ;;      Locals:         0       2       0       0       0
  7231 ;;      Temps:          0       5       0       0       0
  7232 ;;      Totals:         0      11       0       0       0
  7233 ;;Total ram usage:       11 bytes
  7234 ;; Hardware stack levels used:    1
  7235 ;; Hardware stack levels required when called:    2
  7236 ;; This function calls:
  7237 ;;		Nothing
  7238 ;; This function is called by:
  7239 ;;		_main
  7240 ;; This function uses a non-reentrant model
  7241 ;;
  7242                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  7243                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  7244                           	line	43
  7245                           global __ptext17
  7246                           __ptext17:	;psect for function ___fltol
  7247  092C                     psect	text17
  7248                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  7249                           	line	43
  7250                           	global	__size_of___fltol
  7251                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  7252  009C                     	
  7253                           ___fltol:	
  7254  092C                     ;incstack = 0
  7255                           	opt	stack 5
  7256                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7257                           	line	47
  7258                           	
  7259                           l3964:	
  7260  092C                     	bcf	status, 5	;RP0=0, select bank0
  7261  092C  1283               	bcf	status, 6	;RP1=0, select bank0
  7262  092D  1303               	movf	(___fltol@f1),w
  7263  092E  0820               	movwf	(??___fltol+0)+0
  7264  092F  00A4               	movf	(___fltol@f1+1),w
  7265  0930  0821               	movwf	((??___fltol+0)+0+1)
  7266  0931  00A5               	movf	(___fltol@f1+2),w
  7267  0932  0822               	movwf	((??___fltol+0)+0+2)
  7268  0933  00A6               	movf	(___fltol@f1+3),w
  7269  0934  0823               	movwf	((??___fltol+0)+0+3)
  7270  0935  00A7               	clrc
  7271  0936  1003               	rlf	(??___fltol+0)+2,w
  7272  0937  0D26               	rlf	(??___fltol+0)+3,w
  7273  0938  0D27               	movwf	(??___fltol+4)+0
  7274  0939  00A8               	movf	(??___fltol+4)+0,w
  7275  093A  0828               	movwf	(___fltol@exp1)
  7276  093B  00AA               	movf	(((___fltol@exp1))),w
  7277  093C  082A               	btfss	status,2
  7278  093D  1D03               	goto	u5711
  7279  093E  2940               	goto	u5710
  7280  093F  2941               u5711:
  7281  0940                     	goto	l3970
  7282  0940  294B               u5710:
  7283  0941                     	line	48
  7284                           	
  7285                           l3966:	
  7286  0941                     	movlw	high highword(0)
  7287  0941  3000               	movwf	(?___fltol+3)
  7288  0942  00A3               	movlw	low highword(0)
  7289  0943  3000               	movwf	(?___fltol+2)
  7290  0944  00A2               	movlw	high(0)
  7291  0945  3000               	movwf	(?___fltol+1)
  7292  0946  00A1               	movlw	low(0)
  7293  0947  3000               	movwf	(?___fltol)
  7294  0948  00A0               
  7295                           	goto	l713
  7296  0949  29C7               	
  7297                           l3968:	
  7298  094A                     	goto	l713
  7299  094A  29C7               	
  7300                           l712:	
  7301  094B                     	line	49
  7302                           	
  7303                           l3970:	
  7304  094B                     	movf	(___fltol@f1),w
  7305  094B  0820               	movwf	(??___fltol+0)+0
  7306  094C  00A4               	movf	(___fltol@f1+1),w
  7307  094D  0821               	movwf	((??___fltol+0)+0+1)
  7308  094E  00A5               	movf	(___fltol@f1+2),w
  7309  094F  0822               	movwf	((??___fltol+0)+0+2)
  7310  0950  00A6               	movf	(___fltol@f1+3),w
  7311  0951  0823               	movwf	((??___fltol+0)+0+3)
  7312  0952  00A7               	movlw	01Fh
  7313  0953  301F               u5725:
  7314  0954                     	clrc
  7315  0954  1003               	rrf	(??___fltol+0)+3,f
  7316  0955  0CA7               	rrf	(??___fltol+0)+2,f
  7317  0956  0CA6               	rrf	(??___fltol+0)+1,f
  7318  0957  0CA5               	rrf	(??___fltol+0)+0,f
  7319  0958  0CA4               u5720:
  7320  0959                     	addlw	-1
  7321  0959  3EFF               	skipz
  7322  095A  1D03               	goto	u5725
  7323  095B  2954               	movf	0+(??___fltol+0)+0,w
  7324  095C  0824               	movwf	(??___fltol+4)+0
  7325  095D  00A8               	movf	(??___fltol+4)+0,w
  7326  095E  0828               	movwf	(___fltol@sign1)
  7327  095F  00A9               	line	50
  7328                           	
  7329                           l3972:	
  7330  0960                     	bsf	(___fltol@f1)+(23/8),(23)&7
  7331  0960  17A2               	line	51
  7332                           	
  7333                           l3974:	
  7334  0961                     	movlw	0FFh
  7335  0961  30FF               	andwf	(___fltol@f1),f
  7336  0962  05A0               	movlw	0FFh
  7337  0963  30FF               	andwf	(___fltol@f1+1),f
  7338  0964  05A1               	movlw	0FFh
  7339  0965  30FF               	andwf	(___fltol@f1+2),f
  7340  0966  05A2               	movlw	0
  7341  0967  3000               	andwf	(___fltol@f1+3),f
  7342  0968  05A3               	line	52
  7343                           	
  7344                           l3976:	
  7345  0969                     	movlw	096h
  7346  0969  3096               	subwf	(___fltol@exp1),f
  7347  096A  02AA               	line	53
  7348                           	
  7349                           l3978:	
  7350  096B                     	btfss	(___fltol@exp1),7
  7351  096B  1FAA               	goto	u5731
  7352  096C  296E               	goto	u5730
  7353  096D  296F               u5731:
  7354  096E                     	goto	l3988
  7355  096E  2994               u5730:
  7356  096F                     	line	54
  7357                           	
  7358                           l3980:	
  7359  096F                     	movf	(___fltol@exp1),w
  7360  096F  082A               	xorlw	80h
  7361  0970  3A80               	addlw	-((-23)^80h)
  7362  0971  3E97               	skipnc
  7363  0972  1803               	goto	u5741
  7364  0973  2975               	goto	u5740
  7365  0974  2976               u5741:
  7366  0975                     	goto	l3986
  7367  0975  2981               u5740:
  7368  0976                     	line	55
  7369                           	
  7370                           l3982:	
  7371  0976                     	movlw	high highword(0)
  7372  0976  3000               	movwf	(?___fltol+3)
  7373  0977  00A3               	movlw	low highword(0)
  7374  0978  3000               	movwf	(?___fltol+2)
  7375  0979  00A2               	movlw	high(0)
  7376  097A  3000               	movwf	(?___fltol+1)
  7377  097B  00A1               	movlw	low(0)
  7378  097C  3000               	movwf	(?___fltol)
  7379  097D  00A0               
  7380                           	goto	l713
  7381  097E  29C7               	
  7382                           l3984:	
  7383  097F                     	goto	l713
  7384  097F  29C7               	
  7385                           l715:	
  7386  0980                     	goto	l3986
  7387  0980  2981               	line	56
  7388                           	
  7389                           l716:	
  7390  0981                     	line	57
  7391                           	
  7392                           l3986:	
  7393  0981                     	movlw	01h
  7394  0981  3001               u5755:
  7395  0982                     	clrc
  7396  0982  1003               	rrf	(___fltol@f1+3),f
  7397  0983  0CA3               	rrf	(___fltol@f1+2),f
  7398  0984  0CA2               	rrf	(___fltol@f1+1),f
  7399  0985  0CA1               	rrf	(___fltol@f1),f
  7400  0986  0CA0               	addlw	-1
  7401  0987  3EFF               	skipz
  7402  0988  1D03               	goto	u5755
  7403  0989  2982               
  7404                           	line	58
  7405                           	movlw	low(01h)
  7406  098A  3001               	movwf	(??___fltol+0)+0
  7407  098B  00A4               	movf	(??___fltol+0)+0,w
  7408  098C  0824               	addwf	(___fltol@exp1),f
  7409  098D  07AA               	btfss	status,2
  7410  098E  1D03               	goto	u5761
  7411  098F  2991               	goto	u5760
  7412  0990  2992               u5761:
  7413  0991                     	goto	l3986
  7414  0991  2981               u5760:
  7415  0992                     	goto	l3996
  7416  0992  29B7               	
  7417                           l717:	
  7418  0993                     	line	59
  7419                           	goto	l3996
  7420  0993  29B7               	
  7421                           l714:	
  7422  0994                     	line	60
  7423                           	
  7424                           l3988:	
  7425  0994                     	movlw	low(020h)
  7426  0994  3020               	subwf	(___fltol@exp1),w
  7427  0995  022A               	skipc
  7428  0996  1C03               	goto	u5771
  7429  0997  2999               	goto	u5770
  7430  0998  299A               u5771:
  7431  0999                     	goto	l720
  7432  0999  29B0               u5770:
  7433  099A                     	line	61
  7434                           	
  7435                           l3990:	
  7436  099A                     	movlw	high highword(0)
  7437  099A  3000               	movwf	(?___fltol+3)
  7438  099B  00A3               	movlw	low highword(0)
  7439  099C  3000               	movwf	(?___fltol+2)
  7440  099D  00A2               	movlw	high(0)
  7441  099E  3000               	movwf	(?___fltol+1)
  7442  099F  00A1               	movlw	low(0)
  7443  09A0  3000               	movwf	(?___fltol)
  7444  09A1  00A0               
  7445                           	goto	l713
  7446  09A2  29C7               	
  7447                           l3992:	
  7448  09A3                     	goto	l713
  7449  09A3  29C7               	
  7450                           l719:	
  7451  09A4                     	line	62
  7452                           	goto	l720
  7453  09A4  29B0               	
  7454                           l721:	
  7455  09A5                     	line	63
  7456                           	
  7457                           l3994:	
  7458  09A5                     	movlw	01h
  7459  09A5  3001               	movwf	(??___fltol+0)+0
  7460  09A6  00A4               u5785:
  7461  09A7                     	clrc
  7462  09A7  1003               	rlf	(___fltol@f1),f
  7463  09A8  0DA0               	rlf	(___fltol@f1+1),f
  7464  09A9  0DA1               	rlf	(___fltol@f1+2),f
  7465  09AA  0DA2               	rlf	(___fltol@f1+3),f
  7466  09AB  0DA3               	decfsz	(??___fltol+0)+0
  7467  09AC  0BA4               	goto	u5785
  7468  09AD  29A7               	line	64
  7469                           	movlw	01h
  7470  09AE  3001               	subwf	(___fltol@exp1),f
  7471  09AF  02AA               	line	65
  7472                           	
  7473                           l720:	
  7474  09B0                     	line	62
  7475                           	movf	((___fltol@exp1)),w
  7476  09B0  082A               	btfss	status,2
  7477  09B1  1D03               	goto	u5791
  7478  09B2  29B4               	goto	u5790
  7479  09B3  29B5               u5791:
  7480  09B4                     	goto	l3994
  7481  09B4  29A5               u5790:
  7482  09B5                     	goto	l3996
  7483  09B5  29B7               	
  7484                           l722:	
  7485  09B6                     	goto	l3996
  7486  09B6  29B7               	line	66
  7487                           	
  7488                           l718:	
  7489  09B7                     	line	67
  7490                           	
  7491                           l3996:	
  7492  09B7                     	movf	((___fltol@sign1)),w
  7493  09B7  0829               	btfsc	status,2
  7494  09B8  1903               	goto	u5801
  7495  09B9  29BB               	goto	u5800
  7496  09BA  29BC               u5801:
  7497  09BB                     	goto	l723
  7498  09BB  29C7               u5800:
  7499  09BC                     	line	68
  7500                           	
  7501                           l3998:	
  7502  09BC                     	comf	(___fltol@f1),f
  7503  09BC  09A0               	comf	(___fltol@f1+1),f
  7504  09BD  09A1               	comf	(___fltol@f1+2),f
  7505  09BE  09A2               	comf	(___fltol@f1+3),f
  7506  09BF  09A3               	incf	(___fltol@f1),f
  7507  09C0  0AA0               	skipnz
  7508  09C1  1903               	incf	(___fltol@f1+1),f
  7509  09C2  0AA1               	skipnz
  7510  09C3  1903               	incf	(___fltol@f1+2),f
  7511  09C4  0AA2               	skipnz
  7512  09C5  1903               	incf	(___fltol@f1+3),f
  7513  09C6  0AA3               	
  7514                           l723:	
  7515  09C7                     	line	69
  7516                           	line	70
  7517                           	
  7518                           l713:	
  7519  09C7                     	return
  7520  09C7  0008               	opt stack 0
  7521                           GLOBAL	__end_of___fltol
  7522                           	__end_of___fltol:
  7523  09C8                     	signat	___fltol,4220
  7524                           	global	___flneg
  7525                           
  7526 ;; *************** function ___flneg *****************
  7527 ;; Defined at:
  7528 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  7529 ;; Parameters:    Size  Location     Type
  7530 ;;  f1              4   14[BANK0 ] long 
  7531 ;; Auto vars:     Size  Location     Type
  7532 ;;		None
  7533 ;; Return value:  Size  Location     Type
  7534 ;;                  4   14[BANK0 ] long 
  7535 ;; Registers used:
  7536 ;;		wreg
  7537 ;; Tracked objects:
  7538 ;;		On entry : 0/0
  7539 ;;		On exit  : 0/0
  7540 ;;		Unchanged: 0/0
  7541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7542 ;;      Params:         0       4       0       0       0
  7543 ;;      Locals:         0       0       0       0       0
  7544 ;;      Temps:          0       0       0       0       0
  7545 ;;      Totals:         0       4       0       0       0
  7546 ;;Total ram usage:        4 bytes
  7547 ;; Hardware stack levels used:    1
  7548 ;; Hardware stack levels required when called:    2
  7549 ;; This function calls:
  7550 ;;		Nothing
  7551 ;; This function is called by:
  7552 ;;		_main
  7553 ;; This function uses a non-reentrant model
  7554 ;;
  7555                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  7556                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  7557                           	line	15
  7558                           global __ptext18
  7559                           __ptext18:	;psect for function ___flneg
  7560  1138                     psect	text18
  7561                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  7562                           	line	15
  7563                           	global	__size_of___flneg
  7564                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  7565  000F                     	
  7566                           ___flneg:	
  7567  1138                     ;incstack = 0
  7568                           	opt	stack 5
  7569                           ; Regs used in ___flneg: [wreg]
  7570                           	line	17
  7571                           	
  7572                           l3956:	
  7573  1138                     	bcf	status, 5	;RP0=0, select bank0
  7574  1138  1283               	bcf	status, 6	;RP1=0, select bank0
  7575  1139  1303               	movf	(___flneg@f1+3),w
  7576  113A  0831               	iorwf	(___flneg@f1+2),w
  7577  113B  0430               	iorwf	(___flneg@f1+1),w
  7578  113C  042F               	iorwf	(___flneg@f1),w
  7579  113D  042E               	skipnz
  7580  113E  1903               	goto	u5701
  7581  113F  2941               	goto	u5700
  7582  1140  2942               u5701:
  7583  1141                     	goto	l3960
  7584  1141  2945               u5700:
  7585  1142                     	line	18
  7586                           	
  7587                           l3958:	
  7588  1142                     	movlw	080h
  7589  1142  3080               	xorwf	(___flneg@f1+3),f
  7590  1143  06B1               	goto	l3960
  7591  1144  2945               	
  7592                           l708:	
  7593  1145                     	line	19
  7594                           	
  7595                           l3960:	
  7596  1145                     	goto	l709
  7597  1145  2946               	
  7598                           l3962:	
  7599  1146                     	line	20
  7600                           	
  7601                           l709:	
  7602  1146                     	return
  7603  1146  0008               	opt stack 0
  7604                           GLOBAL	__end_of___flneg
  7605                           	__end_of___flneg:
  7606  1147                     	signat	___flneg,4220
  7607                           	global	___flmul
  7608                           
  7609 ;; *************** function ___flmul *****************
  7610 ;; Defined at:
  7611 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  7612 ;; Parameters:    Size  Location     Type
  7613 ;;  b               4   42[BANK0 ] long 
  7614 ;;  a               4   46[BANK0 ] long 
  7615 ;; Auto vars:     Size  Location     Type
  7616 ;;  prod            4   62[BANK0 ] struct .
  7617 ;;  grs             4   57[BANK0 ] unsigned long 
  7618 ;;  temp            2   66[BANK0 ] struct .
  7619 ;;  bexp            1   61[BANK0 ] unsigned char 
  7620 ;;  aexp            1   56[BANK0 ] unsigned char 
  7621 ;;  sign            1   55[BANK0 ] unsigned char 
  7622 ;; Return value:  Size  Location     Type
  7623 ;;                  4   42[BANK0 ] unsigned char 
  7624 ;; Registers used:
  7625 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7626 ;; Tracked objects:
  7627 ;;		On entry : 0/0
  7628 ;;		On exit  : 0/0
  7629 ;;		Unchanged: 0/0
  7630 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7631 ;;      Params:         0       8       0       0       0
  7632 ;;      Locals:         0      13       0       0       0
  7633 ;;      Temps:          0       5       0       0       0
  7634 ;;      Totals:         0      26       0       0       0
  7635 ;;Total ram usage:       26 bytes
  7636 ;; Hardware stack levels used:    1
  7637 ;; Hardware stack levels required when called:    3
  7638 ;; This function calls:
  7639 ;;		__Umul8_16
  7640 ;; This function is called by:
  7641 ;;		_main
  7642 ;; This function uses a non-reentrant model
  7643 ;;
  7644                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  7645                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  7646                           	line	8
  7647                           global __ptext19
  7648                           __ptext19:	;psect for function ___flmul
  7649  0C8B                     psect	text19
  7650                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  7651                           	line	8
  7652                           	global	__size_of___flmul
  7653                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  7654  0375                     	
  7655                           ___flmul:	
  7656  0C8B                     ;incstack = 0
  7657                           	opt	stack 4
  7658                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7659                           	line	17
  7660                           	
  7661                           l4142:	
  7662  0C8B                     	bcf	status, 5	;RP0=0, select bank0
  7663  0C8B  1283               	bcf	status, 6	;RP1=0, select bank0
  7664  0C8C  1303               	movf	0+(___flmul@b)+03h,w
  7665  0C8D  084D               	andlw	080h
  7666  0C8E  3980               	movwf	(??___flmul+0)+0
  7667  0C8F  00D2               	movf	(??___flmul+0)+0,w
  7668  0C90  0852               	movwf	(___flmul@sign)
  7669  0C91  00D7               	line	18
  7670                           	
  7671                           l4144:	
  7672  0C92                     	movf	0+(___flmul@b)+03h,w
  7673  0C92  084D               	movwf	(??___flmul+0)+0
  7674  0C93  00D2               	addwf	(??___flmul+0)+0,w
  7675  0C94  0752               	movwf	(??___flmul+1)+0
  7676  0C95  00D3               	movf	(??___flmul+1)+0,w
  7677  0C96  0853               	movwf	(___flmul@bexp)
  7678  0C97  00DD               	line	19
  7679                           	
  7680                           l4146:	
  7681  0C98                     	btfss	0+(___flmul@b)+02h,(7)&7
  7682  0C98  1FCC               	goto	u6111
  7683  0C99  2C9B               	goto	u6110
  7684  0C9A  2C9C               u6111:
  7685  0C9B                     	goto	l4150
  7686  0C9B  2C9E               u6110:
  7687  0C9C                     	line	20
  7688                           	
  7689                           l4148:	
  7690  0C9C                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  7691  0C9C  145D               	goto	l4150
  7692  0C9D  2C9E               	line	21
  7693                           	
  7694                           l905:	
  7695  0C9E                     	line	24
  7696                           	
  7697                           l4150:	
  7698  0C9E                     	movf	((___flmul@bexp)),w
  7699  0C9E  085D               	btfsc	status,2
  7700  0C9F  1903               	goto	u6121
  7701  0CA0  2CA2               	goto	u6120
  7702  0CA1  2CA3               u6121:
  7703  0CA2                     	goto	l4158
  7704  0CA2  2CB3               u6120:
  7705  0CA3                     	line	26
  7706                           	
  7707                           l4152:	
  7708  0CA3                     		incf	((___flmul@bexp)),w
  7709  0CA3  0A5D               	btfss	status,2
  7710  0CA4  1D03               	goto	u6131
  7711  0CA5  2CA7               	goto	u6130
  7712  0CA6  2CA8               u6131:
  7713  0CA7                     	goto	l4156
  7714  0CA7  2CB1               u6130:
  7715  0CA8                     	line	28
  7716                           	
  7717                           l4154:	
  7718  0CA8                     	movlw	0x0
  7719  0CA8  3000               	movwf	(___flmul@b+3)
  7720  0CA9  00CD               	movlw	0x0
  7721  0CAA  3000               	movwf	(___flmul@b+2)
  7722  0CAB  00CC               	movlw	0x0
  7723  0CAC  3000               	movwf	(___flmul@b+1)
  7724  0CAD  00CB               	movlw	0x0
  7725  0CAE  3000               	movwf	(___flmul@b)
  7726  0CAF  00CA               
  7727                           	goto	l4156
  7728  0CB0  2CB1               	line	29
  7729                           	
  7730                           l907:	
  7731  0CB1                     	line	31
  7732                           	
  7733                           l4156:	
  7734  0CB1                     	bsf	(___flmul@b)+(23/8),(23)&7
  7735  0CB1  17CC               	line	33
  7736                           	goto	l4160
  7737  0CB2  2CBC               	line	34
  7738                           	
  7739                           l906:	
  7740  0CB3                     	line	36
  7741                           	
  7742                           l4158:	
  7743  0CB3                     	movlw	0x0
  7744  0CB3  3000               	movwf	(___flmul@b+3)
  7745  0CB4  00CD               	movlw	0x0
  7746  0CB5  3000               	movwf	(___flmul@b+2)
  7747  0CB6  00CC               	movlw	0x0
  7748  0CB7  3000               	movwf	(___flmul@b+1)
  7749  0CB8  00CB               	movlw	0x0
  7750  0CB9  3000               	movwf	(___flmul@b)
  7751  0CBA  00CA               
  7752                           	goto	l4160
  7753  0CBB  2CBC               	line	37
  7754                           	
  7755                           l908:	
  7756  0CBC                     	line	39
  7757                           	
  7758                           l4160:	
  7759  0CBC                     	movf	0+(___flmul@a)+03h,w
  7760  0CBC  0851               	andlw	080h
  7761  0CBD  3980               	movwf	(??___flmul+0)+0
  7762  0CBE  00D2               	movf	(??___flmul+0)+0,w
  7763  0CBF  0852               	xorwf	(___flmul@sign),f
  7764  0CC0  06D7               	line	40
  7765                           	
  7766                           l4162:	
  7767  0CC1                     	movf	0+(___flmul@a)+03h,w
  7768  0CC1  0851               	movwf	(??___flmul+0)+0
  7769  0CC2  00D2               	addwf	(??___flmul+0)+0,w
  7770  0CC3  0752               	movwf	(??___flmul+1)+0
  7771  0CC4  00D3               	movf	(??___flmul+1)+0,w
  7772  0CC5  0853               	movwf	(___flmul@aexp)
  7773  0CC6  00D8               	line	41
  7774                           	
  7775                           l4164:	
  7776  0CC7                     	btfss	0+(___flmul@a)+02h,(7)&7
  7777  0CC7  1FD0               	goto	u6141
  7778  0CC8  2CCA               	goto	u6140
  7779  0CC9  2CCB               u6141:
  7780  0CCA                     	goto	l4168
  7781  0CCA  2CCD               u6140:
  7782  0CCB                     	line	42
  7783                           	
  7784                           l4166:	
  7785  0CCB                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  7786  0CCB  1458               	goto	l4168
  7787  0CCC  2CCD               	line	43
  7788                           	
  7789                           l909:	
  7790  0CCD                     	line	45
  7791                           	
  7792                           l4168:	
  7793  0CCD                     	movf	((___flmul@aexp)),w
  7794  0CCD  0858               	btfsc	status,2
  7795  0CCE  1903               	goto	u6151
  7796  0CCF  2CD1               	goto	u6150
  7797  0CD0  2CD2               u6151:
  7798  0CD1                     	goto	l4176
  7799  0CD1  2CE2               u6150:
  7800  0CD2                     	line	48
  7801                           	
  7802                           l4170:	
  7803  0CD2                     		incf	((___flmul@aexp)),w
  7804  0CD2  0A58               	btfss	status,2
  7805  0CD3  1D03               	goto	u6161
  7806  0CD4  2CD6               	goto	u6160
  7807  0CD5  2CD7               u6161:
  7808  0CD6                     	goto	l4174
  7809  0CD6  2CE0               u6160:
  7810  0CD7                     	line	50
  7811                           	
  7812                           l4172:	
  7813  0CD7                     	movlw	0x0
  7814  0CD7  3000               	movwf	(___flmul@a+3)
  7815  0CD8  00D1               	movlw	0x0
  7816  0CD9  3000               	movwf	(___flmul@a+2)
  7817  0CDA  00D0               	movlw	0x0
  7818  0CDB  3000               	movwf	(___flmul@a+1)
  7819  0CDC  00CF               	movlw	0x0
  7820  0CDD  3000               	movwf	(___flmul@a)
  7821  0CDE  00CE               
  7822                           	goto	l4174
  7823  0CDF  2CE0               	line	51
  7824                           	
  7825                           l911:	
  7826  0CE0                     	line	53
  7827                           	
  7828                           l4174:	
  7829  0CE0                     	bsf	(___flmul@a)+(23/8),(23)&7
  7830  0CE0  17D0               	line	54
  7831                           	goto	l4178
  7832  0CE1  2CEB               	line	55
  7833                           	
  7834                           l910:	
  7835  0CE2                     	line	57
  7836                           	
  7837                           l4176:	
  7838  0CE2                     	movlw	0x0
  7839  0CE2  3000               	movwf	(___flmul@a+3)
  7840  0CE3  00D1               	movlw	0x0
  7841  0CE4  3000               	movwf	(___flmul@a+2)
  7842  0CE5  00D0               	movlw	0x0
  7843  0CE6  3000               	movwf	(___flmul@a+1)
  7844  0CE7  00CF               	movlw	0x0
  7845  0CE8  3000               	movwf	(___flmul@a)
  7846  0CE9  00CE               
  7847                           	goto	l4178
  7848  0CEA  2CEB               	line	58
  7849                           	
  7850                           l912:	
  7851  0CEB                     	line	65
  7852                           	
  7853                           l4178:	
  7854  0CEB                     	movf	((___flmul@aexp)),w
  7855  0CEB  0858               	btfsc	status,2
  7856  0CEC  1903               	goto	u6171
  7857  0CED  2CEF               	goto	u6170
  7858  0CEE  2CF0               u6171:
  7859  0CEF                     	goto	l4182
  7860  0CEF  2CF6               u6170:
  7861  0CF0                     	
  7862                           l4180:	
  7863  0CF0                     	movf	((___flmul@bexp)),w
  7864  0CF0  085D               	btfss	status,2
  7865  0CF1  1D03               	goto	u6181
  7866  0CF2  2CF4               	goto	u6180
  7867  0CF3  2CF5               u6181:
  7868  0CF4                     	goto	l4186
  7869  0CF4  2D00               u6180:
  7870  0CF5                     	goto	l4182
  7871  0CF5  2CF6               	
  7872                           l915:	
  7873  0CF6                     	line	66
  7874                           	
  7875                           l4182:	
  7876  0CF6                     	movlw	0x0
  7877  0CF6  3000               	movwf	(?___flmul+3)
  7878  0CF7  00CD               	movlw	0x0
  7879  0CF8  3000               	movwf	(?___flmul+2)
  7880  0CF9  00CC               	movlw	0x0
  7881  0CFA  3000               	movwf	(?___flmul+1)
  7882  0CFB  00CB               	movlw	0x0
  7883  0CFC  3000               	movwf	(?___flmul)
  7884  0CFD  00CA               
  7885                           	goto	l916
  7886  0CFE  2FFF               	
  7887                           l4184:	
  7888  0CFF                     	goto	l916
  7889  0CFF  2FFF               	line	67
  7890                           	
  7891                           l913:	
  7892  0D00                     	line	119
  7893                           	
  7894                           l4186:	
  7895  0D00                     	movf	(___flmul@b),w
  7896  0D00  084A               	movwf	(??___flmul+0)+0
  7897  0D01  00D2               	movf	(??___flmul+0)+0,w
  7898  0D02  0852               	movwf	(__Umul8_16@multiplicand)
  7899  0D03  00A0               	movf	0+(___flmul@a)+02h,w
  7900  0D04  0850               	fcall	__Umul8_16
  7901  0D05  160A  118A  21D8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  7902  0D0A  1283               	bcf	status, 6	;RP1=0, select bank0
  7903  0D0B  1303               	movf	(1+(?__Umul8_16)),w
  7904  0D0C  0821               	movwf	(___flmul@temp+1)
  7905  0D0D  00E3               	movf	(0+(?__Umul8_16)),w
  7906  0D0E  0820               	movwf	(___flmul@temp)
  7907  0D0F  00E2               	line	120
  7908                           	
  7909                           l4188:	
  7910  0D10                     	movf	(___flmul@temp),w
  7911  0D10  0862               	movwf	(??___flmul+0)+0
  7912  0D11  00D2               	clrf	(??___flmul+0)+0+1
  7913  0D12  01D3               	clrf	(??___flmul+0)+0+2
  7914  0D13  01D4               	clrf	(??___flmul+0)+0+3
  7915  0D14  01D5               	movf	3+(??___flmul+0)+0,w
  7916  0D15  0855               	movwf	(___flmul@grs+3)
  7917  0D16  00DC               	movf	2+(??___flmul+0)+0,w
  7918  0D17  0854               	movwf	(___flmul@grs+2)
  7919  0D18  00DB               	movf	1+(??___flmul+0)+0,w
  7920  0D19  0853               	movwf	(___flmul@grs+1)
  7921  0D1A  00DA               	movf	0+(??___flmul+0)+0,w
  7922  0D1B  0852               	movwf	(___flmul@grs)
  7923  0D1C  00D9               
  7924                           	line	121
  7925                           	
  7926                           l4190:	
  7927  0D1D                     	movf	0+(___flmul@temp)+01h,w
  7928  0D1D  0863               	movwf	(??___flmul+0)+0
  7929  0D1E  00D2               	clrf	(??___flmul+0)+0+1
  7930  0D1F  01D3               	clrf	(??___flmul+0)+0+2
  7931  0D20  01D4               	clrf	(??___flmul+0)+0+3
  7932  0D21  01D5               	movf	3+(??___flmul+0)+0,w
  7933  0D22  0855               	movwf	(___flmul@prod+3)
  7934  0D23  00E1               	movf	2+(??___flmul+0)+0,w
  7935  0D24  0854               	movwf	(___flmul@prod+2)
  7936  0D25  00E0               	movf	1+(??___flmul+0)+0,w
  7937  0D26  0853               	movwf	(___flmul@prod+1)
  7938  0D27  00DF               	movf	0+(??___flmul+0)+0,w
  7939  0D28  0852               	movwf	(___flmul@prod)
  7940  0D29  00DE               
  7941                           	line	122
  7942                           	movf	0+(___flmul@b)+01h,w
  7943  0D2A  084B               	movwf	(??___flmul+0)+0
  7944  0D2B  00D2               	movf	(??___flmul+0)+0,w
  7945  0D2C  0852               	movwf	(__Umul8_16@multiplicand)
  7946  0D2D  00A0               	movf	0+(___flmul@a)+01h,w
  7947  0D2E  084F               	fcall	__Umul8_16
  7948  0D2F  160A  118A  21D8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  7949  0D34  1283               	bcf	status, 6	;RP1=0, select bank0
  7950  0D35  1303               	movf	(1+(?__Umul8_16)),w
  7951  0D36  0821               	movwf	(___flmul@temp+1)
  7952  0D37  00E3               	movf	(0+(?__Umul8_16)),w
  7953  0D38  0820               	movwf	(___flmul@temp)
  7954  0D39  00E2               	line	123
  7955                           	
  7956                           l4192:	
  7957  0D3A                     	movf	(___flmul@temp),w
  7958  0D3A  0862               	movwf	(??___flmul+0)+0
  7959  0D3B  00D2               	clrf	(??___flmul+0)+0+1
  7960  0D3C  01D3               	clrf	(??___flmul+0)+0+2
  7961  0D3D  01D4               	clrf	(??___flmul+0)+0+3
  7962  0D3E  01D5               	movf	0+(??___flmul+0)+0,w
  7963  0D3F  0852               	addwf	(___flmul@grs),f
  7964  0D40  07D9               	movf	1+(??___flmul+0)+0,w
  7965  0D41  0853               	clrz
  7966  0D42  1103               	skipnc
  7967  0D43  1803               	addlw	1
  7968  0D44  3E01               	skipnz
  7969  0D45  1903               	goto	u6191
  7970  0D46  2D48               	addwf	(___flmul@grs+1),f
  7971  0D47  07DA               u6191:
  7972  0D48                     	movf	2+(??___flmul+0)+0,w
  7973  0D48  0854               	clrz
  7974  0D49  1103               	skipnc
  7975  0D4A  1803               	addlw	1
  7976  0D4B  3E01               	skipnz
  7977  0D4C  1903               	goto	u6192
  7978  0D4D  2D4F               	addwf	(___flmul@grs+2),f
  7979  0D4E  07DB               u6192:
  7980  0D4F                     	movf	3+(??___flmul+0)+0,w
  7981  0D4F  0855               	clrz
  7982  0D50  1103               	skipnc
  7983  0D51  1803               	addlw	1
  7984  0D52  3E01               	skipnz
  7985  0D53  1903               	goto	u6193
  7986  0D54  2D56               	addwf	(___flmul@grs+3),f
  7987  0D55  07DC               u6193:
  7988  0D56                     
  7989                           	line	124
  7990                           	
  7991                           l4194:	
  7992  0D56                     	movf	0+(___flmul@temp)+01h,w
  7993  0D56  0863               	movwf	(??___flmul+0)+0
  7994  0D57  00D2               	clrf	(??___flmul+0)+0+1
  7995  0D58  01D3               	clrf	(??___flmul+0)+0+2
  7996  0D59  01D4               	clrf	(??___flmul+0)+0+3
  7997  0D5A  01D5               	movf	0+(??___flmul+0)+0,w
  7998  0D5B  0852               	addwf	(___flmul@prod),f
  7999  0D5C  07DE               	movf	1+(??___flmul+0)+0,w
  8000  0D5D  0853               	clrz
  8001  0D5E  1103               	skipnc
  8002  0D5F  1803               	addlw	1
  8003  0D60  3E01               	skipnz
  8004  0D61  1903               	goto	u6201
  8005  0D62  2D64               	addwf	(___flmul@prod+1),f
  8006  0D63  07DF               u6201:
  8007  0D64                     	movf	2+(??___flmul+0)+0,w
  8008  0D64  0854               	clrz
  8009  0D65  1103               	skipnc
  8010  0D66  1803               	addlw	1
  8011  0D67  3E01               	skipnz
  8012  0D68  1903               	goto	u6202
  8013  0D69  2D6B               	addwf	(___flmul@prod+2),f
  8014  0D6A  07E0               u6202:
  8015  0D6B                     	movf	3+(??___flmul+0)+0,w
  8016  0D6B  0855               	clrz
  8017  0D6C  1103               	skipnc
  8018  0D6D  1803               	addlw	1
  8019  0D6E  3E01               	skipnz
  8020  0D6F  1903               	goto	u6203
  8021  0D70  2D72               	addwf	(___flmul@prod+3),f
  8022  0D71  07E1               u6203:
  8023  0D72                     
  8024                           	line	125
  8025                           	movf	0+(___flmul@b)+02h,w
  8026  0D72  084C               	movwf	(??___flmul+0)+0
  8027  0D73  00D2               	movf	(??___flmul+0)+0,w
  8028  0D74  0852               	movwf	(__Umul8_16@multiplicand)
  8029  0D75  00A0               	movf	(___flmul@a),w
  8030  0D76  084E               	fcall	__Umul8_16
  8031  0D77  160A  118A  21D8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  8032  0D7C  1283               	bcf	status, 6	;RP1=0, select bank0
  8033  0D7D  1303               	movf	(1+(?__Umul8_16)),w
  8034  0D7E  0821               	movwf	(___flmul@temp+1)
  8035  0D7F  00E3               	movf	(0+(?__Umul8_16)),w
  8036  0D80  0820               	movwf	(___flmul@temp)
  8037  0D81  00E2               	line	126
  8038                           	
  8039                           l4196:	
  8040  0D82                     	movf	(___flmul@temp),w
  8041  0D82  0862               	movwf	(??___flmul+0)+0
  8042  0D83  00D2               	clrf	(??___flmul+0)+0+1
  8043  0D84  01D3               	clrf	(??___flmul+0)+0+2
  8044  0D85  01D4               	clrf	(??___flmul+0)+0+3
  8045  0D86  01D5               	movf	0+(??___flmul+0)+0,w
  8046  0D87  0852               	addwf	(___flmul@grs),f
  8047  0D88  07D9               	movf	1+(??___flmul+0)+0,w
  8048  0D89  0853               	clrz
  8049  0D8A  1103               	skipnc
  8050  0D8B  1803               	addlw	1
  8051  0D8C  3E01               	skipnz
  8052  0D8D  1903               	goto	u6211
  8053  0D8E  2D90               	addwf	(___flmul@grs+1),f
  8054  0D8F  07DA               u6211:
  8055  0D90                     	movf	2+(??___flmul+0)+0,w
  8056  0D90  0854               	clrz
  8057  0D91  1103               	skipnc
  8058  0D92  1803               	addlw	1
  8059  0D93  3E01               	skipnz
  8060  0D94  1903               	goto	u6212
  8061  0D95  2D97               	addwf	(___flmul@grs+2),f
  8062  0D96  07DB               u6212:
  8063  0D97                     	movf	3+(??___flmul+0)+0,w
  8064  0D97  0855               	clrz
  8065  0D98  1103               	skipnc
  8066  0D99  1803               	addlw	1
  8067  0D9A  3E01               	skipnz
  8068  0D9B  1903               	goto	u6213
  8069  0D9C  2D9E               	addwf	(___flmul@grs+3),f
  8070  0D9D  07DC               u6213:
  8071  0D9E                     
  8072                           	line	127
  8073                           	
  8074                           l4198:	
  8075  0D9E                     	movf	0+(___flmul@temp)+01h,w
  8076  0D9E  0863               	movwf	(??___flmul+0)+0
  8077  0D9F  00D2               	clrf	(??___flmul+0)+0+1
  8078  0DA0  01D3               	clrf	(??___flmul+0)+0+2
  8079  0DA1  01D4               	clrf	(??___flmul+0)+0+3
  8080  0DA2  01D5               	movf	0+(??___flmul+0)+0,w
  8081  0DA3  0852               	addwf	(___flmul@prod),f
  8082  0DA4  07DE               	movf	1+(??___flmul+0)+0,w
  8083  0DA5  0853               	clrz
  8084  0DA6  1103               	skipnc
  8085  0DA7  1803               	addlw	1
  8086  0DA8  3E01               	skipnz
  8087  0DA9  1903               	goto	u6221
  8088  0DAA  2DAC               	addwf	(___flmul@prod+1),f
  8089  0DAB  07DF               u6221:
  8090  0DAC                     	movf	2+(??___flmul+0)+0,w
  8091  0DAC  0854               	clrz
  8092  0DAD  1103               	skipnc
  8093  0DAE  1803               	addlw	1
  8094  0DAF  3E01               	skipnz
  8095  0DB0  1903               	goto	u6222
  8096  0DB1  2DB3               	addwf	(___flmul@prod+2),f
  8097  0DB2  07E0               u6222:
  8098  0DB3                     	movf	3+(??___flmul+0)+0,w
  8099  0DB3  0855               	clrz
  8100  0DB4  1103               	skipnc
  8101  0DB5  1803               	addlw	1
  8102  0DB6  3E01               	skipnz
  8103  0DB7  1903               	goto	u6223
  8104  0DB8  2DBA               	addwf	(___flmul@prod+3),f
  8105  0DB9  07E1               u6223:
  8106  0DBA                     
  8107                           	line	128
  8108                           	
  8109                           l4200:	
  8110  0DBA                     	movlw	08h
  8111  0DBA  3008               	movwf	(??___flmul+0)+0
  8112  0DBB  00D2               u6235:
  8113  0DBC                     	clrc
  8114  0DBC  1003               	rlf	(___flmul@grs),f
  8115  0DBD  0DD9               	rlf	(___flmul@grs+1),f
  8116  0DBE  0DDA               	rlf	(___flmul@grs+2),f
  8117  0DBF  0DDB               	rlf	(___flmul@grs+3),f
  8118  0DC0  0DDC               	decfsz	(??___flmul+0)+0
  8119  0DC1  0BD2               	goto	u6235
  8120  0DC2  2DBC               	line	129
  8121                           	
  8122                           l4202:	
  8123  0DC3                     	movf	0+(___flmul@b)+01h,w
  8124  0DC3  084B               	movwf	(??___flmul+0)+0
  8125  0DC4  00D2               	movf	(??___flmul+0)+0,w
  8126  0DC5  0852               	movwf	(__Umul8_16@multiplicand)
  8127  0DC6  00A0               	movf	(___flmul@a),w
  8128  0DC7  084E               	fcall	__Umul8_16
  8129  0DC8  160A  118A  21D8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  8130  0DCD  1283               	bcf	status, 6	;RP1=0, select bank0
  8131  0DCE  1303               	movf	(1+(?__Umul8_16)),w
  8132  0DCF  0821               	movwf	(___flmul@temp+1)
  8133  0DD0  00E3               	movf	(0+(?__Umul8_16)),w
  8134  0DD1  0820               	movwf	(___flmul@temp)
  8135  0DD2  00E2               	line	130
  8136                           	
  8137                           l4204:	
  8138  0DD3                     	movf	(___flmul@temp),w
  8139  0DD3  0862               	movwf	((??___flmul+0)+0)
  8140  0DD4  00D2               	movf	(___flmul@temp+1),w
  8141  0DD5  0863               	movwf	((??___flmul+0)+0+1)
  8142  0DD6  00D3               	clrf	((??___flmul+0)+0+2)
  8143  0DD7  01D4               	clrf	((??___flmul+0)+0+3)
  8144  0DD8  01D5               	movf	0+(??___flmul+0)+0,w
  8145  0DD9  0852               	addwf	(___flmul@grs),f
  8146  0DDA  07D9               	movf	1+(??___flmul+0)+0,w
  8147  0DDB  0853               	clrz
  8148  0DDC  1103               	skipnc
  8149  0DDD  1803               	addlw	1
  8150  0DDE  3E01               	skipnz
  8151  0DDF  1903               	goto	u6241
  8152  0DE0  2DE2               	addwf	(___flmul@grs+1),f
  8153  0DE1  07DA               u6241:
  8154  0DE2                     	movf	2+(??___flmul+0)+0,w
  8155  0DE2  0854               	clrz
  8156  0DE3  1103               	skipnc
  8157  0DE4  1803               	addlw	1
  8158  0DE5  3E01               	skipnz
  8159  0DE6  1903               	goto	u6242
  8160  0DE7  2DE9               	addwf	(___flmul@grs+2),f
  8161  0DE8  07DB               u6242:
  8162  0DE9                     	movf	3+(??___flmul+0)+0,w
  8163  0DE9  0855               	clrz
  8164  0DEA  1103               	skipnc
  8165  0DEB  1803               	addlw	1
  8166  0DEC  3E01               	skipnz
  8167  0DED  1903               	goto	u6243
  8168  0DEE  2DF0               	addwf	(___flmul@grs+3),f
  8169  0DEF  07DC               u6243:
  8170  0DF0                     
  8171                           	line	131
  8172                           	
  8173                           l4206:	
  8174  0DF0                     	movf	(___flmul@b),w
  8175  0DF0  084A               	movwf	(??___flmul+0)+0
  8176  0DF1  00D2               	movf	(??___flmul+0)+0,w
  8177  0DF2  0852               	movwf	(__Umul8_16@multiplicand)
  8178  0DF3  00A0               	movf	0+(___flmul@a)+01h,w
  8179  0DF4  084F               	fcall	__Umul8_16
  8180  0DF5  160A  118A  21D8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  8181  0DFA  1283               	bcf	status, 6	;RP1=0, select bank0
  8182  0DFB  1303               	movf	(1+(?__Umul8_16)),w
  8183  0DFC  0821               	movwf	(___flmul@temp+1)
  8184  0DFD  00E3               	movf	(0+(?__Umul8_16)),w
  8185  0DFE  0820               	movwf	(___flmul@temp)
  8186  0DFF  00E2               	line	132
  8187                           	
  8188                           l4208:	
  8189  0E00                     	movf	(___flmul@temp),w
  8190  0E00  0862               	movwf	((??___flmul+0)+0)
  8191  0E01  00D2               	movf	(___flmul@temp+1),w
  8192  0E02  0863               	movwf	((??___flmul+0)+0+1)
  8193  0E03  00D3               	clrf	((??___flmul+0)+0+2)
  8194  0E04  01D4               	clrf	((??___flmul+0)+0+3)
  8195  0E05  01D5               	movf	0+(??___flmul+0)+0,w
  8196  0E06  0852               	addwf	(___flmul@grs),f
  8197  0E07  07D9               	movf	1+(??___flmul+0)+0,w
  8198  0E08  0853               	clrz
  8199  0E09  1103               	skipnc
  8200  0E0A  1803               	addlw	1
  8201  0E0B  3E01               	skipnz
  8202  0E0C  1903               	goto	u6251
  8203  0E0D  2E0F               	addwf	(___flmul@grs+1),f
  8204  0E0E  07DA               u6251:
  8205  0E0F                     	movf	2+(??___flmul+0)+0,w
  8206  0E0F  0854               	clrz
  8207  0E10  1103               	skipnc
  8208  0E11  1803               	addlw	1
  8209  0E12  3E01               	skipnz
  8210  0E13  1903               	goto	u6252
  8211  0E14  2E16               	addwf	(___flmul@grs+2),f
  8212  0E15  07DB               u6252:
  8213  0E16                     	movf	3+(??___flmul+0)+0,w
  8214  0E16  0855               	clrz
  8215  0E17  1103               	skipnc
  8216  0E18  1803               	addlw	1
  8217  0E19  3E01               	skipnz
  8218  0E1A  1903               	goto	u6253
  8219  0E1B  2E1D               	addwf	(___flmul@grs+3),f
  8220  0E1C  07DC               u6253:
  8221  0E1D                     
  8222                           	line	133
  8223                           	
  8224                           l4210:	
  8225  0E1D                     	movlw	08h
  8226  0E1D  3008               	movwf	(??___flmul+0)+0
  8227  0E1E  00D2               u6265:
  8228  0E1F                     	clrc
  8229  0E1F  1003               	rlf	(___flmul@grs),f
  8230  0E20  0DD9               	rlf	(___flmul@grs+1),f
  8231  0E21  0DDA               	rlf	(___flmul@grs+2),f
  8232  0E22  0DDB               	rlf	(___flmul@grs+3),f
  8233  0E23  0DDC               	decfsz	(??___flmul+0)+0
  8234  0E24  0BD2               	goto	u6265
  8235  0E25  2E1F               	line	134
  8236                           	movf	(___flmul@b),w
  8237  0E26  084A               	movwf	(??___flmul+0)+0
  8238  0E27  00D2               	movf	(??___flmul+0)+0,w
  8239  0E28  0852               	movwf	(__Umul8_16@multiplicand)
  8240  0E29  00A0               	movf	(___flmul@a),w
  8241  0E2A  084E               	fcall	__Umul8_16
  8242  0E2B  160A  118A  21D8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  8243  0E30  1283               	bcf	status, 6	;RP1=0, select bank0
  8244  0E31  1303               	movf	(1+(?__Umul8_16)),w
  8245  0E32  0821               	movwf	(___flmul@temp+1)
  8246  0E33  00E3               	movf	(0+(?__Umul8_16)),w
  8247  0E34  0820               	movwf	(___flmul@temp)
  8248  0E35  00E2               	line	135
  8249                           	
  8250                           l4212:	
  8251  0E36                     	movf	(___flmul@temp),w
  8252  0E36  0862               	movwf	((??___flmul+0)+0)
  8253  0E37  00D2               	movf	(___flmul@temp+1),w
  8254  0E38  0863               	movwf	((??___flmul+0)+0+1)
  8255  0E39  00D3               	clrf	((??___flmul+0)+0+2)
  8256  0E3A  01D4               	clrf	((??___flmul+0)+0+3)
  8257  0E3B  01D5               	movf	0+(??___flmul+0)+0,w
  8258  0E3C  0852               	addwf	(___flmul@grs),f
  8259  0E3D  07D9               	movf	1+(??___flmul+0)+0,w
  8260  0E3E  0853               	clrz
  8261  0E3F  1103               	skipnc
  8262  0E40  1803               	addlw	1
  8263  0E41  3E01               	skipnz
  8264  0E42  1903               	goto	u6271
  8265  0E43  2E45               	addwf	(___flmul@grs+1),f
  8266  0E44  07DA               u6271:
  8267  0E45                     	movf	2+(??___flmul+0)+0,w
  8268  0E45  0854               	clrz
  8269  0E46  1103               	skipnc
  8270  0E47  1803               	addlw	1
  8271  0E48  3E01               	skipnz
  8272  0E49  1903               	goto	u6272
  8273  0E4A  2E4C               	addwf	(___flmul@grs+2),f
  8274  0E4B  07DB               u6272:
  8275  0E4C                     	movf	3+(??___flmul+0)+0,w
  8276  0E4C  0855               	clrz
  8277  0E4D  1103               	skipnc
  8278  0E4E  1803               	addlw	1
  8279  0E4F  3E01               	skipnz
  8280  0E50  1903               	goto	u6273
  8281  0E51  2E53               	addwf	(___flmul@grs+3),f
  8282  0E52  07DC               u6273:
  8283  0E53                     
  8284                           	line	136
  8285                           	
  8286                           l4214:	
  8287  0E53                     	movf	0+(___flmul@b)+01h,w
  8288  0E53  084B               	movwf	(??___flmul+0)+0
  8289  0E54  00D2               	movf	(??___flmul+0)+0,w
  8290  0E55  0852               	movwf	(__Umul8_16@multiplicand)
  8291  0E56  00A0               	movf	0+(___flmul@a)+02h,w
  8292  0E57  0850               	fcall	__Umul8_16
  8293  0E58  160A  118A  21D8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  8294  0E5D  1283               	bcf	status, 6	;RP1=0, select bank0
  8295  0E5E  1303               	movf	(1+(?__Umul8_16)),w
  8296  0E5F  0821               	movwf	(___flmul@temp+1)
  8297  0E60  00E3               	movf	(0+(?__Umul8_16)),w
  8298  0E61  0820               	movwf	(___flmul@temp)
  8299  0E62  00E2               	line	137
  8300                           	movf	(___flmul@temp),w
  8301  0E63  0862               	movwf	((??___flmul+0)+0)
  8302  0E64  00D2               	movf	(___flmul@temp+1),w
  8303  0E65  0863               	movwf	((??___flmul+0)+0+1)
  8304  0E66  00D3               	clrf	((??___flmul+0)+0+2)
  8305  0E67  01D4               	clrf	((??___flmul+0)+0+3)
  8306  0E68  01D5               	movf	0+(??___flmul+0)+0,w
  8307  0E69  0852               	addwf	(___flmul@prod),f
  8308  0E6A  07DE               	movf	1+(??___flmul+0)+0,w
  8309  0E6B  0853               	clrz
  8310  0E6C  1103               	skipnc
  8311  0E6D  1803               	addlw	1
  8312  0E6E  3E01               	skipnz
  8313  0E6F  1903               	goto	u6281
  8314  0E70  2E72               	addwf	(___flmul@prod+1),f
  8315  0E71  07DF               u6281:
  8316  0E72                     	movf	2+(??___flmul+0)+0,w
  8317  0E72  0854               	clrz
  8318  0E73  1103               	skipnc
  8319  0E74  1803               	addlw	1
  8320  0E75  3E01               	skipnz
  8321  0E76  1903               	goto	u6282
  8322  0E77  2E79               	addwf	(___flmul@prod+2),f
  8323  0E78  07E0               u6282:
  8324  0E79                     	movf	3+(??___flmul+0)+0,w
  8325  0E79  0855               	clrz
  8326  0E7A  1103               	skipnc
  8327  0E7B  1803               	addlw	1
  8328  0E7C  3E01               	skipnz
  8329  0E7D  1903               	goto	u6283
  8330  0E7E  2E80               	addwf	(___flmul@prod+3),f
  8331  0E7F  07E1               u6283:
  8332  0E80                     
  8333                           	line	138
  8334                           	
  8335                           l4216:	
  8336  0E80                     	movf	0+(___flmul@b)+02h,w
  8337  0E80  084C               	movwf	(??___flmul+0)+0
  8338  0E81  00D2               	movf	(??___flmul+0)+0,w
  8339  0E82  0852               	movwf	(__Umul8_16@multiplicand)
  8340  0E83  00A0               	movf	0+(___flmul@a)+01h,w
  8341  0E84  084F               	fcall	__Umul8_16
  8342  0E85  160A  118A  21D8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  8343  0E8A  1283               	bcf	status, 6	;RP1=0, select bank0
  8344  0E8B  1303               	movf	(1+(?__Umul8_16)),w
  8345  0E8C  0821               	movwf	(___flmul@temp+1)
  8346  0E8D  00E3               	movf	(0+(?__Umul8_16)),w
  8347  0E8E  0820               	movwf	(___flmul@temp)
  8348  0E8F  00E2               	line	139
  8349                           	
  8350                           l4218:	
  8351  0E90                     	movf	(___flmul@temp),w
  8352  0E90  0862               	movwf	((??___flmul+0)+0)
  8353  0E91  00D2               	movf	(___flmul@temp+1),w
  8354  0E92  0863               	movwf	((??___flmul+0)+0+1)
  8355  0E93  00D3               	clrf	((??___flmul+0)+0+2)
  8356  0E94  01D4               	clrf	((??___flmul+0)+0+3)
  8357  0E95  01D5               	movf	0+(??___flmul+0)+0,w
  8358  0E96  0852               	addwf	(___flmul@prod),f
  8359  0E97  07DE               	movf	1+(??___flmul+0)+0,w
  8360  0E98  0853               	clrz
  8361  0E99  1103               	skipnc
  8362  0E9A  1803               	addlw	1
  8363  0E9B  3E01               	skipnz
  8364  0E9C  1903               	goto	u6291
  8365  0E9D  2E9F               	addwf	(___flmul@prod+1),f
  8366  0E9E  07DF               u6291:
  8367  0E9F                     	movf	2+(??___flmul+0)+0,w
  8368  0E9F  0854               	clrz
  8369  0EA0  1103               	skipnc
  8370  0EA1  1803               	addlw	1
  8371  0EA2  3E01               	skipnz
  8372  0EA3  1903               	goto	u6292
  8373  0EA4  2EA6               	addwf	(___flmul@prod+2),f
  8374  0EA5  07E0               u6292:
  8375  0EA6                     	movf	3+(??___flmul+0)+0,w
  8376  0EA6  0855               	clrz
  8377  0EA7  1103               	skipnc
  8378  0EA8  1803               	addlw	1
  8379  0EA9  3E01               	skipnz
  8380  0EAA  1903               	goto	u6293
  8381  0EAB  2EAD               	addwf	(___flmul@prod+3),f
  8382  0EAC  07E1               u6293:
  8383  0EAD                     
  8384                           	line	140
  8385                           	movf	0+(___flmul@b)+02h,w
  8386  0EAD  084C               	movwf	(??___flmul+0)+0
  8387  0EAE  00D2               	movf	(??___flmul+0)+0,w
  8388  0EAF  0852               	movwf	(__Umul8_16@multiplicand)
  8389  0EB0  00A0               	movf	0+(___flmul@a)+02h,w
  8390  0EB1  0850               	fcall	__Umul8_16
  8391  0EB2  160A  118A  21D8  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  8392  0EB7  1283               	bcf	status, 6	;RP1=0, select bank0
  8393  0EB8  1303               	movf	(1+(?__Umul8_16)),w
  8394  0EB9  0821               	movwf	(___flmul@temp+1)
  8395  0EBA  00E3               	movf	(0+(?__Umul8_16)),w
  8396  0EBB  0820               	movwf	(___flmul@temp)
  8397  0EBC  00E2               	line	141
  8398                           	
  8399                           l4220:	
  8400  0EBD                     	movf	(___flmul@temp),w
  8401  0EBD  0862               	movwf	((??___flmul+0)+0)
  8402  0EBE  00D2               	movf	(___flmul@temp+1),w
  8403  0EBF  0863               	movwf	((??___flmul+0)+0+1)
  8404  0EC0  00D3               	clrf	((??___flmul+0)+0+2)
  8405  0EC1  01D4               	clrf	((??___flmul+0)+0+3)
  8406  0EC2  01D5               	movlw	08h
  8407  0EC3  3008               u6305:
  8408  0EC4                     	clrc
  8409  0EC4  1003               	rlf	(??___flmul+0)+0,f
  8410  0EC5  0DD2               	rlf	(??___flmul+0)+1,f
  8411  0EC6  0DD3               	rlf	(??___flmul+0)+2,f
  8412  0EC7  0DD4               	rlf	(??___flmul+0)+3,f
  8413  0EC8  0DD5               u6300:
  8414  0EC9                     	addlw	-1
  8415  0EC9  3EFF               	skipz
  8416  0ECA  1D03               	goto	u6305
  8417  0ECB  2EC4               	movf	0+(??___flmul+0)+0,w
  8418  0ECC  0852               	addwf	(___flmul@prod),f
  8419  0ECD  07DE               	movf	1+(??___flmul+0)+0,w
  8420  0ECE  0853               	clrz
  8421  0ECF  1103               	skipnc
  8422  0ED0  1803               	addlw	1
  8423  0ED1  3E01               	skipnz
  8424  0ED2  1903               	goto	u6311
  8425  0ED3  2ED5               	addwf	(___flmul@prod+1),f
  8426  0ED4  07DF               u6311:
  8427  0ED5                     	movf	2+(??___flmul+0)+0,w
  8428  0ED5  0854               	clrz
  8429  0ED6  1103               	skipnc
  8430  0ED7  1803               	addlw	1
  8431  0ED8  3E01               	skipnz
  8432  0ED9  1903               	goto	u6312
  8433  0EDA  2EDC               	addwf	(___flmul@prod+2),f
  8434  0EDB  07E0               u6312:
  8435  0EDC                     	movf	3+(??___flmul+0)+0,w
  8436  0EDC  0855               	clrz
  8437  0EDD  1103               	skipnc
  8438  0EDE  1803               	addlw	1
  8439  0EDF  3E01               	skipnz
  8440  0EE0  1903               	goto	u6313
  8441  0EE1  2EE3               	addwf	(___flmul@prod+3),f
  8442  0EE2  07E1               u6313:
  8443  0EE3                     
  8444                           	line	145
  8445                           	
  8446                           l4222:	
  8447  0EE3                     	movf	(___flmul@grs),w
  8448  0EE3  0859               	movwf	(??___flmul+0)+0
  8449  0EE4  00D2               	movf	(___flmul@grs+1),w
  8450  0EE5  085A               	movwf	((??___flmul+0)+0+1)
  8451  0EE6  00D3               	movf	(___flmul@grs+2),w
  8452  0EE7  085B               	movwf	((??___flmul+0)+0+2)
  8453  0EE8  00D4               	movf	(___flmul@grs+3),w
  8454  0EE9  085C               	movwf	((??___flmul+0)+0+3)
  8455  0EEA  00D5               	movlw	018h
  8456  0EEB  3018               u6325:
  8457  0EEC                     	clrc
  8458  0EEC  1003               	rrf	(??___flmul+0)+3,f
  8459  0EED  0CD5               	rrf	(??___flmul+0)+2,f
  8460  0EEE  0CD4               	rrf	(??___flmul+0)+1,f
  8461  0EEF  0CD3               	rrf	(??___flmul+0)+0,f
  8462  0EF0  0CD2               u6320:
  8463  0EF1                     	addlw	-1
  8464  0EF1  3EFF               	skipz
  8465  0EF2  1D03               	goto	u6325
  8466  0EF3  2EEC               	movf	0+(??___flmul+0)+0,w
  8467  0EF4  0852               	addwf	(___flmul@prod),f
  8468  0EF5  07DE               	movf	1+(??___flmul+0)+0,w
  8469  0EF6  0853               	clrz
  8470  0EF7  1103               	skipnc
  8471  0EF8  1803               	addlw	1
  8472  0EF9  3E01               	skipnz
  8473  0EFA  1903               	goto	u6331
  8474  0EFB  2EFD               	addwf	(___flmul@prod+1),f
  8475  0EFC  07DF               u6331:
  8476  0EFD                     	movf	2+(??___flmul+0)+0,w
  8477  0EFD  0854               	clrz
  8478  0EFE  1103               	skipnc
  8479  0EFF  1803               	addlw	1
  8480  0F00  3E01               	skipnz
  8481  0F01  1903               	goto	u6332
  8482  0F02  2F04               	addwf	(___flmul@prod+2),f
  8483  0F03  07E0               u6332:
  8484  0F04                     	movf	3+(??___flmul+0)+0,w
  8485  0F04  0855               	clrz
  8486  0F05  1103               	skipnc
  8487  0F06  1803               	addlw	1
  8488  0F07  3E01               	skipnz
  8489  0F08  1903               	goto	u6333
  8490  0F09  2F0B               	addwf	(___flmul@prod+3),f
  8491  0F0A  07E1               u6333:
  8492  0F0B                     
  8493                           	line	146
  8494                           	
  8495                           l4224:	
  8496  0F0B                     	movlw	08h
  8497  0F0B  3008               	movwf	(??___flmul+0)+0
  8498  0F0C  00D2               u6345:
  8499  0F0D                     	clrc
  8500  0F0D  1003               	rlf	(___flmul@grs),f
  8501  0F0E  0DD9               	rlf	(___flmul@grs+1),f
  8502  0F0F  0DDA               	rlf	(___flmul@grs+2),f
  8503  0F10  0DDB               	rlf	(___flmul@grs+3),f
  8504  0F11  0DDC               	decfsz	(??___flmul+0)+0
  8505  0F12  0BD2               	goto	u6345
  8506  0F13  2F0D               	line	149
  8507                           	
  8508                           l4226:	
  8509  0F14                     	movf	(___flmul@bexp),w
  8510  0F14  085D               	addwf	(___flmul@aexp),w
  8511  0F15  0758               	movwf	(??___flmul+0)+0
  8512  0F16  00D2               	clrf	(??___flmul+0)+0+1
  8513  0F17  01D3               	rlf	1+(??___flmul+0)+0,f
  8514  0F18  0DD3               	
  8515                           	movf	0+(??___flmul+0)+0,w
  8516  0F19  0852               	addlw	low(-126)
  8517  0F1A  3E82               	movwf	(___flmul@temp)
  8518  0F1B  00E2               	movf	1+(??___flmul+0)+0,w
  8519  0F1C  0853               	skipnc
  8520  0F1D  1803               	addlw	1
  8521  0F1E  3E01               	addlw	high(-126)
  8522  0F1F  3EFF               	movwf	1+(___flmul@temp)
  8523  0F20  00E3               	line	152
  8524                           	goto	l4238
  8525  0F21  2F41               	
  8526                           l918:	
  8527  0F22                     	line	153
  8528                           	
  8529                           l4228:	
  8530  0F22                     	movlw	01h
  8531  0F22  3001               	movwf	(??___flmul+0)+0
  8532  0F23  00D2               u6355:
  8533  0F24                     	clrc
  8534  0F24  1003               	rlf	(___flmul@prod),f
  8535  0F25  0DDE               	rlf	(___flmul@prod+1),f
  8536  0F26  0DDF               	rlf	(___flmul@prod+2),f
  8537  0F27  0DE0               	rlf	(___flmul@prod+3),f
  8538  0F28  0DE1               	decfsz	(??___flmul+0)+0
  8539  0F29  0BD2               	goto	u6355
  8540  0F2A  2F24               	line	154
  8541                           	
  8542                           l4230:	
  8543  0F2B                     	btfss	(___flmul@grs+3),(31)&7
  8544  0F2B  1FDC               	goto	u6361
  8545  0F2C  2F2E               	goto	u6360
  8546  0F2D  2F2F               u6361:
  8547  0F2E                     	goto	l4234
  8548  0F2E  2F31               u6360:
  8549  0F2F                     	line	155
  8550                           	
  8551                           l4232:	
  8552  0F2F                     	bsf	(___flmul@prod)+(0/8),(0)&7
  8553  0F2F  145E               	goto	l4234
  8554  0F30  2F31               	line	156
  8555                           	
  8556                           l919:	
  8557  0F31                     	line	157
  8558                           	
  8559                           l4234:	
  8560  0F31                     	movlw	01h
  8561  0F31  3001               	movwf	(??___flmul+0)+0
  8562  0F32  00D2               u6375:
  8563  0F33                     	clrc
  8564  0F33  1003               	rlf	(___flmul@grs),f
  8565  0F34  0DD9               	rlf	(___flmul@grs+1),f
  8566  0F35  0DDA               	rlf	(___flmul@grs+2),f
  8567  0F36  0DDB               	rlf	(___flmul@grs+3),f
  8568  0F37  0DDC               	decfsz	(??___flmul+0)+0
  8569  0F38  0BD2               	goto	u6375
  8570  0F39  2F33               	line	158
  8571                           	
  8572                           l4236:	
  8573  0F3A                     	movlw	0FFh
  8574  0F3A  30FF               	addwf	(___flmul@temp),f
  8575  0F3B  07E2               	skipnc
  8576  0F3C  1803               	incf	(___flmul@temp+1),f
  8577  0F3D  0AE3               	movlw	0FFh
  8578  0F3E  30FF               	addwf	(___flmul@temp+1),f
  8579  0F3F  07E3               	goto	l4238
  8580  0F40  2F41               	line	159
  8581                           	
  8582                           l917:	
  8583  0F41                     	line	152
  8584                           	
  8585                           l4238:	
  8586  0F41                     	btfss	(___flmul@prod+2),(23)&7
  8587  0F41  1FE0               	goto	u6381
  8588  0F42  2F44               	goto	u6380
  8589  0F43  2F45               u6381:
  8590  0F44                     	goto	l4228
  8591  0F44  2F22               u6380:
  8592  0F45                     	goto	l4240
  8593  0F45  2F46               	
  8594                           l920:	
  8595  0F46                     	line	163
  8596                           	
  8597                           l4240:	
  8598  0F46                     	clrf	(___flmul@aexp)
  8599  0F46  01D8               	line	164
  8600                           	
  8601                           l4242:	
  8602  0F47                     	btfss	(___flmul@grs+3),(31)&7
  8603  0F47  1FDC               	goto	u6391
  8604  0F48  2F4A               	goto	u6390
  8605  0F49  2F4B               u6391:
  8606  0F4A                     	goto	l4250
  8607  0F4A  2F6B               u6390:
  8608  0F4B                     	line	165
  8609                           	
  8610                           l4244:	
  8611  0F4B                     	movlw	0FFh
  8612  0F4B  30FF               	andwf	(___flmul@grs),w
  8613  0F4C  0559               	movwf	(??___flmul+0)+0
  8614  0F4D  00D2               	movlw	0FFh
  8615  0F4E  30FF               	andwf	(___flmul@grs+1),w
  8616  0F4F  055A               	movwf	((??___flmul+0)+0+1)
  8617  0F50  00D3               	movlw	0FFh
  8618  0F51  30FF               	andwf	(___flmul@grs+2),w
  8619  0F52  055B               	movwf	((??___flmul+0)+0+2)
  8620  0F53  00D4               	movlw	07Fh
  8621  0F54  307F               	andwf	(___flmul@grs+3),w
  8622  0F55  055C               	movwf	((??___flmul+0)+0+3)
  8623  0F56  00D5               	movf	3+(??___flmul+0)+0,w
  8624  0F57  0855               	iorwf	2+(??___flmul+0)+0,w
  8625  0F58  0454               	iorwf	1+(??___flmul+0)+0,w
  8626  0F59  0453               	iorwf	0+(??___flmul+0)+0,w
  8627  0F5A  0452               	skipnz
  8628  0F5B  1903               	goto	u6401
  8629  0F5C  2F5E               	goto	u6400
  8630  0F5D  2F5F               u6401:
  8631  0F5E                     	goto	l922
  8632  0F5E  2F62               u6400:
  8633  0F5F                     	line	166
  8634                           	
  8635                           l4246:	
  8636  0F5F                     	clrf	(___flmul@aexp)
  8637  0F5F  01D8               	incf	(___flmul@aexp),f
  8638  0F60  0AD8               	line	167
  8639                           	goto	l4250
  8640  0F61  2F6B               	line	168
  8641                           	
  8642                           l922:	
  8643  0F62                     	line	169
  8644                           	btfss	(___flmul@prod),(0)&7
  8645  0F62  1C5E               	goto	u6411
  8646  0F63  2F65               	goto	u6410
  8647  0F64  2F66               u6411:
  8648  0F65                     	goto	l4250
  8649  0F65  2F6B               u6410:
  8650  0F66                     	line	170
  8651                           	
  8652                           l4248:	
  8653  0F66                     	clrf	(___flmul@aexp)
  8654  0F66  01D8               	incf	(___flmul@aexp),f
  8655  0F67  0AD8               	goto	l4250
  8656  0F68  2F6B               	line	171
  8657                           	
  8658                           l924:	
  8659  0F69                     	goto	l4250
  8660  0F69  2F6B               	line	172
  8661                           	
  8662                           l923:	
  8663  0F6A                     	goto	l4250
  8664  0F6A  2F6B               	line	173
  8665                           	
  8666                           l921:	
  8667  0F6B                     	line	174
  8668                           	
  8669                           l4250:	
  8670  0F6B                     	movf	((___flmul@aexp)),w
  8671  0F6B  0858               	btfsc	status,2
  8672  0F6C  1903               	goto	u6421
  8673  0F6D  2F6F               	goto	u6420
  8674  0F6E  2F70               u6421:
  8675  0F6F                     	goto	l4260
  8676  0F6F  2FA3               u6420:
  8677  0F70                     	line	175
  8678                           	
  8679                           l4252:	
  8680  0F70                     	movlw	01h
  8681  0F70  3001               	addwf	(___flmul@prod),f
  8682  0F71  07DE               	movlw	0
  8683  0F72  3000               	skipnc
  8684  0F73  1803               movlw 1
  8685  0F74  3001               	addwf	(___flmul@prod+1),f
  8686  0F75  07DF               	movlw	0
  8687  0F76  3000               	skipnc
  8688  0F77  1803               movlw 1
  8689  0F78  3001               	addwf	(___flmul@prod+2),f
  8690  0F79  07E0               	movlw	0
  8691  0F7A  3000               	skipnc
  8692  0F7B  1803               movlw 1
  8693  0F7C  3001               	addwf	(___flmul@prod+3),f
  8694  0F7D  07E1               	line	176
  8695                           	
  8696                           l4254:	
  8697  0F7E                     	btfss	(___flmul@prod+3),(24)&7
  8698  0F7E  1C61               	goto	u6431
  8699  0F7F  2F81               	goto	u6430
  8700  0F80  2F82               u6431:
  8701  0F81                     	goto	l4260
  8702  0F81  2FA3               u6430:
  8703  0F82                     	line	177
  8704                           	
  8705                           l4256:	
  8706  0F82                     	movf	(___flmul@prod),w
  8707  0F82  085E               	movwf	(??___flmul+0)+0
  8708  0F83  00D2               	movf	(___flmul@prod+1),w
  8709  0F84  085F               	movwf	((??___flmul+0)+0+1)
  8710  0F85  00D3               	movf	(___flmul@prod+2),w
  8711  0F86  0860               	movwf	((??___flmul+0)+0+2)
  8712  0F87  00D4               	movf	(___flmul@prod+3),w
  8713  0F88  0861               	movwf	((??___flmul+0)+0+3)
  8714  0F89  00D5               	movlw	01h
  8715  0F8A  3001               	movwf	(??___flmul+4)+0
  8716  0F8B  00D6               u6445:
  8717  0F8C                     	rlf	(??___flmul+0)+3,w
  8718  0F8C  0D55               	rrf	(??___flmul+0)+3,f
  8719  0F8D  0CD5               	rrf	(??___flmul+0)+2,f
  8720  0F8E  0CD4               	rrf	(??___flmul+0)+1,f
  8721  0F8F  0CD3               	rrf	(??___flmul+0)+0,f
  8722  0F90  0CD2               u6440:
  8723  0F91                     	decfsz	(??___flmul+4)+0,f
  8724  0F91  0BD6               	goto	u6445
  8725  0F92  2F8C               	movf	3+(??___flmul+0)+0,w
  8726  0F93  0855               	movwf	(___flmul@prod+3)
  8727  0F94  00E1               	movf	2+(??___flmul+0)+0,w
  8728  0F95  0854               	movwf	(___flmul@prod+2)
  8729  0F96  00E0               	movf	1+(??___flmul+0)+0,w
  8730  0F97  0853               	movwf	(___flmul@prod+1)
  8731  0F98  00DF               	movf	0+(??___flmul+0)+0,w
  8732  0F99  0852               	movwf	(___flmul@prod)
  8733  0F9A  00DE               
  8734                           	line	178
  8735                           	
  8736                           l4258:	
  8737  0F9B                     	movlw	01h
  8738  0F9B  3001               	addwf	(___flmul@temp),f
  8739  0F9C  07E2               	skipnc
  8740  0F9D  1803               	incf	(___flmul@temp+1),f
  8741  0F9E  0AE3               	movlw	0
  8742  0F9F  3000               	addwf	(___flmul@temp+1),f
  8743  0FA0  07E3               	goto	l4260
  8744  0FA1  2FA3               	line	179
  8745                           	
  8746                           l926:	
  8747  0FA2                     	goto	l4260
  8748  0FA2  2FA3               	line	180
  8749                           	
  8750                           l925:	
  8751  0FA3                     	line	183
  8752                           	
  8753                           l4260:	
  8754  0FA3                     	movf	(___flmul@temp+1),w
  8755  0FA3  0863               	xorlw	80h
  8756  0FA4  3A80               	movwf	btemp+1
  8757  0FA5  00FF               	movlw	(0)^80h
  8758  0FA6  3080               	subwf	btemp+1,w
  8759  0FA7  027F               	skipz
  8760  0FA8  1D03               	goto	u6455
  8761  0FA9  2FAC               	movlw	0FFh
  8762  0FAA  30FF               	subwf	(___flmul@temp),w
  8763  0FAB  0262               u6455:
  8764  0FAC                     
  8765                           	skipc
  8766  0FAC  1C03               	goto	u6451
  8767  0FAD  2FAF               	goto	u6450
  8768  0FAE  2FB0               u6451:
  8769  0FAF                     	goto	l4264
  8770  0FAF  2FBB               u6450:
  8771  0FB0                     	line	184
  8772                           	
  8773                           l4262:	
  8774  0FB0                     	movlw	07Fh
  8775  0FB0  307F               	bcf	status, 5	;RP0=0, select bank0
  8776  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  8777  0FB2  1303               	movwf	(___flmul@prod+3)
  8778  0FB3  00E1               	movlw	080h
  8779  0FB4  3080               	movwf	(___flmul@prod+2)
  8780  0FB5  00E0               	movlw	0
  8781  0FB6  3000               	movwf	(___flmul@prod+1)
  8782  0FB7  00DF               	movlw	0
  8783  0FB8  3000               	movwf	(___flmul@prod)
  8784  0FB9  00DE               
  8785                           	line	185
  8786                           	goto	l928
  8787  0FBA  2FF2               	line	187
  8788                           	
  8789                           l927:	
  8790  0FBB                     	
  8791                           l4264:	
  8792  0FBB                     	bcf	status, 5	;RP0=0, select bank0
  8793  0FBB  1283               	bcf	status, 6	;RP1=0, select bank0
  8794  0FBC  1303               	movf	(___flmul@temp+1),w
  8795  0FBD  0863               	xorlw	80h
  8796  0FBE  3A80               	movwf	btemp+1
  8797  0FBF  00FF               	movlw	(0)^80h
  8798  0FC0  3080               	subwf	btemp+1,w
  8799  0FC1  027F               	skipz
  8800  0FC2  1D03               	goto	u6465
  8801  0FC3  2FC6               	movlw	01h
  8802  0FC4  3001               	subwf	(___flmul@temp),w
  8803  0FC5  0262               u6465:
  8804  0FC6                     
  8805                           	skipnc
  8806  0FC6  1803               	goto	u6461
  8807  0FC7  2FC9               	goto	u6460
  8808  0FC8  2FCA               u6461:
  8809  0FC9                     	goto	l4270
  8810  0FC9  2FD6               u6460:
  8811  0FCA                     	line	188
  8812                           	
  8813                           l4266:	
  8814  0FCA                     	movlw	high highword(0)
  8815  0FCA  3000               	bcf	status, 5	;RP0=0, select bank0
  8816  0FCB  1283               	bcf	status, 6	;RP1=0, select bank0
  8817  0FCC  1303               	movwf	(___flmul@prod+3)
  8818  0FCD  00E1               	movlw	low highword(0)
  8819  0FCE  3000               	movwf	(___flmul@prod+2)
  8820  0FCF  00E0               	movlw	high(0)
  8821  0FD0  3000               	movwf	(___flmul@prod+1)
  8822  0FD1  00DF               	movlw	low(0)
  8823  0FD2  3000               	movwf	(___flmul@prod)
  8824  0FD3  00DE               
  8825                           	line	190
  8826                           	
  8827                           l4268:	
  8828  0FD4                     	clrf	(___flmul@sign)
  8829  0FD4  01D7               	line	191
  8830                           	goto	l928
  8831  0FD5  2FF2               	line	192
  8832                           	
  8833                           l929:	
  8834  0FD6                     	line	194
  8835                           	
  8836                           l4270:	
  8837  0FD6                     	bcf	status, 5	;RP0=0, select bank0
  8838  0FD6  1283               	bcf	status, 6	;RP1=0, select bank0
  8839  0FD7  1303               	movf	(___flmul@temp),w
  8840  0FD8  0862               	movwf	(??___flmul+0)+0
  8841  0FD9  00D2               	movf	(??___flmul+0)+0,w
  8842  0FDA  0852               	movwf	(___flmul@bexp)
  8843  0FDB  00DD               	line	195
  8844                           	movlw	0FFh
  8845  0FDC  30FF               	andwf	(___flmul@prod),f
  8846  0FDD  05DE               	movlw	0FFh
  8847  0FDE  30FF               	andwf	(___flmul@prod+1),f
  8848  0FDF  05DF               	movlw	07Fh
  8849  0FE0  307F               	andwf	(___flmul@prod+2),f
  8850  0FE1  05E0               	movlw	0
  8851  0FE2  3000               	andwf	(___flmul@prod+3),f
  8852  0FE3  05E1               	line	196
  8853                           	
  8854                           l4272:	
  8855  0FE4                     	btfss	(___flmul@bexp),(0)&7
  8856  0FE4  1C5D               	goto	u6471
  8857  0FE5  2FE7               	goto	u6470
  8858  0FE6  2FE8               u6471:
  8859  0FE7                     	goto	l4276
  8860  0FE7  2FEA               u6470:
  8861  0FE8                     	line	197
  8862                           	
  8863                           l4274:	
  8864  0FE8                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  8865  0FE8  17E0               	goto	l4276
  8866  0FE9  2FEA               	line	198
  8867                           	
  8868                           l931:	
  8869  0FEA                     	line	199
  8870                           	
  8871                           l4276:	
  8872  0FEA                     	movf	(___flmul@bexp),w
  8873  0FEA  085D               	movwf	(??___flmul+0)+0
  8874  0FEB  00D2               	clrc
  8875  0FEC  1003               	rrf	(??___flmul+0)+0,w
  8876  0FED  0C52               	movwf	(??___flmul+1)+0
  8877  0FEE  00D3               	movf	(??___flmul+1)+0,w
  8878  0FEF  0853               	movwf	0+(___flmul@prod)+03h
  8879  0FF0  00E1               	goto	l928
  8880  0FF1  2FF2               	line	200
  8881                           	
  8882                           l930:	
  8883  0FF2                     	
  8884                           l928:	
  8885  0FF2                     	line	201
  8886                           	movf	(___flmul@sign),w
  8887  0FF2  0857               	movwf	(??___flmul+0)+0
  8888  0FF3  00D2               	movf	(??___flmul+0)+0,w
  8889  0FF4  0852               	iorwf	0+(___flmul@prod)+03h,f
  8890  0FF5  04E1               	line	203
  8891                           	
  8892                           l4278:	
  8893  0FF6                     	movf	(___flmul@prod+3),w
  8894  0FF6  0861               	movwf	(?___flmul+3)
  8895  0FF7  00CD               	movf	(___flmul@prod+2),w
  8896  0FF8  0860               	movwf	(?___flmul+2)
  8897  0FF9  00CC               	movf	(___flmul@prod+1),w
  8898  0FFA  085F               	movwf	(?___flmul+1)
  8899  0FFB  00CB               	movf	(___flmul@prod),w
  8900  0FFC  085E               	movwf	(?___flmul)
  8901  0FFD  00CA               
  8902                           	goto	l916
  8903  0FFE  2FFF               	
  8904                           l4280:	
  8905  0FFF                     	line	205
  8906                           	
  8907                           l916:	
  8908  0FFF                     	return
  8909  0FFF  0008               	opt stack 0
  8910                           GLOBAL	__end_of___flmul
  8911                           	__end_of___flmul:
  8912  1000                     	signat	___flmul,8316
  8913                           	global	__Umul8_16
  8914                           
  8915 ;; *************** function __Umul8_16 *****************
  8916 ;; Defined at:
  8917 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;  multiplier      1    wreg     unsigned char 
  8920 ;;  multiplicand    1    0[BANK0 ] unsigned char 
  8921 ;; Auto vars:     Size  Location     Type
  8922 ;;  multiplier      1    8[BANK0 ] unsigned char 
  8923 ;;  word_mpld       2    6[BANK0 ] unsigned int 
  8924 ;;  product         2    4[BANK0 ] unsigned int 
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  2    0[BANK0 ] unsigned int 
  8927 ;; Registers used:
  8928 ;;		wreg, status,2, status,0
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8934 ;;      Params:         0       2       0       0       0
  8935 ;;      Locals:         0       5       0       0       0
  8936 ;;      Temps:          0       2       0       0       0
  8937 ;;      Totals:         0       9       0       0       0
  8938 ;;Total ram usage:        9 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:    2
  8941 ;; This function calls:
  8942 ;;		Nothing
  8943 ;; This function is called by:
  8944 ;;		___flmul
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  8948                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  8949                           	line	4
  8950                           global __ptext20
  8951                           __ptext20:	;psect for function __Umul8_16
  8952  11D8                     psect	text20
  8953                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  8954                           	line	4
  8955                           	global	__size_of__Umul8_16
  8956                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  8957  002C                     	
  8958                           __Umul8_16:	
  8959  11D8                     ;incstack = 0
  8960                           	opt	stack 4
  8961                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  8962                           ;__Umul8_16@multiplier stored from wreg
  8963                           	bcf	status, 5	;RP0=0, select bank0
  8964  11D8  1283               	bcf	status, 6	;RP1=0, select bank0
  8965  11D9  1303               	movwf	(__Umul8_16@multiplier)
  8966  11DA  00A8               	line	5
  8967                           	
  8968                           l3832:	
  8969  11DB                     	clrf	(__Umul8_16@product)
  8970  11DB  01A4               	clrf	(__Umul8_16@product+1)
  8971  11DC  01A5               	line	6
  8972                           	
  8973                           l3834:	
  8974  11DD                     	movf	(__Umul8_16@multiplicand),w
  8975  11DD  0820               	movwf	(??__Umul8_16+0)+0
  8976  11DE  00A2               	clrf	(??__Umul8_16+0)+0+1
  8977  11DF  01A3               	movf	0+(??__Umul8_16+0)+0,w
  8978  11E0  0822               	movwf	(__Umul8_16@word_mpld)
  8979  11E1  00A6               	movf	1+(??__Umul8_16+0)+0,w
  8980  11E2  0823               	movwf	(__Umul8_16@word_mpld+1)
  8981  11E3  00A7               	goto	l3836
  8982  11E4  29E5               	line	50
  8983                           	
  8984                           l953:	
  8985  11E5                     	line	51
  8986                           	
  8987                           l3836:	
  8988  11E5                     	btfss	(__Umul8_16@multiplier),(0)&7
  8989  11E5  1C28               	goto	u5521
  8990  11E6  29E8               	goto	u5520
  8991  11E7  29E9               u5521:
  8992  11E8                     	goto	l954
  8993  11E8  29EF               u5520:
  8994  11E9                     	line	52
  8995                           	
  8996                           l3838:	
  8997  11E9                     	movf	(__Umul8_16@word_mpld),w
  8998  11E9  0826               	addwf	(__Umul8_16@product),f
  8999  11EA  07A4               	skipnc
  9000  11EB  1803               	incf	(__Umul8_16@product+1),f
  9001  11EC  0AA5               	movf	(__Umul8_16@word_mpld+1),w
  9002  11ED  0827               	addwf	(__Umul8_16@product+1),f
  9003  11EE  07A5               	line	53
  9004                           	
  9005                           l954:	
  9006  11EF                     	line	54
  9007                           	movlw	01h
  9008  11EF  3001               	
  9009                           u5535:
  9010  11F0                     	clrc
  9011  11F0  1003               	rlf	(__Umul8_16@word_mpld),f
  9012  11F1  0DA6               	rlf	(__Umul8_16@word_mpld+1),f
  9013  11F2  0DA7               	addlw	-1
  9014  11F3  3EFF               	skipz
  9015  11F4  1D03               	goto	u5535
  9016  11F5  29F0               	line	55
  9017                           	clrc
  9018  11F6  1003               	rrf	(__Umul8_16@multiplier),f
  9019  11F7  0CA8               
  9020                           	line	56
  9021                           	
  9022                           l3840:	
  9023  11F8                     	movf	((__Umul8_16@multiplier)),w
  9024  11F8  0828               	btfss	status,2
  9025  11F9  1D03               	goto	u5541
  9026  11FA  29FC               	goto	u5540
  9027  11FB  29FD               u5541:
  9028  11FC                     	goto	l3836
  9029  11FC  29E5               u5540:
  9030  11FD                     	goto	l3842
  9031  11FD  29FE               	
  9032                           l955:	
  9033  11FE                     	line	59
  9034                           	
  9035                           l3842:	
  9036  11FE                     	movf	(__Umul8_16@product+1),w
  9037  11FE  0825               	movwf	(?__Umul8_16+1)
  9038  11FF  00A1               	movf	(__Umul8_16@product),w
  9039  1200  0824               	movwf	(?__Umul8_16)
  9040  1201  00A0               	goto	l956
  9041  1202  2A03               	
  9042                           l3844:	
  9043  1203                     	line	60
  9044                           	
  9045                           l956:	
  9046  1203                     	return
  9047  1203  0008               	opt stack 0
  9048                           GLOBAL	__end_of__Umul8_16
  9049                           	__end_of__Umul8_16:
  9050  1204                     	signat	__Umul8_16,8314
  9051                           	global	___fldiv
  9052                           
  9053 ;; *************** function ___fldiv *****************
  9054 ;; Defined at:
  9055 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  9056 ;; Parameters:    Size  Location     Type
  9057 ;;  a               4   68[BANK0 ] unsigned int 
  9058 ;;  b               4   72[BANK0 ] unsigned int 
  9059 ;; Auto vars:     Size  Location     Type
  9060 ;;  grs             4   12[BANK1 ] unsigned long 
  9061 ;;  rem             4    5[BANK1 ] unsigned long 
  9062 ;;  new_exp         2   10[BANK1 ] int 
  9063 ;;  aexp            1   17[BANK1 ] unsigned char 
  9064 ;;  bexp            1   16[BANK1 ] unsigned char 
  9065 ;;  sign            1    9[BANK1 ] unsigned char 
  9066 ;; Return value:  Size  Location     Type
  9067 ;;                  4   68[BANK0 ] unsigned char 
  9068 ;; Registers used:
  9069 ;;		wreg, status,2, status,0, btemp+1
  9070 ;; Tracked objects:
  9071 ;;		On entry : 0/0
  9072 ;;		On exit  : 0/0
  9073 ;;		Unchanged: 0/0
  9074 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9075 ;;      Params:         0       8       0       0       0
  9076 ;;      Locals:         0       0      13       0       0
  9077 ;;      Temps:          0       0       5       0       0
  9078 ;;      Totals:         0       8      18       0       0
  9079 ;;Total ram usage:       26 bytes
  9080 ;; Hardware stack levels used:    1
  9081 ;; Hardware stack levels required when called:    2
  9082 ;; This function calls:
  9083 ;;		Nothing
  9084 ;; This function is called by:
  9085 ;;		_main
  9086 ;; This function uses a non-reentrant model
  9087 ;;
  9088                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  9089                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  9090                           	line	8
  9091                           global __ptext21
  9092                           __ptext21:	;psect for function ___fldiv
  9093  09C8                     psect	text21
  9094                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  9095                           	line	8
  9096                           	global	__size_of___fldiv
  9097                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  9098  02C3                     	
  9099                           ___fldiv:	
  9100  09C8                     ;incstack = 0
  9101                           	opt	stack 5
  9102                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  9103                           	line	26
  9104                           	
  9105                           l4000:	
  9106  09C8                     	bcf	status, 5	;RP0=0, select bank0
  9107  09C8  1283               	bcf	status, 6	;RP1=0, select bank0
  9108  09C9  1303               	movf	0+(___fldiv@b)+03h,w
  9109  09CA  086B               	andlw	080h
  9110  09CB  3980               	bsf	status, 5	;RP0=1, select bank1
  9111  09CC  1683               	bcf	status, 6	;RP1=0, select bank1
  9112  09CD  1303               	movwf	(??___fldiv+0)^080h+0
  9113  09CE  00C3               	movf	(??___fldiv+0)^080h+0,w
  9114  09CF  0843               	movwf	(___fldiv@sign)^080h
  9115  09D0  00CC               	line	27
  9116                           	
  9117                           l4002:	
  9118  09D1                     	bcf	status, 5	;RP0=0, select bank0
  9119  09D1  1283               	bcf	status, 6	;RP1=0, select bank0
  9120  09D2  1303               	movf	0+(___fldiv@b)+03h,w
  9121  09D3  086B               	bsf	status, 5	;RP0=1, select bank1
  9122  09D4  1683               	bcf	status, 6	;RP1=0, select bank1
  9123  09D5  1303               	movwf	(??___fldiv+0)^080h+0
  9124  09D6  00C3               	addwf	(??___fldiv+0)^080h+0,w
  9125  09D7  0743               	movwf	(??___fldiv+1)^080h+0
  9126  09D8  00C4               	movf	(??___fldiv+1)^080h+0,w
  9127  09D9  0844               	movwf	(___fldiv@bexp)^080h
  9128  09DA  00D3               	line	28
  9129                           	
  9130                           l4004:	
  9131  09DB                     	bcf	status, 5	;RP0=0, select bank0
  9132  09DB  1283               	bcf	status, 6	;RP1=0, select bank0
  9133  09DC  1303               	btfss	0+(___fldiv@b)+02h,(7)&7
  9134  09DD  1FEA               	goto	u5811
  9135  09DE  29E0               	goto	u5810
  9136  09DF  29E1               u5811:
  9137  09E0                     	goto	l4008
  9138  09E0  29E5               u5810:
  9139  09E1                     	line	29
  9140                           	
  9141                           l4006:	
  9142  09E1                     	bsf	status, 5	;RP0=1, select bank1
  9143  09E1  1683               	bcf	status, 6	;RP1=0, select bank1
  9144  09E2  1303               	bsf	(___fldiv@bexp)^080h+(0/8),(0)&7
  9145  09E3  1453               	goto	l4008
  9146  09E4  29E5               	line	30
  9147                           	
  9148                           l869:	
  9149  09E5                     	line	33
  9150                           	
  9151                           l4008:	
  9152  09E5                     	bsf	status, 5	;RP0=1, select bank1
  9153  09E5  1683               	bcf	status, 6	;RP1=0, select bank1
  9154  09E6  1303               	movf	((___fldiv@bexp)^080h),w
  9155  09E7  0853               	btfsc	status,2
  9156  09E8  1903               	goto	u5821
  9157  09E9  29EB               	goto	u5820
  9158  09EA  29EC               u5821:
  9159  09EB                     	goto	l4018
  9160  09EB  2A00               u5820:
  9161  09EC                     	line	35
  9162                           	
  9163                           l4010:	
  9164  09EC                     		incf	((___fldiv@bexp)^080h),w
  9165  09EC  0A53               	btfss	status,2
  9166  09ED  1D03               	goto	u5831
  9167  09EE  29F0               	goto	u5830
  9168  09EF  29F1               u5831:
  9169  09F0                     	goto	l4014
  9170  09F0  29FC               u5830:
  9171  09F1                     	line	37
  9172                           	
  9173                           l4012:	
  9174  09F1                     	movlw	0x0
  9175  09F1  3000               	bcf	status, 5	;RP0=0, select bank0
  9176  09F2  1283               	bcf	status, 6	;RP1=0, select bank0
  9177  09F3  1303               	movwf	(___fldiv@b+3)
  9178  09F4  00EB               	movlw	0x0
  9179  09F5  3000               	movwf	(___fldiv@b+2)
  9180  09F6  00EA               	movlw	0x0
  9181  09F7  3000               	movwf	(___fldiv@b+1)
  9182  09F8  00E9               	movlw	0x0
  9183  09F9  3000               	movwf	(___fldiv@b)
  9184  09FA  00E8               
  9185                           	goto	l4014
  9186  09FB  29FC               	line	38
  9187                           	
  9188                           l871:	
  9189  09FC                     	line	40
  9190                           	
  9191                           l4014:	
  9192  09FC                     	bcf	status, 5	;RP0=0, select bank0
  9193  09FC  1283               	bsf	(___fldiv@b)+(23/8),(23)&7
  9194  09FD  17EA               	line	42
  9195                           	
  9196                           l4016:	
  9197  09FE                     	clrf	0+(___fldiv@b)+03h
  9198  09FE  01EB               	line	43
  9199                           	goto	l4020
  9200  09FF  2A0A               	line	44
  9201                           	
  9202                           l870:	
  9203  0A00                     	line	46
  9204                           	
  9205                           l4018:	
  9206  0A00                     	movlw	0x0
  9207  0A00  3000               	bcf	status, 5	;RP0=0, select bank0
  9208  0A01  1283               	movwf	(___fldiv@b+3)
  9209  0A02  00EB               	movlw	0x0
  9210  0A03  3000               	movwf	(___fldiv@b+2)
  9211  0A04  00EA               	movlw	0x0
  9212  0A05  3000               	movwf	(___fldiv@b+1)
  9213  0A06  00E9               	movlw	0x0
  9214  0A07  3000               	movwf	(___fldiv@b)
  9215  0A08  00E8               
  9216                           	goto	l4020
  9217  0A09  2A0A               	line	47
  9218                           	
  9219                           l872:	
  9220  0A0A                     	line	49
  9221                           	
  9222                           l4020:	
  9223  0A0A                     	movf	0+(___fldiv@a)+03h,w
  9224  0A0A  0867               	andlw	080h
  9225  0A0B  3980               	bsf	status, 5	;RP0=1, select bank1
  9226  0A0C  1683               	bcf	status, 6	;RP1=0, select bank1
  9227  0A0D  1303               	movwf	(??___fldiv+0)^080h+0
  9228  0A0E  00C3               	movf	(??___fldiv+0)^080h+0,w
  9229  0A0F  0843               	xorwf	(___fldiv@sign)^080h,f
  9230  0A10  06CC               	line	50
  9231                           	
  9232                           l4022:	
  9233  0A11                     	bcf	status, 5	;RP0=0, select bank0
  9234  0A11  1283               	bcf	status, 6	;RP1=0, select bank0
  9235  0A12  1303               	movf	0+(___fldiv@a)+03h,w
  9236  0A13  0867               	bsf	status, 5	;RP0=1, select bank1
  9237  0A14  1683               	bcf	status, 6	;RP1=0, select bank1
  9238  0A15  1303               	movwf	(??___fldiv+0)^080h+0
  9239  0A16  00C3               	addwf	(??___fldiv+0)^080h+0,w
  9240  0A17  0743               	movwf	(??___fldiv+1)^080h+0
  9241  0A18  00C4               	movf	(??___fldiv+1)^080h+0,w
  9242  0A19  0844               	movwf	(___fldiv@aexp)^080h
  9243  0A1A  00D4               	line	51
  9244                           	
  9245                           l4024:	
  9246  0A1B                     	bcf	status, 5	;RP0=0, select bank0
  9247  0A1B  1283               	bcf	status, 6	;RP1=0, select bank0
  9248  0A1C  1303               	btfss	0+(___fldiv@a)+02h,(7)&7
  9249  0A1D  1FE6               	goto	u5841
  9250  0A1E  2A20               	goto	u5840
  9251  0A1F  2A21               u5841:
  9252  0A20                     	goto	l4028
  9253  0A20  2A25               u5840:
  9254  0A21                     	line	52
  9255                           	
  9256                           l4026:	
  9257  0A21                     	bsf	status, 5	;RP0=1, select bank1
  9258  0A21  1683               	bcf	status, 6	;RP1=0, select bank1
  9259  0A22  1303               	bsf	(___fldiv@aexp)^080h+(0/8),(0)&7
  9260  0A23  1454               	goto	l4028
  9261  0A24  2A25               	line	53
  9262                           	
  9263                           l873:	
  9264  0A25                     	line	56
  9265                           	
  9266                           l4028:	
  9267  0A25                     	bsf	status, 5	;RP0=1, select bank1
  9268  0A25  1683               	bcf	status, 6	;RP1=0, select bank1
  9269  0A26  1303               	movf	((___fldiv@aexp)^080h),w
  9270  0A27  0854               	btfsc	status,2
  9271  0A28  1903               	goto	u5851
  9272  0A29  2A2B               	goto	u5850
  9273  0A2A  2A2C               u5851:
  9274  0A2B                     	goto	l4038
  9275  0A2B  2A40               u5850:
  9276  0A2C                     	line	58
  9277                           	
  9278                           l4030:	
  9279  0A2C                     		incf	((___fldiv@aexp)^080h),w
  9280  0A2C  0A54               	btfss	status,2
  9281  0A2D  1D03               	goto	u5861
  9282  0A2E  2A30               	goto	u5860
  9283  0A2F  2A31               u5861:
  9284  0A30                     	goto	l4034
  9285  0A30  2A3C               u5860:
  9286  0A31                     	line	60
  9287                           	
  9288                           l4032:	
  9289  0A31                     	movlw	0x0
  9290  0A31  3000               	bcf	status, 5	;RP0=0, select bank0
  9291  0A32  1283               	bcf	status, 6	;RP1=0, select bank0
  9292  0A33  1303               	movwf	(___fldiv@a+3)
  9293  0A34  00E7               	movlw	0x0
  9294  0A35  3000               	movwf	(___fldiv@a+2)
  9295  0A36  00E6               	movlw	0x0
  9296  0A37  3000               	movwf	(___fldiv@a+1)
  9297  0A38  00E5               	movlw	0x0
  9298  0A39  3000               	movwf	(___fldiv@a)
  9299  0A3A  00E4               
  9300                           	goto	l4034
  9301  0A3B  2A3C               	line	61
  9302                           	
  9303                           l875:	
  9304  0A3C                     	line	63
  9305                           	
  9306                           l4034:	
  9307  0A3C                     	bcf	status, 5	;RP0=0, select bank0
  9308  0A3C  1283               	bsf	(___fldiv@a)+(23/8),(23)&7
  9309  0A3D  17E6               	line	65
  9310                           	
  9311                           l4036:	
  9312  0A3E                     	clrf	0+(___fldiv@a)+03h
  9313  0A3E  01E7               	line	66
  9314                           	goto	l876
  9315  0A3F  2A49               	line	67
  9316                           	
  9317                           l874:	
  9318  0A40                     	line	69
  9319                           	
  9320                           l4038:	
  9321  0A40                     	movlw	0x0
  9322  0A40  3000               	bcf	status, 5	;RP0=0, select bank0
  9323  0A41  1283               	movwf	(___fldiv@a+3)
  9324  0A42  00E7               	movlw	0x0
  9325  0A43  3000               	movwf	(___fldiv@a+2)
  9326  0A44  00E6               	movlw	0x0
  9327  0A45  3000               	movwf	(___fldiv@a+1)
  9328  0A46  00E5               	movlw	0x0
  9329  0A47  3000               	movwf	(___fldiv@a)
  9330  0A48  00E4               
  9331                           	line	70
  9332                           	
  9333                           l876:	
  9334  0A49                     	line	75
  9335                           	movf	(___fldiv@a+3),w
  9336  0A49  0867               	iorwf	(___fldiv@a+2),w
  9337  0A4A  0466               	iorwf	(___fldiv@a+1),w
  9338  0A4B  0465               	iorwf	(___fldiv@a),w
  9339  0A4C  0464               	skipz
  9340  0A4D  1D03               	goto	u5871
  9341  0A4E  2A50               	goto	u5870
  9342  0A4F  2A51               u5871:
  9343  0A50                     	goto	l4048
  9344  0A50  2A6F               u5870:
  9345  0A51                     	line	76
  9346                           	
  9347                           l4040:	
  9348  0A51                     	movlw	high highword(0)
  9349  0A51  3000               	movwf	(___fldiv@b+3)
  9350  0A52  00EB               	movlw	low highword(0)
  9351  0A53  3000               	movwf	(___fldiv@b+2)
  9352  0A54  00EA               	movlw	high(0)
  9353  0A55  3000               	movwf	(___fldiv@b+1)
  9354  0A56  00E9               	movlw	low(0)
  9355  0A57  3000               	movwf	(___fldiv@b)
  9356  0A58  00E8               
  9357                           	line	77
  9358                           	movlw	080h
  9359  0A59  3080               	iorwf	0+(___fldiv@b)+02h,f
  9360  0A5A  04EA               	movlw	07Fh
  9361  0A5B  307F               	iorwf	1+(___fldiv@b)+02h,f
  9362  0A5C  04EB               	line	78
  9363                           	
  9364                           l4042:	
  9365  0A5D                     	bsf	status, 5	;RP0=1, select bank1
  9366  0A5D  1683               	bcf	status, 6	;RP1=0, select bank1
  9367  0A5E  1303               	movf	(___fldiv@sign)^080h,w
  9368  0A5F  084C               	movwf	(??___fldiv+0)^080h+0
  9369  0A60  00C3               	movf	(??___fldiv+0)^080h+0,w
  9370  0A61  0843               	bcf	status, 5	;RP0=0, select bank0
  9371  0A62  1283               	bcf	status, 6	;RP1=0, select bank0
  9372  0A63  1303               	iorwf	0+(___fldiv@b)+03h,f
  9373  0A64  04EB               	line	79
  9374                           	
  9375                           l4044:	
  9376  0A65                     	movf	(___fldiv@b+3),w
  9377  0A65  086B               	movwf	(?___fldiv+3)
  9378  0A66  00E7               	movf	(___fldiv@b+2),w
  9379  0A67  086A               	movwf	(?___fldiv+2)
  9380  0A68  00E6               	movf	(___fldiv@b+1),w
  9381  0A69  0869               	movwf	(?___fldiv+1)
  9382  0A6A  00E5               	movf	(___fldiv@b),w
  9383  0A6B  0868               	movwf	(?___fldiv)
  9384  0A6C  00E4               
  9385                           	goto	l878
  9386  0A6D  2C8A               	
  9387                           l4046:	
  9388  0A6E                     	goto	l878
  9389  0A6E  2C8A               	line	80
  9390                           	
  9391                           l877:	
  9392  0A6F                     	line	83
  9393                           	
  9394                           l4048:	
  9395  0A6F                     	bsf	status, 5	;RP0=1, select bank1
  9396  0A6F  1683               	bcf	status, 6	;RP1=0, select bank1
  9397  0A70  1303               	movf	((___fldiv@bexp)^080h),w
  9398  0A71  0853               	btfss	status,2
  9399  0A72  1D03               	goto	u5881
  9400  0A73  2A75               	goto	u5880
  9401  0A74  2A76               u5881:
  9402  0A75                     	goto	l4054
  9403  0A75  2A8A               u5880:
  9404  0A76                     	line	84
  9405                           	
  9406                           l4050:	
  9407  0A76                     	movlw	high highword(0)
  9408  0A76  3000               	bcf	status, 5	;RP0=0, select bank0
  9409  0A77  1283               	bcf	status, 6	;RP1=0, select bank0
  9410  0A78  1303               	movwf	(___fldiv@b+3)
  9411  0A79  00EB               	movlw	low highword(0)
  9412  0A7A  3000               	movwf	(___fldiv@b+2)
  9413  0A7B  00EA               	movlw	high(0)
  9414  0A7C  3000               	movwf	(___fldiv@b+1)
  9415  0A7D  00E9               	movlw	low(0)
  9416  0A7E  3000               	movwf	(___fldiv@b)
  9417  0A7F  00E8               
  9418                           	line	85
  9419                           	movf	(___fldiv@b+3),w
  9420  0A80  086B               	movwf	(?___fldiv+3)
  9421  0A81  00E7               	movf	(___fldiv@b+2),w
  9422  0A82  086A               	movwf	(?___fldiv+2)
  9423  0A83  00E6               	movf	(___fldiv@b+1),w
  9424  0A84  0869               	movwf	(?___fldiv+1)
  9425  0A85  00E5               	movf	(___fldiv@b),w
  9426  0A86  0868               	movwf	(?___fldiv)
  9427  0A87  00E4               
  9428                           	goto	l878
  9429  0A88  2C8A               	
  9430                           l4052:	
  9431  0A89                     	goto	l878
  9432  0A89  2C8A               	line	86
  9433                           	
  9434                           l879:	
  9435  0A8A                     	line	89
  9436                           	
  9437                           l4054:	
  9438  0A8A                     	bsf	status, 5	;RP0=1, select bank1
  9439  0A8A  1683               	bcf	status, 6	;RP1=0, select bank1
  9440  0A8B  1303               	movf	(___fldiv@aexp)^080h,w
  9441  0A8C  0854               	movwf	(??___fldiv+0)^080h+0
  9442  0A8D  00C3               	clrf	(??___fldiv+0)^080h+0+1
  9443  0A8E  01C4               	comf	(??___fldiv+0)^080h+0,f
  9444  0A8F  09C3               	comf	(??___fldiv+0)^080h+1,f
  9445  0A90  09C4               	incf	(??___fldiv+0)^080h+0,f
  9446  0A91  0AC3               	skipnz
  9447  0A92  1903               	incf	(??___fldiv+0)^080h+1,f
  9448  0A93  0AC4               	movf	(___fldiv@bexp)^080h,w
  9449  0A94  0853               	addwf	0+(??___fldiv+0)^080h+0,w
  9450  0A95  0743               	movwf	(??___fldiv+2)^080h+0
  9451  0A96  00C5               	movf	1+(??___fldiv+0)^080h+0,w
  9452  0A97  0844               	skipnc
  9453  0A98  1803               	incf	1+(??___fldiv+0)^080h+0,w
  9454  0A99  0A44               	movwf	((??___fldiv+2)^080h+0)+1
  9455  0A9A  00C6               	movf	0+(??___fldiv+2)^080h+0,w
  9456  0A9B  0845               	addlw	low(07Fh)
  9457  0A9C  3E7F               	movwf	(___fldiv@new_exp)^080h
  9458  0A9D  00CD               	movf	1+(??___fldiv+2)^080h+0,w
  9459  0A9E  0846               	skipnc
  9460  0A9F  1803               	addlw	1
  9461  0AA0  3E01               	addlw	high(07Fh)
  9462  0AA1  3E00               	movwf	1+(___fldiv@new_exp)^080h
  9463  0AA2  00CE               	line	92
  9464                           	
  9465                           l4056:	
  9466  0AA3                     	bcf	status, 5	;RP0=0, select bank0
  9467  0AA3  1283               	bcf	status, 6	;RP1=0, select bank0
  9468  0AA4  1303               	movf	(___fldiv@b+3),w
  9469  0AA5  086B               	bsf	status, 5	;RP0=1, select bank1
  9470  0AA6  1683               	bcf	status, 6	;RP1=0, select bank1
  9471  0AA7  1303               	movwf	(___fldiv@rem+3)^080h
  9472  0AA8  00CB               	bcf	status, 5	;RP0=0, select bank0
  9473  0AA9  1283               	bcf	status, 6	;RP1=0, select bank0
  9474  0AAA  1303               	movf	(___fldiv@b+2),w
  9475  0AAB  086A               	bsf	status, 5	;RP0=1, select bank1
  9476  0AAC  1683               	bcf	status, 6	;RP1=0, select bank1
  9477  0AAD  1303               	movwf	(___fldiv@rem+2)^080h
  9478  0AAE  00CA               	bcf	status, 5	;RP0=0, select bank0
  9479  0AAF  1283               	bcf	status, 6	;RP1=0, select bank0
  9480  0AB0  1303               	movf	(___fldiv@b+1),w
  9481  0AB1  0869               	bsf	status, 5	;RP0=1, select bank1
  9482  0AB2  1683               	bcf	status, 6	;RP1=0, select bank1
  9483  0AB3  1303               	movwf	(___fldiv@rem+1)^080h
  9484  0AB4  00C9               	bcf	status, 5	;RP0=0, select bank0
  9485  0AB5  1283               	bcf	status, 6	;RP1=0, select bank0
  9486  0AB6  1303               	movf	(___fldiv@b),w
  9487  0AB7  0868               	bsf	status, 5	;RP0=1, select bank1
  9488  0AB8  1683               	bcf	status, 6	;RP1=0, select bank1
  9489  0AB9  1303               	movwf	(___fldiv@rem)^080h
  9490  0ABA  00C8               
  9491                           	line	93
  9492                           	
  9493                           l4058:	
  9494  0ABB                     	movlw	high highword(0)
  9495  0ABB  3000               	bcf	status, 5	;RP0=0, select bank0
  9496  0ABC  1283               	bcf	status, 6	;RP1=0, select bank0
  9497  0ABD  1303               	movwf	(___fldiv@b+3)
  9498  0ABE  00EB               	movlw	low highword(0)
  9499  0ABF  3000               	movwf	(___fldiv@b+2)
  9500  0AC0  00EA               	movlw	high(0)
  9501  0AC1  3000               	movwf	(___fldiv@b+1)
  9502  0AC2  00E9               	movlw	low(0)
  9503  0AC3  3000               	movwf	(___fldiv@b)
  9504  0AC4  00E8               
  9505                           	line	94
  9506                           	
  9507                           l4060:	
  9508  0AC5                     	movlw	high highword(0)
  9509  0AC5  3000               	bsf	status, 5	;RP0=1, select bank1
  9510  0AC6  1683               	bcf	status, 6	;RP1=0, select bank1
  9511  0AC7  1303               	movwf	(___fldiv@grs+3)^080h
  9512  0AC8  00D2               	movlw	low highword(0)
  9513  0AC9  3000               	movwf	(___fldiv@grs+2)^080h
  9514  0ACA  00D1               	movlw	high(0)
  9515  0ACB  3000               	movwf	(___fldiv@grs+1)^080h
  9516  0ACC  00D0               	movlw	low(0)
  9517  0ACD  3000               	movwf	(___fldiv@grs)^080h
  9518  0ACE  00CF               
  9519                           	line	96
  9520                           	
  9521                           l4062:	
  9522  0ACF                     	clrf	(___fldiv@aexp)^080h
  9523  0ACF  01D4               	line	97
  9524                           	goto	l4082
  9525  0AD0  2B51               	
  9526                           l881:	
  9527  0AD1                     	line	100
  9528                           	
  9529                           l4064:	
  9530  0AD1                     	movf	((___fldiv@aexp)^080h),w
  9531  0AD1  0854               	btfsc	status,2
  9532  0AD2  1903               	goto	u5891
  9533  0AD3  2AD5               	goto	u5890
  9534  0AD4  2AD6               u5891:
  9535  0AD5                     	goto	l4074
  9536  0AD5  2B00               u5890:
  9537  0AD6                     	line	101
  9538                           	
  9539                           l4066:	
  9540  0AD6                     	movlw	01h
  9541  0AD6  3001               	movwf	(??___fldiv+0)^080h+0
  9542  0AD7  00C3               u5905:
  9543  0AD8                     	clrc
  9544  0AD8  1003               	rlf	(___fldiv@rem)^080h,f
  9545  0AD9  0DC8               	rlf	(___fldiv@rem+1)^080h,f
  9546  0ADA  0DC9               	rlf	(___fldiv@rem+2)^080h,f
  9547  0ADB  0DCA               	rlf	(___fldiv@rem+3)^080h,f
  9548  0ADC  0DCB               	decfsz	(??___fldiv+0)^080h+0
  9549  0ADD  0BC3               	goto	u5905
  9550  0ADE  2AD8               	line	102
  9551                           	movlw	01h
  9552  0ADF  3001               	movwf	(??___fldiv+0)^080h+0
  9553  0AE0  00C3               u5915:
  9554  0AE1                     	clrc
  9555  0AE1  1003               	bcf	status, 5	;RP0=0, select bank0
  9556  0AE2  1283               	bcf	status, 6	;RP1=0, select bank0
  9557  0AE3  1303               	rlf	(___fldiv@b),f
  9558  0AE4  0DE8               	rlf	(___fldiv@b+1),f
  9559  0AE5  0DE9               	rlf	(___fldiv@b+2),f
  9560  0AE6  0DEA               	rlf	(___fldiv@b+3),f
  9561  0AE7  0DEB               	bsf	status, 5	;RP0=1, select bank1
  9562  0AE8  1683               	bcf	status, 6	;RP1=0, select bank1
  9563  0AE9  1303               	decfsz	(??___fldiv+0)^080h+0
  9564  0AEA  0BC3               	goto	u5915
  9565  0AEB  2AE1               	line	103
  9566                           	
  9567                           l4068:	
  9568  0AEC                     	btfss	(___fldiv@grs+3)^080h,(31)&7
  9569  0AEC  1FD2               	goto	u5921
  9570  0AED  2AEF               	goto	u5920
  9571  0AEE  2AF0               u5921:
  9572  0AEF                     	goto	l4072
  9573  0AEF  2AF4               u5920:
  9574  0AF0                     	line	104
  9575                           	
  9576                           l4070:	
  9577  0AF0                     	bcf	status, 5	;RP0=0, select bank0
  9578  0AF0  1283               	bcf	status, 6	;RP1=0, select bank0
  9579  0AF1  1303               	bsf	(___fldiv@b)+(0/8),(0)&7
  9580  0AF2  1468               	goto	l4072
  9581  0AF3  2AF4               	line	105
  9582                           	
  9583                           l883:	
  9584  0AF4                     	line	106
  9585                           	
  9586                           l4072:	
  9587  0AF4                     	movlw	01h
  9588  0AF4  3001               	bsf	status, 5	;RP0=1, select bank1
  9589  0AF5  1683               	bcf	status, 6	;RP1=0, select bank1
  9590  0AF6  1303               	movwf	(??___fldiv+0)^080h+0
  9591  0AF7  00C3               u5935:
  9592  0AF8                     	clrc
  9593  0AF8  1003               	rlf	(___fldiv@grs)^080h,f
  9594  0AF9  0DCF               	rlf	(___fldiv@grs+1)^080h,f
  9595  0AFA  0DD0               	rlf	(___fldiv@grs+2)^080h,f
  9596  0AFB  0DD1               	rlf	(___fldiv@grs+3)^080h,f
  9597  0AFC  0DD2               	decfsz	(??___fldiv+0)^080h+0
  9598  0AFD  0BC3               	goto	u5935
  9599  0AFE  2AF8               	goto	l4074
  9600  0AFF  2B00               	line	107
  9601                           	
  9602                           l882:	
  9603  0B00                     	line	112
  9604                           	
  9605                           l4074:	
  9606  0B00                     	bcf	status, 5	;RP0=0, select bank0
  9607  0B00  1283               	bcf	status, 6	;RP1=0, select bank0
  9608  0B01  1303               	movf	(___fldiv@a+3),w
  9609  0B02  0867               	bsf	status, 5	;RP0=1, select bank1
  9610  0B03  1683               	bcf	status, 6	;RP1=0, select bank1
  9611  0B04  1303               	subwf	(___fldiv@rem+3)^080h,w
  9612  0B05  024B               	skipz
  9613  0B06  1D03               	goto	u5945
  9614  0B07  2B1E               	bcf	status, 5	;RP0=0, select bank0
  9615  0B08  1283               	bcf	status, 6	;RP1=0, select bank0
  9616  0B09  1303               	movf	(___fldiv@a+2),w
  9617  0B0A  0866               	bsf	status, 5	;RP0=1, select bank1
  9618  0B0B  1683               	bcf	status, 6	;RP1=0, select bank1
  9619  0B0C  1303               	subwf	(___fldiv@rem+2)^080h,w
  9620  0B0D  024A               	skipz
  9621  0B0E  1D03               	goto	u5945
  9622  0B0F  2B1E               	bcf	status, 5	;RP0=0, select bank0
  9623  0B10  1283               	bcf	status, 6	;RP1=0, select bank0
  9624  0B11  1303               	movf	(___fldiv@a+1),w
  9625  0B12  0865               	bsf	status, 5	;RP0=1, select bank1
  9626  0B13  1683               	bcf	status, 6	;RP1=0, select bank1
  9627  0B14  1303               	subwf	(___fldiv@rem+1)^080h,w
  9628  0B15  0249               	skipz
  9629  0B16  1D03               	goto	u5945
  9630  0B17  2B1E               	bcf	status, 5	;RP0=0, select bank0
  9631  0B18  1283               	bcf	status, 6	;RP1=0, select bank0
  9632  0B19  1303               	movf	(___fldiv@a),w
  9633  0B1A  0864               	bsf	status, 5	;RP0=1, select bank1
  9634  0B1B  1683               	bcf	status, 6	;RP1=0, select bank1
  9635  0B1C  1303               	subwf	(___fldiv@rem)^080h,w
  9636  0B1D  0248               u5945:
  9637  0B1E                     	skipc
  9638  0B1E  1C03               	goto	u5941
  9639  0B1F  2B21               	goto	u5940
  9640  0B20  2B22               u5941:
  9641  0B21                     	goto	l4080
  9642  0B21  2B4C               u5940:
  9643  0B22                     	line	115
  9644                           	
  9645                           l4076:	
  9646  0B22                     	bsf	(___fldiv@grs)^080h+(30/8),(30)&7
  9647  0B22  1752               	line	116
  9648                           	
  9649                           l4078:	
  9650  0B23                     	bcf	status, 5	;RP0=0, select bank0
  9651  0B23  1283               	bcf	status, 6	;RP1=0, select bank0
  9652  0B24  1303               	movf	(___fldiv@a),w
  9653  0B25  0864               	bsf	status, 5	;RP0=1, select bank1
  9654  0B26  1683               	bcf	status, 6	;RP1=0, select bank1
  9655  0B27  1303               	subwf	(___fldiv@rem)^080h,f
  9656  0B28  02C8               	bcf	status, 5	;RP0=0, select bank0
  9657  0B29  1283               	bcf	status, 6	;RP1=0, select bank0
  9658  0B2A  1303               	movf	(___fldiv@a+1),w
  9659  0B2B  0865               	skipc
  9660  0B2C  1C03               	incfsz	(___fldiv@a+1),w
  9661  0B2D  0F65               	goto	u5955
  9662  0B2E  2B30               	goto	u5956
  9663  0B2F  2B33               u5955:
  9664  0B30                     	bsf	status, 5	;RP0=1, select bank1
  9665  0B30  1683               	bcf	status, 6	;RP1=0, select bank1
  9666  0B31  1303               	subwf	(___fldiv@rem+1)^080h,f
  9667  0B32  02C9               u5956:
  9668  0B33                     	bcf	status, 5	;RP0=0, select bank0
  9669  0B33  1283               	bcf	status, 6	;RP1=0, select bank0
  9670  0B34  1303               	movf	(___fldiv@a+2),w
  9671  0B35  0866               	skipc
  9672  0B36  1C03               	incfsz	(___fldiv@a+2),w
  9673  0B37  0F66               	goto	u5957
  9674  0B38  2B3A               	goto	u5958
  9675  0B39  2B3D               u5957:
  9676  0B3A                     	bsf	status, 5	;RP0=1, select bank1
  9677  0B3A  1683               	bcf	status, 6	;RP1=0, select bank1
  9678  0B3B  1303               	subwf	(___fldiv@rem+2)^080h,f
  9679  0B3C  02CA               u5958:
  9680  0B3D                     	bcf	status, 5	;RP0=0, select bank0
  9681  0B3D  1283               	bcf	status, 6	;RP1=0, select bank0
  9682  0B3E  1303               	movf	(___fldiv@a+3),w
  9683  0B3F  0867               	skipc
  9684  0B40  1C03               	incfsz	(___fldiv@a+3),w
  9685  0B41  0F67               	goto	u5959
  9686  0B42  2B44               	goto	u5950
  9687  0B43  2B47               u5959:
  9688  0B44                     	bsf	status, 5	;RP0=1, select bank1
  9689  0B44  1683               	bcf	status, 6	;RP1=0, select bank1
  9690  0B45  1303               	subwf	(___fldiv@rem+3)^080h,f
  9691  0B46  02CB               u5950:
  9692  0B47                     	bcf	status, 5	;RP0=0, select bank0
  9693  0B47  1283               	bcf	status, 6	;RP1=0, select bank0
  9694  0B48  1303               	bsf	status, 5	;RP0=1, select bank1
  9695  0B49  1683               	bcf	status, 6	;RP1=0, select bank1
  9696  0B4A  1303               
  9697                           	goto	l4080
  9698  0B4B  2B4C               	line	117
  9699                           	
  9700                           l884:	
  9701  0B4C                     	line	118
  9702                           	
  9703                           l4080:	
  9704  0B4C                     	movlw	low(01h)
  9705  0B4C  3001               	movwf	(??___fldiv+0)^080h+0
  9706  0B4D  00C3               	movf	(??___fldiv+0)^080h+0,w
  9707  0B4E  0843               	addwf	(___fldiv@aexp)^080h,f
  9708  0B4F  07D4               	goto	l4082
  9709  0B50  2B51               	line	119
  9710                           	
  9711                           l880:	
  9712  0B51                     	line	97
  9713                           	
  9714                           l4082:	
  9715  0B51                     	movlw	low(01Ah)
  9716  0B51  301A               	subwf	(___fldiv@aexp)^080h,w
  9717  0B52  0254               	skipc
  9718  0B53  1C03               	goto	u5961
  9719  0B54  2B56               	goto	u5960
  9720  0B55  2B57               u5961:
  9721  0B56                     	goto	l4064
  9722  0B56  2AD1               u5960:
  9723  0B57                     	goto	l4084
  9724  0B57  2B58               	
  9725                           l885:	
  9726  0B58                     	line	122
  9727                           	
  9728                           l4084:	
  9729  0B58                     	movf	(___fldiv@rem+3)^080h,w
  9730  0B58  084B               	iorwf	(___fldiv@rem+2)^080h,w
  9731  0B59  044A               	iorwf	(___fldiv@rem+1)^080h,w
  9732  0B5A  0449               	iorwf	(___fldiv@rem)^080h,w
  9733  0B5B  0448               	skipnz
  9734  0B5C  1903               	goto	u5971
  9735  0B5D  2B5F               	goto	u5970
  9736  0B5E  2B60               u5971:
  9737  0B5F                     	goto	l4098
  9738  0B5F  2B8C               u5970:
  9739  0B60                     	line	123
  9740                           	
  9741                           l4086:	
  9742  0B60                     	bsf	(___fldiv@grs)^080h+(0/8),(0)&7
  9743  0B60  144F               	goto	l4098
  9744  0B61  2B8C               	line	124
  9745                           	
  9746                           l886:	
  9747  0B62                     	line	127
  9748                           	goto	l4098
  9749  0B62  2B8C               	
  9750                           l888:	
  9751  0B63                     	line	128
  9752                           	
  9753                           l4088:	
  9754  0B63                     	movlw	01h
  9755  0B63  3001               	bsf	status, 5	;RP0=1, select bank1
  9756  0B64  1683               	bcf	status, 6	;RP1=0, select bank1
  9757  0B65  1303               	movwf	(??___fldiv+0)^080h+0
  9758  0B66  00C3               u5985:
  9759  0B67                     	clrc
  9760  0B67  1003               	bcf	status, 5	;RP0=0, select bank0
  9761  0B68  1283               	bcf	status, 6	;RP1=0, select bank0
  9762  0B69  1303               	rlf	(___fldiv@b),f
  9763  0B6A  0DE8               	rlf	(___fldiv@b+1),f
  9764  0B6B  0DE9               	rlf	(___fldiv@b+2),f
  9765  0B6C  0DEA               	rlf	(___fldiv@b+3),f
  9766  0B6D  0DEB               	bsf	status, 5	;RP0=1, select bank1
  9767  0B6E  1683               	bcf	status, 6	;RP1=0, select bank1
  9768  0B6F  1303               	decfsz	(??___fldiv+0)^080h+0
  9769  0B70  0BC3               	goto	u5985
  9770  0B71  2B67               	line	129
  9771                           	
  9772                           l4090:	
  9773  0B72                     	btfss	(___fldiv@grs+3)^080h,(31)&7
  9774  0B72  1FD2               	goto	u5991
  9775  0B73  2B75               	goto	u5990
  9776  0B74  2B76               u5991:
  9777  0B75                     	goto	l4094
  9778  0B75  2B7A               u5990:
  9779  0B76                     	line	130
  9780                           	
  9781                           l4092:	
  9782  0B76                     	bcf	status, 5	;RP0=0, select bank0
  9783  0B76  1283               	bcf	status, 6	;RP1=0, select bank0
  9784  0B77  1303               	bsf	(___fldiv@b)+(0/8),(0)&7
  9785  0B78  1468               	goto	l4094
  9786  0B79  2B7A               	line	131
  9787                           	
  9788                           l889:	
  9789  0B7A                     	line	132
  9790                           	
  9791                           l4094:	
  9792  0B7A                     	movlw	01h
  9793  0B7A  3001               	bsf	status, 5	;RP0=1, select bank1
  9794  0B7B  1683               	bcf	status, 6	;RP1=0, select bank1
  9795  0B7C  1303               	movwf	(??___fldiv+0)^080h+0
  9796  0B7D  00C3               u6005:
  9797  0B7E                     	clrc
  9798  0B7E  1003               	rlf	(___fldiv@grs)^080h,f
  9799  0B7F  0DCF               	rlf	(___fldiv@grs+1)^080h,f
  9800  0B80  0DD0               	rlf	(___fldiv@grs+2)^080h,f
  9801  0B81  0DD1               	rlf	(___fldiv@grs+3)^080h,f
  9802  0B82  0DD2               	decfsz	(??___fldiv+0)^080h+0
  9803  0B83  0BC3               	goto	u6005
  9804  0B84  2B7E               	line	133
  9805                           	
  9806                           l4096:	
  9807  0B85                     	movlw	0FFh
  9808  0B85  30FF               	addwf	(___fldiv@new_exp)^080h,f
  9809  0B86  07CD               	skipnc
  9810  0B87  1803               	incf	(___fldiv@new_exp+1)^080h,f
  9811  0B88  0ACE               	movlw	0FFh
  9812  0B89  30FF               	addwf	(___fldiv@new_exp+1)^080h,f
  9813  0B8A  07CE               	goto	l4098
  9814  0B8B  2B8C               	line	134
  9815                           	
  9816                           l887:	
  9817  0B8C                     	line	127
  9818                           	
  9819                           l4098:	
  9820  0B8C                     	bcf	status, 5	;RP0=0, select bank0
  9821  0B8C  1283               	bcf	status, 6	;RP1=0, select bank0
  9822  0B8D  1303               	btfss	(___fldiv@b+2),(23)&7
  9823  0B8E  1FEA               	goto	u6011
  9824  0B8F  2B91               	goto	u6010
  9825  0B90  2B92               u6011:
  9826  0B91                     	goto	l4088
  9827  0B91  2B63               u6010:
  9828  0B92                     	goto	l4100
  9829  0B92  2B93               	
  9830                           l890:	
  9831  0B93                     	line	139
  9832                           	
  9833                           l4100:	
  9834  0B93                     	bsf	status, 5	;RP0=1, select bank1
  9835  0B93  1683               	bcf	status, 6	;RP1=0, select bank1
  9836  0B94  1303               	clrf	(___fldiv@aexp)^080h
  9837  0B95  01D4               	line	140
  9838                           	
  9839                           l4102:	
  9840  0B96                     	btfss	(___fldiv@grs+3)^080h,(31)&7
  9841  0B96  1FD2               	goto	u6021
  9842  0B97  2B99               	goto	u6020
  9843  0B98  2B9A               u6021:
  9844  0B99                     	goto	l4110
  9845  0B99  2BBE               u6020:
  9846  0B9A                     	line	141
  9847                           	
  9848                           l4104:	
  9849  0B9A                     	movlw	0FFh
  9850  0B9A  30FF               	andwf	(___fldiv@grs)^080h,w
  9851  0B9B  054F               	movwf	(??___fldiv+0)^080h+0
  9852  0B9C  00C3               	movlw	0FFh
  9853  0B9D  30FF               	andwf	(___fldiv@grs+1)^080h,w
  9854  0B9E  0550               	movwf	((??___fldiv+0)^080h+0+1)
  9855  0B9F  00C4               	movlw	0FFh
  9856  0BA0  30FF               	andwf	(___fldiv@grs+2)^080h,w
  9857  0BA1  0551               	movwf	((??___fldiv+0)^080h+0+2)
  9858  0BA2  00C5               	movlw	07Fh
  9859  0BA3  307F               	andwf	(___fldiv@grs+3)^080h,w
  9860  0BA4  0552               	movwf	((??___fldiv+0)^080h+0+3)
  9861  0BA5  00C6               	movf	3+(??___fldiv+0)^080h+0,w
  9862  0BA6  0846               	iorwf	2+(??___fldiv+0)^080h+0,w
  9863  0BA7  0445               	iorwf	1+(??___fldiv+0)^080h+0,w
  9864  0BA8  0444               	iorwf	0+(??___fldiv+0)^080h+0,w
  9865  0BA9  0443               	skipnz
  9866  0BAA  1903               	goto	u6031
  9867  0BAB  2BAD               	goto	u6030
  9868  0BAC  2BAE               u6031:
  9869  0BAD                     	goto	l892
  9870  0BAD  2BB1               u6030:
  9871  0BAE                     	line	142
  9872                           	
  9873                           l4106:	
  9874  0BAE                     	clrf	(___fldiv@aexp)^080h
  9875  0BAE  01D4               	incf	(___fldiv@aexp)^080h,f
  9876  0BAF  0AD4               	line	143
  9877                           	goto	l4110
  9878  0BB0  2BBE               	line	144
  9879                           	
  9880                           l892:	
  9881  0BB1                     	line	145
  9882                           	bcf	status, 5	;RP0=0, select bank0
  9883  0BB1  1283               	bcf	status, 6	;RP1=0, select bank0
  9884  0BB2  1303               	btfss	(___fldiv@b),(0)&7
  9885  0BB3  1C68               	goto	u6041
  9886  0BB4  2BB6               	goto	u6040
  9887  0BB5  2BB7               u6041:
  9888  0BB6                     	goto	l4110
  9889  0BB6  2BBE               u6040:
  9890  0BB7                     	line	146
  9891                           	
  9892                           l4108:	
  9893  0BB7                     	bsf	status, 5	;RP0=1, select bank1
  9894  0BB7  1683               	bcf	status, 6	;RP1=0, select bank1
  9895  0BB8  1303               	clrf	(___fldiv@aexp)^080h
  9896  0BB9  01D4               	incf	(___fldiv@aexp)^080h,f
  9897  0BBA  0AD4               	goto	l4110
  9898  0BBB  2BBE               	line	147
  9899                           	
  9900                           l894:	
  9901  0BBC                     	goto	l4110
  9902  0BBC  2BBE               	line	148
  9903                           	
  9904                           l893:	
  9905  0BBD                     	goto	l4110
  9906  0BBD  2BBE               	line	149
  9907                           	
  9908                           l891:	
  9909  0BBE                     	line	150
  9910                           	
  9911                           l4110:	
  9912  0BBE                     	bsf	status, 5	;RP0=1, select bank1
  9913  0BBE  1683               	bcf	status, 6	;RP1=0, select bank1
  9914  0BBF  1303               	movf	((___fldiv@aexp)^080h),w
  9915  0BC0  0854               	btfsc	status,2
  9916  0BC1  1903               	goto	u6051
  9917  0BC2  2BC4               	goto	u6050
  9918  0BC3  2BC5               u6051:
  9919  0BC4                     	goto	l4120
  9920  0BC4  2C18               u6050:
  9921  0BC5                     	line	151
  9922                           	
  9923                           l4112:	
  9924  0BC5                     	movlw	01h
  9925  0BC5  3001               	bcf	status, 5	;RP0=0, select bank0
  9926  0BC6  1283               	bcf	status, 6	;RP1=0, select bank0
  9927  0BC7  1303               	addwf	(___fldiv@b),f
  9928  0BC8  07E8               	movlw	0
  9929  0BC9  3000               	skipnc
  9930  0BCA  1803               movlw 1
  9931  0BCB  3001               	addwf	(___fldiv@b+1),f
  9932  0BCC  07E9               	movlw	0
  9933  0BCD  3000               	skipnc
  9934  0BCE  1803               movlw 1
  9935  0BCF  3001               	addwf	(___fldiv@b+2),f
  9936  0BD0  07EA               	movlw	0
  9937  0BD1  3000               	skipnc
  9938  0BD2  1803               movlw 1
  9939  0BD3  3001               	addwf	(___fldiv@b+3),f
  9940  0BD4  07EB               	line	152
  9941                           	
  9942                           l4114:	
  9943  0BD5                     	btfss	(___fldiv@b+3),(24)&7
  9944  0BD5  1C6B               	goto	u6061
  9945  0BD6  2BD8               	goto	u6060
  9946  0BD7  2BD9               u6061:
  9947  0BD8                     	goto	l4120
  9948  0BD8  2C18               u6060:
  9949  0BD9                     	line	153
  9950                           	
  9951                           l4116:	
  9952  0BD9                     	movf	(___fldiv@b),w
  9953  0BD9  0868               	bsf	status, 5	;RP0=1, select bank1
  9954  0BDA  1683               	bcf	status, 6	;RP1=0, select bank1
  9955  0BDB  1303               	movwf	(??___fldiv+0)^080h+0
  9956  0BDC  00C3               	bcf	status, 5	;RP0=0, select bank0
  9957  0BDD  1283               	bcf	status, 6	;RP1=0, select bank0
  9958  0BDE  1303               	movf	(___fldiv@b+1),w
  9959  0BDF  0869               	bsf	status, 5	;RP0=1, select bank1
  9960  0BE0  1683               	bcf	status, 6	;RP1=0, select bank1
  9961  0BE1  1303               	movwf	((??___fldiv+0)^080h+0+1)
  9962  0BE2  00C4               	bcf	status, 5	;RP0=0, select bank0
  9963  0BE3  1283               	bcf	status, 6	;RP1=0, select bank0
  9964  0BE4  1303               	movf	(___fldiv@b+2),w
  9965  0BE5  086A               	bsf	status, 5	;RP0=1, select bank1
  9966  0BE6  1683               	bcf	status, 6	;RP1=0, select bank1
  9967  0BE7  1303               	movwf	((??___fldiv+0)^080h+0+2)
  9968  0BE8  00C5               	bcf	status, 5	;RP0=0, select bank0
  9969  0BE9  1283               	bcf	status, 6	;RP1=0, select bank0
  9970  0BEA  1303               	movf	(___fldiv@b+3),w
  9971  0BEB  086B               	bsf	status, 5	;RP0=1, select bank1
  9972  0BEC  1683               	bcf	status, 6	;RP1=0, select bank1
  9973  0BED  1303               	movwf	((??___fldiv+0)^080h+0+3)
  9974  0BEE  00C6               	movlw	01h
  9975  0BEF  3001               	movwf	(??___fldiv+4)^080h+0
  9976  0BF0  00C7               u6075:
  9977  0BF1                     	rlf	(??___fldiv+0)^080h+3,w
  9978  0BF1  0D46               	rrf	(??___fldiv+0)^080h+3,f
  9979  0BF2  0CC6               	rrf	(??___fldiv+0)^080h+2,f
  9980  0BF3  0CC5               	rrf	(??___fldiv+0)^080h+1,f
  9981  0BF4  0CC4               	rrf	(??___fldiv+0)^080h+0,f
  9982  0BF5  0CC3               u6070:
  9983  0BF6                     	decfsz	(??___fldiv+4)^080h+0,f
  9984  0BF6  0BC7               	goto	u6075
  9985  0BF7  2BF1               	movf	3+(??___fldiv+0)^080h+0,w
  9986  0BF8  0846               	bcf	status, 5	;RP0=0, select bank0
  9987  0BF9  1283               	bcf	status, 6	;RP1=0, select bank0
  9988  0BFA  1303               	movwf	(___fldiv@b+3)
  9989  0BFB  00EB               	bsf	status, 5	;RP0=1, select bank1
  9990  0BFC  1683               	bcf	status, 6	;RP1=0, select bank1
  9991  0BFD  1303               	movf	2+(??___fldiv+0)^080h+0,w
  9992  0BFE  0845               	bcf	status, 5	;RP0=0, select bank0
  9993  0BFF  1283               	bcf	status, 6	;RP1=0, select bank0
  9994  0C00  1303               	movwf	(___fldiv@b+2)
  9995  0C01  00EA               	bsf	status, 5	;RP0=1, select bank1
  9996  0C02  1683               	bcf	status, 6	;RP1=0, select bank1
  9997  0C03  1303               	movf	1+(??___fldiv+0)^080h+0,w
  9998  0C04  0844               	bcf	status, 5	;RP0=0, select bank0
  9999  0C05  1283               	bcf	status, 6	;RP1=0, select bank0
 10000  0C06  1303               	movwf	(___fldiv@b+1)
 10001  0C07  00E9               	bsf	status, 5	;RP0=1, select bank1
 10002  0C08  1683               	bcf	status, 6	;RP1=0, select bank1
 10003  0C09  1303               	movf	0+(??___fldiv+0)^080h+0,w
 10004  0C0A  0843               	bcf	status, 5	;RP0=0, select bank0
 10005  0C0B  1283               	bcf	status, 6	;RP1=0, select bank0
 10006  0C0C  1303               	movwf	(___fldiv@b)
 10007  0C0D  00E8               
 10008                           	line	154
 10009                           	
 10010                           l4118:	
 10011  0C0E                     	movlw	01h
 10012  0C0E  3001               	bsf	status, 5	;RP0=1, select bank1
 10013  0C0F  1683               	bcf	status, 6	;RP1=0, select bank1
 10014  0C10  1303               	addwf	(___fldiv@new_exp)^080h,f
 10015  0C11  07CD               	skipnc
 10016  0C12  1803               	incf	(___fldiv@new_exp+1)^080h,f
 10017  0C13  0ACE               	movlw	0
 10018  0C14  3000               	addwf	(___fldiv@new_exp+1)^080h,f
 10019  0C15  07CE               	goto	l4120
 10020  0C16  2C18               	line	155
 10021                           	
 10022                           l896:	
 10023  0C17                     	goto	l4120
 10024  0C17  2C18               	line	156
 10025                           	
 10026                           l895:	
 10027  0C18                     	line	159
 10028                           	
 10029                           l4120:	
 10030  0C18                     	bsf	status, 5	;RP0=1, select bank1
 10031  0C18  1683               	bcf	status, 6	;RP1=0, select bank1
 10032  0C19  1303               	movf	(___fldiv@new_exp+1)^080h,w
 10033  0C1A  084E               	xorlw	80h
 10034  0C1B  3A80               	movwf	btemp+1
 10035  0C1C  00FF               	movlw	(0)^80h
 10036  0C1D  3080               	subwf	btemp+1,w
 10037  0C1E  027F               	skipz
 10038  0C1F  1D03               	goto	u6085
 10039  0C20  2C23               	movlw	0FFh
 10040  0C21  30FF               	subwf	(___fldiv@new_exp)^080h,w
 10041  0C22  024D               u6085:
 10042  0C23                     
 10043                           	skipc
 10044  0C23  1C03               	goto	u6081
 10045  0C24  2C26               	goto	u6080
 10046  0C25  2C27               u6081:
 10047  0C26                     	goto	l4124
 10048  0C26  2C38               u6080:
 10049  0C27                     	line	160
 10050                           	
 10051                           l4122:	
 10052  0C27                     	movlw	0FFh
 10053  0C27  30FF               	bsf	status, 5	;RP0=1, select bank1
 10054  0C28  1683               	bcf	status, 6	;RP1=0, select bank1
 10055  0C29  1303               	movwf	(___fldiv@new_exp)^080h
 10056  0C2A  00CD               	movlw	0
 10057  0C2B  3000               	movwf	((___fldiv@new_exp)^080h)+1
 10058  0C2C  00CE               	line	161
 10059                           	movlw	high highword(0)
 10060  0C2D  3000               	bcf	status, 5	;RP0=0, select bank0
 10061  0C2E  1283               	bcf	status, 6	;RP1=0, select bank0
 10062  0C2F  1303               	movwf	(___fldiv@b+3)
 10063  0C30  00EB               	movlw	low highword(0)
 10064  0C31  3000               	movwf	(___fldiv@b+2)
 10065  0C32  00EA               	movlw	high(0)
 10066  0C33  3000               	movwf	(___fldiv@b+1)
 10067  0C34  00E9               	movlw	low(0)
 10068  0C35  3000               	movwf	(___fldiv@b)
 10069  0C36  00E8               
 10070                           	goto	l4124
 10071  0C37  2C38               	line	162
 10072                           	
 10073                           l897:	
 10074  0C38                     	line	165
 10075                           	
 10076                           l4124:	
 10077  0C38                     	bsf	status, 5	;RP0=1, select bank1
 10078  0C38  1683               	bcf	status, 6	;RP1=0, select bank1
 10079  0C39  1303               	movf	(___fldiv@new_exp+1)^080h,w
 10080  0C3A  084E               	xorlw	80h
 10081  0C3B  3A80               	movwf	btemp+1
 10082  0C3C  00FF               	movlw	(0)^80h
 10083  0C3D  3080               	subwf	btemp+1,w
 10084  0C3E  027F               	skipz
 10085  0C3F  1D03               	goto	u6095
 10086  0C40  2C43               	movlw	01h
 10087  0C41  3001               	subwf	(___fldiv@new_exp)^080h,w
 10088  0C42  024D               u6095:
 10089  0C43                     
 10090                           	skipnc
 10091  0C43  1803               	goto	u6091
 10092  0C44  2C46               	goto	u6090
 10093  0C45  2C47               u6091:
 10094  0C46                     	goto	l898
 10095  0C46  2C58               u6090:
 10096  0C47                     	line	166
 10097                           	
 10098                           l4126:	
 10099  0C47                     	bsf	status, 5	;RP0=1, select bank1
 10100  0C47  1683               	bcf	status, 6	;RP1=0, select bank1
 10101  0C48  1303               	clrf	(___fldiv@new_exp)^080h
 10102  0C49  01CD               	clrf	(___fldiv@new_exp+1)^080h
 10103  0C4A  01CE               	line	167
 10104                           	
 10105                           l4128:	
 10106  0C4B                     	movlw	high highword(0)
 10107  0C4B  3000               	bcf	status, 5	;RP0=0, select bank0
 10108  0C4C  1283               	bcf	status, 6	;RP1=0, select bank0
 10109  0C4D  1303               	movwf	(___fldiv@b+3)
 10110  0C4E  00EB               	movlw	low highword(0)
 10111  0C4F  3000               	movwf	(___fldiv@b+2)
 10112  0C50  00EA               	movlw	high(0)
 10113  0C51  3000               	movwf	(___fldiv@b+1)
 10114  0C52  00E9               	movlw	low(0)
 10115  0C53  3000               	movwf	(___fldiv@b)
 10116  0C54  00E8               
 10117                           	line	169
 10118                           	
 10119                           l4130:	
 10120  0C55                     	bsf	status, 5	;RP0=1, select bank1
 10121  0C55  1683               	bcf	status, 6	;RP1=0, select bank1
 10122  0C56  1303               	clrf	(___fldiv@sign)^080h
 10123  0C57  01CC               	line	170
 10124                           	
 10125                           l898:	
 10126  0C58                     	line	173
 10127                           	bsf	status, 5	;RP0=1, select bank1
 10128  0C58  1683               	bcf	status, 6	;RP1=0, select bank1
 10129  0C59  1303               	movf	(___fldiv@new_exp)^080h,w
 10130  0C5A  084D               	movwf	(??___fldiv+0)^080h+0
 10131  0C5B  00C3               	movf	(??___fldiv+0)^080h+0,w
 10132  0C5C  0843               	movwf	(___fldiv@bexp)^080h
 10133  0C5D  00D3               	line	175
 10134                           	
 10135                           l4132:	
 10136  0C5E                     	btfss	(___fldiv@bexp)^080h,(0)&7
 10137  0C5E  1C53               	goto	u6101
 10138  0C5F  2C61               	goto	u6100
 10139  0C60  2C62               u6101:
 10140  0C61                     	goto	l4136
 10141  0C61  2C66               u6100:
 10142  0C62                     	line	176
 10143                           	
 10144                           l4134:	
 10145  0C62                     	bcf	status, 5	;RP0=0, select bank0
 10146  0C62  1283               	bcf	status, 6	;RP1=0, select bank0
 10147  0C63  1303               	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
 10148  0C64  17EA               	line	177
 10149                           	goto	l900
 10150  0C65  2C6E               	line	179
 10151                           	
 10152                           l899:	
 10153  0C66                     	line	180
 10154                           	
 10155                           l4136:	
 10156  0C66                     	movlw	low(07Fh)
 10157  0C66  307F               	bsf	status, 5	;RP0=1, select bank1
 10158  0C67  1683               	bcf	status, 6	;RP1=0, select bank1
 10159  0C68  1303               	movwf	(??___fldiv+0)^080h+0
 10160  0C69  00C3               	movf	(??___fldiv+0)^080h+0,w
 10161  0C6A  0843               	bcf	status, 5	;RP0=0, select bank0
 10162  0C6B  1283               	bcf	status, 6	;RP1=0, select bank0
 10163  0C6C  1303               	andwf	0+(___fldiv@b)+02h,f
 10164  0C6D  05EA               	line	181
 10165                           	
 10166                           l900:	
 10167  0C6E                     	line	182
 10168                           	bsf	status, 5	;RP0=1, select bank1
 10169  0C6E  1683               	bcf	status, 6	;RP1=0, select bank1
 10170  0C6F  1303               	movf	(___fldiv@bexp)^080h,w
 10171  0C70  0853               	movwf	(??___fldiv+0)^080h+0
 10172  0C71  00C3               	clrc
 10173  0C72  1003               	rrf	(??___fldiv+0)^080h+0,w
 10174  0C73  0C43               	movwf	(??___fldiv+1)^080h+0
 10175  0C74  00C4               	movf	(??___fldiv+1)^080h+0,w
 10176  0C75  0844               	bcf	status, 5	;RP0=0, select bank0
 10177  0C76  1283               	bcf	status, 6	;RP1=0, select bank0
 10178  0C77  1303               	movwf	0+(___fldiv@b)+03h
 10179  0C78  00EB               	line	183
 10180                           	bsf	status, 5	;RP0=1, select bank1
 10181  0C79  1683               	bcf	status, 6	;RP1=0, select bank1
 10182  0C7A  1303               	movf	(___fldiv@sign)^080h,w
 10183  0C7B  084C               	movwf	(??___fldiv+0)^080h+0
 10184  0C7C  00C3               	movf	(??___fldiv+0)^080h+0,w
 10185  0C7D  0843               	bcf	status, 5	;RP0=0, select bank0
 10186  0C7E  1283               	bcf	status, 6	;RP1=0, select bank0
 10187  0C7F  1303               	iorwf	0+(___fldiv@b)+03h,f
 10188  0C80  04EB               	line	184
 10189                           	
 10190                           l4138:	
 10191  0C81                     	movf	(___fldiv@b+3),w
 10192  0C81  086B               	movwf	(?___fldiv+3)
 10193  0C82  00E7               	movf	(___fldiv@b+2),w
 10194  0C83  086A               	movwf	(?___fldiv+2)
 10195  0C84  00E6               	movf	(___fldiv@b+1),w
 10196  0C85  0869               	movwf	(?___fldiv+1)
 10197  0C86  00E5               	movf	(___fldiv@b),w
 10198  0C87  0868               	movwf	(?___fldiv)
 10199  0C88  00E4               
 10200                           	goto	l878
 10201  0C89  2C8A               	
 10202                           l4140:	
 10203  0C8A                     	line	185
 10204                           	
 10205                           l878:	
 10206  0C8A                     	return
 10207  0C8A  0008               	opt stack 0
 10208                           GLOBAL	__end_of___fldiv
 10209                           	__end_of___fldiv:
 10210  0C8B                     	signat	___fldiv,8316
 10211                           	global	___fladd
 10212                           
 10213 ;; *************** function ___fladd *****************
 10214 ;; Defined at:
 10215 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  b               4   18[BANK0 ] unsigned char 
 10218 ;;  a               4   22[BANK0 ] unsigned char 
 10219 ;; Auto vars:     Size  Location     Type
 10220 ;;  grs             1   41[BANK0 ] unsigned char 
 10221 ;;  bexp            1   40[BANK0 ] unsigned char 
 10222 ;;  aexp            1   39[BANK0 ] unsigned char 
 10223 ;;  signs           1   38[BANK0 ] unsigned char 
 10224 ;; Return value:  Size  Location     Type
 10225 ;;                  4   18[BANK0 ] unsigned char 
 10226 ;; Registers used:
 10227 ;;		wreg, status,2, status,0, btemp+1
 10228 ;; Tracked objects:
 10229 ;;		On entry : 0/0
 10230 ;;		On exit  : 0/0
 10231 ;;		Unchanged: 0/0
 10232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10233 ;;      Params:         0       8       0       0       0
 10234 ;;      Locals:         0       4       0       0       0
 10235 ;;      Temps:          0      12       0       0       0
 10236 ;;      Totals:         0      24       0       0       0
 10237 ;;Total ram usage:       24 bytes
 10238 ;; Hardware stack levels used:    1
 10239 ;; Hardware stack levels required when called:    2
 10240 ;; This function calls:
 10241 ;;		Nothing
 10242 ;; This function is called by:
 10243 ;;		_main
 10244 ;; This function uses a non-reentrant model
 10245 ;;
 10246                           psect	text22,local,class=CODE,delta=2,merge=1,group=1
 10247                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 10248                           	line	10
 10249                           global __ptext22
 10250                           __ptext22:	;psect for function ___fladd
 10251  1544                     psect	text22
 10252                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
 10253                           	line	10
 10254                           	global	__size_of___fladd
 10255                           	__size_of___fladd	equ	__end_of___fladd-___fladd
 10256  02BC                     	
 10257                           ___fladd:	
 10258  1544                     ;incstack = 0
 10259                           	opt	stack 5
 10260                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
 10261                           	line	21
 10262                           	
 10263                           l2790:	
 10264  1544                     	bcf	status, 5	;RP0=0, select bank0
 10265  1544  1283               	bcf	status, 6	;RP1=0, select bank0
 10266  1545  1303               	movf	0+(___fladd@b)+03h,w
 10267  1546  0835               	andlw	080h
 10268  1547  3980               	movwf	(??___fladd+0)+0
 10269  1548  00BA               	movf	(??___fladd+0)+0,w
 10270  1549  083A               	movwf	(___fladd@signs)
 10271  154A  00C6               	line	22
 10272                           	
 10273                           l2792:	
 10274  154B                     	movf	0+(___fladd@b)+03h,w
 10275  154B  0835               	movwf	(??___fladd+0)+0
 10276  154C  00BA               	addwf	(??___fladd+0)+0,w
 10277  154D  073A               	movwf	(??___fladd+1)+0
 10278  154E  00BB               	movf	(??___fladd+1)+0,w
 10279  154F  083B               	movwf	(___fladd@bexp)
 10280  1550  00C8               	line	23
 10281                           	
 10282                           l2794:	
 10283  1551                     	btfss	0+(___fladd@b)+02h,(7)&7
 10284  1551  1FB4               	goto	u3401
 10285  1552  2D54               	goto	u3400
 10286  1553  2D55               u3401:
 10287  1554                     	goto	l2798
 10288  1554  2D57               u3400:
 10289  1555                     	line	24
 10290                           	
 10291                           l2796:	
 10292  1555                     	bsf	(___fladd@bexp)+(0/8),(0)&7
 10293  1555  1448               	goto	l2798
 10294  1556  2D57               	line	25
 10295                           	
 10296                           l812:	
 10297  1557                     	line	28
 10298                           	
 10299                           l2798:	
 10300  1557                     	movf	((___fladd@bexp)),w
 10301  1557  0848               	btfsc	status,2
 10302  1558  1903               	goto	u3411
 10303  1559  2D5B               	goto	u3410
 10304  155A  2D5C               u3411:
 10305  155B                     	goto	l2808
 10306  155B  2D6D               u3410:
 10307  155C                     	line	30
 10308                           	
 10309                           l2800:	
 10310  155C                     		incf	((___fladd@bexp)),w
 10311  155C  0A48               	btfss	status,2
 10312  155D  1D03               	goto	u3421
 10313  155E  2D60               	goto	u3420
 10314  155F  2D61               u3421:
 10315  1560                     	goto	l2804
 10316  1560  2D6A               u3420:
 10317  1561                     	line	32
 10318                           	
 10319                           l2802:	
 10320  1561                     	movlw	0x0
 10321  1561  3000               	movwf	(___fladd@b+3)
 10322  1562  00B5               	movlw	0x0
 10323  1563  3000               	movwf	(___fladd@b+2)
 10324  1564  00B4               	movlw	0x0
 10325  1565  3000               	movwf	(___fladd@b+1)
 10326  1566  00B3               	movlw	0x0
 10327  1567  3000               	movwf	(___fladd@b)
 10328  1568  00B2               
 10329                           	goto	l2804
 10330  1569  2D6A               	line	33
 10331                           	
 10332                           l814:	
 10333  156A                     	line	35
 10334                           	
 10335                           l2804:	
 10336  156A                     	bsf	(___fladd@b)+(23/8),(23)&7
 10337  156A  17B4               	line	37
 10338                           	
 10339                           l2806:	
 10340  156B                     	clrf	0+(___fladd@b)+03h
 10341  156B  01B5               	line	38
 10342                           	goto	l2810
 10343  156C  2D76               	line	39
 10344                           	
 10345                           l813:	
 10346  156D                     	line	41
 10347                           	
 10348                           l2808:	
 10349  156D                     	movlw	0x0
 10350  156D  3000               	movwf	(___fladd@b+3)
 10351  156E  00B5               	movlw	0x0
 10352  156F  3000               	movwf	(___fladd@b+2)
 10353  1570  00B4               	movlw	0x0
 10354  1571  3000               	movwf	(___fladd@b+1)
 10355  1572  00B3               	movlw	0x0
 10356  1573  3000               	movwf	(___fladd@b)
 10357  1574  00B2               
 10358                           	goto	l2810
 10359  1575  2D76               	line	42
 10360                           	
 10361                           l815:	
 10362  1576                     	line	44
 10363                           	
 10364                           l2810:	
 10365  1576                     	movf	0+(___fladd@a)+03h,w
 10366  1576  0839               	andlw	080h
 10367  1577  3980               	movwf	(??___fladd+0)+0
 10368  1578  00BA               	movf	(??___fladd+0)+0,w
 10369  1579  083A               	movwf	(___fladd@aexp)
 10370  157A  00C7               	line	46
 10371                           	
 10372                           l2812:	
 10373  157B                     	movf	(___fladd@aexp),w
 10374  157B  0847               	xorwf	(___fladd@signs),w
 10375  157C  0646               	skipnz
 10376  157D  1903               	goto	u3431
 10377  157E  2D80               	goto	u3430
 10378  157F  2D81               u3431:
 10379  1580                     	goto	l2816
 10380  1580  2D83               u3430:
 10381  1581                     	line	47
 10382                           	
 10383                           l2814:	
 10384  1581                     	bsf	(___fladd@signs)+(6/8),(6)&7
 10385  1581  1746               	goto	l2816
 10386  1582  2D83               	line	48
 10387                           	
 10388                           l816:	
 10389  1583                     	line	49
 10390                           	
 10391                           l2816:	
 10392  1583                     	movf	0+(___fladd@a)+03h,w
 10393  1583  0839               	movwf	(??___fladd+0)+0
 10394  1584  00BA               	addwf	(??___fladd+0)+0,w
 10395  1585  073A               	movwf	(??___fladd+1)+0
 10396  1586  00BB               	movf	(??___fladd+1)+0,w
 10397  1587  083B               	movwf	(___fladd@aexp)
 10398  1588  00C7               	line	50
 10399                           	
 10400                           l2818:	
 10401  1589                     	btfss	0+(___fladd@a)+02h,(7)&7
 10402  1589  1FB8               	goto	u3441
 10403  158A  2D8C               	goto	u3440
 10404  158B  2D8D               u3441:
 10405  158C                     	goto	l2822
 10406  158C  2D8F               u3440:
 10407  158D                     	line	51
 10408                           	
 10409                           l2820:	
 10410  158D                     	bsf	(___fladd@aexp)+(0/8),(0)&7
 10411  158D  1447               	goto	l2822
 10412  158E  2D8F               	line	52
 10413                           	
 10414                           l817:	
 10415  158F                     	line	55
 10416                           	
 10417                           l2822:	
 10418  158F                     	movf	((___fladd@aexp)),w
 10419  158F  0847               	btfsc	status,2
 10420  1590  1903               	goto	u3451
 10421  1591  2D93               	goto	u3450
 10422  1592  2D94               u3451:
 10423  1593                     	goto	l2832
 10424  1593  2DA5               u3450:
 10425  1594                     	line	57
 10426                           	
 10427                           l2824:	
 10428  1594                     		incf	((___fladd@aexp)),w
 10429  1594  0A47               	btfss	status,2
 10430  1595  1D03               	goto	u3461
 10431  1596  2D98               	goto	u3460
 10432  1597  2D99               u3461:
 10433  1598                     	goto	l2828
 10434  1598  2DA2               u3460:
 10435  1599                     	line	59
 10436                           	
 10437                           l2826:	
 10438  1599                     	movlw	0x0
 10439  1599  3000               	movwf	(___fladd@a+3)
 10440  159A  00B9               	movlw	0x0
 10441  159B  3000               	movwf	(___fladd@a+2)
 10442  159C  00B8               	movlw	0x0
 10443  159D  3000               	movwf	(___fladd@a+1)
 10444  159E  00B7               	movlw	0x0
 10445  159F  3000               	movwf	(___fladd@a)
 10446  15A0  00B6               
 10447                           	goto	l2828
 10448  15A1  2DA2               	line	60
 10449                           	
 10450                           l819:	
 10451  15A2                     	line	62
 10452                           	
 10453                           l2828:	
 10454  15A2                     	bsf	(___fladd@a)+(23/8),(23)&7
 10455  15A2  17B8               	line	64
 10456                           	
 10457                           l2830:	
 10458  15A3                     	clrf	0+(___fladd@a)+03h
 10459  15A3  01B9               	line	65
 10460                           	goto	l820
 10461  15A4  2DAD               	line	66
 10462                           	
 10463                           l818:	
 10464  15A5                     	line	68
 10465                           	
 10466                           l2832:	
 10467  15A5                     	movlw	0x0
 10468  15A5  3000               	movwf	(___fladd@a+3)
 10469  15A6  00B9               	movlw	0x0
 10470  15A7  3000               	movwf	(___fladd@a+2)
 10471  15A8  00B8               	movlw	0x0
 10472  15A9  3000               	movwf	(___fladd@a+1)
 10473  15AA  00B7               	movlw	0x0
 10474  15AB  3000               	movwf	(___fladd@a)
 10475  15AC  00B6               
 10476                           	line	69
 10477                           	
 10478                           l820:	
 10479  15AD                     	line	75
 10480                           	movf	(___fladd@bexp),w
 10481  15AD  0848               	subwf	(___fladd@aexp),w
 10482  15AE  0247               	skipnc
 10483  15AF  1803               	goto	u3471
 10484  15B0  2DB2               	goto	u3470
 10485  15B1  2DB3               u3471:
 10486  15B2                     	goto	l2868
 10487  15B2  2DF9               u3470:
 10488  15B3                     	line	77
 10489                           	
 10490                           l2834:	
 10491  15B3                     	btfss	(___fladd@signs),(6)&7
 10492  15B3  1F46               	goto	u3481
 10493  15B4  2DB6               	goto	u3480
 10494  15B5  2DB7               u3481:
 10495  15B6                     	goto	l2838
 10496  15B6  2DBC               u3480:
 10497  15B7                     	line	78
 10498                           	
 10499                           l2836:	
 10500  15B7                     	movlw	low(080h)
 10501  15B7  3080               	movwf	(??___fladd+0)+0
 10502  15B8  00BA               	movf	(??___fladd+0)+0,w
 10503  15B9  083A               	xorwf	(___fladd@signs),f
 10504  15BA  06C6               	goto	l2838
 10505  15BB  2DBC               	line	79
 10506                           	
 10507                           l822:	
 10508  15BC                     	line	81
 10509                           	
 10510                           l2838:	
 10511  15BC                     	movf	(___fladd@bexp),w
 10512  15BC  0848               	movwf	(??___fladd+0)+0
 10513  15BD  00BA               	movf	(??___fladd+0)+0,w
 10514  15BE  083A               	movwf	(___fladd@grs)
 10515  15BF  00C9               	line	82
 10516                           	
 10517                           l2840:	
 10518  15C0                     	movf	(___fladd@aexp),w
 10519  15C0  0847               	movwf	(??___fladd+0)+0
 10520  15C1  00BA               	movf	(??___fladd+0)+0,w
 10521  15C2  083A               	movwf	(___fladd@bexp)
 10522  15C3  00C8               	line	83
 10523                           	
 10524                           l2842:	
 10525  15C4                     	movf	(___fladd@grs),w
 10526  15C4  0849               	movwf	(??___fladd+0)+0
 10527  15C5  00BA               	movf	(??___fladd+0)+0,w
 10528  15C6  083A               	movwf	(___fladd@aexp)
 10529  15C7  00C7               	line	84
 10530                           	
 10531                           l2844:	
 10532  15C8                     	movf	(___fladd@b),w
 10533  15C8  0832               	movwf	(??___fladd+0)+0
 10534  15C9  00BA               	movf	(??___fladd+0)+0,w
 10535  15CA  083A               	movwf	(___fladd@grs)
 10536  15CB  00C9               	line	85
 10537                           	
 10538                           l2846:	
 10539  15CC                     	movf	(___fladd@a),w
 10540  15CC  0836               	movwf	(??___fladd+0)+0
 10541  15CD  00BA               	movf	(??___fladd+0)+0,w
 10542  15CE  083A               	movwf	(___fladd@b)
 10543  15CF  00B2               	line	86
 10544                           	
 10545                           l2848:	
 10546  15D0                     	movf	(___fladd@grs),w
 10547  15D0  0849               	movwf	(??___fladd+0)+0
 10548  15D1  00BA               	movf	(??___fladd+0)+0,w
 10549  15D2  083A               	movwf	(___fladd@a)
 10550  15D3  00B6               	line	87
 10551                           	
 10552                           l2850:	
 10553  15D4                     	movf	0+(___fladd@b)+01h,w
 10554  15D4  0833               	movwf	(??___fladd+0)+0
 10555  15D5  00BA               	movf	(??___fladd+0)+0,w
 10556  15D6  083A               	movwf	(___fladd@grs)
 10557  15D7  00C9               	line	88
 10558                           	
 10559                           l2852:	
 10560  15D8                     	movf	0+(___fladd@a)+01h,w
 10561  15D8  0837               	movwf	(??___fladd+0)+0
 10562  15D9  00BA               	movf	(??___fladd+0)+0,w
 10563  15DA  083A               	movwf	0+(___fladd@b)+01h
 10564  15DB  00B3               	line	89
 10565                           	
 10566                           l2854:	
 10567  15DC                     	movf	(___fladd@grs),w
 10568  15DC  0849               	movwf	(??___fladd+0)+0
 10569  15DD  00BA               	movf	(??___fladd+0)+0,w
 10570  15DE  083A               	movwf	0+(___fladd@a)+01h
 10571  15DF  00B7               	line	90
 10572                           	
 10573                           l2856:	
 10574  15E0                     	movf	0+(___fladd@b)+02h,w
 10575  15E0  0834               	movwf	(??___fladd+0)+0
 10576  15E1  00BA               	movf	(??___fladd+0)+0,w
 10577  15E2  083A               	movwf	(___fladd@grs)
 10578  15E3  00C9               	line	91
 10579                           	
 10580                           l2858:	
 10581  15E4                     	movf	0+(___fladd@a)+02h,w
 10582  15E4  0838               	movwf	(??___fladd+0)+0
 10583  15E5  00BA               	movf	(??___fladd+0)+0,w
 10584  15E6  083A               	movwf	0+(___fladd@b)+02h
 10585  15E7  00B4               	line	92
 10586                           	
 10587                           l2860:	
 10588  15E8                     	movf	(___fladd@grs),w
 10589  15E8  0849               	movwf	(??___fladd+0)+0
 10590  15E9  00BA               	movf	(??___fladd+0)+0,w
 10591  15EA  083A               	movwf	0+(___fladd@a)+02h
 10592  15EB  00B8               	line	93
 10593                           	
 10594                           l2862:	
 10595  15EC                     	movf	0+(___fladd@b)+03h,w
 10596  15EC  0835               	movwf	(??___fladd+0)+0
 10597  15ED  00BA               	movf	(??___fladd+0)+0,w
 10598  15EE  083A               	movwf	(___fladd@grs)
 10599  15EF  00C9               	line	94
 10600                           	
 10601                           l2864:	
 10602  15F0                     	movf	0+(___fladd@a)+03h,w
 10603  15F0  0839               	movwf	(??___fladd+0)+0
 10604  15F1  00BA               	movf	(??___fladd+0)+0,w
 10605  15F2  083A               	movwf	0+(___fladd@b)+03h
 10606  15F3  00B5               	line	95
 10607                           	
 10608                           l2866:	
 10609  15F4                     	movf	(___fladd@grs),w
 10610  15F4  0849               	movwf	(??___fladd+0)+0
 10611  15F5  00BA               	movf	(??___fladd+0)+0,w
 10612  15F6  083A               	movwf	0+(___fladd@a)+03h
 10613  15F7  00B9               	goto	l2868
 10614  15F8  2DF9               	line	96
 10615                           	
 10616                           l821:	
 10617  15F9                     	line	98
 10618                           	
 10619                           l2868:	
 10620  15F9                     	clrf	(___fladd@grs)
 10621  15F9  01C9               	line	100
 10622                           	
 10623                           l2870:	
 10624  15FA                     	movf	(___fladd@bexp),w
 10625  15FA  0848               	movwf	(??___fladd+0)+0
 10626  15FB  00BA               	clrf	(??___fladd+0)+0+1
 10627  15FC  01BB               	comf	(??___fladd+0)+0,f
 10628  15FD  09BA               	comf	(??___fladd+0)+1,f
 10629  15FE  09BB               	incf	(??___fladd+0)+0,f
 10630  15FF  0ABA               	skipnz
 10631  1600  1903               	incf	(??___fladd+0)+1,f
 10632  1601  0ABB               	movf	(___fladd@aexp),w
 10633  1602  0847               	addwf	0+(??___fladd+0)+0,w
 10634  1603  073A               	movwf	(??___fladd+2)+0
 10635  1604  00BC               	movf	1+(??___fladd+0)+0,w
 10636  1605  083B               	skipnc
 10637  1606  1803               	incf	1+(??___fladd+0)+0,w
 10638  1607  0A3B               	movwf	((??___fladd+2)+0)+1
 10639  1608  00BD               	movf	1+(??___fladd+2)+0,w
 10640  1609  083D               	xorlw	80h
 10641  160A  3A80               	movwf	btemp+1
 10642  160B  00FF               	movlw	(0)^80h
 10643  160C  3080               	subwf	btemp+1,w
 10644  160D  027F               	skipz
 10645  160E  1D03               	goto	u3495
 10646  160F  2E12               	movlw	01Ah
 10647  1610  301A               	subwf	0+(??___fladd+2)+0,w
 10648  1611  023C               u3495:
 10649  1612                     
 10650                           	skipc
 10651  1612  1C03               	goto	u3491
 10652  1613  2E15               	goto	u3490
 10653  1614  2E16               u3491:
 10654  1615                     	goto	l2886
 10655  1615  2E57               u3490:
 10656  1616                     	line	101
 10657                           	
 10658                           l2872:	
 10659  1616                     	bcf	status, 5	;RP0=0, select bank0
 10660  1616  1283               	bcf	status, 6	;RP1=0, select bank0
 10661  1617  1303               	movf	(___fladd@b+3),w
 10662  1618  0835               	iorwf	(___fladd@b+2),w
 10663  1619  0434               	iorwf	(___fladd@b+1),w
 10664  161A  0433               	iorwf	(___fladd@b),w
 10665  161B  0432               	skipz
 10666  161C  1D03               	goto	u3501
 10667  161D  2E1F               	goto	u3500
 10668  161E  2E21               u3501:
 10669  161F                     	movlw	1
 10670  161F  3001               	goto	u3510
 10671  1620  2E22               u3500:
 10672  1621                     	movlw	0
 10673  1621  3000               u3510:
 10674  1622                     	movwf	(??___fladd+0)+0
 10675  1622  00BA               	movf	(??___fladd+0)+0,w
 10676  1623  083A               	movwf	(___fladd@grs)
 10677  1624  00C9               	line	102
 10678                           	movlw	high highword(0)
 10679  1625  3000               	movwf	(___fladd@b+3)
 10680  1626  00B5               	movlw	low highword(0)
 10681  1627  3000               	movwf	(___fladd@b+2)
 10682  1628  00B4               	movlw	high(0)
 10683  1629  3000               	movwf	(___fladd@b+1)
 10684  162A  00B3               	movlw	low(0)
 10685  162B  3000               	movwf	(___fladd@b)
 10686  162C  00B2               
 10687                           	line	103
 10688                           	movf	(___fladd@aexp),w
 10689  162D  0847               	movwf	(??___fladd+0)+0
 10690  162E  00BA               	movf	(??___fladd+0)+0,w
 10691  162F  083A               	movwf	(___fladd@bexp)
 10692  1630  00C8               	line	104
 10693                           	goto	l824
 10694  1631  2E60               	line	105
 10695                           	
 10696                           l823:	
 10697  1632                     	line	106
 10698                           	goto	l2886
 10699  1632  2E57               	
 10700                           l826:	
 10701  1633                     	line	109
 10702                           	btfss	(___fladd@grs),(0)&7
 10703  1633  1C49               	goto	u3521
 10704  1634  2E36               	goto	u3520
 10705  1635  2E37               u3521:
 10706  1636                     	goto	l2876
 10707  1636  2E40               u3520:
 10708  1637                     	line	110
 10709                           	
 10710                           l2874:	
 10711  1637                     	movf	(___fladd@grs),w
 10712  1637  0849               	movwf	(??___fladd+0)+0
 10713  1638  00BA               	clrc
 10714  1639  1003               	rrf	(??___fladd+0)+0,w
 10715  163A  0C3A               	iorlw	01h
 10716  163B  3801               	movwf	(??___fladd+1)+0
 10717  163C  00BB               	movf	(??___fladd+1)+0,w
 10718  163D  083B               	movwf	(___fladd@grs)
 10719  163E  00C9               	line	111
 10720                           	goto	l2878
 10721  163F  2E43               	line	112
 10722                           	
 10723                           l827:	
 10724  1640                     	line	113
 10725                           	
 10726                           l2876:	
 10727  1640                     	clrc
 10728  1640  1003               	rrf	(___fladd@grs),f
 10729  1641  0CC9               
 10730                           	goto	l2878
 10731  1642  2E43               	line	114
 10732                           	
 10733                           l828:	
 10734  1643                     	line	115
 10735                           	
 10736                           l2878:	
 10737  1643                     	btfss	(___fladd@b),(0)&7
 10738  1643  1C32               	goto	u3531
 10739  1644  2E46               	goto	u3530
 10740  1645  2E47               u3531:
 10741  1646                     	goto	l2882
 10742  1646  2E49               u3530:
 10743  1647                     	line	116
 10744                           	
 10745                           l2880:	
 10746  1647                     	bsf	(___fladd@grs)+(7/8),(7)&7
 10747  1647  17C9               	goto	l2882
 10748  1648  2E49               	line	117
 10749                           	
 10750                           l829:	
 10751  1649                     	line	118
 10752                           	
 10753                           l2882:	
 10754  1649                     	movlw	01h
 10755  1649  3001               	movwf	(??___fladd+0)+0
 10756  164A  00BA               u3545:
 10757  164B                     	rlf	(___fladd@b+3),w
 10758  164B  0D35               	rrf	(___fladd@b+3),f
 10759  164C  0CB5               	rrf	(___fladd@b+2),f
 10760  164D  0CB4               	rrf	(___fladd@b+1),f
 10761  164E  0CB3               	rrf	(___fladd@b),f
 10762  164F  0CB2               	decfsz	(??___fladd+0)+0&07fh,f
 10763  1650  0BBA               	goto	u3545
 10764  1651  2E4B               
 10765                           	line	119
 10766                           	
 10767                           l2884:	
 10768  1652                     	movlw	low(01h)
 10769  1652  3001               	movwf	(??___fladd+0)+0
 10770  1653  00BA               	movf	(??___fladd+0)+0,w
 10771  1654  083A               	addwf	(___fladd@bexp),f
 10772  1655  07C8               	goto	l2886
 10773  1656  2E57               	line	120
 10774                           	
 10775                           l825:	
 10776  1657                     	line	106
 10777                           	
 10778                           l2886:	
 10779  1657                     	bcf	status, 5	;RP0=0, select bank0
 10780  1657  1283               	bcf	status, 6	;RP1=0, select bank0
 10781  1658  1303               	movf	(___fladd@aexp),w
 10782  1659  0847               	subwf	(___fladd@bexp),w
 10783  165A  0248               	skipc
 10784  165B  1C03               	goto	u3551
 10785  165C  2E5E               	goto	u3550
 10786  165D  2E5F               u3551:
 10787  165E                     	goto	l826
 10788  165E  2E33               u3550:
 10789  165F                     	goto	l824
 10790  165F  2E60               	
 10791                           l830:	
 10792  1660                     	line	121
 10793                           	
 10794                           l824:	
 10795  1660                     	line	124
 10796                           	btfsc	(___fladd@signs),(6)&7
 10797  1660  1B46               	goto	u3561
 10798  1661  2E63               	goto	u3560
 10799  1662  2E64               u3561:
 10800  1663                     	goto	l2912
 10801  1663  2EB3               u3560:
 10802  1664                     	line	127
 10803                           	
 10804                           l2888:	
 10805  1664                     	movf	((___fladd@bexp)),w
 10806  1664  0848               	btfss	status,2
 10807  1665  1D03               	goto	u3571
 10808  1666  2E68               	goto	u3570
 10809  1667  2E69               u3571:
 10810  1668                     	goto	l2894
 10811  1668  2E73               u3570:
 10812  1669                     	line	128
 10813                           	
 10814                           l2890:	
 10815  1669                     	movlw	0x0
 10816  1669  3000               	movwf	(?___fladd+3)
 10817  166A  00B5               	movlw	0x0
 10818  166B  3000               	movwf	(?___fladd+2)
 10819  166C  00B4               	movlw	0x0
 10820  166D  3000               	movwf	(?___fladd+1)
 10821  166E  00B3               	movlw	0x0
 10822  166F  3000               	movwf	(?___fladd)
 10823  1670  00B2               
 10824                           	goto	l833
 10825  1671  2FFF               	
 10826                           l2892:	
 10827  1672                     	goto	l833
 10828  1672  2FFF               	line	129
 10829                           	
 10830                           l832:	
 10831  1673                     	line	132
 10832                           	
 10833                           l2894:	
 10834  1673                     	movf	(___fladd@a),w
 10835  1673  0836               	addwf	(___fladd@b),f
 10836  1674  07B2               	movf	(___fladd@a+1),w
 10837  1675  0837               	clrz
 10838  1676  1103               	skipnc
 10839  1677  1803               	addlw	1
 10840  1678  3E01               	skipnz
 10841  1679  1903               	goto	u3581
 10842  167A  2E7C               	addwf	(___fladd@b+1),f
 10843  167B  07B3               u3581:
 10844  167C                     	movf	(___fladd@a+2),w
 10845  167C  0838               	clrz
 10846  167D  1103               	skipnc
 10847  167E  1803               	addlw	1
 10848  167F  3E01               	skipnz
 10849  1680  1903               	goto	u3582
 10850  1681  2E83               	addwf	(___fladd@b+2),f
 10851  1682  07B4               u3582:
 10852  1683                     	movf	(___fladd@a+3),w
 10853  1683  0839               	clrz
 10854  1684  1103               	skipnc
 10855  1685  1803               	addlw	1
 10856  1686  3E01               	skipnz
 10857  1687  1903               	goto	u3583
 10858  1688  2E8A               	addwf	(___fladd@b+3),f
 10859  1689  07B5               u3583:
 10860  168A                     
 10861                           	line	134
 10862                           	
 10863                           l2896:	
 10864  168A                     	btfss	(___fladd@b+3),(24)&7
 10865  168A  1C35               	goto	u3591
 10866  168B  2E8D               	goto	u3590
 10867  168C  2E8E               u3591:
 10868  168D                     	goto	l2946
 10869  168D  2F7C               u3590:
 10870  168E                     	line	135
 10871                           	
 10872                           l2898:	
 10873  168E                     	btfss	(___fladd@grs),(0)&7
 10874  168E  1C49               	goto	u3601
 10875  168F  2E91               	goto	u3600
 10876  1690  2E92               u3601:
 10877  1691                     	goto	l2902
 10878  1691  2E9B               u3600:
 10879  1692                     	line	136
 10880                           	
 10881                           l2900:	
 10882  1692                     	movf	(___fladd@grs),w
 10883  1692  0849               	movwf	(??___fladd+0)+0
 10884  1693  00BA               	clrc
 10885  1694  1003               	rrf	(??___fladd+0)+0,w
 10886  1695  0C3A               	iorlw	01h
 10887  1696  3801               	movwf	(??___fladd+1)+0
 10888  1697  00BB               	movf	(??___fladd+1)+0,w
 10889  1698  083B               	movwf	(___fladd@grs)
 10890  1699  00C9               	line	137
 10891                           	goto	l2904
 10892  169A  2E9E               	line	138
 10893                           	
 10894                           l835:	
 10895  169B                     	line	139
 10896                           	
 10897                           l2902:	
 10898  169B                     	clrc
 10899  169B  1003               	rrf	(___fladd@grs),f
 10900  169C  0CC9               
 10901                           	goto	l2904
 10902  169D  2E9E               	line	140
 10903                           	
 10904                           l836:	
 10905  169E                     	line	141
 10906                           	
 10907                           l2904:	
 10908  169E                     	btfss	(___fladd@b),(0)&7
 10909  169E  1C32               	goto	u3611
 10910  169F  2EA1               	goto	u3610
 10911  16A0  2EA2               u3611:
 10912  16A1                     	goto	l2908
 10913  16A1  2EA4               u3610:
 10914  16A2                     	line	142
 10915                           	
 10916                           l2906:	
 10917  16A2                     	bsf	(___fladd@grs)+(7/8),(7)&7
 10918  16A2  17C9               	goto	l2908
 10919  16A3  2EA4               	line	143
 10920                           	
 10921                           l837:	
 10922  16A4                     	line	144
 10923                           	
 10924                           l2908:	
 10925  16A4                     	movlw	01h
 10926  16A4  3001               	movwf	(??___fladd+0)+0
 10927  16A5  00BA               u3625:
 10928  16A6                     	rlf	(___fladd@b+3),w
 10929  16A6  0D35               	rrf	(___fladd@b+3),f
 10930  16A7  0CB5               	rrf	(___fladd@b+2),f
 10931  16A8  0CB4               	rrf	(___fladd@b+1),f
 10932  16A9  0CB3               	rrf	(___fladd@b),f
 10933  16AA  0CB2               	decfsz	(??___fladd+0)+0&07fh,f
 10934  16AB  0BBA               	goto	u3625
 10935  16AC  2EA6               
 10936                           	line	145
 10937                           	
 10938                           l2910:	
 10939  16AD                     	movlw	low(01h)
 10940  16AD  3001               	movwf	(??___fladd+0)+0
 10941  16AE  00BA               	movf	(??___fladd+0)+0,w
 10942  16AF  083A               	addwf	(___fladd@bexp),f
 10943  16B0  07C8               	goto	l2946
 10944  16B1  2F7C               	line	146
 10945                           	
 10946                           l834:	
 10947  16B2                     	line	148
 10948                           	goto	l2946
 10949  16B2  2F7C               	line	149
 10950                           	
 10951                           l831:	
 10952  16B3                     	line	153
 10953                           	
 10954                           l2912:	
 10955  16B3                     	movf	(___fladd@b+3),w
 10956  16B3  0835               	xorlw	80h
 10957  16B4  3A80               	movwf	btemp+1
 10958  16B5  00FF               	movf	(___fladd@a+3),w
 10959  16B6  0839               	xorlw	80h
 10960  16B7  3A80               	subwf	btemp+1,w
 10961  16B8  027F               	
 10962                           	skipz
 10963  16B9  1D03               	goto	u3633
 10964  16BA  2EC5               	movf	(___fladd@a+2),w
 10965  16BB  0838               	subwf	(___fladd@b+2),w
 10966  16BC  0234               	skipz
 10967  16BD  1D03               	goto	u3633
 10968  16BE  2EC5               	movf	(___fladd@a+1),w
 10969  16BF  0837               	subwf	(___fladd@b+1),w
 10970  16C0  0233               	skipz
 10971  16C1  1D03               	goto	u3633
 10972  16C2  2EC5               	movf	(___fladd@a),w
 10973  16C3  0836               	subwf	(___fladd@b),w
 10974  16C4  0232               u3633:
 10975  16C5                     	skipnc
 10976  16C5  1803               	goto	u3631
 10977  16C6  2EC8               	goto	u3630
 10978  16C7  2EC9               u3631:
 10979  16C8                     	goto	l2922
 10980  16C8  2F2F               u3630:
 10981  16C9                     	line	154
 10982                           	
 10983                           l2914:	
 10984  16C9                     	movlw	0FFh
 10985  16C9  30FF               	movwf	((??___fladd+0)+0)
 10986  16CA  00BA               	movlw	0FFh
 10987  16CB  30FF               	movwf	((??___fladd+0)+0+1)
 10988  16CC  00BB               	movlw	0FFh
 10989  16CD  30FF               	movwf	((??___fladd+0)+0+2)
 10990  16CE  00BC               	movlw	0FFh
 10991  16CF  30FF               	movwf	((??___fladd+0)+0+3)
 10992  16D0  00BD               	movf	(___fladd@a),w
 10993  16D1  0836               	movwf	(??___fladd+4)+0
 10994  16D2  00BE               	movf	(___fladd@a+1),w
 10995  16D3  0837               	movwf	((??___fladd+4)+0+1)
 10996  16D4  00BF               	movf	(___fladd@a+2),w
 10997  16D5  0838               	movwf	((??___fladd+4)+0+2)
 10998  16D6  00C0               	movf	(___fladd@a+3),w
 10999  16D7  0839               	movwf	((??___fladd+4)+0+3)
 11000  16D8  00C1               	comf	(___fladd@b),w
 11001  16D9  0932               	movwf	(??___fladd+8)+0
 11002  16DA  00C2               	comf	(___fladd@b+1),w
 11003  16DB  0933               	movwf	((??___fladd+8)+0+1)
 11004  16DC  00C3               	comf	(___fladd@b+2),w
 11005  16DD  0934               	movwf	((??___fladd+8)+0+2)
 11006  16DE  00C4               	comf	(___fladd@b+3),w
 11007  16DF  0935               	movwf	((??___fladd+8)+0+3)
 11008  16E0  00C5               	incf	(??___fladd+8)+0,f
 11009  16E1  0AC2               	skipnz
 11010  16E2  1903               	incf	((??___fladd+8)+0+1),f
 11011  16E3  0AC3               	skipnz
 11012  16E4  1903               	incf	((??___fladd+8)+0+2),f
 11013  16E5  0AC4               	skipnz
 11014  16E6  1903               	incf	((??___fladd+8)+0+3),f
 11015  16E7  0AC5               	movf	0+(??___fladd+8)+0,w
 11016  16E8  0842               	addwf	(??___fladd+4)+0,f
 11017  16E9  07BE               	movf	1+(??___fladd+8)+0,w
 11018  16EA  0843               	skipnc
 11019  16EB  1803               	incfsz	1+(??___fladd+8)+0,w
 11020  16EC  0F43               	goto	u3640
 11021  16ED  2EEF               	goto	u3641
 11022  16EE  2EF0               u3640:
 11023  16EF                     	addwf	(??___fladd+4)+1,f
 11024  16EF  07BF               u3641:
 11025  16F0                     	movf	2+(??___fladd+8)+0,w
 11026  16F0  0844               	skipnc
 11027  16F1  1803               	incfsz	2+(??___fladd+8)+0,w
 11028  16F2  0F44               	goto	u3642
 11029  16F3  2EF5               	goto	u3643
 11030  16F4  2EF6               u3642:
 11031  16F5                     	addwf	(??___fladd+4)+2,f
 11032  16F5  07C0               u3643:
 11033  16F6                     	movf	3+(??___fladd+8)+0,w
 11034  16F6  0845               	skipnc
 11035  16F7  1803               	incf	3+(??___fladd+8)+0,w
 11036  16F8  0A45               	addwf	(??___fladd+4)+3,f
 11037  16F9  07C1               	movf	0+(??___fladd+4)+0,w
 11038  16FA  083E               	addwf	(??___fladd+0)+0,f
 11039  16FB  07BA               	movf	1+(??___fladd+4)+0,w
 11040  16FC  083F               	skipnc
 11041  16FD  1803               	incfsz	1+(??___fladd+4)+0,w
 11042  16FE  0F3F               	goto	u3650
 11043  16FF  2F01               	goto	u3651
 11044  1700  2F02               u3650:
 11045  1701                     	addwf	(??___fladd+0)+1,f
 11046  1701  07BB               u3651:
 11047  1702                     	movf	2+(??___fladd+4)+0,w
 11048  1702  0840               	skipnc
 11049  1703  1803               	incfsz	2+(??___fladd+4)+0,w
 11050  1704  0F40               	goto	u3652
 11051  1705  2F07               	goto	u3653
 11052  1706  2F08               u3652:
 11053  1707                     	addwf	(??___fladd+0)+2,f
 11054  1707  07BC               u3653:
 11055  1708                     	movf	3+(??___fladd+4)+0,w
 11056  1708  0841               	skipnc
 11057  1709  1803               	incf	3+(??___fladd+4)+0,w
 11058  170A  0A41               	addwf	(??___fladd+0)+3,f
 11059  170B  07BD               	movf	3+(??___fladd+0)+0,w
 11060  170C  083D               	movwf	(___fladd@b+3)
 11061  170D  00B5               	movf	2+(??___fladd+0)+0,w
 11062  170E  083C               	movwf	(___fladd@b+2)
 11063  170F  00B4               	movf	1+(??___fladd+0)+0,w
 11064  1710  083B               	movwf	(___fladd@b+1)
 11065  1711  00B3               	movf	0+(??___fladd+0)+0,w
 11066  1712  083A               	movwf	(___fladd@b)
 11067  1713  00B2               
 11068                           	line	155
 11069                           	movlw	low(080h)
 11070  1714  3080               	movwf	(??___fladd+0)+0
 11071  1715  00BA               	movf	(??___fladd+0)+0,w
 11072  1716  083A               	xorwf	(___fladd@signs),f
 11073  1717  06C6               	line	156
 11074                           	
 11075                           l2916:	
 11076  1718                     	comf	(___fladd@grs),f
 11077  1718  09C9               	incf	(___fladd@grs),f
 11078  1719  0AC9               	line	157
 11079                           	
 11080                           l2918:	
 11081  171A                     	movf	((___fladd@grs)),w
 11082  171A  0849               	btfss	status,2
 11083  171B  1D03               	goto	u3661
 11084  171C  2F1E               	goto	u3660
 11085  171D  2F1F               u3661:
 11086  171E                     	goto	l841
 11087  171E  2F3D               u3660:
 11088  171F                     	line	158
 11089                           	
 11090                           l2920:	
 11091  171F                     	movlw	01h
 11092  171F  3001               	addwf	(___fladd@b),f
 11093  1720  07B2               	movlw	0
 11094  1721  3000               	skipnc
 11095  1722  1803               movlw 1
 11096  1723  3001               	addwf	(___fladd@b+1),f
 11097  1724  07B3               	movlw	0
 11098  1725  3000               	skipnc
 11099  1726  1803               movlw 1
 11100  1727  3001               	addwf	(___fladd@b+2),f
 11101  1728  07B4               	movlw	0
 11102  1729  3000               	skipnc
 11103  172A  1803               movlw 1
 11104  172B  3001               	addwf	(___fladd@b+3),f
 11105  172C  07B5               	goto	l841
 11106  172D  2F3D               	line	159
 11107                           	
 11108                           l840:	
 11109  172E                     	line	160
 11110                           	goto	l841
 11111  172E  2F3D               	line	161
 11112                           	
 11113                           l839:	
 11114  172F                     	line	162
 11115                           	
 11116                           l2922:	
 11117  172F                     	movf	(___fladd@a),w
 11118  172F  0836               	subwf	(___fladd@b),f
 11119  1730  02B2               	movf	(___fladd@a+1),w
 11120  1731  0837               	skipc
 11121  1732  1C03               	incfsz	(___fladd@a+1),w
 11122  1733  0F37               	subwf	(___fladd@b+1),f
 11123  1734  02B3               	movf	(___fladd@a+2),w
 11124  1735  0838               	skipc
 11125  1736  1C03               	incfsz	(___fladd@a+2),w
 11126  1737  0F38               	subwf	(___fladd@b+2),f
 11127  1738  02B4               	movf	(___fladd@a+3),w
 11128  1739  0839               	skipc
 11129  173A  1C03               	incfsz	(___fladd@a+3),w
 11130  173B  0F39               	subwf	(___fladd@b+3),f
 11131  173C  02B5               	line	163
 11132                           	
 11133                           l841:	
 11134  173D                     	line	166
 11135                           	movf	(___fladd@b+3),w
 11136  173D  0835               	iorwf	(___fladd@b+2),w
 11137  173E  0434               	iorwf	(___fladd@b+1),w
 11138  173F  0433               	iorwf	(___fladd@b),w
 11139  1740  0432               	skipz
 11140  1741  1D03               	goto	u3671
 11141  1742  2F44               	goto	u3670
 11142  1743  2F45               u3671:
 11143  1744                     	goto	l2944
 11144  1744  2F76               u3670:
 11145  1745                     	
 11146                           l2924:	
 11147  1745                     	movf	((___fladd@grs)),w
 11148  1745  0849               	btfss	status,2
 11149  1746  1D03               	goto	u3681
 11150  1747  2F49               	goto	u3680
 11151  1748  2F4A               u3681:
 11152  1749                     	goto	l2944
 11153  1749  2F76               u3680:
 11154  174A                     	line	167
 11155                           	
 11156                           l2926:	
 11157  174A                     	movlw	0x0
 11158  174A  3000               	movwf	(?___fladd+3)
 11159  174B  00B5               	movlw	0x0
 11160  174C  3000               	movwf	(?___fladd+2)
 11161  174D  00B4               	movlw	0x0
 11162  174E  3000               	movwf	(?___fladd+1)
 11163  174F  00B3               	movlw	0x0
 11164  1750  3000               	movwf	(?___fladd)
 11165  1751  00B2               
 11166                           	goto	l833
 11167  1752  2FFF               	
 11168                           l2928:	
 11169  1753                     	goto	l833
 11170  1753  2FFF               	line	168
 11171                           	
 11172                           l842:	
 11173  1754                     	line	171
 11174                           	goto	l2944
 11175  1754  2F76               	
 11176                           l844:	
 11177  1755                     	line	172
 11178                           	
 11179                           l2930:	
 11180  1755                     	movlw	01h
 11181  1755  3001               	movwf	(??___fladd+0)+0
 11182  1756  00BA               u3695:
 11183  1757                     	clrc
 11184  1757  1003               	rlf	(___fladd@b),f
 11185  1758  0DB2               	rlf	(___fladd@b+1),f
 11186  1759  0DB3               	rlf	(___fladd@b+2),f
 11187  175A  0DB4               	rlf	(___fladd@b+3),f
 11188  175B  0DB5               	decfsz	(??___fladd+0)+0
 11189  175C  0BBA               	goto	u3695
 11190  175D  2F57               	line	173
 11191                           	
 11192                           l2932:	
 11193  175E                     	btfss	(___fladd@grs),(7)&7
 11194  175E  1FC9               	goto	u3701
 11195  175F  2F61               	goto	u3700
 11196  1760  2F62               u3701:
 11197  1761                     	goto	l845
 11198  1761  2F63               u3700:
 11199  1762                     	line	174
 11200                           	
 11201                           l2934:	
 11202  1762                     	bsf	(___fladd@b)+(0/8),(0)&7
 11203  1762  1432               	line	175
 11204                           	
 11205                           l845:	
 11206  1763                     	line	176
 11207                           	btfss	(___fladd@grs),(0)&7
 11208  1763  1C49               	goto	u3711
 11209  1764  2F66               	goto	u3710
 11210  1765  2F67               u3711:
 11211  1766                     	goto	l2938
 11212  1766  2F6A               u3710:
 11213  1767                     	line	177
 11214                           	
 11215                           l2936:	
 11216  1767                     	setc
 11217  1767  1403               	rlf	(___fladd@grs),f
 11218  1768  0DC9               	line	178
 11219                           	goto	l2940
 11220  1769  2F6D               	line	179
 11221                           	
 11222                           l846:	
 11223  176A                     	line	180
 11224                           	
 11225                           l2938:	
 11226  176A                     	clrc
 11227  176A  1003               	rlf	(___fladd@grs),f
 11228  176B  0DC9               
 11229                           	goto	l2940
 11230  176C  2F6D               	line	181
 11231                           	
 11232                           l847:	
 11233  176D                     	line	182
 11234                           	
 11235                           l2940:	
 11236  176D                     	movf	((___fladd@bexp)),w
 11237  176D  0848               	btfsc	status,2
 11238  176E  1903               	goto	u3721
 11239  176F  2F71               	goto	u3720
 11240  1770  2F72               u3721:
 11241  1771                     	goto	l2944
 11242  1771  2F76               u3720:
 11243  1772                     	line	183
 11244                           	
 11245                           l2942:	
 11246  1772                     	movlw	01h
 11247  1772  3001               	subwf	(___fladd@bexp),f
 11248  1773  02C8               	goto	l2944
 11249  1774  2F76               	line	184
 11250                           	
 11251                           l848:	
 11252  1775                     	goto	l2944
 11253  1775  2F76               	line	185
 11254                           	
 11255                           l843:	
 11256  1776                     	line	171
 11257                           	
 11258                           l2944:	
 11259  1776                     	btfss	(___fladd@b+2),(23)&7
 11260  1776  1FB4               	goto	u3731
 11261  1777  2F79               	goto	u3730
 11262  1778  2F7A               u3731:
 11263  1779                     	goto	l2930
 11264  1779  2F55               u3730:
 11265  177A                     	goto	l2946
 11266  177A  2F7C               	
 11267                           l849:	
 11268  177B                     	goto	l2946
 11269  177B  2F7C               	line	186
 11270                           	
 11271                           l838:	
 11272  177C                     	line	192
 11273                           	
 11274                           l2946:	
 11275  177C                     	clrf	(___fladd@aexp)
 11276  177C  01C7               	line	193
 11277                           	
 11278                           l2948:	
 11279  177D                     	btfss	(___fladd@grs),(7)&7
 11280  177D  1FC9               	goto	u3741
 11281  177E  2F80               	goto	u3740
 11282  177F  2F81               u3741:
 11283  1780                     	goto	l2956
 11284  1780  2F93               u3740:
 11285  1781                     	line	194
 11286                           	
 11287                           l2950:	
 11288  1781                     	movf	(___fladd@grs),w
 11289  1781  0849               	andlw	07Fh
 11290  1782  397F               	btfsc	status,2
 11291  1783  1903               	goto	u3751
 11292  1784  2F86               	goto	u3750
 11293  1785  2F87               u3751:
 11294  1786                     	goto	l851
 11295  1786  2F8A               u3750:
 11296  1787                     	line	195
 11297                           	
 11298                           l2952:	
 11299  1787                     	clrf	(___fladd@aexp)
 11300  1787  01C7               	incf	(___fladd@aexp),f
 11301  1788  0AC7               	line	196
 11302                           	goto	l2956
 11303  1789  2F93               	line	197
 11304                           	
 11305                           l851:	
 11306  178A                     	line	198
 11307                           	btfss	(___fladd@b),(0)&7
 11308  178A  1C32               	goto	u3761
 11309  178B  2F8D               	goto	u3760
 11310  178C  2F8E               u3761:
 11311  178D                     	goto	l2956
 11312  178D  2F93               u3760:
 11313  178E                     	line	199
 11314                           	
 11315                           l2954:	
 11316  178E                     	clrf	(___fladd@aexp)
 11317  178E  01C7               	incf	(___fladd@aexp),f
 11318  178F  0AC7               	goto	l2956
 11319  1790  2F93               	line	200
 11320                           	
 11321                           l853:	
 11322  1791                     	goto	l2956
 11323  1791  2F93               	line	201
 11324                           	
 11325                           l852:	
 11326  1792                     	goto	l2956
 11327  1792  2F93               	line	202
 11328                           	
 11329                           l850:	
 11330  1793                     	line	203
 11331                           	
 11332                           l2956:	
 11333  1793                     	movf	((___fladd@aexp)),w
 11334  1793  0847               	btfsc	status,2
 11335  1794  1903               	goto	u3771
 11336  1795  2F97               	goto	u3770
 11337  1796  2F98               u3771:
 11338  1797                     	goto	l854
 11339  1797  2FCE               u3770:
 11340  1798                     	line	204
 11341                           	
 11342                           l2958:	
 11343  1798                     	movlw	01h
 11344  1798  3001               	addwf	(___fladd@b),f
 11345  1799  07B2               	movlw	0
 11346  179A  3000               	skipnc
 11347  179B  1803               movlw 1
 11348  179C  3001               	addwf	(___fladd@b+1),f
 11349  179D  07B3               	movlw	0
 11350  179E  3000               	skipnc
 11351  179F  1803               movlw 1
 11352  17A0  3001               	addwf	(___fladd@b+2),f
 11353  17A1  07B4               	movlw	0
 11354  17A2  3000               	skipnc
 11355  17A3  1803               movlw 1
 11356  17A4  3001               	addwf	(___fladd@b+3),f
 11357  17A5  07B5               	line	205
 11358                           	
 11359                           l2960:	
 11360  17A6                     	btfss	(___fladd@b+3),(24)&7
 11361  17A6  1C35               	goto	u3781
 11362  17A7  2FA9               	goto	u3780
 11363  17A8  2FAA               u3781:
 11364  17A9                     	goto	l854
 11365  17A9  2FCE               u3780:
 11366  17AA                     	line	206
 11367                           	
 11368                           l2962:	
 11369  17AA                     	movf	(___fladd@b),w
 11370  17AA  0832               	movwf	(??___fladd+0)+0
 11371  17AB  00BA               	movf	(___fladd@b+1),w
 11372  17AC  0833               	movwf	((??___fladd+0)+0+1)
 11373  17AD  00BB               	movf	(___fladd@b+2),w
 11374  17AE  0834               	movwf	((??___fladd+0)+0+2)
 11375  17AF  00BC               	movf	(___fladd@b+3),w
 11376  17B0  0835               	movwf	((??___fladd+0)+0+3)
 11377  17B1  00BD               	movlw	01h
 11378  17B2  3001               	movwf	(??___fladd+4)+0
 11379  17B3  00BE               u3795:
 11380  17B4                     	rlf	(??___fladd+0)+3,w
 11381  17B4  0D3D               	rrf	(??___fladd+0)+3,f
 11382  17B5  0CBD               	rrf	(??___fladd+0)+2,f
 11383  17B6  0CBC               	rrf	(??___fladd+0)+1,f
 11384  17B7  0CBB               	rrf	(??___fladd+0)+0,f
 11385  17B8  0CBA               u3790:
 11386  17B9                     	decfsz	(??___fladd+4)+0,f
 11387  17B9  0BBE               	goto	u3795
 11388  17BA  2FB4               	movf	3+(??___fladd+0)+0,w
 11389  17BB  083D               	movwf	(___fladd@b+3)
 11390  17BC  00B5               	movf	2+(??___fladd+0)+0,w
 11391  17BD  083C               	movwf	(___fladd@b+2)
 11392  17BE  00B4               	movf	1+(??___fladd+0)+0,w
 11393  17BF  083B               	movwf	(___fladd@b+1)
 11394  17C0  00B3               	movf	0+(??___fladd+0)+0,w
 11395  17C1  083A               	movwf	(___fladd@b)
 11396  17C2  00B2               
 11397                           	line	207
 11398                           		incf	((___fladd@bexp)),w
 11399  17C3  0A48               	btfsc	status,2
 11400  17C4  1903               	goto	u3801
 11401  17C5  2FC7               	goto	u3800
 11402  17C6  2FC8               u3801:
 11403  17C7                     	goto	l854
 11404  17C7  2FCE               u3800:
 11405  17C8                     	line	208
 11406                           	
 11407                           l2964:	
 11408  17C8                     	movlw	low(01h)
 11409  17C8  3001               	movwf	(??___fladd+0)+0
 11410  17C9  00BA               	movf	(??___fladd+0)+0,w
 11411  17CA  083A               	addwf	(___fladd@bexp),f
 11412  17CB  07C8               	goto	l854
 11413  17CC  2FCE               	line	209
 11414                           	
 11415                           l856:	
 11416  17CD                     	goto	l854
 11417  17CD  2FCE               	line	210
 11418                           	
 11419                           l855:	
 11420  17CE                     	line	211
 11421                           	
 11422                           l854:	
 11423  17CE                     	line	215
 11424                           		incf	((___fladd@bexp)),w
 11425  17CE  0A48               	btfsc	status,2
 11426  17CF  1903               	goto	u3811
 11427  17D0  2FD2               	goto	u3810
 11428  17D1  2FD3               u3811:
 11429  17D2                     	goto	l2968
 11430  17D2  2FD9               u3810:
 11431  17D3                     	
 11432                           l2966:	
 11433  17D3                     	movf	((___fladd@bexp)),w
 11434  17D3  0848               	btfss	status,2
 11435  17D4  1D03               	goto	u3821
 11436  17D5  2FD7               	goto	u3820
 11437  17D6  2FD8               u3821:
 11438  17D7                     	goto	l2974
 11439  17D7  2FE9               u3820:
 11440  17D8                     	goto	l2968
 11441  17D8  2FD9               	
 11442                           l859:	
 11443  17D9                     	line	216
 11444                           	
 11445                           l2968:	
 11446  17D9                     	movlw	high highword(0)
 11447  17D9  3000               	movwf	(___fladd@b+3)
 11448  17DA  00B5               	movlw	low highword(0)
 11449  17DB  3000               	movwf	(___fladd@b+2)
 11450  17DC  00B4               	movlw	high(0)
 11451  17DD  3000               	movwf	(___fladd@b+1)
 11452  17DE  00B3               	movlw	low(0)
 11453  17DF  3000               	movwf	(___fladd@b)
 11454  17E0  00B2               
 11455                           	line	218
 11456                           	
 11457                           l2970:	
 11458  17E1                     	movf	((___fladd@bexp)),w
 11459  17E1  0848               	btfss	status,2
 11460  17E2  1D03               	goto	u3831
 11461  17E3  2FE5               	goto	u3830
 11462  17E4  2FE6               u3831:
 11463  17E5                     	goto	l2974
 11464  17E5  2FE9               u3830:
 11465  17E6                     	line	219
 11466                           	
 11467                           l2972:	
 11468  17E6                     	clrf	(___fladd@signs)
 11469  17E6  01C6               	goto	l2974
 11470  17E7  2FE9               	line	220
 11471                           	
 11472                           l860:	
 11473  17E8                     	goto	l2974
 11474  17E8  2FE9               	line	221
 11475                           	
 11476                           l857:	
 11477  17E9                     	line	225
 11478                           	
 11479                           l2974:	
 11480  17E9                     	btfss	(___fladd@bexp),(0)&7
 11481  17E9  1C48               	goto	u3841
 11482  17EA  2FEC               	goto	u3840
 11483  17EB  2FED               u3841:
 11484  17EC                     	goto	l2978
 11485  17EC  2FEF               u3840:
 11486  17ED                     	line	226
 11487                           	
 11488                           l2976:	
 11489  17ED                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
 11490  17ED  17B4               	line	227
 11491                           	goto	l862
 11492  17EE  2FF3               	line	229
 11493                           	
 11494                           l861:	
 11495  17EF                     	line	230
 11496                           	
 11497                           l2978:	
 11498  17EF                     	movlw	low(07Fh)
 11499  17EF  307F               	movwf	(??___fladd+0)+0
 11500  17F0  00BA               	movf	(??___fladd+0)+0,w
 11501  17F1  083A               	andwf	0+(___fladd@b)+02h,f
 11502  17F2  05B4               	line	231
 11503                           	
 11504                           l862:	
 11505  17F3                     	line	232
 11506                           	movf	(___fladd@bexp),w
 11507  17F3  0848               	movwf	(??___fladd+0)+0
 11508  17F4  00BA               	clrc
 11509  17F5  1003               	rrf	(??___fladd+0)+0,w
 11510  17F6  0C3A               	movwf	(??___fladd+1)+0
 11511  17F7  00BB               	movf	(??___fladd+1)+0,w
 11512  17F8  083B               	movwf	0+(___fladd@b)+03h
 11513  17F9  00B5               	line	233
 11514                           	
 11515                           l2980:	
 11516  17FA                     	btfss	(___fladd@signs),(7)&7
 11517  17FA  1FC6               	goto	u3851
 11518  17FB  2FFD               	goto	u3850
 11519  17FC  2FFE               u3851:
 11520  17FD                     	goto	l863
 11521  17FD  2FFF               u3850:
 11522  17FE                     	line	234
 11523                           	
 11524                           l2982:	
 11525  17FE                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
 11526  17FE  17B5               	line	235
 11527                           	
 11528                           l863:	
 11529  17FF                     	line	236
 11530                           	line	237
 11531                           	
 11532                           l833:	
 11533  17FF                     	return
 11534  17FF  0008               	opt stack 0
 11535                           GLOBAL	__end_of___fladd
 11536                           	__end_of___fladd:
 11537  1800                     	signat	___fladd,8316
 11538                           	global	___awmod
 11539                           
 11540 ;; *************** function ___awmod *****************
 11541 ;; Defined at:
 11542 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 11543 ;; Parameters:    Size  Location     Type
 11544 ;;  divisor         2    0[BANK0 ] int 
 11545 ;;  dividend        2    2[BANK0 ] int 
 11546 ;; Auto vars:     Size  Location     Type
 11547 ;;  sign            1    6[BANK0 ] unsigned char 
 11548 ;;  counter         1    5[BANK0 ] unsigned char 
 11549 ;; Return value:  Size  Location     Type
 11550 ;;                  2    0[BANK0 ] int 
 11551 ;; Registers used:
 11552 ;;		wreg, status,2, status,0
 11553 ;; Tracked objects:
 11554 ;;		On entry : 0/0
 11555 ;;		On exit  : 0/0
 11556 ;;		Unchanged: 0/0
 11557 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11558 ;;      Params:         0       4       0       0       0
 11559 ;;      Locals:         0       2       0       0       0
 11560 ;;      Temps:          0       1       0       0       0
 11561 ;;      Totals:         0       7       0       0       0
 11562 ;;Total ram usage:        7 bytes
 11563 ;; Hardware stack levels used:    1
 11564 ;; Hardware stack levels required when called:    2
 11565 ;; This function calls:
 11566 ;;		Nothing
 11567 ;; This function is called by:
 11568 ;;		_main
 11569 ;; This function uses a non-reentrant model
 11570 ;;
 11571                           psect	text23,local,class=CODE,delta=2,merge=1,group=1
 11572                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 11573                           	line	5
 11574                           global __ptext23
 11575                           __ptext23:	;psect for function ___awmod
 11576  13BF                     psect	text23
 11577                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
 11578                           	line	5
 11579                           	global	__size_of___awmod
 11580                           	__size_of___awmod	equ	__end_of___awmod-___awmod
 11581  0065                     	
 11582                           ___awmod:	
 11583  13BF                     ;incstack = 0
 11584                           	opt	stack 5
 11585                           ; Regs used in ___awmod: [wreg+status,2+status,0]
 11586                           	line	12
 11587                           	
 11588                           l3918:	
 11589  13BF                     	bcf	status, 5	;RP0=0, select bank0
 11590  13BF  1283               	bcf	status, 6	;RP1=0, select bank0
 11591  13C0  1303               	clrf	(___awmod@sign)
 11592  13C1  01A6               	line	13
 11593                           	
 11594                           l3920:	
 11595  13C2                     	btfss	(___awmod@dividend+1),7
 11596  13C2  1FA3               	goto	u5611
 11597  13C3  2BC5               	goto	u5610
 11598  13C4  2BC6               u5611:
 11599  13C5                     	goto	l3926
 11600  13C5  2BCE               u5610:
 11601  13C6                     	line	14
 11602                           	
 11603                           l3922:	
 11604  13C6                     	comf	(___awmod@dividend),f
 11605  13C6  09A2               	comf	(___awmod@dividend+1),f
 11606  13C7  09A3               	incf	(___awmod@dividend),f
 11607  13C8  0AA2               	skipnz
 11608  13C9  1903               	incf	(___awmod@dividend+1),f
 11609  13CA  0AA3               	line	15
 11610                           	
 11611                           l3924:	
 11612  13CB                     	clrf	(___awmod@sign)
 11613  13CB  01A6               	incf	(___awmod@sign),f
 11614  13CC  0AA6               	goto	l3926
 11615  13CD  2BCE               	line	16
 11616                           	
 11617                           l683:	
 11618  13CE                     	line	17
 11619                           	
 11620                           l3926:	
 11621  13CE                     	btfss	(___awmod@divisor+1),7
 11622  13CE  1FA1               	goto	u5621
 11623  13CF  2BD1               	goto	u5620
 11624  13D0  2BD2               u5621:
 11625  13D1                     	goto	l3930
 11626  13D1  2BD8               u5620:
 11627  13D2                     	line	18
 11628                           	
 11629                           l3928:	
 11630  13D2                     	comf	(___awmod@divisor),f
 11631  13D2  09A0               	comf	(___awmod@divisor+1),f
 11632  13D3  09A1               	incf	(___awmod@divisor),f
 11633  13D4  0AA0               	skipnz
 11634  13D5  1903               	incf	(___awmod@divisor+1),f
 11635  13D6  0AA1               	goto	l3930
 11636  13D7  2BD8               	
 11637                           l684:	
 11638  13D8                     	line	19
 11639                           	
 11640                           l3930:	
 11641  13D8                     	movf	((___awmod@divisor)),w
 11642  13D8  0820               iorwf	((___awmod@divisor+1)),w
 11643  13D9  0421               	btfsc	status,2
 11644  13DA  1903               	goto	u5631
 11645  13DB  2BDD               	goto	u5630
 11646  13DC  2BDE               u5631:
 11647  13DD                     	goto	l3948
 11648  13DD  2C13               u5630:
 11649  13DE                     	line	20
 11650                           	
 11651                           l3932:	
 11652  13DE                     	clrf	(___awmod@counter)
 11653  13DE  01A5               	incf	(___awmod@counter),f
 11654  13DF  0AA5               	line	21
 11655                           	goto	l3938
 11656  13E0  2BED               	
 11657                           l687:	
 11658  13E1                     	line	22
 11659                           	
 11660                           l3934:	
 11661  13E1                     	movlw	01h
 11662  13E1  3001               	
 11663                           u5645:
 11664  13E2                     	clrc
 11665  13E2  1003               	rlf	(___awmod@divisor),f
 11666  13E3  0DA0               	rlf	(___awmod@divisor+1),f
 11667  13E4  0DA1               	addlw	-1
 11668  13E5  3EFF               	skipz
 11669  13E6  1D03               	goto	u5645
 11670  13E7  2BE2               	line	23
 11671                           	
 11672                           l3936:	
 11673  13E8                     	movlw	low(01h)
 11674  13E8  3001               	movwf	(??___awmod+0)+0
 11675  13E9  00A4               	movf	(??___awmod+0)+0,w
 11676  13EA  0824               	addwf	(___awmod@counter),f
 11677  13EB  07A5               	goto	l3938
 11678  13EC  2BED               	line	24
 11679                           	
 11680                           l686:	
 11681  13ED                     	line	21
 11682                           	
 11683                           l3938:	
 11684  13ED                     	btfss	(___awmod@divisor+1),(15)&7
 11685  13ED  1FA1               	goto	u5651
 11686  13EE  2BF0               	goto	u5650
 11687  13EF  2BF1               u5651:
 11688  13F0                     	goto	l3934
 11689  13F0  2BE1               u5650:
 11690  13F1                     	goto	l3940
 11691  13F1  2BF3               	
 11692                           l688:	
 11693  13F2                     	goto	l3940
 11694  13F2  2BF3               	line	25
 11695                           	
 11696                           l689:	
 11697  13F3                     	line	26
 11698                           	
 11699                           l3940:	
 11700  13F3                     	movf	(___awmod@divisor+1),w
 11701  13F3  0821               	subwf	(___awmod@dividend+1),w
 11702  13F4  0223               	skipz
 11703  13F5  1D03               	goto	u5665
 11704  13F6  2BF9               	movf	(___awmod@divisor),w
 11705  13F7  0820               	subwf	(___awmod@dividend),w
 11706  13F8  0222               u5665:
 11707  13F9                     	skipc
 11708  13F9  1C03               	goto	u5661
 11709  13FA  2BFC               	goto	u5660
 11710  13FB  2BFD               u5661:
 11711  13FC                     	goto	l3944
 11712  13FC  2C04               u5660:
 11713  13FD                     	line	27
 11714                           	
 11715                           l3942:	
 11716  13FD                     	movf	(___awmod@divisor),w
 11717  13FD  0820               	subwf	(___awmod@dividend),f
 11718  13FE  02A2               	movf	(___awmod@divisor+1),w
 11719  13FF  0821               	skipc
 11720  1400  1C03               	decf	(___awmod@dividend+1),f
 11721  1401  03A3               	subwf	(___awmod@dividend+1),f
 11722  1402  02A3               	goto	l3944
 11723  1403  2C04               	
 11724                           l690:	
 11725  1404                     	line	28
 11726                           	
 11727                           l3944:	
 11728  1404                     	movlw	01h
 11729  1404  3001               	
 11730                           u5675:
 11731  1405                     	clrc
 11732  1405  1003               	rrf	(___awmod@divisor+1),f
 11733  1406  0CA1               	rrf	(___awmod@divisor),f
 11734  1407  0CA0               	addlw	-1
 11735  1408  3EFF               	skipz
 11736  1409  1D03               	goto	u5675
 11737  140A  2C05               	line	29
 11738                           	
 11739                           l3946:	
 11740  140B                     	movlw	01h
 11741  140B  3001               	subwf	(___awmod@counter),f
 11742  140C  02A5               	btfss	status,2
 11743  140D  1D03               	goto	u5681
 11744  140E  2C10               	goto	u5680
 11745  140F  2C11               u5681:
 11746  1410                     	goto	l3940
 11747  1410  2BF3               u5680:
 11748  1411                     	goto	l3948
 11749  1411  2C13               	
 11750                           l691:	
 11751  1412                     	goto	l3948
 11752  1412  2C13               	line	30
 11753                           	
 11754                           l685:	
 11755  1413                     	line	31
 11756                           	
 11757                           l3948:	
 11758  1413                     	movf	((___awmod@sign)),w
 11759  1413  0826               	btfsc	status,2
 11760  1414  1903               	goto	u5691
 11761  1415  2C17               	goto	u5690
 11762  1416  2C18               u5691:
 11763  1417                     	goto	l3952
 11764  1417  2C1E               u5690:
 11765  1418                     	line	32
 11766                           	
 11767                           l3950:	
 11768  1418                     	comf	(___awmod@dividend),f
 11769  1418  09A2               	comf	(___awmod@dividend+1),f
 11770  1419  09A3               	incf	(___awmod@dividend),f
 11771  141A  0AA2               	skipnz
 11772  141B  1903               	incf	(___awmod@dividend+1),f
 11773  141C  0AA3               	goto	l3952
 11774  141D  2C1E               	
 11775                           l692:	
 11776  141E                     	line	33
 11777                           	
 11778                           l3952:	
 11779  141E                     	movf	(___awmod@dividend+1),w
 11780  141E  0823               	movwf	(?___awmod+1)
 11781  141F  00A1               	movf	(___awmod@dividend),w
 11782  1420  0822               	movwf	(?___awmod)
 11783  1421  00A0               	goto	l693
 11784  1422  2C23               	
 11785                           l3954:	
 11786  1423                     	line	34
 11787                           	
 11788                           l693:	
 11789  1423                     	return
 11790  1423  0008               	opt stack 0
 11791                           GLOBAL	__end_of___awmod
 11792                           	__end_of___awmod:
 11793  1424                     	signat	___awmod,8314
 11794                           	global	___awdiv
 11795                           
 11796 ;; *************** function ___awdiv *****************
 11797 ;; Defined at:
 11798 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11799 ;; Parameters:    Size  Location     Type
 11800 ;;  divisor         2    6[BANK0 ] int 
 11801 ;;  dividend        2    8[BANK0 ] int 
 11802 ;; Auto vars:     Size  Location     Type
 11803 ;;  quotient        2   13[BANK0 ] int 
 11804 ;;  sign            1   12[BANK0 ] unsigned char 
 11805 ;;  counter         1   11[BANK0 ] unsigned char 
 11806 ;; Return value:  Size  Location     Type
 11807 ;;                  2    6[BANK0 ] int 
 11808 ;; Registers used:
 11809 ;;		wreg, status,2, status,0
 11810 ;; Tracked objects:
 11811 ;;		On entry : 0/0
 11812 ;;		On exit  : 0/0
 11813 ;;		Unchanged: 0/0
 11814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 11815 ;;      Params:         0       4       0       0       0
 11816 ;;      Locals:         0       4       0       0       0
 11817 ;;      Temps:          0       1       0       0       0
 11818 ;;      Totals:         0       9       0       0       0
 11819 ;;Total ram usage:        9 bytes
 11820 ;; Hardware stack levels used:    1
 11821 ;; Hardware stack levels required when called:    2
 11822 ;; This function calls:
 11823 ;;		Nothing
 11824 ;; This function is called by:
 11825 ;;		_main
 11826 ;; This function uses a non-reentrant model
 11827 ;;
 11828                           psect	text24,local,class=CODE,delta=2,merge=1,group=1
 11829                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11830                           	line	5
 11831                           global __ptext24
 11832                           __ptext24:	;psect for function ___awdiv
 11833  0784                     psect	text24
 11834                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
 11835                           	line	5
 11836                           	global	__size_of___awdiv
 11837                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
 11838  0073                     	
 11839                           ___awdiv:	
 11840  0784                     ;incstack = 0
 11841                           	opt	stack 5
 11842                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 11843                           	line	13
 11844                           	
 11845                           l2664:	
 11846  0784                     	bcf	status, 5	;RP0=0, select bank0
 11847  0784  1283               	bcf	status, 6	;RP1=0, select bank0
 11848  0785  1303               	clrf	(___awdiv@sign)
 11849  0786  01AC               	line	14
 11850                           	
 11851                           l2666:	
 11852  0787                     	btfss	(___awdiv@divisor+1),7
 11853  0787  1FA7               	goto	u3101
 11854  0788  2F8A               	goto	u3100
 11855  0789  2F8B               u3101:
 11856  078A                     	goto	l2672
 11857  078A  2F93               u3100:
 11858  078B                     	line	15
 11859                           	
 11860                           l2668:	
 11861  078B                     	comf	(___awdiv@divisor),f
 11862  078B  09A6               	comf	(___awdiv@divisor+1),f
 11863  078C  09A7               	incf	(___awdiv@divisor),f
 11864  078D  0AA6               	skipnz
 11865  078E  1903               	incf	(___awdiv@divisor+1),f
 11866  078F  0AA7               	line	16
 11867                           	
 11868                           l2670:	
 11869  0790                     	clrf	(___awdiv@sign)
 11870  0790  01AC               	incf	(___awdiv@sign),f
 11871  0791  0AAC               	goto	l2672
 11872  0792  2F93               	line	17
 11873                           	
 11874                           l670:	
 11875  0793                     	line	18
 11876                           	
 11877                           l2672:	
 11878  0793                     	btfss	(___awdiv@dividend+1),7
 11879  0793  1FA9               	goto	u3111
 11880  0794  2F96               	goto	u3110
 11881  0795  2F97               u3111:
 11882  0796                     	goto	l2678
 11883  0796  2FA1               u3110:
 11884  0797                     	line	19
 11885                           	
 11886                           l2674:	
 11887  0797                     	comf	(___awdiv@dividend),f
 11888  0797  09A8               	comf	(___awdiv@dividend+1),f
 11889  0798  09A9               	incf	(___awdiv@dividend),f
 11890  0799  0AA8               	skipnz
 11891  079A  1903               	incf	(___awdiv@dividend+1),f
 11892  079B  0AA9               	line	20
 11893                           	
 11894                           l2676:	
 11895  079C                     	movlw	low(01h)
 11896  079C  3001               	movwf	(??___awdiv+0)+0
 11897  079D  00AA               	movf	(??___awdiv+0)+0,w
 11898  079E  082A               	xorwf	(___awdiv@sign),f
 11899  079F  06AC               	goto	l2678
 11900  07A0  2FA1               	line	21
 11901                           	
 11902                           l671:	
 11903  07A1                     	line	22
 11904                           	
 11905                           l2678:	
 11906  07A1                     	clrf	(___awdiv@quotient)
 11907  07A1  01AD               	clrf	(___awdiv@quotient+1)
 11908  07A2  01AE               	line	23
 11909                           	
 11910                           l2680:	
 11911  07A3                     	movf	((___awdiv@divisor)),w
 11912  07A3  0826               iorwf	((___awdiv@divisor+1)),w
 11913  07A4  0427               	btfsc	status,2
 11914  07A5  1903               	goto	u3121
 11915  07A6  2FA8               	goto	u3120
 11916  07A7  2FA9               u3121:
 11917  07A8                     	goto	l2700
 11918  07A8  2FE6               u3120:
 11919  07A9                     	line	24
 11920                           	
 11921                           l2682:	
 11922  07A9                     	clrf	(___awdiv@counter)
 11923  07A9  01AB               	incf	(___awdiv@counter),f
 11924  07AA  0AAB               	line	25
 11925                           	goto	l2688
 11926  07AB  2FB8               	
 11927                           l674:	
 11928  07AC                     	line	26
 11929                           	
 11930                           l2684:	
 11931  07AC                     	movlw	01h
 11932  07AC  3001               	
 11933                           u3135:
 11934  07AD                     	clrc
 11935  07AD  1003               	rlf	(___awdiv@divisor),f
 11936  07AE  0DA6               	rlf	(___awdiv@divisor+1),f
 11937  07AF  0DA7               	addlw	-1
 11938  07B0  3EFF               	skipz
 11939  07B1  1D03               	goto	u3135
 11940  07B2  2FAD               	line	27
 11941                           	
 11942                           l2686:	
 11943  07B3                     	movlw	low(01h)
 11944  07B3  3001               	movwf	(??___awdiv+0)+0
 11945  07B4  00AA               	movf	(??___awdiv+0)+0,w
 11946  07B5  082A               	addwf	(___awdiv@counter),f
 11947  07B6  07AB               	goto	l2688
 11948  07B7  2FB8               	line	28
 11949                           	
 11950                           l673:	
 11951  07B8                     	line	25
 11952                           	
 11953                           l2688:	
 11954  07B8                     	btfss	(___awdiv@divisor+1),(15)&7
 11955  07B8  1FA7               	goto	u3141
 11956  07B9  2FBB               	goto	u3140
 11957  07BA  2FBC               u3141:
 11958  07BB                     	goto	l2684
 11959  07BB  2FAC               u3140:
 11960  07BC                     	goto	l2690
 11961  07BC  2FBE               	
 11962                           l675:	
 11963  07BD                     	goto	l2690
 11964  07BD  2FBE               	line	29
 11965                           	
 11966                           l676:	
 11967  07BE                     	line	30
 11968                           	
 11969                           l2690:	
 11970  07BE                     	movlw	01h
 11971  07BE  3001               	
 11972                           u3155:
 11973  07BF                     	clrc
 11974  07BF  1003               	rlf	(___awdiv@quotient),f
 11975  07C0  0DAD               	rlf	(___awdiv@quotient+1),f
 11976  07C1  0DAE               	addlw	-1
 11977  07C2  3EFF               	skipz
 11978  07C3  1D03               	goto	u3155
 11979  07C4  2FBF               	line	31
 11980                           	movf	(___awdiv@divisor+1),w
 11981  07C5  0827               	subwf	(___awdiv@dividend+1),w
 11982  07C6  0229               	skipz
 11983  07C7  1D03               	goto	u3165
 11984  07C8  2FCB               	movf	(___awdiv@divisor),w
 11985  07C9  0826               	subwf	(___awdiv@dividend),w
 11986  07CA  0228               u3165:
 11987  07CB                     	skipc
 11988  07CB  1C03               	goto	u3161
 11989  07CC  2FCE               	goto	u3160
 11990  07CD  2FCF               u3161:
 11991  07CE                     	goto	l2696
 11992  07CE  2FD7               u3160:
 11993  07CF                     	line	32
 11994                           	
 11995                           l2692:	
 11996  07CF                     	movf	(___awdiv@divisor),w
 11997  07CF  0826               	subwf	(___awdiv@dividend),f
 11998  07D0  02A8               	movf	(___awdiv@divisor+1),w
 11999  07D1  0827               	skipc
 12000  07D2  1C03               	decf	(___awdiv@dividend+1),f
 12001  07D3  03A9               	subwf	(___awdiv@dividend+1),f
 12002  07D4  02A9               	line	33
 12003                           	
 12004                           l2694:	
 12005  07D5                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
 12006  07D5  142D               	goto	l2696
 12007  07D6  2FD7               	line	34
 12008                           	
 12009                           l677:	
 12010  07D7                     	line	35
 12011                           	
 12012                           l2696:	
 12013  07D7                     	movlw	01h
 12014  07D7  3001               	
 12015                           u3175:
 12016  07D8                     	clrc
 12017  07D8  1003               	rrf	(___awdiv@divisor+1),f
 12018  07D9  0CA7               	rrf	(___awdiv@divisor),f
 12019  07DA  0CA6               	addlw	-1
 12020  07DB  3EFF               	skipz
 12021  07DC  1D03               	goto	u3175
 12022  07DD  2FD8               	line	36
 12023                           	
 12024                           l2698:	
 12025  07DE                     	movlw	01h
 12026  07DE  3001               	subwf	(___awdiv@counter),f
 12027  07DF  02AB               	btfss	status,2
 12028  07E0  1D03               	goto	u3181
 12029  07E1  2FE3               	goto	u3180
 12030  07E2  2FE4               u3181:
 12031  07E3                     	goto	l2690
 12032  07E3  2FBE               u3180:
 12033  07E4                     	goto	l2700
 12034  07E4  2FE6               	
 12035                           l678:	
 12036  07E5                     	goto	l2700
 12037  07E5  2FE6               	line	37
 12038                           	
 12039                           l672:	
 12040  07E6                     	line	38
 12041                           	
 12042                           l2700:	
 12043  07E6                     	movf	((___awdiv@sign)),w
 12044  07E6  082C               	btfsc	status,2
 12045  07E7  1903               	goto	u3191
 12046  07E8  2FEA               	goto	u3190
 12047  07E9  2FEB               u3191:
 12048  07EA                     	goto	l2704
 12049  07EA  2FF1               u3190:
 12050  07EB                     	line	39
 12051                           	
 12052                           l2702:	
 12053  07EB                     	comf	(___awdiv@quotient),f
 12054  07EB  09AD               	comf	(___awdiv@quotient+1),f
 12055  07EC  09AE               	incf	(___awdiv@quotient),f
 12056  07ED  0AAD               	skipnz
 12057  07EE  1903               	incf	(___awdiv@quotient+1),f
 12058  07EF  0AAE               	goto	l2704
 12059  07F0  2FF1               	
 12060                           l679:	
 12061  07F1                     	line	40
 12062                           	
 12063                           l2704:	
 12064  07F1                     	movf	(___awdiv@quotient+1),w
 12065  07F1  082E               	movwf	(?___awdiv+1)
 12066  07F2  00A7               	movf	(___awdiv@quotient),w
 12067  07F3  082D               	movwf	(?___awdiv)
 12068  07F4  00A6               	goto	l680
 12069  07F5  2FF6               	
 12070                           l2706:	
 12071  07F6                     	line	41
 12072                           	
 12073                           l680:	
 12074  07F6                     	return
 12075  07F6  0008               	opt stack 0
 12076                           GLOBAL	__end_of___awdiv
 12077                           	__end_of___awdiv:
 12078  07F7                     	signat	___awdiv,8314
 12079                           	global	_I2C_Master_Write
 12080                           
 12081 ;; *************** function _I2C_Master_Write *****************
 12082 ;; Defined at:
 12083 ;;		line 65 in file "I2C.c"
 12084 ;; Parameters:    Size  Location     Type
 12085 ;;  d               2    0[BANK0 ] unsigned int 
 12086 ;; Auto vars:     Size  Location     Type
 12087 ;;		None
 12088 ;; Return value:  Size  Location     Type
 12089 ;;                  1    wreg      void 
 12090 ;; Registers used:
 12091 ;;		wreg, status,2, status,0, pclath, cstack
 12092 ;; Tracked objects:
 12093 ;;		On entry : 0/0
 12094 ;;		On exit  : 0/0
 12095 ;;		Unchanged: 0/0
 12096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12097 ;;      Params:         0       2       0       0       0
 12098 ;;      Locals:         0       0       0       0       0
 12099 ;;      Temps:          0       0       0       0       0
 12100 ;;      Totals:         0       2       0       0       0
 12101 ;;Total ram usage:        2 bytes
 12102 ;; Hardware stack levels used:    1
 12103 ;; Hardware stack levels required when called:    3
 12104 ;; This function calls:
 12105 ;;		_I2C_Master_Wait
 12106 ;; This function is called by:
 12107 ;;		_main
 12108 ;; This function uses a non-reentrant model
 12109 ;;
 12110                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
 12111                           	file	"I2C.c"
 12112                           	line	65
 12113                           global __ptext25
 12114                           __ptext25:	;psect for function _I2C_Master_Write
 12115  111F                     psect	text25
 12116                           	file	"I2C.c"
 12117                           	line	65
 12118                           	global	__size_of_I2C_Master_Write
 12119                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
 12120  000A                     	
 12121                           _I2C_Master_Write:	
 12122  111F                     ;incstack = 0
 12123                           	opt	stack 4
 12124                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
 12125                           	line	67
 12126                           	
 12127                           l3854:	
 12128  111F                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
 12129                           	fcall	_I2C_Master_Wait
 12130  111F  160A  118A  2129  160A  118A  	line	68
 12131                           	
 12132                           l3856:	
 12133  1124                     ;I2C.c: 68:     SSPBUF = d;
 12134                           	bcf	status, 5	;RP0=0, select bank0
 12135  1124  1283               	bcf	status, 6	;RP1=0, select bank0
 12136  1125  1303               	movf	(I2C_Master_Write@d),w
 12137  1126  0820               	movwf	(19)	;volatile
 12138  1127  0093               	line	69
 12139                           	
 12140                           l47:	
 12141  1128                     	return
 12142  1128  0008               	opt stack 0
 12143                           GLOBAL	__end_of_I2C_Master_Write
 12144                           	__end_of_I2C_Master_Write:
 12145  1129                     	signat	_I2C_Master_Write,4217
 12146                           	global	_I2C_Master_Stop
 12147                           
 12148 ;; *************** function _I2C_Master_Stop *****************
 12149 ;; Defined at:
 12150 ;;		line 55 in file "I2C.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;		None
 12153 ;; Auto vars:     Size  Location     Type
 12154 ;;		None
 12155 ;; Return value:  Size  Location     Type
 12156 ;;                  1    wreg      void 
 12157 ;; Registers used:
 12158 ;;		wreg, status,2, status,0, pclath, cstack
 12159 ;; Tracked objects:
 12160 ;;		On entry : 0/0
 12161 ;;		On exit  : 0/0
 12162 ;;		Unchanged: 0/0
 12163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12164 ;;      Params:         0       0       0       0       0
 12165 ;;      Locals:         0       0       0       0       0
 12166 ;;      Temps:          0       0       0       0       0
 12167 ;;      Totals:         0       0       0       0       0
 12168 ;;Total ram usage:        0 bytes
 12169 ;; Hardware stack levels used:    1
 12170 ;; Hardware stack levels required when called:    3
 12171 ;; This function calls:
 12172 ;;		_I2C_Master_Wait
 12173 ;; This function is called by:
 12174 ;;		_main
 12175 ;; This function uses a non-reentrant model
 12176 ;;
 12177                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
 12178                           	line	55
 12179                           global __ptext26
 12180                           __ptext26:	;psect for function _I2C_Master_Stop
 12181  07F7                     psect	text26
 12182                           	file	"I2C.c"
 12183                           	line	55
 12184                           	global	__size_of_I2C_Master_Stop
 12185                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
 12186  0009                     	
 12187                           _I2C_Master_Stop:	
 12188  07F7                     ;incstack = 0
 12189                           	opt	stack 4
 12190                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
 12191                           	line	57
 12192                           	
 12193                           l3850:	
 12194  07F7                     ;I2C.c: 57:     I2C_Master_Wait();
 12195                           	fcall	_I2C_Master_Wait
 12196  07F7  160A  118A  2129  120A  118A  	line	58
 12197                           	
 12198                           l3852:	
 12199  07FC                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
 12200                           	bsf	status, 5	;RP0=1, select bank1
 12201  07FC  1683               	bcf	status, 6	;RP1=0, select bank1
 12202  07FD  1303               	bsf	(145)^080h,2	;volatile
 12203  07FE  1511               	line	59
 12204                           	
 12205                           l44:	
 12206  07FF                     	return
 12207  07FF  0008               	opt stack 0
 12208                           GLOBAL	__end_of_I2C_Master_Stop
 12209                           	__end_of_I2C_Master_Stop:
 12210  0800                     	signat	_I2C_Master_Stop,89
 12211                           	global	_I2C_Master_Start
 12212                           
 12213 ;; *************** function _I2C_Master_Start *****************
 12214 ;; Defined at:
 12215 ;;		line 39 in file "I2C.c"
 12216 ;; Parameters:    Size  Location     Type
 12217 ;;		None
 12218 ;; Auto vars:     Size  Location     Type
 12219 ;;		None
 12220 ;; Return value:  Size  Location     Type
 12221 ;;                  1    wreg      void 
 12222 ;; Registers used:
 12223 ;;		wreg, status,2, status,0, pclath, cstack
 12224 ;; Tracked objects:
 12225 ;;		On entry : 0/0
 12226 ;;		On exit  : 0/0
 12227 ;;		Unchanged: 0/0
 12228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12229 ;;      Params:         0       0       0       0       0
 12230 ;;      Locals:         0       0       0       0       0
 12231 ;;      Temps:          0       0       0       0       0
 12232 ;;      Totals:         0       0       0       0       0
 12233 ;;Total ram usage:        0 bytes
 12234 ;; Hardware stack levels used:    1
 12235 ;; Hardware stack levels required when called:    3
 12236 ;; This function calls:
 12237 ;;		_I2C_Master_Wait
 12238 ;; This function is called by:
 12239 ;;		_main
 12240 ;; This function uses a non-reentrant model
 12241 ;;
 12242                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
 12243                           	line	39
 12244                           global __ptext27
 12245                           __ptext27:	;psect for function _I2C_Master_Start
 12246  1116                     psect	text27
 12247                           	file	"I2C.c"
 12248                           	line	39
 12249                           	global	__size_of_I2C_Master_Start
 12250                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
 12251  0009                     	
 12252                           _I2C_Master_Start:	
 12253  1116                     ;incstack = 0
 12254                           	opt	stack 4
 12255                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
 12256                           	line	41
 12257                           	
 12258                           l3846:	
 12259  1116                     ;I2C.c: 41:     I2C_Master_Wait();
 12260                           	fcall	_I2C_Master_Wait
 12261  1116  160A  118A  2129  160A  118A  	line	42
 12262                           	
 12263                           l3848:	
 12264  111B                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
 12265                           	bsf	status, 5	;RP0=1, select bank1
 12266  111B  1683               	bcf	status, 6	;RP1=0, select bank1
 12267  111C  1303               	bsf	(145)^080h,0	;volatile
 12268  111D  1411               	line	43
 12269                           	
 12270                           l38:	
 12271  111E                     	return
 12272  111E  0008               	opt stack 0
 12273                           GLOBAL	__end_of_I2C_Master_Start
 12274                           	__end_of_I2C_Master_Start:
 12275  111F                     	signat	_I2C_Master_Start,89
 12276                           	global	_I2C_Master_Read
 12277                           
 12278 ;; *************** function _I2C_Master_Read *****************
 12279 ;; Defined at:
 12280 ;;		line 74 in file "I2C.c"
 12281 ;; Parameters:    Size  Location     Type
 12282 ;;  a               2    0[BANK0 ] unsigned short 
 12283 ;; Auto vars:     Size  Location     Type
 12284 ;;  temp            2    4[BANK0 ] unsigned short 
 12285 ;; Return value:  Size  Location     Type
 12286 ;;                  2    0[BANK0 ] unsigned short 
 12287 ;; Registers used:
 12288 ;;		wreg, status,2, status,0, pclath, cstack
 12289 ;; Tracked objects:
 12290 ;;		On entry : 0/0
 12291 ;;		On exit  : 0/0
 12292 ;;		Unchanged: 0/0
 12293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12294 ;;      Params:         0       2       0       0       0
 12295 ;;      Locals:         0       2       0       0       0
 12296 ;;      Temps:          0       2       0       0       0
 12297 ;;      Totals:         0       6       0       0       0
 12298 ;;Total ram usage:        6 bytes
 12299 ;; Hardware stack levels used:    1
 12300 ;; Hardware stack levels required when called:    3
 12301 ;; This function calls:
 12302 ;;		_I2C_Master_Wait
 12303 ;; This function is called by:
 12304 ;;		_main
 12305 ;; This function uses a non-reentrant model
 12306 ;;
 12307                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
 12308                           	line	74
 12309                           global __ptext28
 12310                           __ptext28:	;psect for function _I2C_Master_Read
 12311  1204                     psect	text28
 12312                           	file	"I2C.c"
 12313                           	line	74
 12314                           	global	__size_of_I2C_Master_Read
 12315                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
 12316  0033                     	
 12317                           _I2C_Master_Read:	
 12318  1204                     ;incstack = 0
 12319                           	opt	stack 4
 12320                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
 12321                           	line	77
 12322                           	
 12323                           l3858:	
 12324  1204                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
 12325                           	fcall	_I2C_Master_Wait
 12326  1204  160A  118A  2129  160A  118A  	line	78
 12327                           	
 12328                           l3860:	
 12329  1209                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
 12330                           	bsf	status, 5	;RP0=1, select bank1
 12331  1209  1683               	bcf	status, 6	;RP1=0, select bank1
 12332  120A  1303               	bsf	(145)^080h,3	;volatile
 12333  120B  1591               	line	79
 12334                           ;I2C.c: 79:     I2C_Master_Wait();
 12335                           	fcall	_I2C_Master_Wait
 12336  120C  160A  118A  2129  160A  118A  	line	80
 12337                           	
 12338                           l3862:	
 12339  1211                     ;I2C.c: 80:     temp = SSPBUF;
 12340                           	bcf	status, 5	;RP0=0, select bank0
 12341  1211  1283               	bcf	status, 6	;RP1=0, select bank0
 12342  1212  1303               	movf	(19),w	;volatile
 12343  1213  0813               	movwf	(??_I2C_Master_Read+0)+0
 12344  1214  00A2               	clrf	(??_I2C_Master_Read+0)+0+1
 12345  1215  01A3               	movf	0+(??_I2C_Master_Read+0)+0,w
 12346  1216  0822               	movwf	(I2C_Master_Read@temp)
 12347  1217  00A4               	movf	1+(??_I2C_Master_Read+0)+0,w
 12348  1218  0823               	movwf	(I2C_Master_Read@temp+1)
 12349  1219  00A5               	line	81
 12350                           	
 12351                           l3864:	
 12352  121A                     ;I2C.c: 81:     I2C_Master_Wait();
 12353                           	fcall	_I2C_Master_Wait
 12354  121A  160A  118A  2129  160A  118A  	line	82
 12355                           	
 12356                           l3866:	
 12357  121F                     ;I2C.c: 82:     if(a == 1){
 12358                           	bcf	status, 5	;RP0=0, select bank0
 12359  121F  1283               	bcf	status, 6	;RP1=0, select bank0
 12360  1220  1303               		decf	((I2C_Master_Read@a)),w
 12361  1221  0320               iorwf	((I2C_Master_Read@a+1)),w
 12362  1222  0421               	btfss	status,2
 12363  1223  1D03               	goto	u5551
 12364  1224  2A26               	goto	u5550
 12365  1225  2A27               u5551:
 12366  1226                     	goto	l50
 12367  1226  2A2B               u5550:
 12368  1227                     	line	83
 12369                           	
 12370                           l3868:	
 12371  1227                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
 12372                           	bsf	status, 5	;RP0=1, select bank1
 12373  1227  1683               	bcf	status, 6	;RP1=0, select bank1
 12374  1228  1303               	bcf	(145)^080h,5	;volatile
 12375  1229  1291               	line	84
 12376                           ;I2C.c: 84:     }else{
 12377                           	goto	l51
 12378  122A  2A2E               	
 12379                           l50:	
 12380  122B                     	line	85
 12381                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
 12382                           	bsf	status, 5	;RP0=1, select bank1
 12383  122B  1683               	bcf	status, 6	;RP1=0, select bank1
 12384  122C  1303               	bsf	(145)^080h,5	;volatile
 12385  122D  1691               	line	86
 12386                           ;I2C.c: 86:     }
 12387                           	
 12388                           l51:	
 12389  122E                     	line	87
 12390                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
 12391                           	bsf	(145)^080h,4	;volatile
 12392  122E  1611               	line	88
 12393                           	
 12394                           l3870:	
 12395  122F                     ;I2C.c: 88:     return temp;
 12396                           	bcf	status, 5	;RP0=0, select bank0
 12397  122F  1283               	bcf	status, 6	;RP1=0, select bank0
 12398  1230  1303               	movf	(I2C_Master_Read@temp+1),w
 12399  1231  0825               	movwf	(?_I2C_Master_Read+1)
 12400  1232  00A1               	movf	(I2C_Master_Read@temp),w
 12401  1233  0824               	movwf	(?_I2C_Master_Read)
 12402  1234  00A0               	goto	l52
 12403  1235  2A36               	
 12404                           l3872:	
 12405  1236                     	line	89
 12406                           	
 12407                           l52:	
 12408  1236                     	return
 12409  1236  0008               	opt stack 0
 12410                           GLOBAL	__end_of_I2C_Master_Read
 12411                           	__end_of_I2C_Master_Read:
 12412  1237                     	signat	_I2C_Master_Read,4218
 12413                           	global	_I2C_Master_Wait
 12414                           
 12415 ;; *************** function _I2C_Master_Wait *****************
 12416 ;; Defined at:
 12417 ;;		line 32 in file "I2C.c"
 12418 ;; Parameters:    Size  Location     Type
 12419 ;;		None
 12420 ;; Auto vars:     Size  Location     Type
 12421 ;;		None
 12422 ;; Return value:  Size  Location     Type
 12423 ;;                  1    wreg      void 
 12424 ;; Registers used:
 12425 ;;		wreg, status,2
 12426 ;; Tracked objects:
 12427 ;;		On entry : 0/0
 12428 ;;		On exit  : 0/0
 12429 ;;		Unchanged: 0/0
 12430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12431 ;;      Params:         0       0       0       0       0
 12432 ;;      Locals:         0       0       0       0       0
 12433 ;;      Temps:          0       0       0       0       0
 12434 ;;      Totals:         0       0       0       0       0
 12435 ;;Total ram usage:        0 bytes
 12436 ;; Hardware stack levels used:    1
 12437 ;; Hardware stack levels required when called:    2
 12438 ;; This function calls:
 12439 ;;		Nothing
 12440 ;; This function is called by:
 12441 ;;		_I2C_Master_Start
 12442 ;;		_I2C_Master_Stop
 12443 ;;		_I2C_Master_Write
 12444 ;;		_I2C_Master_Read
 12445 ;;		_I2C_Master_RepeatedStart
 12446 ;; This function uses a non-reentrant model
 12447 ;;
 12448                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
 12449                           	line	32
 12450                           global __ptext29
 12451                           __ptext29:	;psect for function _I2C_Master_Wait
 12452  1129                     psect	text29
 12453                           	file	"I2C.c"
 12454                           	line	32
 12455                           	global	__size_of_I2C_Master_Wait
 12456                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
 12457  000F                     	
 12458                           _I2C_Master_Wait:	
 12459  1129                     ;incstack = 0
 12460                           	opt	stack 4
 12461                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
 12462                           	line	34
 12463                           	
 12464                           l3698:	
 12465  1129                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
 12466                           	goto	l32
 12467  1129  292A               	
 12468                           l33:	
 12469  112A                     	
 12470                           l32:	
 12471  112A                     	bsf	status, 5	;RP0=1, select bank1
 12472  112A  1683               	bcf	status, 6	;RP1=0, select bank1
 12473  112B  1303               	btfsc	(148)^080h,(2)&7	;volatile
 12474  112C  1914               	goto	u5311
 12475  112D  292F               	goto	u5310
 12476  112E  2930               u5311:
 12477  112F                     	goto	l32
 12478  112F  292A               u5310:
 12479  1130                     	
 12480                           l3700:	
 12481  1130                     	movf	(145)^080h,w	;volatile
 12482  1130  0811               	andlw	01Fh
 12483  1131  391F               	btfss	status,2
 12484  1132  1D03               	goto	u5321
 12485  1133  2935               	goto	u5320
 12486  1134  2936               u5321:
 12487  1135                     	goto	l32
 12488  1135  292A               u5320:
 12489  1136                     	goto	l35
 12490  1136  2937               	
 12491                           l34:	
 12492  1137                     	line	35
 12493                           	
 12494                           l35:	
 12495  1137                     	return
 12496  1137  0008               	opt stack 0
 12497                           GLOBAL	__end_of_I2C_Master_Wait
 12498                           	__end_of_I2C_Master_Wait:
 12499  1138                     	signat	_I2C_Master_Wait,89
 12500                           	global	_isr
 12501                           
 12502 ;; *************** function _isr *****************
 12503 ;; Defined at:
 12504 ;;		line 64 in file "mainM.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;		None
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;		None
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1    wreg      void 
 12511 ;; Registers used:
 12512 ;;		wreg, status,2, status,0, pclath, cstack
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 0/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12518 ;;      Params:         0       0       0       0       0
 12519 ;;      Locals:         0       0       0       0       0
 12520 ;;      Temps:          3       0       0       0       0
 12521 ;;      Totals:         3       0       0       0       0
 12522 ;;Total ram usage:        3 bytes
 12523 ;; Hardware stack levels used:    1
 12524 ;; Hardware stack levels required when called:    1
 12525 ;; This function calls:
 12526 ;;		_readADC
 12527 ;;		_sendUSART
 12528 ;; This function is called by:
 12529 ;;		Interrupt level 1
 12530 ;; This function uses a non-reentrant model
 12531 ;;
 12532                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
 12533                           	file	"mainM.c"
 12534                           	line	64
 12535                           global __ptext30
 12536                           __ptext30:	;psect for function _isr
 12537  14B2                     psect	text30
 12538                           	file	"mainM.c"
 12539                           	line	64
 12540                           	global	__size_of_isr
 12541                           	__size_of_isr	equ	__end_of_isr-_isr
 12542  0092                     	
 12543                           _isr:	
 12544  14B2                     ;incstack = 0
 12545                           	opt	stack 3
 12546                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
 12547                           psect	intentry,class=CODE,delta=2
 12548                           global __pintentry
 12549                           __pintentry:
 12550  0004                     global interrupt_function
 12551                           interrupt_function:
 12552  0004                     	global saved_w
 12553                           	saved_w	set	btemp+0
 12554  007E                     	movwf	saved_w
 12555  0004  00FE               	swapf	status,w
 12556  0005  0E03               	movwf	(??_isr+1)
 12557  0006  00F8               	movf	pclath,w
 12558  0007  080A               	movwf	(??_isr+2)
 12559  0008  00F9               	ljmp	_isr
 12560  0009  160A  118A  2CB2   psect	text30
 12561                           	line	65
 12562                           	
 12563                           i1l3342:	
 12564  14B2                     ;mainM.c: 65:     if(ADCON0bits.GO_DONE == 0){
 12565                           	bcf	status, 5	;RP0=0, select bank0
 12566  14B2  1283               	bcf	status, 6	;RP1=0, select bank0
 12567  14B3  1303               	btfsc	(31),1	;volatile
 12568  14B4  189F               	goto	u470_21
 12569  14B5  2CB7               	goto	u470_20
 12570  14B6  2CB8               u470_21:
 12571  14B7                     	goto	i1l3348
 12572  14B7  2CC6               u470_20:
 12573  14B8                     	line	66
 12574                           	
 12575                           i1l3344:	
 12576  14B8                     ;mainM.c: 66:         adc = readADC();
 12577                           	fcall	_readADC
 12578  14B8  120A  158A  20A2  160A  118A  	movwf	(??_isr+0)+0
 12579  14BD  00F7               	movf	(??_isr+0)+0,w
 12580  14BE  0877               	bsf	status, 5	;RP0=1, select bank1
 12581  14BF  1683               	bcf	status, 6	;RP1=0, select bank1
 12582  14C0  1303               	movwf	(_adc)^080h
 12583  14C1  00BF               	line	67
 12584                           	
 12585                           i1l3346:	
 12586  14C2                     ;mainM.c: 67:         PIR1bits.ADIF = 0;
 12587                           	bcf	status, 5	;RP0=0, select bank0
 12588  14C2  1283               	bcf	status, 6	;RP1=0, select bank0
 12589  14C3  1303               	bcf	(12),6	;volatile
 12590  14C4  130C               	goto	i1l3348
 12591  14C5  2CC6               	line	68
 12592                           ;mainM.c: 68:     }
 12593                           	
 12594                           i1l227:	
 12595  14C6                     	line	70
 12596                           	
 12597                           i1l3348:	
 12598  14C6                     ;mainM.c: 70:     if(PIR1bits.RCIF == 1){
 12599                           	btfss	(12),5	;volatile
 12600  14C6  1E8C               	goto	u471_21
 12601  14C7  2CC9               	goto	u471_20
 12602  14C8  2CCA               u471_21:
 12603  14C9                     	goto	i1l244
 12604  14C9  2D3D               u471_20:
 12605  14CA                     	line	71
 12606                           	
 12607                           i1l3350:	
 12608  14CA                     ;mainM.c: 71:         PORTAbits.RA0 = 1;
 12609                           	bsf	(5),0	;volatile
 12610  14CA  1405               	line	72
 12611                           	
 12612                           i1l3352:	
 12613  14CB                     ;mainM.c: 72:         receiveUSART = RCREG;
 12614                           	movf	(26),w	;volatile
 12615  14CB  081A               	movwf	(??_isr+0)+0
 12616  14CC  00F7               	movf	(??_isr+0)+0,w
 12617  14CD  0877               	movwf	(_receiveUSART)
 12618  14CE  00F0               	line	74
 12619                           	
 12620                           i1l3354:	
 12621  14CF                     ;mainM.c: 74:         if(receiveUSART==0){
 12622                           	movf	((_receiveUSART)),w
 12623  14CF  0870               	btfss	status,2
 12624  14D0  1D03               	goto	u472_21
 12625  14D1  2CD3               	goto	u472_20
 12626  14D2  2CD4               u472_21:
 12627  14D3                     	goto	i1l3358
 12628  14D3  2CDB               u472_20:
 12629  14D4                     	line	75
 12630                           	
 12631                           i1l3356:	
 12632  14D4                     ;mainM.c: 75:             sendUSART(68);
 12633                           	movlw	low(044h)
 12634  14D4  3044               	fcall	_sendUSART
 12635  14D5  160A  118A  2159  160A  118A  	line	76
 12636                           ;mainM.c: 76:         }else if(receiveUSART==1){
 12637                           	goto	i1l244
 12638  14DA  2D3D               	
 12639                           i1l229:	
 12640  14DB                     	
 12641                           i1l3358:	
 12642  14DB                     		decf	((_receiveUSART)),w
 12643  14DB  0370               	btfss	status,2
 12644  14DC  1D03               	goto	u473_21
 12645  14DD  2CDF               	goto	u473_20
 12646  14DE  2CE0               u473_21:
 12647  14DF                     	goto	i1l3362
 12648  14DF  2CE7               u473_20:
 12649  14E0                     	line	77
 12650                           	
 12651                           i1l3360:	
 12652  14E0                     ;mainM.c: 77:             sendUSART(93);
 12653                           	movlw	low(05Dh)
 12654  14E0  305D               	fcall	_sendUSART
 12655  14E1  160A  118A  2159  160A  118A  	line	78
 12656                           ;mainM.c: 78:         }else if(receiveUSART==2){
 12657                           	goto	i1l244
 12658  14E6  2D3D               	
 12659                           i1l231:	
 12660  14E7                     	
 12661                           i1l3362:	
 12662  14E7                     		movlw	2
 12663  14E7  3002               	xorwf	((_receiveUSART)),w
 12664  14E8  0670               	btfss	status,2
 12665  14E9  1D03               	goto	u474_21
 12666  14EA  2CEC               	goto	u474_20
 12667  14EB  2CED               u474_21:
 12668  14EC                     	goto	i1l3366
 12669  14EC  2CF4               u474_20:
 12670  14ED                     	line	79
 12671                           	
 12672                           i1l3364:	
 12673  14ED                     ;mainM.c: 79:             sendUSART(32);
 12674                           	movlw	low(020h)
 12675  14ED  3020               	fcall	_sendUSART
 12676  14EE  160A  118A  2159  160A  118A  	line	80
 12677                           ;mainM.c: 80:         }else if(receiveUSART==3){
 12678                           	goto	i1l244
 12679  14F3  2D3D               	
 12680                           i1l233:	
 12681  14F4                     	
 12682                           i1l3366:	
 12683  14F4                     		movlw	3
 12684  14F4  3003               	xorwf	((_receiveUSART)),w
 12685  14F5  0670               	btfss	status,2
 12686  14F6  1D03               	goto	u475_21
 12687  14F7  2CF9               	goto	u475_20
 12688  14F8  2CFA               u475_21:
 12689  14F9                     	goto	i1l3370
 12690  14F9  2D01               u475_20:
 12691  14FA                     	line	81
 12692                           	
 12693                           i1l3368:	
 12694  14FA                     ;mainM.c: 81:             sendUSART(46);
 12695                           	movlw	low(02Eh)
 12696  14FA  302E               	fcall	_sendUSART
 12697  14FB  160A  118A  2159  160A  118A  	line	82
 12698                           ;mainM.c: 82:         }else if(receiveUSART==4){
 12699                           	goto	i1l244
 12700  1500  2D3D               	
 12701                           i1l235:	
 12702  1501                     	
 12703                           i1l3370:	
 12704  1501                     		movlw	4
 12705  1501  3004               	xorwf	((_receiveUSART)),w
 12706  1502  0670               	btfss	status,2
 12707  1503  1D03               	goto	u476_21
 12708  1504  2D06               	goto	u476_20
 12709  1505  2D07               u476_21:
 12710  1506                     	goto	i1l3374
 12711  1506  2D0E               u476_20:
 12712  1507                     	line	83
 12713                           	
 12714                           i1l3372:	
 12715  1507                     ;mainM.c: 83:             sendUSART(120);
 12716                           	movlw	low(078h)
 12717  1507  3078               	fcall	_sendUSART
 12718  1508  160A  118A  2159  160A  118A  	line	84
 12719                           ;mainM.c: 84:         }else if(receiveUSART==5){
 12720                           	goto	i1l244
 12721  150D  2D3D               	
 12722                           i1l237:	
 12723  150E                     	
 12724                           i1l3374:	
 12725  150E                     		movlw	5
 12726  150E  3005               	xorwf	((_receiveUSART)),w
 12727  150F  0670               	btfss	status,2
 12728  1510  1D03               	goto	u477_21
 12729  1511  2D13               	goto	u477_20
 12730  1512  2D14               u477_21:
 12731  1513                     	goto	i1l3378
 12732  1513  2D1B               u477_20:
 12733  1514                     	line	85
 12734                           	
 12735                           i1l3376:	
 12736  1514                     ;mainM.c: 85:             sendUSART(3);
 12737                           	movlw	low(03h)
 12738  1514  3003               	fcall	_sendUSART
 12739  1515  160A  118A  2159  160A  118A  	line	86
 12740                           ;mainM.c: 86:         }else if(receiveUSART==6){
 12741                           	goto	i1l244
 12742  151A  2D3D               	
 12743                           i1l239:	
 12744  151B                     	
 12745                           i1l3378:	
 12746  151B                     		movlw	6
 12747  151B  3006               	xorwf	((_receiveUSART)),w
 12748  151C  0670               	btfss	status,2
 12749  151D  1D03               	goto	u478_21
 12750  151E  2D20               	goto	u478_20
 12751  151F  2D21               u478_21:
 12752  1520                     	goto	i1l3382
 12753  1520  2D28               u478_20:
 12754  1521                     	line	87
 12755                           	
 12756                           i1l3380:	
 12757  1521                     ;mainM.c: 87:             sendUSART(99);
 12758                           	movlw	low(063h)
 12759  1521  3063               	fcall	_sendUSART
 12760  1522  160A  118A  2159  160A  118A  	line	88
 12761                           ;mainM.c: 88:         }else if(receiveUSART==7){
 12762                           	goto	i1l244
 12763  1527  2D3D               	
 12764                           i1l241:	
 12765  1528                     	
 12766                           i1l3382:	
 12767  1528                     		movlw	7
 12768  1528  3007               	xorwf	((_receiveUSART)),w
 12769  1529  0670               	btfss	status,2
 12770  152A  1D03               	goto	u479_21
 12771  152B  2D2D               	goto	u479_20
 12772  152C  2D2E               u479_21:
 12773  152D                     	goto	i1l244
 12774  152D  2D3D               u479_20:
 12775  152E                     	line	89
 12776                           	
 12777                           i1l3384:	
 12778  152E                     ;mainM.c: 89:             sendUSART(14);
 12779                           	movlw	low(0Eh)
 12780  152E  300E               	fcall	_sendUSART
 12781  152F  160A  118A  2159  160A  118A  	goto	i1l244
 12782  1534  2D3D               	line	90
 12783                           ;mainM.c: 90:         }
 12784                           	
 12785                           i1l243:	
 12786  1535                     	goto	i1l244
 12787  1535  2D3D               	
 12788                           i1l242:	
 12789  1536                     	goto	i1l244
 12790  1536  2D3D               	
 12791                           i1l240:	
 12792  1537                     	goto	i1l244
 12793  1537  2D3D               	
 12794                           i1l238:	
 12795  1538                     	goto	i1l244
 12796  1538  2D3D               	
 12797                           i1l236:	
 12798  1539                     	goto	i1l244
 12799  1539  2D3D               	
 12800                           i1l234:	
 12801  153A                     	goto	i1l244
 12802  153A  2D3D               	
 12803                           i1l232:	
 12804  153B                     	goto	i1l244
 12805  153B  2D3D               	
 12806                           i1l230:	
 12807  153C                     	goto	i1l244
 12808  153C  2D3D               	line	91
 12809                           ;mainM.c: 91:     }
 12810                           	
 12811                           i1l228:	
 12812  153D                     	line	92
 12813                           	
 12814                           i1l244:	
 12815  153D                     	movf	(??_isr+2),w
 12816  153D  0879               	movwf	pclath
 12817  153E  008A               	swapf	(??_isr+1)^0FFFFFF80h,w
 12818  153F  0E78               	movwf	status
 12819  1540  0083               	swapf	saved_w,f
 12820  1541  0EFE               	swapf	saved_w,w
 12821  1542  0E7E               	retfie
 12822  1543  0009               	opt stack 0
 12823                           GLOBAL	__end_of_isr
 12824                           	__end_of_isr:
 12825  1544                     	signat	_isr,89
 12826                           	global	_sendUSART
 12827                           
 12828 ;; *************** function _sendUSART *****************
 12829 ;; Defined at:
 12830 ;;		line 43 in file "USART.c"
 12831 ;; Parameters:    Size  Location     Type
 12832 ;;  data            1    wreg     unsigned char 
 12833 ;; Auto vars:     Size  Location     Type
 12834 ;;  data            1    1[COMMON] unsigned char 
 12835 ;; Return value:  Size  Location     Type
 12836 ;;                  1    wreg      void 
 12837 ;; Registers used:
 12838 ;;		wreg
 12839 ;; Tracked objects:
 12840 ;;		On entry : 0/0
 12841 ;;		On exit  : 0/0
 12842 ;;		Unchanged: 0/0
 12843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12844 ;;      Params:         0       0       0       0       0
 12845 ;;      Locals:         1       0       0       0       0
 12846 ;;      Temps:          1       0       0       0       0
 12847 ;;      Totals:         2       0       0       0       0
 12848 ;;Total ram usage:        2 bytes
 12849 ;; Hardware stack levels used:    1
 12850 ;; This function calls:
 12851 ;;		Nothing
 12852 ;; This function is called by:
 12853 ;;		_isr
 12854 ;; This function uses a non-reentrant model
 12855 ;;
 12856                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 12857                           	file	"USART.c"
 12858                           	line	43
 12859                           global __ptext31
 12860                           __ptext31:	;psect for function _sendUSART
 12861  1159                     psect	text31
 12862                           	file	"USART.c"
 12863                           	line	43
 12864                           	global	__size_of_sendUSART
 12865                           	__size_of_sendUSART	equ	__end_of_sendUSART-_sendUSART
 12866  0015                     	
 12867                           _sendUSART:	
 12868  1159                     ;incstack = 0
 12869                           	opt	stack 3
 12870                           ; Regs used in _sendUSART: [wreg]
 12871                           ;sendUSART@data stored from wreg
 12872                           	movwf	(sendUSART@data)
 12873  1159  00F6               	line	44
 12874                           	
 12875                           i1l2626:	
 12876  115A                     ;USART.c: 44:     while (TXSTAbits.TRMT == 0){}
 12877                           	goto	i1l410
 12878  115A  295B               	
 12879                           i1l411:	
 12880  115B                     	
 12881                           i1l410:	
 12882  115B                     	bsf	status, 5	;RP0=1, select bank1
 12883  115B  1683               	bcf	status, 6	;RP1=0, select bank1
 12884  115C  1303               	btfss	(152)^080h,1	;volatile
 12885  115D  1C98               	goto	u305_21
 12886  115E  2960               	goto	u305_20
 12887  115F  2961               u305_21:
 12888  1160                     	goto	i1l410
 12889  1160  295B               u305_20:
 12890  1161                     	goto	i1l2628
 12891  1161  2962               	
 12892                           i1l412:	
 12893  1162                     	line	45
 12894                           	
 12895                           i1l2628:	
 12896  1162                     ;USART.c: 45:     TXREG = data;
 12897                           	movf	(sendUSART@data),w
 12898  1162  0876               	bcf	status, 5	;RP0=0, select bank0
 12899  1163  1283               	bcf	status, 6	;RP1=0, select bank0
 12900  1164  1303               	movwf	(25)	;volatile
 12901  1165  0099               	line	46
 12902                           ;USART.c: 46:     _delay((unsigned long)((1)*(4000000/4000.0)));
 12903                           	opt asmopt_push
 12904                           opt asmopt_off
 12905                           	movlw	199
 12906  1166  30C7               movwf	((??_sendUSART+0)+0),f
 12907  1167  00F5               	u707_27:
 12908  1168                     	nop2
 12909  1168  2969               decfsz	(??_sendUSART+0)+0,f
 12910  1169  0BF5               	goto	u707_27
 12911  116A  2968               	nop2
 12912  116B  296C               	nop2
 12913  116C  296D               opt asmopt_pop
 12914                           
 12915                           	line	47
 12916                           	
 12917                           i1l413:	
 12918  116D                     	return
 12919  116D  0008               	opt stack 0
 12920                           GLOBAL	__end_of_sendUSART
 12921                           	__end_of_sendUSART:
 12922  116E                     	signat	_sendUSART,4217
 12923                           	global	_readADC
 12924                           
 12925 ;; *************** function _readADC *****************
 12926 ;; Defined at:
 12927 ;;		line 6 in file "ADC.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;		None
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;		None
 12932 ;; Return value:  Size  Location     Type
 12933 ;;                  1    wreg      unsigned char 
 12934 ;; Registers used:
 12935 ;;		wreg
 12936 ;; Tracked objects:
 12937 ;;		On entry : 0/0
 12938 ;;		On exit  : 0/0
 12939 ;;		Unchanged: 0/0
 12940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 12941 ;;      Params:         0       0       0       0       0
 12942 ;;      Locals:         0       0       0       0       0
 12943 ;;      Temps:          0       0       0       0       0
 12944 ;;      Totals:         0       0       0       0       0
 12945 ;;Total ram usage:        0 bytes
 12946 ;; Hardware stack levels used:    1
 12947 ;; This function calls:
 12948 ;;		Nothing
 12949 ;; This function is called by:
 12950 ;;		_isr
 12951 ;; This function uses a non-reentrant model
 12952 ;;
 12953                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 12954                           	file	"ADC.c"
 12955                           	line	6
 12956                           global __ptext32
 12957                           __ptext32:	;psect for function _readADC
 12958  08A2                     psect	text32
 12959                           	file	"ADC.c"
 12960                           	line	6
 12961                           	global	__size_of_readADC
 12962                           	__size_of_readADC	equ	__end_of_readADC-_readADC
 12963  0005                     	
 12964                           _readADC:	
 12965  08A2                     ;incstack = 0
 12966                           	opt	stack 3
 12967                           ; Regs used in _readADC: [wreg]
 12968                           	line	7
 12969                           	
 12970                           i1l2622:	
 12971  08A2                     ;ADC.c: 7:     return ADRESH;
 12972                           	bcf	status, 5	;RP0=0, select bank0
 12973  08A2  1283               	bcf	status, 6	;RP1=0, select bank0
 12974  08A3  1303               	movf	(30),w	;volatile
 12975  08A4  081E               	goto	i1l338
 12976  08A5  28A6               	
 12977                           i1l2624:	
 12978  08A6                     	line	8
 12979                           	
 12980                           i1l338:	
 12981  08A6                     	return
 12982  08A6  0008               	opt stack 0
 12983                           GLOBAL	__end_of_readADC
 12984                           	__end_of_readADC:
 12985  08A7                     	signat	_readADC,89
 12986                           global	___latbits
 12987                           ___latbits	equ	2
 12988  0002                     	global	btemp
 12989                           	btemp set 07Eh
 12990  007E                     
 12991                           	DABS	1,126,2	;btemp
 12992                           	global	wtemp0
 12993                           	wtemp0 set btemp+0
 12994  007E                     	end


Data Sizes:
    Strings     136
    Constant    10
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5      10
    BANK0            80     76      79
    BANK1            80     22      57
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 5
		 -> writeIntLCD16@buffer(COMMON[5]), writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 15
		 -> STR_25(CODE[15]), STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[15]), 
		 -> STR_21(CODE[12]), STR_20(CODE[7]), STR_19(CODE[8]), STR_18(CODE[15]), 
		 -> STR_17(CODE[11]), STR_16(CODE[8]), STR_15(CODE[8]), STR_14(CODE[8]), 
		 -> STR_13(CODE[12]), STR_12(CODE[15]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[11]), STR_8(CODE[8]), STR_7(CODE[8]), STR_6(CODE[8]), 
		 -> STR_5(CODE[12]), STR_4(CODE[5]), STR_3(CODE[6]), writeIntLCD16@buffer(COMMON[5]), 
		 -> writeIntLCD@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_sendUSART

Critical Paths under _main in BANK0

    _main->___fldiv
    _writeIntLCD->_sprintf
    _writeStrLCD->_writeCharLCD
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _setup->_I2C_Master_Init
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    _setCursorLCD->_cmdLCD
    ___flneg->___xxtofl
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flneg
    ___awdiv->___wmul

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    _main->___fldiv

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   20736
                                             18 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                             ___wmul
                           ___xxtofl
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    4214
                                             27 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2    2411
                                              2 BANK0      7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      31
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1680
                                             14 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     421
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1243
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                          _initUSART
 ---------------------------------------------------------------------------------
 (2) _initUSART                                            5     0      5     639
                                              0 BANK0      5     0      5
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      31
                                              3 BANK0      2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      31
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     542
                                             14 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     421
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _setCursorLCD                                         3     2      1     844
                                              3 BANK0      3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      31
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     656
                                              0 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     316
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     517
                                              0 BANK0     11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     155
                                             14 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    3533
                                             42 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     980
                                              0 BANK0      9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    2043
                                             68 BANK0      8     0      8
                                              0 BANK1     18    18      0
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                             18 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     973
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4     452
                                              6 BANK0      9     5      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     301
                                              0 BANK0      2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     785
                                              0 BANK0      6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (4) _isr                                                  3     3      0      22
                                              2 COMMON     3     3      0
                            _readADC
                          _sendUSART
 ---------------------------------------------------------------------------------
 (5) _sendUSART                                            2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (5) _readADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___awdiv
     ___wmul (ARG)
   ___awmod
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___wmul
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _initUSART
   _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 _isr (ROOT)
   _readADC
   _sendUSART

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      92       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4C      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     16      39       7       71.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      92      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Mar 11 11:22:38 2020

             ___fldiv@aexp 00D4               ___fldiv@bexp 00D3                          pc 0002  
             ___fldiv@sign 00CC                __CFG_CP$OFF 0000            writeStrLCD@cont 0027  
                       l32 112A                         l33 112A                         l34 1137  
                       l50 122B                         l35 1137                         l51 122E  
                       l52 1236                         l44 07FF                         l29 1270  
                       l38 111E                         l47 1128                         l74 117E  
                       l82 1354                         l75 1187                         l91 12AB  
                       l83 132F                         l76 118D                         l84 1371  
                       l85 1371                         l94 08BC                         l79 110D  
                       l88 1158                         l97 11AD               ___awdiv@sign 002C  
                       _s3 00B9                         _ir 00B4                         fsr 0004  
      ___wmul@multiplicand 0022        __Umul8_16@word_mpld 0026                        l300 0581  
                      l301 058D                        l302 05B7                        l311 12E6  
                      l303 05B6                        l400 147F                        l304 05A9  
                      l401 14AD                        l305 05B5                        l402 148E  
                      l306 05BA                        l250 0034                        l403 14AC  
                      l307 05BB                        l251 007E                        l404 149D  
                      l308 05BB                        l260 013F                        l252 00AF  
                      l405 14AB                        l261 0187                        l253 0095  
                      l406 14AA                        l510 05DB                        l270 03A2  
                      l262 01A0                        l254 00AE                        l407 14B1  
                      l511 05DC                        l271 03A4                        l263 019F  
                      l255 00AD                        l504 06A6                        l520 065F  
                      l512 05FC                        l272 04C9                        l280 0494  
                      l264 0337                        l256 010E                        l521 06A5  
                      l513 05DD                        l505 05C6                        l281 0487  
                      l273 03DA                        l265 036F                        l257 0141  
                      l249 002C                        l522 06B9                        l514 0616  
                      l506 05D8                        l290 0500                        l282 0493  
                      l274 0428                        l266 0378                        l258 0126  
                      l523 06BF                        l515 0620                        l507 05DF  
                      l291 052B                        l283 04BD                        l275 0428  
                      l267 038F                        l259 0140                        l516 0648  
                      l508 05DA                        l292 052A                        l284 04BC  
                      l276 0471                        l268 0397                        l509 06BA  
                      l517 063D                        l293 051D                        l285 04AF  
                      l277 045E                        l269 039A                        l526 11B3  
                      l518 065A                        l294 0529                        l286 04BB  
                      l278 046A                        l527 11BD                        l519 069B  
                      l287 05B9                        l295 056B                        l279 04BD  
                      l720 09B0                        l712 094B                        l528 11D2  
                      l560 08E6                        l296 0558                        l288 0507  
                      l721 09A5                        l713 09C7                        l529 11D7  
                      l561 0911                        l297 0564                        l289 04F4  
                      l722 09B6                        l714 0994                        l562 0921  
                      l394 1441                        l802 1324                        l298 05B8  
                      l723 09C7                        l715 0980                        l563 092B  
                      l395 1449                        l803 12FE                        l299 058E  
                      l820 15AD                        l812 1557                        l900 0C6E  
                      l708 1145                        l716 0981                        l556 0922  
                      l396 1461                        l804 12F2                        l821 15F9  
                      l813 156D                        l709 1146                        l717 0993  
                      l557 08E0                        l397 14AF                        l805 1303  
                      l670 0793                        l830 1660                        l822 15BC  
                      l814 156A                        l910 0CE2                        l718 09B7  
                      l558 08D2                        l398 1470                        l806 1304  
                      l671 07A1                        l831 16B3                        l823 1632  
                      l815 1576                        l911 0CE0                        l719 09A4  
                      l559 08E5                        l399 14AE                        l807 1315  
                      l680 07F6                        l672 07E6                        l840 172E  
                      l832 1673                        l824 1660                        l816 1583  
                      l920 0F46                        l912 0CEB                        l808 1323  
                      l673 07B8                        l841 173D                        l833 17FF  
                      l825 1657                        l817 158F                        l921 0F6B  
                      l913 0D00                        l905 0C9E                        l809 1329  
                      l674 07AC                        l690 1404                        l850 1793  
                      l842 1754                        l834 16B2                        l826 1633  
                      l818 15A5                        l930 0FF2                        l922 0F62  
                      l906 0CB3                        l675 07BD                        l691 1412  
                      l683 13CE                        l851 178A                        l843 1776  
                      l835 169B                        l827 1640                        l819 15A2  
                      l931 0FEA                        l923 0F6A                        l915 0CF6  
                      l907 0CB1                        l676 07BE                        l692 141E  
                      l684 13D8                        l860 17E8                        l852 1792  
                      l844 1755                        l836 169E                        l828 1643  
                      l924 0F69                        l916 0FFF                        l908 0CBC  
                      l940 0710                        l677 07D7                        l693 1423  
                      l685 1413                        l861 17EF                        l853 1791  
                      l845 1763                        l837 16A4                        l829 1649  
                      l925 0FA3                        l917 0F41                        l909 0CCD  
                      l941 072C                        l678 07E5                        l686 13ED  
                      l862 17F3                        l854 17CE                        l838 177C  
                      l846 176A                        l870 0A00                        l926 0FA2  
                      l918 0F22                        l950 077A                        l942 0711  
                      l934 06DC                        l679 07F1                        l687 13E1  
                      l863 17FF                        l855 17CE                        l847 176D  
                      l839 172F                        l871 09FC                        l927 0FBB  
                      l919 0F31                        l943 0733                        l935 06E4  
                      l688 13F2                        l856 17CD                        l848 1775  
                      l880 0B51                        l872 0A0A                        l928 0FF2  
                      l944 0740                        l936 06F6                        l792 13B9  
                      l689 13F3                        l857 17E9                        l849 177B  
                      l881 0AD1                        l873 0A25                        l953 11E5  
                      l929 0FD6                        l945 0734                        l937 0783  
                      l793 138B                        l890 0B93                        l882 0B00  
                      l874 0A40                        l954 11EF                        l938 0709  
                      l794 137F                        l859 17D9                        l891 0BBE  
                      l883 0AF4                        l875 0A3C                        l955 11FE  
                      l947 074B                        l939 06FB                        l795 1390  
                      l892 0BB1                        l884 0B4C                        l876 0A49  
                      l956 1203                        l948 074B                        l796 1391  
                      l893 0BBD                        l885 0B58                        l877 0A6F  
                      l869 09E5                        l949 0757                        l797 13AA  
                      l894 0BBC                        l886 0B62                        l878 0C8A  
                      l798 13B8                        l895 0C18                        l887 0B8C  
                      l879 0A8A                        l799 13BE                        l896 0C17  
                      l888 0B63                        l897 0C38                        l889 0B7A  
                      l898 0C58                        l899 0C66                        _GIE 005F  
                      _RD0 0040                        _RD1 0041               __CFG_CPD$OFF 0000  
                      _adc 00BF                        _isr 14B2                        _mov 0071  
                      fsr0 0004                        indf 0000               ___awmod@sign 0026  
             ___flmul@aexp 0058               ___flmul@bexp 005D               ___flmul@sign 0057  
             ___flmul@temp 0062               ___flmul@prod 005E               __CFG_LVP$OFF 0000  
             ___fltol@exp1 002A                       l4000 09C8                       l4010 09EC  
                     l4002 09D1                       l2410 12FE                       l2402 12E7  
                     l4100 0B93                       l4020 0A0A                       l4012 09F1  
                     l4004 09DB                       l2412 1304                       l2404 12EF  
                     l2420 1324                       l4110 0BBE                       l4102 0B96  
                     l4030 0A2C                       l4022 0A11                       l4014 09FC  
                     l4006 09E1                       l2422 1329                       l2414 130E  
                     l2406 12F2                       l4112 0BC5                       l4120 0C18  
                     l4104 0B9A                       l4040 0A51                       l4032 0A31  
                     l4024 0A1B                       l4016 09FE                       l4008 09E5  
                     l4200 0DBA                       l2416 1315                       l2408 12F9  
                     l4130 0C55                       l4122 0C27                       l4114 0BD5  
                     l4106 0BAE                       l4050 0A76                       l4042 0A5D  
                     l4034 0A3C                       l4026 0A21                       l4018 0A00  
                     l4210 0E1D                       l4202 0DC3                       l2418 131C  
                     l2700 07E6                       l4140 0C8A                       l4132 0C5E  
                     l4124 0C38                       l4116 0BD9                       l4108 0BB7  
                     l4060 0AC5                       l4052 0A89                       l4044 0A65  
                     l4036 0A3E                       l4028 0A25                       l4220 0EBD  
                     l4212 0E36                       l4204 0DD3                       l4300 0711  
                     l2702 07EB                       l4134 0C62                       l4126 0C47  
                     l4118 0C0E                       l4070 0AF0                       l4062 0ACF  
                     l4054 0A8A                       l4046 0A6E                       l4038 0A40  
                     l4230 0F2B                       l4222 0EE3                       l4214 0E53  
                     l4206 0DF0                       l4150 0C9E                       l4142 0C8B  
                     l4310 0744                       l4302 0715                       l2704 07F1  
                     l2800 155C                       l4136 0C66                       l4128 0C4B  
                     l4080 0B4C                       l4072 0AF4                       l4064 0AD1  
                     l4056 0AA3                       l4048 0A6F                       l4240 0F46  
                     l4232 0F2F                       l4224 0F0B                       l4216 0E80  
                     l4208 0E00                       l4160 0CBC                       l4152 0CA3  
                     l4144 0C92                       l4320 0778                       l4312 074F  
                     l4304 0723                       l4400 012C                       l2706 07F6  
                     l2810 1576                       l2802 1561                       l4138 0C81  
                     l4090 0B72                       l4066 0AD6                       l4074 0B00  
                     l4082 0B51                       l4058 0ABB                       l4250 0F6B  
                     l4242 0F47                       l4234 0F31                       l4226 0F14  
                     l4218 0E90                       l4170 0CD2                       l4162 0CC1  
                     l4154 0CA8                       l4146 0C98                       l4322 077A  
                     l4314 0759                       l4306 0734                       l4410 015D  
                     l4402 0141                       l3700 1130                       l2900 1692  
                     l2820 158D                       l2812 157B                       l2804 156A  
                     l4092 0B76                       l4084 0B58                       l4076 0B22  
                     l4068 0AEC                       l4252 0F70                       l4260 0FA3  
                     l4244 0F4B                       l4236 0F3A                       l4228 0F22  
                     l4180 0CF0                       l4172 0CD7                       l4164 0CC7  
                     l4156 0CB1                       l4148 0C9C                       l4324 0783  
                     l4316 076F                       l4308 0740                       l3620 08AA  
                     l4500 045E                       l4420 018C                       l4412 0162  
                     l4404 0147                       l2670 0790                       l2910 16AD  
                     l2902 169B                       l2830 15A3                       l2822 158F  
                     l2814 1581                       l2806 156B                       l4094 0B7A  
                     l4086 0B60                       l4078 0B23                       l4270 0FD6  
                     l4262 0FB0                       l4254 0F7E                       l4246 0F5F  
                     l4238 0F41                       l4190 0D1D                       l4182 0CF6  
                     l4174 0CE0                       l4166 0CCB                       l4158 0CB3  
                     l4318 0774                       l3622 08AB                       l3702 1107  
                     l3630 114B                       l3710 1354                       l4510 0487  
                     l4502 046A                       l4430 021E                       l4422 01A0  
                     l4414 016D                       l4406 014C                       l2680 07A3  
                     l2672 0793                       l2664 0784                       l2920 171F  
                     l2904 169E                       l2912 16B3                       l2840 15C0  
                     l2824 1594                       l2832 15A5                       l2816 1583  
                     l2808 156D                       l4096 0B85                       l4088 0B63  
                     l4280 0FFF                       l4272 0FE4                       l4264 0FBB  
                     l4256 0F82                       l4248 0F66                       l4192 0D3A  
                     l4184 0CFF                       l4176 0CE2                       l4168 0CCD  
                     l3624 08AD                       l3640 08D2                       l3720 128D  
                     l3712 1271                       l3800 1441                       l3632 114D  
                     l3704 132A                       l4512 0494                       l4504 0471  
                     l4520 04C9                       l4440 0333                       l4432 025D  
                     l4424 01A4                       l4416 0174                       l4408 0156  
                     l4360 002C                       l2690 07BE                       l2682 07A9  
                     l2674 0797                       l2666 0787                       l2930 1755  
                     l2914 16C9                       l2922 172F                       l2906 16A2  
                     l2850 15D4                       l2842 15C4                       l2834 15B3  
                     l2826 1599                       l2818 1589                       l4098 0B8C  
                     l4274 0FE8                       l4266 0FCA                       l4258 0F9B  
                     l4194 0D56                       l4186 0D00                       l4178 0CEB  
                     l4290 06EC                       l4282 06C3                       l3626 08B9  
                     l3650 090F                       l3642 08E0                       l3722 1293  
                     l3714 127B                       l3810 146B                       l3802 1446  
                     l3730 05C1                       l3634 1155                       l3706 132F  
                     l4530 04F4                       l4522 04D3                       l4514 049C  
                     l4506 0478                       l4442 033C                       l4450 036F  
                     l4434 0282                       l4426 01A9                       l4418 0187  
                     l4370 007E                       l4362 0032                       l2692 07CF  
                     l2684 07AC                       l2676 079C                       l2668 078B  
                     l2940 176D                       l2932 175E                       l2924 1745  
                     l2916 1718                       l2908 16A4                       l2860 15E8  
                     l2852 15D8                       l2844 15C8                       l2836 15B7  
                     l2828 15A2                       l4276 0FEA                       l4268 0FD4  
                     l4196 0D82                       l4188 0D10                       l4292 06F5  
                     l4284 06C8                       l3652 0911                       l3644 08E6  
                     l3636 08BD                       l3724 1299                       l3716 1281  
                     l3820 148E                       l3812 1470                       l3804 144F  
                     l3900 12E4                       l3660 1372                       l3740 05DE  
                     l3732 05C6                       l3628 114A                       l3708 134B  
                     l4540 051D                       l4532 0500                       l4524 04DA  
                     l4516 04A3                       l4508 047D                       l4460 038D  
                     l4452 0374                       l4444 0343                       l4436 030A  
                     l4428 01B3                       l4380 00B5                       l4372 0084  
                     l4364 0034                       l2694 07D5                       l2686 07B3  
                     l2678 07A1                       l2950 1781                       l2942 1772  
                     l2934 1762                       l2926 174A                       l2918 171A  
                     l2870 15FA                       l2862 15EC                       l2854 15DC  
                     l2846 15CC                       l2838 15BC                       l2790 1544  
                     l4278 0FF6                       l4198 0D9E                       l3910 11C4  
                     l4294 06F6                       l4286 06CC                       l3654 091A  
                     l3646 08EF                       l3638 08CF                       l3726 129F  
                     l3718 1287                       l3830 14B0                       l3822 1498  
                     l3814 147A                       l3806 145A                       l3902 12E5  
                     l3670 138B                       l3662 1376                       l3750 060C  
                     l3742 05DF                       l3734 05CC                       l4550 054C  
                     l4542 052B                       l4526 04E3                       l4534 0507  
                     l4518 04AF                       l4470 03A4                       l4454 037D  
                     l4462 038F                       l4446 0349                       l4438 032D  
                     l4390 00F6                       l4382 00BA                       l4374 0095  
                     l4366 0066                       l4358 0026                       l2696 07D7  
                     l2688 07B8                       l3920 13C2                       l2960 17A6  
                     l2952 1787                       l2936 1767                       l2928 1753  
                     l2944 1776                       l2880 1647                       l2872 1616  
                     l2864 15F0                       l2856 15E0                       l2848 15D0  
                     l2792 154B                       l3840 11F8                       l3832 11DB  
                     l3912 11CB                       l3904 11AE                       l4296 06FB  
                     l4288 06DC                       l3648 0901                       l3656 0922  
                     l3728 12A5                       l3824 149D                       l3816 147F  
                     l3808 1461                       l3680 13B1                       l3672 1391  
                     l3664 137C                       l3760 0620                       l3752 0610  
                     l3744 05FC                       l3736 05D3                       l4560 0577  
                     l4552 0558                       l4544 0535                       l4536 050E  
                     l4528 04E8                       l4480 03D3                       l4472 03AB  
                     l4464 0394                       l4456 0384                       l4448 036B  
                     l4392 00FB                       l4384 00C4                       l4376 009C  
                     l4368 006D                       l3850 07F7                       l2698 07DE  
                     l3930 13D8                       l3922 13C6                       l2970 17E1  
                     l2962 17AA                       l2954 178E                       l2938 176A  
                     l2946 177C                       l2890 1669                       l2882 1649  
                     l2874 1637                       l2866 15F4                       l2858 15E4  
                     l2794 1551                       l3842 11FE                       l3834 11DD  
                     l3914 11D2                       l3906 11B3                       l4298 0709  
                     l3658 092B                       l3690 123E                       l3826 14A5  
                     l3818 1489                       l3674 13A2                       l3666 137F  
                     l3682 13B9                       l3770 0655                       l3762 063C  
                     l3754 0616                       l3746 0604                       l3738 05D8  
                     l4570 05A9                       l4562 0581                       l4554 0564  
                     l4546 053C                       l4538 0513                       l4490 0433  
                     l4482 03DA                       l4474 03B5                       l4466 039A  
                     l4458 0388                       l4394 010E                       l4386 00E6  
                     l4378 00AF                       l3860 1209                       l3852 07FC  
                     l3940 13F3                       l3932 13DE                       l3924 13CB  
                     l2980 17FA                       l2972 17E6                       l2964 17C8  
                     l2956 1793                       l2948 177D                       l2892 1672  
                     l2884 1652                       l2876 1640                       l2868 15F9  
                     l2796 1555                       l3844 1203                       l3836 11E5  
                     l3916 11D7                       l3908 11B7                       l3692 126D  
                     l3828 14AF                       l3684 13BE                       l3676 13A8  
                     l3668 1386                       l3780 069B                       l3772 065A  
                     l3764 063D                       l3756 0618                       l3748 0608  
                     l4564 058E                       l4548 0545                       l4556 056B  
                     l4492 043D                       l4484 03E1                       l4476 03BC  
                     l4468 03A0                       l4396 0113                       l4388 00EB  
                     l3870 122F                       l3862 1211                       l3846 1116  
                     l3854 111F                       l3950 1418                       l3942 13FD  
                     l3934 13E1                       l3926 13CE                       l3918 13BF  
                     l2982 17FE                       l2974 17E9                       l2966 17D3  
                     l2958 1798                       l2894 1673                       l2878 1643  
                     l2886 1657                       l2798 1557                       l3838 11E9  
                     l3694 126E                       l3686 1237                       l3678 13AA  
                     l3774 065F                       l3758 061F                       l3766 0648  
                     l3782 06A6                       l4566 0596                       l4558 0572  
                     l4494 0444                       l4486 041B                       l4478 03CD  
                     l4398 0126                       l3872 1236                       l3864 121A  
                     l3848 111B                       l3856 1124                       l3952 141E  
                     l3944 1404                       l3936 13E8                       l3928 13D2  
                     l2976 17ED                       l2968 17D9                       l2896 168A  
                     l2888 1664                       l3960 1145                       l3880 1187  
                     l3696 126F                       l3688 123B                       l3792 1424  
                     l3776 068F                       l3768 064E                       l4592 05F1  
                     l3784 06BA                       l4568 059D                       l4496 044D  
                     l4488 0421                       l3698 1129                       l3866 121F  
                     l3858 1204                       l3954 1423                       l3946 140B  
                     l3938 13ED                       l2978 17EF                       l2898 168E  
                     l3962 1146                       l3970 094B                       l3874 1171  
                     l3794 142B                       l3890 12D5                       l3786 06BF  
                     l3778 0696                       l3882 1191                       l4498 0452  
                     l3868 1227                       l3948 1413                       l3956 1138  
                     l3980 096F                       l3972 0960                       l3964 092C  
                     l3876 1176                       l3796 1432                       l3892 12DA  
                     l3884 12AC                       l3958 1142                       l3990 099A  
                     l3982 0976                       l3974 0961                       l3966 0941  
                     l3878 117E                       l3798 1439                       l3894 12DF  
                     l3886 12B8                       l3992 09A3                       l3984 097F  
                     l3976 0969                       l3968 094A                       l3896 12E2  
                     l3888 12C5                       l3994 09A5                       l3986 0981  
                     l3978 096B                       l3898 12E3                       l3996 09B7  
                     l3988 0994                       ?_isr 0075                       l3998 09BC  
                     STR_1 089F                       STR_3 0894                       STR_4 089A  
                     STR_5 0865                       STR_6 0885                       STR_7 0830  
                     STR_8 0821                       STR_9 084B                       u3100 078B  
                     u3101 078A                       u3110 0797                       u3111 0796  
                     u3120 07A9                       u3121 07A8                       u3140 07BC  
                     u3141 07BB                       u3135 07AD                       u3160 07CF  
                     u3400 1555                       u3161 07CE                       u3401 1554  
                     u3410 155C                       u3155 07BF                       u3411 155B  
                     u3180 07E4                       u3500 1621                       u3420 1561  
                     u3181 07E3                       u3165 07CB                       u3501 161F  
                     u3421 1560                       u3190 07EB                       u3510 1622  
                     u3430 1581                       u3191 07EA                       u3175 07D8  
                     u3431 1580                       u3600 1692                       u3520 1637  
                     u3440 158D                       u5200 0901                       u2720 12EF  
                     u3601 1691                       u3521 1636                       u3441 158C  
                     u5201 0900                       u2721 12EE                       u3610 16A2  
                     u3530 1647                       u3450 1594                       u6010 0B92  
                     u3611 16A1                       u3531 1646                       u3451 1593  
                     u6011 0B91                       u3700 1762                       u3460 1599  
                     u6100 0C62                       u6020 0B9A                       u5220 0920  
                     u5300 124E                       u2740 1302                       u3701 1761  
                     u3461 1598                       u6101 0C61                       u6021 0B99  
                     u6005 0B7E                       u5221 091F                       u5205 08FD  
                     u2741 1301                       u5310 1130                       u3710 1767  
                     u3630 16C9                       u3550 165F                       u3470 15B3  
                     u6030 0BAE                       u6110 0C9C                       u5230 137C  
                     u2750 130E                       u5311 112F                       u3711 1766  
                     u3631 16C8                       u3551 165E                       u3471 15B2  
                     u6031 0BAD                       u6111 0C9B                       u5215 0912  
                     u5231 137B                       u2751 130D                       u2735 12F3  
                     u5320 1136                       u3800 17C8                       u3720 1772  
                     u3640 16EF                       u3560 1664                       u3480 15B7  
                     u6040 0BB7                       u6120 0CA3                       u5160 08CF  
                     u5400 0647                       u7000 059D                       u5321 1135  
                     u3801 17C7                       u3721 1771                       u3641 16F0  
                     u3633 16C5                       u3625 16A6                       u3561 1663  
                     u3545 164B                       u3481 15B6                       u6041 0BB6  
                     u6201 0D64                       u6121 0CA2                       u5161 08CE  
                     u5305 1249                       u5401 0646                       u7001 059C  
                     u3810 17D3                       u3730 177A                       u3650 1701  
                     u3642 16F5                       u3570 1669                       u3490 1616  
                     u6050 0BC5                       u6202 0D6B                       u6130 0CA8  
                     u5250 138F                       u2770 1322                       u5410 064E  
                     u5330 1339                       u3811 17D2                       u3731 1779  
                     u3651 1702                       u3643 16F6                       u3571 1668  
                     u3491 1615                       u6051 0BC4                       u6211 0D90  
                     u6203 0D72                       u6131 0CA7                       u5251 138E  
                     u2771 1321                       u2755 130A                       u5411 064D  
                     _PEIE 005E                       u3820 17D8                       u3740 1781  
                     u3660 171F                       u3652 1707                       u6060 0BD9  
                     u6300 0EC9                       u6212 0D97                       u6140 0CCB  
                     u5180 08E4                       u5500 1498                       u5420 06A4  
                     u5340 135E                       u3821 17D7                       u3741 1780  
                     u3661 171E                       u3653 1708                       u3581 167C  
                     u6061 0BD8                       u6221 0DAC                       u6213 0D9E  
                     u6141 0CCA                       u5181 08E3                       u5501 1497  
                     u5245 1380                       u2765 1316                       u5421 06A3  
                     u3830 17E6                       u3750 1787                       u3670 1745  
                     u3590 168E                       u3582 1683                       u6070 0BF6  
                     u6222 0DB3                       u6150 0CD2                       u5510 14A5  
                     u5270 13A2                       u5430 06B8                       u5350 1370  
                     u3831 17E5                       u3751 1786                       u3671 1744  
                     u3591 168D                       u3583 168A                       u3495 1612  
                     u6311 0ED5                       u6223 0DBA                       u6151 0CD1  
                     u5175 08D4                       u5511 14A4                       u5271 13A1  
                     u5431 06B7                       u5351 136F                       u3840 17ED  
                     u3760 178E                       u3680 174A                       u6080 0C27  
                     u5520 11E9                       u6400 0F5F                       u6320 0EF1  
                     u6312 0EDC                       u6160 0CD7                       u5600 11D1  
                     u5440 1439                       u5360 05CC                       u3841 17EC  
                     u3761 178D                       u3681 1749                       u6081 0C26  
                     u5521 11E8                       u6401 0F5E                       u6313 0EE3  
                     u6305 0EC4                       u6241 0DE2                       u6161 0CD6  
                     u5601 11D0                       u5441 1438                       u5265 1392  
                     u5361 05CB                       u7017 00C0                       u5610 13C6  
                     u3850 17FE                       u3770 1798                       u6090 0C47  
                     u6410 0F66                       u6242 0DE9                       u6170 0CF0  
                     u5450 1446                       u5290 13B7                       u5370 060C  
                     u5611 13C5                       u3851 17FD                       u3771 1797  
                     u6091 0C46                       u6075 0BF1                       u6411 0F65  
                     u6331 0EFD                       u6251 0E0F                       u6243 0DF0  
                     u6235 0DBC                       u6171 0CEF                       u5195 08E8  
                     u5451 1445                       u5291 13B6                       u5275 139E  
                     u5371 060B                       u7027 0152                       u5620 13D2  
                     u3780 17AA                       u5540 11FD                       u6420 0F70  
                     u6332 0F04                       u6252 0E16                       u6180 0CF5  
                     u5700 1142                       u6500 06EC                       u5460 145A  
                     u5380 061E                       u5621 13D1                       u3781 17A9  
                     u6085 0C23                       u5541 11FC                       u6421 0F6F  
                     u6333 0F0B                       u6325 0EEC                       u6253 0E1D  
                     u6181 0CF4                       u5701 1141                       u6501 06EB  
                     u5461 1459                       u5285 13AB                       u5381 061D  
                     u7037 01AF                       u5550 1227                       u5630 13DE  
                     u3790 17B9                       u6430 0F82                       u5710 0941  
                     u5470 146B                       u5390 063B                       u5551 1226  
                     u5631 13DD                       u3695 1757                       u6095 0C43  
                     u5535 11F0                       u6431 0F81                       u6271 0E45  
                     u6191 0D48                       u5711 0940                       u5471 146A  
                     u5391 063A                       u7047 1152                       u6440 0F91  
                     u6360 0F2F                       u6272 0E4C                       u6192 0D4F  
                     u5800 09BC                       u5720 0959                       u6600 0774  
                     u6520 070F                       u5560 1176                       u5480 147A  
                     u6361 0F2E                       u6345 0F0D                       u6281 0E72  
                     u6273 0E53                       u6265 0E1F                       u6193 0D56  
                     u5801 09BB                       u6601 0773                       u6521 070E  
                     u5561 1175                       u7057 1277                       u5481 1479  
                     u5650 13F1                       u5810 09E1                       u6450 0FB0  
                     u6282 0E79                       u5730 096F                       u5570 11B7  
                     u6610 0778                       u5490 1489                       u5651 13F0  
                     u3795 17B4                       u5811 09E0                       u6451 0FAF  
                     u6355 0F24                       u6291 0E9F                       u6283 0E80  
                     u5731 096E                       u5571 11B6                       u6611 0777  
                     u6515 0700                       u7067 08B4                       u5491 1488  
                     u5395 0637                       u5660 13FD                       u5820 09EC  
                     u6460 0FCA                       u6380 0F45                       u6292 0EA6  
                     u5740 0976                       u6540 0732                       u6700 0113  
                     u5661 13FC                       u5645 13E2                       u5821 09EB  
                     u6461 0FC9                       u6445 0F8C                       u6381 0F44  
                     u6293 0EAD                       u5741 0975                       u5725 0954  
                     u6541 0731                       u6701 0112                       u5830 09F1  
                     u6470 0FE8                       u6390 0F4B                       u6710 012C  
                     u5831 09F0                       u6471 0FE7                       u6455 0FAC  
                     u6391 0F4A                       u6375 0F33                       u6535 0724  
                     u6711 012B                       u5680 1411                       u5920 0AF0  
                     u5840 0A21                       u5760 0992                       u6560 0744  
                     u6480 06C8                       u6800 0394                       u6720 0174  
                     u5681 1410                       u5665 13F9                       u5921 0AEF  
                     u5905 0AD8                       u5841 0A20                       u6465 0FC6  
                     u5761 0991                       u5585 11BE                       u6561 0743  
                     u6481 06C7                       u6801 0393                       u6721 0173  
                     u5690 1418                       u5850 0A2C                       u5770 099A  
                     u6570 074A                       u6490 06CC                       u6810 03A0  
                     u6730 018C                       u6650 0032                       u5691 1417  
                     u5675 1405                       u5915 0AE1                       u5851 0A2B  
                     u5771 0999                       u5755 0982                       u5595 11C5  
                     u6571 0749                       u6555 0738                       u6491 06CB  
                     u6811 039F                       u6731 018B                       u6651 0031  
                     u5940 0B22                       u5860 0A31                       u6580 074F  
                     u6900 04A3                       u6820 03AB                       u6740 0333  
                     u6660 006D                       u5941 0B21                       u5861 0A30  
                     u6581 074E                       u6901 04A2                       u6821 03AA  
                     u6741 0332                       u6661 006C                       u5950 0B47  
                     u5870 0A51                       u5790 09B5                       u6590 0764  
                     u6910 04DA                       u6830 03BC                       u6750 033C  
                     u6670 0084                       u5935 0AF8                       u5871 0A50  
                     u5791 09B4                       u6911 04D9                       u6831 03BB  
                     u6751 033B                       u6671 0083                       u5960 0B57  
                     u5880 0A76                       u6920 04E8                       u6840 03E1  
                     u6760 0343                       u6680 009C                       u5961 0B56  
                     u5945 0B1E                       u5881 0A75                       u5785 09A7  
                     u6921 04E7                       u6841 03E0                       u6761 0342  
                     u6681 009B                       u5970 0B60                       u5890 0AD6  
                     u6930 050E                       u6850 0444                       u6770 0374  
                     u6690 00FB                       u5971 0B5F                       u5955 0B30  
                     u5891 0AD5                       u6595 075F                       u6931 050D  
                     u6851 0443                       u6771 0373                       u6691 00FA  
                     u5956 0B33                       u6940 0513                       u6860 0452  
                     u6780 037D                       u5957 0B3A                       u6941 0512  
                     u6861 0451                       u6781 037C                       u5990 0B76  
                     u5958 0B3D                       u6950 053C                       u6870 0478  
                     u6790 0384                       u5991 0B75                       u5959 0B44  
                     u6951 053B                       u6871 0477                       u6791 0383  
                     u6960 054C                       u6880 047D                       u5985 0B67  
                     u6961 054B                       u6881 047C                       u6970 0572  
                     u6890 049C                       u6971 0571                       u6891 049B  
                     u6980 0577                       u6981 0576                       u6990 0596  
                     u6991 0595               __CFG_WRT$OFF 0000                       _dec1 00BE  
                     _dec2 00BB                       _adcP 00B7                       _adcT 00C0  
        writeStrLCD@string 0022                       _hall 0074                       _main 0026  
                     btemp 007E                       start 000C              __CFG_IESO$OFF 0000  
          ___fldiv@new_exp 00CD                      ??_isr 0077           ?_I2C_Master_Init 002E  
         ?_I2C_Master_Read 0020           ?_I2C_Master_Wait 0075           ?_I2C_Master_Stop 0075  
              _writeIntLCD 118E              ___fltol@sign1 0029            __end_of___fladd 1800  
                    ?_main 0075            __end_of___fldiv 0C8B            __end_of___awdiv 07F7  
          __end_of___flneg 1147                      STR_10 0847                      STR_11 0856  
                    STR_20 088D                      STR_12 0838                      STR_13 0865  
                    STR_21 0871                      STR_14 0885                      STR_22 0829  
                    STR_15 0830                      STR_23 081A                      STR_16 0821  
                    STR_24 0856                      STR_25 0838                      STR_17 084B  
            __CFG_WDTE$OFF 0000                      STR_18 0847                      STR_19 087D  
          __end_of___awmod 1424            __end_of___flmul 1000            __end_of___fltol 09C8  
                    _ANSEL 0188            __end_of___lldiv 092C            ___awdiv@divisor 0026  
          __end_of___lwdiv 13BF                      i1l230 153C                      i1l231 14E7  
                    i1l232 153B                      i1l240 1537                      i1l241 1528  
                    i1l233 14F4                      i1l410 115B                      i1l234 153A  
                    i1l242 1536                      i1l411 115B                      i1l243 1535  
                    i1l235 1501                      i1l227 14C6                      i1l412 1162  
                    i1l228 153D                      i1l236 1539                      i1l244 153D  
                    i1l413 116D                      i1l237 150E                      i1l229 14DB  
                    i1l238 1538                      i1l239 151B            __end_of___lwmod 132A  
                    i1l338 08A6            ___awdiv@counter 002B                      _RCREG 001A  
              _writeStrLCD 132A                      _SPBRG 0099                      _PORTB 0006  
                    _PORTD 0008                      _TRISB 0086                      _TRISD 0088  
                    _SSPIE 0463                      _SSPIF 0063                      _TXREG 0019  
           __CFG_FCMEN$OFF 0000          initUSART@baudrate 0020            __end_of_readADC 08A7  
          __end_of_initLCD 12AC                      _alarm 00BD            __end_of_dpowers 081A  
                    _count 006D                      _setup 12AC      __size_of_writeCharLCD 0012  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 06C0             __CFG_MCLRE$OFF 0000  
          __initialization 000F               __end_of_main 05BE             initUSART@rcint 0023  
           initUSART@txint 0022                     ??_main 00D5          initUSART@syncrono 0024  
             _writeCharLCD 1147          ?_I2C_Master_Start 0075          ?_I2C_Master_Write 0020  
       ??_I2C_Master_Start 0020         ??_I2C_Master_Write 0022                     _ADRESH 001E  
         ___awdiv@dividend 0028                     ?_setup 0075                     _ANSELH 0189  
                   i1l2622 08A2                     i1l3350 14CA                     i1l3342 14B2  
                   i1l2624 08A6                     i1l3360 14E0                     i1l3352 14CB  
                   i1l3344 14B8                     i1l2626 115A                     i1l3370 1501  
                   i1l3362 14E7                     i1l3354 14CF                     i1l3346 14C2  
                   i1l2628 1162                     i1l3380 1521                     i1l3372 1507  
                   i1l3364 14ED                     i1l3356 14D4                     i1l3348 14C6  
                   i1l3382 1528                     i1l3374 150E                     i1l3366 14F4  
                   i1l3358 14DB                     i1l3384 152E                     i1l3376 1514  
                   i1l3368 14FA                     i1l3378 151B                     u305_20 1161  
                   u305_21 1160                     u470_20 14B8                     u470_21 14B7  
                   u471_20 14CA                     u471_21 14C9                     u472_20 14D4  
                   u472_21 14D3                     u473_20 14E0                     u473_21 14DF  
                   u474_20 14ED                     u474_21 14EC                     u475_20 14FA  
                   u475_21 14F9                     u707_27 1168                     u476_20 1507  
                   u476_21 1506                     u477_20 1514                     u477_21 1513  
                   u478_20 1521                     u478_21 1520                     u479_20 152E  
                   u479_21 152D                     _SPBRGH 009A                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013           __end_of___xxtofl 0784             __CFG_PWRTE$OFF 0000  
        writeIntLCD@buffer 003E          writeIntLCD@numero 0042                     _clcLCD 1107  
                   _cmdLCD 08A7                  ??___fladd 003A                     ___wmul 11AE  
                ??___fldiv 00C3                  ??___awdiv 002A                  ??___flneg 0032  
                ??___awmod 0024                  ??___flmul 0052                  ??___fltol 0024  
                ??___lldiv 0028                     _garage 00B3                  ??___lwdiv 0024  
                ??___lwmod 002C                     _float1 00A8                     _float2 00A0  
                   _count2 0073                     _count3 00B5              sendUSART@data 0076  
                   _cursor 00C2           ___awdiv@quotient 002D            ___awmod@divisor 0020  
                   _signal 0072            ___awmod@counter 0025                     _toggle 00BA  
                ??_readADC 0075                  ??_initLCD 0023         __size_of__Umul8_16 002C  
                   saved_w 007E                  ??_sprintf 0031               ___xxtofl@arg 002A  
             ___xxtofl@exp 0029               ___xxtofl@val 0020    __end_of__initialization 0022  
               ___flneg@f1 002E                 ___fltol@f1 0020             __pcstackCOMMON 0075  
            __end_of_setup 12E7                    ??_setup 0036                 __pbssBANK0 006C  
               __pbssBANK1 00A0              ?_setCursorLCD 0023         __size_of_initUSART 008E  
        __end_of__Umul8_16 1204                 __pmaintext 0026         __size_of_sendUSART 0015  
                  ?_clcLCD 0075                    ?_cmdLCD 0075                    ?___wmul 0020  
               __pintentry 0004               ?_writeIntLCD 0075               ?_writeStrLCD 0022  
                ?___xxtofl 0020                 _antibounce 00B2                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0800             ??_setCursorLCD 0024  
                  ___fladd 1544              setCursorLCD@x 0023              setCursorLCD@y 0025  
                  ___fldiv 09C8                    ___awdiv 0784            __size_of_clcLCD 0007  
                  ___flneg 1138            __size_of_cmdLCD 0016                    ___awmod 13BF  
                  ___flmul 0C8B                    ___fltol 092C                    ___lldiv 08BD  
          __size_of___wmul 002A                    ___lwdiv 1372                    ___lwmod 12E7  
                _ANSELbits 0188          __end_of_initUSART 14B2                    __ptext1 118E  
                  __ptext2 132A                    __ptext3 1147                    __ptext4 05BE  
                  __ptext5 12E7                    __ptext6 1372                    __ptext7 12AC  
                  __ptext8 1424                    __ptext9 1271                    _readADC 08A2  
                  _initLCD 1271                    _entero1 006E                    _entero2 00BC  
                  _dpowers 0810               __size_of_isr 0092                 ??___xxtofl 0024  
         ___awmod@dividend 0022   __size_of_I2C_Master_Init 003A   __size_of_I2C_Master_Read 0033  
 __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009                    _toggle2 00B8  
                  _toggle3 00B6          __end_of_sendUSART 116E                    _sprintf 05BE  
                  clrloop0 110F       end_of_initialization 0022  __size_of_I2C_Master_Start 0009  
__size_of_I2C_Master_Write 000A            ___lldiv@divisor 0020            ___lldiv@counter 002D  
                _RCSTAbits 0018           I2C_Master_Init@c 002E           I2C_Master_Read@a 0020  
                _PORTAbits 0005                ___fladd@grs 0049              ___xxtofl@sign 0028  
                _TRISAbits 0085                  _TRISBbits 0086                  _TRISCbits 0087  
                _TRISEbits 0089                ___fldiv@grs 00CF                ___fldiv@rem 00C8  
              ___flmul@grs 0059                  _TXSTAbits 0098             __end_of_clcLCD 110E  
           __end_of_cmdLCD 08BD             __end_of___wmul 11D8       __end_of_setCursorLCD 118E  
              _BAUDCTLbits 0187       __size_of_writeIntLCD 0020        start_initialization 000F  
     __size_of_writeStrLCD 0048                __end_of_isr 1544          ??_I2C_Master_Init 0032  
        ??_I2C_Master_Read 0022          ??_I2C_Master_Wait 0020          ??_I2C_Master_Stop 0020  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0023                   ??_cmdLCD 0020  
                 ??___wmul 0024                  __Umul8_16 11D8                  ___fladd@a 0036  
                ___fladd@b 0032                  ___fldiv@a 0064                  ___fldiv@b 0068  
                ___flmul@a 004E                  ___flmul@b 004A                __pbssCOMMON 0070  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00C3  
        __size_of___xxtofl 00C4              _screenCounter 006C      writeCharLCD@character 0021  
              sprintf@flag 0035                sprintf@prec 0036           _I2C_Master_Start 1116  
         _I2C_Master_Write 111F           ___lwdiv@dividend 0022                  cmdLCD@cmd 0022  
                 ?___fladd 0032                   ?___fldiv 0064                   ?___awdiv 0026  
                 ?___flneg 002E                   ?___awmod 0020                   ?___flmul 004A  
                 ?___fltol 0020                   ?___lldiv 0020                 ?__Umul8_16 0020  
                 ?___lwdiv 0020                   ?___lwmod 0028                  __pstrings 0800  
                 ?_readADC 0075                   ?_initLCD 0075              ?_writeCharLCD 0075  
                _initUSART 1424           ___lwdiv@quotient 0026                   ?_sprintf 002E  
           __size_of_setup 003B               _receiveUSART 0070                  _sendUSART 1159  
        interrupt_function 0004             ___wmul@product 0024                _antibounce2 00B1  
                clear_ram0 110E                   _PIE1bits 008C                   _PIR1bits 000C  
    __size_of_setCursorLCD 0020                 _ADCON0bits 001F                __stringbase 080F  
               _ADCON1bits 009F          ___wmul@multiplier 0020             ??_writeCharLCD 0020  
               ?_initUSART 0020        I2C_Master_Read@temp 0024                 ?_sendUSART 0075  
             _setCursorLCD 116E                ??__Umul8_16 0022           __size_of___fladd 02BC  
         __size_of___fldiv 02C3           __size_of___awdiv 0073           __size_of___flneg 000F  
         __size_of___awmod 0065           __size_of___flmul 0375           __size_of___fltol 009C  
         __size_of___lldiv 006F           __size_of___lwdiv 004D           __size_of___lwmod 0043  
                 _adcValue 00C1         __end_of__stringtab 0810                 _ANSELHbits 0189  
               sprintf@val 0037            _I2C_Master_Init 1237           __size_of_readADC 0005  
          _I2C_Master_Read 1204           __size_of_initLCD 003B                   ___xxtofl 06C0  
          _I2C_Master_Wait 1129            _I2C_Master_Stop 07F7            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0025                   __ptext10 1107                   __ptext11 1237  
                 __ptext20 11D8                   __ptext12 08BD                   __ptext21 09C8  
                 __ptext13 116E                   __ptext30 14B2                   __ptext22 1544  
                 __ptext14 08A7                   __ptext31 1159                   __ptext23 13BF  
                 __ptext15 06C0                   __ptext32 08A2                   __ptext24 0784  
                 __ptext16 11AE                   __ptext25 111F                   __ptext17 092C  
                 __ptext26 07F7                   __ptext18 1138                   __ptext27 1116  
                 __ptext19 0C8B                   __ptext28 1204                   __ptext29 1129  
        __CFG_BOR4V$BOR40V 0000           __size_of_sprintf 0102              __size_of_main 0598  
                 _sensorF1 00AC                   _sensorF2 00A4              ??_writeIntLCD 003B  
            ??_writeStrLCD 0024   __end_of_I2C_Master_Start 111F   __end_of_I2C_Master_Write 1129  
               _INTCONbits 000B                ??_initUSART 0025                   intlevel1 0000  
              _screenState 00B0                  sprintf@ap 0034                  sprintf@sp 0039  
              ??_sendUSART 0075           ___lwmod@dividend 002A           ___lldiv@dividend 0024  
     __end_of_writeCharLCD 1159                  stringcode 080A    __end_of_I2C_Master_Init 1271  
  __end_of_I2C_Master_Read 1237    __end_of_I2C_Master_Wait 1138    __end_of_I2C_Master_Stop 0800  
   __Umul8_16@multiplicand 0020                   sprintf@c 003A                   sprintf@f 002E  
         ___lldiv@quotient 0029          I2C_Master_Write@d 0020            ___lwmod@divisor 0028  
          ___lwmod@counter 002D                   stringdir 080A                   stringtab 0800  
      __end_of_writeIntLCD 11AE                _SSPCON2bits 0091        __end_of_writeStrLCD 1372  
            ___fladd@signs 0046               ___fladd@aexp 0047               ___fladd@bexp 0048  
     __Umul8_16@multiplier 0028          __Umul8_16@product 0024  
