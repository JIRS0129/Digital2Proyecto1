

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Mar 06 12:35:09 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_I2C_Master_Read
   712                           	FNCALL	_main,_I2C_Master_Start
   713                           	FNCALL	_main,_I2C_Master_Stop
   714                           	FNCALL	_main,_I2C_Master_Write
   715                           	FNCALL	_main,___awmod
   716                           	FNCALL	_main,___fladd
   717                           	FNCALL	_main,___flmul
   718                           	FNCALL	_main,___flneg
   719                           	FNCALL	_main,___fltol
   720                           	FNCALL	_main,___xxtofl
   721                           	FNCALL	_main,_setCursorLCD
   722                           	FNCALL	_main,_setup
   723                           	FNCALL	_main,_writeCharLCD
   724                           	FNCALL	_main,_writeFloat
   725                           	FNCALL	_main,_writeIntLCD
   726                           	FNCALL	_main,_writeStrLCD
   727                           	FNCALL	_writeFloat,_setCursorLCD
   728                           	FNCALL	_writeFloat,_writeCharLCD
   729                           	FNCALL	_writeFloat,_writeIntLCD
   730                           	FNCALL	_writeIntLCD,_sprintf
   731                           	FNCALL	_writeIntLCD,_writeStrLCD
   732                           	FNCALL	_sprintf,___lwdiv
   733                           	FNCALL	_sprintf,___lwmod
   734                           	FNCALL	_setup,_I2C_Master_Init
   735                           	FNCALL	_setup,_clcLCD
   736                           	FNCALL	_setup,_initLCD
   737                           	FNCALL	_setup,_setCursorLCD
   738                           	FNCALL	_setup,_writeStrLCD
   739                           	FNCALL	_writeStrLCD,_writeCharLCD
   740                           	FNCALL	_setCursorLCD,_cmdLCD
   741                           	FNCALL	_initLCD,_cmdLCD
   742                           	FNCALL	_clcLCD,_cmdLCD
   743                           	FNCALL	_I2C_Master_Init,___lldiv
   744                           	FNCALL	___flmul,__Umul8_16
   745                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   746                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   747                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   748                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   749                           	FNROOT	_main
   750                           	global	_dpowers
   751                           psect	strings,class=STRING,delta=2,noexec
   752                           global __pstrings
   753                           __pstrings:
   754  0800                     stringtab:
   755  0800                     	global    __stringtab
   756                           __stringtab:
   757  0800                     ;	String table - string pointers are 1 byte each
   758                           	btfsc	(btemp+1),7
   759  0800  1BFF               	ljmp	stringcode
   760  0801  280A               	bcf	status,7
   761  0802  1383               	btfsc	(btemp+1),0
   762  0803  187F               	bsf	status,7
   763  0804  1783               	movf	indf,w
   764  0805  0800               	incf fsr
   765  0806  0A84               skipnz
   766  0807  1903               incf btemp+1
   767  0808  0AFF               	return
   768  0809  0008               stringcode:stringdir:
   769  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
   770  080A  3008               movwf pclath
   771  080B  008A               movf fsr,w
   772  080C  0804               incf fsr
   773  080D  0A84               	addwf pc
   774  080E  0782               	global __stringbase
   775                           __stringbase:
   776  080F                     	retlw	0
   777  080F  3400               psect	strings
   778                           	global    __end_of__stringtab
   779                           __end_of__stringtab:
   780  0810                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   781                           	line	358
   782                           _dpowers:
   783  0810                     	retlw	01h
   784  0810  3401               	retlw	0
   785  0811  3400               
   786                           	retlw	0Ah
   787  0812  340A               	retlw	0
   788  0813  3400               
   789                           	retlw	064h
   790  0814  3464               	retlw	0
   791  0815  3400               
   792                           	retlw	0E8h
   793  0816  34E8               	retlw	03h
   794  0817  3403               
   795                           	retlw	010h
   796  0818  3410               	retlw	027h
   797  0819  3427               
   798                           	global __end_of_dpowers
   799                           __end_of_dpowers:
   800  081A                     	global	_dpowers
   801                           	global	_float1
   802                           	global	_sensorF1
   803                           	global	_writeADC
   804                           	global	_count
   805                           	global	_toggle
   806                           	global	_counter
   807                           	global	_dec1
   808                           	global	_entero1
   809                           	global	_adcl
   810                           	global	_adc
   811                           	global	_cursor
   812                           	global	_PORTD
   813                           _PORTD	set	0x8
   814  0008                     	global	_PORTB
   815                           _PORTB	set	0x6
   816  0006                     	global	_SSPBUF
   817                           _SSPBUF	set	0x13
   818  0013                     	global	_SSPCON
   819                           _SSPCON	set	0x14
   820  0014                     	global	_RD1
   821                           _RD1	set	0x41
   822  0041                     	global	_RD0
   823                           _RD0	set	0x40
   824  0040                     	global	_SSPIF
   825                           _SSPIF	set	0x63
   826  0063                     	global	_PEIE
   827                           _PEIE	set	0x5E
   828  005E                     	global	_GIE
   829                           _GIE	set	0x5F
   830  005F                     	global	_TRISD
   831                           _TRISD	set	0x88
   832  0088                     	global	_TRISB
   833                           _TRISB	set	0x86
   834  0086                     	global	_SSPCON2bits
   835                           _SSPCON2bits	set	0x91
   836  0091                     	global	_TRISCbits
   837                           _TRISCbits	set	0x87
   838  0087                     	global	_SSPSTAT
   839                           _SSPSTAT	set	0x94
   840  0094                     	global	_SSPADD
   841                           _SSPADD	set	0x93
   842  0093                     	global	_SSPCON2
   843                           _SSPCON2	set	0x91
   844  0091                     	global	_SSPIE
   845                           _SSPIE	set	0x463
   846  0463                     	global	_TRISC4
   847                           _TRISC4	set	0x43C
   848  043C                     	global	_TRISC3
   849                           _TRISC3	set	0x43B
   850  043B                     	global	_ANSELH
   851                           _ANSELH	set	0x189
   852  0189                     	global	_ANSEL
   853                           _ANSEL	set	0x188
   854  0188                     	
   855                           STR_3:	
   856  081A                     	retlw	32	;' '
   857  081A  3420               	retlw	32	;' '
   858  081B  3420               	retlw	0
   859  081C  3400               psect	strings
   860                           	
   861                           STR_5:	
   862  081D                     	retlw	83	;'S'
   863  081D  3453               	retlw	49	;'1'
   864  081E  3431               	retlw	0
   865  081F  3400               psect	strings
   866                           	
   867                           STR_6:	
   868  0820                     	retlw	83	;'S'
   869  0820  3453               	retlw	50	;'2'
   870  0821  3432               	retlw	0
   871  0822  3400               psect	strings
   872                           	
   873                           STR_7:	
   874  0823                     	retlw	83	;'S'
   875  0823  3453               	retlw	51	;'3'
   876  0824  3433               	retlw	0
   877  0825  3400               psect	strings
   878                           	
   879                           STR_1:	
   880  0826                     	retlw	37	;'%'
   881  0826  3425               	retlw	100	;'d'
   882  0827  3464               	retlw	0
   883  0828  3400               psect	strings
   884                           STR_2	equ	STR_1+0
   885  0826                     STR_4	equ	STR_3+0
   886  081A                     ; #config settings
   887                           global __CFG_FOSC$INTRC_NOCLKOUT
   888                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   889  0000                     global __CFG_WDTE$OFF
   890                           __CFG_WDTE$OFF equ 0x0
   891  0000                     global __CFG_PWRTE$OFF
   892                           __CFG_PWRTE$OFF equ 0x0
   893  0000                     global __CFG_MCLRE$OFF
   894                           __CFG_MCLRE$OFF equ 0x0
   895  0000                     global __CFG_CP$OFF
   896                           __CFG_CP$OFF equ 0x0
   897  0000                     global __CFG_CPD$OFF
   898                           __CFG_CPD$OFF equ 0x0
   899  0000                     global __CFG_BOREN$OFF
   900                           __CFG_BOREN$OFF equ 0x0
   901  0000                     global __CFG_IESO$OFF
   902                           __CFG_IESO$OFF equ 0x0
   903  0000                     global __CFG_FCMEN$OFF
   904                           __CFG_FCMEN$OFF equ 0x0
   905  0000                     global __CFG_LVP$OFF
   906                           __CFG_LVP$OFF equ 0x0
   907  0000                     global __CFG_BOR4V$BOR40V
   908                           __CFG_BOR4V$BOR40V equ 0x0
   909  0000                     global __CFG_WRT$OFF
   910                           __CFG_WRT$OFF equ 0x0
   911  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\s8fk."
   912                           	line	#
   913                           psect cinit,class=CODE,delta=2
   914                           global start_initialization
   915                           start_initialization:
   916  07EB                     
   917                           global __initialization
   918                           __initialization:
   919  07EB                     psect	bssBANK0,class=BANK0,space=1,noexec
   920                           global __pbssBANK0
   921                           __pbssBANK0:
   922  005A                     _float1:
   923  005A                            ds      4
   924  005A                     
   925                           _sensorF1:
   926  005E                            ds      4
   927  005E                     
   928                           _writeADC:
   929  0062                            ds      2
   930  0062                     
   931                           _count:
   932  0064                            ds      1
   933  0064                     
   934                           _s3:
   935  0065                            ds      1
   936  0065                     
   937                           _toggle:
   938  0066                            ds      1
   939  0066                     
   940                           _dec2:
   941  0067                            ds      1
   942  0067                     
   943                           _entero2:
   944  0068                            ds      1
   945  0068                     
   946                           _counter:
   947  0069                            ds      1
   948  0069                     
   949                           _dec1:
   950  006A                            ds      1
   951  006A                     
   952                           _entero1:
   953  006B                            ds      1
   954  006B                     
   955                           _adcl:
   956  006C                            ds      1
   957  006C                     
   958                           _adc:
   959  006D                            ds      1
   960  006D                     
   961                           _cursor:
   962  006E                            ds      1
   963  006E                     
   964                           psect	bssBANK1,class=BANK1,space=1,noexec
   965                           global __pbssBANK1
   966                           __pbssBANK1:
   967  00A0                     _lux:
   968  00A0                            ds      4
   969  00A0                     
   970                           _float2:
   971  00A4                            ds      4
   972  00A4                     
   973                           _sensorF2:
   974  00A8                            ds      4
   975  00A8                     
   976                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\s8fk."
   977                           	line	#
   978                           psect clrtext,class=CODE,delta=2
   979                           global clear_ram0
   980                           ;	Called with FSR containing the base address, and
   981                           ;	W with the last address+1
   982                           clear_ram0:
   983  0A29                     	clrwdt			;clear the watchdog before getting into this loop
   984  0A29  0064               clrloop0:
   985  0A2A                     	clrf	indf		;clear RAM location pointed to by FSR
   986  0A2A  0180               	incf	fsr,f		;increment pointer
   987  0A2B  0A84               	xorwf	fsr,w		;XOR with final address
   988  0A2C  0604               	btfsc	status,2	;have we reached the end yet?
   989  0A2D  1903               	retlw	0		;all done for this memory range, return
   990  0A2E  3400               	xorwf	fsr,w		;XOR again to restore value
   991  0A2F  0604               	goto	clrloop0		;do the next byte
   992  0A30  2A2A               
   993                           ; Clear objects allocated to BANK0
   994                           psect cinit,class=CODE,delta=2,merge=1
   995                           	bcf	status, 7	;select IRP bank0
   996  07EB  1383               	movlw	low(__pbssBANK0)
   997  07EC  305A               	movwf	fsr
   998  07ED  0084               	movlw	low((__pbssBANK0)+015h)
   999  07EE  306F               	fcall	clear_ram0
  1000  07EF  120A  158A  2229  120A  118A  ; Clear objects allocated to BANK1
  1001                           psect cinit,class=CODE,delta=2,merge=1
  1002                           	movlw	low(__pbssBANK1)
  1003  07F4  30A0               	movwf	fsr
  1004  07F5  0084               	movlw	low((__pbssBANK1)+0Ch)
  1005  07F6  30AC               	fcall	clear_ram0
  1006  07F7  120A  158A  2229  120A  118A  psect cinit,class=CODE,delta=2,merge=1
  1007                           global end_of_initialization,__end_of__initialization
  1008                           
  1009                           ;End of C runtime variable initialization code
  1010                           
  1011                           end_of_initialization:
  1012  07FC                     __end_of__initialization:
  1013  07FC                     clrf status
  1014  07FC  0183               ljmp _main	;jump to C main() function
  1015  07FD  120A  118A  2863   psect	cstackCOMMON,class=COMMON,space=1,noexec
  1016                           global __pcstackCOMMON
  1017                           __pcstackCOMMON:
  1018  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1019  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1020  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1021  0070                     ??_writeCharLCD:	; 1 bytes @ 0x0
  1022  0070                     ?_setup:	; 1 bytes @ 0x0
  1023  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1024  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1025  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1026  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1027  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1028  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1029  0070                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1030  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1031  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1032  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1033  0070                     ?_main:	; 1 bytes @ 0x0
  1034  0070                     	global	?__Umul8_16
  1035                           ?__Umul8_16:	; 2 bytes @ 0x0
  1036  0070                     	global	?_I2C_Master_Read
  1037                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1038  0070                     	global	?___awmod
  1039                           ?___awmod:	; 2 bytes @ 0x0
  1040  0070                     	global	?___lwdiv
  1041                           ?___lwdiv:	; 2 bytes @ 0x0
  1042  0070                     	global	?___lldiv
  1043                           ?___lldiv:	; 4 bytes @ 0x0
  1044  0070                     	global	?___fltol
  1045                           ?___fltol:	; 4 bytes @ 0x0
  1046  0070                     	global	?___xxtofl
  1047                           ?___xxtofl:	; 4 bytes @ 0x0
  1048  0070                     	global	__Umul8_16@multiplicand
  1049                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1050  0070                     	global	I2C_Master_Write@d
  1051                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1052  0070                     	global	I2C_Master_Read@a
  1053                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1054  0070                     	global	___awmod@divisor
  1055                           ___awmod@divisor:	; 2 bytes @ 0x0
  1056  0070                     	global	___lwdiv@divisor
  1057                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1058  0070                     	global	___lldiv@divisor
  1059                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1060  0070                     	global	___fltol@f1
  1061                           ___fltol@f1:	; 4 bytes @ 0x0
  1062  0070                     	global	___xxtofl@val
  1063                           ___xxtofl@val:	; 4 bytes @ 0x0
  1064  0070                     	ds	1
  1065  0070                     	global	writeCharLCD@character
  1066                           writeCharLCD@character:	; 1 bytes @ 0x1
  1067  0071                     	ds	1
  1068  0071                     ??__Umul8_16:	; 1 bytes @ 0x2
  1069  0072                     ??_I2C_Master_Write:	; 1 bytes @ 0x2
  1070  0072                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1071  0072                     ?_writeStrLCD:	; 1 bytes @ 0x2
  1072  0072                     	global	cmdLCD@cmd
  1073                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1074  0072                     	global	writeStrLCD@string
  1075                           writeStrLCD@string:	; 2 bytes @ 0x2
  1076  0072                     	global	___awmod@dividend
  1077                           ___awmod@dividend:	; 2 bytes @ 0x2
  1078  0072                     	global	___lwdiv@dividend
  1079                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1080  0072                     	ds	1
  1081  0072                     ?_setCursorLCD:	; 1 bytes @ 0x3
  1082  0073                     ??_clcLCD:	; 1 bytes @ 0x3
  1083  0073                     ??_initLCD:	; 1 bytes @ 0x3
  1084  0073                     	global	setCursorLCD@x
  1085                           setCursorLCD@x:	; 1 bytes @ 0x3
  1086  0073                     	ds	1
  1087  0073                     ??_setCursorLCD:	; 1 bytes @ 0x4
  1088  0074                     ??_writeStrLCD:	; 1 bytes @ 0x4
  1089  0074                     ??___awmod:	; 1 bytes @ 0x4
  1090  0074                     ??___fltol:	; 1 bytes @ 0x4
  1091  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1092  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  1093  0074                     	global	I2C_Master_Read@temp
  1094                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1095  0074                     	global	__Umul8_16@product
  1096                           __Umul8_16@product:	; 2 bytes @ 0x4
  1097  0074                     	global	___lldiv@dividend
  1098                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1099  0074                     	ds	1
  1100  0074                     	global	setCursorLCD@y
  1101                           setCursorLCD@y:	; 1 bytes @ 0x5
  1102  0075                     	global	___awmod@counter
  1103                           ___awmod@counter:	; 1 bytes @ 0x5
  1104  0075                     	global	___lwdiv@quotient
  1105                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1106  0075                     	ds	1
  1107  0075                     	global	___awmod@sign
  1108                           ___awmod@sign:	; 1 bytes @ 0x6
  1109  0076                     	global	__Umul8_16@word_mpld
  1110                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1111  0076                     	ds	1
  1112  0076                     	global	___lwdiv@counter
  1113                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1114  0077                     	global	writeStrLCD@cont
  1115                           writeStrLCD@cont:	; 2 bytes @ 0x7
  1116  0077                     	ds	1
  1117  0077                     ??___lldiv:	; 1 bytes @ 0x8
  1118  0078                     	global	?___lwmod
  1119                           ?___lwmod:	; 2 bytes @ 0x8
  1120  0078                     	global	___xxtofl@sign
  1121                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1122  0078                     	global	__Umul8_16@multiplier
  1123                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1124  0078                     	global	___lwmod@divisor
  1125                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1126  0078                     	ds	1
  1127  0078                     	global	___fltol@sign1
  1128                           ___fltol@sign1:	; 1 bytes @ 0x9
  1129  0079                     	global	___xxtofl@exp
  1130                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1131  0079                     	global	___lldiv@quotient
  1132                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1133  0079                     	ds	1
  1134  0079                     	global	___fltol@exp1
  1135                           ___fltol@exp1:	; 1 bytes @ 0xA
  1136  007A                     	global	___lwmod@dividend
  1137                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1138  007A                     	global	___xxtofl@arg
  1139                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1140  007A                     	ds	2
  1141  007A                     ??___lwmod:	; 1 bytes @ 0xC
  1142  007C                     	ds	1
  1143  007C                     	global	___lldiv@counter
  1144                           ___lldiv@counter:	; 1 bytes @ 0xD
  1145  007D                     	global	___lwmod@counter
  1146                           ___lwmod@counter:	; 1 bytes @ 0xD
  1147  007D                     	ds	1
  1148  007D                     ??___flneg:	; 1 bytes @ 0xE
  1149  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1150                           global __pcstackBANK0
  1151                           __pcstackBANK0:
  1152  0020                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1153  0020                     	global	?_sprintf
  1154                           ?_sprintf:	; 2 bytes @ 0x0
  1155  0020                     	global	?___flneg
  1156                           ?___flneg:	; 4 bytes @ 0x0
  1157  0020                     	global	sprintf@f
  1158                           sprintf@f:	; 1 bytes @ 0x0
  1159  0020                     	global	I2C_Master_Init@c
  1160                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1161  0020                     	global	___flneg@f1
  1162                           ___flneg@f1:	; 4 bytes @ 0x0
  1163  0020                     	ds	3
  1164  0020                     ??_sprintf:	; 1 bytes @ 0x3
  1165  0023                     	ds	1
  1166  0023                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1167  0024                     	global	?___fladd
  1168                           ?___fladd:	; 4 bytes @ 0x4
  1169  0024                     	global	___fladd@b
  1170                           ___fladd@b:	; 4 bytes @ 0x4
  1171  0024                     	ds	2
  1172  0024                     	global	sprintf@ap
  1173                           sprintf@ap:	; 1 bytes @ 0x6
  1174  0026                     	ds	1
  1175  0026                     	global	sprintf@flag
  1176                           sprintf@flag:	; 1 bytes @ 0x7
  1177  0027                     	ds	1
  1178  0027                     ??_setup:	; 1 bytes @ 0x8
  1179  0028                     	global	sprintf@prec
  1180                           sprintf@prec:	; 1 bytes @ 0x8
  1181  0028                     	global	___fladd@a
  1182                           ___fladd@a:	; 4 bytes @ 0x8
  1183  0028                     	ds	1
  1184  0028                     	global	sprintf@val
  1185                           sprintf@val:	; 2 bytes @ 0x9
  1186  0029                     	ds	2
  1187  0029                     	global	sprintf@sp
  1188                           sprintf@sp:	; 1 bytes @ 0xB
  1189  002B                     	ds	1
  1190  002B                     ??___fladd:	; 1 bytes @ 0xC
  1191  002C                     	global	sprintf@c
  1192                           sprintf@c:	; 1 bytes @ 0xC
  1193  002C                     	ds	1
  1194  002C                     ??_writeIntLCD:	; 1 bytes @ 0xD
  1195  002D                     	ds	3
  1196  002D                     	global	writeIntLCD@buffer
  1197                           writeIntLCD@buffer:	; 4 bytes @ 0x10
  1198  0030                     	ds	4
  1199  0030                     	global	writeIntLCD@numero
  1200                           writeIntLCD@numero:	; 1 bytes @ 0x14
  1201  0034                     	ds	1
  1202  0034                     ?_writeFloat:	; 1 bytes @ 0x15
  1203  0035                     	global	writeFloat@decimal
  1204                           writeFloat@decimal:	; 1 bytes @ 0x15
  1205  0035                     	ds	1
  1206  0035                     	global	writeFloat@initPos
  1207                           writeFloat@initPos:	; 1 bytes @ 0x16
  1208  0036                     	ds	1
  1209  0036                     ??_writeFloat:	; 1 bytes @ 0x17
  1210  0037                     	ds	1
  1211  0037                     	global	writeFloat@integer
  1212                           writeFloat@integer:	; 1 bytes @ 0x18
  1213  0038                     	global	___fladd@signs
  1214                           ___fladd@signs:	; 1 bytes @ 0x18
  1215  0038                     	ds	1
  1216  0038                     	global	___fladd@aexp
  1217                           ___fladd@aexp:	; 1 bytes @ 0x19
  1218  0039                     	ds	1
  1219  0039                     	global	___fladd@bexp
  1220                           ___fladd@bexp:	; 1 bytes @ 0x1A
  1221  003A                     	ds	1
  1222  003A                     	global	___fladd@grs
  1223                           ___fladd@grs:	; 1 bytes @ 0x1B
  1224  003B                     	ds	1
  1225  003B                     	global	?___flmul
  1226                           ?___flmul:	; 4 bytes @ 0x1C
  1227  003C                     	global	___flmul@b
  1228                           ___flmul@b:	; 4 bytes @ 0x1C
  1229  003C                     	ds	4
  1230  003C                     	global	___flmul@a
  1231                           ___flmul@a:	; 4 bytes @ 0x20
  1232  0040                     	ds	4
  1233  0040                     ??___flmul:	; 1 bytes @ 0x24
  1234  0044                     	ds	5
  1235  0044                     	global	___flmul@sign
  1236                           ___flmul@sign:	; 1 bytes @ 0x29
  1237  0049                     	ds	1
  1238  0049                     	global	___flmul@grs
  1239                           ___flmul@grs:	; 4 bytes @ 0x2A
  1240  004A                     	ds	4
  1241  004A                     	global	___flmul@aexp
  1242                           ___flmul@aexp:	; 1 bytes @ 0x2E
  1243  004E                     	ds	1
  1244  004E                     	global	___flmul@bexp
  1245                           ___flmul@bexp:	; 1 bytes @ 0x2F
  1246  004F                     	ds	1
  1247  004F                     	global	___flmul@prod
  1248                           ___flmul@prod:	; 4 bytes @ 0x30
  1249  0050                     	ds	4
  1250  0050                     	global	___flmul@temp
  1251                           ___flmul@temp:	; 2 bytes @ 0x34
  1252  0054                     	ds	2
  1253  0054                     ??_main:	; 1 bytes @ 0x36
  1254  0056                     	ds	4
  1255  0056                     ;!
  1256                           ;!Data Sizes:
  1257                           ;!    Strings     15
  1258                           ;!    Constant    10
  1259                           ;!    Data        0
  1260                           ;!    BSS         33
  1261                           ;!    Persistent  0
  1262                           ;!    Stack       0
  1263                           ;!
  1264                           ;!Auto Spaces:
  1265                           ;!    Space          Size  Autos    Used
  1266                           ;!    COMMON           14     14      14
  1267                           ;!    BANK0            80     58      79
  1268                           ;!    BANK1            80      0      12
  1269                           ;!    BANK3            96      0       0
  1270                           ;!    BANK2            96      0       0
  1271                           
  1272                           ;!
  1273                           ;!Pointer List with Targets:
  1274                           ;!
  1275                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1276                           ;!		 -> STR_2(CODE[3]), STR_1(CODE[3]), 
  1277                           ;!
  1278                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
  1279                           ;!		 -> writeIntLCD16@buffer(COMMON[8]), writeIntLCD@buffer(BANK0[4]), 
  1280                           ;!
  1281                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1282                           ;!		 -> ?_sprintf(BANK0[2]), 
  1283                           ;!
  1284                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 8
  1285                           ;!		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
  1286                           ;!		 -> STR_3(CODE[3]), writeIntLCD16@buffer(COMMON[8]), writeIntLCD@buffer(BANK0[4]), 

  1287                           ;!
  1288                           
  1289                           
  1290                           ;!
  1291                           ;!Critical Paths under _main in COMMON
  1292                           ;!
  1293                           ;!    _main->___xxtofl
  1294                           ;!    _sprintf->___lwmod
  1295                           ;!    ___lwmod->___lwdiv
  1296                           ;!    _writeStrLCD->_writeCharLCD
  1297                           ;!    _setCursorLCD->_cmdLCD
  1298                           ;!    _initLCD->_cmdLCD
  1299                           ;!    _clcLCD->_cmdLCD
  1300                           ;!    _I2C_Master_Init->___lldiv
  1301                           ;!    ___flneg->___xxtofl
  1302                           ;!    ___flmul->___xxtofl
  1303                           ;!    ___fladd->___xxtofl
  1304                           ;!
  1305                           ;!Critical Paths under _main in BANK0
  1306                           ;!
  1307                           ;!    _main->___flmul
  1308                           ;!    _writeFloat->_writeIntLCD
  1309                           ;!    _writeIntLCD->_sprintf
  1310                           ;!    _setup->_I2C_Master_Init
  1311                           ;!    ___flmul->___fladd
  1312                           ;!    ___fladd->___flneg
  1313                           ;!
  1314                           ;!Critical Paths under _main in BANK1
  1315                           ;!
  1316                           ;!    None.
  1317                           ;!
  1318                           ;!Critical Paths under _main in BANK3
  1319                           ;!
  1320                           ;!    None.
  1321                           ;!
  1322                           ;!Critical Paths under _main in BANK2
  1323                           ;!
  1324                           ;!    None.
  1325                           
  1326 ;;
  1327 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1328 ;;
  1329                           
  1330                           ;!
  1331                           ;!Call Graph Tables:
  1332                           ;!
  1333                           ;! ---------------------------------------------------------------------------------
  1334                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1335                           ;! ---------------------------------------------------------------------------------
  1336                           ;! (0) _main                                                 4     4      0   14934
  1337                           ;!                                             54 BANK0      4     4      0
  1338                           ;!                    _I2C_Master_Read
  1339                           ;!                   _I2C_Master_Start
  1340                           ;!                    _I2C_Master_Stop
  1341                           ;!                   _I2C_Master_Write
  1342                           ;!                            ___awmod
  1343                           ;!                            ___fladd
  1344                           ;!                            ___flmul
  1345                           ;!                            ___flneg
  1346                           ;!                            ___fltol
  1347                           ;!                           ___xxtofl
  1348                           ;!                       _setCursorLCD
  1349                           ;!                              _setup
  1350                           ;!                       _writeCharLCD
  1351                           ;!                         _writeFloat
  1352                           ;!                        _writeIntLCD
  1353                           ;!                        _writeStrLCD
  1354                           ;! ---------------------------------------------------------------------------------
  1355                           ;! (1) _writeFloat                                           4     2      2    3186
  1356                           ;!                                             21 BANK0      4     2      2
  1357                           ;!                       _setCursorLCD
  1358                           ;!                       _writeCharLCD
  1359                           ;!                        _writeIntLCD
  1360                           ;! ---------------------------------------------------------------------------------
  1361                           ;! (1) _writeIntLCD                                          8     8      0    2040
  1362                           ;!                                             13 BANK0      8     8      0
  1363                           ;!                            _sprintf
  1364                           ;!                        _writeStrLCD
  1365                           ;! ---------------------------------------------------------------------------------
  1366                           ;! (2) _sprintf                                             21    18      3    1320
  1367                           ;!                                              0 BANK0     13    10      3
  1368                           ;!                            ___lwdiv
  1369                           ;!                            ___lwmod
  1370                           ;! ---------------------------------------------------------------------------------
  1371                           ;! (3) ___lwmod                                              6     2      4     311
  1372                           ;!                                              8 COMMON     6     2      4
  1373                           ;!                            ___lwdiv (ARG)
  1374                           ;! ---------------------------------------------------------------------------------
  1375                           ;! (3) ___lwdiv                                              8     4      4     314
  1376                           ;!                                              0 COMMON     8     4      4
  1377                           ;! ---------------------------------------------------------------------------------
  1378                           ;! (1) _setup                                                1     1      0    1872
  1379                           ;!                                              8 BANK0      1     1      0
  1380                           ;!                    _I2C_Master_Init
  1381                           ;!                             _clcLCD
  1382                           ;!                            _initLCD
  1383                           ;!                       _setCursorLCD
  1384                           ;!                        _writeStrLCD
  1385                           ;! ---------------------------------------------------------------------------------
  1386                           ;! (1) _writeStrLCD                                          7     5      2     644
  1387                           ;!                                              2 COMMON     7     5      2
  1388                           ;!                       _writeCharLCD
  1389                           ;! ---------------------------------------------------------------------------------
  1390                           ;! (2) _writeCharLCD                                         2     2      0      22
  1391                           ;!                                              0 COMMON     2     2      0
  1392                           ;! ---------------------------------------------------------------------------------
  1393                           ;! (2) _setCursorLCD                                         3     2      1     772
  1394                           ;!                                              3 COMMON     3     2      1
  1395                           ;!                             _cmdLCD
  1396                           ;! ---------------------------------------------------------------------------------
  1397                           ;! (2) _initLCD                                              2     2      0      22
  1398                           ;!                                              3 COMMON     2     2      0
  1399                           ;!                             _cmdLCD
  1400                           ;! ---------------------------------------------------------------------------------
  1401                           ;! (2) _clcLCD                                               0     0      0      22
  1402                           ;!                             _cmdLCD
  1403                           ;! ---------------------------------------------------------------------------------
  1404                           ;! (3) _cmdLCD                                               3     3      0      22
  1405                           ;!                                              0 COMMON     3     3      0
  1406                           ;! ---------------------------------------------------------------------------------
  1407                           ;! (2) _I2C_Master_Init                                      8     4      4     412
  1408                           ;!                                              0 BANK0      8     4      4
  1409                           ;!                            ___lldiv
  1410                           ;! ---------------------------------------------------------------------------------
  1411                           ;! (3) ___lldiv                                             14     6      8     314
  1412                           ;!                                              0 COMMON    14     6      8
  1413                           ;! ---------------------------------------------------------------------------------
  1414                           ;! (1) ___xxtofl                                            14    10      4     398
  1415                           ;!                                              0 COMMON    14    10      4
  1416                           ;! ---------------------------------------------------------------------------------
  1417                           ;! (1) ___fltol                                             11     7      4     381
  1418                           ;!                                              0 COMMON    11     7      4
  1419                           ;! ---------------------------------------------------------------------------------
  1420                           ;! (1) ___flneg                                              4     0      4     121
  1421                           ;!                                              0 BANK0      4     0      4
  1422                           ;!                           ___xxtofl (ARG)
  1423                           ;! ---------------------------------------------------------------------------------
  1424                           ;! (1) ___flmul                                             26    18      8    2417
  1425                           ;!                                             28 BANK0     26    18      8
  1426                           ;!                          __Umul8_16
  1427                           ;!                            ___fladd (ARG)
  1428                           ;!                            ___flneg (ARG)
  1429                           ;!                           ___xxtofl (ARG)
  1430                           ;! ---------------------------------------------------------------------------------
  1431                           ;! (2) __Umul8_16                                            9     7      2     799
  1432                           ;!                                              0 COMMON     9     7      2
  1433                           ;! ---------------------------------------------------------------------------------
  1434                           ;! (1) ___fladd                                             24    16      8    2262
  1435                           ;!                                              4 BANK0     24    16      8
  1436                           ;!                            ___flneg (ARG)
  1437                           ;!                           ___xxtofl (ARG)
  1438                           ;! ---------------------------------------------------------------------------------
  1439                           ;! (1) ___awmod                                              7     3      4     448
  1440                           ;!                                              0 COMMON     7     3      4
  1441                           ;! ---------------------------------------------------------------------------------
  1442                           ;! (1) _I2C_Master_Write                                     2     0      2      98
  1443                           ;!                                              0 COMMON     2     0      2
  1444                           ;!                    _I2C_Master_Wait
  1445                           ;! ---------------------------------------------------------------------------------
  1446                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  1447                           ;!                    _I2C_Master_Wait
  1448                           ;! ---------------------------------------------------------------------------------
  1449                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  1450                           ;!                    _I2C_Master_Wait
  1451                           ;! ---------------------------------------------------------------------------------
  1452                           ;! (1) _I2C_Master_Read                                      6     4      2     273
  1453                           ;!                                              0 COMMON     6     4      2
  1454                           ;!                    _I2C_Master_Wait
  1455                           ;! ---------------------------------------------------------------------------------
  1456                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  1457                           ;! ---------------------------------------------------------------------------------
  1458                           ;! Estimated maximum stack depth 3
  1459                           ;! ---------------------------------------------------------------------------------
  1460                           ;!
  1461                           ;! Call Graph Graphs:
  1462                           ;!
  1463                           ;! _main (ROOT)
  1464                           ;!   _I2C_Master_Read
  1465                           ;!     _I2C_Master_Wait
  1466                           ;!   _I2C_Master_Start
  1467                           ;!     _I2C_Master_Wait
  1468                           ;!   _I2C_Master_Stop
  1469                           ;!     _I2C_Master_Wait
  1470                           ;!   _I2C_Master_Write
  1471                           ;!     _I2C_Master_Wait
  1472                           ;!   ___awmod
  1473                           ;!   ___fladd
  1474                           ;!     ___flneg (ARG)
  1475                           ;!       ___xxtofl (ARG)
  1476                           ;!     ___xxtofl (ARG)
  1477                           ;!   ___flmul
  1478                           ;!     __Umul8_16
  1479                           ;!     ___fladd (ARG)
  1480                           ;!       ___flneg (ARG)
  1481                           ;!         ___xxtofl (ARG)
  1482                           ;!       ___xxtofl (ARG)
  1483                           ;!     ___flneg (ARG)
  1484                           ;!       ___xxtofl (ARG)
  1485                           ;!     ___xxtofl (ARG)
  1486                           ;!   ___flneg
  1487                           ;!     ___xxtofl (ARG)
  1488                           ;!   ___fltol
  1489                           ;!   ___xxtofl
  1490                           ;!   _setCursorLCD
  1491                           ;!     _cmdLCD
  1492                           ;!   _setup
  1493                           ;!     _I2C_Master_Init
  1494                           ;!       ___lldiv
  1495                           ;!     _clcLCD
  1496                           ;!       _cmdLCD
  1497                           ;!     _initLCD
  1498                           ;!       _cmdLCD
  1499                           ;!     _setCursorLCD
  1500                           ;!       _cmdLCD
  1501                           ;!     _writeStrLCD
  1502                           ;!       _writeCharLCD
  1503                           ;!   _writeCharLCD
  1504                           ;!   _writeFloat
  1505                           ;!     _setCursorLCD
  1506                           ;!       _cmdLCD
  1507                           ;!     _writeCharLCD
  1508                           ;!     _writeIntLCD
  1509                           ;!       _sprintf
  1510                           ;!         ___lwdiv
  1511                           ;!         ___lwmod
  1512                           ;!           ___lwdiv (ARG)
  1513                           ;!       _writeStrLCD
  1514                           ;!         _writeCharLCD
  1515                           ;!   _writeIntLCD
  1516                           ;!     _sprintf
  1517                           ;!       ___lwdiv
  1518                           ;!       ___lwmod
  1519                           ;!         ___lwdiv (ARG)
  1520                           ;!     _writeStrLCD
  1521                           ;!       _writeCharLCD
  1522                           ;!   _writeStrLCD
  1523                           ;!     _writeCharLCD
  1524                           ;!
  1525                           
  1526                           ;! Address spaces:
  1527                           
  1528                           ;!Name               Size   Autos  Total    Cost      Usage
  1529                           ;!BITCOMMON            E      0       0       0        0.0%
  1530                           ;!EEDATA             100      0       0       0        0.0%
  1531                           ;!NULL                 0      0       0       0        0.0%
  1532                           ;!CODE                 0      0       0       0        0.0%
  1533                           ;!COMMON               E      E       E       1      100.0%
  1534                           ;!BITSFR0              0      0       0       1        0.0%
  1535                           ;!SFR0                 0      0       0       1        0.0%
  1536                           ;!BITSFR1              0      0       0       2        0.0%
  1537                           ;!SFR1                 0      0       0       2        0.0%
  1538                           ;!STACK                0      0       0       2        0.0%
  1539                           ;!ABS                  0      0      69       3        0.0%
  1540                           ;!BITBANK0            50      0       0       4        0.0%
  1541                           ;!BITSFR3              0      0       0       4        0.0%
  1542                           ;!SFR3                 0      0       0       4        0.0%
  1543                           ;!BANK0               50     3A      4F       5       98.8%
  1544                           ;!BITSFR2              0      0       0       5        0.0%
  1545                           ;!SFR2                 0      0       0       5        0.0%
  1546                           ;!BITBANK1            50      0       0       6        0.0%
  1547                           ;!BANK1               50      0       C       7       15.0%
  1548                           ;!BITBANK3            60      0       0       8        0.0%
  1549                           ;!BANK3               60      0       0       9        0.0%
  1550                           ;!BITBANK2            60      0       0      10        0.0%
  1551                           ;!BANK2               60      0       0      11        0.0%
  1552                           ;!DATA                 0      0      69      12        0.0%
  1553                           
  1554                           	global	_main
  1555                           
  1556 ;; *************** function _main *****************
  1557 ;; Defined at:
  1558 ;;		line 61 in file "mainM.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;		None
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;                  1    wreg      void 
  1565 ;; Registers used:
  1566 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1567 ;; Tracked objects:
  1568 ;;		On entry : B00/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1572 ;;      Params:         0       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0
  1574 ;;      Temps:          0       4       0       0       0
  1575 ;;      Totals:         0       4       0       0       0
  1576 ;;Total ram usage:        4 bytes
  1577 ;; Hardware stack levels required when called:    4
  1578 ;; This function calls:
  1579 ;;		_I2C_Master_Read
  1580 ;;		_I2C_Master_Start
  1581 ;;		_I2C_Master_Stop
  1582 ;;		_I2C_Master_Write
  1583 ;;		___awmod
  1584 ;;		___fladd
  1585 ;;		___flmul
  1586 ;;		___flneg
  1587 ;;		___fltol
  1588 ;;		___xxtofl
  1589 ;;		_setCursorLCD
  1590 ;;		_setup
  1591 ;;		_writeCharLCD
  1592 ;;		_writeFloat
  1593 ;;		_writeIntLCD
  1594 ;;		_writeStrLCD
  1595 ;; This function is called by:
  1596 ;;		Startup code after reset
  1597 ;; This function uses a non-reentrant model
  1598 ;;
  1599                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1600                           	file	"mainM.c"
  1601                           	line	61
  1602                           global __pmaintext
  1603                           __pmaintext:	;psect for function _main
  1604  0063                     psect	maintext
  1605                           	file	"mainM.c"
  1606                           	line	61
  1607                           	global	__size_of_main
  1608                           	__size_of_main	equ	__end_of_main-_main
  1609  0157                     	
  1610                           _main:	
  1611  0063                     ;incstack = 0
  1612                           	opt	stack 4
  1613                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1614                           	line	62
  1615                           	
  1616                           l2395:	
  1617  0063                     ;mainM.c: 62:     setup();
  1618                           	fcall	_setup
  1619  0063  120A  118A  2004  120A  118A  	goto	l2397
  1620  0068  2869               	line	63
  1621                           ;mainM.c: 63:     while(1){
  1622                           	
  1623                           l185:	
  1624  0069                     	line	66
  1625                           	
  1626                           l2397:	
  1627  0069                     ;mainM.c: 66:         count = toggle%3;
  1628                           	movlw	03h
  1629  0069  3003               	movwf	(___awmod@divisor)
  1630  006A  00F0               	movlw	0
  1631  006B  3000               	movwf	((___awmod@divisor))+1
  1632  006C  00F1               	bcf	status, 5	;RP0=0, select bank0
  1633  006D  1283               	bcf	status, 6	;RP1=0, select bank0
  1634  006E  1303               	movf	(_toggle),w
  1635  006F  0866               	movwf	(??_main+0)+0
  1636  0070  00D6               	clrf	(??_main+0)+0+1
  1637  0071  01D7               	movf	0+(??_main+0)+0,w
  1638  0072  0856               	movwf	(___awmod@dividend)
  1639  0073  00F2               	movf	1+(??_main+0)+0,w
  1640  0074  0857               	movwf	(___awmod@dividend+1)
  1641  0075  00F3               	fcall	___awmod
  1642  0076  120A  158A  2464  120A  118A  	movf	(0+(?___awmod)),w
  1643  007B  0870               	bcf	status, 5	;RP0=0, select bank0
  1644  007C  1283               	bcf	status, 6	;RP1=0, select bank0
  1645  007D  1303               	movwf	(??_main+2)+0
  1646  007E  00D8               	movf	(??_main+2)+0,w
  1647  007F  0858               	movwf	(_count)
  1648  0080  00E4               	line	67
  1649                           	
  1650                           l2399:	
  1651  0081                     ;mainM.c: 67:         I2C_Master_Start();
  1652                           	fcall	_I2C_Master_Start
  1653  0081  120A  158A  2231  120A  118A  	line	68
  1654                           	
  1655                           l2401:	
  1656  0086                     ;mainM.c: 68:         I2C_Master_Write(0x69);
  1657                           	movlw	069h
  1658  0086  3069               	movwf	(I2C_Master_Write@d)
  1659  0087  00F0               	movlw	0
  1660  0088  3000               	movwf	((I2C_Master_Write@d))+1
  1661  0089  00F1               	fcall	_I2C_Master_Write
  1662  008A  120A  158A  2243  120A  118A  	line	69
  1663                           	
  1664                           l2403:	
  1665  008F                     ;mainM.c: 69:         if(count == 0){
  1666                           	bcf	status, 5	;RP0=0, select bank0
  1667  008F  1283               	bcf	status, 6	;RP1=0, select bank0
  1668  0090  1303               	movf	((_count)),w
  1669  0091  0864               	btfss	status,2
  1670  0092  1D03               	goto	u3221
  1671  0093  2895               	goto	u3220
  1672  0094  2896               u3221:
  1673  0095                     	goto	l2407
  1674  0095  28A5               u3220:
  1675  0096                     	line	70
  1676                           	
  1677                           l2405:	
  1678  0096                     ;mainM.c: 70:             adc = I2C_Master_Read(0);
  1679                           	movlw	0
  1680  0096  3000               	movwf	(I2C_Master_Read@a)
  1681  0097  00F0               	movwf	(I2C_Master_Read@a+1)
  1682  0098  00F1               	fcall	_I2C_Master_Read
  1683  0099  120A  158A  22F3  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1684  009E  0870               	bcf	status, 5	;RP0=0, select bank0
  1685  009F  1283               	bcf	status, 6	;RP1=0, select bank0
  1686  00A0  1303               	movwf	(??_main+0)+0
  1687  00A1  00D6               	movf	(??_main+0)+0,w
  1688  00A2  0856               	movwf	(_adc)
  1689  00A3  00ED               	line	71
  1690                           ;mainM.c: 71:         }else if(count == 1){
  1691                           	goto	l2415
  1692  00A4  28D0               	
  1693                           l186:	
  1694  00A5                     	
  1695                           l2407:	
  1696  00A5                     		decf	((_count)),w
  1697  00A5  0364               	btfss	status,2
  1698  00A6  1D03               	goto	u3231
  1699  00A7  28A9               	goto	u3230
  1700  00A8  28AA               u3231:
  1701  00A9                     	goto	l2411
  1702  00A9  28B9               u3230:
  1703  00AA                     	line	72
  1704                           	
  1705                           l2409:	
  1706  00AA                     ;mainM.c: 72:             adcl = I2C_Master_Read(0);
  1707                           	movlw	0
  1708  00AA  3000               	movwf	(I2C_Master_Read@a)
  1709  00AB  00F0               	movwf	(I2C_Master_Read@a+1)
  1710  00AC  00F1               	fcall	_I2C_Master_Read
  1711  00AD  120A  158A  22F3  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1712  00B2  0870               	bcf	status, 5	;RP0=0, select bank0
  1713  00B3  1283               	bcf	status, 6	;RP1=0, select bank0
  1714  00B4  1303               	movwf	(??_main+0)+0
  1715  00B5  00D6               	movf	(??_main+0)+0,w
  1716  00B6  0856               	movwf	(_adcl)
  1717  00B7  00EC               	line	73
  1718                           ;mainM.c: 73:         }else if(count == 2){
  1719                           	goto	l2415
  1720  00B8  28D0               	
  1721                           l188:	
  1722  00B9                     	
  1723                           l2411:	
  1724  00B9                     		movlw	2
  1725  00B9  3002               	xorwf	((_count)),w
  1726  00BA  0664               	btfss	status,2
  1727  00BB  1D03               	goto	u3241
  1728  00BC  28BE               	goto	u3240
  1729  00BD  28BF               u3241:
  1730  00BE                     	goto	l2415
  1731  00BE  28D0               u3240:
  1732  00BF                     	line	74
  1733                           	
  1734                           l2413:	
  1735  00BF                     ;mainM.c: 74:             counter = I2C_Master_Read(0);
  1736                           	movlw	0
  1737  00BF  3000               	movwf	(I2C_Master_Read@a)
  1738  00C0  00F0               	movwf	(I2C_Master_Read@a+1)
  1739  00C1  00F1               	fcall	_I2C_Master_Read
  1740  00C2  120A  158A  22F3  120A  118A  	movf	(0+(?_I2C_Master_Read)),w
  1741  00C7  0870               	bcf	status, 5	;RP0=0, select bank0
  1742  00C8  1283               	bcf	status, 6	;RP1=0, select bank0
  1743  00C9  1303               	movwf	(??_main+0)+0
  1744  00CA  00D6               	movf	(??_main+0)+0,w
  1745  00CB  0856               	movwf	(_counter)
  1746  00CC  00E9               	goto	l2415
  1747  00CD  28D0               	line	75
  1748                           ;mainM.c: 75:         }
  1749                           	
  1750                           l190:	
  1751  00CE                     	goto	l2415
  1752  00CE  28D0               	
  1753                           l189:	
  1754  00CF                     	goto	l2415
  1755  00CF  28D0               	
  1756                           l187:	
  1757  00D0                     	line	76
  1758                           	
  1759                           l2415:	
  1760  00D0                     ;mainM.c: 76:         toggle++;
  1761                           	movlw	low(01h)
  1762  00D0  3001               	movwf	(??_main+0)+0
  1763  00D1  00D6               	movf	(??_main+0)+0,w
  1764  00D2  0856               	addwf	(_toggle),f
  1765  00D3  07E6               	line	77
  1766                           	
  1767                           l2417:	
  1768  00D4                     ;mainM.c: 77:         I2C_Master_Stop();
  1769                           	fcall	_I2C_Master_Stop
  1770  00D4  120A  158A  223A  120A  118A  	line	78
  1771                           	
  1772                           l2419:	
  1773  00D9                     ;mainM.c: 78:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1774                           	opt asmopt_push
  1775                           opt asmopt_off
  1776                           movlw	13
  1777  00D9  300D               	bcf	status, 5	;RP0=0, select bank0
  1778  00DA  1283               	bcf	status, 6	;RP1=0, select bank0
  1779  00DB  1303               movwf	((??_main+0)+0+1),f
  1780  00DC  00D7               	movlw	251
  1781  00DD  30FB               movwf	((??_main+0)+0),f
  1782  00DE  00D6               	u3257:
  1783  00DF                     decfsz	((??_main+0)+0),f
  1784  00DF  0BD6               	goto	u3257
  1785  00E0  28DF               	decfsz	((??_main+0)+0+1),f
  1786  00E1  0BD7               	goto	u3257
  1787  00E2  28DF               opt asmopt_pop
  1788                           
  1789                           	line	81
  1790                           	
  1791                           l2421:	
  1792  00E3                     ;mainM.c: 81:         setCursorLCD(2, 1);
  1793                           	clrf	(setCursorLCD@x)
  1794  00E3  01F3               	incf	(setCursorLCD@x),f
  1795  00E4  0AF3               	movlw	low(02h)
  1796  00E5  3002               	fcall	_setCursorLCD
  1797  00E6  120A  158A  228E  120A  118A  	line	83
  1798                           	
  1799                           l2423:	
  1800  00EB                     ;mainM.c: 83:         writeADC = adc*256+adcl;
  1801                           	bcf	status, 5	;RP0=0, select bank0
  1802  00EB  1283               	bcf	status, 6	;RP1=0, select bank0
  1803  00EC  1303               	movf	(_adc),w
  1804  00ED  086D               	movwf	(??_main+0)+0
  1805  00EE  00D6               	clrf	(??_main+0)+0+1
  1806  00EF  01D7               	movf	(??_main+0)+0,w
  1807  00F0  0856               	movwf	(??_main+0)+1
  1808  00F1  00D7               	clrf	(??_main+0)+0
  1809  00F2  01D6               	movf	(_adcl),w
  1810  00F3  086C               	addwf	0+(??_main+0)+0,w
  1811  00F4  0756               	movwf	(_writeADC)
  1812  00F5  00E2               	movlw	0
  1813  00F6  3000               	skipnc
  1814  00F7  1803               	movlw	1
  1815  00F8  3001               	addwf	1+(??_main+0)+0,w
  1816  00F9  0757               	movwf	1+(_writeADC)
  1817  00FA  00E3               	line	85
  1818                           	
  1819                           l2425:	
  1820  00FB                     ;mainM.c: 85:         writeStrLCD("  ");
  1821                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  1822  00FB  300B               	movwf	(writeStrLCD@string)
  1823  00FC  00F2               	movlw	80h
  1824  00FD  3080               	movwf	(writeStrLCD@string+1)
  1825  00FE  00F3               	fcall	_writeStrLCD
  1826  00FF  120A  158A  23D5  120A  118A  	line	88
  1827                           	
  1828                           l2427:	
  1829  0104                     ;mainM.c: 88:         entero1 = (int) sensorF1;
  1830                           	bcf	status, 5	;RP0=0, select bank0
  1831  0104  1283               	bcf	status, 6	;RP1=0, select bank0
  1832  0105  1303               	movf	(_sensorF1+3),w
  1833  0106  0861               	movwf	(___fltol@f1+3)
  1834  0107  00F3               	movf	(_sensorF1+2),w
  1835  0108  0860               	movwf	(___fltol@f1+2)
  1836  0109  00F2               	movf	(_sensorF1+1),w
  1837  010A  085F               	movwf	(___fltol@f1+1)
  1838  010B  00F1               	movf	(_sensorF1),w
  1839  010C  085E               	movwf	(___fltol@f1)
  1840  010D  00F0               
  1841                           	fcall	___fltol
  1842  010E  120A  158A  25A4  120A  118A  	movf	(0+(?___fltol)),w
  1843  0113  0870               	bcf	status, 5	;RP0=0, select bank0
  1844  0114  1283               	bcf	status, 6	;RP1=0, select bank0
  1845  0115  1303               	movwf	(??_main+0)+0
  1846  0116  00D6               	movf	(??_main+0)+0,w
  1847  0117  0856               	movwf	(_entero1)
  1848  0118  00EB               	line	89
  1849                           	
  1850                           l2429:	
  1851  0119                     ;mainM.c: 89:         float1 = (sensorF1 - entero1)*100;
  1852                           	movlw	0x42
  1853  0119  3042               	movwf	(___flmul@b+3)
  1854  011A  00BF               	movlw	0xc8
  1855  011B  30C8               	movwf	(___flmul@b+2)
  1856  011C  00BE               	movlw	0x0
  1857  011D  3000               	movwf	(___flmul@b+1)
  1858  011E  00BD               	movlw	0x0
  1859  011F  3000               	movwf	(___flmul@b)
  1860  0120  00BC               
  1861                           	movf	(_sensorF1+3),w
  1862  0121  0861               	movwf	(___fladd@b+3)
  1863  0122  00A7               	movf	(_sensorF1+2),w
  1864  0123  0860               	movwf	(___fladd@b+2)
  1865  0124  00A6               	movf	(_sensorF1+1),w
  1866  0125  085F               	movwf	(___fladd@b+1)
  1867  0126  00A5               	movf	(_sensorF1),w
  1868  0127  085E               	movwf	(___fladd@b)
  1869  0128  00A4               
  1870                           	movf	(_entero1),w
  1871  0129  086B               	movwf	(??_main+0)+0
  1872  012A  00D6               	clrf	(??_main+0)+0+1
  1873  012B  01D7               	clrf	(??_main+0)+0+2
  1874  012C  01D8               	clrf	(??_main+0)+0+3
  1875  012D  01D9               	movf	3+(??_main+0)+0,w
  1876  012E  0859               	movwf	(___xxtofl@val+3)
  1877  012F  00F3               	movf	2+(??_main+0)+0,w
  1878  0130  0858               	movwf	(___xxtofl@val+2)
  1879  0131  00F2               	movf	1+(??_main+0)+0,w
  1880  0132  0857               	movwf	(___xxtofl@val+1)
  1881  0133  00F1               	movf	0+(??_main+0)+0,w
  1882  0134  0856               	movwf	(___xxtofl@val)
  1883  0135  00F0               
  1884                           	movlw	low(01h)
  1885  0136  3001               	fcall	___xxtofl
  1886  0137  120A  158A  263E  120A  118A  	movf	(3+(?___xxtofl)),w
  1887  013C  0873               	bcf	status, 5	;RP0=0, select bank0
  1888  013D  1283               	bcf	status, 6	;RP1=0, select bank0
  1889  013E  1303               	movwf	(___flneg@f1+3)
  1890  013F  00A3               	movf	(2+(?___xxtofl)),w
  1891  0140  0872               	movwf	(___flneg@f1+2)
  1892  0141  00A2               	movf	(1+(?___xxtofl)),w
  1893  0142  0871               	movwf	(___flneg@f1+1)
  1894  0143  00A1               	movf	(0+(?___xxtofl)),w
  1895  0144  0870               	movwf	(___flneg@f1)
  1896  0145  00A0               
  1897                           	fcall	___flneg
  1898  0146  120A  158A  225C  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1899  014B  1283               	bcf	status, 6	;RP1=0, select bank0
  1900  014C  1303               	movf	(3+(?___flneg)),w
  1901  014D  0823               	movwf	(___fladd@a+3)
  1902  014E  00AB               	movf	(2+(?___flneg)),w
  1903  014F  0822               	movwf	(___fladd@a+2)
  1904  0150  00AA               	movf	(1+(?___flneg)),w
  1905  0151  0821               	movwf	(___fladd@a+1)
  1906  0152  00A9               	movf	(0+(?___flneg)),w
  1907  0153  0820               	movwf	(___fladd@a)
  1908  0154  00A8               
  1909                           	fcall	___fladd
  1910  0155  120A  118A  21BA  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1911  015A  1283               	bcf	status, 6	;RP1=0, select bank0
  1912  015B  1303               	movf	(3+(?___fladd)),w
  1913  015C  0827               	movwf	(___flmul@a+3)
  1914  015D  00C3               	movf	(2+(?___fladd)),w
  1915  015E  0826               	movwf	(___flmul@a+2)
  1916  015F  00C2               	movf	(1+(?___fladd)),w
  1917  0160  0825               	movwf	(___flmul@a+1)
  1918  0161  00C1               	movf	(0+(?___fladd)),w
  1919  0162  0824               	movwf	(___flmul@a)
  1920  0163  00C0               
  1921                           	fcall	___flmul
  1922  0164  120A  118A  2476  120A  118A  	bcf	status, 5	;RP0=0, select bank0
  1923  0169  1283               	bcf	status, 6	;RP1=0, select bank0
  1924  016A  1303               	movf	(3+(?___flmul)),w
  1925  016B  083F               	movwf	(_float1+3)
  1926  016C  00DD               	movf	(2+(?___flmul)),w
  1927  016D  083E               	movwf	(_float1+2)
  1928  016E  00DC               	movf	(1+(?___flmul)),w
  1929  016F  083D               	movwf	(_float1+1)
  1930  0170  00DB               	movf	(0+(?___flmul)),w
  1931  0171  083C               	movwf	(_float1)
  1932  0172  00DA               
  1933                           	line	90
  1934                           	
  1935                           l2431:	
  1936  0173                     ;mainM.c: 90:         dec1 = (int) float1;
  1937                           	movf	(_float1+3),w
  1938  0173  085D               	movwf	(___fltol@f1+3)
  1939  0174  00F3               	movf	(_float1+2),w
  1940  0175  085C               	movwf	(___fltol@f1+2)
  1941  0176  00F2               	movf	(_float1+1),w
  1942  0177  085B               	movwf	(___fltol@f1+1)
  1943  0178  00F1               	movf	(_float1),w
  1944  0179  085A               	movwf	(___fltol@f1)
  1945  017A  00F0               
  1946                           	fcall	___fltol
  1947  017B  120A  158A  25A4  120A  118A  	movf	(0+(?___fltol)),w
  1948  0180  0870               	bcf	status, 5	;RP0=0, select bank0
  1949  0181  1283               	bcf	status, 6	;RP1=0, select bank0
  1950  0182  1303               	movwf	(??_main+0)+0
  1951  0183  00D6               	movf	(??_main+0)+0,w
  1952  0184  0856               	movwf	(_dec1)
  1953  0185  00EA               	line	92
  1954                           	
  1955                           l2433:	
  1956  0186                     ;mainM.c: 92:         writeFloat(entero1, dec1, 1);
  1957                           	movf	(_dec1),w
  1958  0186  086A               	movwf	(??_main+0)+0
  1959  0187  00D6               	movf	(??_main+0)+0,w
  1960  0188  0856               	movwf	(writeFloat@decimal)
  1961  0189  00B5               	clrf	(writeFloat@initPos)
  1962  018A  01B6               	incf	(writeFloat@initPos),f
  1963  018B  0AB6               	movf	(_entero1),w
  1964  018C  086B               	fcall	_writeFloat
  1965  018D  120A  158A  2534  120A  118A  	line	93
  1966                           	
  1967                           l2435:	
  1968  0192                     ;mainM.c: 93:         setCursorLCD(2, 9);
  1969                           	movlw	low(09h)
  1970  0192  3009               	bcf	status, 5	;RP0=0, select bank0
  1971  0193  1283               	bcf	status, 6	;RP1=0, select bank0
  1972  0194  1303               	movwf	(??_main+0)+0
  1973  0195  00D6               	movf	(??_main+0)+0,w
  1974  0196  0856               	movwf	(setCursorLCD@x)
  1975  0197  00F3               	movlw	low(02h)
  1976  0198  3002               	fcall	_setCursorLCD
  1977  0199  120A  158A  228E  120A  118A  	line	94
  1978                           	
  1979                           l2437:	
  1980  019E                     ;mainM.c: 94:         writeIntLCD(counter);
  1981                           	bcf	status, 5	;RP0=0, select bank0
  1982  019E  1283               	bcf	status, 6	;RP1=0, select bank0
  1983  019F  1303               	movf	(_counter),w
  1984  01A0  0869               	fcall	_writeIntLCD
  1985  01A1  120A  158A  22AB  120A  118A  	line	95
  1986                           	
  1987                           l2439:	
  1988  01A6                     ;mainM.c: 95:         writeCharLCD(' ');
  1989                           	movlw	low(020h)
  1990  01A6  3020               	fcall	_writeCharLCD
  1991  01A7  120A  158A  226B  120A  118A  	line	97
  1992                           	
  1993                           l2441:	
  1994  01AC                     ;mainM.c: 97:         writeStrLCD("  ");
  1995                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  1996  01AC  300B               	movwf	(writeStrLCD@string)
  1997  01AD  00F2               	movlw	80h
  1998  01AE  3080               	movwf	(writeStrLCD@string+1)
  1999  01AF  00F3               	fcall	_writeStrLCD
  2000  01B0  120A  158A  23D5  120A  118A  	goto	l2397
  2001  01B5  2869               	line	98
  2002                           ;mainM.c: 98:     }
  2003                           	
  2004                           l191:	
  2005  01B6                     	goto	l2397
  2006  01B6  2869               	
  2007                           l192:	
  2008  01B7                     	line	100
  2009                           ;mainM.c: 99:     return;
  2010                           	
  2011                           l193:	
  2012  01B7                     	global	start
  2013                           	ljmp	start
  2014  01B7  120A  118A  2800   	opt stack 0
  2015                           GLOBAL	__end_of_main
  2016                           	__end_of_main:
  2017  01BA                     	signat	_main,89
  2018                           	global	_writeFloat
  2019                           
  2020 ;; *************** function _writeFloat *****************
  2021 ;; Defined at:
  2022 ;;		line 69 in file "LCD.c"
  2023 ;; Parameters:    Size  Location     Type
  2024 ;;  integer         1    wreg     unsigned char 
  2025 ;;  decimal         1   21[BANK0 ] unsigned char 
  2026 ;;  initPos         1   22[BANK0 ] unsigned char 
  2027 ;; Auto vars:     Size  Location     Type
  2028 ;;  integer         1   24[BANK0 ] unsigned char 
  2029 ;; Return value:  Size  Location     Type
  2030 ;;                  1    wreg      void 
  2031 ;; Registers used:
  2032 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2033 ;; Tracked objects:
  2034 ;;		On entry : 0/0
  2035 ;;		On exit  : 0/0
  2036 ;;		Unchanged: 0/0
  2037 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2038 ;;      Params:         0       2       0       0       0
  2039 ;;      Locals:         0       1       0       0       0
  2040 ;;      Temps:          0       1       0       0       0
  2041 ;;      Totals:         0       4       0       0       0
  2042 ;;Total ram usage:        4 bytes
  2043 ;; Hardware stack levels used:    1
  2044 ;; Hardware stack levels required when called:    3
  2045 ;; This function calls:
  2046 ;;		_setCursorLCD
  2047 ;;		_writeCharLCD
  2048 ;;		_writeIntLCD
  2049 ;; This function is called by:
  2050 ;;		_main
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2054                           	file	"LCD.c"
  2055                           	line	69
  2056                           global __ptext1
  2057                           __ptext1:	;psect for function _writeFloat
  2058  0D34                     psect	text1
  2059                           	file	"LCD.c"
  2060                           	line	69
  2061                           	global	__size_of_writeFloat
  2062                           	__size_of_writeFloat	equ	__end_of_writeFloat-_writeFloat
  2063  0070                     	
  2064                           _writeFloat:	
  2065  0D34                     ;incstack = 0
  2066                           	opt	stack 4
  2067                           ; Regs used in _writeFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2068                           ;writeFloat@integer stored from wreg
  2069                           	bcf	status, 5	;RP0=0, select bank0
  2070  0D34  1283               	bcf	status, 6	;RP1=0, select bank0
  2071  0D35  1303               	movwf	(writeFloat@integer)
  2072  0D36  00B8               	line	72
  2073                           	
  2074                           l1883:	
  2075  0D37                     ;LCD.c: 72:     setCursorLCD(2, initPos);
  2076                           	movf	(writeFloat@initPos),w
  2077  0D37  0836               	movwf	(??_writeFloat+0)+0
  2078  0D38  00B7               	movf	(??_writeFloat+0)+0,w
  2079  0D39  0837               	movwf	(setCursorLCD@x)
  2080  0D3A  00F3               	movlw	low(02h)
  2081  0D3B  3002               	fcall	_setCursorLCD
  2082  0D3C  120A  158A  228E  120A  158A  	line	73
  2083                           	
  2084                           l1885:	
  2085  0D41                     ;LCD.c: 73:     writeIntLCD(integer);
  2086                           	bcf	status, 5	;RP0=0, select bank0
  2087  0D41  1283               	bcf	status, 6	;RP1=0, select bank0
  2088  0D42  1303               	movf	(writeFloat@integer),w
  2089  0D43  0838               	fcall	_writeIntLCD
  2090  0D44  120A  158A  22AB  120A  158A  	line	74
  2091                           	
  2092                           l1887:	
  2093  0D49                     ;LCD.c: 74:     if(integer >= 10){
  2094                           	movlw	low(0Ah)
  2095  0D49  300A               	bcf	status, 5	;RP0=0, select bank0
  2096  0D4A  1283               	bcf	status, 6	;RP1=0, select bank0
  2097  0D4B  1303               	subwf	(writeFloat@integer),w
  2098  0D4C  0238               	skipc
  2099  0D4D  1C03               	goto	u2021
  2100  0D4E  2D50               	goto	u2020
  2101  0D4F  2D51               u2021:
  2102  0D50                     	goto	l1891
  2103  0D50  2D56               u2020:
  2104  0D51                     	line	75
  2105                           	
  2106                           l1889:	
  2107  0D51                     ;LCD.c: 75:         initPos++;
  2108                           	movlw	low(01h)
  2109  0D51  3001               	movwf	(??_writeFloat+0)+0
  2110  0D52  00B7               	movf	(??_writeFloat+0)+0,w
  2111  0D53  0837               	addwf	(writeFloat@initPos),f
  2112  0D54  07B6               	goto	l1891
  2113  0D55  2D56               	line	76
  2114                           ;LCD.c: 76:     }if(integer >= 100){
  2115                           	
  2116                           l103:	
  2117  0D56                     	
  2118                           l1891:	
  2119  0D56                     	movlw	low(064h)
  2120  0D56  3064               	subwf	(writeFloat@integer),w
  2121  0D57  0238               	skipc
  2122  0D58  1C03               	goto	u2031
  2123  0D59  2D5B               	goto	u2030
  2124  0D5A  2D5C               u2031:
  2125  0D5B                     	goto	l1895
  2126  0D5B  2D61               u2030:
  2127  0D5C                     	line	77
  2128                           	
  2129                           l1893:	
  2130  0D5C                     ;LCD.c: 77:         initPos++;
  2131                           	movlw	low(01h)
  2132  0D5C  3001               	movwf	(??_writeFloat+0)+0
  2133  0D5D  00B7               	movf	(??_writeFloat+0)+0,w
  2134  0D5E  0837               	addwf	(writeFloat@initPos),f
  2135  0D5F  07B6               	goto	l1895
  2136  0D60  2D61               	line	78
  2137                           ;LCD.c: 78:     }
  2138                           	
  2139                           l104:	
  2140  0D61                     	line	79
  2141                           	
  2142                           l1895:	
  2143  0D61                     ;LCD.c: 79:     setCursorLCD(2, initPos + 1);
  2144                           	movf	(writeFloat@initPos),w
  2145  0D61  0836               	addlw	01h
  2146  0D62  3E01               	movwf	(??_writeFloat+0)+0
  2147  0D63  00B7               	movf	(??_writeFloat+0)+0,w
  2148  0D64  0837               	movwf	(setCursorLCD@x)
  2149  0D65  00F3               	movlw	low(02h)
  2150  0D66  3002               	fcall	_setCursorLCD
  2151  0D67  120A  158A  228E  120A  158A  	line	80
  2152                           	
  2153                           l1897:	
  2154  0D6C                     ;LCD.c: 80:     writeCharLCD('.');
  2155                           	movlw	low(02Eh)
  2156  0D6C  302E               	fcall	_writeCharLCD
  2157  0D6D  120A  158A  226B  120A  158A  	line	81
  2158                           	
  2159                           l1899:	
  2160  0D72                     ;LCD.c: 81:     setCursorLCD(2, initPos + 2);
  2161                           	bcf	status, 5	;RP0=0, select bank0
  2162  0D72  1283               	bcf	status, 6	;RP1=0, select bank0
  2163  0D73  1303               	movf	(writeFloat@initPos),w
  2164  0D74  0836               	addlw	02h
  2165  0D75  3E02               	movwf	(??_writeFloat+0)+0
  2166  0D76  00B7               	movf	(??_writeFloat+0)+0,w
  2167  0D77  0837               	movwf	(setCursorLCD@x)
  2168  0D78  00F3               	movlw	low(02h)
  2169  0D79  3002               	fcall	_setCursorLCD
  2170  0D7A  120A  158A  228E  120A  158A  	line	83
  2171                           	
  2172                           l1901:	
  2173  0D7F                     ;LCD.c: 83:     if(decimal < 10){
  2174                           	movlw	low(0Ah)
  2175  0D7F  300A               	bcf	status, 5	;RP0=0, select bank0
  2176  0D80  1283               	bcf	status, 6	;RP1=0, select bank0
  2177  0D81  1303               	subwf	(writeFloat@decimal),w
  2178  0D82  0235               	skipnc
  2179  0D83  1803               	goto	u2041
  2180  0D84  2D86               	goto	u2040
  2181  0D85  2D87               u2041:
  2182  0D86                     	goto	l1905
  2183  0D86  2D8E               u2040:
  2184  0D87                     	line	84
  2185                           	
  2186                           l1903:	
  2187  0D87                     ;LCD.c: 84:         writeCharLCD('0');
  2188                           	movlw	low(030h)
  2189  0D87  3030               	fcall	_writeCharLCD
  2190  0D88  120A  158A  226B  120A  158A  	goto	l1905
  2191  0D8D  2D8E               	line	85
  2192                           ;LCD.c: 85:     }
  2193                           	
  2194                           l105:	
  2195  0D8E                     	line	86
  2196                           	
  2197                           l1905:	
  2198  0D8E                     ;LCD.c: 86:     writeIntLCD(decimal);
  2199                           	bcf	status, 5	;RP0=0, select bank0
  2200  0D8E  1283               	bcf	status, 6	;RP1=0, select bank0
  2201  0D8F  1303               	movf	(writeFloat@decimal),w
  2202  0D90  0835               	fcall	_writeIntLCD
  2203  0D91  120A  158A  22AB  120A  158A  	line	88
  2204                           	
  2205                           l1907:	
  2206  0D96                     ;LCD.c: 88:     setCursorLCD(2, initPos + 4);
  2207                           	bcf	status, 5	;RP0=0, select bank0
  2208  0D96  1283               	bcf	status, 6	;RP1=0, select bank0
  2209  0D97  1303               	movf	(writeFloat@initPos),w
  2210  0D98  0836               	addlw	04h
  2211  0D99  3E04               	movwf	(??_writeFloat+0)+0
  2212  0D9A  00B7               	movf	(??_writeFloat+0)+0,w
  2213  0D9B  0837               	movwf	(setCursorLCD@x)
  2214  0D9C  00F3               	movlw	low(02h)
  2215  0D9D  3002               	fcall	_setCursorLCD
  2216  0D9E  120A  158A  228E  120A  158A  	line	90
  2217                           	
  2218                           l106:	
  2219  0DA3                     	return
  2220  0DA3  0008               	opt stack 0
  2221                           GLOBAL	__end_of_writeFloat
  2222                           	__end_of_writeFloat:
  2223  0DA4                     	signat	_writeFloat,12409
  2224                           	global	_writeIntLCD
  2225                           
  2226 ;; *************** function _writeIntLCD *****************
  2227 ;; Defined at:
  2228 ;;		line 57 in file "LCD.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;  numero          1    wreg     unsigned char 
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  numero          1   20[BANK0 ] unsigned char 
  2233 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2243 ;;      Params:         0       0       0       0       0
  2244 ;;      Locals:         0       5       0       0       0
  2245 ;;      Temps:          0       3       0       0       0
  2246 ;;      Totals:         0       8       0       0       0
  2247 ;;Total ram usage:        8 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    2
  2250 ;; This function calls:
  2251 ;;		_sprintf
  2252 ;;		_writeStrLCD
  2253 ;; This function is called by:
  2254 ;;		_writeFloat
  2255 ;;		_main
  2256 ;; This function uses a non-reentrant model
  2257 ;;
  2258                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2259                           	line	57
  2260                           global __ptext2
  2261                           __ptext2:	;psect for function _writeIntLCD
  2262  0AAB                     psect	text2
  2263                           	file	"LCD.c"
  2264                           	line	57
  2265                           	global	__size_of_writeIntLCD
  2266                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  2267  001E                     	
  2268                           _writeIntLCD:	
  2269  0AAB                     ;incstack = 0
  2270                           	opt	stack 5
  2271                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2272                           ;writeIntLCD@numero stored from wreg
  2273                           	bcf	status, 5	;RP0=0, select bank0
  2274  0AAB  1283               	bcf	status, 6	;RP1=0, select bank0
  2275  0AAC  1303               	movwf	(writeIntLCD@numero)
  2276  0AAD  00B4               	line	59
  2277                           	
  2278                           l1839:	
  2279  0AAE                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  2280                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2281  0AAE  3017               	movwf	(??_writeIntLCD+0)+0
  2282  0AAF  00AD               	movf	(??_writeIntLCD+0)+0,w
  2283  0AB0  082D               	movwf	(sprintf@f)
  2284  0AB1  00A0               	movf	(writeIntLCD@numero),w
  2285  0AB2  0834               	movwf	(??_writeIntLCD+1)+0
  2286  0AB3  00AE               	clrf	(??_writeIntLCD+1)+0+1
  2287  0AB4  01AF               	movf	0+(??_writeIntLCD+1)+0,w
  2288  0AB5  082E               	movwf	0+(?_sprintf)+01h
  2289  0AB6  00A1               	movf	1+(??_writeIntLCD+1)+0,w
  2290  0AB7  082F               	movwf	1+(?_sprintf)+01h
  2291  0AB8  00A2               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  2292  0AB9  3030               	fcall	_sprintf
  2293  0ABA  120A  158A  2700  120A  158A  	line	60
  2294                           ;LCD.c: 60:     writeStrLCD(buffer);
  2295                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  2296  0ABF  3030               	movwf	(writeStrLCD@string)
  2297  0AC0  00F2               	movlw	(0x0)
  2298  0AC1  3000               	movwf	(writeStrLCD@string+1)
  2299  0AC2  00F3               	fcall	_writeStrLCD
  2300  0AC3  120A  158A  23D5  120A  158A  	line	61
  2301                           	
  2302                           l97:	
  2303  0AC8                     	return
  2304  0AC8  0008               	opt stack 0
  2305                           GLOBAL	__end_of_writeIntLCD
  2306                           	__end_of_writeIntLCD:
  2307  0AC9                     	signat	_writeIntLCD,4217
  2308                           	global	_sprintf
  2309                           
  2310 ;; *************** function _sprintf *****************
  2311 ;; Defined at:
  2312 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2313 ;; Parameters:    Size  Location     Type
  2314 ;;  sp              1    wreg     PTR unsigned char 
  2315 ;;		 -> writeIntLCD16@buffer(8), writeIntLCD@buffer(4), 
  2316 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2317 ;;		 -> STR_2(3), STR_1(3), 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2320 ;;		 -> writeIntLCD16@buffer(8), writeIntLCD@buffer(4), 
  2321 ;;  tmpval          4    0        struct .
  2322 ;;  val             2    9[BANK0 ] unsigned int 
  2323 ;;  cp              2    0        PTR const unsigned char 
  2324 ;;  len             2    0        unsigned int 
  2325 ;;  c               1   12[BANK0 ] unsigned char 
  2326 ;;  prec            1    8[BANK0 ] char 
  2327 ;;  flag            1    7[BANK0 ] unsigned char 
  2328 ;;  ap              1    6[BANK0 ] PTR void [1]
  2329 ;;		 -> ?_sprintf(2), 
  2330 ;; Return value:  Size  Location     Type
  2331 ;;                  2    0[BANK0 ] int 
  2332 ;; Registers used:
  2333 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2334 ;; Tracked objects:
  2335 ;;		On entry : 0/0
  2336 ;;		On exit  : 0/0
  2337 ;;		Unchanged: 0/0
  2338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2339 ;;      Params:         0       3       0       0       0
  2340 ;;      Locals:         0       7       0       0       0
  2341 ;;      Temps:          0       3       0       0       0
  2342 ;;      Totals:         0      13       0       0       0
  2343 ;;Total ram usage:       13 bytes
  2344 ;; Hardware stack levels used:    1
  2345 ;; Hardware stack levels required when called:    1
  2346 ;; This function calls:
  2347 ;;		___lwdiv
  2348 ;;		___lwmod
  2349 ;; This function is called by:
  2350 ;;		_writeIntLCD
  2351 ;;		_writeIntLCD16
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2355                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2356                           	line	500
  2357                           global __ptext3
  2358                           __ptext3:	;psect for function _sprintf
  2359  0F00                     psect	text3
  2360                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2361                           	line	500
  2362                           	global	__size_of_sprintf
  2363                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2364  0100                     	
  2365                           _sprintf:	
  2366  0F00                     ;incstack = 0
  2367                           	opt	stack 5
  2368                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2369                           ;sprintf@sp stored from wreg
  2370                           	bcf	status, 5	;RP0=0, select bank0
  2371  0F00  1283               	bcf	status, 6	;RP1=0, select bank0
  2372  0F01  1303               	movwf	(sprintf@sp)
  2373  0F02  00AB               	line	545
  2374                           	
  2375                           l1709:	
  2376  0F03                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2377                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2378  0F03  3021               	movwf	(??_sprintf+0)+0
  2379  0F04  00A3               	movf	(??_sprintf+0)+0,w
  2380  0F05  0823               	movwf	(sprintf@ap)
  2381  0F06  00A6               	line	548
  2382                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2383                           	goto	l1761
  2384  0F07  2FE6               	
  2385                           l288:	
  2386  0F08                     	line	550
  2387                           	
  2388                           l1711:	
  2389  0F08                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2390                           		movlw	37
  2391  0F08  3025               	xorwf	((sprintf@c)),w
  2392  0F09  062C               	btfsc	status,2
  2393  0F0A  1903               	goto	u1791
  2394  0F0B  2F0D               	goto	u1790
  2395  0F0C  2F0E               u1791:
  2396  0F0D                     	goto	l1717
  2397  0F0D  2F1A               u1790:
  2398  0F0E                     	line	553
  2399                           	
  2400                           l1713:	
  2401  0F0E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  2402                           	movf	(sprintf@c),w
  2403  0F0E  082C               	movwf	(??_sprintf+0)+0
  2404  0F0F  00A3               	movf	(sprintf@sp),w
  2405  0F10  082B               	movwf	fsr0
  2406  0F11  0084               	movf	(??_sprintf+0)+0,w
  2407  0F12  0823               	bcf	status, 7	;select IRP bank0
  2408  0F13  1383               	movwf	indf
  2409  0F14  0080               	
  2410                           l1715:	
  2411  0F15                     	movlw	low(01h)
  2412  0F15  3001               	movwf	(??_sprintf+0)+0
  2413  0F16  00A3               	movf	(??_sprintf+0)+0,w
  2414  0F17  0823               	addwf	(sprintf@sp),f
  2415  0F18  07AB               	line	554
  2416                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2417                           	goto	l1761
  2418  0F19  2FE6               	line	555
  2419                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2420                           	
  2421                           l289:	
  2422  0F1A                     	line	560
  2423                           	
  2424                           l1717:	
  2425  0F1A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2426                           	clrf	(sprintf@flag)
  2427  0F1A  01A7               	line	654
  2428                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2429                           	goto	l1721
  2430  0F1B  2F21               	line	656
  2431                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2432                           	
  2433                           l291:	
  2434  0F1C                     	line	657
  2435                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2436                           	goto	l1763
  2437  0F1C  2FFA               	line	716
  2438                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2439                           	
  2440                           l293:	
  2441  0F1D                     	goto	l1723
  2442  0F1D  2F3E               	line	717
  2443                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2444                           	
  2445                           l294:	
  2446  0F1E                     	line	718
  2447                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2448                           	goto	l1723
  2449  0F1E  2F3E               	line	821
  2450                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2451                           	
  2452                           l296:	
  2453  0F1F                     	line	832
  2454                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2455                           	goto	l1761
  2456  0F1F  2FE6               	line	841
  2457                           	
  2458                           l1719:	
  2459  0F20                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2460                           	goto	l1723
  2461  0F20  2F3E               	
  2462                           l290:	
  2463  0F21                     	
  2464                           l1721:	
  2465  0F21                     	movlw	01h
  2466  0F21  3001               	addwf	(sprintf@f),f
  2467  0F22  07A0               	movlw	-01h
  2468  0F23  30FF               	addwf	(sprintf@f),w
  2469  0F24  0720               	movwf	fsr0
  2470  0F25  0084               	fcall	stringdir
  2471  0F26  120A  158A  200A  120A  158A  	movwf	(sprintf@c)
  2472  0F2B  00AC               	movwf	(??_sprintf+0)+0
  2473  0F2C  00A3               	clrf	(??_sprintf+0)+0+1
  2474  0F2D  01A4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2475                           ; Switch size 1, requested type "space"
  2476                           ; Number of cases is 1, Range of values is 0 to 0
  2477                           ; switch strategies available:
  2478                           ; Name         Instructions Cycles
  2479                           ; simple_byte            4     3 (average)
  2480                           ; direct_byte           11     8 (fixed)
  2481                           ; jumptable            260     6 (fixed)
  2482                           ;	Chosen strategy is simple_byte
  2483                           
  2484                           	movf 1+(??_sprintf+0)+0,w
  2485  0F2E  0824               	opt asmopt_push
  2486                           	opt asmopt_off
  2487                           	xorlw	0^0	; case 0
  2488  0F2F  3A00               	skipnz
  2489  0F30  1903               	goto	l2463
  2490  0F31  2F33               	goto	l1761
  2491  0F32  2FE6               	opt asmopt_pop
  2492                           	
  2493                           l2463:	
  2494  0F33                     ; Switch size 1, requested type "space"
  2495                           ; Number of cases is 3, Range of values is 0 to 105
  2496                           ; switch strategies available:
  2497                           ; Name         Instructions Cycles
  2498                           ; simple_byte           10     6 (average)
  2499                           ; jumptable            260     6 (fixed)
  2500                           ;	Chosen strategy is simple_byte
  2501                           
  2502                           	movf 0+(??_sprintf+0)+0,w
  2503  0F33  0823               	opt asmopt_push
  2504                           	opt asmopt_off
  2505                           	xorlw	0^0	; case 0
  2506  0F34  3A00               	skipnz
  2507  0F35  1903               	goto	l1763
  2508  0F36  2FFA               	xorlw	100^0	; case 100
  2509  0F37  3A64               	skipnz
  2510  0F38  1903               	goto	l1723
  2511  0F39  2F3E               	xorlw	105^100	; case 105
  2512  0F3A  3A0D               	skipnz
  2513  0F3B  1903               	goto	l1723
  2514  0F3C  2F3E               	goto	l1761
  2515  0F3D  2FE6               	opt asmopt_pop
  2516                           
  2517                           	
  2518                           l295:	
  2519  0F3E                     	line	1278
  2520                           	
  2521                           l1723:	
  2522  0F3E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2523                           	movf	(sprintf@ap),w
  2524  0F3E  0826               	movwf	fsr0
  2525  0F3F  0084               	bcf	status, 7	;select IRP bank0
  2526  0F40  1383               	movf	indf,w
  2527  0F41  0800               	movwf	(sprintf@val)
  2528  0F42  00A9               	incf	fsr0,f
  2529  0F43  0A84               	movf	indf,w
  2530  0F44  0800               	movwf	(sprintf@val+1)
  2531  0F45  00AA               	
  2532                           l1725:	
  2533  0F46                     	movlw	low(02h)
  2534  0F46  3002               	movwf	(??_sprintf+0)+0
  2535  0F47  00A3               	movf	(??_sprintf+0)+0,w
  2536  0F48  0823               	addwf	(sprintf@ap),f
  2537  0F49  07A6               	line	1280
  2538                           	
  2539                           l1727:	
  2540  0F4A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2541                           	btfss	(sprintf@val+1),7
  2542  0F4A  1FAA               	goto	u1801
  2543  0F4B  2F4D               	goto	u1800
  2544  0F4C  2F4E               u1801:
  2545  0F4D                     	goto	l1733
  2546  0F4D  2F58               u1800:
  2547  0F4E                     	line	1281
  2548                           	
  2549                           l1729:	
  2550  0F4E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2551                           	movlw	low(03h)
  2552  0F4E  3003               	movwf	(??_sprintf+0)+0
  2553  0F4F  00A3               	movf	(??_sprintf+0)+0,w
  2554  0F50  0823               	iorwf	(sprintf@flag),f
  2555  0F51  04A7               	line	1282
  2556                           	
  2557                           l1731:	
  2558  0F52                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2559                           	comf	(sprintf@val),f
  2560  0F52  09A9               	comf	(sprintf@val+1),f
  2561  0F53  09AA               	incf	(sprintf@val),f
  2562  0F54  0AA9               	skipnz
  2563  0F55  1903               	incf	(sprintf@val+1),f
  2564  0F56  0AAA               	goto	l1733
  2565  0F57  2F58               	line	1283
  2566                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  2567                           	
  2568                           l297:	
  2569  0F58                     	line	1324
  2570                           	
  2571                           l1733:	
  2572  0F58                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2573                           	clrf	(sprintf@c)
  2574  0F58  01AC               	incf	(sprintf@c),f
  2575  0F59  0AAC               	
  2576                           l1735:	
  2577  0F5A                     		movlw	5
  2578  0F5A  3005               	xorwf	((sprintf@c)),w
  2579  0F5B  062C               	btfss	status,2
  2580  0F5C  1D03               	goto	u1811
  2581  0F5D  2F5F               	goto	u1810
  2582  0F5E  2F60               u1811:
  2583  0F5F                     	goto	l1739
  2584  0F5F  2F62               u1810:
  2585  0F60                     	goto	l1745
  2586  0F60  2F8A               	
  2587                           l1737:	
  2588  0F61                     	goto	l1745
  2589  0F61  2F8A               	
  2590                           l298:	
  2591  0F62                     	line	1325
  2592                           	
  2593                           l1739:	
  2594  0F62                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2595                           	movf	(sprintf@c),w
  2596  0F62  082C               	movwf	(??_sprintf+0)+0
  2597  0F63  00A3               	addwf	(??_sprintf+0)+0,w
  2598  0F64  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2599  0F65  3E01               	movwf	fsr0
  2600  0F66  0084               	fcall	stringdir
  2601  0F67  120A  158A  200A  120A  158A  	movwf	(??_sprintf+1)+0
  2602  0F6C  00A4               	fcall	stringdir
  2603  0F6D  120A  158A  200A  120A  158A  	movwf	(??_sprintf+1)+0+1
  2604  0F72  00A5               	movf	1+(??_sprintf+1)+0,w
  2605  0F73  0825               	subwf	(sprintf@val+1),w
  2606  0F74  022A               	skipz
  2607  0F75  1D03               	goto	u1825
  2608  0F76  2F79               	movf	0+(??_sprintf+1)+0,w
  2609  0F77  0824               	subwf	(sprintf@val),w
  2610  0F78  0229               u1825:
  2611  0F79                     	skipnc
  2612  0F79  1803               	goto	u1821
  2613  0F7A  2F7C               	goto	u1820
  2614  0F7B  2F7D               u1821:
  2615  0F7C                     	goto	l1743
  2616  0F7C  2F7F               u1820:
  2617  0F7D                     	goto	l1745
  2618  0F7D  2F8A               	line	1326
  2619                           	
  2620                           l1741:	
  2621  0F7E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2622                           	goto	l1745
  2623  0F7E  2F8A               	
  2624                           l300:	
  2625  0F7F                     	
  2626                           l1743:	
  2627  0F7F                     	movlw	low(01h)
  2628  0F7F  3001               	movwf	(??_sprintf+0)+0
  2629  0F80  00A3               	movf	(??_sprintf+0)+0,w
  2630  0F81  0823               	addwf	(sprintf@c),f
  2631  0F82  07AC               		movlw	5
  2632  0F83  3005               	xorwf	((sprintf@c)),w
  2633  0F84  062C               	btfss	status,2
  2634  0F85  1D03               	goto	u1831
  2635  0F86  2F88               	goto	u1830
  2636  0F87  2F89               u1831:
  2637  0F88                     	goto	l1739
  2638  0F88  2F62               u1830:
  2639  0F89                     	goto	l1745
  2640  0F89  2F8A               	
  2641                           l299:	
  2642  0F8A                     	line	1457
  2643                           	
  2644                           l1745:	
  2645  0F8A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  2646                           	movf	(sprintf@flag),w
  2647  0F8A  0827               	andlw	03h
  2648  0F8B  3903               	btfsc	status,2
  2649  0F8C  1903               	goto	u1841
  2650  0F8D  2F8F               	goto	u1840
  2651  0F8E  2F90               u1841:
  2652  0F8F                     	goto	l1751
  2653  0F8F  2F9C               u1840:
  2654  0F90                     	line	1458
  2655                           	
  2656                           l1747:	
  2657  0F90                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  2658                           	movlw	low(02Dh)
  2659  0F90  302D               	movwf	(??_sprintf+0)+0
  2660  0F91  00A3               	movf	(sprintf@sp),w
  2661  0F92  082B               	movwf	fsr0
  2662  0F93  0084               	movf	(??_sprintf+0)+0,w
  2663  0F94  0823               	bcf	status, 7	;select IRP bank0
  2664  0F95  1383               	movwf	indf
  2665  0F96  0080               	
  2666                           l1749:	
  2667  0F97                     	movlw	low(01h)
  2668  0F97  3001               	movwf	(??_sprintf+0)+0
  2669  0F98  00A3               	movf	(??_sprintf+0)+0,w
  2670  0F99  0823               	addwf	(sprintf@sp),f
  2671  0F9A  07AB               	goto	l1751
  2672  0F9B  2F9C               	
  2673                           l301:	
  2674  0F9C                     	line	1491
  2675                           	
  2676                           l1751:	
  2677  0F9C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  2678                           	movf	(sprintf@c),w
  2679  0F9C  082C               	movwf	(??_sprintf+0)+0
  2680  0F9D  00A3               	movf	(??_sprintf+0)+0,w
  2681  0F9E  0823               	movwf	(sprintf@prec)
  2682  0F9F  00A8               	line	1493
  2683                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2684                           	goto	l1759
  2685  0FA0  2FDB               	
  2686                           l303:	
  2687  0FA1                     	line	1508
  2688                           	
  2689                           l1753:	
  2690  0FA1                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  2691                           	movlw	0Ah
  2692  0FA1  300A               	movwf	(___lwmod@divisor)
  2693  0FA2  00F8               	movlw	0
  2694  0FA3  3000               	movwf	((___lwmod@divisor))+1
  2695  0FA4  00F9               	movf	(sprintf@prec),w
  2696  0FA5  0828               	movwf	(??_sprintf+0)+0
  2697  0FA6  00A3               	addwf	(??_sprintf+0)+0,w
  2698  0FA7  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2699  0FA8  3E01               	movwf	fsr0
  2700  0FA9  0084               	fcall	stringdir
  2701  0FAA  120A  158A  200A  120A  158A  	movwf	(___lwdiv@divisor)
  2702  0FAF  00F0               	fcall	stringdir
  2703  0FB0  120A  158A  200A  120A  158A  	movwf	(___lwdiv@divisor+1)
  2704  0FB5  00F1               	movf	(sprintf@val+1),w
  2705  0FB6  082A               	movwf	(___lwdiv@dividend+1)
  2706  0FB7  00F3               	movf	(sprintf@val),w
  2707  0FB8  0829               	movwf	(___lwdiv@dividend)
  2708  0FB9  00F2               	fcall	___lwdiv
  2709  0FBA  120A  158A  2419  120A  158A  	movf	(1+(?___lwdiv)),w
  2710  0FBF  0871               	movwf	(___lwmod@dividend+1)
  2711  0FC0  00FB               	movf	(0+(?___lwdiv)),w
  2712  0FC1  0870               	movwf	(___lwmod@dividend)
  2713  0FC2  00FA               	fcall	___lwmod
  2714  0FC3  120A  158A  2394  120A  158A  	movf	(0+(?___lwmod)),w
  2715  0FC8  0878               	addlw	030h
  2716  0FC9  3E30               	bcf	status, 5	;RP0=0, select bank0
  2717  0FCA  1283               	bcf	status, 6	;RP1=0, select bank0
  2718  0FCB  1303               	movwf	(??_sprintf+1)+0
  2719  0FCC  00A4               	movf	(??_sprintf+1)+0,w
  2720  0FCD  0824               	movwf	(sprintf@c)
  2721  0FCE  00AC               	line	1543
  2722                           	
  2723                           l1755:	
  2724  0FCF                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  2725                           	movf	(sprintf@c),w
  2726  0FCF  082C               	movwf	(??_sprintf+0)+0
  2727  0FD0  00A3               	movf	(sprintf@sp),w
  2728  0FD1  082B               	movwf	fsr0
  2729  0FD2  0084               	movf	(??_sprintf+0)+0,w
  2730  0FD3  0823               	bcf	status, 7	;select IRP bank0
  2731  0FD4  1383               	movwf	indf
  2732  0FD5  0080               	
  2733                           l1757:	
  2734  0FD6                     	movlw	low(01h)
  2735  0FD6  3001               	movwf	(??_sprintf+0)+0
  2736  0FD7  00A3               	movf	(??_sprintf+0)+0,w
  2737  0FD8  0823               	addwf	(sprintf@sp),f
  2738  0FD9  07AB               	goto	l1759
  2739  0FDA  2FDB               	line	1544
  2740                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2741                           	
  2742                           l302:	
  2743  0FDB                     	line	1493
  2744                           	
  2745                           l1759:	
  2746  0FDB                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2747                           	movlw	low(-1)
  2748  0FDB  30FF               	movwf	(??_sprintf+0)+0
  2749  0FDC  00A3               	movf	(??_sprintf+0)+0,w
  2750  0FDD  0823               	addwf	(sprintf@prec),f
  2751  0FDE  07A8               		incf	(((sprintf@prec))),w
  2752  0FDF  0A28               	btfss	status,2
  2753  0FE0  1D03               	goto	u1851
  2754  0FE1  2FE3               	goto	u1850
  2755  0FE2  2FE4               u1851:
  2756  0FE3                     	goto	l1753
  2757  0FE3  2FA1               u1850:
  2758  0FE4                     	goto	l1761
  2759  0FE4  2FE6               	
  2760                           l304:	
  2761  0FE5                     	goto	l1761
  2762  0FE5  2FE6               	line	1552
  2763                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2764                           	
  2765                           l287:	
  2766  0FE6                     	line	548
  2767                           	
  2768                           l1761:	
  2769  0FE6                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2770                           	movlw	01h
  2771  0FE6  3001               	addwf	(sprintf@f),f
  2772  0FE7  07A0               	movlw	-01h
  2773  0FE8  30FF               	addwf	(sprintf@f),w
  2774  0FE9  0720               	movwf	fsr0
  2775  0FEA  0084               	fcall	stringdir
  2776  0FEB  120A  158A  200A  120A  158A  	movwf	(??_sprintf+0)+0
  2777  0FF0  00A3               	movf	(??_sprintf+0)+0,w
  2778  0FF1  0823               	movwf	(sprintf@c)
  2779  0FF2  00AC               	movf	(((sprintf@c))),w
  2780  0FF3  082C               	btfss	status,2
  2781  0FF4  1D03               	goto	u1861
  2782  0FF5  2FF7               	goto	u1860
  2783  0FF6  2FF8               u1861:
  2784  0FF7                     	goto	l1711
  2785  0FF7  2F08               u1860:
  2786  0FF8                     	goto	l1763
  2787  0FF8  2FFA               	
  2788                           l305:	
  2789  0FF9                     	goto	l1763
  2790  0FF9  2FFA               	line	1554
  2791                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  2792                           	
  2793                           l292:	
  2794  0FFA                     	line	1557
  2795                           	
  2796                           l1763:	
  2797  0FFA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  2798                           	movf	(sprintf@sp),w
  2799  0FFA  082B               	movwf	fsr0
  2800  0FFB  0084               	bcf	status, 7	;select IRP bank0
  2801  0FFC  1383               	clrf	indf
  2802  0FFD  0180               	goto	l306
  2803  0FFE  2FFF               	line	1559
  2804                           	
  2805                           l1765:	
  2806  0FFF                     	line	1560
  2807                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  2808                           	
  2809                           l306:	
  2810  0FFF                     	return
  2811  0FFF  0008               	opt stack 0
  2812                           GLOBAL	__end_of_sprintf
  2813                           	__end_of_sprintf:
  2814  1000                     	signat	_sprintf,4698
  2815                           	global	___lwmod
  2816                           
  2817 ;; *************** function ___lwmod *****************
  2818 ;; Defined at:
  2819 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2820 ;; Parameters:    Size  Location     Type
  2821 ;;  divisor         2    8[COMMON] unsigned int 
  2822 ;;  dividend        2   10[COMMON] unsigned int 
  2823 ;; Auto vars:     Size  Location     Type
  2824 ;;  counter         1   13[COMMON] unsigned char 
  2825 ;; Return value:  Size  Location     Type
  2826 ;;                  2    8[COMMON] unsigned int 
  2827 ;; Registers used:
  2828 ;;		wreg, status,2, status,0
  2829 ;; Tracked objects:
  2830 ;;		On entry : 0/0
  2831 ;;		On exit  : 0/0
  2832 ;;		Unchanged: 0/0
  2833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2834 ;;      Params:         4       0       0       0       0
  2835 ;;      Locals:         1       0       0       0       0
  2836 ;;      Temps:          1       0       0       0       0
  2837 ;;      Totals:         6       0       0       0       0
  2838 ;;Total ram usage:        6 bytes
  2839 ;; Hardware stack levels used:    1
  2840 ;; This function calls:
  2841 ;;		Nothing
  2842 ;; This function is called by:
  2843 ;;		_sprintf
  2844 ;; This function uses a non-reentrant model
  2845 ;;
  2846                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2847                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2848                           	line	5
  2849                           global __ptext4
  2850                           __ptext4:	;psect for function ___lwmod
  2851  0B94                     psect	text4
  2852                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2853                           	line	5
  2854                           	global	__size_of___lwmod
  2855                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2856  0041                     	
  2857                           ___lwmod:	
  2858  0B94                     ;incstack = 0
  2859                           	opt	stack 5
  2860                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2861                           	line	12
  2862                           	
  2863                           l1671:	
  2864  0B94                     	movf	((___lwmod@divisor)),w
  2865  0B94  0878               iorwf	((___lwmod@divisor+1)),w
  2866  0B95  0479               	btfsc	status,2
  2867  0B96  1903               	goto	u1701
  2868  0B97  2B99               	goto	u1700
  2869  0B98  2B9A               u1701:
  2870  0B99                     	goto	l1689
  2871  0B99  2BCF               u1700:
  2872  0B9A                     	line	13
  2873                           	
  2874                           l1673:	
  2875  0B9A                     	clrf	(___lwmod@counter)
  2876  0B9A  01FD               	incf	(___lwmod@counter),f
  2877  0B9B  0AFD               	line	14
  2878                           	goto	l1679
  2879  0B9C  2BA9               	
  2880                           l587:	
  2881  0B9D                     	line	15
  2882                           	
  2883                           l1675:	
  2884  0B9D                     	movlw	01h
  2885  0B9D  3001               	
  2886                           u1715:
  2887  0B9E                     	clrc
  2888  0B9E  1003               	rlf	(___lwmod@divisor),f
  2889  0B9F  0DF8               	rlf	(___lwmod@divisor+1),f
  2890  0BA0  0DF9               	addlw	-1
  2891  0BA1  3EFF               	skipz
  2892  0BA2  1D03               	goto	u1715
  2893  0BA3  2B9E               	line	16
  2894                           	
  2895                           l1677:	
  2896  0BA4                     	movlw	low(01h)
  2897  0BA4  3001               	movwf	(??___lwmod+0)+0
  2898  0BA5  00FC               	movf	(??___lwmod+0)+0,w
  2899  0BA6  087C               	addwf	(___lwmod@counter),f
  2900  0BA7  07FD               	goto	l1679
  2901  0BA8  2BA9               	line	17
  2902                           	
  2903                           l586:	
  2904  0BA9                     	line	14
  2905                           	
  2906                           l1679:	
  2907  0BA9                     	btfss	(___lwmod@divisor+1),(15)&7
  2908  0BA9  1FF9               	goto	u1721
  2909  0BAA  2BAC               	goto	u1720
  2910  0BAB  2BAD               u1721:
  2911  0BAC                     	goto	l1675
  2912  0BAC  2B9D               u1720:
  2913  0BAD                     	goto	l1681
  2914  0BAD  2BAF               	
  2915                           l588:	
  2916  0BAE                     	goto	l1681
  2917  0BAE  2BAF               	line	18
  2918                           	
  2919                           l589:	
  2920  0BAF                     	line	19
  2921                           	
  2922                           l1681:	
  2923  0BAF                     	movf	(___lwmod@divisor+1),w
  2924  0BAF  0879               	subwf	(___lwmod@dividend+1),w
  2925  0BB0  027B               	skipz
  2926  0BB1  1D03               	goto	u1735
  2927  0BB2  2BB5               	movf	(___lwmod@divisor),w
  2928  0BB3  0878               	subwf	(___lwmod@dividend),w
  2929  0BB4  027A               u1735:
  2930  0BB5                     	skipc
  2931  0BB5  1C03               	goto	u1731
  2932  0BB6  2BB8               	goto	u1730
  2933  0BB7  2BB9               u1731:
  2934  0BB8                     	goto	l1685
  2935  0BB8  2BC0               u1730:
  2936  0BB9                     	line	20
  2937                           	
  2938                           l1683:	
  2939  0BB9                     	movf	(___lwmod@divisor),w
  2940  0BB9  0878               	subwf	(___lwmod@dividend),f
  2941  0BBA  02FA               	movf	(___lwmod@divisor+1),w
  2942  0BBB  0879               	skipc
  2943  0BBC  1C03               	decf	(___lwmod@dividend+1),f
  2944  0BBD  03FB               	subwf	(___lwmod@dividend+1),f
  2945  0BBE  02FB               	goto	l1685
  2946  0BBF  2BC0               	
  2947                           l590:	
  2948  0BC0                     	line	21
  2949                           	
  2950                           l1685:	
  2951  0BC0                     	movlw	01h
  2952  0BC0  3001               	
  2953                           u1745:
  2954  0BC1                     	clrc
  2955  0BC1  1003               	rrf	(___lwmod@divisor+1),f
  2956  0BC2  0CF9               	rrf	(___lwmod@divisor),f
  2957  0BC3  0CF8               	addlw	-1
  2958  0BC4  3EFF               	skipz
  2959  0BC5  1D03               	goto	u1745
  2960  0BC6  2BC1               	line	22
  2961                           	
  2962                           l1687:	
  2963  0BC7                     	movlw	01h
  2964  0BC7  3001               	subwf	(___lwmod@counter),f
  2965  0BC8  02FD               	btfss	status,2
  2966  0BC9  1D03               	goto	u1751
  2967  0BCA  2BCC               	goto	u1750
  2968  0BCB  2BCD               u1751:
  2969  0BCC                     	goto	l1681
  2970  0BCC  2BAF               u1750:
  2971  0BCD                     	goto	l1689
  2972  0BCD  2BCF               	
  2973                           l591:	
  2974  0BCE                     	goto	l1689
  2975  0BCE  2BCF               	line	23
  2976                           	
  2977                           l585:	
  2978  0BCF                     	line	24
  2979                           	
  2980                           l1689:	
  2981  0BCF                     	movf	(___lwmod@dividend+1),w
  2982  0BCF  087B               	movwf	(?___lwmod+1)
  2983  0BD0  00F9               	movf	(___lwmod@dividend),w
  2984  0BD1  087A               	movwf	(?___lwmod)
  2985  0BD2  00F8               	goto	l592
  2986  0BD3  2BD4               	
  2987                           l1691:	
  2988  0BD4                     	line	25
  2989                           	
  2990                           l592:	
  2991  0BD4                     	return
  2992  0BD4  0008               	opt stack 0
  2993                           GLOBAL	__end_of___lwmod
  2994                           	__end_of___lwmod:
  2995  0BD5                     	signat	___lwmod,8314
  2996                           	global	___lwdiv
  2997                           
  2998 ;; *************** function ___lwdiv *****************
  2999 ;; Defined at:
  3000 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3001 ;; Parameters:    Size  Location     Type
  3002 ;;  divisor         2    0[COMMON] unsigned int 
  3003 ;;  dividend        2    2[COMMON] unsigned int 
  3004 ;; Auto vars:     Size  Location     Type
  3005 ;;  quotient        2    5[COMMON] unsigned int 
  3006 ;;  counter         1    7[COMMON] unsigned char 
  3007 ;; Return value:  Size  Location     Type
  3008 ;;                  2    0[COMMON] unsigned int 
  3009 ;; Registers used:
  3010 ;;		wreg, status,2, status,0
  3011 ;; Tracked objects:
  3012 ;;		On entry : 0/0
  3013 ;;		On exit  : 0/0
  3014 ;;		Unchanged: 0/0
  3015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3016 ;;      Params:         4       0       0       0       0
  3017 ;;      Locals:         3       0       0       0       0
  3018 ;;      Temps:          1       0       0       0       0
  3019 ;;      Totals:         8       0       0       0       0
  3020 ;;Total ram usage:        8 bytes
  3021 ;; Hardware stack levels used:    1
  3022 ;; This function calls:
  3023 ;;		Nothing
  3024 ;; This function is called by:
  3025 ;;		_sprintf
  3026 ;; This function uses a non-reentrant model
  3027 ;;
  3028                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3029                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3030                           	line	5
  3031                           global __ptext5
  3032                           __ptext5:	;psect for function ___lwdiv
  3033  0C19                     psect	text5
  3034                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3035                           	line	5
  3036                           	global	__size_of___lwdiv
  3037                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3038  004B                     	
  3039                           ___lwdiv:	
  3040  0C19                     ;incstack = 0
  3041                           	opt	stack 5
  3042                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3043                           	line	13
  3044                           	
  3045                           l1645:	
  3046  0C19                     	clrf	(___lwdiv@quotient)
  3047  0C19  01F5               	clrf	(___lwdiv@quotient+1)
  3048  0C1A  01F6               	line	14
  3049                           	
  3050                           l1647:	
  3051  0C1B                     	movf	((___lwdiv@divisor)),w
  3052  0C1B  0870               iorwf	((___lwdiv@divisor+1)),w
  3053  0C1C  0471               	btfsc	status,2
  3054  0C1D  1903               	goto	u1631
  3055  0C1E  2C20               	goto	u1630
  3056  0C1F  2C21               u1631:
  3057  0C20                     	goto	l1667
  3058  0C20  2C5E               u1630:
  3059  0C21                     	line	15
  3060                           	
  3061                           l1649:	
  3062  0C21                     	clrf	(___lwdiv@counter)
  3063  0C21  01F7               	incf	(___lwdiv@counter),f
  3064  0C22  0AF7               	line	16
  3065                           	goto	l1655
  3066  0C23  2C30               	
  3067                           l577:	
  3068  0C24                     	line	17
  3069                           	
  3070                           l1651:	
  3071  0C24                     	movlw	01h
  3072  0C24  3001               	
  3073                           u1645:
  3074  0C25                     	clrc
  3075  0C25  1003               	rlf	(___lwdiv@divisor),f
  3076  0C26  0DF0               	rlf	(___lwdiv@divisor+1),f
  3077  0C27  0DF1               	addlw	-1
  3078  0C28  3EFF               	skipz
  3079  0C29  1D03               	goto	u1645
  3080  0C2A  2C25               	line	18
  3081                           	
  3082                           l1653:	
  3083  0C2B                     	movlw	low(01h)
  3084  0C2B  3001               	movwf	(??___lwdiv+0)+0
  3085  0C2C  00F4               	movf	(??___lwdiv+0)+0,w
  3086  0C2D  0874               	addwf	(___lwdiv@counter),f
  3087  0C2E  07F7               	goto	l1655
  3088  0C2F  2C30               	line	19
  3089                           	
  3090                           l576:	
  3091  0C30                     	line	16
  3092                           	
  3093                           l1655:	
  3094  0C30                     	btfss	(___lwdiv@divisor+1),(15)&7
  3095  0C30  1FF1               	goto	u1651
  3096  0C31  2C33               	goto	u1650
  3097  0C32  2C34               u1651:
  3098  0C33                     	goto	l1651
  3099  0C33  2C24               u1650:
  3100  0C34                     	goto	l1657
  3101  0C34  2C36               	
  3102                           l578:	
  3103  0C35                     	goto	l1657
  3104  0C35  2C36               	line	20
  3105                           	
  3106                           l579:	
  3107  0C36                     	line	21
  3108                           	
  3109                           l1657:	
  3110  0C36                     	movlw	01h
  3111  0C36  3001               	
  3112                           u1665:
  3113  0C37                     	clrc
  3114  0C37  1003               	rlf	(___lwdiv@quotient),f
  3115  0C38  0DF5               	rlf	(___lwdiv@quotient+1),f
  3116  0C39  0DF6               	addlw	-1
  3117  0C3A  3EFF               	skipz
  3118  0C3B  1D03               	goto	u1665
  3119  0C3C  2C37               	line	22
  3120                           	movf	(___lwdiv@divisor+1),w
  3121  0C3D  0871               	subwf	(___lwdiv@dividend+1),w
  3122  0C3E  0273               	skipz
  3123  0C3F  1D03               	goto	u1675
  3124  0C40  2C43               	movf	(___lwdiv@divisor),w
  3125  0C41  0870               	subwf	(___lwdiv@dividend),w
  3126  0C42  0272               u1675:
  3127  0C43                     	skipc
  3128  0C43  1C03               	goto	u1671
  3129  0C44  2C46               	goto	u1670
  3130  0C45  2C47               u1671:
  3131  0C46                     	goto	l1663
  3132  0C46  2C4F               u1670:
  3133  0C47                     	line	23
  3134                           	
  3135                           l1659:	
  3136  0C47                     	movf	(___lwdiv@divisor),w
  3137  0C47  0870               	subwf	(___lwdiv@dividend),f
  3138  0C48  02F2               	movf	(___lwdiv@divisor+1),w
  3139  0C49  0871               	skipc
  3140  0C4A  1C03               	decf	(___lwdiv@dividend+1),f
  3141  0C4B  03F3               	subwf	(___lwdiv@dividend+1),f
  3142  0C4C  02F3               	line	24
  3143                           	
  3144                           l1661:	
  3145  0C4D                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3146  0C4D  1475               	goto	l1663
  3147  0C4E  2C4F               	line	25
  3148                           	
  3149                           l580:	
  3150  0C4F                     	line	26
  3151                           	
  3152                           l1663:	
  3153  0C4F                     	movlw	01h
  3154  0C4F  3001               	
  3155                           u1685:
  3156  0C50                     	clrc
  3157  0C50  1003               	rrf	(___lwdiv@divisor+1),f
  3158  0C51  0CF1               	rrf	(___lwdiv@divisor),f
  3159  0C52  0CF0               	addlw	-1
  3160  0C53  3EFF               	skipz
  3161  0C54  1D03               	goto	u1685
  3162  0C55  2C50               	line	27
  3163                           	
  3164                           l1665:	
  3165  0C56                     	movlw	01h
  3166  0C56  3001               	subwf	(___lwdiv@counter),f
  3167  0C57  02F7               	btfss	status,2
  3168  0C58  1D03               	goto	u1691
  3169  0C59  2C5B               	goto	u1690
  3170  0C5A  2C5C               u1691:
  3171  0C5B                     	goto	l1657
  3172  0C5B  2C36               u1690:
  3173  0C5C                     	goto	l1667
  3174  0C5C  2C5E               	
  3175                           l581:	
  3176  0C5D                     	goto	l1667
  3177  0C5D  2C5E               	line	28
  3178                           	
  3179                           l575:	
  3180  0C5E                     	line	29
  3181                           	
  3182                           l1667:	
  3183  0C5E                     	movf	(___lwdiv@quotient+1),w
  3184  0C5E  0876               	movwf	(?___lwdiv+1)
  3185  0C5F  00F1               	movf	(___lwdiv@quotient),w
  3186  0C60  0875               	movwf	(?___lwdiv)
  3187  0C61  00F0               	goto	l582
  3188  0C62  2C63               	
  3189                           l1669:	
  3190  0C63                     	line	30
  3191                           	
  3192                           l582:	
  3193  0C63                     	return
  3194  0C63  0008               	opt stack 0
  3195                           GLOBAL	__end_of___lwdiv
  3196                           	__end_of___lwdiv:
  3197  0C64                     	signat	___lwdiv,8314
  3198                           	global	_setup
  3199                           
  3200 ;; *************** function _setup *****************
  3201 ;; Defined at:
  3202 ;;		line 104 in file "mainM.c"
  3203 ;; Parameters:    Size  Location     Type
  3204 ;;		None
  3205 ;; Auto vars:     Size  Location     Type
  3206 ;;		None
  3207 ;; Return value:  Size  Location     Type
  3208 ;;                  1    wreg      void 
  3209 ;; Registers used:
  3210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3211 ;; Tracked objects:
  3212 ;;		On entry : 0/0
  3213 ;;		On exit  : 0/0
  3214 ;;		Unchanged: 0/0
  3215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3216 ;;      Params:         0       0       0       0       0
  3217 ;;      Locals:         0       0       0       0       0
  3218 ;;      Temps:          0       1       0       0       0
  3219 ;;      Totals:         0       1       0       0       0
  3220 ;;Total ram usage:        1 bytes
  3221 ;; Hardware stack levels used:    1
  3222 ;; Hardware stack levels required when called:    2
  3223 ;; This function calls:
  3224 ;;		_I2C_Master_Init
  3225 ;;		_clcLCD
  3226 ;;		_initLCD
  3227 ;;		_setCursorLCD
  3228 ;;		_writeStrLCD
  3229 ;; This function is called by:
  3230 ;;		_main
  3231 ;; This function uses a non-reentrant model
  3232 ;;
  3233                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3234                           	file	"mainM.c"
  3235                           	line	104
  3236                           global __ptext6
  3237                           __ptext6:	;psect for function _setup
  3238  0004                     psect	text6
  3239                           	file	"mainM.c"
  3240                           	line	104
  3241                           	global	__size_of_setup
  3242                           	__size_of_setup	equ	__end_of_setup-_setup
  3243  005F                     	
  3244                           _setup:	
  3245  0004                     ;incstack = 0
  3246                           	opt	stack 5
  3247                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3248                           	line	106
  3249                           	
  3250                           l1909:	
  3251  0004                     ;mainM.c: 106:     ANSEL = 0;
  3252                           	bsf	status, 5	;RP0=1, select bank3
  3253  0004  1683               	bsf	status, 6	;RP1=1, select bank3
  3254  0005  1703               	clrf	(392)^0180h	;volatile
  3255  0006  0188               	line	107
  3256                           ;mainM.c: 107:     ANSELH = 0;
  3257                           	clrf	(393)^0180h	;volatile
  3258  0007  0189               	line	108
  3259                           ;mainM.c: 108:     TRISB = 0;
  3260                           	bsf	status, 5	;RP0=1, select bank1
  3261  0008  1683               	bcf	status, 6	;RP1=0, select bank1
  3262  0009  1303               	clrf	(134)^080h	;volatile
  3263  000A  0186               	line	109
  3264                           ;mainM.c: 109:     TRISD = 0;
  3265                           	clrf	(136)^080h	;volatile
  3266  000B  0188               	line	110
  3267                           ;mainM.c: 110:     PORTB = 0;
  3268                           	bcf	status, 5	;RP0=0, select bank0
  3269  000C  1283               	bcf	status, 6	;RP1=0, select bank0
  3270  000D  1303               	clrf	(6)	;volatile
  3271  000E  0186               	line	111
  3272                           ;mainM.c: 111:     PORTD = 0;
  3273                           	clrf	(8)	;volatile
  3274  000F  0188               	line	112
  3275                           	
  3276                           l1911:	
  3277  0010                     ;mainM.c: 112:     I2C_Master_Init(100000);
  3278                           	movlw	0
  3279  0010  3000               	movwf	(I2C_Master_Init@c+3)
  3280  0011  00A3               	movlw	01h
  3281  0012  3001               	movwf	(I2C_Master_Init@c+2)
  3282  0013  00A2               	movlw	086h
  3283  0014  3086               	movwf	(I2C_Master_Init@c+1)
  3284  0015  00A1               	movlw	0A0h
  3285  0016  30A0               	movwf	(I2C_Master_Init@c)
  3286  0017  00A0               
  3287                           	fcall	_I2C_Master_Init
  3288  0018  120A  158A  2322  120A  118A  	line	114
  3289                           	
  3290                           l1913:	
  3291  001D                     ;mainM.c: 114:     initLCD();
  3292                           	fcall	_initLCD
  3293  001D  120A  158A  235A  120A  118A  	line	115
  3294                           	
  3295                           l1915:	
  3296  0022                     ;mainM.c: 115:     clcLCD();
  3297                           	fcall	_clcLCD
  3298  0022  120A  158A  2222  120A  118A  	line	118
  3299                           	
  3300                           l1917:	
  3301  0027                     ;mainM.c: 118:     setCursorLCD(1, 1);
  3302                           	clrf	(setCursorLCD@x)
  3303  0027  01F3               	incf	(setCursorLCD@x),f
  3304  0028  0AF3               	movlw	low(01h)
  3305  0029  3001               	fcall	_setCursorLCD
  3306  002A  120A  158A  228E  120A  118A  	line	119
  3307                           	
  3308                           l1919:	
  3309  002F                     ;mainM.c: 119:     writeStrLCD("S1");
  3310                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3311  002F  300E               	movwf	(writeStrLCD@string)
  3312  0030  00F2               	movlw	80h
  3313  0031  3080               	movwf	(writeStrLCD@string+1)
  3314  0032  00F3               	fcall	_writeStrLCD
  3315  0033  120A  158A  23D5  120A  118A  	line	120
  3316                           	
  3317                           l1921:	
  3318  0038                     ;mainM.c: 120:     setCursorLCD(1, 7);
  3319                           	movlw	low(07h)
  3320  0038  3007               	bcf	status, 5	;RP0=0, select bank0
  3321  0039  1283               	bcf	status, 6	;RP1=0, select bank0
  3322  003A  1303               	movwf	(??_setup+0)+0
  3323  003B  00A8               	movf	(??_setup+0)+0,w
  3324  003C  0828               	movwf	(setCursorLCD@x)
  3325  003D  00F3               	movlw	low(01h)
  3326  003E  3001               	fcall	_setCursorLCD
  3327  003F  120A  158A  228E  120A  118A  	line	121
  3328                           	
  3329                           l1923:	
  3330  0044                     ;mainM.c: 121:     writeStrLCD("S2");
  3331                           	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3332  0044  3011               	movwf	(writeStrLCD@string)
  3333  0045  00F2               	movlw	80h
  3334  0046  3080               	movwf	(writeStrLCD@string+1)
  3335  0047  00F3               	fcall	_writeStrLCD
  3336  0048  120A  158A  23D5  120A  118A  	line	122
  3337                           	
  3338                           l1925:	
  3339  004D                     ;mainM.c: 122:     setCursorLCD(1, 13);
  3340                           	movlw	low(0Dh)
  3341  004D  300D               	bcf	status, 5	;RP0=0, select bank0
  3342  004E  1283               	bcf	status, 6	;RP1=0, select bank0
  3343  004F  1303               	movwf	(??_setup+0)+0
  3344  0050  00A8               	movf	(??_setup+0)+0,w
  3345  0051  0828               	movwf	(setCursorLCD@x)
  3346  0052  00F3               	movlw	low(01h)
  3347  0053  3001               	fcall	_setCursorLCD
  3348  0054  120A  158A  228E  120A  118A  	line	123
  3349                           	
  3350                           l1927:	
  3351  0059                     ;mainM.c: 123:     writeStrLCD("S3");
  3352                           	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  3353  0059  3014               	movwf	(writeStrLCD@string)
  3354  005A  00F2               	movlw	80h
  3355  005B  3080               	movwf	(writeStrLCD@string+1)
  3356  005C  00F3               	fcall	_writeStrLCD
  3357  005D  120A  158A  23D5  120A  118A  	line	124
  3358                           	
  3359                           l196:	
  3360  0062                     	return
  3361  0062  0008               	opt stack 0
  3362                           GLOBAL	__end_of_setup
  3363                           	__end_of_setup:
  3364  0063                     	signat	_setup,89
  3365                           	global	_writeStrLCD
  3366                           
  3367 ;; *************** function _writeStrLCD *****************
  3368 ;; Defined at:
  3369 ;;		line 21 in file "LCD.c"
  3370 ;; Parameters:    Size  Location     Type
  3371 ;;  string          2    2[COMMON] PTR unsigned char 
  3372 ;;		 -> STR_7(3), STR_6(3), STR_5(3), STR_4(3), 
  3373 ;;		 -> STR_3(3), writeIntLCD16@buffer(8), writeIntLCD@buffer(4), 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  cont            2    7[COMMON] int 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;                  1    wreg      void 
  3378 ;; Registers used:
  3379 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3385 ;;      Params:         2       0       0       0       0
  3386 ;;      Locals:         2       0       0       0       0
  3387 ;;      Temps:          3       0       0       0       0
  3388 ;;      Totals:         7       0       0       0       0
  3389 ;;Total ram usage:        7 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    1
  3392 ;; This function calls:
  3393 ;;		_writeCharLCD
  3394 ;; This function is called by:
  3395 ;;		_writeIntLCD
  3396 ;;		_main
  3397 ;;		_setup
  3398 ;;		_writeIntLCD16
  3399 ;; This function uses a non-reentrant model
  3400 ;;
  3401                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3402                           	file	"LCD.c"
  3403                           	line	21
  3404                           global __ptext7
  3405                           __ptext7:	;psect for function _writeStrLCD
  3406  0BD5                     psect	text7
  3407                           	file	"LCD.c"
  3408                           	line	21
  3409                           	global	__size_of_writeStrLCD
  3410                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  3411  0044                     	
  3412                           _writeStrLCD:	
  3413  0BD5                     ;incstack = 0
  3414                           	opt	stack 6
  3415                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3416                           	line	23
  3417                           	
  3418                           l1701:	
  3419  0BD5                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  3420                           	clrf	(writeStrLCD@cont)
  3421  0BD5  01F7               	clrf	(writeStrLCD@cont+1)
  3422  0BD6  01F8               	goto	l1707
  3423  0BD7  2BFB               	
  3424                           l83:	
  3425  0BD8                     	line	24
  3426                           	
  3427                           l1703:	
  3428  0BD8                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  3429                           	movf	(writeStrLCD@cont),w
  3430  0BD8  0877               	addwf	(writeStrLCD@string),w
  3431  0BD9  0772               	movwf	(??_writeStrLCD+1)+0
  3432  0BDA  00F5               	movf	(writeStrLCD@string+1),w
  3433  0BDB  0873               	movwf	(??_writeStrLCD+0)+0
  3434  0BDC  00F4               	skipnc
  3435  0BDD  1803               	incf	(??_writeStrLCD+0)+0,f
  3436  0BDE  0AF4               	btfss	(writeStrLCD@cont),7
  3437  0BDF  1FF7               	goto	u1760
  3438  0BE0  2BE2               	decf	(??_writeStrLCD+0)+0,f
  3439  0BE1  03F4               u1760:
  3440  0BE2                     	movf	(??_writeStrLCD+0)+0,w
  3441  0BE2  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3442  0BE3  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3443  0BE4  0876               	bcf	status, 5	;RP0=0, select bank0
  3444  0BE5  1283               	bcf	status, 6	;RP1=0, select bank0
  3445  0BE6  1303               	movwf	btemp+1
  3446  0BE7  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3447  0BE8  0875               	movwf	fsr0
  3448  0BE9  0084               	fcall	stringtab
  3449  0BEA  120A  158A  2000  120A  158A  	fcall	_writeCharLCD
  3450  0BEF  120A  158A  226B  120A  158A  	line	25
  3451                           	
  3452                           l1705:	
  3453  0BF4                     ;LCD.c: 25:     }
  3454                           	movlw	01h
  3455  0BF4  3001               	addwf	(writeStrLCD@cont),f
  3456  0BF5  07F7               	skipnc
  3457  0BF6  1803               	incf	(writeStrLCD@cont+1),f
  3458  0BF7  0AF8               	movlw	0
  3459  0BF8  3000               	addwf	(writeStrLCD@cont+1),f
  3460  0BF9  07F8               	goto	l1707
  3461  0BFA  2BFB               	
  3462                           l82:	
  3463  0BFB                     	
  3464                           l1707:	
  3465  0BFB                     	movf	(writeStrLCD@cont),w
  3466  0BFB  0877               	addwf	(writeStrLCD@string),w
  3467  0BFC  0772               	movwf	(??_writeStrLCD+1)+0
  3468  0BFD  00F5               	movf	(writeStrLCD@string+1),w
  3469  0BFE  0873               	movwf	(??_writeStrLCD+0)+0
  3470  0BFF  00F4               	skipnc
  3471  0C00  1803               	incf	(??_writeStrLCD+0)+0,f
  3472  0C01  0AF4               	btfss	(writeStrLCD@cont),7
  3473  0C02  1FF7               	goto	u1770
  3474  0C03  2C05               	decf	(??_writeStrLCD+0)+0,f
  3475  0C04  03F4               u1770:
  3476  0C05                     	movf	(??_writeStrLCD+0)+0,w
  3477  0C05  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3478  0C06  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3479  0C07  0876               	bcf	status, 5	;RP0=0, select bank0
  3480  0C08  1283               	bcf	status, 6	;RP1=0, select bank0
  3481  0C09  1303               	movwf	btemp+1
  3482  0C0A  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3483  0C0B  0875               	movwf	fsr0
  3484  0C0C  0084               	fcall	stringtab
  3485  0C0D  120A  158A  2000  120A  158A  	xorlw	0
  3486  0C12  3A00               	skipz
  3487  0C13  1D03               	goto	u1781
  3488  0C14  2C16               	goto	u1780
  3489  0C15  2C17               u1781:
  3490  0C16                     	goto	l1703
  3491  0C16  2BD8               u1780:
  3492  0C17                     	goto	l85
  3493  0C17  2C18               	
  3494                           l84:	
  3495  0C18                     	line	26
  3496                           	
  3497                           l85:	
  3498  0C18                     	return
  3499  0C18  0008               	opt stack 0
  3500                           GLOBAL	__end_of_writeStrLCD
  3501                           	__end_of_writeStrLCD:
  3502  0C19                     	signat	_writeStrLCD,4217
  3503                           	global	_writeCharLCD
  3504                           
  3505 ;; *************** function _writeCharLCD *****************
  3506 ;; Defined at:
  3507 ;;		line 28 in file "LCD.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;  character       1    wreg     unsigned char 
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  character       1    1[COMMON] unsigned char 
  3512 ;; Return value:  Size  Location     Type
  3513 ;;                  1    wreg      void 
  3514 ;; Registers used:
  3515 ;;		wreg
  3516 ;; Tracked objects:
  3517 ;;		On entry : 0/0
  3518 ;;		On exit  : 0/0
  3519 ;;		Unchanged: 0/0
  3520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3521 ;;      Params:         0       0       0       0       0
  3522 ;;      Locals:         1       0       0       0       0
  3523 ;;      Temps:          1       0       0       0       0
  3524 ;;      Totals:         2       0       0       0       0
  3525 ;;Total ram usage:        2 bytes
  3526 ;; Hardware stack levels used:    1
  3527 ;; This function calls:
  3528 ;;		Nothing
  3529 ;; This function is called by:
  3530 ;;		_writeStrLCD
  3531 ;;		_writeFloat
  3532 ;;		_main
  3533 ;; This function uses a non-reentrant model
  3534 ;;
  3535                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3536                           	line	28
  3537                           global __ptext8
  3538                           __ptext8:	;psect for function _writeCharLCD
  3539  0A6B                     psect	text8
  3540                           	file	"LCD.c"
  3541                           	line	28
  3542                           	global	__size_of_writeCharLCD
  3543                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  3544  000F                     	
  3545                           _writeCharLCD:	
  3546  0A6B                     ;incstack = 0
  3547                           	opt	stack 6
  3548                           ; Regs used in _writeCharLCD: [wreg]
  3549                           ;writeCharLCD@character stored from wreg
  3550                           	movwf	(writeCharLCD@character)
  3551  0A6B  00F1               	line	29
  3552                           	
  3553                           l1637:	
  3554  0A6C                     ;LCD.c: 29:    RD0 = 1;
  3555                           	bcf	status, 5	;RP0=0, select bank0
  3556  0A6C  1283               	bcf	status, 6	;RP1=0, select bank0
  3557  0A6D  1303               	bsf	(64/8),(64)&7	;volatile
  3558  0A6E  1408               	line	30
  3559                           	
  3560                           l1639:	
  3561  0A6F                     ;LCD.c: 30:    PORTB = character;
  3562                           	movf	(writeCharLCD@character),w
  3563  0A6F  0871               	movwf	(6)	;volatile
  3564  0A70  0086               	line	31
  3565                           	
  3566                           l1641:	
  3567  0A71                     ;LCD.c: 31:    RD1 = 1;
  3568                           	bsf	(65/8),(65)&7	;volatile
  3569  0A71  1488               	line	32
  3570                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3571                           	opt asmopt_push
  3572                           opt asmopt_off
  3573                           	movlw	13
  3574  0A72  300D               movwf	((??_writeCharLCD+0)+0),f
  3575  0A73  00F0               	u3267:
  3576  0A74                     decfsz	(??_writeCharLCD+0)+0,f
  3577  0A74  0BF0               	goto	u3267
  3578  0A75  2A74               opt asmopt_pop
  3579                           
  3580                           	line	33
  3581                           	
  3582                           l1643:	
  3583  0A76                     ;LCD.c: 33:    RD1 = 0;
  3584                           	bcf	status, 5	;RP0=0, select bank0
  3585  0A76  1283               	bcf	status, 6	;RP1=0, select bank0
  3586  0A77  1303               	bcf	(65/8),(65)&7	;volatile
  3587  0A78  1088               	line	34
  3588                           	
  3589                           l88:	
  3590  0A79                     	return
  3591  0A79  0008               	opt stack 0
  3592                           GLOBAL	__end_of_writeCharLCD
  3593                           	__end_of_writeCharLCD:
  3594  0A7A                     	signat	_writeCharLCD,4217
  3595                           	global	_setCursorLCD
  3596                           
  3597 ;; *************** function _setCursorLCD *****************
  3598 ;; Defined at:
  3599 ;;		line 8 in file "LCD.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;  y               1    wreg     unsigned char 
  3602 ;;  x               1    3[COMMON] unsigned char 
  3603 ;; Auto vars:     Size  Location     Type
  3604 ;;  y               1    5[COMMON] unsigned char 
  3605 ;; Return value:  Size  Location     Type
  3606 ;;                  1    wreg      void 
  3607 ;; Registers used:
  3608 ;;		wreg, status,2, status,0, pclath, cstack
  3609 ;; Tracked objects:
  3610 ;;		On entry : 0/0
  3611 ;;		On exit  : 0/0
  3612 ;;		Unchanged: 0/0
  3613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3614 ;;      Params:         1       0       0       0       0
  3615 ;;      Locals:         1       0       0       0       0
  3616 ;;      Temps:          1       0       0       0       0
  3617 ;;      Totals:         3       0       0       0       0
  3618 ;;Total ram usage:        3 bytes
  3619 ;; Hardware stack levels used:    1
  3620 ;; Hardware stack levels required when called:    1
  3621 ;; This function calls:
  3622 ;;		_cmdLCD
  3623 ;; This function is called by:
  3624 ;;		_writeFloat
  3625 ;;		_main
  3626 ;;		_setup
  3627 ;; This function uses a non-reentrant model
  3628 ;;
  3629                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3630                           	line	8
  3631                           global __ptext9
  3632                           __ptext9:	;psect for function _setCursorLCD
  3633  0A8E                     psect	text9
  3634                           	file	"LCD.c"
  3635                           	line	8
  3636                           	global	__size_of_setCursorLCD
  3637                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  3638  001D                     	
  3639                           _setCursorLCD:	
  3640  0A8E                     ;incstack = 0
  3641                           	opt	stack 5
  3642                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  3643                           ;setCursorLCD@y stored from wreg
  3644                           	movwf	(setCursorLCD@y)
  3645  0A8E  00F5               	line	9
  3646                           	
  3647                           l1811:	
  3648  0A8F                     ;LCD.c: 9:     if(y == 1){
  3649                           		decf	((setCursorLCD@y)),w
  3650  0A8F  0375               	btfss	status,2
  3651  0A90  1D03               	goto	u1971
  3652  0A91  2A93               	goto	u1970
  3653  0A92  2A94               u1971:
  3654  0A93                     	goto	l1815
  3655  0A93  2A9C               u1970:
  3656  0A94                     	line	10
  3657                           	
  3658                           l1813:	
  3659  0A94                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  3660                           	movf	(setCursorLCD@x),w
  3661  0A94  0873               	addlw	07Fh
  3662  0A95  3E7F               	movwf	(??_setCursorLCD+0)+0
  3663  0A96  00F4               	movf	(??_setCursorLCD+0)+0,w
  3664  0A97  0874               	bcf	status, 5	;RP0=0, select bank0
  3665  0A98  1283               	bcf	status, 6	;RP1=0, select bank0
  3666  0A99  1303               	movwf	(_cursor)
  3667  0A9A  00EE               	line	11
  3668                           ;LCD.c: 11:     }else{
  3669                           	goto	l1817
  3670  0A9B  2AA4               	
  3671                           l74:	
  3672  0A9C                     	line	12
  3673                           	
  3674                           l1815:	
  3675  0A9C                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  3676                           	movf	(setCursorLCD@x),w
  3677  0A9C  0873               	addlw	0BFh
  3678  0A9D  3EBF               	movwf	(??_setCursorLCD+0)+0
  3679  0A9E  00F4               	movf	(??_setCursorLCD+0)+0,w
  3680  0A9F  0874               	bcf	status, 5	;RP0=0, select bank0
  3681  0AA0  1283               	bcf	status, 6	;RP1=0, select bank0
  3682  0AA1  1303               	movwf	(_cursor)
  3683  0AA2  00EE               	goto	l1817
  3684  0AA3  2AA4               	line	13
  3685                           ;LCD.c: 13:     }
  3686                           	
  3687                           l75:	
  3688  0AA4                     	line	14
  3689                           	
  3690                           l1817:	
  3691  0AA4                     ;LCD.c: 14:     cmdLCD(cursor);
  3692                           	movf	(_cursor),w
  3693  0AA4  086E               	fcall	_cmdLCD
  3694  0AA5  120A  158A  227A  120A  158A  	line	15
  3695                           	
  3696                           l76:	
  3697  0AAA                     	return
  3698  0AAA  0008               	opt stack 0
  3699                           GLOBAL	__end_of_setCursorLCD
  3700                           	__end_of_setCursorLCD:
  3701  0AAB                     	signat	_setCursorLCD,8313
  3702                           	global	_initLCD
  3703                           
  3704 ;; *************** function _initLCD *****************
  3705 ;; Defined at:
  3706 ;;		line 36 in file "LCD.c"
  3707 ;; Parameters:    Size  Location     Type
  3708 ;;		None
  3709 ;; Auto vars:     Size  Location     Type
  3710 ;;		None
  3711 ;; Return value:  Size  Location     Type
  3712 ;;                  1    wreg      void 
  3713 ;; Registers used:
  3714 ;;		wreg, status,2, status,0, pclath, cstack
  3715 ;; Tracked objects:
  3716 ;;		On entry : 0/0
  3717 ;;		On exit  : 0/0
  3718 ;;		Unchanged: 0/0
  3719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3720 ;;      Params:         0       0       0       0       0
  3721 ;;      Locals:         0       0       0       0       0
  3722 ;;      Temps:          2       0       0       0       0
  3723 ;;      Totals:         2       0       0       0       0
  3724 ;;Total ram usage:        2 bytes
  3725 ;; Hardware stack levels used:    1
  3726 ;; Hardware stack levels required when called:    1
  3727 ;; This function calls:
  3728 ;;		_cmdLCD
  3729 ;; This function is called by:
  3730 ;;		_setup
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3734                           	line	36
  3735                           global __ptext10
  3736                           __ptext10:	;psect for function _initLCD
  3737  0B5A                     psect	text10
  3738                           	file	"LCD.c"
  3739                           	line	36
  3740                           	global	__size_of_initLCD
  3741                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3742  003A                     	
  3743                           _initLCD:	
  3744  0B5A                     ;incstack = 0
  3745                           	opt	stack 5
  3746                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3747                           	line	37
  3748                           	
  3749                           l1821:	
  3750  0B5A                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  3751                           	opt asmopt_push
  3752                           opt asmopt_off
  3753                           movlw	20
  3754  0B5A  3014               movwf	((??_initLCD+0)+0+1),f
  3755  0B5B  00F4               	movlw	121
  3756  0B5C  3079               movwf	((??_initLCD+0)+0),f
  3757  0B5D  00F3               	u3277:
  3758  0B5E                     decfsz	((??_initLCD+0)+0),f
  3759  0B5E  0BF3               	goto	u3277
  3760  0B5F  2B5E               	decfsz	((??_initLCD+0)+0+1),f
  3761  0B60  0BF4               	goto	u3277
  3762  0B61  2B5E               	nop2
  3763  0B62  2B63               opt asmopt_pop
  3764                           
  3765                           	line	38
  3766                           	
  3767                           l1823:	
  3768  0B63                     ;LCD.c: 38:     cmdLCD(0x030);
  3769                           	movlw	low(030h)
  3770  0B63  3030               	fcall	_cmdLCD
  3771  0B64  120A  158A  227A  120A  158A  	line	39
  3772                           	
  3773                           l1825:	
  3774  0B69                     ;LCD.c: 39:     cmdLCD(0x030);
  3775                           	movlw	low(030h)
  3776  0B69  3030               	fcall	_cmdLCD
  3777  0B6A  120A  158A  227A  120A  158A  	line	40
  3778                           	
  3779                           l1827:	
  3780  0B6F                     ;LCD.c: 40:     cmdLCD(0x030);
  3781                           	movlw	low(030h)
  3782  0B6F  3030               	fcall	_cmdLCD
  3783  0B70  120A  158A  227A  120A  158A  	line	42
  3784                           	
  3785                           l1829:	
  3786  0B75                     ;LCD.c: 42:     cmdLCD(0x38);
  3787                           	movlw	low(038h)
  3788  0B75  3038               	fcall	_cmdLCD
  3789  0B76  120A  158A  227A  120A  158A  	line	43
  3790                           	
  3791                           l1831:	
  3792  0B7B                     ;LCD.c: 43:     cmdLCD(0x10);
  3793                           	movlw	low(010h)
  3794  0B7B  3010               	fcall	_cmdLCD
  3795  0B7C  120A  158A  227A  120A  158A  	line	44
  3796                           	
  3797                           l1833:	
  3798  0B81                     ;LCD.c: 44:     cmdLCD(0x01);
  3799                           	movlw	low(01h)
  3800  0B81  3001               	fcall	_cmdLCD
  3801  0B82  120A  158A  227A  120A  158A  	line	45
  3802                           	
  3803                           l1835:	
  3804  0B87                     ;LCD.c: 45:     cmdLCD(0x06);
  3805                           	movlw	low(06h)
  3806  0B87  3006               	fcall	_cmdLCD
  3807  0B88  120A  158A  227A  120A  158A  	line	46
  3808                           	
  3809                           l1837:	
  3810  0B8D                     ;LCD.c: 46:     cmdLCD(0x0E);
  3811                           	movlw	low(0Eh)
  3812  0B8D  300E               	fcall	_cmdLCD
  3813  0B8E  120A  158A  227A  120A  158A  	line	47
  3814                           	
  3815                           l91:	
  3816  0B93                     	return
  3817  0B93  0008               	opt stack 0
  3818                           GLOBAL	__end_of_initLCD
  3819                           	__end_of_initLCD:
  3820  0B94                     	signat	_initLCD,89
  3821                           	global	_clcLCD
  3822                           
  3823 ;; *************** function _clcLCD *****************
  3824 ;; Defined at:
  3825 ;;		line 17 in file "LCD.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;		None
  3828 ;; Auto vars:     Size  Location     Type
  3829 ;;		None
  3830 ;; Return value:  Size  Location     Type
  3831 ;;                  1    wreg      void 
  3832 ;; Registers used:
  3833 ;;		wreg, status,2, status,0, pclath, cstack
  3834 ;; Tracked objects:
  3835 ;;		On entry : 0/0
  3836 ;;		On exit  : 0/0
  3837 ;;		Unchanged: 0/0
  3838 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3839 ;;      Params:         0       0       0       0       0
  3840 ;;      Locals:         0       0       0       0       0
  3841 ;;      Temps:          0       0       0       0       0
  3842 ;;      Totals:         0       0       0       0       0
  3843 ;;Total ram usage:        0 bytes
  3844 ;; Hardware stack levels used:    1
  3845 ;; Hardware stack levels required when called:    1
  3846 ;; This function calls:
  3847 ;;		_cmdLCD
  3848 ;; This function is called by:
  3849 ;;		_setup
  3850 ;; This function uses a non-reentrant model
  3851 ;;
  3852                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3853                           	line	17
  3854                           global __ptext11
  3855                           __ptext11:	;psect for function _clcLCD
  3856  0A22                     psect	text11
  3857                           	file	"LCD.c"
  3858                           	line	17
  3859                           	global	__size_of_clcLCD
  3860                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  3861  0007                     	
  3862                           _clcLCD:	
  3863  0A22                     ;incstack = 0
  3864                           	opt	stack 5
  3865                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  3866                           	line	18
  3867                           	
  3868                           l1819:	
  3869  0A22                     ;LCD.c: 18:     cmdLCD(0x01);
  3870                           	movlw	low(01h)
  3871  0A22  3001               	fcall	_cmdLCD
  3872  0A23  120A  158A  227A  120A  158A  	line	19
  3873                           	
  3874                           l79:	
  3875  0A28                     	return
  3876  0A28  0008               	opt stack 0
  3877                           GLOBAL	__end_of_clcLCD
  3878                           	__end_of_clcLCD:
  3879  0A29                     	signat	_clcLCD,89
  3880                           	global	_cmdLCD
  3881                           
  3882 ;; *************** function _cmdLCD *****************
  3883 ;; Defined at:
  3884 ;;		line 49 in file "LCD.c"
  3885 ;; Parameters:    Size  Location     Type
  3886 ;;  cmd             1    wreg     unsigned char 
  3887 ;; Auto vars:     Size  Location     Type
  3888 ;;  cmd             1    2[COMMON] unsigned char 
  3889 ;; Return value:  Size  Location     Type
  3890 ;;                  1    wreg      void 
  3891 ;; Registers used:
  3892 ;;		wreg
  3893 ;; Tracked objects:
  3894 ;;		On entry : 0/0
  3895 ;;		On exit  : 0/0
  3896 ;;		Unchanged: 0/0
  3897 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3898 ;;      Params:         0       0       0       0       0
  3899 ;;      Locals:         1       0       0       0       0
  3900 ;;      Temps:          2       0       0       0       0
  3901 ;;      Totals:         3       0       0       0       0
  3902 ;;Total ram usage:        3 bytes
  3903 ;; Hardware stack levels used:    1
  3904 ;; This function calls:
  3905 ;;		Nothing
  3906 ;; This function is called by:
  3907 ;;		_setCursorLCD
  3908 ;;		_clcLCD
  3909 ;;		_initLCD
  3910 ;; This function uses a non-reentrant model
  3911 ;;
  3912                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3913                           	line	49
  3914                           global __ptext12
  3915                           __ptext12:	;psect for function _cmdLCD
  3916  0A7A                     psect	text12
  3917                           	file	"LCD.c"
  3918                           	line	49
  3919                           	global	__size_of_cmdLCD
  3920                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  3921  0014                     	
  3922                           _cmdLCD:	
  3923  0A7A                     ;incstack = 0
  3924                           	opt	stack 5
  3925                           ; Regs used in _cmdLCD: [wreg]
  3926                           ;cmdLCD@cmd stored from wreg
  3927                           	movwf	(cmdLCD@cmd)
  3928  0A7A  00F2               	line	50
  3929                           	
  3930                           l1693:	
  3931  0A7B                     ;LCD.c: 50:     RD0 = 0;
  3932                           	bcf	status, 5	;RP0=0, select bank0
  3933  0A7B  1283               	bcf	status, 6	;RP1=0, select bank0
  3934  0A7C  1303               	bcf	(64/8),(64)&7	;volatile
  3935  0A7D  1008               	line	51
  3936                           	
  3937                           l1695:	
  3938  0A7E                     ;LCD.c: 51:  PORTB = cmd;
  3939                           	movf	(cmdLCD@cmd),w
  3940  0A7E  0872               	movwf	(6)	;volatile
  3941  0A7F  0086               	line	52
  3942                           	
  3943                           l1697:	
  3944  0A80                     ;LCD.c: 52:  RD1 = 1;
  3945                           	bsf	(65/8),(65)&7	;volatile
  3946  0A80  1488               	line	53
  3947                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  3948                           	opt asmopt_push
  3949                           opt asmopt_off
  3950                           movlw	6
  3951  0A81  3006               movwf	((??_cmdLCD+0)+0+1),f
  3952  0A82  00F1               	movlw	48
  3953  0A83  3030               movwf	((??_cmdLCD+0)+0),f
  3954  0A84  00F0               	u3287:
  3955  0A85                     decfsz	((??_cmdLCD+0)+0),f
  3956  0A85  0BF0               	goto	u3287
  3957  0A86  2A85               	decfsz	((??_cmdLCD+0)+0+1),f
  3958  0A87  0BF1               	goto	u3287
  3959  0A88  2A85               	nop
  3960  0A89  0000               opt asmopt_pop
  3961                           
  3962                           	line	54
  3963                           	
  3964                           l1699:	
  3965  0A8A                     ;LCD.c: 54:     RD1 = 0;
  3966                           	bcf	status, 5	;RP0=0, select bank0
  3967  0A8A  1283               	bcf	status, 6	;RP1=0, select bank0
  3968  0A8B  1303               	bcf	(65/8),(65)&7	;volatile
  3969  0A8C  1088               	line	55
  3970                           	
  3971                           l94:	
  3972  0A8D                     	return
  3973  0A8D  0008               	opt stack 0
  3974                           GLOBAL	__end_of_cmdLCD
  3975                           	__end_of_cmdLCD:
  3976  0A8E                     	signat	_cmdLCD,4217
  3977                           	global	_I2C_Master_Init
  3978                           
  3979 ;; *************** function _I2C_Master_Init *****************
  3980 ;; Defined at:
  3981 ;;		line 16 in file "I2C.c"
  3982 ;; Parameters:    Size  Location     Type
  3983 ;;  c               4    0[BANK0 ] const unsigned long 
  3984 ;; Auto vars:     Size  Location     Type
  3985 ;;		None
  3986 ;; Return value:  Size  Location     Type
  3987 ;;                  1    wreg      void 
  3988 ;; Registers used:
  3989 ;;		wreg, status,2, status,0, pclath, cstack
  3990 ;; Tracked objects:
  3991 ;;		On entry : 0/0
  3992 ;;		On exit  : 0/0
  3993 ;;		Unchanged: 0/0
  3994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3995 ;;      Params:         0       4       0       0       0
  3996 ;;      Locals:         0       0       0       0       0
  3997 ;;      Temps:          0       4       0       0       0
  3998 ;;      Totals:         0       8       0       0       0
  3999 ;;Total ram usage:        8 bytes
  4000 ;; Hardware stack levels used:    1
  4001 ;; Hardware stack levels required when called:    1
  4002 ;; This function calls:
  4003 ;;		___lldiv
  4004 ;; This function is called by:
  4005 ;;		_setup
  4006 ;; This function uses a non-reentrant model
  4007 ;;
  4008                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4009                           	file	"I2C.c"
  4010                           	line	16
  4011                           global __ptext13
  4012                           __ptext13:	;psect for function _I2C_Master_Init
  4013  0B22                     psect	text13
  4014                           	file	"I2C.c"
  4015                           	line	16
  4016                           	global	__size_of_I2C_Master_Init
  4017                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  4018  0038                     	
  4019                           _I2C_Master_Init:	
  4020  0B22                     ;incstack = 0
  4021                           	opt	stack 5
  4022                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4023                           	line	18
  4024                           	
  4025                           l1795:	
  4026  0B22                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  4027                           	movlw	low(028h)
  4028  0B22  3028               	bcf	status, 5	;RP0=0, select bank0
  4029  0B23  1283               	bcf	status, 6	;RP1=0, select bank0
  4030  0B24  1303               	movwf	(20)	;volatile
  4031  0B25  0094               	line	19
  4032                           	
  4033                           l1797:	
  4034  0B26                     ;I2C.c: 19:     SSPCON2 = 0;
  4035                           	bsf	status, 5	;RP0=1, select bank1
  4036  0B26  1683               	bcf	status, 6	;RP1=0, select bank1
  4037  0B27  1303               	clrf	(145)^080h	;volatile
  4038  0B28  0191               	line	20
  4039                           	
  4040                           l1799:	
  4041  0B29                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  4042                           	bcf	status, 5	;RP0=0, select bank0
  4043  0B29  1283               	bcf	status, 6	;RP1=0, select bank0
  4044  0B2A  1303               	movf	(I2C_Master_Init@c),w
  4045  0B2B  0820               	movwf	(??_I2C_Master_Init+0)+0
  4046  0B2C  00A4               	movf	(I2C_Master_Init@c+1),w
  4047  0B2D  0821               	movwf	((??_I2C_Master_Init+0)+0+1)
  4048  0B2E  00A5               	movf	(I2C_Master_Init@c+2),w
  4049  0B2F  0822               	movwf	((??_I2C_Master_Init+0)+0+2)
  4050  0B30  00A6               	movf	(I2C_Master_Init@c+3),w
  4051  0B31  0823               	movwf	((??_I2C_Master_Init+0)+0+3)
  4052  0B32  00A7               	movlw	02h
  4053  0B33  3002               u1945:
  4054  0B34                     	clrc
  4055  0B34  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  4056  0B35  0DA4               	rlf	(??_I2C_Master_Init+0)+1,f
  4057  0B36  0DA5               	rlf	(??_I2C_Master_Init+0)+2,f
  4058  0B37  0DA6               	rlf	(??_I2C_Master_Init+0)+3,f
  4059  0B38  0DA7               u1940:
  4060  0B39                     	addlw	-1
  4061  0B39  3EFF               	skipz
  4062  0B3A  1D03               	goto	u1945
  4063  0B3B  2B34               	movf	3+(??_I2C_Master_Init+0)+0,w
  4064  0B3C  0827               	movwf	(___lldiv@divisor+3)
  4065  0B3D  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  4066  0B3E  0826               	movwf	(___lldiv@divisor+2)
  4067  0B3F  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  4068  0B40  0825               	movwf	(___lldiv@divisor+1)
  4069  0B41  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  4070  0B42  0824               	movwf	(___lldiv@divisor)
  4071  0B43  00F0               
  4072                           	movlw	0
  4073  0B44  3000               	movwf	(___lldiv@dividend+3)
  4074  0B45  00F7               	movlw	03Dh
  4075  0B46  303D               	movwf	(___lldiv@dividend+2)
  4076  0B47  00F6               	movlw	09h
  4077  0B48  3009               	movwf	(___lldiv@dividend+1)
  4078  0B49  00F5               	movlw	0
  4079  0B4A  3000               	movwf	(___lldiv@dividend)
  4080  0B4B  00F4               
  4081                           	fcall	___lldiv
  4082  0B4C  120A  158A  24C7  120A  158A  	movf	(0+(?___lldiv)),w
  4083  0B51  0870               	addlw	0FFh
  4084  0B52  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4085  0B53  1683               	bcf	status, 6	;RP1=0, select bank1
  4086  0B54  1303               	movwf	(147)^080h	;volatile
  4087  0B55  0093               	line	21
  4088                           	
  4089                           l1801:	
  4090  0B56                     ;I2C.c: 21:     SSPSTAT = 0;
  4091                           	clrf	(148)^080h	;volatile
  4092  0B56  0194               	line	22
  4093                           	
  4094                           l1803:	
  4095  0B57                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4096                           	bsf	(135)^080h,3	;volatile
  4097  0B57  1587               	line	23
  4098                           	
  4099                           l1805:	
  4100  0B58                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4101                           	bsf	(135)^080h,4	;volatile
  4102  0B58  1607               	line	24
  4103                           	
  4104                           l29:	
  4105  0B59                     	return
  4106  0B59  0008               	opt stack 0
  4107                           GLOBAL	__end_of_I2C_Master_Init
  4108                           	__end_of_I2C_Master_Init:
  4109  0B5A                     	signat	_I2C_Master_Init,4217
  4110                           	global	___lldiv
  4111                           
  4112 ;; *************** function ___lldiv *****************
  4113 ;; Defined at:
  4114 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;  divisor         4    0[COMMON] unsigned long 
  4117 ;;  dividend        4    4[COMMON] unsigned long 
  4118 ;; Auto vars:     Size  Location     Type
  4119 ;;  quotient        4    9[COMMON] unsigned long 
  4120 ;;  counter         1   13[COMMON] unsigned char 
  4121 ;; Return value:  Size  Location     Type
  4122 ;;                  4    0[COMMON] unsigned long 
  4123 ;; Registers used:
  4124 ;;		wreg, status,2, status,0
  4125 ;; Tracked objects:
  4126 ;;		On entry : 0/0
  4127 ;;		On exit  : 0/0
  4128 ;;		Unchanged: 0/0
  4129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4130 ;;      Params:         8       0       0       0       0
  4131 ;;      Locals:         5       0       0       0       0
  4132 ;;      Temps:          1       0       0       0       0
  4133 ;;      Totals:        14       0       0       0       0
  4134 ;;Total ram usage:       14 bytes
  4135 ;; Hardware stack levels used:    1
  4136 ;; This function calls:
  4137 ;;		Nothing
  4138 ;; This function is called by:
  4139 ;;		_I2C_Master_Init
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  4143                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4144                           	line	5
  4145                           global __ptext14
  4146                           __ptext14:	;psect for function ___lldiv
  4147  0CC7                     psect	text14
  4148                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4149                           	line	5
  4150                           	global	__size_of___lldiv
  4151                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4152  006D                     	
  4153                           ___lldiv:	
  4154  0CC7                     ;incstack = 0
  4155                           	opt	stack 5
  4156                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4157                           	line	13
  4158                           	
  4159                           l1771:	
  4160  0CC7                     	movlw	high highword(0)
  4161  0CC7  3000               	movwf	(___lldiv@quotient+3)
  4162  0CC8  00FC               	movlw	low highword(0)
  4163  0CC9  3000               	movwf	(___lldiv@quotient+2)
  4164  0CCA  00FB               	movlw	high(0)
  4165  0CCB  3000               	movwf	(___lldiv@quotient+1)
  4166  0CCC  00FA               	movlw	low(0)
  4167  0CCD  3000               	movwf	(___lldiv@quotient)
  4168  0CCE  00F9               
  4169                           	line	14
  4170                           	movf	(___lldiv@divisor+3),w
  4171  0CCF  0873               	iorwf	(___lldiv@divisor+2),w
  4172  0CD0  0472               	iorwf	(___lldiv@divisor+1),w
  4173  0CD1  0471               	iorwf	(___lldiv@divisor),w
  4174  0CD2  0470               	skipnz
  4175  0CD3  1903               	goto	u1871
  4176  0CD4  2CD6               	goto	u1870
  4177  0CD5  2CD7               u1871:
  4178  0CD6                     	goto	l1791
  4179  0CD6  2D2A               u1870:
  4180  0CD7                     	line	15
  4181                           	
  4182                           l1773:	
  4183  0CD7                     	clrf	(___lldiv@counter)
  4184  0CD7  01FD               	incf	(___lldiv@counter),f
  4185  0CD8  0AFD               	line	16
  4186                           	goto	l1777
  4187  0CD9  2CE8               	
  4188                           l341:	
  4189  0CDA                     	line	17
  4190                           	
  4191                           l1775:	
  4192  0CDA                     	movlw	01h
  4193  0CDA  3001               	movwf	(??___lldiv+0)+0
  4194  0CDB  00F8               u1885:
  4195  0CDC                     	clrc
  4196  0CDC  1003               	rlf	(___lldiv@divisor),f
  4197  0CDD  0DF0               	rlf	(___lldiv@divisor+1),f
  4198  0CDE  0DF1               	rlf	(___lldiv@divisor+2),f
  4199  0CDF  0DF2               	rlf	(___lldiv@divisor+3),f
  4200  0CE0  0DF3               	decfsz	(??___lldiv+0)+0
  4201  0CE1  0BF8               	goto	u1885
  4202  0CE2  2CDC               	line	18
  4203                           	movlw	low(01h)
  4204  0CE3  3001               	movwf	(??___lldiv+0)+0
  4205  0CE4  00F8               	movf	(??___lldiv+0)+0,w
  4206  0CE5  0878               	addwf	(___lldiv@counter),f
  4207  0CE6  07FD               	goto	l1777
  4208  0CE7  2CE8               	line	19
  4209                           	
  4210                           l340:	
  4211  0CE8                     	line	16
  4212                           	
  4213                           l1777:	
  4214  0CE8                     	btfss	(___lldiv@divisor+3),(31)&7
  4215  0CE8  1FF3               	goto	u1891
  4216  0CE9  2CEB               	goto	u1890
  4217  0CEA  2CEC               u1891:
  4218  0CEB                     	goto	l1775
  4219  0CEB  2CDA               u1890:
  4220  0CEC                     	goto	l1779
  4221  0CEC  2CEE               	
  4222                           l342:	
  4223  0CED                     	goto	l1779
  4224  0CED  2CEE               	line	20
  4225                           	
  4226                           l343:	
  4227  0CEE                     	line	21
  4228                           	
  4229                           l1779:	
  4230  0CEE                     	movlw	01h
  4231  0CEE  3001               	movwf	(??___lldiv+0)+0
  4232  0CEF  00F8               u1905:
  4233  0CF0                     	clrc
  4234  0CF0  1003               	rlf	(___lldiv@quotient),f
  4235  0CF1  0DF9               	rlf	(___lldiv@quotient+1),f
  4236  0CF2  0DFA               	rlf	(___lldiv@quotient+2),f
  4237  0CF3  0DFB               	rlf	(___lldiv@quotient+3),f
  4238  0CF4  0DFC               	decfsz	(??___lldiv+0)+0
  4239  0CF5  0BF8               	goto	u1905
  4240  0CF6  2CF0               	line	22
  4241                           	
  4242                           l1781:	
  4243  0CF7                     	movf	(___lldiv@divisor+3),w
  4244  0CF7  0873               	subwf	(___lldiv@dividend+3),w
  4245  0CF8  0277               	skipz
  4246  0CF9  1D03               	goto	u1915
  4247  0CFA  2D05               	movf	(___lldiv@divisor+2),w
  4248  0CFB  0872               	subwf	(___lldiv@dividend+2),w
  4249  0CFC  0276               	skipz
  4250  0CFD  1D03               	goto	u1915
  4251  0CFE  2D05               	movf	(___lldiv@divisor+1),w
  4252  0CFF  0871               	subwf	(___lldiv@dividend+1),w
  4253  0D00  0275               	skipz
  4254  0D01  1D03               	goto	u1915
  4255  0D02  2D05               	movf	(___lldiv@divisor),w
  4256  0D03  0870               	subwf	(___lldiv@dividend),w
  4257  0D04  0274               u1915:
  4258  0D05                     	skipc
  4259  0D05  1C03               	goto	u1911
  4260  0D06  2D08               	goto	u1910
  4261  0D07  2D09               u1911:
  4262  0D08                     	goto	l1787
  4263  0D08  2D19               u1910:
  4264  0D09                     	line	23
  4265                           	
  4266                           l1783:	
  4267  0D09                     	movf	(___lldiv@divisor),w
  4268  0D09  0870               	subwf	(___lldiv@dividend),f
  4269  0D0A  02F4               	movf	(___lldiv@divisor+1),w
  4270  0D0B  0871               	skipc
  4271  0D0C  1C03               	incfsz	(___lldiv@divisor+1),w
  4272  0D0D  0F71               	subwf	(___lldiv@dividend+1),f
  4273  0D0E  02F5               	movf	(___lldiv@divisor+2),w
  4274  0D0F  0872               	skipc
  4275  0D10  1C03               	incfsz	(___lldiv@divisor+2),w
  4276  0D11  0F72               	subwf	(___lldiv@dividend+2),f
  4277  0D12  02F6               	movf	(___lldiv@divisor+3),w
  4278  0D13  0873               	skipc
  4279  0D14  1C03               	incfsz	(___lldiv@divisor+3),w
  4280  0D15  0F73               	subwf	(___lldiv@dividend+3),f
  4281  0D16  02F7               	line	24
  4282                           	
  4283                           l1785:	
  4284  0D17                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4285  0D17  1479               	goto	l1787
  4286  0D18  2D19               	line	25
  4287                           	
  4288                           l344:	
  4289  0D19                     	line	26
  4290                           	
  4291                           l1787:	
  4292  0D19                     	movlw	01h
  4293  0D19  3001               u1925:
  4294  0D1A                     	clrc
  4295  0D1A  1003               	rrf	(___lldiv@divisor+3),f
  4296  0D1B  0CF3               	rrf	(___lldiv@divisor+2),f
  4297  0D1C  0CF2               	rrf	(___lldiv@divisor+1),f
  4298  0D1D  0CF1               	rrf	(___lldiv@divisor),f
  4299  0D1E  0CF0               	addlw	-1
  4300  0D1F  3EFF               	skipz
  4301  0D20  1D03               	goto	u1925
  4302  0D21  2D1A               
  4303                           	line	27
  4304                           	
  4305                           l1789:	
  4306  0D22                     	movlw	01h
  4307  0D22  3001               	subwf	(___lldiv@counter),f
  4308  0D23  02FD               	btfss	status,2
  4309  0D24  1D03               	goto	u1931
  4310  0D25  2D27               	goto	u1930
  4311  0D26  2D28               u1931:
  4312  0D27                     	goto	l1779
  4313  0D27  2CEE               u1930:
  4314  0D28                     	goto	l1791
  4315  0D28  2D2A               	
  4316                           l345:	
  4317  0D29                     	goto	l1791
  4318  0D29  2D2A               	line	28
  4319                           	
  4320                           l339:	
  4321  0D2A                     	line	29
  4322                           	
  4323                           l1791:	
  4324  0D2A                     	movf	(___lldiv@quotient+3),w
  4325  0D2A  087C               	movwf	(?___lldiv+3)
  4326  0D2B  00F3               	movf	(___lldiv@quotient+2),w
  4327  0D2C  087B               	movwf	(?___lldiv+2)
  4328  0D2D  00F2               	movf	(___lldiv@quotient+1),w
  4329  0D2E  087A               	movwf	(?___lldiv+1)
  4330  0D2F  00F1               	movf	(___lldiv@quotient),w
  4331  0D30  0879               	movwf	(?___lldiv)
  4332  0D31  00F0               
  4333                           	goto	l346
  4334  0D32  2D33               	
  4335                           l1793:	
  4336  0D33                     	line	30
  4337                           	
  4338                           l346:	
  4339  0D33                     	return
  4340  0D33  0008               	opt stack 0
  4341                           GLOBAL	__end_of___lldiv
  4342                           	__end_of___lldiv:
  4343  0D34                     	signat	___lldiv,8316
  4344                           	global	___xxtofl
  4345                           
  4346 ;; *************** function ___xxtofl *****************
  4347 ;; Defined at:
  4348 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4349 ;; Parameters:    Size  Location     Type
  4350 ;;  sign            1    wreg     unsigned char 
  4351 ;;  val             4    0[COMMON] long 
  4352 ;; Auto vars:     Size  Location     Type
  4353 ;;  sign            1    8[COMMON] unsigned char 
  4354 ;;  arg             4   10[COMMON] unsigned long 
  4355 ;;  exp             1    9[COMMON] unsigned char 
  4356 ;; Return value:  Size  Location     Type
  4357 ;;                  4    0[COMMON] unsigned char 
  4358 ;; Registers used:
  4359 ;;		wreg, status,2, status,0
  4360 ;; Tracked objects:
  4361 ;;		On entry : 0/0
  4362 ;;		On exit  : 0/0
  4363 ;;		Unchanged: 0/0
  4364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4365 ;;      Params:         4       0       0       0       0
  4366 ;;      Locals:         6       0       0       0       0
  4367 ;;      Temps:          4       0       0       0       0
  4368 ;;      Totals:        14       0       0       0       0
  4369 ;;Total ram usage:       14 bytes
  4370 ;; Hardware stack levels used:    1
  4371 ;; This function calls:
  4372 ;;		Nothing
  4373 ;; This function is called by:
  4374 ;;		_main
  4375 ;; This function uses a non-reentrant model
  4376 ;;
  4377                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  4378                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4379                           	line	10
  4380                           global __ptext15
  4381                           __ptext15:	;psect for function ___xxtofl
  4382  0E3E                     psect	text15
  4383                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4384                           	line	10
  4385                           	global	__size_of___xxtofl
  4386                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  4387  00C2                     	
  4388                           ___xxtofl:	
  4389  0E3E                     ;incstack = 0
  4390                           	opt	stack 7
  4391                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4392                           ;___xxtofl@sign stored from wreg
  4393                           	movwf	(___xxtofl@sign)
  4394  0E3E  00F8               	line	15
  4395                           	
  4396                           l2345:	
  4397  0E3F                     	movf	((___xxtofl@sign)),w
  4398  0E3F  0878               	btfsc	status,2
  4399  0E40  1903               	goto	u3081
  4400  0E41  2E43               	goto	u3080
  4401  0E42  2E44               u3081:
  4402  0E43                     	goto	l2351
  4403  0E43  2E58               u3080:
  4404  0E44                     	
  4405                           l2347:	
  4406  0E44                     	btfss	(___xxtofl@val+3),7
  4407  0E44  1FF3               	goto	u3091
  4408  0E45  2E47               	goto	u3090
  4409  0E46  2E48               u3091:
  4410  0E47                     	goto	l2351
  4411  0E47  2E58               u3090:
  4412  0E48                     	line	16
  4413                           	
  4414                           l2349:	
  4415  0E48                     	comf	(___xxtofl@val)+0,w
  4416  0E48  0970               	movwf	(___xxtofl@arg)
  4417  0E49  00FA               	comf	(___xxtofl@val)+1,w
  4418  0E4A  0971               	movwf	(___xxtofl@arg+1)
  4419  0E4B  00FB               	comf	(___xxtofl@val)+2,w
  4420  0E4C  0972               	movwf	(___xxtofl@arg+2)
  4421  0E4D  00FC               	comf	(___xxtofl@val)+3,w
  4422  0E4E  0973               	movwf	(___xxtofl@arg+3)
  4423  0E4F  00FD               	incf	(___xxtofl@arg),f
  4424  0E50  0AFA               	skipnz
  4425  0E51  1903               	incf	(___xxtofl@arg+1),f
  4426  0E52  0AFB               	skipnz
  4427  0E53  1903               	incf	(___xxtofl@arg+2),f
  4428  0E54  0AFC               	skipnz
  4429  0E55  1903               	incf	(___xxtofl@arg+3),f
  4430  0E56  0AFD               	line	17
  4431                           	goto	l718
  4432  0E57  2E60               	line	18
  4433                           	
  4434                           l717:	
  4435  0E58                     	line	19
  4436                           	
  4437                           l2351:	
  4438  0E58                     	movf	(___xxtofl@val+3),w
  4439  0E58  0873               	movwf	(___xxtofl@arg+3)
  4440  0E59  00FD               	movf	(___xxtofl@val+2),w
  4441  0E5A  0872               	movwf	(___xxtofl@arg+2)
  4442  0E5B  00FC               	movf	(___xxtofl@val+1),w
  4443  0E5C  0871               	movwf	(___xxtofl@arg+1)
  4444  0E5D  00FB               	movf	(___xxtofl@val),w
  4445  0E5E  0870               	movwf	(___xxtofl@arg)
  4446  0E5F  00FA               
  4447                           	line	20
  4448                           	
  4449                           l718:	
  4450  0E60                     	line	21
  4451                           	movf	(___xxtofl@val+3),w
  4452  0E60  0873               	iorwf	(___xxtofl@val+2),w
  4453  0E61  0472               	iorwf	(___xxtofl@val+1),w
  4454  0E62  0471               	iorwf	(___xxtofl@val),w
  4455  0E63  0470               	skipz
  4456  0E64  1D03               	goto	u3101
  4457  0E65  2E67               	goto	u3100
  4458  0E66  2E68               u3101:
  4459  0E67                     	goto	l2357
  4460  0E67  2E72               u3100:
  4461  0E68                     	line	22
  4462                           	
  4463                           l2353:	
  4464  0E68                     	movlw	0x0
  4465  0E68  3000               	movwf	(?___xxtofl+3)
  4466  0E69  00F3               	movlw	0x0
  4467  0E6A  3000               	movwf	(?___xxtofl+2)
  4468  0E6B  00F2               	movlw	0x0
  4469  0E6C  3000               	movwf	(?___xxtofl+1)
  4470  0E6D  00F1               	movlw	0x0
  4471  0E6E  3000               	movwf	(?___xxtofl)
  4472  0E6F  00F0               
  4473                           	goto	l720
  4474  0E70  2EFF               	
  4475                           l2355:	
  4476  0E71                     	goto	l720
  4477  0E71  2EFF               	
  4478                           l719:	
  4479  0E72                     	line	23
  4480                           	
  4481                           l2357:	
  4482  0E72                     	movlw	low(096h)
  4483  0E72  3096               	movwf	(??___xxtofl+0)+0
  4484  0E73  00F4               	movf	(??___xxtofl+0)+0,w
  4485  0E74  0874               	movwf	(___xxtofl@exp)
  4486  0E75  00F9               	line	24
  4487                           	goto	l2361
  4488  0E76  2E85               	
  4489                           l722:	
  4490  0E77                     	line	25
  4491                           	
  4492                           l2359:	
  4493  0E77                     	movlw	low(01h)
  4494  0E77  3001               	movwf	(??___xxtofl+0)+0
  4495  0E78  00F4               	movf	(??___xxtofl+0)+0,w
  4496  0E79  0874               	addwf	(___xxtofl@exp),f
  4497  0E7A  07F9               	line	26
  4498                           	movlw	01h
  4499  0E7B  3001               u3115:
  4500  0E7C                     	clrc
  4501  0E7C  1003               	rrf	(___xxtofl@arg+3),f
  4502  0E7D  0CFD               	rrf	(___xxtofl@arg+2),f
  4503  0E7E  0CFC               	rrf	(___xxtofl@arg+1),f
  4504  0E7F  0CFB               	rrf	(___xxtofl@arg),f
  4505  0E80  0CFA               	addlw	-1
  4506  0E81  3EFF               	skipz
  4507  0E82  1D03               	goto	u3115
  4508  0E83  2E7C               
  4509                           	goto	l2361
  4510  0E84  2E85               	line	27
  4511                           	
  4512                           l721:	
  4513  0E85                     	line	24
  4514                           	
  4515                           l2361:	
  4516  0E85                     	movlw	high highword(0FE000000h)
  4517  0E85  30FE               	andwf	(___xxtofl@arg+3),w
  4518  0E86  057D               	btfss	status,2
  4519  0E87  1D03               	goto	u3121
  4520  0E88  2E8A               	goto	u3120
  4521  0E89  2E8B               u3121:
  4522  0E8A                     	goto	l2359
  4523  0E8A  2E77               u3120:
  4524  0E8B                     	goto	l724
  4525  0E8B  2EA8               	
  4526                           l723:	
  4527  0E8C                     	line	28
  4528                           	goto	l724
  4529  0E8C  2EA8               	
  4530                           l725:	
  4531  0E8D                     	line	29
  4532                           	
  4533                           l2363:	
  4534  0E8D                     	movlw	low(01h)
  4535  0E8D  3001               	movwf	(??___xxtofl+0)+0
  4536  0E8E  00F4               	movf	(??___xxtofl+0)+0,w
  4537  0E8F  0874               	addwf	(___xxtofl@exp),f
  4538  0E90  07F9               	line	30
  4539                           	
  4540                           l2365:	
  4541  0E91                     	movlw	01h
  4542  0E91  3001               	addwf	(___xxtofl@arg),f
  4543  0E92  07FA               	movlw	0
  4544  0E93  3000               	skipnc
  4545  0E94  1803               movlw 1
  4546  0E95  3001               	addwf	(___xxtofl@arg+1),f
  4547  0E96  07FB               	movlw	0
  4548  0E97  3000               	skipnc
  4549  0E98  1803               movlw 1
  4550  0E99  3001               	addwf	(___xxtofl@arg+2),f
  4551  0E9A  07FC               	movlw	0
  4552  0E9B  3000               	skipnc
  4553  0E9C  1803               movlw 1
  4554  0E9D  3001               	addwf	(___xxtofl@arg+3),f
  4555  0E9E  07FD               	line	31
  4556                           	
  4557                           l2367:	
  4558  0E9F                     	movlw	01h
  4559  0E9F  3001               u3135:
  4560  0EA0                     	clrc
  4561  0EA0  1003               	rrf	(___xxtofl@arg+3),f
  4562  0EA1  0CFD               	rrf	(___xxtofl@arg+2),f
  4563  0EA2  0CFC               	rrf	(___xxtofl@arg+1),f
  4564  0EA3  0CFB               	rrf	(___xxtofl@arg),f
  4565  0EA4  0CFA               	addlw	-1
  4566  0EA5  3EFF               	skipz
  4567  0EA6  1D03               	goto	u3135
  4568  0EA7  2EA0               
  4569                           	line	32
  4570                           	
  4571                           l724:	
  4572  0EA8                     	line	28
  4573                           	movlw	high highword(0FF000000h)
  4574  0EA8  30FF               	andwf	(___xxtofl@arg+3),w
  4575  0EA9  057D               	btfss	status,2
  4576  0EAA  1D03               	goto	u3141
  4577  0EAB  2EAD               	goto	u3140
  4578  0EAC  2EAE               u3141:
  4579  0EAD                     	goto	l2363
  4580  0EAD  2E8D               u3140:
  4581  0EAE                     	goto	l2371
  4582  0EAE  2EBC               	
  4583                           l726:	
  4584  0EAF                     	line	33
  4585                           	goto	l2371
  4586  0EAF  2EBC               	
  4587                           l728:	
  4588  0EB0                     	line	34
  4589                           	
  4590                           l2369:	
  4591  0EB0                     	movlw	01h
  4592  0EB0  3001               	subwf	(___xxtofl@exp),f
  4593  0EB1  02F9               	line	35
  4594                           	movlw	01h
  4595  0EB2  3001               	movwf	(??___xxtofl+0)+0
  4596  0EB3  00F4               u3155:
  4597  0EB4                     	clrc
  4598  0EB4  1003               	rlf	(___xxtofl@arg),f
  4599  0EB5  0DFA               	rlf	(___xxtofl@arg+1),f
  4600  0EB6  0DFB               	rlf	(___xxtofl@arg+2),f
  4601  0EB7  0DFC               	rlf	(___xxtofl@arg+3),f
  4602  0EB8  0DFD               	decfsz	(??___xxtofl+0)+0
  4603  0EB9  0BF4               	goto	u3155
  4604  0EBA  2EB4               	goto	l2371
  4605  0EBB  2EBC               	line	36
  4606                           	
  4607                           l727:	
  4608  0EBC                     	line	33
  4609                           	
  4610                           l2371:	
  4611  0EBC                     	btfsc	(___xxtofl@arg+2),(23)&7
  4612  0EBC  1BFC               	goto	u3161
  4613  0EBD  2EBF               	goto	u3160
  4614  0EBE  2EC0               u3161:
  4615  0EBF                     	goto	l731
  4616  0EBF  2EC7               u3160:
  4617  0EC0                     	
  4618                           l2373:	
  4619  0EC0                     	movlw	low(02h)
  4620  0EC0  3002               	subwf	(___xxtofl@exp),w
  4621  0EC1  0279               	skipnc
  4622  0EC2  1803               	goto	u3171
  4623  0EC3  2EC5               	goto	u3170
  4624  0EC4  2EC6               u3171:
  4625  0EC5                     	goto	l2369
  4626  0EC5  2EB0               u3170:
  4627  0EC6                     	goto	l731
  4628  0EC6  2EC7               	
  4629                           l730:	
  4630  0EC7                     	
  4631                           l731:	
  4632  0EC7                     	line	37
  4633                           	btfsc	(___xxtofl@exp),(0)&7
  4634  0EC7  1879               	goto	u3181
  4635  0EC8  2ECA               	goto	u3180
  4636  0EC9  2ECB               u3181:
  4637  0ECA                     	goto	l732
  4638  0ECA  2ED3               u3180:
  4639  0ECB                     	line	38
  4640                           	
  4641                           l2375:	
  4642  0ECB                     	movlw	0FFh
  4643  0ECB  30FF               	andwf	(___xxtofl@arg),f
  4644  0ECC  05FA               	movlw	0FFh
  4645  0ECD  30FF               	andwf	(___xxtofl@arg+1),f
  4646  0ECE  05FB               	movlw	07Fh
  4647  0ECF  307F               	andwf	(___xxtofl@arg+2),f
  4648  0ED0  05FC               	movlw	0FFh
  4649  0ED1  30FF               	andwf	(___xxtofl@arg+3),f
  4650  0ED2  05FD               	
  4651                           l732:	
  4652  0ED3                     	line	39
  4653                           	clrc
  4654  0ED3  1003               	rrf	(___xxtofl@exp),f
  4655  0ED4  0CF9               
  4656                           	line	40
  4657                           	
  4658                           l2377:	
  4659  0ED5                     	movf	(___xxtofl@exp),w
  4660  0ED5  0879               	movwf	(??___xxtofl+0)+0
  4661  0ED6  00F4               	clrf	(??___xxtofl+0)+0+1
  4662  0ED7  01F5               	clrf	(??___xxtofl+0)+0+2
  4663  0ED8  01F6               	clrf	(??___xxtofl+0)+0+3
  4664  0ED9  01F7               	movlw	018h
  4665  0EDA  3018               u3195:
  4666  0EDB                     	clrc
  4667  0EDB  1003               	rlf	(??___xxtofl+0)+0,f
  4668  0EDC  0DF4               	rlf	(??___xxtofl+0)+1,f
  4669  0EDD  0DF5               	rlf	(??___xxtofl+0)+2,f
  4670  0EDE  0DF6               	rlf	(??___xxtofl+0)+3,f
  4671  0EDF  0DF7               u3190:
  4672  0EE0                     	addlw	-1
  4673  0EE0  3EFF               	skipz
  4674  0EE1  1D03               	goto	u3195
  4675  0EE2  2EDB               	movf	0+(??___xxtofl+0)+0,w
  4676  0EE3  0874               	iorwf	(___xxtofl@arg),f
  4677  0EE4  04FA               	movf	1+(??___xxtofl+0)+0,w
  4678  0EE5  0875               	iorwf	(___xxtofl@arg+1),f
  4679  0EE6  04FB               	movf	2+(??___xxtofl+0)+0,w
  4680  0EE7  0876               	iorwf	(___xxtofl@arg+2),f
  4681  0EE8  04FC               	movf	3+(??___xxtofl+0)+0,w
  4682  0EE9  0877               	iorwf	(___xxtofl@arg+3),f
  4683  0EEA  04FD               	line	41
  4684                           	
  4685                           l2379:	
  4686  0EEB                     	movf	((___xxtofl@sign)),w
  4687  0EEB  0878               	btfsc	status,2
  4688  0EEC  1903               	goto	u3201
  4689  0EED  2EEF               	goto	u3200
  4690  0EEE  2EF0               u3201:
  4691  0EEF                     	goto	l2385
  4692  0EEF  2EF6               u3200:
  4693  0EF0                     	
  4694                           l2381:	
  4695  0EF0                     	btfss	(___xxtofl@val+3),7
  4696  0EF0  1FF3               	goto	u3211
  4697  0EF1  2EF3               	goto	u3210
  4698  0EF2  2EF4               u3211:
  4699  0EF3                     	goto	l2385
  4700  0EF3  2EF6               u3210:
  4701  0EF4                     	line	42
  4702                           	
  4703                           l2383:	
  4704  0EF4                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  4705  0EF4  17FD               	goto	l2385
  4706  0EF5  2EF6               	
  4707                           l733:	
  4708  0EF6                     	line	43
  4709                           	
  4710                           l2385:	
  4711  0EF6                     	movf	(___xxtofl@arg+3),w
  4712  0EF6  087D               	movwf	(?___xxtofl+3)
  4713  0EF7  00F3               	movf	(___xxtofl@arg+2),w
  4714  0EF8  087C               	movwf	(?___xxtofl+2)
  4715  0EF9  00F2               	movf	(___xxtofl@arg+1),w
  4716  0EFA  087B               	movwf	(?___xxtofl+1)
  4717  0EFB  00F1               	movf	(___xxtofl@arg),w
  4718  0EFC  087A               	movwf	(?___xxtofl)
  4719  0EFD  00F0               
  4720                           	goto	l720
  4721  0EFE  2EFF               	
  4722                           l2387:	
  4723  0EFF                     	line	44
  4724                           	
  4725                           l720:	
  4726  0EFF                     	return
  4727  0EFF  0008               	opt stack 0
  4728                           GLOBAL	__end_of___xxtofl
  4729                           	__end_of___xxtofl:
  4730  0F00                     	signat	___xxtofl,8316
  4731                           	global	___fltol
  4732                           
  4733 ;; *************** function ___fltol *****************
  4734 ;; Defined at:
  4735 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4736 ;; Parameters:    Size  Location     Type
  4737 ;;  f1              4    0[COMMON] unsigned char 
  4738 ;; Auto vars:     Size  Location     Type
  4739 ;;  exp1            1   10[COMMON] unsigned char 
  4740 ;;  sign1           1    9[COMMON] unsigned char 
  4741 ;; Return value:  Size  Location     Type
  4742 ;;                  4    0[COMMON] long 
  4743 ;; Registers used:
  4744 ;;		wreg, status,2, status,0
  4745 ;; Tracked objects:
  4746 ;;		On entry : 0/0
  4747 ;;		On exit  : 0/0
  4748 ;;		Unchanged: 0/0
  4749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4750 ;;      Params:         4       0       0       0       0
  4751 ;;      Locals:         2       0       0       0       0
  4752 ;;      Temps:          5       0       0       0       0
  4753 ;;      Totals:        11       0       0       0       0
  4754 ;;Total ram usage:       11 bytes
  4755 ;; Hardware stack levels used:    1
  4756 ;; This function calls:
  4757 ;;		Nothing
  4758 ;; This function is called by:
  4759 ;;		_main
  4760 ;; This function uses a non-reentrant model
  4761 ;;
  4762                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  4763                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4764                           	line	43
  4765                           global __ptext16
  4766                           __ptext16:	;psect for function ___fltol
  4767  0DA4                     psect	text16
  4768                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4769                           	line	43
  4770                           	global	__size_of___fltol
  4771                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  4772  009A                     	
  4773                           ___fltol:	
  4774  0DA4                     ;incstack = 0
  4775                           	opt	stack 7
  4776                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4777                           	line	47
  4778                           	
  4779                           l1975:	
  4780  0DA4                     	movf	(___fltol@f1),w
  4781  0DA4  0870               	movwf	(??___fltol+0)+0
  4782  0DA5  00F4               	movf	(___fltol@f1+1),w
  4783  0DA6  0871               	movwf	((??___fltol+0)+0+1)
  4784  0DA7  00F5               	movf	(___fltol@f1+2),w
  4785  0DA8  0872               	movwf	((??___fltol+0)+0+2)
  4786  0DA9  00F6               	movf	(___fltol@f1+3),w
  4787  0DAA  0873               	movwf	((??___fltol+0)+0+3)
  4788  0DAB  00F7               	clrc
  4789  0DAC  1003               	rlf	(??___fltol+0)+2,w
  4790  0DAD  0D76               	rlf	(??___fltol+0)+3,w
  4791  0DAE  0D77               	movwf	(??___fltol+4)+0
  4792  0DAF  00F8               	movf	(??___fltol+4)+0,w
  4793  0DB0  0878               	movwf	(___fltol@exp1)
  4794  0DB1  00FA               	movf	(((___fltol@exp1))),w
  4795  0DB2  087A               	btfss	status,2
  4796  0DB3  1D03               	goto	u2151
  4797  0DB4  2DB6               	goto	u2150
  4798  0DB5  2DB7               u2151:
  4799  0DB6                     	goto	l1981
  4800  0DB6  2DC1               u2150:
  4801  0DB7                     	line	48
  4802                           	
  4803                           l1977:	
  4804  0DB7                     	movlw	high highword(0)
  4805  0DB7  3000               	movwf	(?___fltol+3)
  4806  0DB8  00F3               	movlw	low highword(0)
  4807  0DB9  3000               	movwf	(?___fltol+2)
  4808  0DBA  00F2               	movlw	high(0)
  4809  0DBB  3000               	movwf	(?___fltol+1)
  4810  0DBC  00F1               	movlw	low(0)
  4811  0DBD  3000               	movwf	(?___fltol)
  4812  0DBE  00F0               
  4813                           	goto	l496
  4814  0DBF  2E3D               	
  4815                           l1979:	
  4816  0DC0                     	goto	l496
  4817  0DC0  2E3D               	
  4818                           l495:	
  4819  0DC1                     	line	49
  4820                           	
  4821                           l1981:	
  4822  0DC1                     	movf	(___fltol@f1),w
  4823  0DC1  0870               	movwf	(??___fltol+0)+0
  4824  0DC2  00F4               	movf	(___fltol@f1+1),w
  4825  0DC3  0871               	movwf	((??___fltol+0)+0+1)
  4826  0DC4  00F5               	movf	(___fltol@f1+2),w
  4827  0DC5  0872               	movwf	((??___fltol+0)+0+2)
  4828  0DC6  00F6               	movf	(___fltol@f1+3),w
  4829  0DC7  0873               	movwf	((??___fltol+0)+0+3)
  4830  0DC8  00F7               	movlw	01Fh
  4831  0DC9  301F               u2165:
  4832  0DCA                     	clrc
  4833  0DCA  1003               	rrf	(??___fltol+0)+3,f
  4834  0DCB  0CF7               	rrf	(??___fltol+0)+2,f
  4835  0DCC  0CF6               	rrf	(??___fltol+0)+1,f
  4836  0DCD  0CF5               	rrf	(??___fltol+0)+0,f
  4837  0DCE  0CF4               u2160:
  4838  0DCF                     	addlw	-1
  4839  0DCF  3EFF               	skipz
  4840  0DD0  1D03               	goto	u2165
  4841  0DD1  2DCA               	movf	0+(??___fltol+0)+0,w
  4842  0DD2  0874               	movwf	(??___fltol+4)+0
  4843  0DD3  00F8               	movf	(??___fltol+4)+0,w
  4844  0DD4  0878               	movwf	(___fltol@sign1)
  4845  0DD5  00F9               	line	50
  4846                           	
  4847                           l1983:	
  4848  0DD6                     	bsf	(___fltol@f1)+(23/8),(23)&7
  4849  0DD6  17F2               	line	51
  4850                           	
  4851                           l1985:	
  4852  0DD7                     	movlw	0FFh
  4853  0DD7  30FF               	andwf	(___fltol@f1),f
  4854  0DD8  05F0               	movlw	0FFh
  4855  0DD9  30FF               	andwf	(___fltol@f1+1),f
  4856  0DDA  05F1               	movlw	0FFh
  4857  0DDB  30FF               	andwf	(___fltol@f1+2),f
  4858  0DDC  05F2               	movlw	0
  4859  0DDD  3000               	andwf	(___fltol@f1+3),f
  4860  0DDE  05F3               	line	52
  4861                           	
  4862                           l1987:	
  4863  0DDF                     	movlw	096h
  4864  0DDF  3096               	subwf	(___fltol@exp1),f
  4865  0DE0  02FA               	line	53
  4866                           	
  4867                           l1989:	
  4868  0DE1                     	btfss	(___fltol@exp1),7
  4869  0DE1  1FFA               	goto	u2171
  4870  0DE2  2DE4               	goto	u2170
  4871  0DE3  2DE5               u2171:
  4872  0DE4                     	goto	l1999
  4873  0DE4  2E0A               u2170:
  4874  0DE5                     	line	54
  4875                           	
  4876                           l1991:	
  4877  0DE5                     	movf	(___fltol@exp1),w
  4878  0DE5  087A               	xorlw	80h
  4879  0DE6  3A80               	addlw	-((-23)^80h)
  4880  0DE7  3E97               	skipnc
  4881  0DE8  1803               	goto	u2181
  4882  0DE9  2DEB               	goto	u2180
  4883  0DEA  2DEC               u2181:
  4884  0DEB                     	goto	l1997
  4885  0DEB  2DF7               u2180:
  4886  0DEC                     	line	55
  4887                           	
  4888                           l1993:	
  4889  0DEC                     	movlw	high highword(0)
  4890  0DEC  3000               	movwf	(?___fltol+3)
  4891  0DED  00F3               	movlw	low highword(0)
  4892  0DEE  3000               	movwf	(?___fltol+2)
  4893  0DEF  00F2               	movlw	high(0)
  4894  0DF0  3000               	movwf	(?___fltol+1)
  4895  0DF1  00F1               	movlw	low(0)
  4896  0DF2  3000               	movwf	(?___fltol)
  4897  0DF3  00F0               
  4898                           	goto	l496
  4899  0DF4  2E3D               	
  4900                           l1995:	
  4901  0DF5                     	goto	l496
  4902  0DF5  2E3D               	
  4903                           l498:	
  4904  0DF6                     	goto	l1997
  4905  0DF6  2DF7               	line	56
  4906                           	
  4907                           l499:	
  4908  0DF7                     	line	57
  4909                           	
  4910                           l1997:	
  4911  0DF7                     	movlw	01h
  4912  0DF7  3001               u2195:
  4913  0DF8                     	clrc
  4914  0DF8  1003               	rrf	(___fltol@f1+3),f
  4915  0DF9  0CF3               	rrf	(___fltol@f1+2),f
  4916  0DFA  0CF2               	rrf	(___fltol@f1+1),f
  4917  0DFB  0CF1               	rrf	(___fltol@f1),f
  4918  0DFC  0CF0               	addlw	-1
  4919  0DFD  3EFF               	skipz
  4920  0DFE  1D03               	goto	u2195
  4921  0DFF  2DF8               
  4922                           	line	58
  4923                           	movlw	low(01h)
  4924  0E00  3001               	movwf	(??___fltol+0)+0
  4925  0E01  00F4               	movf	(??___fltol+0)+0,w
  4926  0E02  0874               	addwf	(___fltol@exp1),f
  4927  0E03  07FA               	btfss	status,2
  4928  0E04  1D03               	goto	u2201
  4929  0E05  2E07               	goto	u2200
  4930  0E06  2E08               u2201:
  4931  0E07                     	goto	l1997
  4932  0E07  2DF7               u2200:
  4933  0E08                     	goto	l2007
  4934  0E08  2E2D               	
  4935                           l500:	
  4936  0E09                     	line	59
  4937                           	goto	l2007
  4938  0E09  2E2D               	
  4939                           l497:	
  4940  0E0A                     	line	60
  4941                           	
  4942                           l1999:	
  4943  0E0A                     	movlw	low(020h)
  4944  0E0A  3020               	subwf	(___fltol@exp1),w
  4945  0E0B  027A               	skipc
  4946  0E0C  1C03               	goto	u2211
  4947  0E0D  2E0F               	goto	u2210
  4948  0E0E  2E10               u2211:
  4949  0E0F                     	goto	l503
  4950  0E0F  2E26               u2210:
  4951  0E10                     	line	61
  4952                           	
  4953                           l2001:	
  4954  0E10                     	movlw	high highword(0)
  4955  0E10  3000               	movwf	(?___fltol+3)
  4956  0E11  00F3               	movlw	low highword(0)
  4957  0E12  3000               	movwf	(?___fltol+2)
  4958  0E13  00F2               	movlw	high(0)
  4959  0E14  3000               	movwf	(?___fltol+1)
  4960  0E15  00F1               	movlw	low(0)
  4961  0E16  3000               	movwf	(?___fltol)
  4962  0E17  00F0               
  4963                           	goto	l496
  4964  0E18  2E3D               	
  4965                           l2003:	
  4966  0E19                     	goto	l496
  4967  0E19  2E3D               	
  4968                           l502:	
  4969  0E1A                     	line	62
  4970                           	goto	l503
  4971  0E1A  2E26               	
  4972                           l504:	
  4973  0E1B                     	line	63
  4974                           	
  4975                           l2005:	
  4976  0E1B                     	movlw	01h
  4977  0E1B  3001               	movwf	(??___fltol+0)+0
  4978  0E1C  00F4               u2225:
  4979  0E1D                     	clrc
  4980  0E1D  1003               	rlf	(___fltol@f1),f
  4981  0E1E  0DF0               	rlf	(___fltol@f1+1),f
  4982  0E1F  0DF1               	rlf	(___fltol@f1+2),f
  4983  0E20  0DF2               	rlf	(___fltol@f1+3),f
  4984  0E21  0DF3               	decfsz	(??___fltol+0)+0
  4985  0E22  0BF4               	goto	u2225
  4986  0E23  2E1D               	line	64
  4987                           	movlw	01h
  4988  0E24  3001               	subwf	(___fltol@exp1),f
  4989  0E25  02FA               	line	65
  4990                           	
  4991                           l503:	
  4992  0E26                     	line	62
  4993                           	movf	((___fltol@exp1)),w
  4994  0E26  087A               	btfss	status,2
  4995  0E27  1D03               	goto	u2231
  4996  0E28  2E2A               	goto	u2230
  4997  0E29  2E2B               u2231:
  4998  0E2A                     	goto	l2005
  4999  0E2A  2E1B               u2230:
  5000  0E2B                     	goto	l2007
  5001  0E2B  2E2D               	
  5002                           l505:	
  5003  0E2C                     	goto	l2007
  5004  0E2C  2E2D               	line	66
  5005                           	
  5006                           l501:	
  5007  0E2D                     	line	67
  5008                           	
  5009                           l2007:	
  5010  0E2D                     	movf	((___fltol@sign1)),w
  5011  0E2D  0879               	btfsc	status,2
  5012  0E2E  1903               	goto	u2241
  5013  0E2F  2E31               	goto	u2240
  5014  0E30  2E32               u2241:
  5015  0E31                     	goto	l506
  5016  0E31  2E3D               u2240:
  5017  0E32                     	line	68
  5018                           	
  5019                           l2009:	
  5020  0E32                     	comf	(___fltol@f1),f
  5021  0E32  09F0               	comf	(___fltol@f1+1),f
  5022  0E33  09F1               	comf	(___fltol@f1+2),f
  5023  0E34  09F2               	comf	(___fltol@f1+3),f
  5024  0E35  09F3               	incf	(___fltol@f1),f
  5025  0E36  0AF0               	skipnz
  5026  0E37  1903               	incf	(___fltol@f1+1),f
  5027  0E38  0AF1               	skipnz
  5028  0E39  1903               	incf	(___fltol@f1+2),f
  5029  0E3A  0AF2               	skipnz
  5030  0E3B  1903               	incf	(___fltol@f1+3),f
  5031  0E3C  0AF3               	
  5032                           l506:	
  5033  0E3D                     	line	69
  5034                           	line	70
  5035                           	
  5036                           l496:	
  5037  0E3D                     	return
  5038  0E3D  0008               	opt stack 0
  5039                           GLOBAL	__end_of___fltol
  5040                           	__end_of___fltol:
  5041  0E3E                     	signat	___fltol,4220
  5042                           	global	___flneg
  5043                           
  5044 ;; *************** function ___flneg *****************
  5045 ;; Defined at:
  5046 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5047 ;; Parameters:    Size  Location     Type
  5048 ;;  f1              4    0[BANK0 ] long 
  5049 ;; Auto vars:     Size  Location     Type
  5050 ;;		None
  5051 ;; Return value:  Size  Location     Type
  5052 ;;                  4    0[BANK0 ] long 
  5053 ;; Registers used:
  5054 ;;		wreg
  5055 ;; Tracked objects:
  5056 ;;		On entry : 0/0
  5057 ;;		On exit  : 0/0
  5058 ;;		Unchanged: 0/0
  5059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5060 ;;      Params:         0       4       0       0       0
  5061 ;;      Locals:         0       0       0       0       0
  5062 ;;      Temps:          0       0       0       0       0
  5063 ;;      Totals:         0       4       0       0       0
  5064 ;;Total ram usage:        4 bytes
  5065 ;; Hardware stack levels used:    1
  5066 ;; This function calls:
  5067 ;;		Nothing
  5068 ;; This function is called by:
  5069 ;;		_main
  5070 ;; This function uses a non-reentrant model
  5071 ;;
  5072                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5073                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5074                           	line	15
  5075                           global __ptext17
  5076                           __ptext17:	;psect for function ___flneg
  5077  0A5C                     psect	text17
  5078                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5079                           	line	15
  5080                           	global	__size_of___flneg
  5081                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  5082  000F                     	
  5083                           ___flneg:	
  5084  0A5C                     ;incstack = 0
  5085                           	opt	stack 7
  5086                           ; Regs used in ___flneg: [wreg]
  5087                           	line	17
  5088                           	
  5089                           l1967:	
  5090  0A5C                     	bcf	status, 5	;RP0=0, select bank0
  5091  0A5C  1283               	bcf	status, 6	;RP1=0, select bank0
  5092  0A5D  1303               	movf	(___flneg@f1+3),w
  5093  0A5E  0823               	iorwf	(___flneg@f1+2),w
  5094  0A5F  0422               	iorwf	(___flneg@f1+1),w
  5095  0A60  0421               	iorwf	(___flneg@f1),w
  5096  0A61  0420               	skipnz
  5097  0A62  1903               	goto	u2141
  5098  0A63  2A65               	goto	u2140
  5099  0A64  2A66               u2141:
  5100  0A65                     	goto	l1971
  5101  0A65  2A69               u2140:
  5102  0A66                     	line	18
  5103                           	
  5104                           l1969:	
  5105  0A66                     	movlw	080h
  5106  0A66  3080               	xorwf	(___flneg@f1+3),f
  5107  0A67  06A3               	goto	l1971
  5108  0A68  2A69               	
  5109                           l491:	
  5110  0A69                     	line	19
  5111                           	
  5112                           l1971:	
  5113  0A69                     	goto	l492
  5114  0A69  2A6A               	
  5115                           l1973:	
  5116  0A6A                     	line	20
  5117                           	
  5118                           l492:	
  5119  0A6A                     	return
  5120  0A6A  0008               	opt stack 0
  5121                           GLOBAL	__end_of___flneg
  5122                           	__end_of___flneg:
  5123  0A6B                     	signat	___flneg,4220
  5124                           	global	___flmul
  5125                           
  5126 ;; *************** function ___flmul *****************
  5127 ;; Defined at:
  5128 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5129 ;; Parameters:    Size  Location     Type
  5130 ;;  b               4   28[BANK0 ] long 
  5131 ;;  a               4   32[BANK0 ] long 
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;  prod            4   48[BANK0 ] struct .
  5134 ;;  grs             4   42[BANK0 ] unsigned long 
  5135 ;;  temp            2   52[BANK0 ] struct .
  5136 ;;  bexp            1   47[BANK0 ] unsigned char 
  5137 ;;  aexp            1   46[BANK0 ] unsigned char 
  5138 ;;  sign            1   41[BANK0 ] unsigned char 
  5139 ;; Return value:  Size  Location     Type
  5140 ;;                  4   28[BANK0 ] unsigned char 
  5141 ;; Registers used:
  5142 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5143 ;; Tracked objects:
  5144 ;;		On entry : 0/0
  5145 ;;		On exit  : 0/0
  5146 ;;		Unchanged: 0/0
  5147 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5148 ;;      Params:         0       8       0       0       0
  5149 ;;      Locals:         0      13       0       0       0
  5150 ;;      Temps:          0       5       0       0       0
  5151 ;;      Totals:         0      26       0       0       0
  5152 ;;Total ram usage:       26 bytes
  5153 ;; Hardware stack levels used:    1
  5154 ;; Hardware stack levels required when called:    1
  5155 ;; This function calls:
  5156 ;;		__Umul8_16
  5157 ;; This function is called by:
  5158 ;;		_main
  5159 ;; This function uses a non-reentrant model
  5160 ;;
  5161                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5162                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5163                           	line	8
  5164                           global __ptext18
  5165                           __ptext18:	;psect for function ___flmul
  5166  0476                     psect	text18
  5167                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5168                           	line	8
  5169                           	global	__size_of___flmul
  5170                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  5171  0375                     	
  5172                           ___flmul:	
  5173  0476                     ;incstack = 0
  5174                           	opt	stack 6
  5175                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5176                           	line	17
  5177                           	
  5178                           l2205:	
  5179  0476                     	bcf	status, 5	;RP0=0, select bank0
  5180  0476  1283               	bcf	status, 6	;RP1=0, select bank0
  5181  0477  1303               	movf	0+(___flmul@b)+03h,w
  5182  0478  083F               	andlw	080h
  5183  0479  3980               	movwf	(??___flmul+0)+0
  5184  047A  00C4               	movf	(??___flmul+0)+0,w
  5185  047B  0844               	movwf	(___flmul@sign)
  5186  047C  00C9               	line	18
  5187                           	
  5188                           l2207:	
  5189  047D                     	movf	0+(___flmul@b)+03h,w
  5190  047D  083F               	movwf	(??___flmul+0)+0
  5191  047E  00C4               	addwf	(??___flmul+0)+0,w
  5192  047F  0744               	movwf	(??___flmul+1)+0
  5193  0480  00C5               	movf	(??___flmul+1)+0,w
  5194  0481  0845               	movwf	(___flmul@bexp)
  5195  0482  00CF               	line	19
  5196                           	
  5197                           l2209:	
  5198  0483                     	btfss	0+(___flmul@b)+02h,(7)&7
  5199  0483  1FBE               	goto	u2711
  5200  0484  2C86               	goto	u2710
  5201  0485  2C87               u2711:
  5202  0486                     	goto	l2213
  5203  0486  2C89               u2710:
  5204  0487                     	line	20
  5205                           	
  5206                           l2211:	
  5207  0487                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  5208  0487  144F               	goto	l2213
  5209  0488  2C89               	line	21
  5210                           	
  5211                           l688:	
  5212  0489                     	line	24
  5213                           	
  5214                           l2213:	
  5215  0489                     	movf	((___flmul@bexp)),w
  5216  0489  084F               	btfsc	status,2
  5217  048A  1903               	goto	u2721
  5218  048B  2C8D               	goto	u2720
  5219  048C  2C8E               u2721:
  5220  048D                     	goto	l2221
  5221  048D  2C9E               u2720:
  5222  048E                     	line	26
  5223                           	
  5224                           l2215:	
  5225  048E                     		incf	((___flmul@bexp)),w
  5226  048E  0A4F               	btfss	status,2
  5227  048F  1D03               	goto	u2731
  5228  0490  2C92               	goto	u2730
  5229  0491  2C93               u2731:
  5230  0492                     	goto	l2219
  5231  0492  2C9C               u2730:
  5232  0493                     	line	28
  5233                           	
  5234                           l2217:	
  5235  0493                     	movlw	0x0
  5236  0493  3000               	movwf	(___flmul@b+3)
  5237  0494  00BF               	movlw	0x0
  5238  0495  3000               	movwf	(___flmul@b+2)
  5239  0496  00BE               	movlw	0x0
  5240  0497  3000               	movwf	(___flmul@b+1)
  5241  0498  00BD               	movlw	0x0
  5242  0499  3000               	movwf	(___flmul@b)
  5243  049A  00BC               
  5244                           	goto	l2219
  5245  049B  2C9C               	line	29
  5246                           	
  5247                           l690:	
  5248  049C                     	line	31
  5249                           	
  5250                           l2219:	
  5251  049C                     	bsf	(___flmul@b)+(23/8),(23)&7
  5252  049C  17BE               	line	33
  5253                           	goto	l2223
  5254  049D  2CA7               	line	34
  5255                           	
  5256                           l689:	
  5257  049E                     	line	36
  5258                           	
  5259                           l2221:	
  5260  049E                     	movlw	0x0
  5261  049E  3000               	movwf	(___flmul@b+3)
  5262  049F  00BF               	movlw	0x0
  5263  04A0  3000               	movwf	(___flmul@b+2)
  5264  04A1  00BE               	movlw	0x0
  5265  04A2  3000               	movwf	(___flmul@b+1)
  5266  04A3  00BD               	movlw	0x0
  5267  04A4  3000               	movwf	(___flmul@b)
  5268  04A5  00BC               
  5269                           	goto	l2223
  5270  04A6  2CA7               	line	37
  5271                           	
  5272                           l691:	
  5273  04A7                     	line	39
  5274                           	
  5275                           l2223:	
  5276  04A7                     	movf	0+(___flmul@a)+03h,w
  5277  04A7  0843               	andlw	080h
  5278  04A8  3980               	movwf	(??___flmul+0)+0
  5279  04A9  00C4               	movf	(??___flmul+0)+0,w
  5280  04AA  0844               	xorwf	(___flmul@sign),f
  5281  04AB  06C9               	line	40
  5282                           	
  5283                           l2225:	
  5284  04AC                     	movf	0+(___flmul@a)+03h,w
  5285  04AC  0843               	movwf	(??___flmul+0)+0
  5286  04AD  00C4               	addwf	(??___flmul+0)+0,w
  5287  04AE  0744               	movwf	(??___flmul+1)+0
  5288  04AF  00C5               	movf	(??___flmul+1)+0,w
  5289  04B0  0845               	movwf	(___flmul@aexp)
  5290  04B1  00CE               	line	41
  5291                           	
  5292                           l2227:	
  5293  04B2                     	btfss	0+(___flmul@a)+02h,(7)&7
  5294  04B2  1FC2               	goto	u2741
  5295  04B3  2CB5               	goto	u2740
  5296  04B4  2CB6               u2741:
  5297  04B5                     	goto	l2231
  5298  04B5  2CB8               u2740:
  5299  04B6                     	line	42
  5300                           	
  5301                           l2229:	
  5302  04B6                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  5303  04B6  144E               	goto	l2231
  5304  04B7  2CB8               	line	43
  5305                           	
  5306                           l692:	
  5307  04B8                     	line	45
  5308                           	
  5309                           l2231:	
  5310  04B8                     	movf	((___flmul@aexp)),w
  5311  04B8  084E               	btfsc	status,2
  5312  04B9  1903               	goto	u2751
  5313  04BA  2CBC               	goto	u2750
  5314  04BB  2CBD               u2751:
  5315  04BC                     	goto	l2239
  5316  04BC  2CCD               u2750:
  5317  04BD                     	line	48
  5318                           	
  5319                           l2233:	
  5320  04BD                     		incf	((___flmul@aexp)),w
  5321  04BD  0A4E               	btfss	status,2
  5322  04BE  1D03               	goto	u2761
  5323  04BF  2CC1               	goto	u2760
  5324  04C0  2CC2               u2761:
  5325  04C1                     	goto	l2237
  5326  04C1  2CCB               u2760:
  5327  04C2                     	line	50
  5328                           	
  5329                           l2235:	
  5330  04C2                     	movlw	0x0
  5331  04C2  3000               	movwf	(___flmul@a+3)
  5332  04C3  00C3               	movlw	0x0
  5333  04C4  3000               	movwf	(___flmul@a+2)
  5334  04C5  00C2               	movlw	0x0
  5335  04C6  3000               	movwf	(___flmul@a+1)
  5336  04C7  00C1               	movlw	0x0
  5337  04C8  3000               	movwf	(___flmul@a)
  5338  04C9  00C0               
  5339                           	goto	l2237
  5340  04CA  2CCB               	line	51
  5341                           	
  5342                           l694:	
  5343  04CB                     	line	53
  5344                           	
  5345                           l2237:	
  5346  04CB                     	bsf	(___flmul@a)+(23/8),(23)&7
  5347  04CB  17C2               	line	54
  5348                           	goto	l2241
  5349  04CC  2CD6               	line	55
  5350                           	
  5351                           l693:	
  5352  04CD                     	line	57
  5353                           	
  5354                           l2239:	
  5355  04CD                     	movlw	0x0
  5356  04CD  3000               	movwf	(___flmul@a+3)
  5357  04CE  00C3               	movlw	0x0
  5358  04CF  3000               	movwf	(___flmul@a+2)
  5359  04D0  00C2               	movlw	0x0
  5360  04D1  3000               	movwf	(___flmul@a+1)
  5361  04D2  00C1               	movlw	0x0
  5362  04D3  3000               	movwf	(___flmul@a)
  5363  04D4  00C0               
  5364                           	goto	l2241
  5365  04D5  2CD6               	line	58
  5366                           	
  5367                           l695:	
  5368  04D6                     	line	65
  5369                           	
  5370                           l2241:	
  5371  04D6                     	movf	((___flmul@aexp)),w
  5372  04D6  084E               	btfsc	status,2
  5373  04D7  1903               	goto	u2771
  5374  04D8  2CDA               	goto	u2770
  5375  04D9  2CDB               u2771:
  5376  04DA                     	goto	l2245
  5377  04DA  2CE1               u2770:
  5378  04DB                     	
  5379                           l2243:	
  5380  04DB                     	movf	((___flmul@bexp)),w
  5381  04DB  084F               	btfss	status,2
  5382  04DC  1D03               	goto	u2781
  5383  04DD  2CDF               	goto	u2780
  5384  04DE  2CE0               u2781:
  5385  04DF                     	goto	l2249
  5386  04DF  2CEB               u2780:
  5387  04E0                     	goto	l2245
  5388  04E0  2CE1               	
  5389                           l698:	
  5390  04E1                     	line	66
  5391                           	
  5392                           l2245:	
  5393  04E1                     	movlw	0x0
  5394  04E1  3000               	movwf	(?___flmul+3)
  5395  04E2  00BF               	movlw	0x0
  5396  04E3  3000               	movwf	(?___flmul+2)
  5397  04E4  00BE               	movlw	0x0
  5398  04E5  3000               	movwf	(?___flmul+1)
  5399  04E6  00BD               	movlw	0x0
  5400  04E7  3000               	movwf	(?___flmul)
  5401  04E8  00BC               
  5402                           	goto	l699
  5403  04E9  2FEA               	
  5404                           l2247:	
  5405  04EA                     	goto	l699
  5406  04EA  2FEA               	line	67
  5407                           	
  5408                           l696:	
  5409  04EB                     	line	119
  5410                           	
  5411                           l2249:	
  5412  04EB                     	movf	(___flmul@b),w
  5413  04EB  083C               	movwf	(??___flmul+0)+0
  5414  04EC  00C4               	movf	(??___flmul+0)+0,w
  5415  04ED  0844               	movwf	(__Umul8_16@multiplicand)
  5416  04EE  00F0               	movf	0+(___flmul@a)+02h,w
  5417  04EF  0842               	fcall	__Umul8_16
  5418  04F0  120A  158A  22C9  120A  118A  	movf	(1+(?__Umul8_16)),w
  5419  04F5  0871               	bcf	status, 5	;RP0=0, select bank0
  5420  04F6  1283               	bcf	status, 6	;RP1=0, select bank0
  5421  04F7  1303               	movwf	(___flmul@temp+1)
  5422  04F8  00D5               	movf	(0+(?__Umul8_16)),w
  5423  04F9  0870               	movwf	(___flmul@temp)
  5424  04FA  00D4               	line	120
  5425                           	
  5426                           l2251:	
  5427  04FB                     	movf	(___flmul@temp),w
  5428  04FB  0854               	movwf	(??___flmul+0)+0
  5429  04FC  00C4               	clrf	(??___flmul+0)+0+1
  5430  04FD  01C5               	clrf	(??___flmul+0)+0+2
  5431  04FE  01C6               	clrf	(??___flmul+0)+0+3
  5432  04FF  01C7               	movf	3+(??___flmul+0)+0,w
  5433  0500  0847               	movwf	(___flmul@grs+3)
  5434  0501  00CD               	movf	2+(??___flmul+0)+0,w
  5435  0502  0846               	movwf	(___flmul@grs+2)
  5436  0503  00CC               	movf	1+(??___flmul+0)+0,w
  5437  0504  0845               	movwf	(___flmul@grs+1)
  5438  0505  00CB               	movf	0+(??___flmul+0)+0,w
  5439  0506  0844               	movwf	(___flmul@grs)
  5440  0507  00CA               
  5441                           	line	121
  5442                           	
  5443                           l2253:	
  5444  0508                     	movf	0+(___flmul@temp)+01h,w
  5445  0508  0855               	movwf	(??___flmul+0)+0
  5446  0509  00C4               	clrf	(??___flmul+0)+0+1
  5447  050A  01C5               	clrf	(??___flmul+0)+0+2
  5448  050B  01C6               	clrf	(??___flmul+0)+0+3
  5449  050C  01C7               	movf	3+(??___flmul+0)+0,w
  5450  050D  0847               	movwf	(___flmul@prod+3)
  5451  050E  00D3               	movf	2+(??___flmul+0)+0,w
  5452  050F  0846               	movwf	(___flmul@prod+2)
  5453  0510  00D2               	movf	1+(??___flmul+0)+0,w
  5454  0511  0845               	movwf	(___flmul@prod+1)
  5455  0512  00D1               	movf	0+(??___flmul+0)+0,w
  5456  0513  0844               	movwf	(___flmul@prod)
  5457  0514  00D0               
  5458                           	line	122
  5459                           	movf	0+(___flmul@b)+01h,w
  5460  0515  083D               	movwf	(??___flmul+0)+0
  5461  0516  00C4               	movf	(??___flmul+0)+0,w
  5462  0517  0844               	movwf	(__Umul8_16@multiplicand)
  5463  0518  00F0               	movf	0+(___flmul@a)+01h,w
  5464  0519  0841               	fcall	__Umul8_16
  5465  051A  120A  158A  22C9  120A  118A  	movf	(1+(?__Umul8_16)),w
  5466  051F  0871               	bcf	status, 5	;RP0=0, select bank0
  5467  0520  1283               	bcf	status, 6	;RP1=0, select bank0
  5468  0521  1303               	movwf	(___flmul@temp+1)
  5469  0522  00D5               	movf	(0+(?__Umul8_16)),w
  5470  0523  0870               	movwf	(___flmul@temp)
  5471  0524  00D4               	line	123
  5472                           	
  5473                           l2255:	
  5474  0525                     	movf	(___flmul@temp),w
  5475  0525  0854               	movwf	(??___flmul+0)+0
  5476  0526  00C4               	clrf	(??___flmul+0)+0+1
  5477  0527  01C5               	clrf	(??___flmul+0)+0+2
  5478  0528  01C6               	clrf	(??___flmul+0)+0+3
  5479  0529  01C7               	movf	0+(??___flmul+0)+0,w
  5480  052A  0844               	addwf	(___flmul@grs),f
  5481  052B  07CA               	movf	1+(??___flmul+0)+0,w
  5482  052C  0845               	clrz
  5483  052D  1103               	skipnc
  5484  052E  1803               	addlw	1
  5485  052F  3E01               	skipnz
  5486  0530  1903               	goto	u2791
  5487  0531  2D33               	addwf	(___flmul@grs+1),f
  5488  0532  07CB               u2791:
  5489  0533                     	movf	2+(??___flmul+0)+0,w
  5490  0533  0846               	clrz
  5491  0534  1103               	skipnc
  5492  0535  1803               	addlw	1
  5493  0536  3E01               	skipnz
  5494  0537  1903               	goto	u2792
  5495  0538  2D3A               	addwf	(___flmul@grs+2),f
  5496  0539  07CC               u2792:
  5497  053A                     	movf	3+(??___flmul+0)+0,w
  5498  053A  0847               	clrz
  5499  053B  1103               	skipnc
  5500  053C  1803               	addlw	1
  5501  053D  3E01               	skipnz
  5502  053E  1903               	goto	u2793
  5503  053F  2D41               	addwf	(___flmul@grs+3),f
  5504  0540  07CD               u2793:
  5505  0541                     
  5506                           	line	124
  5507                           	
  5508                           l2257:	
  5509  0541                     	movf	0+(___flmul@temp)+01h,w
  5510  0541  0855               	movwf	(??___flmul+0)+0
  5511  0542  00C4               	clrf	(??___flmul+0)+0+1
  5512  0543  01C5               	clrf	(??___flmul+0)+0+2
  5513  0544  01C6               	clrf	(??___flmul+0)+0+3
  5514  0545  01C7               	movf	0+(??___flmul+0)+0,w
  5515  0546  0844               	addwf	(___flmul@prod),f
  5516  0547  07D0               	movf	1+(??___flmul+0)+0,w
  5517  0548  0845               	clrz
  5518  0549  1103               	skipnc
  5519  054A  1803               	addlw	1
  5520  054B  3E01               	skipnz
  5521  054C  1903               	goto	u2801
  5522  054D  2D4F               	addwf	(___flmul@prod+1),f
  5523  054E  07D1               u2801:
  5524  054F                     	movf	2+(??___flmul+0)+0,w
  5525  054F  0846               	clrz
  5526  0550  1103               	skipnc
  5527  0551  1803               	addlw	1
  5528  0552  3E01               	skipnz
  5529  0553  1903               	goto	u2802
  5530  0554  2D56               	addwf	(___flmul@prod+2),f
  5531  0555  07D2               u2802:
  5532  0556                     	movf	3+(??___flmul+0)+0,w
  5533  0556  0847               	clrz
  5534  0557  1103               	skipnc
  5535  0558  1803               	addlw	1
  5536  0559  3E01               	skipnz
  5537  055A  1903               	goto	u2803
  5538  055B  2D5D               	addwf	(___flmul@prod+3),f
  5539  055C  07D3               u2803:
  5540  055D                     
  5541                           	line	125
  5542                           	movf	0+(___flmul@b)+02h,w
  5543  055D  083E               	movwf	(??___flmul+0)+0
  5544  055E  00C4               	movf	(??___flmul+0)+0,w
  5545  055F  0844               	movwf	(__Umul8_16@multiplicand)
  5546  0560  00F0               	movf	(___flmul@a),w
  5547  0561  0840               	fcall	__Umul8_16
  5548  0562  120A  158A  22C9  120A  118A  	movf	(1+(?__Umul8_16)),w
  5549  0567  0871               	bcf	status, 5	;RP0=0, select bank0
  5550  0568  1283               	bcf	status, 6	;RP1=0, select bank0
  5551  0569  1303               	movwf	(___flmul@temp+1)
  5552  056A  00D5               	movf	(0+(?__Umul8_16)),w
  5553  056B  0870               	movwf	(___flmul@temp)
  5554  056C  00D4               	line	126
  5555                           	
  5556                           l2259:	
  5557  056D                     	movf	(___flmul@temp),w
  5558  056D  0854               	movwf	(??___flmul+0)+0
  5559  056E  00C4               	clrf	(??___flmul+0)+0+1
  5560  056F  01C5               	clrf	(??___flmul+0)+0+2
  5561  0570  01C6               	clrf	(??___flmul+0)+0+3
  5562  0571  01C7               	movf	0+(??___flmul+0)+0,w
  5563  0572  0844               	addwf	(___flmul@grs),f
  5564  0573  07CA               	movf	1+(??___flmul+0)+0,w
  5565  0574  0845               	clrz
  5566  0575  1103               	skipnc
  5567  0576  1803               	addlw	1
  5568  0577  3E01               	skipnz
  5569  0578  1903               	goto	u2811
  5570  0579  2D7B               	addwf	(___flmul@grs+1),f
  5571  057A  07CB               u2811:
  5572  057B                     	movf	2+(??___flmul+0)+0,w
  5573  057B  0846               	clrz
  5574  057C  1103               	skipnc
  5575  057D  1803               	addlw	1
  5576  057E  3E01               	skipnz
  5577  057F  1903               	goto	u2812
  5578  0580  2D82               	addwf	(___flmul@grs+2),f
  5579  0581  07CC               u2812:
  5580  0582                     	movf	3+(??___flmul+0)+0,w
  5581  0582  0847               	clrz
  5582  0583  1103               	skipnc
  5583  0584  1803               	addlw	1
  5584  0585  3E01               	skipnz
  5585  0586  1903               	goto	u2813
  5586  0587  2D89               	addwf	(___flmul@grs+3),f
  5587  0588  07CD               u2813:
  5588  0589                     
  5589                           	line	127
  5590                           	
  5591                           l2261:	
  5592  0589                     	movf	0+(___flmul@temp)+01h,w
  5593  0589  0855               	movwf	(??___flmul+0)+0
  5594  058A  00C4               	clrf	(??___flmul+0)+0+1
  5595  058B  01C5               	clrf	(??___flmul+0)+0+2
  5596  058C  01C6               	clrf	(??___flmul+0)+0+3
  5597  058D  01C7               	movf	0+(??___flmul+0)+0,w
  5598  058E  0844               	addwf	(___flmul@prod),f
  5599  058F  07D0               	movf	1+(??___flmul+0)+0,w
  5600  0590  0845               	clrz
  5601  0591  1103               	skipnc
  5602  0592  1803               	addlw	1
  5603  0593  3E01               	skipnz
  5604  0594  1903               	goto	u2821
  5605  0595  2D97               	addwf	(___flmul@prod+1),f
  5606  0596  07D1               u2821:
  5607  0597                     	movf	2+(??___flmul+0)+0,w
  5608  0597  0846               	clrz
  5609  0598  1103               	skipnc
  5610  0599  1803               	addlw	1
  5611  059A  3E01               	skipnz
  5612  059B  1903               	goto	u2822
  5613  059C  2D9E               	addwf	(___flmul@prod+2),f
  5614  059D  07D2               u2822:
  5615  059E                     	movf	3+(??___flmul+0)+0,w
  5616  059E  0847               	clrz
  5617  059F  1103               	skipnc
  5618  05A0  1803               	addlw	1
  5619  05A1  3E01               	skipnz
  5620  05A2  1903               	goto	u2823
  5621  05A3  2DA5               	addwf	(___flmul@prod+3),f
  5622  05A4  07D3               u2823:
  5623  05A5                     
  5624                           	line	128
  5625                           	
  5626                           l2263:	
  5627  05A5                     	movlw	08h
  5628  05A5  3008               	movwf	(??___flmul+0)+0
  5629  05A6  00C4               u2835:
  5630  05A7                     	clrc
  5631  05A7  1003               	rlf	(___flmul@grs),f
  5632  05A8  0DCA               	rlf	(___flmul@grs+1),f
  5633  05A9  0DCB               	rlf	(___flmul@grs+2),f
  5634  05AA  0DCC               	rlf	(___flmul@grs+3),f
  5635  05AB  0DCD               	decfsz	(??___flmul+0)+0
  5636  05AC  0BC4               	goto	u2835
  5637  05AD  2DA7               	line	129
  5638                           	
  5639                           l2265:	
  5640  05AE                     	movf	0+(___flmul@b)+01h,w
  5641  05AE  083D               	movwf	(??___flmul+0)+0
  5642  05AF  00C4               	movf	(??___flmul+0)+0,w
  5643  05B0  0844               	movwf	(__Umul8_16@multiplicand)
  5644  05B1  00F0               	movf	(___flmul@a),w
  5645  05B2  0840               	fcall	__Umul8_16
  5646  05B3  120A  158A  22C9  120A  118A  	movf	(1+(?__Umul8_16)),w
  5647  05B8  0871               	bcf	status, 5	;RP0=0, select bank0
  5648  05B9  1283               	bcf	status, 6	;RP1=0, select bank0
  5649  05BA  1303               	movwf	(___flmul@temp+1)
  5650  05BB  00D5               	movf	(0+(?__Umul8_16)),w
  5651  05BC  0870               	movwf	(___flmul@temp)
  5652  05BD  00D4               	line	130
  5653                           	
  5654                           l2267:	
  5655  05BE                     	movf	(___flmul@temp),w
  5656  05BE  0854               	movwf	((??___flmul+0)+0)
  5657  05BF  00C4               	movf	(___flmul@temp+1),w
  5658  05C0  0855               	movwf	((??___flmul+0)+0+1)
  5659  05C1  00C5               	clrf	((??___flmul+0)+0+2)
  5660  05C2  01C6               	clrf	((??___flmul+0)+0+3)
  5661  05C3  01C7               	movf	0+(??___flmul+0)+0,w
  5662  05C4  0844               	addwf	(___flmul@grs),f
  5663  05C5  07CA               	movf	1+(??___flmul+0)+0,w
  5664  05C6  0845               	clrz
  5665  05C7  1103               	skipnc
  5666  05C8  1803               	addlw	1
  5667  05C9  3E01               	skipnz
  5668  05CA  1903               	goto	u2841
  5669  05CB  2DCD               	addwf	(___flmul@grs+1),f
  5670  05CC  07CB               u2841:
  5671  05CD                     	movf	2+(??___flmul+0)+0,w
  5672  05CD  0846               	clrz
  5673  05CE  1103               	skipnc
  5674  05CF  1803               	addlw	1
  5675  05D0  3E01               	skipnz
  5676  05D1  1903               	goto	u2842
  5677  05D2  2DD4               	addwf	(___flmul@grs+2),f
  5678  05D3  07CC               u2842:
  5679  05D4                     	movf	3+(??___flmul+0)+0,w
  5680  05D4  0847               	clrz
  5681  05D5  1103               	skipnc
  5682  05D6  1803               	addlw	1
  5683  05D7  3E01               	skipnz
  5684  05D8  1903               	goto	u2843
  5685  05D9  2DDB               	addwf	(___flmul@grs+3),f
  5686  05DA  07CD               u2843:
  5687  05DB                     
  5688                           	line	131
  5689                           	
  5690                           l2269:	
  5691  05DB                     	movf	(___flmul@b),w
  5692  05DB  083C               	movwf	(??___flmul+0)+0
  5693  05DC  00C4               	movf	(??___flmul+0)+0,w
  5694  05DD  0844               	movwf	(__Umul8_16@multiplicand)
  5695  05DE  00F0               	movf	0+(___flmul@a)+01h,w
  5696  05DF  0841               	fcall	__Umul8_16
  5697  05E0  120A  158A  22C9  120A  118A  	movf	(1+(?__Umul8_16)),w
  5698  05E5  0871               	bcf	status, 5	;RP0=0, select bank0
  5699  05E6  1283               	bcf	status, 6	;RP1=0, select bank0
  5700  05E7  1303               	movwf	(___flmul@temp+1)
  5701  05E8  00D5               	movf	(0+(?__Umul8_16)),w
  5702  05E9  0870               	movwf	(___flmul@temp)
  5703  05EA  00D4               	line	132
  5704                           	
  5705                           l2271:	
  5706  05EB                     	movf	(___flmul@temp),w
  5707  05EB  0854               	movwf	((??___flmul+0)+0)
  5708  05EC  00C4               	movf	(___flmul@temp+1),w
  5709  05ED  0855               	movwf	((??___flmul+0)+0+1)
  5710  05EE  00C5               	clrf	((??___flmul+0)+0+2)
  5711  05EF  01C6               	clrf	((??___flmul+0)+0+3)
  5712  05F0  01C7               	movf	0+(??___flmul+0)+0,w
  5713  05F1  0844               	addwf	(___flmul@grs),f
  5714  05F2  07CA               	movf	1+(??___flmul+0)+0,w
  5715  05F3  0845               	clrz
  5716  05F4  1103               	skipnc
  5717  05F5  1803               	addlw	1
  5718  05F6  3E01               	skipnz
  5719  05F7  1903               	goto	u2851
  5720  05F8  2DFA               	addwf	(___flmul@grs+1),f
  5721  05F9  07CB               u2851:
  5722  05FA                     	movf	2+(??___flmul+0)+0,w
  5723  05FA  0846               	clrz
  5724  05FB  1103               	skipnc
  5725  05FC  1803               	addlw	1
  5726  05FD  3E01               	skipnz
  5727  05FE  1903               	goto	u2852
  5728  05FF  2E01               	addwf	(___flmul@grs+2),f
  5729  0600  07CC               u2852:
  5730  0601                     	movf	3+(??___flmul+0)+0,w
  5731  0601  0847               	clrz
  5732  0602  1103               	skipnc
  5733  0603  1803               	addlw	1
  5734  0604  3E01               	skipnz
  5735  0605  1903               	goto	u2853
  5736  0606  2E08               	addwf	(___flmul@grs+3),f
  5737  0607  07CD               u2853:
  5738  0608                     
  5739                           	line	133
  5740                           	
  5741                           l2273:	
  5742  0608                     	movlw	08h
  5743  0608  3008               	movwf	(??___flmul+0)+0
  5744  0609  00C4               u2865:
  5745  060A                     	clrc
  5746  060A  1003               	rlf	(___flmul@grs),f
  5747  060B  0DCA               	rlf	(___flmul@grs+1),f
  5748  060C  0DCB               	rlf	(___flmul@grs+2),f
  5749  060D  0DCC               	rlf	(___flmul@grs+3),f
  5750  060E  0DCD               	decfsz	(??___flmul+0)+0
  5751  060F  0BC4               	goto	u2865
  5752  0610  2E0A               	line	134
  5753                           	movf	(___flmul@b),w
  5754  0611  083C               	movwf	(??___flmul+0)+0
  5755  0612  00C4               	movf	(??___flmul+0)+0,w
  5756  0613  0844               	movwf	(__Umul8_16@multiplicand)
  5757  0614  00F0               	movf	(___flmul@a),w
  5758  0615  0840               	fcall	__Umul8_16
  5759  0616  120A  158A  22C9  120A  118A  	movf	(1+(?__Umul8_16)),w
  5760  061B  0871               	bcf	status, 5	;RP0=0, select bank0
  5761  061C  1283               	bcf	status, 6	;RP1=0, select bank0
  5762  061D  1303               	movwf	(___flmul@temp+1)
  5763  061E  00D5               	movf	(0+(?__Umul8_16)),w
  5764  061F  0870               	movwf	(___flmul@temp)
  5765  0620  00D4               	line	135
  5766                           	
  5767                           l2275:	
  5768  0621                     	movf	(___flmul@temp),w
  5769  0621  0854               	movwf	((??___flmul+0)+0)
  5770  0622  00C4               	movf	(___flmul@temp+1),w
  5771  0623  0855               	movwf	((??___flmul+0)+0+1)
  5772  0624  00C5               	clrf	((??___flmul+0)+0+2)
  5773  0625  01C6               	clrf	((??___flmul+0)+0+3)
  5774  0626  01C7               	movf	0+(??___flmul+0)+0,w
  5775  0627  0844               	addwf	(___flmul@grs),f
  5776  0628  07CA               	movf	1+(??___flmul+0)+0,w
  5777  0629  0845               	clrz
  5778  062A  1103               	skipnc
  5779  062B  1803               	addlw	1
  5780  062C  3E01               	skipnz
  5781  062D  1903               	goto	u2871
  5782  062E  2E30               	addwf	(___flmul@grs+1),f
  5783  062F  07CB               u2871:
  5784  0630                     	movf	2+(??___flmul+0)+0,w
  5785  0630  0846               	clrz
  5786  0631  1103               	skipnc
  5787  0632  1803               	addlw	1
  5788  0633  3E01               	skipnz
  5789  0634  1903               	goto	u2872
  5790  0635  2E37               	addwf	(___flmul@grs+2),f
  5791  0636  07CC               u2872:
  5792  0637                     	movf	3+(??___flmul+0)+0,w
  5793  0637  0847               	clrz
  5794  0638  1103               	skipnc
  5795  0639  1803               	addlw	1
  5796  063A  3E01               	skipnz
  5797  063B  1903               	goto	u2873
  5798  063C  2E3E               	addwf	(___flmul@grs+3),f
  5799  063D  07CD               u2873:
  5800  063E                     
  5801                           	line	136
  5802                           	
  5803                           l2277:	
  5804  063E                     	movf	0+(___flmul@b)+01h,w
  5805  063E  083D               	movwf	(??___flmul+0)+0
  5806  063F  00C4               	movf	(??___flmul+0)+0,w
  5807  0640  0844               	movwf	(__Umul8_16@multiplicand)
  5808  0641  00F0               	movf	0+(___flmul@a)+02h,w
  5809  0642  0842               	fcall	__Umul8_16
  5810  0643  120A  158A  22C9  120A  118A  	movf	(1+(?__Umul8_16)),w
  5811  0648  0871               	bcf	status, 5	;RP0=0, select bank0
  5812  0649  1283               	bcf	status, 6	;RP1=0, select bank0
  5813  064A  1303               	movwf	(___flmul@temp+1)
  5814  064B  00D5               	movf	(0+(?__Umul8_16)),w
  5815  064C  0870               	movwf	(___flmul@temp)
  5816  064D  00D4               	line	137
  5817                           	movf	(___flmul@temp),w
  5818  064E  0854               	movwf	((??___flmul+0)+0)
  5819  064F  00C4               	movf	(___flmul@temp+1),w
  5820  0650  0855               	movwf	((??___flmul+0)+0+1)
  5821  0651  00C5               	clrf	((??___flmul+0)+0+2)
  5822  0652  01C6               	clrf	((??___flmul+0)+0+3)
  5823  0653  01C7               	movf	0+(??___flmul+0)+0,w
  5824  0654  0844               	addwf	(___flmul@prod),f
  5825  0655  07D0               	movf	1+(??___flmul+0)+0,w
  5826  0656  0845               	clrz
  5827  0657  1103               	skipnc
  5828  0658  1803               	addlw	1
  5829  0659  3E01               	skipnz
  5830  065A  1903               	goto	u2881
  5831  065B  2E5D               	addwf	(___flmul@prod+1),f
  5832  065C  07D1               u2881:
  5833  065D                     	movf	2+(??___flmul+0)+0,w
  5834  065D  0846               	clrz
  5835  065E  1103               	skipnc
  5836  065F  1803               	addlw	1
  5837  0660  3E01               	skipnz
  5838  0661  1903               	goto	u2882
  5839  0662  2E64               	addwf	(___flmul@prod+2),f
  5840  0663  07D2               u2882:
  5841  0664                     	movf	3+(??___flmul+0)+0,w
  5842  0664  0847               	clrz
  5843  0665  1103               	skipnc
  5844  0666  1803               	addlw	1
  5845  0667  3E01               	skipnz
  5846  0668  1903               	goto	u2883
  5847  0669  2E6B               	addwf	(___flmul@prod+3),f
  5848  066A  07D3               u2883:
  5849  066B                     
  5850                           	line	138
  5851                           	
  5852                           l2279:	
  5853  066B                     	movf	0+(___flmul@b)+02h,w
  5854  066B  083E               	movwf	(??___flmul+0)+0
  5855  066C  00C4               	movf	(??___flmul+0)+0,w
  5856  066D  0844               	movwf	(__Umul8_16@multiplicand)
  5857  066E  00F0               	movf	0+(___flmul@a)+01h,w
  5858  066F  0841               	fcall	__Umul8_16
  5859  0670  120A  158A  22C9  120A  118A  	movf	(1+(?__Umul8_16)),w
  5860  0675  0871               	bcf	status, 5	;RP0=0, select bank0
  5861  0676  1283               	bcf	status, 6	;RP1=0, select bank0
  5862  0677  1303               	movwf	(___flmul@temp+1)
  5863  0678  00D5               	movf	(0+(?__Umul8_16)),w
  5864  0679  0870               	movwf	(___flmul@temp)
  5865  067A  00D4               	line	139
  5866                           	
  5867                           l2281:	
  5868  067B                     	movf	(___flmul@temp),w
  5869  067B  0854               	movwf	((??___flmul+0)+0)
  5870  067C  00C4               	movf	(___flmul@temp+1),w
  5871  067D  0855               	movwf	((??___flmul+0)+0+1)
  5872  067E  00C5               	clrf	((??___flmul+0)+0+2)
  5873  067F  01C6               	clrf	((??___flmul+0)+0+3)
  5874  0680  01C7               	movf	0+(??___flmul+0)+0,w
  5875  0681  0844               	addwf	(___flmul@prod),f
  5876  0682  07D0               	movf	1+(??___flmul+0)+0,w
  5877  0683  0845               	clrz
  5878  0684  1103               	skipnc
  5879  0685  1803               	addlw	1
  5880  0686  3E01               	skipnz
  5881  0687  1903               	goto	u2891
  5882  0688  2E8A               	addwf	(___flmul@prod+1),f
  5883  0689  07D1               u2891:
  5884  068A                     	movf	2+(??___flmul+0)+0,w
  5885  068A  0846               	clrz
  5886  068B  1103               	skipnc
  5887  068C  1803               	addlw	1
  5888  068D  3E01               	skipnz
  5889  068E  1903               	goto	u2892
  5890  068F  2E91               	addwf	(___flmul@prod+2),f
  5891  0690  07D2               u2892:
  5892  0691                     	movf	3+(??___flmul+0)+0,w
  5893  0691  0847               	clrz
  5894  0692  1103               	skipnc
  5895  0693  1803               	addlw	1
  5896  0694  3E01               	skipnz
  5897  0695  1903               	goto	u2893
  5898  0696  2E98               	addwf	(___flmul@prod+3),f
  5899  0697  07D3               u2893:
  5900  0698                     
  5901                           	line	140
  5902                           	movf	0+(___flmul@b)+02h,w
  5903  0698  083E               	movwf	(??___flmul+0)+0
  5904  0699  00C4               	movf	(??___flmul+0)+0,w
  5905  069A  0844               	movwf	(__Umul8_16@multiplicand)
  5906  069B  00F0               	movf	0+(___flmul@a)+02h,w
  5907  069C  0842               	fcall	__Umul8_16
  5908  069D  120A  158A  22C9  120A  118A  	movf	(1+(?__Umul8_16)),w
  5909  06A2  0871               	bcf	status, 5	;RP0=0, select bank0
  5910  06A3  1283               	bcf	status, 6	;RP1=0, select bank0
  5911  06A4  1303               	movwf	(___flmul@temp+1)
  5912  06A5  00D5               	movf	(0+(?__Umul8_16)),w
  5913  06A6  0870               	movwf	(___flmul@temp)
  5914  06A7  00D4               	line	141
  5915                           	
  5916                           l2283:	
  5917  06A8                     	movf	(___flmul@temp),w
  5918  06A8  0854               	movwf	((??___flmul+0)+0)
  5919  06A9  00C4               	movf	(___flmul@temp+1),w
  5920  06AA  0855               	movwf	((??___flmul+0)+0+1)
  5921  06AB  00C5               	clrf	((??___flmul+0)+0+2)
  5922  06AC  01C6               	clrf	((??___flmul+0)+0+3)
  5923  06AD  01C7               	movlw	08h
  5924  06AE  3008               u2905:
  5925  06AF                     	clrc
  5926  06AF  1003               	rlf	(??___flmul+0)+0,f
  5927  06B0  0DC4               	rlf	(??___flmul+0)+1,f
  5928  06B1  0DC5               	rlf	(??___flmul+0)+2,f
  5929  06B2  0DC6               	rlf	(??___flmul+0)+3,f
  5930  06B3  0DC7               u2900:
  5931  06B4                     	addlw	-1
  5932  06B4  3EFF               	skipz
  5933  06B5  1D03               	goto	u2905
  5934  06B6  2EAF               	movf	0+(??___flmul+0)+0,w
  5935  06B7  0844               	addwf	(___flmul@prod),f
  5936  06B8  07D0               	movf	1+(??___flmul+0)+0,w
  5937  06B9  0845               	clrz
  5938  06BA  1103               	skipnc
  5939  06BB  1803               	addlw	1
  5940  06BC  3E01               	skipnz
  5941  06BD  1903               	goto	u2911
  5942  06BE  2EC0               	addwf	(___flmul@prod+1),f
  5943  06BF  07D1               u2911:
  5944  06C0                     	movf	2+(??___flmul+0)+0,w
  5945  06C0  0846               	clrz
  5946  06C1  1103               	skipnc
  5947  06C2  1803               	addlw	1
  5948  06C3  3E01               	skipnz
  5949  06C4  1903               	goto	u2912
  5950  06C5  2EC7               	addwf	(___flmul@prod+2),f
  5951  06C6  07D2               u2912:
  5952  06C7                     	movf	3+(??___flmul+0)+0,w
  5953  06C7  0847               	clrz
  5954  06C8  1103               	skipnc
  5955  06C9  1803               	addlw	1
  5956  06CA  3E01               	skipnz
  5957  06CB  1903               	goto	u2913
  5958  06CC  2ECE               	addwf	(___flmul@prod+3),f
  5959  06CD  07D3               u2913:
  5960  06CE                     
  5961                           	line	145
  5962                           	
  5963                           l2285:	
  5964  06CE                     	movf	(___flmul@grs),w
  5965  06CE  084A               	movwf	(??___flmul+0)+0
  5966  06CF  00C4               	movf	(___flmul@grs+1),w
  5967  06D0  084B               	movwf	((??___flmul+0)+0+1)
  5968  06D1  00C5               	movf	(___flmul@grs+2),w
  5969  06D2  084C               	movwf	((??___flmul+0)+0+2)
  5970  06D3  00C6               	movf	(___flmul@grs+3),w
  5971  06D4  084D               	movwf	((??___flmul+0)+0+3)
  5972  06D5  00C7               	movlw	018h
  5973  06D6  3018               u2925:
  5974  06D7                     	clrc
  5975  06D7  1003               	rrf	(??___flmul+0)+3,f
  5976  06D8  0CC7               	rrf	(??___flmul+0)+2,f
  5977  06D9  0CC6               	rrf	(??___flmul+0)+1,f
  5978  06DA  0CC5               	rrf	(??___flmul+0)+0,f
  5979  06DB  0CC4               u2920:
  5980  06DC                     	addlw	-1
  5981  06DC  3EFF               	skipz
  5982  06DD  1D03               	goto	u2925
  5983  06DE  2ED7               	movf	0+(??___flmul+0)+0,w
  5984  06DF  0844               	addwf	(___flmul@prod),f
  5985  06E0  07D0               	movf	1+(??___flmul+0)+0,w
  5986  06E1  0845               	clrz
  5987  06E2  1103               	skipnc
  5988  06E3  1803               	addlw	1
  5989  06E4  3E01               	skipnz
  5990  06E5  1903               	goto	u2931
  5991  06E6  2EE8               	addwf	(___flmul@prod+1),f
  5992  06E7  07D1               u2931:
  5993  06E8                     	movf	2+(??___flmul+0)+0,w
  5994  06E8  0846               	clrz
  5995  06E9  1103               	skipnc
  5996  06EA  1803               	addlw	1
  5997  06EB  3E01               	skipnz
  5998  06EC  1903               	goto	u2932
  5999  06ED  2EEF               	addwf	(___flmul@prod+2),f
  6000  06EE  07D2               u2932:
  6001  06EF                     	movf	3+(??___flmul+0)+0,w
  6002  06EF  0847               	clrz
  6003  06F0  1103               	skipnc
  6004  06F1  1803               	addlw	1
  6005  06F2  3E01               	skipnz
  6006  06F3  1903               	goto	u2933
  6007  06F4  2EF6               	addwf	(___flmul@prod+3),f
  6008  06F5  07D3               u2933:
  6009  06F6                     
  6010                           	line	146
  6011                           	
  6012                           l2287:	
  6013  06F6                     	movlw	08h
  6014  06F6  3008               	movwf	(??___flmul+0)+0
  6015  06F7  00C4               u2945:
  6016  06F8                     	clrc
  6017  06F8  1003               	rlf	(___flmul@grs),f
  6018  06F9  0DCA               	rlf	(___flmul@grs+1),f
  6019  06FA  0DCB               	rlf	(___flmul@grs+2),f
  6020  06FB  0DCC               	rlf	(___flmul@grs+3),f
  6021  06FC  0DCD               	decfsz	(??___flmul+0)+0
  6022  06FD  0BC4               	goto	u2945
  6023  06FE  2EF8               	line	149
  6024                           	
  6025                           l2289:	
  6026  06FF                     	movf	(___flmul@bexp),w
  6027  06FF  084F               	addwf	(___flmul@aexp),w
  6028  0700  074E               	movwf	(??___flmul+0)+0
  6029  0701  00C4               	clrf	(??___flmul+0)+0+1
  6030  0702  01C5               	rlf	1+(??___flmul+0)+0,f
  6031  0703  0DC5               	
  6032                           	movf	0+(??___flmul+0)+0,w
  6033  0704  0844               	addlw	low(-126)
  6034  0705  3E82               	movwf	(___flmul@temp)
  6035  0706  00D4               	movf	1+(??___flmul+0)+0,w
  6036  0707  0845               	skipnc
  6037  0708  1803               	addlw	1
  6038  0709  3E01               	addlw	high(-126)
  6039  070A  3EFF               	movwf	1+(___flmul@temp)
  6040  070B  00D5               	line	152
  6041                           	goto	l2301
  6042  070C  2F2C               	
  6043                           l701:	
  6044  070D                     	line	153
  6045                           	
  6046                           l2291:	
  6047  070D                     	movlw	01h
  6048  070D  3001               	movwf	(??___flmul+0)+0
  6049  070E  00C4               u2955:
  6050  070F                     	clrc
  6051  070F  1003               	rlf	(___flmul@prod),f
  6052  0710  0DD0               	rlf	(___flmul@prod+1),f
  6053  0711  0DD1               	rlf	(___flmul@prod+2),f
  6054  0712  0DD2               	rlf	(___flmul@prod+3),f
  6055  0713  0DD3               	decfsz	(??___flmul+0)+0
  6056  0714  0BC4               	goto	u2955
  6057  0715  2F0F               	line	154
  6058                           	
  6059                           l2293:	
  6060  0716                     	btfss	(___flmul@grs+3),(31)&7
  6061  0716  1FCD               	goto	u2961
  6062  0717  2F19               	goto	u2960
  6063  0718  2F1A               u2961:
  6064  0719                     	goto	l2297
  6065  0719  2F1C               u2960:
  6066  071A                     	line	155
  6067                           	
  6068                           l2295:	
  6069  071A                     	bsf	(___flmul@prod)+(0/8),(0)&7
  6070  071A  1450               	goto	l2297
  6071  071B  2F1C               	line	156
  6072                           	
  6073                           l702:	
  6074  071C                     	line	157
  6075                           	
  6076                           l2297:	
  6077  071C                     	movlw	01h
  6078  071C  3001               	movwf	(??___flmul+0)+0
  6079  071D  00C4               u2975:
  6080  071E                     	clrc
  6081  071E  1003               	rlf	(___flmul@grs),f
  6082  071F  0DCA               	rlf	(___flmul@grs+1),f
  6083  0720  0DCB               	rlf	(___flmul@grs+2),f
  6084  0721  0DCC               	rlf	(___flmul@grs+3),f
  6085  0722  0DCD               	decfsz	(??___flmul+0)+0
  6086  0723  0BC4               	goto	u2975
  6087  0724  2F1E               	line	158
  6088                           	
  6089                           l2299:	
  6090  0725                     	movlw	0FFh
  6091  0725  30FF               	addwf	(___flmul@temp),f
  6092  0726  07D4               	skipnc
  6093  0727  1803               	incf	(___flmul@temp+1),f
  6094  0728  0AD5               	movlw	0FFh
  6095  0729  30FF               	addwf	(___flmul@temp+1),f
  6096  072A  07D5               	goto	l2301
  6097  072B  2F2C               	line	159
  6098                           	
  6099                           l700:	
  6100  072C                     	line	152
  6101                           	
  6102                           l2301:	
  6103  072C                     	btfss	(___flmul@prod+2),(23)&7
  6104  072C  1FD2               	goto	u2981
  6105  072D  2F2F               	goto	u2980
  6106  072E  2F30               u2981:
  6107  072F                     	goto	l2291
  6108  072F  2F0D               u2980:
  6109  0730                     	goto	l2303
  6110  0730  2F31               	
  6111                           l703:	
  6112  0731                     	line	163
  6113                           	
  6114                           l2303:	
  6115  0731                     	clrf	(___flmul@aexp)
  6116  0731  01CE               	line	164
  6117                           	
  6118                           l2305:	
  6119  0732                     	btfss	(___flmul@grs+3),(31)&7
  6120  0732  1FCD               	goto	u2991
  6121  0733  2F35               	goto	u2990
  6122  0734  2F36               u2991:
  6123  0735                     	goto	l2313
  6124  0735  2F56               u2990:
  6125  0736                     	line	165
  6126                           	
  6127                           l2307:	
  6128  0736                     	movlw	0FFh
  6129  0736  30FF               	andwf	(___flmul@grs),w
  6130  0737  054A               	movwf	(??___flmul+0)+0
  6131  0738  00C4               	movlw	0FFh
  6132  0739  30FF               	andwf	(___flmul@grs+1),w
  6133  073A  054B               	movwf	((??___flmul+0)+0+1)
  6134  073B  00C5               	movlw	0FFh
  6135  073C  30FF               	andwf	(___flmul@grs+2),w
  6136  073D  054C               	movwf	((??___flmul+0)+0+2)
  6137  073E  00C6               	movlw	07Fh
  6138  073F  307F               	andwf	(___flmul@grs+3),w
  6139  0740  054D               	movwf	((??___flmul+0)+0+3)
  6140  0741  00C7               	movf	3+(??___flmul+0)+0,w
  6141  0742  0847               	iorwf	2+(??___flmul+0)+0,w
  6142  0743  0446               	iorwf	1+(??___flmul+0)+0,w
  6143  0744  0445               	iorwf	0+(??___flmul+0)+0,w
  6144  0745  0444               	skipnz
  6145  0746  1903               	goto	u3001
  6146  0747  2F49               	goto	u3000
  6147  0748  2F4A               u3001:
  6148  0749                     	goto	l705
  6149  0749  2F4D               u3000:
  6150  074A                     	line	166
  6151                           	
  6152                           l2309:	
  6153  074A                     	clrf	(___flmul@aexp)
  6154  074A  01CE               	incf	(___flmul@aexp),f
  6155  074B  0ACE               	line	167
  6156                           	goto	l2313
  6157  074C  2F56               	line	168
  6158                           	
  6159                           l705:	
  6160  074D                     	line	169
  6161                           	btfss	(___flmul@prod),(0)&7
  6162  074D  1C50               	goto	u3011
  6163  074E  2F50               	goto	u3010
  6164  074F  2F51               u3011:
  6165  0750                     	goto	l2313
  6166  0750  2F56               u3010:
  6167  0751                     	line	170
  6168                           	
  6169                           l2311:	
  6170  0751                     	clrf	(___flmul@aexp)
  6171  0751  01CE               	incf	(___flmul@aexp),f
  6172  0752  0ACE               	goto	l2313
  6173  0753  2F56               	line	171
  6174                           	
  6175                           l707:	
  6176  0754                     	goto	l2313
  6177  0754  2F56               	line	172
  6178                           	
  6179                           l706:	
  6180  0755                     	goto	l2313
  6181  0755  2F56               	line	173
  6182                           	
  6183                           l704:	
  6184  0756                     	line	174
  6185                           	
  6186                           l2313:	
  6187  0756                     	movf	((___flmul@aexp)),w
  6188  0756  084E               	btfsc	status,2
  6189  0757  1903               	goto	u3021
  6190  0758  2F5A               	goto	u3020
  6191  0759  2F5B               u3021:
  6192  075A                     	goto	l2323
  6193  075A  2F8E               u3020:
  6194  075B                     	line	175
  6195                           	
  6196                           l2315:	
  6197  075B                     	movlw	01h
  6198  075B  3001               	addwf	(___flmul@prod),f
  6199  075C  07D0               	movlw	0
  6200  075D  3000               	skipnc
  6201  075E  1803               movlw 1
  6202  075F  3001               	addwf	(___flmul@prod+1),f
  6203  0760  07D1               	movlw	0
  6204  0761  3000               	skipnc
  6205  0762  1803               movlw 1
  6206  0763  3001               	addwf	(___flmul@prod+2),f
  6207  0764  07D2               	movlw	0
  6208  0765  3000               	skipnc
  6209  0766  1803               movlw 1
  6210  0767  3001               	addwf	(___flmul@prod+3),f
  6211  0768  07D3               	line	176
  6212                           	
  6213                           l2317:	
  6214  0769                     	btfss	(___flmul@prod+3),(24)&7
  6215  0769  1C53               	goto	u3031
  6216  076A  2F6C               	goto	u3030
  6217  076B  2F6D               u3031:
  6218  076C                     	goto	l2323
  6219  076C  2F8E               u3030:
  6220  076D                     	line	177
  6221                           	
  6222                           l2319:	
  6223  076D                     	movf	(___flmul@prod),w
  6224  076D  0850               	movwf	(??___flmul+0)+0
  6225  076E  00C4               	movf	(___flmul@prod+1),w
  6226  076F  0851               	movwf	((??___flmul+0)+0+1)
  6227  0770  00C5               	movf	(___flmul@prod+2),w
  6228  0771  0852               	movwf	((??___flmul+0)+0+2)
  6229  0772  00C6               	movf	(___flmul@prod+3),w
  6230  0773  0853               	movwf	((??___flmul+0)+0+3)
  6231  0774  00C7               	movlw	01h
  6232  0775  3001               	movwf	(??___flmul+4)+0
  6233  0776  00C8               u3045:
  6234  0777                     	rlf	(??___flmul+0)+3,w
  6235  0777  0D47               	rrf	(??___flmul+0)+3,f
  6236  0778  0CC7               	rrf	(??___flmul+0)+2,f
  6237  0779  0CC6               	rrf	(??___flmul+0)+1,f
  6238  077A  0CC5               	rrf	(??___flmul+0)+0,f
  6239  077B  0CC4               u3040:
  6240  077C                     	decfsz	(??___flmul+4)+0,f
  6241  077C  0BC8               	goto	u3045
  6242  077D  2F77               	movf	3+(??___flmul+0)+0,w
  6243  077E  0847               	movwf	(___flmul@prod+3)
  6244  077F  00D3               	movf	2+(??___flmul+0)+0,w
  6245  0780  0846               	movwf	(___flmul@prod+2)
  6246  0781  00D2               	movf	1+(??___flmul+0)+0,w
  6247  0782  0845               	movwf	(___flmul@prod+1)
  6248  0783  00D1               	movf	0+(??___flmul+0)+0,w
  6249  0784  0844               	movwf	(___flmul@prod)
  6250  0785  00D0               
  6251                           	line	178
  6252                           	
  6253                           l2321:	
  6254  0786                     	movlw	01h
  6255  0786  3001               	addwf	(___flmul@temp),f
  6256  0787  07D4               	skipnc
  6257  0788  1803               	incf	(___flmul@temp+1),f
  6258  0789  0AD5               	movlw	0
  6259  078A  3000               	addwf	(___flmul@temp+1),f
  6260  078B  07D5               	goto	l2323
  6261  078C  2F8E               	line	179
  6262                           	
  6263                           l709:	
  6264  078D                     	goto	l2323
  6265  078D  2F8E               	line	180
  6266                           	
  6267                           l708:	
  6268  078E                     	line	183
  6269                           	
  6270                           l2323:	
  6271  078E                     	movf	(___flmul@temp+1),w
  6272  078E  0855               	xorlw	80h
  6273  078F  3A80               	movwf	btemp+1
  6274  0790  00FF               	movlw	(0)^80h
  6275  0791  3080               	subwf	btemp+1,w
  6276  0792  027F               	skipz
  6277  0793  1D03               	goto	u3055
  6278  0794  2F97               	movlw	0FFh
  6279  0795  30FF               	subwf	(___flmul@temp),w
  6280  0796  0254               u3055:
  6281  0797                     
  6282                           	skipc
  6283  0797  1C03               	goto	u3051
  6284  0798  2F9A               	goto	u3050
  6285  0799  2F9B               u3051:
  6286  079A                     	goto	l2327
  6287  079A  2FA6               u3050:
  6288  079B                     	line	184
  6289                           	
  6290                           l2325:	
  6291  079B                     	movlw	07Fh
  6292  079B  307F               	bcf	status, 5	;RP0=0, select bank0
  6293  079C  1283               	bcf	status, 6	;RP1=0, select bank0
  6294  079D  1303               	movwf	(___flmul@prod+3)
  6295  079E  00D3               	movlw	080h
  6296  079F  3080               	movwf	(___flmul@prod+2)
  6297  07A0  00D2               	movlw	0
  6298  07A1  3000               	movwf	(___flmul@prod+1)
  6299  07A2  00D1               	movlw	0
  6300  07A3  3000               	movwf	(___flmul@prod)
  6301  07A4  00D0               
  6302                           	line	185
  6303                           	goto	l711
  6304  07A5  2FDD               	line	187
  6305                           	
  6306                           l710:	
  6307  07A6                     	
  6308                           l2327:	
  6309  07A6                     	bcf	status, 5	;RP0=0, select bank0
  6310  07A6  1283               	bcf	status, 6	;RP1=0, select bank0
  6311  07A7  1303               	movf	(___flmul@temp+1),w
  6312  07A8  0855               	xorlw	80h
  6313  07A9  3A80               	movwf	btemp+1
  6314  07AA  00FF               	movlw	(0)^80h
  6315  07AB  3080               	subwf	btemp+1,w
  6316  07AC  027F               	skipz
  6317  07AD  1D03               	goto	u3065
  6318  07AE  2FB1               	movlw	01h
  6319  07AF  3001               	subwf	(___flmul@temp),w
  6320  07B0  0254               u3065:
  6321  07B1                     
  6322                           	skipnc
  6323  07B1  1803               	goto	u3061
  6324  07B2  2FB4               	goto	u3060
  6325  07B3  2FB5               u3061:
  6326  07B4                     	goto	l2333
  6327  07B4  2FC1               u3060:
  6328  07B5                     	line	188
  6329                           	
  6330                           l2329:	
  6331  07B5                     	movlw	high highword(0)
  6332  07B5  3000               	bcf	status, 5	;RP0=0, select bank0
  6333  07B6  1283               	bcf	status, 6	;RP1=0, select bank0
  6334  07B7  1303               	movwf	(___flmul@prod+3)
  6335  07B8  00D3               	movlw	low highword(0)
  6336  07B9  3000               	movwf	(___flmul@prod+2)
  6337  07BA  00D2               	movlw	high(0)
  6338  07BB  3000               	movwf	(___flmul@prod+1)
  6339  07BC  00D1               	movlw	low(0)
  6340  07BD  3000               	movwf	(___flmul@prod)
  6341  07BE  00D0               
  6342                           	line	190
  6343                           	
  6344                           l2331:	
  6345  07BF                     	clrf	(___flmul@sign)
  6346  07BF  01C9               	line	191
  6347                           	goto	l711
  6348  07C0  2FDD               	line	192
  6349                           	
  6350                           l712:	
  6351  07C1                     	line	194
  6352                           	
  6353                           l2333:	
  6354  07C1                     	bcf	status, 5	;RP0=0, select bank0
  6355  07C1  1283               	bcf	status, 6	;RP1=0, select bank0
  6356  07C2  1303               	movf	(___flmul@temp),w
  6357  07C3  0854               	movwf	(??___flmul+0)+0
  6358  07C4  00C4               	movf	(??___flmul+0)+0,w
  6359  07C5  0844               	movwf	(___flmul@bexp)
  6360  07C6  00CF               	line	195
  6361                           	movlw	0FFh
  6362  07C7  30FF               	andwf	(___flmul@prod),f
  6363  07C8  05D0               	movlw	0FFh
  6364  07C9  30FF               	andwf	(___flmul@prod+1),f
  6365  07CA  05D1               	movlw	07Fh
  6366  07CB  307F               	andwf	(___flmul@prod+2),f
  6367  07CC  05D2               	movlw	0
  6368  07CD  3000               	andwf	(___flmul@prod+3),f
  6369  07CE  05D3               	line	196
  6370                           	
  6371                           l2335:	
  6372  07CF                     	btfss	(___flmul@bexp),(0)&7
  6373  07CF  1C4F               	goto	u3071
  6374  07D0  2FD2               	goto	u3070
  6375  07D1  2FD3               u3071:
  6376  07D2                     	goto	l2339
  6377  07D2  2FD5               u3070:
  6378  07D3                     	line	197
  6379                           	
  6380                           l2337:	
  6381  07D3                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  6382  07D3  17D2               	goto	l2339
  6383  07D4  2FD5               	line	198
  6384                           	
  6385                           l714:	
  6386  07D5                     	line	199
  6387                           	
  6388                           l2339:	
  6389  07D5                     	movf	(___flmul@bexp),w
  6390  07D5  084F               	movwf	(??___flmul+0)+0
  6391  07D6  00C4               	clrc
  6392  07D7  1003               	rrf	(??___flmul+0)+0,w
  6393  07D8  0C44               	movwf	(??___flmul+1)+0
  6394  07D9  00C5               	movf	(??___flmul+1)+0,w
  6395  07DA  0845               	movwf	0+(___flmul@prod)+03h
  6396  07DB  00D3               	goto	l711
  6397  07DC  2FDD               	line	200
  6398                           	
  6399                           l713:	
  6400  07DD                     	
  6401                           l711:	
  6402  07DD                     	line	201
  6403                           	movf	(___flmul@sign),w
  6404  07DD  0849               	movwf	(??___flmul+0)+0
  6405  07DE  00C4               	movf	(??___flmul+0)+0,w
  6406  07DF  0844               	iorwf	0+(___flmul@prod)+03h,f
  6407  07E0  04D3               	line	203
  6408                           	
  6409                           l2341:	
  6410  07E1                     	movf	(___flmul@prod+3),w
  6411  07E1  0853               	movwf	(?___flmul+3)
  6412  07E2  00BF               	movf	(___flmul@prod+2),w
  6413  07E3  0852               	movwf	(?___flmul+2)
  6414  07E4  00BE               	movf	(___flmul@prod+1),w
  6415  07E5  0851               	movwf	(?___flmul+1)
  6416  07E6  00BD               	movf	(___flmul@prod),w
  6417  07E7  0850               	movwf	(?___flmul)
  6418  07E8  00BC               
  6419                           	goto	l699
  6420  07E9  2FEA               	
  6421                           l2343:	
  6422  07EA                     	line	205
  6423                           	
  6424                           l699:	
  6425  07EA                     	return
  6426  07EA  0008               	opt stack 0
  6427                           GLOBAL	__end_of___flmul
  6428                           	__end_of___flmul:
  6429  07EB                     	signat	___flmul,8316
  6430                           	global	__Umul8_16
  6431                           
  6432 ;; *************** function __Umul8_16 *****************
  6433 ;; Defined at:
  6434 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6435 ;; Parameters:    Size  Location     Type
  6436 ;;  multiplier      1    wreg     unsigned char 
  6437 ;;  multiplicand    1    0[COMMON] unsigned char 
  6438 ;; Auto vars:     Size  Location     Type
  6439 ;;  multiplier      1    8[COMMON] unsigned char 
  6440 ;;  word_mpld       2    6[COMMON] unsigned int 
  6441 ;;  product         2    4[COMMON] unsigned int 
  6442 ;; Return value:  Size  Location     Type
  6443 ;;                  2    0[COMMON] unsigned int 
  6444 ;; Registers used:
  6445 ;;		wreg, status,2, status,0
  6446 ;; Tracked objects:
  6447 ;;		On entry : 0/0
  6448 ;;		On exit  : 0/0
  6449 ;;		Unchanged: 0/0
  6450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6451 ;;      Params:         2       0       0       0       0
  6452 ;;      Locals:         5       0       0       0       0
  6453 ;;      Temps:          2       0       0       0       0
  6454 ;;      Totals:         9       0       0       0       0
  6455 ;;Total ram usage:        9 bytes
  6456 ;; Hardware stack levels used:    1
  6457 ;; This function calls:
  6458 ;;		Nothing
  6459 ;; This function is called by:
  6460 ;;		___flmul
  6461 ;; This function uses a non-reentrant model
  6462 ;;
  6463                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  6464                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6465                           	line	4
  6466                           global __ptext19
  6467                           __ptext19:	;psect for function __Umul8_16
  6468  0AC9                     psect	text19
  6469                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6470                           	line	4
  6471                           	global	__size_of__Umul8_16
  6472                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  6473  002A                     	
  6474                           __Umul8_16:	
  6475  0AC9                     ;incstack = 0
  6476                           	opt	stack 6
  6477                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6478                           ;__Umul8_16@multiplier stored from wreg
  6479                           	movwf	(__Umul8_16@multiplier)
  6480  0AC9  00F8               	line	5
  6481                           	
  6482                           l1841:	
  6483  0ACA                     	clrf	(__Umul8_16@product)
  6484  0ACA  01F4               	clrf	(__Umul8_16@product+1)
  6485  0ACB  01F5               	line	6
  6486                           	
  6487                           l1843:	
  6488  0ACC                     	movf	(__Umul8_16@multiplicand),w
  6489  0ACC  0870               	movwf	(??__Umul8_16+0)+0
  6490  0ACD  00F2               	clrf	(??__Umul8_16+0)+0+1
  6491  0ACE  01F3               	movf	0+(??__Umul8_16+0)+0,w
  6492  0ACF  0872               	movwf	(__Umul8_16@word_mpld)
  6493  0AD0  00F6               	movf	1+(??__Umul8_16+0)+0,w
  6494  0AD1  0873               	movwf	(__Umul8_16@word_mpld+1)
  6495  0AD2  00F7               	goto	l1845
  6496  0AD3  2AD4               	line	50
  6497                           	
  6498                           l736:	
  6499  0AD4                     	line	51
  6500                           	
  6501                           l1845:	
  6502  0AD4                     	btfss	(__Umul8_16@multiplier),(0)&7
  6503  0AD4  1C78               	goto	u1981
  6504  0AD5  2AD7               	goto	u1980
  6505  0AD6  2AD8               u1981:
  6506  0AD7                     	goto	l737
  6507  0AD7  2ADE               u1980:
  6508  0AD8                     	line	52
  6509                           	
  6510                           l1847:	
  6511  0AD8                     	movf	(__Umul8_16@word_mpld),w
  6512  0AD8  0876               	addwf	(__Umul8_16@product),f
  6513  0AD9  07F4               	skipnc
  6514  0ADA  1803               	incf	(__Umul8_16@product+1),f
  6515  0ADB  0AF5               	movf	(__Umul8_16@word_mpld+1),w
  6516  0ADC  0877               	addwf	(__Umul8_16@product+1),f
  6517  0ADD  07F5               	line	53
  6518                           	
  6519                           l737:	
  6520  0ADE                     	line	54
  6521                           	movlw	01h
  6522  0ADE  3001               	
  6523                           u1995:
  6524  0ADF                     	clrc
  6525  0ADF  1003               	rlf	(__Umul8_16@word_mpld),f
  6526  0AE0  0DF6               	rlf	(__Umul8_16@word_mpld+1),f
  6527  0AE1  0DF7               	addlw	-1
  6528  0AE2  3EFF               	skipz
  6529  0AE3  1D03               	goto	u1995
  6530  0AE4  2ADF               	line	55
  6531                           	clrc
  6532  0AE5  1003               	rrf	(__Umul8_16@multiplier),f
  6533  0AE6  0CF8               
  6534                           	line	56
  6535                           	
  6536                           l1849:	
  6537  0AE7                     	movf	((__Umul8_16@multiplier)),w
  6538  0AE7  0878               	btfss	status,2
  6539  0AE8  1D03               	goto	u2001
  6540  0AE9  2AEB               	goto	u2000
  6541  0AEA  2AEC               u2001:
  6542  0AEB                     	goto	l1845
  6543  0AEB  2AD4               u2000:
  6544  0AEC                     	goto	l1851
  6545  0AEC  2AED               	
  6546                           l738:	
  6547  0AED                     	line	59
  6548                           	
  6549                           l1851:	
  6550  0AED                     	movf	(__Umul8_16@product+1),w
  6551  0AED  0875               	movwf	(?__Umul8_16+1)
  6552  0AEE  00F1               	movf	(__Umul8_16@product),w
  6553  0AEF  0874               	movwf	(?__Umul8_16)
  6554  0AF0  00F0               	goto	l739
  6555  0AF1  2AF2               	
  6556                           l1853:	
  6557  0AF2                     	line	60
  6558                           	
  6559                           l739:	
  6560  0AF2                     	return
  6561  0AF2  0008               	opt stack 0
  6562                           GLOBAL	__end_of__Umul8_16
  6563                           	__end_of__Umul8_16:
  6564  0AF3                     	signat	__Umul8_16,8314
  6565                           	global	___fladd
  6566                           
  6567 ;; *************** function ___fladd *****************
  6568 ;; Defined at:
  6569 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  6570 ;; Parameters:    Size  Location     Type
  6571 ;;  b               4    4[BANK0 ] unsigned int 
  6572 ;;  a               4    8[BANK0 ] unsigned int 
  6573 ;; Auto vars:     Size  Location     Type
  6574 ;;  grs             1   27[BANK0 ] unsigned char 
  6575 ;;  bexp            1   26[BANK0 ] unsigned char 
  6576 ;;  aexp            1   25[BANK0 ] unsigned char 
  6577 ;;  signs           1   24[BANK0 ] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  4    4[BANK0 ] unsigned char 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0, btemp+1
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6587 ;;      Params:         0       8       0       0       0
  6588 ;;      Locals:         0       4       0       0       0
  6589 ;;      Temps:          0      12       0       0       0
  6590 ;;      Totals:         0      24       0       0       0
  6591 ;;Total ram usage:       24 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; This function calls:
  6594 ;;		Nothing
  6595 ;; This function is called by:
  6596 ;;		_main
  6597 ;; This function uses a non-reentrant model
  6598 ;;
  6599                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  6600                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  6601                           	line	10
  6602                           global __ptext20
  6603                           __ptext20:	;psect for function ___fladd
  6604  01BA                     psect	text20
  6605                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  6606                           	line	10
  6607                           	global	__size_of___fladd
  6608                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  6609  02BC                     	
  6610                           ___fladd:	
  6611  01BA                     ;incstack = 0
  6612                           	opt	stack 7
  6613                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  6614                           	line	21
  6615                           	
  6616                           l2011:	
  6617  01BA                     	bcf	status, 5	;RP0=0, select bank0
  6618  01BA  1283               	bcf	status, 6	;RP1=0, select bank0
  6619  01BB  1303               	movf	0+(___fladd@b)+03h,w
  6620  01BC  0827               	andlw	080h
  6621  01BD  3980               	movwf	(??___fladd+0)+0
  6622  01BE  00AC               	movf	(??___fladd+0)+0,w
  6623  01BF  082C               	movwf	(___fladd@signs)
  6624  01C0  00B8               	line	22
  6625                           	
  6626                           l2013:	
  6627  01C1                     	movf	0+(___fladd@b)+03h,w
  6628  01C1  0827               	movwf	(??___fladd+0)+0
  6629  01C2  00AC               	addwf	(??___fladd+0)+0,w
  6630  01C3  072C               	movwf	(??___fladd+1)+0
  6631  01C4  00AD               	movf	(??___fladd+1)+0,w
  6632  01C5  082D               	movwf	(___fladd@bexp)
  6633  01C6  00BA               	line	23
  6634                           	
  6635                           l2015:	
  6636  01C7                     	btfss	0+(___fladd@b)+02h,(7)&7
  6637  01C7  1FA6               	goto	u2251
  6638  01C8  29CA               	goto	u2250
  6639  01C9  29CB               u2251:
  6640  01CA                     	goto	l2019
  6641  01CA  29CD               u2250:
  6642  01CB                     	line	24
  6643                           	
  6644                           l2017:	
  6645  01CB                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  6646  01CB  143A               	goto	l2019
  6647  01CC  29CD               	line	25
  6648                           	
  6649                           l595:	
  6650  01CD                     	line	28
  6651                           	
  6652                           l2019:	
  6653  01CD                     	movf	((___fladd@bexp)),w
  6654  01CD  083A               	btfsc	status,2
  6655  01CE  1903               	goto	u2261
  6656  01CF  29D1               	goto	u2260
  6657  01D0  29D2               u2261:
  6658  01D1                     	goto	l2029
  6659  01D1  29E3               u2260:
  6660  01D2                     	line	30
  6661                           	
  6662                           l2021:	
  6663  01D2                     		incf	((___fladd@bexp)),w
  6664  01D2  0A3A               	btfss	status,2
  6665  01D3  1D03               	goto	u2271
  6666  01D4  29D6               	goto	u2270
  6667  01D5  29D7               u2271:
  6668  01D6                     	goto	l2025
  6669  01D6  29E0               u2270:
  6670  01D7                     	line	32
  6671                           	
  6672                           l2023:	
  6673  01D7                     	movlw	0x0
  6674  01D7  3000               	movwf	(___fladd@b+3)
  6675  01D8  00A7               	movlw	0x0
  6676  01D9  3000               	movwf	(___fladd@b+2)
  6677  01DA  00A6               	movlw	0x0
  6678  01DB  3000               	movwf	(___fladd@b+1)
  6679  01DC  00A5               	movlw	0x0
  6680  01DD  3000               	movwf	(___fladd@b)
  6681  01DE  00A4               
  6682                           	goto	l2025
  6683  01DF  29E0               	line	33
  6684                           	
  6685                           l597:	
  6686  01E0                     	line	35
  6687                           	
  6688                           l2025:	
  6689  01E0                     	bsf	(___fladd@b)+(23/8),(23)&7
  6690  01E0  17A6               	line	37
  6691                           	
  6692                           l2027:	
  6693  01E1                     	clrf	0+(___fladd@b)+03h
  6694  01E1  01A7               	line	38
  6695                           	goto	l2031
  6696  01E2  29EC               	line	39
  6697                           	
  6698                           l596:	
  6699  01E3                     	line	41
  6700                           	
  6701                           l2029:	
  6702  01E3                     	movlw	0x0
  6703  01E3  3000               	movwf	(___fladd@b+3)
  6704  01E4  00A7               	movlw	0x0
  6705  01E5  3000               	movwf	(___fladd@b+2)
  6706  01E6  00A6               	movlw	0x0
  6707  01E7  3000               	movwf	(___fladd@b+1)
  6708  01E8  00A5               	movlw	0x0
  6709  01E9  3000               	movwf	(___fladd@b)
  6710  01EA  00A4               
  6711                           	goto	l2031
  6712  01EB  29EC               	line	42
  6713                           	
  6714                           l598:	
  6715  01EC                     	line	44
  6716                           	
  6717                           l2031:	
  6718  01EC                     	movf	0+(___fladd@a)+03h,w
  6719  01EC  082B               	andlw	080h
  6720  01ED  3980               	movwf	(??___fladd+0)+0
  6721  01EE  00AC               	movf	(??___fladd+0)+0,w
  6722  01EF  082C               	movwf	(___fladd@aexp)
  6723  01F0  00B9               	line	46
  6724                           	
  6725                           l2033:	
  6726  01F1                     	movf	(___fladd@aexp),w
  6727  01F1  0839               	xorwf	(___fladd@signs),w
  6728  01F2  0638               	skipnz
  6729  01F3  1903               	goto	u2281
  6730  01F4  29F6               	goto	u2280
  6731  01F5  29F7               u2281:
  6732  01F6                     	goto	l2037
  6733  01F6  29F9               u2280:
  6734  01F7                     	line	47
  6735                           	
  6736                           l2035:	
  6737  01F7                     	bsf	(___fladd@signs)+(6/8),(6)&7
  6738  01F7  1738               	goto	l2037
  6739  01F8  29F9               	line	48
  6740                           	
  6741                           l599:	
  6742  01F9                     	line	49
  6743                           	
  6744                           l2037:	
  6745  01F9                     	movf	0+(___fladd@a)+03h,w
  6746  01F9  082B               	movwf	(??___fladd+0)+0
  6747  01FA  00AC               	addwf	(??___fladd+0)+0,w
  6748  01FB  072C               	movwf	(??___fladd+1)+0
  6749  01FC  00AD               	movf	(??___fladd+1)+0,w
  6750  01FD  082D               	movwf	(___fladd@aexp)
  6751  01FE  00B9               	line	50
  6752                           	
  6753                           l2039:	
  6754  01FF                     	btfss	0+(___fladd@a)+02h,(7)&7
  6755  01FF  1FAA               	goto	u2291
  6756  0200  2A02               	goto	u2290
  6757  0201  2A03               u2291:
  6758  0202                     	goto	l2043
  6759  0202  2A05               u2290:
  6760  0203                     	line	51
  6761                           	
  6762                           l2041:	
  6763  0203                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  6764  0203  1439               	goto	l2043
  6765  0204  2A05               	line	52
  6766                           	
  6767                           l600:	
  6768  0205                     	line	55
  6769                           	
  6770                           l2043:	
  6771  0205                     	movf	((___fladd@aexp)),w
  6772  0205  0839               	btfsc	status,2
  6773  0206  1903               	goto	u2301
  6774  0207  2A09               	goto	u2300
  6775  0208  2A0A               u2301:
  6776  0209                     	goto	l2053
  6777  0209  2A1B               u2300:
  6778  020A                     	line	57
  6779                           	
  6780                           l2045:	
  6781  020A                     		incf	((___fladd@aexp)),w
  6782  020A  0A39               	btfss	status,2
  6783  020B  1D03               	goto	u2311
  6784  020C  2A0E               	goto	u2310
  6785  020D  2A0F               u2311:
  6786  020E                     	goto	l2049
  6787  020E  2A18               u2310:
  6788  020F                     	line	59
  6789                           	
  6790                           l2047:	
  6791  020F                     	movlw	0x0
  6792  020F  3000               	movwf	(___fladd@a+3)
  6793  0210  00AB               	movlw	0x0
  6794  0211  3000               	movwf	(___fladd@a+2)
  6795  0212  00AA               	movlw	0x0
  6796  0213  3000               	movwf	(___fladd@a+1)
  6797  0214  00A9               	movlw	0x0
  6798  0215  3000               	movwf	(___fladd@a)
  6799  0216  00A8               
  6800                           	goto	l2049
  6801  0217  2A18               	line	60
  6802                           	
  6803                           l602:	
  6804  0218                     	line	62
  6805                           	
  6806                           l2049:	
  6807  0218                     	bsf	(___fladd@a)+(23/8),(23)&7
  6808  0218  17AA               	line	64
  6809                           	
  6810                           l2051:	
  6811  0219                     	clrf	0+(___fladd@a)+03h
  6812  0219  01AB               	line	65
  6813                           	goto	l603
  6814  021A  2A23               	line	66
  6815                           	
  6816                           l601:	
  6817  021B                     	line	68
  6818                           	
  6819                           l2053:	
  6820  021B                     	movlw	0x0
  6821  021B  3000               	movwf	(___fladd@a+3)
  6822  021C  00AB               	movlw	0x0
  6823  021D  3000               	movwf	(___fladd@a+2)
  6824  021E  00AA               	movlw	0x0
  6825  021F  3000               	movwf	(___fladd@a+1)
  6826  0220  00A9               	movlw	0x0
  6827  0221  3000               	movwf	(___fladd@a)
  6828  0222  00A8               
  6829                           	line	69
  6830                           	
  6831                           l603:	
  6832  0223                     	line	75
  6833                           	movf	(___fladd@bexp),w
  6834  0223  083A               	subwf	(___fladd@aexp),w
  6835  0224  0239               	skipnc
  6836  0225  1803               	goto	u2321
  6837  0226  2A28               	goto	u2320
  6838  0227  2A29               u2321:
  6839  0228                     	goto	l2089
  6840  0228  2A6F               u2320:
  6841  0229                     	line	77
  6842                           	
  6843                           l2055:	
  6844  0229                     	btfss	(___fladd@signs),(6)&7
  6845  0229  1F38               	goto	u2331
  6846  022A  2A2C               	goto	u2330
  6847  022B  2A2D               u2331:
  6848  022C                     	goto	l2059
  6849  022C  2A32               u2330:
  6850  022D                     	line	78
  6851                           	
  6852                           l2057:	
  6853  022D                     	movlw	low(080h)
  6854  022D  3080               	movwf	(??___fladd+0)+0
  6855  022E  00AC               	movf	(??___fladd+0)+0,w
  6856  022F  082C               	xorwf	(___fladd@signs),f
  6857  0230  06B8               	goto	l2059
  6858  0231  2A32               	line	79
  6859                           	
  6860                           l605:	
  6861  0232                     	line	81
  6862                           	
  6863                           l2059:	
  6864  0232                     	movf	(___fladd@bexp),w
  6865  0232  083A               	movwf	(??___fladd+0)+0
  6866  0233  00AC               	movf	(??___fladd+0)+0,w
  6867  0234  082C               	movwf	(___fladd@grs)
  6868  0235  00BB               	line	82
  6869                           	
  6870                           l2061:	
  6871  0236                     	movf	(___fladd@aexp),w
  6872  0236  0839               	movwf	(??___fladd+0)+0
  6873  0237  00AC               	movf	(??___fladd+0)+0,w
  6874  0238  082C               	movwf	(___fladd@bexp)
  6875  0239  00BA               	line	83
  6876                           	
  6877                           l2063:	
  6878  023A                     	movf	(___fladd@grs),w
  6879  023A  083B               	movwf	(??___fladd+0)+0
  6880  023B  00AC               	movf	(??___fladd+0)+0,w
  6881  023C  082C               	movwf	(___fladd@aexp)
  6882  023D  00B9               	line	84
  6883                           	
  6884                           l2065:	
  6885  023E                     	movf	(___fladd@b),w
  6886  023E  0824               	movwf	(??___fladd+0)+0
  6887  023F  00AC               	movf	(??___fladd+0)+0,w
  6888  0240  082C               	movwf	(___fladd@grs)
  6889  0241  00BB               	line	85
  6890                           	
  6891                           l2067:	
  6892  0242                     	movf	(___fladd@a),w
  6893  0242  0828               	movwf	(??___fladd+0)+0
  6894  0243  00AC               	movf	(??___fladd+0)+0,w
  6895  0244  082C               	movwf	(___fladd@b)
  6896  0245  00A4               	line	86
  6897                           	
  6898                           l2069:	
  6899  0246                     	movf	(___fladd@grs),w
  6900  0246  083B               	movwf	(??___fladd+0)+0
  6901  0247  00AC               	movf	(??___fladd+0)+0,w
  6902  0248  082C               	movwf	(___fladd@a)
  6903  0249  00A8               	line	87
  6904                           	
  6905                           l2071:	
  6906  024A                     	movf	0+(___fladd@b)+01h,w
  6907  024A  0825               	movwf	(??___fladd+0)+0
  6908  024B  00AC               	movf	(??___fladd+0)+0,w
  6909  024C  082C               	movwf	(___fladd@grs)
  6910  024D  00BB               	line	88
  6911                           	
  6912                           l2073:	
  6913  024E                     	movf	0+(___fladd@a)+01h,w
  6914  024E  0829               	movwf	(??___fladd+0)+0
  6915  024F  00AC               	movf	(??___fladd+0)+0,w
  6916  0250  082C               	movwf	0+(___fladd@b)+01h
  6917  0251  00A5               	line	89
  6918                           	
  6919                           l2075:	
  6920  0252                     	movf	(___fladd@grs),w
  6921  0252  083B               	movwf	(??___fladd+0)+0
  6922  0253  00AC               	movf	(??___fladd+0)+0,w
  6923  0254  082C               	movwf	0+(___fladd@a)+01h
  6924  0255  00A9               	line	90
  6925                           	
  6926                           l2077:	
  6927  0256                     	movf	0+(___fladd@b)+02h,w
  6928  0256  0826               	movwf	(??___fladd+0)+0
  6929  0257  00AC               	movf	(??___fladd+0)+0,w
  6930  0258  082C               	movwf	(___fladd@grs)
  6931  0259  00BB               	line	91
  6932                           	
  6933                           l2079:	
  6934  025A                     	movf	0+(___fladd@a)+02h,w
  6935  025A  082A               	movwf	(??___fladd+0)+0
  6936  025B  00AC               	movf	(??___fladd+0)+0,w
  6937  025C  082C               	movwf	0+(___fladd@b)+02h
  6938  025D  00A6               	line	92
  6939                           	
  6940                           l2081:	
  6941  025E                     	movf	(___fladd@grs),w
  6942  025E  083B               	movwf	(??___fladd+0)+0
  6943  025F  00AC               	movf	(??___fladd+0)+0,w
  6944  0260  082C               	movwf	0+(___fladd@a)+02h
  6945  0261  00AA               	line	93
  6946                           	
  6947                           l2083:	
  6948  0262                     	movf	0+(___fladd@b)+03h,w
  6949  0262  0827               	movwf	(??___fladd+0)+0
  6950  0263  00AC               	movf	(??___fladd+0)+0,w
  6951  0264  082C               	movwf	(___fladd@grs)
  6952  0265  00BB               	line	94
  6953                           	
  6954                           l2085:	
  6955  0266                     	movf	0+(___fladd@a)+03h,w
  6956  0266  082B               	movwf	(??___fladd+0)+0
  6957  0267  00AC               	movf	(??___fladd+0)+0,w
  6958  0268  082C               	movwf	0+(___fladd@b)+03h
  6959  0269  00A7               	line	95
  6960                           	
  6961                           l2087:	
  6962  026A                     	movf	(___fladd@grs),w
  6963  026A  083B               	movwf	(??___fladd+0)+0
  6964  026B  00AC               	movf	(??___fladd+0)+0,w
  6965  026C  082C               	movwf	0+(___fladd@a)+03h
  6966  026D  00AB               	goto	l2089
  6967  026E  2A6F               	line	96
  6968                           	
  6969                           l604:	
  6970  026F                     	line	98
  6971                           	
  6972                           l2089:	
  6973  026F                     	clrf	(___fladd@grs)
  6974  026F  01BB               	line	100
  6975                           	
  6976                           l2091:	
  6977  0270                     	movf	(___fladd@bexp),w
  6978  0270  083A               	movwf	(??___fladd+0)+0
  6979  0271  00AC               	clrf	(??___fladd+0)+0+1
  6980  0272  01AD               	comf	(??___fladd+0)+0,f
  6981  0273  09AC               	comf	(??___fladd+0)+1,f
  6982  0274  09AD               	incf	(??___fladd+0)+0,f
  6983  0275  0AAC               	skipnz
  6984  0276  1903               	incf	(??___fladd+0)+1,f
  6985  0277  0AAD               	movf	(___fladd@aexp),w
  6986  0278  0839               	addwf	0+(??___fladd+0)+0,w
  6987  0279  072C               	movwf	(??___fladd+2)+0
  6988  027A  00AE               	movf	1+(??___fladd+0)+0,w
  6989  027B  082D               	skipnc
  6990  027C  1803               	incf	1+(??___fladd+0)+0,w
  6991  027D  0A2D               	movwf	((??___fladd+2)+0)+1
  6992  027E  00AF               	movf	1+(??___fladd+2)+0,w
  6993  027F  082F               	xorlw	80h
  6994  0280  3A80               	movwf	btemp+1
  6995  0281  00FF               	movlw	(0)^80h
  6996  0282  3080               	subwf	btemp+1,w
  6997  0283  027F               	skipz
  6998  0284  1D03               	goto	u2345
  6999  0285  2A88               	movlw	01Ah
  7000  0286  301A               	subwf	0+(??___fladd+2)+0,w
  7001  0287  022E               u2345:
  7002  0288                     
  7003                           	skipc
  7004  0288  1C03               	goto	u2341
  7005  0289  2A8B               	goto	u2340
  7006  028A  2A8C               u2341:
  7007  028B                     	goto	l2107
  7008  028B  2ACD               u2340:
  7009  028C                     	line	101
  7010                           	
  7011                           l2093:	
  7012  028C                     	bcf	status, 5	;RP0=0, select bank0
  7013  028C  1283               	bcf	status, 6	;RP1=0, select bank0
  7014  028D  1303               	movf	(___fladd@b+3),w
  7015  028E  0827               	iorwf	(___fladd@b+2),w
  7016  028F  0426               	iorwf	(___fladd@b+1),w
  7017  0290  0425               	iorwf	(___fladd@b),w
  7018  0291  0424               	skipz
  7019  0292  1D03               	goto	u2351
  7020  0293  2A95               	goto	u2350
  7021  0294  2A97               u2351:
  7022  0295                     	movlw	1
  7023  0295  3001               	goto	u2360
  7024  0296  2A98               u2350:
  7025  0297                     	movlw	0
  7026  0297  3000               u2360:
  7027  0298                     	movwf	(??___fladd+0)+0
  7028  0298  00AC               	movf	(??___fladd+0)+0,w
  7029  0299  082C               	movwf	(___fladd@grs)
  7030  029A  00BB               	line	102
  7031                           	movlw	high highword(0)
  7032  029B  3000               	movwf	(___fladd@b+3)
  7033  029C  00A7               	movlw	low highword(0)
  7034  029D  3000               	movwf	(___fladd@b+2)
  7035  029E  00A6               	movlw	high(0)
  7036  029F  3000               	movwf	(___fladd@b+1)
  7037  02A0  00A5               	movlw	low(0)
  7038  02A1  3000               	movwf	(___fladd@b)
  7039  02A2  00A4               
  7040                           	line	103
  7041                           	movf	(___fladd@aexp),w
  7042  02A3  0839               	movwf	(??___fladd+0)+0
  7043  02A4  00AC               	movf	(??___fladd+0)+0,w
  7044  02A5  082C               	movwf	(___fladd@bexp)
  7045  02A6  00BA               	line	104
  7046                           	goto	l607
  7047  02A7  2AD6               	line	105
  7048                           	
  7049                           l606:	
  7050  02A8                     	line	106
  7051                           	goto	l2107
  7052  02A8  2ACD               	
  7053                           l609:	
  7054  02A9                     	line	109
  7055                           	btfss	(___fladd@grs),(0)&7
  7056  02A9  1C3B               	goto	u2371
  7057  02AA  2AAC               	goto	u2370
  7058  02AB  2AAD               u2371:
  7059  02AC                     	goto	l2097
  7060  02AC  2AB6               u2370:
  7061  02AD                     	line	110
  7062                           	
  7063                           l2095:	
  7064  02AD                     	movf	(___fladd@grs),w
  7065  02AD  083B               	movwf	(??___fladd+0)+0
  7066  02AE  00AC               	clrc
  7067  02AF  1003               	rrf	(??___fladd+0)+0,w
  7068  02B0  0C2C               	iorlw	01h
  7069  02B1  3801               	movwf	(??___fladd+1)+0
  7070  02B2  00AD               	movf	(??___fladd+1)+0,w
  7071  02B3  082D               	movwf	(___fladd@grs)
  7072  02B4  00BB               	line	111
  7073                           	goto	l2099
  7074  02B5  2AB9               	line	112
  7075                           	
  7076                           l610:	
  7077  02B6                     	line	113
  7078                           	
  7079                           l2097:	
  7080  02B6                     	clrc
  7081  02B6  1003               	rrf	(___fladd@grs),f
  7082  02B7  0CBB               
  7083                           	goto	l2099
  7084  02B8  2AB9               	line	114
  7085                           	
  7086                           l611:	
  7087  02B9                     	line	115
  7088                           	
  7089                           l2099:	
  7090  02B9                     	btfss	(___fladd@b),(0)&7
  7091  02B9  1C24               	goto	u2381
  7092  02BA  2ABC               	goto	u2380
  7093  02BB  2ABD               u2381:
  7094  02BC                     	goto	l2103
  7095  02BC  2ABF               u2380:
  7096  02BD                     	line	116
  7097                           	
  7098                           l2101:	
  7099  02BD                     	bsf	(___fladd@grs)+(7/8),(7)&7
  7100  02BD  17BB               	goto	l2103
  7101  02BE  2ABF               	line	117
  7102                           	
  7103                           l612:	
  7104  02BF                     	line	118
  7105                           	
  7106                           l2103:	
  7107  02BF                     	movlw	01h
  7108  02BF  3001               	movwf	(??___fladd+0)+0
  7109  02C0  00AC               u2395:
  7110  02C1                     	rlf	(___fladd@b+3),w
  7111  02C1  0D27               	rrf	(___fladd@b+3),f
  7112  02C2  0CA7               	rrf	(___fladd@b+2),f
  7113  02C3  0CA6               	rrf	(___fladd@b+1),f
  7114  02C4  0CA5               	rrf	(___fladd@b),f
  7115  02C5  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  7116  02C6  0BAC               	goto	u2395
  7117  02C7  2AC1               
  7118                           	line	119
  7119                           	
  7120                           l2105:	
  7121  02C8                     	movlw	low(01h)
  7122  02C8  3001               	movwf	(??___fladd+0)+0
  7123  02C9  00AC               	movf	(??___fladd+0)+0,w
  7124  02CA  082C               	addwf	(___fladd@bexp),f
  7125  02CB  07BA               	goto	l2107
  7126  02CC  2ACD               	line	120
  7127                           	
  7128                           l608:	
  7129  02CD                     	line	106
  7130                           	
  7131                           l2107:	
  7132  02CD                     	bcf	status, 5	;RP0=0, select bank0
  7133  02CD  1283               	bcf	status, 6	;RP1=0, select bank0
  7134  02CE  1303               	movf	(___fladd@aexp),w
  7135  02CF  0839               	subwf	(___fladd@bexp),w
  7136  02D0  023A               	skipc
  7137  02D1  1C03               	goto	u2401
  7138  02D2  2AD4               	goto	u2400
  7139  02D3  2AD5               u2401:
  7140  02D4                     	goto	l609
  7141  02D4  2AA9               u2400:
  7142  02D5                     	goto	l607
  7143  02D5  2AD6               	
  7144                           l613:	
  7145  02D6                     	line	121
  7146                           	
  7147                           l607:	
  7148  02D6                     	line	124
  7149                           	btfsc	(___fladd@signs),(6)&7
  7150  02D6  1B38               	goto	u2411
  7151  02D7  2AD9               	goto	u2410
  7152  02D8  2ADA               u2411:
  7153  02D9                     	goto	l2133
  7154  02D9  2B29               u2410:
  7155  02DA                     	line	127
  7156                           	
  7157                           l2109:	
  7158  02DA                     	movf	((___fladd@bexp)),w
  7159  02DA  083A               	btfss	status,2
  7160  02DB  1D03               	goto	u2421
  7161  02DC  2ADE               	goto	u2420
  7162  02DD  2ADF               u2421:
  7163  02DE                     	goto	l2115
  7164  02DE  2AE9               u2420:
  7165  02DF                     	line	128
  7166                           	
  7167                           l2111:	
  7168  02DF                     	movlw	0x0
  7169  02DF  3000               	movwf	(?___fladd+3)
  7170  02E0  00A7               	movlw	0x0
  7171  02E1  3000               	movwf	(?___fladd+2)
  7172  02E2  00A6               	movlw	0x0
  7173  02E3  3000               	movwf	(?___fladd+1)
  7174  02E4  00A5               	movlw	0x0
  7175  02E5  3000               	movwf	(?___fladd)
  7176  02E6  00A4               
  7177                           	goto	l616
  7178  02E7  2C75               	
  7179                           l2113:	
  7180  02E8                     	goto	l616
  7181  02E8  2C75               	line	129
  7182                           	
  7183                           l615:	
  7184  02E9                     	line	132
  7185                           	
  7186                           l2115:	
  7187  02E9                     	movf	(___fladd@a),w
  7188  02E9  0828               	addwf	(___fladd@b),f
  7189  02EA  07A4               	movf	(___fladd@a+1),w
  7190  02EB  0829               	clrz
  7191  02EC  1103               	skipnc
  7192  02ED  1803               	addlw	1
  7193  02EE  3E01               	skipnz
  7194  02EF  1903               	goto	u2431
  7195  02F0  2AF2               	addwf	(___fladd@b+1),f
  7196  02F1  07A5               u2431:
  7197  02F2                     	movf	(___fladd@a+2),w
  7198  02F2  082A               	clrz
  7199  02F3  1103               	skipnc
  7200  02F4  1803               	addlw	1
  7201  02F5  3E01               	skipnz
  7202  02F6  1903               	goto	u2432
  7203  02F7  2AF9               	addwf	(___fladd@b+2),f
  7204  02F8  07A6               u2432:
  7205  02F9                     	movf	(___fladd@a+3),w
  7206  02F9  082B               	clrz
  7207  02FA  1103               	skipnc
  7208  02FB  1803               	addlw	1
  7209  02FC  3E01               	skipnz
  7210  02FD  1903               	goto	u2433
  7211  02FE  2B00               	addwf	(___fladd@b+3),f
  7212  02FF  07A7               u2433:
  7213  0300                     
  7214                           	line	134
  7215                           	
  7216                           l2117:	
  7217  0300                     	btfss	(___fladd@b+3),(24)&7
  7218  0300  1C27               	goto	u2441
  7219  0301  2B03               	goto	u2440
  7220  0302  2B04               u2441:
  7221  0303                     	goto	l2167
  7222  0303  2BF2               u2440:
  7223  0304                     	line	135
  7224                           	
  7225                           l2119:	
  7226  0304                     	btfss	(___fladd@grs),(0)&7
  7227  0304  1C3B               	goto	u2451
  7228  0305  2B07               	goto	u2450
  7229  0306  2B08               u2451:
  7230  0307                     	goto	l2123
  7231  0307  2B11               u2450:
  7232  0308                     	line	136
  7233                           	
  7234                           l2121:	
  7235  0308                     	movf	(___fladd@grs),w
  7236  0308  083B               	movwf	(??___fladd+0)+0
  7237  0309  00AC               	clrc
  7238  030A  1003               	rrf	(??___fladd+0)+0,w
  7239  030B  0C2C               	iorlw	01h
  7240  030C  3801               	movwf	(??___fladd+1)+0
  7241  030D  00AD               	movf	(??___fladd+1)+0,w
  7242  030E  082D               	movwf	(___fladd@grs)
  7243  030F  00BB               	line	137
  7244                           	goto	l2125
  7245  0310  2B14               	line	138
  7246                           	
  7247                           l618:	
  7248  0311                     	line	139
  7249                           	
  7250                           l2123:	
  7251  0311                     	clrc
  7252  0311  1003               	rrf	(___fladd@grs),f
  7253  0312  0CBB               
  7254                           	goto	l2125
  7255  0313  2B14               	line	140
  7256                           	
  7257                           l619:	
  7258  0314                     	line	141
  7259                           	
  7260                           l2125:	
  7261  0314                     	btfss	(___fladd@b),(0)&7
  7262  0314  1C24               	goto	u2461
  7263  0315  2B17               	goto	u2460
  7264  0316  2B18               u2461:
  7265  0317                     	goto	l2129
  7266  0317  2B1A               u2460:
  7267  0318                     	line	142
  7268                           	
  7269                           l2127:	
  7270  0318                     	bsf	(___fladd@grs)+(7/8),(7)&7
  7271  0318  17BB               	goto	l2129
  7272  0319  2B1A               	line	143
  7273                           	
  7274                           l620:	
  7275  031A                     	line	144
  7276                           	
  7277                           l2129:	
  7278  031A                     	movlw	01h
  7279  031A  3001               	movwf	(??___fladd+0)+0
  7280  031B  00AC               u2475:
  7281  031C                     	rlf	(___fladd@b+3),w
  7282  031C  0D27               	rrf	(___fladd@b+3),f
  7283  031D  0CA7               	rrf	(___fladd@b+2),f
  7284  031E  0CA6               	rrf	(___fladd@b+1),f
  7285  031F  0CA5               	rrf	(___fladd@b),f
  7286  0320  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  7287  0321  0BAC               	goto	u2475
  7288  0322  2B1C               
  7289                           	line	145
  7290                           	
  7291                           l2131:	
  7292  0323                     	movlw	low(01h)
  7293  0323  3001               	movwf	(??___fladd+0)+0
  7294  0324  00AC               	movf	(??___fladd+0)+0,w
  7295  0325  082C               	addwf	(___fladd@bexp),f
  7296  0326  07BA               	goto	l2167
  7297  0327  2BF2               	line	146
  7298                           	
  7299                           l617:	
  7300  0328                     	line	148
  7301                           	goto	l2167
  7302  0328  2BF2               	line	149
  7303                           	
  7304                           l614:	
  7305  0329                     	line	153
  7306                           	
  7307                           l2133:	
  7308  0329                     	movf	(___fladd@b+3),w
  7309  0329  0827               	xorlw	80h
  7310  032A  3A80               	movwf	btemp+1
  7311  032B  00FF               	movf	(___fladd@a+3),w
  7312  032C  082B               	xorlw	80h
  7313  032D  3A80               	subwf	btemp+1,w
  7314  032E  027F               	
  7315                           	skipz
  7316  032F  1D03               	goto	u2483
  7317  0330  2B3B               	movf	(___fladd@a+2),w
  7318  0331  082A               	subwf	(___fladd@b+2),w
  7319  0332  0226               	skipz
  7320  0333  1D03               	goto	u2483
  7321  0334  2B3B               	movf	(___fladd@a+1),w
  7322  0335  0829               	subwf	(___fladd@b+1),w
  7323  0336  0225               	skipz
  7324  0337  1D03               	goto	u2483
  7325  0338  2B3B               	movf	(___fladd@a),w
  7326  0339  0828               	subwf	(___fladd@b),w
  7327  033A  0224               u2483:
  7328  033B                     	skipnc
  7329  033B  1803               	goto	u2481
  7330  033C  2B3E               	goto	u2480
  7331  033D  2B3F               u2481:
  7332  033E                     	goto	l2143
  7333  033E  2BA5               u2480:
  7334  033F                     	line	154
  7335                           	
  7336                           l2135:	
  7337  033F                     	movlw	0FFh
  7338  033F  30FF               	movwf	((??___fladd+0)+0)
  7339  0340  00AC               	movlw	0FFh
  7340  0341  30FF               	movwf	((??___fladd+0)+0+1)
  7341  0342  00AD               	movlw	0FFh
  7342  0343  30FF               	movwf	((??___fladd+0)+0+2)
  7343  0344  00AE               	movlw	0FFh
  7344  0345  30FF               	movwf	((??___fladd+0)+0+3)
  7345  0346  00AF               	movf	(___fladd@a),w
  7346  0347  0828               	movwf	(??___fladd+4)+0
  7347  0348  00B0               	movf	(___fladd@a+1),w
  7348  0349  0829               	movwf	((??___fladd+4)+0+1)
  7349  034A  00B1               	movf	(___fladd@a+2),w
  7350  034B  082A               	movwf	((??___fladd+4)+0+2)
  7351  034C  00B2               	movf	(___fladd@a+3),w
  7352  034D  082B               	movwf	((??___fladd+4)+0+3)
  7353  034E  00B3               	comf	(___fladd@b),w
  7354  034F  0924               	movwf	(??___fladd+8)+0
  7355  0350  00B4               	comf	(___fladd@b+1),w
  7356  0351  0925               	movwf	((??___fladd+8)+0+1)
  7357  0352  00B5               	comf	(___fladd@b+2),w
  7358  0353  0926               	movwf	((??___fladd+8)+0+2)
  7359  0354  00B6               	comf	(___fladd@b+3),w
  7360  0355  0927               	movwf	((??___fladd+8)+0+3)
  7361  0356  00B7               	incf	(??___fladd+8)+0,f
  7362  0357  0AB4               	skipnz
  7363  0358  1903               	incf	((??___fladd+8)+0+1),f
  7364  0359  0AB5               	skipnz
  7365  035A  1903               	incf	((??___fladd+8)+0+2),f
  7366  035B  0AB6               	skipnz
  7367  035C  1903               	incf	((??___fladd+8)+0+3),f
  7368  035D  0AB7               	movf	0+(??___fladd+8)+0,w
  7369  035E  0834               	addwf	(??___fladd+4)+0,f
  7370  035F  07B0               	movf	1+(??___fladd+8)+0,w
  7371  0360  0835               	skipnc
  7372  0361  1803               	incfsz	1+(??___fladd+8)+0,w
  7373  0362  0F35               	goto	u2490
  7374  0363  2B65               	goto	u2491
  7375  0364  2B66               u2490:
  7376  0365                     	addwf	(??___fladd+4)+1,f
  7377  0365  07B1               u2491:
  7378  0366                     	movf	2+(??___fladd+8)+0,w
  7379  0366  0836               	skipnc
  7380  0367  1803               	incfsz	2+(??___fladd+8)+0,w
  7381  0368  0F36               	goto	u2492
  7382  0369  2B6B               	goto	u2493
  7383  036A  2B6C               u2492:
  7384  036B                     	addwf	(??___fladd+4)+2,f
  7385  036B  07B2               u2493:
  7386  036C                     	movf	3+(??___fladd+8)+0,w
  7387  036C  0837               	skipnc
  7388  036D  1803               	incf	3+(??___fladd+8)+0,w
  7389  036E  0A37               	addwf	(??___fladd+4)+3,f
  7390  036F  07B3               	movf	0+(??___fladd+4)+0,w
  7391  0370  0830               	addwf	(??___fladd+0)+0,f
  7392  0371  07AC               	movf	1+(??___fladd+4)+0,w
  7393  0372  0831               	skipnc
  7394  0373  1803               	incfsz	1+(??___fladd+4)+0,w
  7395  0374  0F31               	goto	u2500
  7396  0375  2B77               	goto	u2501
  7397  0376  2B78               u2500:
  7398  0377                     	addwf	(??___fladd+0)+1,f
  7399  0377  07AD               u2501:
  7400  0378                     	movf	2+(??___fladd+4)+0,w
  7401  0378  0832               	skipnc
  7402  0379  1803               	incfsz	2+(??___fladd+4)+0,w
  7403  037A  0F32               	goto	u2502
  7404  037B  2B7D               	goto	u2503
  7405  037C  2B7E               u2502:
  7406  037D                     	addwf	(??___fladd+0)+2,f
  7407  037D  07AE               u2503:
  7408  037E                     	movf	3+(??___fladd+4)+0,w
  7409  037E  0833               	skipnc
  7410  037F  1803               	incf	3+(??___fladd+4)+0,w
  7411  0380  0A33               	addwf	(??___fladd+0)+3,f
  7412  0381  07AF               	movf	3+(??___fladd+0)+0,w
  7413  0382  082F               	movwf	(___fladd@b+3)
  7414  0383  00A7               	movf	2+(??___fladd+0)+0,w
  7415  0384  082E               	movwf	(___fladd@b+2)
  7416  0385  00A6               	movf	1+(??___fladd+0)+0,w
  7417  0386  082D               	movwf	(___fladd@b+1)
  7418  0387  00A5               	movf	0+(??___fladd+0)+0,w
  7419  0388  082C               	movwf	(___fladd@b)
  7420  0389  00A4               
  7421                           	line	155
  7422                           	movlw	low(080h)
  7423  038A  3080               	movwf	(??___fladd+0)+0
  7424  038B  00AC               	movf	(??___fladd+0)+0,w
  7425  038C  082C               	xorwf	(___fladd@signs),f
  7426  038D  06B8               	line	156
  7427                           	
  7428                           l2137:	
  7429  038E                     	comf	(___fladd@grs),f
  7430  038E  09BB               	incf	(___fladd@grs),f
  7431  038F  0ABB               	line	157
  7432                           	
  7433                           l2139:	
  7434  0390                     	movf	((___fladd@grs)),w
  7435  0390  083B               	btfss	status,2
  7436  0391  1D03               	goto	u2511
  7437  0392  2B94               	goto	u2510
  7438  0393  2B95               u2511:
  7439  0394                     	goto	l624
  7440  0394  2BB3               u2510:
  7441  0395                     	line	158
  7442                           	
  7443                           l2141:	
  7444  0395                     	movlw	01h
  7445  0395  3001               	addwf	(___fladd@b),f
  7446  0396  07A4               	movlw	0
  7447  0397  3000               	skipnc
  7448  0398  1803               movlw 1
  7449  0399  3001               	addwf	(___fladd@b+1),f
  7450  039A  07A5               	movlw	0
  7451  039B  3000               	skipnc
  7452  039C  1803               movlw 1
  7453  039D  3001               	addwf	(___fladd@b+2),f
  7454  039E  07A6               	movlw	0
  7455  039F  3000               	skipnc
  7456  03A0  1803               movlw 1
  7457  03A1  3001               	addwf	(___fladd@b+3),f
  7458  03A2  07A7               	goto	l624
  7459  03A3  2BB3               	line	159
  7460                           	
  7461                           l623:	
  7462  03A4                     	line	160
  7463                           	goto	l624
  7464  03A4  2BB3               	line	161
  7465                           	
  7466                           l622:	
  7467  03A5                     	line	162
  7468                           	
  7469                           l2143:	
  7470  03A5                     	movf	(___fladd@a),w
  7471  03A5  0828               	subwf	(___fladd@b),f
  7472  03A6  02A4               	movf	(___fladd@a+1),w
  7473  03A7  0829               	skipc
  7474  03A8  1C03               	incfsz	(___fladd@a+1),w
  7475  03A9  0F29               	subwf	(___fladd@b+1),f
  7476  03AA  02A5               	movf	(___fladd@a+2),w
  7477  03AB  082A               	skipc
  7478  03AC  1C03               	incfsz	(___fladd@a+2),w
  7479  03AD  0F2A               	subwf	(___fladd@b+2),f
  7480  03AE  02A6               	movf	(___fladd@a+3),w
  7481  03AF  082B               	skipc
  7482  03B0  1C03               	incfsz	(___fladd@a+3),w
  7483  03B1  0F2B               	subwf	(___fladd@b+3),f
  7484  03B2  02A7               	line	163
  7485                           	
  7486                           l624:	
  7487  03B3                     	line	166
  7488                           	movf	(___fladd@b+3),w
  7489  03B3  0827               	iorwf	(___fladd@b+2),w
  7490  03B4  0426               	iorwf	(___fladd@b+1),w
  7491  03B5  0425               	iorwf	(___fladd@b),w
  7492  03B6  0424               	skipz
  7493  03B7  1D03               	goto	u2521
  7494  03B8  2BBA               	goto	u2520
  7495  03B9  2BBB               u2521:
  7496  03BA                     	goto	l2165
  7497  03BA  2BEC               u2520:
  7498  03BB                     	
  7499                           l2145:	
  7500  03BB                     	movf	((___fladd@grs)),w
  7501  03BB  083B               	btfss	status,2
  7502  03BC  1D03               	goto	u2531
  7503  03BD  2BBF               	goto	u2530
  7504  03BE  2BC0               u2531:
  7505  03BF                     	goto	l2165
  7506  03BF  2BEC               u2530:
  7507  03C0                     	line	167
  7508                           	
  7509                           l2147:	
  7510  03C0                     	movlw	0x0
  7511  03C0  3000               	movwf	(?___fladd+3)
  7512  03C1  00A7               	movlw	0x0
  7513  03C2  3000               	movwf	(?___fladd+2)
  7514  03C3  00A6               	movlw	0x0
  7515  03C4  3000               	movwf	(?___fladd+1)
  7516  03C5  00A5               	movlw	0x0
  7517  03C6  3000               	movwf	(?___fladd)
  7518  03C7  00A4               
  7519                           	goto	l616
  7520  03C8  2C75               	
  7521                           l2149:	
  7522  03C9                     	goto	l616
  7523  03C9  2C75               	line	168
  7524                           	
  7525                           l625:	
  7526  03CA                     	line	171
  7527                           	goto	l2165
  7528  03CA  2BEC               	
  7529                           l627:	
  7530  03CB                     	line	172
  7531                           	
  7532                           l2151:	
  7533  03CB                     	movlw	01h
  7534  03CB  3001               	movwf	(??___fladd+0)+0
  7535  03CC  00AC               u2545:
  7536  03CD                     	clrc
  7537  03CD  1003               	rlf	(___fladd@b),f
  7538  03CE  0DA4               	rlf	(___fladd@b+1),f
  7539  03CF  0DA5               	rlf	(___fladd@b+2),f
  7540  03D0  0DA6               	rlf	(___fladd@b+3),f
  7541  03D1  0DA7               	decfsz	(??___fladd+0)+0
  7542  03D2  0BAC               	goto	u2545
  7543  03D3  2BCD               	line	173
  7544                           	
  7545                           l2153:	
  7546  03D4                     	btfss	(___fladd@grs),(7)&7
  7547  03D4  1FBB               	goto	u2551
  7548  03D5  2BD7               	goto	u2550
  7549  03D6  2BD8               u2551:
  7550  03D7                     	goto	l628
  7551  03D7  2BD9               u2550:
  7552  03D8                     	line	174
  7553                           	
  7554                           l2155:	
  7555  03D8                     	bsf	(___fladd@b)+(0/8),(0)&7
  7556  03D8  1424               	line	175
  7557                           	
  7558                           l628:	
  7559  03D9                     	line	176
  7560                           	btfss	(___fladd@grs),(0)&7
  7561  03D9  1C3B               	goto	u2561
  7562  03DA  2BDC               	goto	u2560
  7563  03DB  2BDD               u2561:
  7564  03DC                     	goto	l2159
  7565  03DC  2BE0               u2560:
  7566  03DD                     	line	177
  7567                           	
  7568                           l2157:	
  7569  03DD                     	setc
  7570  03DD  1403               	rlf	(___fladd@grs),f
  7571  03DE  0DBB               	line	178
  7572                           	goto	l2161
  7573  03DF  2BE3               	line	179
  7574                           	
  7575                           l629:	
  7576  03E0                     	line	180
  7577                           	
  7578                           l2159:	
  7579  03E0                     	clrc
  7580  03E0  1003               	rlf	(___fladd@grs),f
  7581  03E1  0DBB               
  7582                           	goto	l2161
  7583  03E2  2BE3               	line	181
  7584                           	
  7585                           l630:	
  7586  03E3                     	line	182
  7587                           	
  7588                           l2161:	
  7589  03E3                     	movf	((___fladd@bexp)),w
  7590  03E3  083A               	btfsc	status,2
  7591  03E4  1903               	goto	u2571
  7592  03E5  2BE7               	goto	u2570
  7593  03E6  2BE8               u2571:
  7594  03E7                     	goto	l2165
  7595  03E7  2BEC               u2570:
  7596  03E8                     	line	183
  7597                           	
  7598                           l2163:	
  7599  03E8                     	movlw	01h
  7600  03E8  3001               	subwf	(___fladd@bexp),f
  7601  03E9  02BA               	goto	l2165
  7602  03EA  2BEC               	line	184
  7603                           	
  7604                           l631:	
  7605  03EB                     	goto	l2165
  7606  03EB  2BEC               	line	185
  7607                           	
  7608                           l626:	
  7609  03EC                     	line	171
  7610                           	
  7611                           l2165:	
  7612  03EC                     	btfss	(___fladd@b+2),(23)&7
  7613  03EC  1FA6               	goto	u2581
  7614  03ED  2BEF               	goto	u2580
  7615  03EE  2BF0               u2581:
  7616  03EF                     	goto	l2151
  7617  03EF  2BCB               u2580:
  7618  03F0                     	goto	l2167
  7619  03F0  2BF2               	
  7620                           l632:	
  7621  03F1                     	goto	l2167
  7622  03F1  2BF2               	line	186
  7623                           	
  7624                           l621:	
  7625  03F2                     	line	192
  7626                           	
  7627                           l2167:	
  7628  03F2                     	clrf	(___fladd@aexp)
  7629  03F2  01B9               	line	193
  7630                           	
  7631                           l2169:	
  7632  03F3                     	btfss	(___fladd@grs),(7)&7
  7633  03F3  1FBB               	goto	u2591
  7634  03F4  2BF6               	goto	u2590
  7635  03F5  2BF7               u2591:
  7636  03F6                     	goto	l2177
  7637  03F6  2C09               u2590:
  7638  03F7                     	line	194
  7639                           	
  7640                           l2171:	
  7641  03F7                     	movf	(___fladd@grs),w
  7642  03F7  083B               	andlw	07Fh
  7643  03F8  397F               	btfsc	status,2
  7644  03F9  1903               	goto	u2601
  7645  03FA  2BFC               	goto	u2600
  7646  03FB  2BFD               u2601:
  7647  03FC                     	goto	l634
  7648  03FC  2C00               u2600:
  7649  03FD                     	line	195
  7650                           	
  7651                           l2173:	
  7652  03FD                     	clrf	(___fladd@aexp)
  7653  03FD  01B9               	incf	(___fladd@aexp),f
  7654  03FE  0AB9               	line	196
  7655                           	goto	l2177
  7656  03FF  2C09               	line	197
  7657                           	
  7658                           l634:	
  7659  0400                     	line	198
  7660                           	btfss	(___fladd@b),(0)&7
  7661  0400  1C24               	goto	u2611
  7662  0401  2C03               	goto	u2610
  7663  0402  2C04               u2611:
  7664  0403                     	goto	l2177
  7665  0403  2C09               u2610:
  7666  0404                     	line	199
  7667                           	
  7668                           l2175:	
  7669  0404                     	clrf	(___fladd@aexp)
  7670  0404  01B9               	incf	(___fladd@aexp),f
  7671  0405  0AB9               	goto	l2177
  7672  0406  2C09               	line	200
  7673                           	
  7674                           l636:	
  7675  0407                     	goto	l2177
  7676  0407  2C09               	line	201
  7677                           	
  7678                           l635:	
  7679  0408                     	goto	l2177
  7680  0408  2C09               	line	202
  7681                           	
  7682                           l633:	
  7683  0409                     	line	203
  7684                           	
  7685                           l2177:	
  7686  0409                     	movf	((___fladd@aexp)),w
  7687  0409  0839               	btfsc	status,2
  7688  040A  1903               	goto	u2621
  7689  040B  2C0D               	goto	u2620
  7690  040C  2C0E               u2621:
  7691  040D                     	goto	l637
  7692  040D  2C44               u2620:
  7693  040E                     	line	204
  7694                           	
  7695                           l2179:	
  7696  040E                     	movlw	01h
  7697  040E  3001               	addwf	(___fladd@b),f
  7698  040F  07A4               	movlw	0
  7699  0410  3000               	skipnc
  7700  0411  1803               movlw 1
  7701  0412  3001               	addwf	(___fladd@b+1),f
  7702  0413  07A5               	movlw	0
  7703  0414  3000               	skipnc
  7704  0415  1803               movlw 1
  7705  0416  3001               	addwf	(___fladd@b+2),f
  7706  0417  07A6               	movlw	0
  7707  0418  3000               	skipnc
  7708  0419  1803               movlw 1
  7709  041A  3001               	addwf	(___fladd@b+3),f
  7710  041B  07A7               	line	205
  7711                           	
  7712                           l2181:	
  7713  041C                     	btfss	(___fladd@b+3),(24)&7
  7714  041C  1C27               	goto	u2631
  7715  041D  2C1F               	goto	u2630
  7716  041E  2C20               u2631:
  7717  041F                     	goto	l637
  7718  041F  2C44               u2630:
  7719  0420                     	line	206
  7720                           	
  7721                           l2183:	
  7722  0420                     	movf	(___fladd@b),w
  7723  0420  0824               	movwf	(??___fladd+0)+0
  7724  0421  00AC               	movf	(___fladd@b+1),w
  7725  0422  0825               	movwf	((??___fladd+0)+0+1)
  7726  0423  00AD               	movf	(___fladd@b+2),w
  7727  0424  0826               	movwf	((??___fladd+0)+0+2)
  7728  0425  00AE               	movf	(___fladd@b+3),w
  7729  0426  0827               	movwf	((??___fladd+0)+0+3)
  7730  0427  00AF               	movlw	01h
  7731  0428  3001               	movwf	(??___fladd+4)+0
  7732  0429  00B0               u2645:
  7733  042A                     	rlf	(??___fladd+0)+3,w
  7734  042A  0D2F               	rrf	(??___fladd+0)+3,f
  7735  042B  0CAF               	rrf	(??___fladd+0)+2,f
  7736  042C  0CAE               	rrf	(??___fladd+0)+1,f
  7737  042D  0CAD               	rrf	(??___fladd+0)+0,f
  7738  042E  0CAC               u2640:
  7739  042F                     	decfsz	(??___fladd+4)+0,f
  7740  042F  0BB0               	goto	u2645
  7741  0430  2C2A               	movf	3+(??___fladd+0)+0,w
  7742  0431  082F               	movwf	(___fladd@b+3)
  7743  0432  00A7               	movf	2+(??___fladd+0)+0,w
  7744  0433  082E               	movwf	(___fladd@b+2)
  7745  0434  00A6               	movf	1+(??___fladd+0)+0,w
  7746  0435  082D               	movwf	(___fladd@b+1)
  7747  0436  00A5               	movf	0+(??___fladd+0)+0,w
  7748  0437  082C               	movwf	(___fladd@b)
  7749  0438  00A4               
  7750                           	line	207
  7751                           		incf	((___fladd@bexp)),w
  7752  0439  0A3A               	btfsc	status,2
  7753  043A  1903               	goto	u2651
  7754  043B  2C3D               	goto	u2650
  7755  043C  2C3E               u2651:
  7756  043D                     	goto	l637
  7757  043D  2C44               u2650:
  7758  043E                     	line	208
  7759                           	
  7760                           l2185:	
  7761  043E                     	movlw	low(01h)
  7762  043E  3001               	movwf	(??___fladd+0)+0
  7763  043F  00AC               	movf	(??___fladd+0)+0,w
  7764  0440  082C               	addwf	(___fladd@bexp),f
  7765  0441  07BA               	goto	l637
  7766  0442  2C44               	line	209
  7767                           	
  7768                           l639:	
  7769  0443                     	goto	l637
  7770  0443  2C44               	line	210
  7771                           	
  7772                           l638:	
  7773  0444                     	line	211
  7774                           	
  7775                           l637:	
  7776  0444                     	line	215
  7777                           		incf	((___fladd@bexp)),w
  7778  0444  0A3A               	btfsc	status,2
  7779  0445  1903               	goto	u2661
  7780  0446  2C48               	goto	u2660
  7781  0447  2C49               u2661:
  7782  0448                     	goto	l2189
  7783  0448  2C4F               u2660:
  7784  0449                     	
  7785                           l2187:	
  7786  0449                     	movf	((___fladd@bexp)),w
  7787  0449  083A               	btfss	status,2
  7788  044A  1D03               	goto	u2671
  7789  044B  2C4D               	goto	u2670
  7790  044C  2C4E               u2671:
  7791  044D                     	goto	l2195
  7792  044D  2C5F               u2670:
  7793  044E                     	goto	l2189
  7794  044E  2C4F               	
  7795                           l642:	
  7796  044F                     	line	216
  7797                           	
  7798                           l2189:	
  7799  044F                     	movlw	high highword(0)
  7800  044F  3000               	movwf	(___fladd@b+3)
  7801  0450  00A7               	movlw	low highword(0)
  7802  0451  3000               	movwf	(___fladd@b+2)
  7803  0452  00A6               	movlw	high(0)
  7804  0453  3000               	movwf	(___fladd@b+1)
  7805  0454  00A5               	movlw	low(0)
  7806  0455  3000               	movwf	(___fladd@b)
  7807  0456  00A4               
  7808                           	line	218
  7809                           	
  7810                           l2191:	
  7811  0457                     	movf	((___fladd@bexp)),w
  7812  0457  083A               	btfss	status,2
  7813  0458  1D03               	goto	u2681
  7814  0459  2C5B               	goto	u2680
  7815  045A  2C5C               u2681:
  7816  045B                     	goto	l2195
  7817  045B  2C5F               u2680:
  7818  045C                     	line	219
  7819                           	
  7820                           l2193:	
  7821  045C                     	clrf	(___fladd@signs)
  7822  045C  01B8               	goto	l2195
  7823  045D  2C5F               	line	220
  7824                           	
  7825                           l643:	
  7826  045E                     	goto	l2195
  7827  045E  2C5F               	line	221
  7828                           	
  7829                           l640:	
  7830  045F                     	line	225
  7831                           	
  7832                           l2195:	
  7833  045F                     	btfss	(___fladd@bexp),(0)&7
  7834  045F  1C3A               	goto	u2691
  7835  0460  2C62               	goto	u2690
  7836  0461  2C63               u2691:
  7837  0462                     	goto	l2199
  7838  0462  2C65               u2690:
  7839  0463                     	line	226
  7840                           	
  7841                           l2197:	
  7842  0463                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  7843  0463  17A6               	line	227
  7844                           	goto	l645
  7845  0464  2C69               	line	229
  7846                           	
  7847                           l644:	
  7848  0465                     	line	230
  7849                           	
  7850                           l2199:	
  7851  0465                     	movlw	low(07Fh)
  7852  0465  307F               	movwf	(??___fladd+0)+0
  7853  0466  00AC               	movf	(??___fladd+0)+0,w
  7854  0467  082C               	andwf	0+(___fladd@b)+02h,f
  7855  0468  05A6               	line	231
  7856                           	
  7857                           l645:	
  7858  0469                     	line	232
  7859                           	movf	(___fladd@bexp),w
  7860  0469  083A               	movwf	(??___fladd+0)+0
  7861  046A  00AC               	clrc
  7862  046B  1003               	rrf	(??___fladd+0)+0,w
  7863  046C  0C2C               	movwf	(??___fladd+1)+0
  7864  046D  00AD               	movf	(??___fladd+1)+0,w
  7865  046E  082D               	movwf	0+(___fladd@b)+03h
  7866  046F  00A7               	line	233
  7867                           	
  7868                           l2201:	
  7869  0470                     	btfss	(___fladd@signs),(7)&7
  7870  0470  1FB8               	goto	u2701
  7871  0471  2C73               	goto	u2700
  7872  0472  2C74               u2701:
  7873  0473                     	goto	l646
  7874  0473  2C75               u2700:
  7875  0474                     	line	234
  7876                           	
  7877                           l2203:	
  7878  0474                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  7879  0474  17A7               	line	235
  7880                           	
  7881                           l646:	
  7882  0475                     	line	236
  7883                           	line	237
  7884                           	
  7885                           l616:	
  7886  0475                     	return
  7887  0475  0008               	opt stack 0
  7888                           GLOBAL	__end_of___fladd
  7889                           	__end_of___fladd:
  7890  0476                     	signat	___fladd,8316
  7891                           	global	___awmod
  7892                           
  7893 ;; *************** function ___awmod *****************
  7894 ;; Defined at:
  7895 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  7896 ;; Parameters:    Size  Location     Type
  7897 ;;  divisor         2    0[COMMON] int 
  7898 ;;  dividend        2    2[COMMON] int 
  7899 ;; Auto vars:     Size  Location     Type
  7900 ;;  sign            1    6[COMMON] unsigned char 
  7901 ;;  counter         1    5[COMMON] unsigned char 
  7902 ;; Return value:  Size  Location     Type
  7903 ;;                  2    0[COMMON] int 
  7904 ;; Registers used:
  7905 ;;		wreg, status,2, status,0
  7906 ;; Tracked objects:
  7907 ;;		On entry : 0/0
  7908 ;;		On exit  : 0/0
  7909 ;;		Unchanged: 0/0
  7910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7911 ;;      Params:         4       0       0       0       0
  7912 ;;      Locals:         2       0       0       0       0
  7913 ;;      Temps:          1       0       0       0       0
  7914 ;;      Totals:         7       0       0       0       0
  7915 ;;Total ram usage:        7 bytes
  7916 ;; Hardware stack levels used:    1
  7917 ;; This function calls:
  7918 ;;		Nothing
  7919 ;; This function is called by:
  7920 ;;		_main
  7921 ;; This function uses a non-reentrant model
  7922 ;;
  7923                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  7924                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  7925                           	line	5
  7926                           global __ptext21
  7927                           __ptext21:	;psect for function ___awmod
  7928  0C64                     psect	text21
  7929                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awmod.c"
  7930                           	line	5
  7931                           	global	__size_of___awmod
  7932                           	__size_of___awmod	equ	__end_of___awmod-___awmod
  7933  0063                     	
  7934                           ___awmod:	
  7935  0C64                     ;incstack = 0
  7936                           	opt	stack 7
  7937                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  7938                           	line	12
  7939                           	
  7940                           l1929:	
  7941  0C64                     	clrf	(___awmod@sign)
  7942  0C64  01F6               	line	13
  7943                           	
  7944                           l1931:	
  7945  0C65                     	btfss	(___awmod@dividend+1),7
  7946  0C65  1FF3               	goto	u2051
  7947  0C66  2C68               	goto	u2050
  7948  0C67  2C69               u2051:
  7949  0C68                     	goto	l1937
  7950  0C68  2C71               u2050:
  7951  0C69                     	line	14
  7952                           	
  7953                           l1933:	
  7954  0C69                     	comf	(___awmod@dividend),f
  7955  0C69  09F2               	comf	(___awmod@dividend+1),f
  7956  0C6A  09F3               	incf	(___awmod@dividend),f
  7957  0C6B  0AF2               	skipnz
  7958  0C6C  1903               	incf	(___awmod@dividend+1),f
  7959  0C6D  0AF3               	line	15
  7960                           	
  7961                           l1935:	
  7962  0C6E                     	clrf	(___awmod@sign)
  7963  0C6E  01F6               	incf	(___awmod@sign),f
  7964  0C6F  0AF6               	goto	l1937
  7965  0C70  2C71               	line	16
  7966                           	
  7967                           l466:	
  7968  0C71                     	line	17
  7969                           	
  7970                           l1937:	
  7971  0C71                     	btfss	(___awmod@divisor+1),7
  7972  0C71  1FF1               	goto	u2061
  7973  0C72  2C74               	goto	u2060
  7974  0C73  2C75               u2061:
  7975  0C74                     	goto	l1941
  7976  0C74  2C7B               u2060:
  7977  0C75                     	line	18
  7978                           	
  7979                           l1939:	
  7980  0C75                     	comf	(___awmod@divisor),f
  7981  0C75  09F0               	comf	(___awmod@divisor+1),f
  7982  0C76  09F1               	incf	(___awmod@divisor),f
  7983  0C77  0AF0               	skipnz
  7984  0C78  1903               	incf	(___awmod@divisor+1),f
  7985  0C79  0AF1               	goto	l1941
  7986  0C7A  2C7B               	
  7987                           l467:	
  7988  0C7B                     	line	19
  7989                           	
  7990                           l1941:	
  7991  0C7B                     	movf	((___awmod@divisor)),w
  7992  0C7B  0870               iorwf	((___awmod@divisor+1)),w
  7993  0C7C  0471               	btfsc	status,2
  7994  0C7D  1903               	goto	u2071
  7995  0C7E  2C80               	goto	u2070
  7996  0C7F  2C81               u2071:
  7997  0C80                     	goto	l1959
  7998  0C80  2CB6               u2070:
  7999  0C81                     	line	20
  8000                           	
  8001                           l1943:	
  8002  0C81                     	clrf	(___awmod@counter)
  8003  0C81  01F5               	incf	(___awmod@counter),f
  8004  0C82  0AF5               	line	21
  8005                           	goto	l1949
  8006  0C83  2C90               	
  8007                           l470:	
  8008  0C84                     	line	22
  8009                           	
  8010                           l1945:	
  8011  0C84                     	movlw	01h
  8012  0C84  3001               	
  8013                           u2085:
  8014  0C85                     	clrc
  8015  0C85  1003               	rlf	(___awmod@divisor),f
  8016  0C86  0DF0               	rlf	(___awmod@divisor+1),f
  8017  0C87  0DF1               	addlw	-1
  8018  0C88  3EFF               	skipz
  8019  0C89  1D03               	goto	u2085
  8020  0C8A  2C85               	line	23
  8021                           	
  8022                           l1947:	
  8023  0C8B                     	movlw	low(01h)
  8024  0C8B  3001               	movwf	(??___awmod+0)+0
  8025  0C8C  00F4               	movf	(??___awmod+0)+0,w
  8026  0C8D  0874               	addwf	(___awmod@counter),f
  8027  0C8E  07F5               	goto	l1949
  8028  0C8F  2C90               	line	24
  8029                           	
  8030                           l469:	
  8031  0C90                     	line	21
  8032                           	
  8033                           l1949:	
  8034  0C90                     	btfss	(___awmod@divisor+1),(15)&7
  8035  0C90  1FF1               	goto	u2091
  8036  0C91  2C93               	goto	u2090
  8037  0C92  2C94               u2091:
  8038  0C93                     	goto	l1945
  8039  0C93  2C84               u2090:
  8040  0C94                     	goto	l1951
  8041  0C94  2C96               	
  8042                           l471:	
  8043  0C95                     	goto	l1951
  8044  0C95  2C96               	line	25
  8045                           	
  8046                           l472:	
  8047  0C96                     	line	26
  8048                           	
  8049                           l1951:	
  8050  0C96                     	movf	(___awmod@divisor+1),w
  8051  0C96  0871               	subwf	(___awmod@dividend+1),w
  8052  0C97  0273               	skipz
  8053  0C98  1D03               	goto	u2105
  8054  0C99  2C9C               	movf	(___awmod@divisor),w
  8055  0C9A  0870               	subwf	(___awmod@dividend),w
  8056  0C9B  0272               u2105:
  8057  0C9C                     	skipc
  8058  0C9C  1C03               	goto	u2101
  8059  0C9D  2C9F               	goto	u2100
  8060  0C9E  2CA0               u2101:
  8061  0C9F                     	goto	l1955
  8062  0C9F  2CA7               u2100:
  8063  0CA0                     	line	27
  8064                           	
  8065                           l1953:	
  8066  0CA0                     	movf	(___awmod@divisor),w
  8067  0CA0  0870               	subwf	(___awmod@dividend),f
  8068  0CA1  02F2               	movf	(___awmod@divisor+1),w
  8069  0CA2  0871               	skipc
  8070  0CA3  1C03               	decf	(___awmod@dividend+1),f
  8071  0CA4  03F3               	subwf	(___awmod@dividend+1),f
  8072  0CA5  02F3               	goto	l1955
  8073  0CA6  2CA7               	
  8074                           l473:	
  8075  0CA7                     	line	28
  8076                           	
  8077                           l1955:	
  8078  0CA7                     	movlw	01h
  8079  0CA7  3001               	
  8080                           u2115:
  8081  0CA8                     	clrc
  8082  0CA8  1003               	rrf	(___awmod@divisor+1),f
  8083  0CA9  0CF1               	rrf	(___awmod@divisor),f
  8084  0CAA  0CF0               	addlw	-1
  8085  0CAB  3EFF               	skipz
  8086  0CAC  1D03               	goto	u2115
  8087  0CAD  2CA8               	line	29
  8088                           	
  8089                           l1957:	
  8090  0CAE                     	movlw	01h
  8091  0CAE  3001               	subwf	(___awmod@counter),f
  8092  0CAF  02F5               	btfss	status,2
  8093  0CB0  1D03               	goto	u2121
  8094  0CB1  2CB3               	goto	u2120
  8095  0CB2  2CB4               u2121:
  8096  0CB3                     	goto	l1951
  8097  0CB3  2C96               u2120:
  8098  0CB4                     	goto	l1959
  8099  0CB4  2CB6               	
  8100                           l474:	
  8101  0CB5                     	goto	l1959
  8102  0CB5  2CB6               	line	30
  8103                           	
  8104                           l468:	
  8105  0CB6                     	line	31
  8106                           	
  8107                           l1959:	
  8108  0CB6                     	movf	((___awmod@sign)),w
  8109  0CB6  0876               	btfsc	status,2
  8110  0CB7  1903               	goto	u2131
  8111  0CB8  2CBA               	goto	u2130
  8112  0CB9  2CBB               u2131:
  8113  0CBA                     	goto	l1963
  8114  0CBA  2CC1               u2130:
  8115  0CBB                     	line	32
  8116                           	
  8117                           l1961:	
  8118  0CBB                     	comf	(___awmod@dividend),f
  8119  0CBB  09F2               	comf	(___awmod@dividend+1),f
  8120  0CBC  09F3               	incf	(___awmod@dividend),f
  8121  0CBD  0AF2               	skipnz
  8122  0CBE  1903               	incf	(___awmod@dividend+1),f
  8123  0CBF  0AF3               	goto	l1963
  8124  0CC0  2CC1               	
  8125                           l475:	
  8126  0CC1                     	line	33
  8127                           	
  8128                           l1963:	
  8129  0CC1                     	movf	(___awmod@dividend+1),w
  8130  0CC1  0873               	movwf	(?___awmod+1)
  8131  0CC2  00F1               	movf	(___awmod@dividend),w
  8132  0CC3  0872               	movwf	(?___awmod)
  8133  0CC4  00F0               	goto	l476
  8134  0CC5  2CC6               	
  8135                           l1965:	
  8136  0CC6                     	line	34
  8137                           	
  8138                           l476:	
  8139  0CC6                     	return
  8140  0CC6  0008               	opt stack 0
  8141                           GLOBAL	__end_of___awmod
  8142                           	__end_of___awmod:
  8143  0CC7                     	signat	___awmod,8314
  8144                           	global	_I2C_Master_Write
  8145                           
  8146 ;; *************** function _I2C_Master_Write *****************
  8147 ;; Defined at:
  8148 ;;		line 65 in file "I2C.c"
  8149 ;; Parameters:    Size  Location     Type
  8150 ;;  d               2    0[COMMON] unsigned int 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;		None
  8153 ;; Return value:  Size  Location     Type
  8154 ;;                  1    wreg      void 
  8155 ;; Registers used:
  8156 ;;		wreg, status,2, status,0, pclath, cstack
  8157 ;; Tracked objects:
  8158 ;;		On entry : 0/0
  8159 ;;		On exit  : 0/0
  8160 ;;		Unchanged: 0/0
  8161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8162 ;;      Params:         2       0       0       0       0
  8163 ;;      Locals:         0       0       0       0       0
  8164 ;;      Temps:          0       0       0       0       0
  8165 ;;      Totals:         2       0       0       0       0
  8166 ;;Total ram usage:        2 bytes
  8167 ;; Hardware stack levels used:    1
  8168 ;; Hardware stack levels required when called:    1
  8169 ;; This function calls:
  8170 ;;		_I2C_Master_Wait
  8171 ;; This function is called by:
  8172 ;;		_main
  8173 ;; This function uses a non-reentrant model
  8174 ;;
  8175                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8176                           	file	"I2C.c"
  8177                           	line	65
  8178                           global __ptext22
  8179                           __ptext22:	;psect for function _I2C_Master_Write
  8180  0A43                     psect	text22
  8181                           	file	"I2C.c"
  8182                           	line	65
  8183                           	global	__size_of_I2C_Master_Write
  8184                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
  8185  000A                     	
  8186                           _I2C_Master_Write:	
  8187  0A43                     ;incstack = 0
  8188                           	opt	stack 6
  8189                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8190                           	line	67
  8191                           	
  8192                           l1863:	
  8193  0A43                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
  8194                           	fcall	_I2C_Master_Wait
  8195  0A43  120A  158A  224D  120A  158A  	line	68
  8196                           	
  8197                           l1865:	
  8198  0A48                     ;I2C.c: 68:     SSPBUF = d;
  8199                           	movf	(I2C_Master_Write@d),w
  8200  0A48  0870               	bcf	status, 5	;RP0=0, select bank0
  8201  0A49  1283               	bcf	status, 6	;RP1=0, select bank0
  8202  0A4A  1303               	movwf	(19)	;volatile
  8203  0A4B  0093               	line	69
  8204                           	
  8205                           l47:	
  8206  0A4C                     	return
  8207  0A4C  0008               	opt stack 0
  8208                           GLOBAL	__end_of_I2C_Master_Write
  8209                           	__end_of_I2C_Master_Write:
  8210  0A4D                     	signat	_I2C_Master_Write,4217
  8211                           	global	_I2C_Master_Stop
  8212                           
  8213 ;; *************** function _I2C_Master_Stop *****************
  8214 ;; Defined at:
  8215 ;;		line 55 in file "I2C.c"
  8216 ;; Parameters:    Size  Location     Type
  8217 ;;		None
  8218 ;; Auto vars:     Size  Location     Type
  8219 ;;		None
  8220 ;; Return value:  Size  Location     Type
  8221 ;;                  1    wreg      void 
  8222 ;; Registers used:
  8223 ;;		wreg, status,2, status,0, pclath, cstack
  8224 ;; Tracked objects:
  8225 ;;		On entry : 0/0
  8226 ;;		On exit  : 0/0
  8227 ;;		Unchanged: 0/0
  8228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8229 ;;      Params:         0       0       0       0       0
  8230 ;;      Locals:         0       0       0       0       0
  8231 ;;      Temps:          0       0       0       0       0
  8232 ;;      Totals:         0       0       0       0       0
  8233 ;;Total ram usage:        0 bytes
  8234 ;; Hardware stack levels used:    1
  8235 ;; Hardware stack levels required when called:    1
  8236 ;; This function calls:
  8237 ;;		_I2C_Master_Wait
  8238 ;; This function is called by:
  8239 ;;		_main
  8240 ;; This function uses a non-reentrant model
  8241 ;;
  8242                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8243                           	line	55
  8244                           global __ptext23
  8245                           __ptext23:	;psect for function _I2C_Master_Stop
  8246  0A3A                     psect	text23
  8247                           	file	"I2C.c"
  8248                           	line	55
  8249                           	global	__size_of_I2C_Master_Stop
  8250                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
  8251  0009                     	
  8252                           _I2C_Master_Stop:	
  8253  0A3A                     ;incstack = 0
  8254                           	opt	stack 6
  8255                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  8256                           	line	57
  8257                           	
  8258                           l1859:	
  8259  0A3A                     ;I2C.c: 57:     I2C_Master_Wait();
  8260                           	fcall	_I2C_Master_Wait
  8261  0A3A  120A  158A  224D  120A  158A  	line	58
  8262                           	
  8263                           l1861:	
  8264  0A3F                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  8265                           	bsf	status, 5	;RP0=1, select bank1
  8266  0A3F  1683               	bcf	status, 6	;RP1=0, select bank1
  8267  0A40  1303               	bsf	(145)^080h,2	;volatile
  8268  0A41  1511               	line	59
  8269                           	
  8270                           l44:	
  8271  0A42                     	return
  8272  0A42  0008               	opt stack 0
  8273                           GLOBAL	__end_of_I2C_Master_Stop
  8274                           	__end_of_I2C_Master_Stop:
  8275  0A43                     	signat	_I2C_Master_Stop,89
  8276                           	global	_I2C_Master_Start
  8277                           
  8278 ;; *************** function _I2C_Master_Start *****************
  8279 ;; Defined at:
  8280 ;;		line 39 in file "I2C.c"
  8281 ;; Parameters:    Size  Location     Type
  8282 ;;		None
  8283 ;; Auto vars:     Size  Location     Type
  8284 ;;		None
  8285 ;; Return value:  Size  Location     Type
  8286 ;;                  1    wreg      void 
  8287 ;; Registers used:
  8288 ;;		wreg, status,2, status,0, pclath, cstack
  8289 ;; Tracked objects:
  8290 ;;		On entry : 0/0
  8291 ;;		On exit  : 0/0
  8292 ;;		Unchanged: 0/0
  8293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8294 ;;      Params:         0       0       0       0       0
  8295 ;;      Locals:         0       0       0       0       0
  8296 ;;      Temps:          0       0       0       0       0
  8297 ;;      Totals:         0       0       0       0       0
  8298 ;;Total ram usage:        0 bytes
  8299 ;; Hardware stack levels used:    1
  8300 ;; Hardware stack levels required when called:    1
  8301 ;; This function calls:
  8302 ;;		_I2C_Master_Wait
  8303 ;; This function is called by:
  8304 ;;		_main
  8305 ;; This function uses a non-reentrant model
  8306 ;;
  8307                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8308                           	line	39
  8309                           global __ptext24
  8310                           __ptext24:	;psect for function _I2C_Master_Start
  8311  0A31                     psect	text24
  8312                           	file	"I2C.c"
  8313                           	line	39
  8314                           	global	__size_of_I2C_Master_Start
  8315                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
  8316  0009                     	
  8317                           _I2C_Master_Start:	
  8318  0A31                     ;incstack = 0
  8319                           	opt	stack 6
  8320                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  8321                           	line	41
  8322                           	
  8323                           l1855:	
  8324  0A31                     ;I2C.c: 41:     I2C_Master_Wait();
  8325                           	fcall	_I2C_Master_Wait
  8326  0A31  120A  158A  224D  120A  158A  	line	42
  8327                           	
  8328                           l1857:	
  8329  0A36                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  8330                           	bsf	status, 5	;RP0=1, select bank1
  8331  0A36  1683               	bcf	status, 6	;RP1=0, select bank1
  8332  0A37  1303               	bsf	(145)^080h,0	;volatile
  8333  0A38  1411               	line	43
  8334                           	
  8335                           l38:	
  8336  0A39                     	return
  8337  0A39  0008               	opt stack 0
  8338                           GLOBAL	__end_of_I2C_Master_Start
  8339                           	__end_of_I2C_Master_Start:
  8340  0A3A                     	signat	_I2C_Master_Start,89
  8341                           	global	_I2C_Master_Read
  8342                           
  8343 ;; *************** function _I2C_Master_Read *****************
  8344 ;; Defined at:
  8345 ;;		line 74 in file "I2C.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  a               2    0[COMMON] unsigned short 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  temp            2    4[COMMON] unsigned short 
  8350 ;; Return value:  Size  Location     Type
  8351 ;;                  2    0[COMMON] unsigned short 
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0, pclath, cstack
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8359 ;;      Params:         2       0       0       0       0
  8360 ;;      Locals:         2       0       0       0       0
  8361 ;;      Temps:          2       0       0       0       0
  8362 ;;      Totals:         6       0       0       0       0
  8363 ;;Total ram usage:        6 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:    1
  8366 ;; This function calls:
  8367 ;;		_I2C_Master_Wait
  8368 ;; This function is called by:
  8369 ;;		_main
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  8373                           	line	74
  8374                           global __ptext25
  8375                           __ptext25:	;psect for function _I2C_Master_Read
  8376  0AF3                     psect	text25
  8377                           	file	"I2C.c"
  8378                           	line	74
  8379                           	global	__size_of_I2C_Master_Read
  8380                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  8381  002F                     	
  8382                           _I2C_Master_Read:	
  8383  0AF3                     ;incstack = 0
  8384                           	opt	stack 6
  8385                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  8386                           	line	77
  8387                           	
  8388                           l1867:	
  8389  0AF3                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  8390                           	fcall	_I2C_Master_Wait
  8391  0AF3  120A  158A  224D  120A  158A  	line	78
  8392                           	
  8393                           l1869:	
  8394  0AF8                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  8395                           	bsf	status, 5	;RP0=1, select bank1
  8396  0AF8  1683               	bcf	status, 6	;RP1=0, select bank1
  8397  0AF9  1303               	bsf	(145)^080h,3	;volatile
  8398  0AFA  1591               	line	79
  8399                           ;I2C.c: 79:     I2C_Master_Wait();
  8400                           	fcall	_I2C_Master_Wait
  8401  0AFB  120A  158A  224D  120A  158A  	line	80
  8402                           	
  8403                           l1871:	
  8404  0B00                     ;I2C.c: 80:     temp = SSPBUF;
  8405                           	bcf	status, 5	;RP0=0, select bank0
  8406  0B00  1283               	bcf	status, 6	;RP1=0, select bank0
  8407  0B01  1303               	movf	(19),w	;volatile
  8408  0B02  0813               	movwf	(??_I2C_Master_Read+0)+0
  8409  0B03  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  8410  0B04  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  8411  0B05  0872               	movwf	(I2C_Master_Read@temp)
  8412  0B06  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  8413  0B07  0873               	movwf	(I2C_Master_Read@temp+1)
  8414  0B08  00F5               	line	81
  8415                           	
  8416                           l1873:	
  8417  0B09                     ;I2C.c: 81:     I2C_Master_Wait();
  8418                           	fcall	_I2C_Master_Wait
  8419  0B09  120A  158A  224D  120A  158A  	line	82
  8420                           	
  8421                           l1875:	
  8422  0B0E                     ;I2C.c: 82:     if(a == 1){
  8423                           		decf	((I2C_Master_Read@a)),w
  8424  0B0E  0370               iorwf	((I2C_Master_Read@a+1)),w
  8425  0B0F  0471               	btfss	status,2
  8426  0B10  1D03               	goto	u2011
  8427  0B11  2B13               	goto	u2010
  8428  0B12  2B14               u2011:
  8429  0B13                     	goto	l50
  8430  0B13  2B18               u2010:
  8431  0B14                     	line	83
  8432                           	
  8433                           l1877:	
  8434  0B14                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  8435                           	bsf	status, 5	;RP0=1, select bank1
  8436  0B14  1683               	bcf	status, 6	;RP1=0, select bank1
  8437  0B15  1303               	bcf	(145)^080h,5	;volatile
  8438  0B16  1291               	line	84
  8439                           ;I2C.c: 84:     }else{
  8440                           	goto	l51
  8441  0B17  2B1B               	
  8442                           l50:	
  8443  0B18                     	line	85
  8444                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  8445                           	bsf	status, 5	;RP0=1, select bank1
  8446  0B18  1683               	bcf	status, 6	;RP1=0, select bank1
  8447  0B19  1303               	bsf	(145)^080h,5	;volatile
  8448  0B1A  1691               	line	86
  8449                           ;I2C.c: 86:     }
  8450                           	
  8451                           l51:	
  8452  0B1B                     	line	87
  8453                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  8454                           	bsf	(145)^080h,4	;volatile
  8455  0B1B  1611               	line	88
  8456                           	
  8457                           l1879:	
  8458  0B1C                     ;I2C.c: 88:     return temp;
  8459                           	movf	(I2C_Master_Read@temp+1),w
  8460  0B1C  0875               	movwf	(?_I2C_Master_Read+1)
  8461  0B1D  00F1               	movf	(I2C_Master_Read@temp),w
  8462  0B1E  0874               	movwf	(?_I2C_Master_Read)
  8463  0B1F  00F0               	goto	l52
  8464  0B20  2B21               	
  8465                           l1881:	
  8466  0B21                     	line	89
  8467                           	
  8468                           l52:	
  8469  0B21                     	return
  8470  0B21  0008               	opt stack 0
  8471                           GLOBAL	__end_of_I2C_Master_Read
  8472                           	__end_of_I2C_Master_Read:
  8473  0B22                     	signat	_I2C_Master_Read,4218
  8474                           	global	_I2C_Master_Wait
  8475                           
  8476 ;; *************** function _I2C_Master_Wait *****************
  8477 ;; Defined at:
  8478 ;;		line 32 in file "I2C.c"
  8479 ;; Parameters:    Size  Location     Type
  8480 ;;		None
  8481 ;; Auto vars:     Size  Location     Type
  8482 ;;		None
  8483 ;; Return value:  Size  Location     Type
  8484 ;;                  1    wreg      void 
  8485 ;; Registers used:
  8486 ;;		wreg, status,2
  8487 ;; Tracked objects:
  8488 ;;		On entry : 0/0
  8489 ;;		On exit  : 0/0
  8490 ;;		Unchanged: 0/0
  8491 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8492 ;;      Params:         0       0       0       0       0
  8493 ;;      Locals:         0       0       0       0       0
  8494 ;;      Temps:          0       0       0       0       0
  8495 ;;      Totals:         0       0       0       0       0
  8496 ;;Total ram usage:        0 bytes
  8497 ;; Hardware stack levels used:    1
  8498 ;; This function calls:
  8499 ;;		Nothing
  8500 ;; This function is called by:
  8501 ;;		_I2C_Master_Start
  8502 ;;		_I2C_Master_Stop
  8503 ;;		_I2C_Master_Write
  8504 ;;		_I2C_Master_Read
  8505 ;;		_I2C_Master_RepeatedStart
  8506 ;; This function uses a non-reentrant model
  8507 ;;
  8508                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  8509                           	line	32
  8510                           global __ptext26
  8511                           __ptext26:	;psect for function _I2C_Master_Wait
  8512  0A4D                     psect	text26
  8513                           	file	"I2C.c"
  8514                           	line	32
  8515                           	global	__size_of_I2C_Master_Wait
  8516                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
  8517  000F                     	
  8518                           _I2C_Master_Wait:	
  8519  0A4D                     ;incstack = 0
  8520                           	opt	stack 6
  8521                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  8522                           	line	34
  8523                           	
  8524                           l1807:	
  8525  0A4D                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  8526                           	goto	l32
  8527  0A4D  2A4E               	
  8528                           l33:	
  8529  0A4E                     	
  8530                           l32:	
  8531  0A4E                     	bsf	status, 5	;RP0=1, select bank1
  8532  0A4E  1683               	bcf	status, 6	;RP1=0, select bank1
  8533  0A4F  1303               	btfsc	(148)^080h,(2)&7	;volatile
  8534  0A50  1914               	goto	u1951
  8535  0A51  2A53               	goto	u1950
  8536  0A52  2A54               u1951:
  8537  0A53                     	goto	l32
  8538  0A53  2A4E               u1950:
  8539  0A54                     	
  8540                           l1809:	
  8541  0A54                     	movf	(145)^080h,w	;volatile
  8542  0A54  0811               	andlw	01Fh
  8543  0A55  391F               	btfss	status,2
  8544  0A56  1D03               	goto	u1961
  8545  0A57  2A59               	goto	u1960
  8546  0A58  2A5A               u1961:
  8547  0A59                     	goto	l32
  8548  0A59  2A4E               u1960:
  8549  0A5A                     	goto	l35
  8550  0A5A  2A5B               	
  8551                           l34:	
  8552  0A5B                     	line	35
  8553                           	
  8554                           l35:	
  8555  0A5B                     	return
  8556  0A5B  0008               	opt stack 0
  8557                           GLOBAL	__end_of_I2C_Master_Wait
  8558                           	__end_of_I2C_Master_Wait:
  8559  0A5C                     	signat	_I2C_Master_Wait,89
  8560                           global	___latbits
  8561                           ___latbits	equ	2
  8562  0002                     	global	btemp
  8563                           	btemp set 07Eh
  8564  007E                     
  8565                           	DABS	1,126,2	;btemp
  8566                           	global	wtemp0
  8567                           	wtemp0 set btemp+0
  8568  007E                     	end


Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         33
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     58      79
    BANK1            80      0      12
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_2(CODE[3]), STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 8
		 -> writeIntLCD16@buffer(COMMON[8]), writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 8
		 -> STR_7(CODE[3]), STR_6(CODE[3]), STR_5(CODE[3]), STR_4(CODE[3]), 
		 -> STR_3(CODE[3]), writeIntLCD16@buffer(COMMON[8]), writeIntLCD@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _main->___flmul
    _writeFloat->_writeIntLCD
    _writeIntLCD->_sprintf
    _setup->_I2C_Master_Init
    ___flmul->___fladd
    ___fladd->___flneg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   14934
                                             54 BANK0      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___awmod
                            ___fladd
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                         _writeFloat
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeFloat                                           4     2      2    3186
                                             21 BANK0      4     2      2
                       _setCursorLCD
                       _writeCharLCD
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    2040
                                             13 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1320
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    1872
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                       _setCursorLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2     644
                                              2 COMMON     7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1     772
                                              3 COMMON     3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     398
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2417
                                             28 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                              4 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4     448
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2      98
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     273
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___awmod
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _setCursorLCD
       _cmdLCD
     _writeStrLCD
       _writeCharLCD
   _writeCharLCD
   _writeFloat
     _setCursorLCD
       _cmdLCD
     _writeCharLCD
     _writeIntLCD
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _writeStrLCD
         _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      69       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     3A      4F       5       98.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       C       7       15.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      69      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Mar 06 12:35:09 2020

                        pc 0002                __CFG_CP$OFF 0000            writeStrLCD@cont 0077  
                       l32 0A4E                         l33 0A4E                         l34 0A5B  
                       l50 0B18                         l35 0A5B                         l51 0B1B  
                       l52 0B21                         l44 0A42                         l29 0B59  
                       l38 0A39                         l47 0A4C                         l74 0A9C  
                       l82 0BFB                         l91 0B93                         l75 0AA4  
                       l83 0BD8                         l76 0AAA                         l84 0C18  
                       l85 0C18                         l94 0A8D                         l79 0A28  
                       l88 0A79                         l97 0AC8                         _s3 0065  
                       fsr 0004        __Umul8_16@word_mpld 0076                        l103 0D56  
                      l104 0D61                        l105 0D8E                        l106 0DA3  
                      l300 0F7F                        l301 0F9C                        l302 0FDB  
                      l303 0FA1                        l304 0FE5                        l305 0FF9  
                      l306 0FFF                        l500 0E09                        l340 0CE8  
                      l501 0E2D                        l341 0CDA                        l502 0E1A  
                      l342 0CED                        l190 00CE                        l503 0E26  
                      l343 0CEE                        l191 01B6                        l600 0205  
                      l504 0E1B                        l344 0D19                        l192 01B7  
                      l601 021B                        l505 0E2C                        l345 0D29  
                      l193 01B7                        l185 0069                        l610 02B6  
                      l602 0218                        l506 0E3D                        l346 0D33  
                      l290 0F21                        l186 00A5                        l611 02B9  
                      l603 0223                        l339 0D2A                        l291 0F1C  
                      l187 00D0                        l620 031A                        l612 02BF  
                      l604 026F                        l700 072C                        l196 0062  
                      l292 0FFA                        l188 00B9                        l621 03F2  
                      l613 02D6                        l605 0232                        l701 070D  
                      l293 0F1D                        l189 00CF                        l470 0C84  
                      l630 03E3                        l622 03A5                        l614 0329  
                      l606 02A8                        l710 07A6                        l702 071C  
                      l294 0F1E                        l471 0C95                        l631 03EB  
                      l623 03A4                        l615 02E9                        l607 02D6  
                      l711 07DD                        l703 0731                        l287 0FE6  
                      l295 0F3E                        l472 0C96                        l640 045F  
                      l632 03F1                        l624 03B3                        l616 0475  
                      l608 02CD                        l712 07C1                        l704 0756  
                      l720 0EFF                        l296 0F1F                        l288 0F08  
                      l473 0CA7                        l633 0409                        l625 03CA  
                      l617 0328                        l609 02A9                        l713 07DD  
                      l705 074D                        l721 0E85                        l297 0F58  
                      l289 0F1A                        l474 0CB5                        l466 0C71  
                      l642 044F                        l634 0400                        l626 03EC  
                      l618 0311                        l714 07D5                        l706 0755  
                      l730 0EC7                        l722 0E77                        l298 0F62  
                      l475 0CC1                        l467 0C7B                        l643 045E  
                      l635 0408                        l627 03CB                        l619 0314  
                      l707 0754                        l491 0A69                        l731 0EC7  
                      l723 0E8C                        l299 0F8A                        l476 0CC6  
                      l468 0CB6                        l644 0465                        l636 0407  
                      l628 03D9                        l708 078E                        l492 0A6A  
                      l732 0ED3                        l724 0EA8                        l580 0C4F  
                      l469 0C90                        l645 0469                        l637 0444  
                      l629 03E0                        l709 078D                        l733 0EF6  
                      l725 0E8D                        l717 0E58                        l581 0C5D  
                      l646 0475                        l638 0444                        l726 0EAF  
                      l718 0E60                        l582 0C63                        l590 0BC0  
                      l639 0443                        l495 0DC1                        l727 0EBC  
                      l719 0E72                        l575 0C5E                        l591 0BCE  
                      l736 0AD4                        l496 0E3D                        l728 0EB0  
                      l576 0C30                        l592 0BD4                        l737 0ADE  
                      l497 0E0A                        l577 0C24                        l585 0BCF  
                      l738 0AED                        l690 049C                        l498 0DF6  
                      l578 0C35                        l586 0BA9                        l595 01CD  
                      l739 0AF2                        l691 04A7                        l499 0DF7  
                      l579 0C36                        l587 0B9D                        l596 01E3  
                      l692 04B8                        l588 0BAE                        l597 01E0  
                      l693 04CD                        l589 0BAF                        l598 01EC  
                      l694 04CB                        l599 01F9                        l695 04D6  
                      l696 04EB                        l688 0489                        l689 049E  
                      l698 04E1                        l699 07EA                        _GIE 005F  
                      _RD0 0040                        _RD1 0041               __CFG_CPD$OFF 0000  
                      _adc 006D                        _lux 00A0                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 004E  
             ___flmul@bexp 004F               ___flmul@sign 0049               ___flmul@temp 0054  
             ___flmul@prod 0050               __CFG_LVP$OFF 0000               ___fltol@exp1 007A  
                     l2001 0E10                       l2011 01BA                       l2003 0E19  
                     l2101 02BD                       l2021 01D2                       l2013 01C1  
                     l2005 0E1B                       l2111 02DF                       l2103 02BF  
                     l2031 01EC                       l2023 01D7                       l2015 01C7  
                     l2007 0E2D                       l2201 0470                       l2121 0308  
                     l2113 02E8                       l2105 02C8                       l2041 0203  
                     l2033 01F1                       l2025 01E0                       l2017 01CB  
                     l2009 0E32                       l2203 0474                       l2131 0323  
                     l2123 0311                       l2115 02E9                       l2107 02CD  
                     l2051 0219                       l2043 0205                       l2035 01F7  
                     l2027 01E1                       l2019 01CD                       l2211 0487  
                     l2141 0395                       l2125 0314                       l2117 0300  
                     l2109 02DA                       l2133 0329                       l2061 0236  
                     l2045 020A                       l2053 021B                       l2037 01F9  
                     l2029 01E3                       l2301 072C                       l2221 049E  
                     l2213 0489                       l2205 0476                       l2151 03CB  
                     l2135 033F                       l2143 03A5                       l2127 0318  
                     l2119 0304                       l2071 024A                       l2063 023A  
                     l2055 0229                       l2047 020F                       l2039 01FF  
                     l2311 0751                       l2303 0731                       l2231 04B8  
                     l2223 04A7                       l2215 048E                       l2207 047D  
                     l2161 03E3                       l2153 03D4                       l2145 03BB  
                     l2137 038E                       l2129 031A                       l2081 025E  
                     l2073 024E                       l2065 023E                       l2057 022D  
                     l2049 0218                       l2321 0786                       l2313 0756  
                     l2305 0732                       l2241 04D6                       l2233 04BD  
                     l2225 04AC                       l2217 0493                       l2209 0483  
                     l2401 0086                       l2171 03F7                       l2163 03E8  
                     l2155 03D8                       l2147 03C0                       l2139 0390  
                     l2091 0270                       l2083 0262                       l2075 0252  
                     l2067 0242                       l2059 0232                       l2331 07BF  
                     l2315 075B                       l2323 078E                       l2307 0736  
                     l2251 04FB                       l2243 04DB                       l2235 04C2  
                     l2227 04B2                       l2219 049C                       l2411 00B9  
                     l2403 008F                       l2181 041C                       l2173 03FD  
                     l2157 03DD                       l2149 03C9                       l2165 03EC  
                     l2093 028C                       l2085 0266                       l2077 0256  
                     l2069 0246                       l2341 07E1                       l2333 07C1  
                     l2325 079B                       l2317 0769                       l2309 074A  
                     l2261 0589                       l2253 0508                       l2245 04E1  
                     l2237 04CB                       l2229 04B6                       l1701 0BD5  
                     l2421 00E3                       l2413 00BF                       l2405 0096  
                     l2191 0457                       l2183 0420                       l2175 0404  
                     l2159 03E0                       l2167 03F2                       l2095 02AD  
                     l2087 026A                       l2079 025A                       l2343 07EA  
                     l2335 07CF                       l2327 07A6                       l2319 076D  
                     l2271 05EB                       l2263 05A5                       l2255 0525  
                     l2247 04EA                       l2239 04CD                       l2351 0E58  
                     l1703 0BD8                       l1711 0F08                       l2431 0173  
                     l2423 00EB                       l2415 00D0                       l2407 00A5  
                     l2193 045C                       l2185 043E                       l2177 0409  
                     l2169 03F3                       l2097 02B6                       l2089 026F  
                     l2337 07D3                       l2329 07B5                       l2281 067B  
                     l2273 0608                       l2265 05AE                       l2257 0541  
                     l2249 04EB                       l2361 0E85                       l2353 0E68  
                     l2345 0E3F                       l1801 0B56                       l1641 0A71  
                     l1705 0BF4                       l1721 0F21                       l1713 0F0E  
                     l2441 01AC                       l2433 0186                       l2425 00FB  
                     l2417 00D4                       l2409 00AA                       l2195 045F  
                     l2187 0449                       l2179 040E                       l2099 02B9  
                     l2339 07D5                       l2291 070D                       l2283 06A8  
                     l2275 0621                       l2267 05BE                       l2259 056D  
                     l2371 0EBC                       l2363 0E8D                       l2355 0E71  
                     l2347 0E44                       l1803 0B57                       l1811 0A8F  
                     l1643 0A76                       l1707 0BFB                       l1651 0C24  
                     l1731 0F52                       l1723 0F3E                       l1715 0F15  
                     l2435 0192                       l2427 0104                       l2419 00D9  
                     l2197 0463                       l2189 044F                       l2293 0716  
                     l2285 06CE                       l2277 063E                       l2269 05DB  
                     l2381 0EF0                       l2373 0EC0                       l2365 0E91  
                     l2357 0E72                       l2349 0E48                       l1805 0B58  
                     l1821 0B5A                       l1813 0A94                       l1637 0A6C  
                     l1661 0C4D                       l1653 0C2B                       l1645 0C19  
                     l1741 0F7E                       l1733 0F58                       l1725 0F46  
                     l1717 0F1A                       l1709 0F03                       l1901 0D7F  
                     l2437 019E                       l2429 0119                       l1807 0A4D  
                     l2199 0465                       l2295 071A                       l2287 06F6  
                     l2279 066B                       l2383 0EF4                       l2375 0ECB  
                     l2367 0E9F                       l2359 0E77                       l1831 0B7B  
                     l1823 0B63                       l1815 0A9C                       l1639 0A6F  
                     l1911 0010                       l1663 0C4F                       l1655 0C30  
                     l1647 0C1B                       l1671 0B94                       l1751 0F9C  
                     l1743 0F7F                       l1735 0F5A                       l1727 0F4A  
                     l2463 0F33                       l1719 0F20                       l1903 0D87  
                     l2439 01A6                       l1809 0A54                       l1841 0ACA  
                     l2297 071C                       l2289 06FF                       l2385 0EF6  
                     l2377 0ED5                       l2369 0EB0                       l1833 0B81  
                     l1825 0B69                       l1817 0AA4                       l1921 0038  
                     l1913 001D                       l1665 0C56                       l1657 0C36  
                     l1649 0C21                       l1681 0BAF                       l1673 0B9A  
                     l1753 0FA1                       l1737 0F61                       l1745 0F8A  
                     l1729 0F4E                       l1761 0FE6                       l1905 0D8E  
                     l1931 0C65                       l1851 0AED                       l1843 0ACC  
                     l2299 0725                       l2387 0EFF                       l2379 0EEB  
                     l1771 0CC7                       l1819 0A22                       l1835 0B87  
                     l1827 0B6F                       l1923 0044                       l1915 0022  
                     l1659 0C47                       l1667 0C5E                       l1691 0BD4  
                     l1683 0BB9                       l1675 0B9D                       l1755 0FCF  
                     l1747 0F90                       l1739 0F62                       l1763 0FFA  
                     l1907 0D96                       l2395 0063                       l1861 0A3F  
                     l1941 0C7B                       l1933 0C69                       l1853 0AF2  
                     l1845 0AD4                       l1781 0CF7                       l1773 0CD7  
                     l1693 0A7B                       l1837 0B8D                       l1829 0B75  
                     l1925 004D                       l1917 0027                       l1909 0004  
                     l1669 0C63                       l1685 0BC0                       l1677 0BA4  
                     l1765 0FFF                       l1757 0FD6                       l1749 0F97  
                     l2397 0069                       l1871 0B00                       l1855 0A31  
                     l1863 0A43                       l1951 0C96                       l1943 0C81  
                     l1935 0C6E                       l1847 0AD8                       l1783 0D09  
                     l1775 0CDA                       l1791 0D2A                       l1695 0A7E  
                     l1927 0059                       l1919 002F                       l1687 0BC7  
                     l1679 0BA9                       l1759 0FDB                       l1839 0AAE  
                     l2399 0081                       l1881 0B21                       l1873 0B09  
                     l1857 0A36                       l1865 0A48                       l1961 0CBB  
                     l1953 0CA0                       l1945 0C84                       l1937 0C71  
                     l1929 0C64                       l1849 0AE7                       l1793 0D33  
                     l1785 0D17                       l1777 0CE8                       l1697 0A80  
                     l1689 0BCF                       l1875 0B0E                       l1867 0AF3  
                     l1859 0A3A                       l1963 0CC1                       l1955 0CA7  
                     l1947 0C8B                       l1939 0C75                       l1971 0A69  
                     l1787 0D19                       l1779 0CEE                       l1795 0B22  
                     l1699 0A8A                       l1891 0D56                       l1883 0D37  
                     l1877 0B14                       l1869 0AF8                       l1965 0CC6  
                     l1957 0CAE                       l1949 0C90                       l1973 0A6A  
                     l1981 0DC1                       l1789 0D22                       l1797 0B26  
                     l1893 0D5C                       l1885 0D41                       l1879 0B1C  
                     l1959 0CB6                       l1967 0A5C                       l1991 0DE5  
                     l1983 0DD6                       l1975 0DA4                       l1799 0B29  
                     l1895 0D61                       l1887 0D49                       l1969 0A66  
                     l1993 0DEC                       l1985 0DD7                       l1977 0DB7  
                     l1897 0D6C                       l1889 0D51                       l1995 0DF5  
                     l1987 0DDF                       l1979 0DC0                       l1899 0D72  
                     l1997 0DF7                       l1989 0DE1                       l1999 0E0A  
                     STR_1 0826                       STR_3 081A                       STR_4 081A  
                     STR_5 081D                       STR_6 0820                       STR_7 0823  
                     u2000 0AEC                       u2001 0AEB                       u2010 0B14  
                     u2011 0B13                       u2100 0CA0                       u2020 0D51  
                     u2101 0C9F                       u2021 0D50                       u2030 0D5C  
                     u2031 0D5B                       u2120 0CB4                       u3000 074A  
                     u2200 0E08                       u2040 0D87                       u2121 0CB3  
                     u2105 0C9C                       u3001 0749                       u2201 0E07  
                     u2041 0D86                       u2130 0CBB                       u2050 0C69  
                     u3010 0751                       u2210 0E10                       u2131 0CBA  
                     u2115 0CA8                       u2051 0C68                       u3011 0750  
                     u2211 0E0F                       u2060 0C75                       u2300 020A  
                     u3020 075B                       u2140 0A66                       u3100 0E68  
                     u2061 0C74                       u2301 0209                       u3021 075A  
                     u2141 0A65                       u3101 0E67                       u2070 0C81  
                     u2310 020F                       u3030 076D                       u2230 0E2B  
                     u2150 0DB7                       u2071 0C80                       u2311 020E  
                     u3031 076C                       u2231 0E2A                       u2151 0DB6  
                     u2400 02D5                       u2320 0229                       u3040 077C  
                     u2240 0E32                       u2160 0DCF                       u3200 0EF0  
                     u3120 0E8B                       u2401 02D4                       u2321 0228  
                     u2241 0E31                       u2225 0E1D                       u3201 0EEF  
                     u3121 0E8A                       u2090 0C94                       u2410 02DA  
                     u2330 022D                       u2250 01CB                       u3050 079B  
                     u2170 0DE5                       u3210 0EF4                       u2091 0C93  
                     u2411 02D9                       u2331 022C                       u2251 01CA  
                     u3051 079A                       u2171 0DE4                       u3211 0EF3  
                     u3115 0E7C                       u2500 0377                       u2420 02DF  
                     u2340 028C                       u2260 01D2                       u3060 07B5  
                     u2180 0DEC                       u3140 0EAE                       u1700 0B9A  
                     u3220 0096                       u2085 0C85                       u2501 0378  
                     u2421 02DE                       u2341 028B                       u2261 01D1  
                     u3061 07B4                       u3045 0777                       u2181 0DEB  
                     u2165 0DCA                       u3141 0EAD                       u1701 0B99  
                     u3221 0095                       u2510 0395                       u2502 037D  
                     u2350 0297                       u2270 01D7                       u3070 07D3  
                     u1630 0C21                       u3230 00AA                       u2511 0394  
                     u2503 037E                       u2431 02F2                       u2351 0295  
                     u2271 01D6                       u3071 07D2                       u3055 0797  
                     u3135 0EA0                       u1631 0C20                       u3231 00A9  
                     u2600 03FD                       u2520 03BB                       u2440 0304  
                     u2432 02F9                       u2360 0298                       u2280 01F7  
                     u3160 0EC0                       u3080 0E44                       u1720 0BAD  
                     u1800 0F4E                       u3240 00BF                       u2601 03FC  
                     u2521 03BA                       u2441 0303                       u2433 0300  
                     u2345 0288                       u2281 01F6                       u3065 07B1  
                     u3161 0EBF                       u3081 0E43                       u1721 0BAC  
                     u1801 0F4D                       u3241 00BE                       u2610 0404  
                     u2530 03C0                       u2450 0308                       u2370 02AD  
                     u2290 0203                       u3170 0EC6                       u3090 0E48  
                     u1650 0C34                       u1730 0BB9                       u1810 0F60  
                     u2611 0403                       u2531 03BF                       u2451 0307  
                     u2371 02AC                       u2291 0202                       u2195 0DF8  
                     u3171 0EC5                       u3155 0EB4                       u3091 0E47  
                     u1651 0C33                       u1731 0BB8                       u1715 0B9E  
                     u1811 0F5F                       u2700 0474                       u2620 040E  
                     u2460 0318                       u2380 02BD                       u3180 0ECB  
                     u1820 0F7D                       u2701 0473                       u2621 040D  
                     u2461 0317                       u2381 02BC                       u3181 0ECA  
                     u1645 0C25                       u1821 0F7C                       u2630 0420  
                     u2550 03D8                       u2710 0487                       u3190 0EE0  
                     u1910 0D09                       u1670 0C47                       u1750 0BCD  
                     u1830 0F89                       u2631 041F                       u2551 03D7  
                     u2711 0486                       u1911 0D08                       u1671 0C46  
                     u1751 0BCC                       u1735 0BB5                       u1831 0F88  
                     u2640 042F                       u2560 03DD                       u2480 033F  
                     u2720 048E                       u1760 0BE2                       u1840 0F90  
                     u2561 03DC                       u2545 03CD                       u2481 033E  
                     u2801 054F                       u2721 048D                       u1905 0CF0  
                     u1665 0C37                       u1745 0BC1                       u1841 0F8F  
                     u1825 0F79                       u3257 00DF                       u2650 043E  
                     u2570 03E8                       u2490 0365                       u2802 0556  
                     u2730 0493                       u1930 0D28                       u1770 0C05  
                     u1690 0C5C                       u1850 0FE4                       u2651 043D  
                     u2571 03E7                       u2491 0366                       u2483 033B  
                     u2475 031C                       u2395 02C1                       u2811 057B  
                     u2803 055D                       u2731 0492                       u3195 0EDB  
                     u1931 0D27                       u1915 0D05                       u3267 0A74  
                     u1691 0C5B                       u1675 0C43                       u1851 0FE3  
                     u2660 0449                       u2580 03F0                       u2492 036B  
                     u2900 06B4                       u2812 0582                       u2740 04B6  
                     u1940 0B39                       u1780 0C17                       u1860 0FF8  
                     u2661 0448                       u2645 042A                       u2581 03EF  
                     u2493 036C                       u2821 0597                       u2813 0589  
                     u2741 04B5                       u1925 0D1A                       u3277 0B5E  
                     u1781 0C16                       u1685 0C50                       u1861 0FF7  
                     u1950 0A54                       u2670 044E                       u2590 03F7  
                     u2822 059E                       u2750 04BD                       u1870 0CD7  
                     u1790 0F0E                       u1951 0A53                       u2671 044D  
                     u2591 03F6                       u2911 06C0                       u2823 05A5  
                     u2751 04BC                       u1871 0CD6                       u3287 0A85  
                     u1791 0F0D                       u1960 0A5A                       u2680 045C  
                     u2920 06DC                       u2912 06C7                       u2760 04C2  
                     u1961 0A59                       u2681 045B                       u2913 06CE  
                     u2905 06AF                       u2841 05CD                       u2761 04C1  
                     u1945 0B34                       u2690 0463                       u2842 05D4  
                     u2770 04DB                       u1890 0CEC                       u1970 0A94  
                     u2691 0462                       u2931 06E8                       u2851 05FA  
                     u2843 05DB                       u2835 05A7                       u2771 04DA  
                     u1891 0CEB                       u1971 0A93                       _PEIE 005E  
                     u1980 0AD8                       u2932 06EF                       u2852 0601  
                     u2780 04E0                       u1981 0AD7                       u2933 06F6  
                     u2925 06D7                       u2853 0608                       u2781 04DF  
                     u1885 0CDC                       u2871 0630                       u2791 0533  
                     u2960 071A                       u2872 0637                       u2792 053A  
                     u2961 0719                       u2945 06F8                       u2881 065D  
                     u2873 063E                       u2865 060A                       u2793 0541  
                     u2882 0664                       u1995 0ADF                       u2955 070F  
                     u2891 068A                       u2883 066B                       u2980 0730  
                     u2892 0691                       u2981 072F                       u2893 0698  
                     u2990 0736                       u2991 0735                       u2975 071E  
             __CFG_WRT$OFF 0000                       _dec1 006A                       _dec2 0067  
                     _adcl 006C          writeStrLCD@string 0072                       _main 0063  
                     btemp 007E                       start 0000              __CFG_IESO$OFF 0000  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                _writeIntLCD 0AAB              ___fltol@sign1 0079  
          __end_of___fladd 0476                      ?_main 0070            __end_of___flneg 0A6B  
            __CFG_WDTE$OFF 0000            __end_of___awmod 0CC7            __end_of___flmul 07EB  
          __end_of___fltol 0E3E                      _ANSEL 0188            __end_of___lldiv 0D34  
          __end_of___lwdiv 0C64            __end_of___lwmod 0BD5                _writeStrLCD 0BD5  
                    _PORTB 0006                      _PORTD 0008                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
           __CFG_FCMEN$OFF 0000            __end_of_initLCD 0B94            __end_of_dpowers 081A  
                    _count 0064                      _setup 0004      __size_of_writeCharLCD 000F  
           __CFG_BOREN$OFF 0000                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 1000             __CFG_MCLRE$OFF 0000  
          __initialization 07EB               __end_of_main 01BA                     ??_main 0056  
             _writeCharLCD 0A6B          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     ?_setup 0070  
                   _ANSELH 0189                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
         __end_of___xxtofl 0F00             __CFG_PWRTE$OFF 0000          writeIntLCD@buffer 0030  
        writeIntLCD@numero 0034                     _clcLCD 0A22                     _cmdLCD 0A7A  
                ??___fladd 002C                  ??___flneg 007E                  ??___awmod 0074  
                ??___flmul 0044                  ??___fltol 0074                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 007C                     _float1 005A  
                   _float2 00A4                     _cursor 006E            ___awmod@divisor 0070  
          ___awmod@counter 0075                     _toggle 0066                  ??_initLCD 0073  
       __size_of__Umul8_16 002A                  ??_sprintf 0023               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070    __end_of__initialization 07FC  
        writeFloat@decimal 0035                 ___flneg@f1 0020                 ___fltol@f1 0070  
        writeFloat@initPos 0036          writeFloat@integer 0038             __pcstackCOMMON 0070  
            __end_of_setup 0063                    ??_setup 0028                 __pbssBANK0 005A  
               __pbssBANK1 00A0              ?_setCursorLCD 0073          __end_of__Umul8_16 0AF3  
               __pmaintext 0063                    ?_clcLCD 0070                    ?_cmdLCD 0070  
             ?_writeIntLCD 0070               ?_writeStrLCD 0072                  ?___xxtofl 0070  
                  _SSPCON2 0091                    _SSPSTAT 0094                 __stringtab 0800  
           ??_setCursorLCD 0074                    ___fladd 01BA              setCursorLCD@x 0073  
            setCursorLCD@y 0075            __size_of_clcLCD 0007                    ___flneg 0A5C  
          __size_of_cmdLCD 0014                    ___awmod 0C64                    ___flmul 0476  
                  ___fltol 0DA4                    ___lldiv 0CC7                    ___lwdiv 0C19  
                  ___lwmod 0B94                    __ptext1 0D34                    __ptext2 0AAB  
                  __ptext3 0F00                    __ptext4 0B94                    __ptext5 0C19  
                  __ptext6 0004                    __ptext7 0BD5                    __ptext8 0A6B  
                  __ptext9 0A8E                    _initLCD 0B5A                    _entero1 006B  
                  _entero2 0068                    _counter 0069                    _dpowers 0810  
               ??___xxtofl 0074           ___awmod@dividend 0072   __size_of_I2C_Master_Init 0038  
 __size_of_I2C_Master_Read 002F   __size_of_I2C_Master_Wait 000F   __size_of_I2C_Master_Stop 0009  
                  _sprintf 0F00                    clrloop0 0A2A       end_of_initialization 07FC  
__size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A            ___lldiv@divisor 0070  
          ___lldiv@counter 007D           I2C_Master_Init@c 0020           I2C_Master_Read@a 0070  
              ___fladd@grs 003B              ___xxtofl@sign 0078                  _TRISCbits 0087  
              ___flmul@grs 004A                 _writeFloat 0D34             __end_of_clcLCD 0A29  
           __end_of_cmdLCD 0A8E       __end_of_setCursorLCD 0AAB       __size_of_writeIntLCD 001E  
      start_initialization 07EB       __size_of_writeStrLCD 0044          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0073                   ??_cmdLCD 0070  
                __Umul8_16 0AC9                  ___fladd@a 0028                  ___fladd@b 0024  
                ___flmul@a 0040                  ___flmul@b 003C                  ___latbits 0002  
            __pcstackBANK0 0020          __size_of___xxtofl 00C2      writeCharLCD@character 0071  
              sprintf@flag 0027                sprintf@prec 0028           _I2C_Master_Start 0A31  
         _I2C_Master_Write 0A43           ___lwdiv@dividend 0072                  cmdLCD@cmd 0072  
                 ?___fladd 0024                   ?___flneg 0020                   ?___awmod 0070  
                 ?___flmul 003C                   ?___fltol 0070                   ?___lldiv 0070  
              ?_writeFloat 0035                 ?__Umul8_16 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                  __pstrings 0800                   ?_initLCD 0070  
            ?_writeCharLCD 0070           ___lwdiv@quotient 0075                   ?_sprintf 0020  
           __size_of_setup 005F                  clear_ram0 0A29      __size_of_setCursorLCD 001D  
              __stringbase 080F             ??_writeCharLCD 0070        I2C_Master_Read@temp 0074  
      __size_of_writeFloat 0070               _setCursorLCD 0A8E                ??__Umul8_16 0072  
         __size_of___fladd 02BC           __size_of___flneg 000F           __size_of___awmod 0063  
         __size_of___flmul 0375           __size_of___fltol 009A           __size_of___lldiv 006D  
         __size_of___lwdiv 004B           __size_of___lwmod 0041         __end_of__stringtab 0810  
               sprintf@val 0029            _I2C_Master_Init 0B22            _I2C_Master_Read 0AF3  
         __size_of_initLCD 003A                   ___xxtofl 0E3E            _I2C_Master_Wait 0A4D  
          _I2C_Master_Stop 0A3A            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0B5A                   __ptext11 0A22                   __ptext20 01BA  
                 __ptext12 0A7A                   __ptext21 0C64                   __ptext13 0B22  
                 __ptext22 0A43                   __ptext14 0CC7                   __ptext23 0A3A  
                 __ptext15 0E3E                   __ptext24 0A31                   __ptext16 0DA4  
                 __ptext25 0AF3                   __ptext17 0A5C                   __ptext26 0A4D  
                 __ptext18 0476                   __ptext19 0AC9          __CFG_BOR4V$BOR40V 0000  
         __size_of_sprintf 0100              __size_of_main 0157                   _sensorF1 005E  
                 _sensorF2 00A8              ??_writeIntLCD 002D                   _writeADC 0062  
            ??_writeStrLCD 0074   __end_of_I2C_Master_Start 0A3A   __end_of_I2C_Master_Write 0A4D  
                sprintf@ap 0026                  sprintf@sp 002B           ___lwmod@dividend 007A  
         ___lldiv@dividend 0074       __end_of_writeCharLCD 0A7A                  stringcode 080A  
             ??_writeFloat 0037    __end_of_I2C_Master_Init 0B5A    __end_of_I2C_Master_Read 0B22  
  __end_of_I2C_Master_Wait 0A5C    __end_of_I2C_Master_Stop 0A43     __Umul8_16@multiplicand 0070  
                 sprintf@c 002C                   sprintf@f 0020           ___lldiv@quotient 0079  
        I2C_Master_Write@d 0070            ___lwmod@divisor 0078            ___lwmod@counter 007D  
                 stringdir 080A                   stringtab 0800        __end_of_writeIntLCD 0AC9  
              _SSPCON2bits 0091        __end_of_writeStrLCD 0C19              ___fladd@signs 0038  
       __end_of_writeFloat 0DA4               ___fladd@aexp 0039               ___fladd@bexp 003A  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
