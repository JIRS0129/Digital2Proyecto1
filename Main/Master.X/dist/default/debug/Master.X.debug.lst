

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Mar 04 17:52:10 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     	FNCALL	_main,_I2C_Master_Read
   712                           	FNCALL	_main,_I2C_Master_Start
   713                           	FNCALL	_main,_I2C_Master_Stop
   714                           	FNCALL	_main,_I2C_Master_Write
   715                           	FNCALL	_main,___fladd
   716                           	FNCALL	_main,___fldiv
   717                           	FNCALL	_main,___flmul
   718                           	FNCALL	_main,___flneg
   719                           	FNCALL	_main,___fltol
   720                           	FNCALL	_main,___xxtofl
   721                           	FNCALL	_main,_setCursorLCD
   722                           	FNCALL	_main,_setup
   723                           	FNCALL	_main,_writeCharLCD
   724                           	FNCALL	_main,_writeFloat
   725                           	FNCALL	_main,_writeIntLCD
   726                           	FNCALL	_main,_writeStrLCD
   727                           	FNCALL	_writeFloat,_setCursorLCD
   728                           	FNCALL	_writeFloat,_writeCharLCD
   729                           	FNCALL	_writeFloat,_writeIntLCD
   730                           	FNCALL	_writeIntLCD,_sprintf
   731                           	FNCALL	_writeIntLCD,_writeStrLCD
   732                           	FNCALL	_sprintf,___lwdiv
   733                           	FNCALL	_sprintf,___lwmod
   734                           	FNCALL	_setup,_I2C_Master_Init
   735                           	FNCALL	_setup,_clcLCD
   736                           	FNCALL	_setup,_initLCD
   737                           	FNCALL	_setup,_setCursorLCD
   738                           	FNCALL	_setup,_writeStrLCD
   739                           	FNCALL	_writeStrLCD,_writeCharLCD
   740                           	FNCALL	_setCursorLCD,_cmdLCD
   741                           	FNCALL	_initLCD,_cmdLCD
   742                           	FNCALL	_clcLCD,_cmdLCD
   743                           	FNCALL	_I2C_Master_Init,___lldiv
   744                           	FNCALL	___flmul,__Umul8_16
   745                           	FNCALL	_I2C_Master_Write,_I2C_Master_Wait
   746                           	FNCALL	_I2C_Master_Stop,_I2C_Master_Wait
   747                           	FNCALL	_I2C_Master_Start,_I2C_Master_Wait
   748                           	FNCALL	_I2C_Master_Read,_I2C_Master_Wait
   749                           	FNROOT	_main
   750                           	global	_dpowers
   751                           psect	strings,class=STRING,delta=2,noexec
   752                           global __pstrings
   753                           __pstrings:
   754  0800                     stringtab:
   755  0800                     	global    __stringtab
   756                           __stringtab:
   757  0800                     ;	String table - string pointers are 1 byte each
   758                           	btfsc	(btemp+1),7
   759  0800  1BFF               	ljmp	stringcode
   760  0801  280A               	bcf	status,7
   761  0802  1383               	btfsc	(btemp+1),0
   762  0803  187F               	bsf	status,7
   763  0804  1783               	movf	indf,w
   764  0805  0800               	incf fsr
   765  0806  0A84               skipnz
   766  0807  1903               incf btemp+1
   767  0808  0AFF               	return
   768  0809  0008               stringcode:stringdir:
   769  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
   770  080A  3008               movwf pclath
   771  080B  008A               movf fsr,w
   772  080C  0804               incf fsr
   773  080D  0A84               	addwf pc
   774  080E  0782               	global __stringbase
   775                           __stringbase:
   776  080F                     	retlw	0
   777  080F  3400               psect	strings
   778                           	global    __end_of__stringtab
   779                           __end_of__stringtab:
   780  0810                     	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
   781                           	line	358
   782                           _dpowers:
   783  0810                     	retlw	01h
   784  0810  3401               	retlw	0
   785  0811  3400               
   786                           	retlw	0Ah
   787  0812  340A               	retlw	0
   788  0813  3400               
   789                           	retlw	064h
   790  0814  3464               	retlw	0
   791  0815  3400               
   792                           	retlw	0E8h
   793  0816  34E8               	retlw	03h
   794  0817  3403               
   795                           	retlw	010h
   796  0818  3410               	retlw	027h
   797  0819  3427               
   798                           	global __end_of_dpowers
   799                           __end_of_dpowers:
   800  081A                     	global	_dpowers
   801                           	global	_float1
   802                           	global	_sensorF1
   803                           	global	_s3
   804                           	global	_toggle
   805                           	global	_counter
   806                           	global	_dec1
   807                           	global	_entero1
   808                           	global	_adc
   809                           	global	_cursor
   810                           	global	_PORTD
   811                           _PORTD	set	0x8
   812  0008                     	global	_PORTB
   813                           _PORTB	set	0x6
   814  0006                     	global	_SSPBUF
   815                           _SSPBUF	set	0x13
   816  0013                     	global	_SSPCON
   817                           _SSPCON	set	0x14
   818  0014                     	global	_RD1
   819                           _RD1	set	0x41
   820  0041                     	global	_RD0
   821                           _RD0	set	0x40
   822  0040                     	global	_SSPIF
   823                           _SSPIF	set	0x63
   824  0063                     	global	_PEIE
   825                           _PEIE	set	0x5E
   826  005E                     	global	_GIE
   827                           _GIE	set	0x5F
   828  005F                     	global	_TRISD
   829                           _TRISD	set	0x88
   830  0088                     	global	_TRISB
   831                           _TRISB	set	0x86
   832  0086                     	global	_SSPCON2bits
   833                           _SSPCON2bits	set	0x91
   834  0091                     	global	_TRISCbits
   835                           _TRISCbits	set	0x87
   836  0087                     	global	_SSPSTAT
   837                           _SSPSTAT	set	0x94
   838  0094                     	global	_SSPADD
   839                           _SSPADD	set	0x93
   840  0093                     	global	_SSPCON2
   841                           _SSPCON2	set	0x91
   842  0091                     	global	_SSPIE
   843                           _SSPIE	set	0x463
   844  0463                     	global	_TRISC4
   845                           _TRISC4	set	0x43C
   846  043C                     	global	_TRISC3
   847                           _TRISC3	set	0x43B
   848  043B                     	global	_ANSELH
   849                           _ANSELH	set	0x189
   850  0189                     	global	_ANSEL
   851                           _ANSEL	set	0x188
   852  0188                     	
   853                           STR_2:	
   854  081A                     	retlw	32	;' '
   855  081A  3420               	retlw	32	;' '
   856  081B  3420               	retlw	0
   857  081C  3400               psect	strings
   858                           	
   859                           STR_3:	
   860  081D                     	retlw	83	;'S'
   861  081D  3453               	retlw	49	;'1'
   862  081E  3431               	retlw	0
   863  081F  3400               psect	strings
   864                           	
   865                           STR_4:	
   866  0820                     	retlw	83	;'S'
   867  0820  3453               	retlw	50	;'2'
   868  0821  3432               	retlw	0
   869  0822  3400               psect	strings
   870                           	
   871                           STR_5:	
   872  0823                     	retlw	83	;'S'
   873  0823  3453               	retlw	51	;'3'
   874  0824  3433               	retlw	0
   875  0825  3400               psect	strings
   876                           	
   877                           STR_1:	
   878  0826                     	retlw	37	;'%'
   879  0826  3425               	retlw	100	;'d'
   880  0827  3464               	retlw	0
   881  0828  3400               psect	strings
   882                           ; #config settings
   883                           global __CFG_FOSC$INTRC_NOCLKOUT
   884                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   885  0000                     global __CFG_WDTE$OFF
   886                           __CFG_WDTE$OFF equ 0x0
   887  0000                     global __CFG_PWRTE$OFF
   888                           __CFG_PWRTE$OFF equ 0x0
   889  0000                     global __CFG_MCLRE$OFF
   890                           __CFG_MCLRE$OFF equ 0x0
   891  0000                     global __CFG_CP$OFF
   892                           __CFG_CP$OFF equ 0x0
   893  0000                     global __CFG_CPD$OFF
   894                           __CFG_CPD$OFF equ 0x0
   895  0000                     global __CFG_BOREN$OFF
   896                           __CFG_BOREN$OFF equ 0x0
   897  0000                     global __CFG_IESO$OFF
   898                           __CFG_IESO$OFF equ 0x0
   899  0000                     global __CFG_FCMEN$OFF
   900                           __CFG_FCMEN$OFF equ 0x0
   901  0000                     global __CFG_LVP$OFF
   902                           __CFG_LVP$OFF equ 0x0
   903  0000                     global __CFG_BOR4V$BOR40V
   904                           __CFG_BOR4V$BOR40V equ 0x0
   905  0000                     global __CFG_WRT$OFF
   906                           __CFG_WRT$OFF equ 0x0
   907  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\se54."
   908                           	line	#
   909                           psect cinit,class=CODE,delta=2
   910                           global start_initialization
   911                           start_initialization:
   912  07F3                     
   913                           global __initialization
   914                           __initialization:
   915  07F3                     psect	bssBANK1,class=BANK1,space=1,noexec
   916                           global __pbssBANK1
   917                           __pbssBANK1:
   918  00A0                     _lux:
   919  00A0                            ds      4
   920  00A0                     
   921                           _float2:
   922  00A4                            ds      4
   923  00A4                     
   924                           _sensorF2:
   925  00A8                            ds      4
   926  00A8                     
   927                           _float1:
   928  00AC                            ds      4
   929  00AC                     
   930                           _sensorF1:
   931  00B0                            ds      4
   932  00B0                     
   933                           _s3:
   934  00B4                            ds      1
   935  00B4                     
   936                           _toggle:
   937  00B5                            ds      1
   938  00B5                     
   939                           _dec2:
   940  00B6                            ds      1
   941  00B6                     
   942                           _entero2:
   943  00B7                            ds      1
   944  00B7                     
   945                           _counter:
   946  00B8                            ds      1
   947  00B8                     
   948                           _dec1:
   949  00B9                            ds      1
   950  00B9                     
   951                           _entero1:
   952  00BA                            ds      1
   953  00BA                     
   954                           _adc:
   955  00BB                            ds      1
   956  00BB                     
   957                           _cursor:
   958  00BC                            ds      1
   959  00BC                     
   960                           	file	"C:\Users\JIRS0129\AppData\Local\Temp\se54."
   961                           	line	#
   962                           psect clrtext,class=CODE,delta=2
   963                           global clear_ram0
   964                           ;	Called with FSR containing the base address, and
   965                           ;	W with the last address+1
   966                           clear_ram0:
   967  082B                     	clrwdt			;clear the watchdog before getting into this loop
   968  082B  0064               clrloop0:
   969  082C                     	clrf	indf		;clear RAM location pointed to by FSR
   970  082C  0180               	incf	fsr,f		;increment pointer
   971  082D  0A84               	xorwf	fsr,w		;XOR with final address
   972  082E  0604               	btfsc	status,2	;have we reached the end yet?
   973  082F  1903               	retlw	0		;all done for this memory range, return
   974  0830  3400               	xorwf	fsr,w		;XOR again to restore value
   975  0831  0604               	goto	clrloop0		;do the next byte
   976  0832  282C               
   977                           ; Clear objects allocated to BANK1
   978                           psect cinit,class=CODE,delta=2,merge=1
   979                           	bcf	status, 7	;select IRP bank0
   980  07F3  1383               	movlw	low(__pbssBANK1)
   981  07F4  30A0               	movwf	fsr
   982  07F5  0084               	movlw	low((__pbssBANK1)+01Dh)
   983  07F6  30BD               	fcall	clear_ram0
   984  07F7  120A  158A  202B  120A  118A  psect cinit,class=CODE,delta=2,merge=1
   985                           global end_of_initialization,__end_of__initialization
   986                           
   987                           ;End of C runtime variable initialization code
   988                           
   989                           end_of_initialization:
   990  07FC                     __end_of__initialization:
   991  07FC                     clrf status
   992  07FC  0183               ljmp _main	;jump to C main() function
   993  07FD  120A  158A  2C36   psect	cstackBANK1,class=BANK1,space=1,noexec
   994                           global __pcstackBANK1
   995                           __pcstackBANK1:
   996  00BD                     ??_main:	; 1 bytes @ 0x0
   997  00BD                     	ds	4
   998  00BD                     psect	cstackCOMMON,class=COMMON,space=1,noexec
   999                           global __pcstackCOMMON
  1000                           __pcstackCOMMON:
  1001  0070                     ?_cmdLCD:	; 1 bytes @ 0x0
  1002  0070                     ??_cmdLCD:	; 1 bytes @ 0x0
  1003  0070                     ?_writeCharLCD:	; 1 bytes @ 0x0
  1004  0070                     ??_writeCharLCD:	; 1 bytes @ 0x0
  1005  0070                     ?_setup:	; 1 bytes @ 0x0
  1006  0070                     ?_I2C_Master_Wait:	; 1 bytes @ 0x0
  1007  0070                     ??_I2C_Master_Wait:	; 1 bytes @ 0x0
  1008  0070                     ?_I2C_Master_Start:	; 1 bytes @ 0x0
  1009  0070                     ??_I2C_Master_Start:	; 1 bytes @ 0x0
  1010  0070                     ?_I2C_Master_Stop:	; 1 bytes @ 0x0
  1011  0070                     ??_I2C_Master_Stop:	; 1 bytes @ 0x0
  1012  0070                     ?_I2C_Master_Write:	; 1 bytes @ 0x0
  1013  0070                     ?_clcLCD:	; 1 bytes @ 0x0
  1014  0070                     ?_initLCD:	; 1 bytes @ 0x0
  1015  0070                     ?_writeIntLCD:	; 1 bytes @ 0x0
  1016  0070                     ?_main:	; 1 bytes @ 0x0
  1017  0070                     	global	?__Umul8_16
  1018                           ?__Umul8_16:	; 2 bytes @ 0x0
  1019  0070                     	global	?_I2C_Master_Read
  1020                           ?_I2C_Master_Read:	; 2 bytes @ 0x0
  1021  0070                     	global	?___lwdiv
  1022                           ?___lwdiv:	; 2 bytes @ 0x0
  1023  0070                     	global	?___lldiv
  1024                           ?___lldiv:	; 4 bytes @ 0x0
  1025  0070                     	global	?___fltol
  1026                           ?___fltol:	; 4 bytes @ 0x0
  1027  0070                     	global	?___xxtofl
  1028                           ?___xxtofl:	; 4 bytes @ 0x0
  1029  0070                     	global	__Umul8_16@multiplicand
  1030                           __Umul8_16@multiplicand:	; 1 bytes @ 0x0
  1031  0070                     	global	I2C_Master_Write@d
  1032                           I2C_Master_Write@d:	; 2 bytes @ 0x0
  1033  0070                     	global	I2C_Master_Read@a
  1034                           I2C_Master_Read@a:	; 2 bytes @ 0x0
  1035  0070                     	global	___lwdiv@divisor
  1036                           ___lwdiv@divisor:	; 2 bytes @ 0x0
  1037  0070                     	global	___lldiv@divisor
  1038                           ___lldiv@divisor:	; 4 bytes @ 0x0
  1039  0070                     	global	___fltol@f1
  1040                           ___fltol@f1:	; 4 bytes @ 0x0
  1041  0070                     	global	___xxtofl@val
  1042                           ___xxtofl@val:	; 4 bytes @ 0x0
  1043  0070                     	ds	1
  1044  0070                     	global	writeCharLCD@character
  1045                           writeCharLCD@character:	; 1 bytes @ 0x1
  1046  0071                     	ds	1
  1047  0071                     ??__Umul8_16:	; 1 bytes @ 0x2
  1048  0072                     ??_I2C_Master_Write:	; 1 bytes @ 0x2
  1049  0072                     ??_I2C_Master_Read:	; 1 bytes @ 0x2
  1050  0072                     ?_writeStrLCD:	; 1 bytes @ 0x2
  1051  0072                     	global	cmdLCD@cmd
  1052                           cmdLCD@cmd:	; 1 bytes @ 0x2
  1053  0072                     	global	writeStrLCD@string
  1054                           writeStrLCD@string:	; 2 bytes @ 0x2
  1055  0072                     	global	___lwdiv@dividend
  1056                           ___lwdiv@dividend:	; 2 bytes @ 0x2
  1057  0072                     	ds	1
  1058  0072                     ?_setCursorLCD:	; 1 bytes @ 0x3
  1059  0073                     ??_clcLCD:	; 1 bytes @ 0x3
  1060  0073                     ??_initLCD:	; 1 bytes @ 0x3
  1061  0073                     	global	setCursorLCD@x
  1062                           setCursorLCD@x:	; 1 bytes @ 0x3
  1063  0073                     	ds	1
  1064  0073                     ??_setCursorLCD:	; 1 bytes @ 0x4
  1065  0074                     ??_writeStrLCD:	; 1 bytes @ 0x4
  1066  0074                     ??___fltol:	; 1 bytes @ 0x4
  1067  0074                     ??___lwdiv:	; 1 bytes @ 0x4
  1068  0074                     ??___xxtofl:	; 1 bytes @ 0x4
  1069  0074                     	global	I2C_Master_Read@temp
  1070                           I2C_Master_Read@temp:	; 2 bytes @ 0x4
  1071  0074                     	global	__Umul8_16@product
  1072                           __Umul8_16@product:	; 2 bytes @ 0x4
  1073  0074                     	global	___lldiv@dividend
  1074                           ___lldiv@dividend:	; 4 bytes @ 0x4
  1075  0074                     	ds	1
  1076  0074                     	global	setCursorLCD@y
  1077                           setCursorLCD@y:	; 1 bytes @ 0x5
  1078  0075                     	global	___lwdiv@quotient
  1079                           ___lwdiv@quotient:	; 2 bytes @ 0x5
  1080  0075                     	ds	1
  1081  0075                     	global	__Umul8_16@word_mpld
  1082                           __Umul8_16@word_mpld:	; 2 bytes @ 0x6
  1083  0076                     	ds	1
  1084  0076                     	global	___lwdiv@counter
  1085                           ___lwdiv@counter:	; 1 bytes @ 0x7
  1086  0077                     	global	writeStrLCD@cont
  1087                           writeStrLCD@cont:	; 2 bytes @ 0x7
  1088  0077                     	ds	1
  1089  0077                     ??___lldiv:	; 1 bytes @ 0x8
  1090  0078                     	global	?___lwmod
  1091                           ?___lwmod:	; 2 bytes @ 0x8
  1092  0078                     	global	___xxtofl@sign
  1093                           ___xxtofl@sign:	; 1 bytes @ 0x8
  1094  0078                     	global	__Umul8_16@multiplier
  1095                           __Umul8_16@multiplier:	; 1 bytes @ 0x8
  1096  0078                     	global	___lwmod@divisor
  1097                           ___lwmod@divisor:	; 2 bytes @ 0x8
  1098  0078                     	ds	1
  1099  0078                     	global	___fltol@sign1
  1100                           ___fltol@sign1:	; 1 bytes @ 0x9
  1101  0079                     	global	___xxtofl@exp
  1102                           ___xxtofl@exp:	; 1 bytes @ 0x9
  1103  0079                     	global	___lldiv@quotient
  1104                           ___lldiv@quotient:	; 4 bytes @ 0x9
  1105  0079                     	ds	1
  1106  0079                     	global	___fltol@exp1
  1107                           ___fltol@exp1:	; 1 bytes @ 0xA
  1108  007A                     	global	___lwmod@dividend
  1109                           ___lwmod@dividend:	; 2 bytes @ 0xA
  1110  007A                     	global	___xxtofl@arg
  1111                           ___xxtofl@arg:	; 4 bytes @ 0xA
  1112  007A                     	ds	2
  1113  007A                     ??___lwmod:	; 1 bytes @ 0xC
  1114  007C                     	ds	1
  1115  007C                     	global	___lldiv@counter
  1116                           ___lldiv@counter:	; 1 bytes @ 0xD
  1117  007D                     	global	___lwmod@counter
  1118                           ___lwmod@counter:	; 1 bytes @ 0xD
  1119  007D                     	ds	1
  1120  007D                     ??___flneg:	; 1 bytes @ 0xE
  1121  007E                     psect	cstackBANK0,class=BANK0,space=1,noexec
  1122                           global __pcstackBANK0
  1123                           __pcstackBANK0:
  1124  0020                     ?_I2C_Master_Init:	; 1 bytes @ 0x0
  1125  0020                     	global	?_sprintf
  1126                           ?_sprintf:	; 2 bytes @ 0x0
  1127  0020                     	global	?___flneg
  1128                           ?___flneg:	; 4 bytes @ 0x0
  1129  0020                     	global	sprintf@f
  1130                           sprintf@f:	; 1 bytes @ 0x0
  1131  0020                     	global	I2C_Master_Init@c
  1132                           I2C_Master_Init@c:	; 4 bytes @ 0x0
  1133  0020                     	global	___flneg@f1
  1134                           ___flneg@f1:	; 4 bytes @ 0x0
  1135  0020                     	ds	3
  1136  0020                     ??_sprintf:	; 1 bytes @ 0x3
  1137  0023                     	ds	1
  1138  0023                     ??_I2C_Master_Init:	; 1 bytes @ 0x4
  1139  0024                     	global	?___fladd
  1140                           ?___fladd:	; 4 bytes @ 0x4
  1141  0024                     	global	___fladd@b
  1142                           ___fladd@b:	; 4 bytes @ 0x4
  1143  0024                     	ds	2
  1144  0024                     	global	sprintf@ap
  1145                           sprintf@ap:	; 1 bytes @ 0x6
  1146  0026                     	ds	1
  1147  0026                     	global	sprintf@flag
  1148                           sprintf@flag:	; 1 bytes @ 0x7
  1149  0027                     	ds	1
  1150  0027                     ??_setup:	; 1 bytes @ 0x8
  1151  0028                     	global	sprintf@prec
  1152                           sprintf@prec:	; 1 bytes @ 0x8
  1153  0028                     	global	___fladd@a
  1154                           ___fladd@a:	; 4 bytes @ 0x8
  1155  0028                     	ds	1
  1156  0028                     	global	sprintf@val
  1157                           sprintf@val:	; 2 bytes @ 0x9
  1158  0029                     	ds	2
  1159  0029                     	global	sprintf@sp
  1160                           sprintf@sp:	; 1 bytes @ 0xB
  1161  002B                     	ds	1
  1162  002B                     ??___fladd:	; 1 bytes @ 0xC
  1163  002C                     	global	sprintf@c
  1164                           sprintf@c:	; 1 bytes @ 0xC
  1165  002C                     	ds	1
  1166  002C                     ??_writeIntLCD:	; 1 bytes @ 0xD
  1167  002D                     	ds	3
  1168  002D                     	global	writeIntLCD@buffer
  1169                           writeIntLCD@buffer:	; 4 bytes @ 0x10
  1170  0030                     	ds	4
  1171  0030                     	global	writeIntLCD@numero
  1172                           writeIntLCD@numero:	; 1 bytes @ 0x14
  1173  0034                     	ds	1
  1174  0034                     ?_writeFloat:	; 1 bytes @ 0x15
  1175  0035                     	global	writeFloat@decimal
  1176                           writeFloat@decimal:	; 1 bytes @ 0x15
  1177  0035                     	ds	1
  1178  0035                     	global	writeFloat@initPos
  1179                           writeFloat@initPos:	; 1 bytes @ 0x16
  1180  0036                     	ds	1
  1181  0036                     ??_writeFloat:	; 1 bytes @ 0x17
  1182  0037                     	ds	1
  1183  0037                     	global	writeFloat@integer
  1184                           writeFloat@integer:	; 1 bytes @ 0x18
  1185  0038                     	global	___fladd@signs
  1186                           ___fladd@signs:	; 1 bytes @ 0x18
  1187  0038                     	ds	1
  1188  0038                     	global	___fladd@aexp
  1189                           ___fladd@aexp:	; 1 bytes @ 0x19
  1190  0039                     	ds	1
  1191  0039                     	global	___fladd@bexp
  1192                           ___fladd@bexp:	; 1 bytes @ 0x1A
  1193  003A                     	ds	1
  1194  003A                     	global	___fladd@grs
  1195                           ___fladd@grs:	; 1 bytes @ 0x1B
  1196  003B                     	ds	1
  1197  003B                     	global	?___flmul
  1198                           ?___flmul:	; 4 bytes @ 0x1C
  1199  003C                     	global	___flmul@b
  1200                           ___flmul@b:	; 4 bytes @ 0x1C
  1201  003C                     	ds	4
  1202  003C                     	global	___flmul@a
  1203                           ___flmul@a:	; 4 bytes @ 0x20
  1204  0040                     	ds	4
  1205  0040                     ??___flmul:	; 1 bytes @ 0x24
  1206  0044                     	ds	5
  1207  0044                     	global	___flmul@sign
  1208                           ___flmul@sign:	; 1 bytes @ 0x29
  1209  0049                     	ds	1
  1210  0049                     	global	___flmul@grs
  1211                           ___flmul@grs:	; 4 bytes @ 0x2A
  1212  004A                     	ds	4
  1213  004A                     	global	___flmul@aexp
  1214                           ___flmul@aexp:	; 1 bytes @ 0x2E
  1215  004E                     	ds	1
  1216  004E                     	global	___flmul@bexp
  1217                           ___flmul@bexp:	; 1 bytes @ 0x2F
  1218  004F                     	ds	1
  1219  004F                     	global	___flmul@prod
  1220                           ___flmul@prod:	; 4 bytes @ 0x30
  1221  0050                     	ds	4
  1222  0050                     	global	___flmul@temp
  1223                           ___flmul@temp:	; 2 bytes @ 0x34
  1224  0054                     	ds	2
  1225  0054                     	global	?___fldiv
  1226                           ?___fldiv:	; 4 bytes @ 0x36
  1227  0056                     	global	___fldiv@a
  1228                           ___fldiv@a:	; 4 bytes @ 0x36
  1229  0056                     	ds	4
  1230  0056                     	global	___fldiv@b
  1231                           ___fldiv@b:	; 4 bytes @ 0x3A
  1232  005A                     	ds	4
  1233  005A                     ??___fldiv:	; 1 bytes @ 0x3E
  1234  005E                     	ds	5
  1235  005E                     	global	___fldiv@rem
  1236                           ___fldiv@rem:	; 4 bytes @ 0x43
  1237  0063                     	ds	4
  1238  0063                     	global	___fldiv@sign
  1239                           ___fldiv@sign:	; 1 bytes @ 0x47
  1240  0067                     	ds	1
  1241  0067                     	global	___fldiv@new_exp
  1242                           ___fldiv@new_exp:	; 2 bytes @ 0x48
  1243  0068                     	ds	2
  1244  0068                     	global	___fldiv@grs
  1245                           ___fldiv@grs:	; 4 bytes @ 0x4A
  1246  006A                     	ds	4
  1247  006A                     	global	___fldiv@bexp
  1248                           ___fldiv@bexp:	; 1 bytes @ 0x4E
  1249  006E                     	ds	1
  1250  006E                     	global	___fldiv@aexp
  1251                           ___fldiv@aexp:	; 1 bytes @ 0x4F
  1252  006F                     	ds	1
  1253  006F                     ;!
  1254                           ;!Data Sizes:
  1255                           ;!    Strings     15
  1256                           ;!    Constant    10
  1257                           ;!    Data        0
  1258                           ;!    BSS         29
  1259                           ;!    Persistent  0
  1260                           ;!    Stack       0
  1261                           ;!
  1262                           ;!Auto Spaces:
  1263                           ;!    Space          Size  Autos    Used
  1264                           ;!    COMMON           14     14      14
  1265                           ;!    BANK0            80     80      80
  1266                           ;!    BANK1            80      4      33
  1267                           ;!    BANK3            96      0       0
  1268                           ;!    BANK2            96      0       0
  1269                           
  1270                           ;!
  1271                           ;!Pointer List with Targets:
  1272                           ;!
  1273                           ;!    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
  1274                           ;!		 -> STR_1(CODE[3]), 
  1275                           ;!
  1276                           ;!    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
  1277                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1278                           ;!
  1279                           ;!    sprintf@ap	PTR void [1] size(1) Largest target is 2
  1280                           ;!		 -> ?_sprintf(BANK0[2]), 
  1281                           ;!
  1282                           ;!    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
  1283                           ;!		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
  1284                           ;!		 -> writeIntLCD@buffer(BANK0[4]), 
  1285                           ;!
  1286                           
  1287                           
  1288                           ;!
  1289                           ;!Critical Paths under _main in COMMON
  1290                           ;!
  1291                           ;!    _main->___xxtofl
  1292                           ;!    _sprintf->___lwmod
  1293                           ;!    ___lwmod->___lwdiv
  1294                           ;!    _writeStrLCD->_writeCharLCD
  1295                           ;!    _setCursorLCD->_cmdLCD
  1296                           ;!    _initLCD->_cmdLCD
  1297                           ;!    _clcLCD->_cmdLCD
  1298                           ;!    _I2C_Master_Init->___lldiv
  1299                           ;!    ___flneg->___xxtofl
  1300                           ;!    ___flmul->___xxtofl
  1301                           ;!    ___fldiv->___xxtofl
  1302                           ;!    ___fladd->___xxtofl
  1303                           ;!
  1304                           ;!Critical Paths under _main in BANK0
  1305                           ;!
  1306                           ;!    _main->___fldiv
  1307                           ;!    _writeFloat->_writeIntLCD
  1308                           ;!    _writeIntLCD->_sprintf
  1309                           ;!    _setup->_I2C_Master_Init
  1310                           ;!    ___flmul->___fladd
  1311                           ;!    ___fldiv->___flmul
  1312                           ;!    ___fladd->___flneg
  1313                           ;!
  1314                           ;!Critical Paths under _main in BANK1
  1315                           ;!
  1316                           ;!    None.
  1317                           ;!
  1318                           ;!Critical Paths under _main in BANK3
  1319                           ;!
  1320                           ;!    None.
  1321                           ;!
  1322                           ;!Critical Paths under _main in BANK2
  1323                           ;!
  1324                           ;!    None.
  1325                           
  1326 ;;
  1327 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1328 ;;
  1329                           
  1330                           ;!
  1331                           ;!Call Graph Tables:
  1332                           ;!
  1333                           ;! ---------------------------------------------------------------------------------
  1334                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  1335                           ;! ---------------------------------------------------------------------------------
  1336                           ;! (0) _main                                                 4     4      0   15191
  1337                           ;!                                              0 BANK1      4     4      0
  1338                           ;!                    _I2C_Master_Read
  1339                           ;!                   _I2C_Master_Start
  1340                           ;!                    _I2C_Master_Stop
  1341                           ;!                   _I2C_Master_Write
  1342                           ;!                            ___fladd
  1343                           ;!                            ___fldiv
  1344                           ;!                            ___flmul
  1345                           ;!                            ___flneg
  1346                           ;!                            ___fltol
  1347                           ;!                           ___xxtofl
  1348                           ;!                       _setCursorLCD
  1349                           ;!                              _setup
  1350                           ;!                       _writeCharLCD
  1351                           ;!                         _writeFloat
  1352                           ;!                        _writeIntLCD
  1353                           ;!                        _writeStrLCD
  1354                           ;! ---------------------------------------------------------------------------------
  1355                           ;! (1) _writeFloat                                           4     2      2    2879
  1356                           ;!                                             21 BANK0      4     2      2
  1357                           ;!                       _setCursorLCD
  1358                           ;!                       _writeCharLCD
  1359                           ;!                        _writeIntLCD
  1360                           ;! ---------------------------------------------------------------------------------
  1361                           ;! (1) _writeIntLCD                                          8     8      0    1779
  1362                           ;!                                             13 BANK0      8     8      0
  1363                           ;!                            _sprintf
  1364                           ;!                        _writeStrLCD
  1365                           ;! ---------------------------------------------------------------------------------
  1366                           ;! (2) _sprintf                                             21    18      3    1211
  1367                           ;!                                              0 BANK0     13    10      3
  1368                           ;!                            ___lwdiv
  1369                           ;!                            ___lwmod
  1370                           ;! ---------------------------------------------------------------------------------
  1371                           ;! (3) ___lwmod                                              6     2      4     311
  1372                           ;!                                              8 COMMON     6     2      4
  1373                           ;!                            ___lwdiv (ARG)
  1374                           ;! ---------------------------------------------------------------------------------
  1375                           ;! (3) ___lwdiv                                              8     4      4     314
  1376                           ;!                                              0 COMMON     8     4      4
  1377                           ;! ---------------------------------------------------------------------------------
  1378                           ;! (1) _setup                                                1     1      0    1720
  1379                           ;!                                              8 BANK0      1     1      0
  1380                           ;!                    _I2C_Master_Init
  1381                           ;!                             _clcLCD
  1382                           ;!                            _initLCD
  1383                           ;!                       _setCursorLCD
  1384                           ;!                        _writeStrLCD
  1385                           ;! ---------------------------------------------------------------------------------
  1386                           ;! (1) _writeStrLCD                                          7     5      2     492
  1387                           ;!                                              2 COMMON     7     5      2
  1388                           ;!                       _writeCharLCD
  1389                           ;! ---------------------------------------------------------------------------------
  1390                           ;! (2) _writeCharLCD                                         2     2      0      22
  1391                           ;!                                              0 COMMON     2     2      0
  1392                           ;! ---------------------------------------------------------------------------------
  1393                           ;! (2) _setCursorLCD                                         3     2      1     772
  1394                           ;!                                              3 COMMON     3     2      1
  1395                           ;!                             _cmdLCD
  1396                           ;! ---------------------------------------------------------------------------------
  1397                           ;! (2) _initLCD                                              2     2      0      22
  1398                           ;!                                              3 COMMON     2     2      0
  1399                           ;!                             _cmdLCD
  1400                           ;! ---------------------------------------------------------------------------------
  1401                           ;! (2) _clcLCD                                               0     0      0      22
  1402                           ;!                             _cmdLCD
  1403                           ;! ---------------------------------------------------------------------------------
  1404                           ;! (3) _cmdLCD                                               3     3      0      22
  1405                           ;!                                              0 COMMON     3     3      0
  1406                           ;! ---------------------------------------------------------------------------------
  1407                           ;! (2) _I2C_Master_Init                                      8     4      4     412
  1408                           ;!                                              0 BANK0      8     4      4
  1409                           ;!                            ___lldiv
  1410                           ;! ---------------------------------------------------------------------------------
  1411                           ;! (3) ___lldiv                                             14     6      8     314
  1412                           ;!                                              0 COMMON    14     6      8
  1413                           ;! ---------------------------------------------------------------------------------
  1414                           ;! (1) ___xxtofl                                            14    10      4     474
  1415                           ;!                                              0 COMMON    14    10      4
  1416                           ;! ---------------------------------------------------------------------------------
  1417                           ;! (1) ___fltol                                             11     7      4     381
  1418                           ;!                                              0 COMMON    11     7      4
  1419                           ;! ---------------------------------------------------------------------------------
  1420                           ;! (1) ___flneg                                              4     0      4     121
  1421                           ;!                                              0 BANK0      4     0      4
  1422                           ;!                           ___xxtofl (ARG)
  1423                           ;! ---------------------------------------------------------------------------------
  1424                           ;! (1) ___flmul                                             26    18      8    2569
  1425                           ;!                                             28 BANK0     26    18      8
  1426                           ;!                          __Umul8_16
  1427                           ;!                            ___fladd (ARG)
  1428                           ;!                            ___flneg (ARG)
  1429                           ;!                           ___xxtofl (ARG)
  1430                           ;! ---------------------------------------------------------------------------------
  1431                           ;! (2) __Umul8_16                                            9     7      2     799
  1432                           ;!                                              0 COMMON     9     7      2
  1433                           ;! ---------------------------------------------------------------------------------
  1434                           ;! (1) ___fldiv                                             26    18      8    1273
  1435                           ;!                                             54 BANK0     26    18      8
  1436                           ;!                            ___flmul (ARG)
  1437                           ;!                           ___xxtofl (ARG)
  1438                           ;! ---------------------------------------------------------------------------------
  1439                           ;! (1) ___fladd                                             24    16      8    2262
  1440                           ;!                                              4 BANK0     24    16      8
  1441                           ;!                            ___flneg (ARG)
  1442                           ;!                           ___xxtofl (ARG)
  1443                           ;! ---------------------------------------------------------------------------------
  1444                           ;! (1) _I2C_Master_Write                                     2     0      2     250
  1445                           ;!                                              0 COMMON     2     0      2
  1446                           ;!                    _I2C_Master_Wait
  1447                           ;! ---------------------------------------------------------------------------------
  1448                           ;! (1) _I2C_Master_Stop                                      0     0      0       0
  1449                           ;!                    _I2C_Master_Wait
  1450                           ;! ---------------------------------------------------------------------------------
  1451                           ;! (1) _I2C_Master_Start                                     0     0      0       0
  1452                           ;!                    _I2C_Master_Wait
  1453                           ;! ---------------------------------------------------------------------------------
  1454                           ;! (1) _I2C_Master_Read                                      6     4      2     197
  1455                           ;!                                              0 COMMON     6     4      2
  1456                           ;!                    _I2C_Master_Wait
  1457                           ;! ---------------------------------------------------------------------------------
  1458                           ;! (2) _I2C_Master_Wait                                      0     0      0       0
  1459                           ;! ---------------------------------------------------------------------------------
  1460                           ;! Estimated maximum stack depth 3
  1461                           ;! ---------------------------------------------------------------------------------
  1462                           ;!
  1463                           ;! Call Graph Graphs:
  1464                           ;!
  1465                           ;! _main (ROOT)
  1466                           ;!   _I2C_Master_Read
  1467                           ;!     _I2C_Master_Wait
  1468                           ;!   _I2C_Master_Start
  1469                           ;!     _I2C_Master_Wait
  1470                           ;!   _I2C_Master_Stop
  1471                           ;!     _I2C_Master_Wait
  1472                           ;!   _I2C_Master_Write
  1473                           ;!     _I2C_Master_Wait
  1474                           ;!   ___fladd
  1475                           ;!     ___flneg (ARG)
  1476                           ;!       ___xxtofl (ARG)
  1477                           ;!     ___xxtofl (ARG)
  1478                           ;!   ___fldiv
  1479                           ;!     ___flmul (ARG)
  1480                           ;!       __Umul8_16
  1481                           ;!       ___fladd (ARG)
  1482                           ;!         ___flneg (ARG)
  1483                           ;!           ___xxtofl (ARG)
  1484                           ;!         ___xxtofl (ARG)
  1485                           ;!       ___flneg (ARG)
  1486                           ;!         ___xxtofl (ARG)
  1487                           ;!       ___xxtofl (ARG)
  1488                           ;!     ___xxtofl (ARG)
  1489                           ;!   ___flmul
  1490                           ;!     __Umul8_16
  1491                           ;!     ___fladd (ARG)
  1492                           ;!       ___flneg (ARG)
  1493                           ;!         ___xxtofl (ARG)
  1494                           ;!       ___xxtofl (ARG)
  1495                           ;!     ___flneg (ARG)
  1496                           ;!       ___xxtofl (ARG)
  1497                           ;!     ___xxtofl (ARG)
  1498                           ;!   ___flneg
  1499                           ;!     ___xxtofl (ARG)
  1500                           ;!   ___fltol
  1501                           ;!   ___xxtofl
  1502                           ;!   _setCursorLCD
  1503                           ;!     _cmdLCD
  1504                           ;!   _setup
  1505                           ;!     _I2C_Master_Init
  1506                           ;!       ___lldiv
  1507                           ;!     _clcLCD
  1508                           ;!       _cmdLCD
  1509                           ;!     _initLCD
  1510                           ;!       _cmdLCD
  1511                           ;!     _setCursorLCD
  1512                           ;!       _cmdLCD
  1513                           ;!     _writeStrLCD
  1514                           ;!       _writeCharLCD
  1515                           ;!   _writeCharLCD
  1516                           ;!   _writeFloat
  1517                           ;!     _setCursorLCD
  1518                           ;!       _cmdLCD
  1519                           ;!     _writeCharLCD
  1520                           ;!     _writeIntLCD
  1521                           ;!       _sprintf
  1522                           ;!         ___lwdiv
  1523                           ;!         ___lwmod
  1524                           ;!           ___lwdiv (ARG)
  1525                           ;!       _writeStrLCD
  1526                           ;!         _writeCharLCD
  1527                           ;!   _writeIntLCD
  1528                           ;!     _sprintf
  1529                           ;!       ___lwdiv
  1530                           ;!       ___lwmod
  1531                           ;!         ___lwdiv (ARG)
  1532                           ;!     _writeStrLCD
  1533                           ;!       _writeCharLCD
  1534                           ;!   _writeStrLCD
  1535                           ;!     _writeCharLCD
  1536                           ;!
  1537                           
  1538                           ;! Address spaces:
  1539                           
  1540                           ;!Name               Size   Autos  Total    Cost      Usage
  1541                           ;!BITCOMMON            E      0       0       0        0.0%
  1542                           ;!EEDATA             100      0       0       0        0.0%
  1543                           ;!NULL                 0      0       0       0        0.0%
  1544                           ;!CODE                 0      0       0       0        0.0%
  1545                           ;!COMMON               E      E       E       1      100.0%
  1546                           ;!BITSFR0              0      0       0       1        0.0%
  1547                           ;!SFR0                 0      0       0       1        0.0%
  1548                           ;!BITSFR1              0      0       0       2        0.0%
  1549                           ;!SFR1                 0      0       0       2        0.0%
  1550                           ;!STACK                0      0       0       2        0.0%
  1551                           ;!ABS                  0      0      7F       3        0.0%
  1552                           ;!BITBANK0            50      0       0       4        0.0%
  1553                           ;!BITSFR3              0      0       0       4        0.0%
  1554                           ;!SFR3                 0      0       0       4        0.0%
  1555                           ;!BANK0               50     50      50       5      100.0%
  1556                           ;!BITSFR2              0      0       0       5        0.0%
  1557                           ;!SFR2                 0      0       0       5        0.0%
  1558                           ;!BITBANK1            50      0       0       6        0.0%
  1559                           ;!BANK1               50      4      21       7       41.3%
  1560                           ;!BITBANK3            60      0       0       8        0.0%
  1561                           ;!BANK3               60      0       0       9        0.0%
  1562                           ;!BITBANK2            60      0       0      10        0.0%
  1563                           ;!BANK2               60      0       0      11        0.0%
  1564                           ;!DATA                 0      0      7F      12        0.0%
  1565                           
  1566                           	global	_main
  1567                           
  1568 ;; *************** function _main *****************
  1569 ;; Defined at:
  1570 ;;		line 60 in file "mainM.c"
  1571 ;; Parameters:    Size  Location     Type
  1572 ;;		None
  1573 ;; Auto vars:     Size  Location     Type
  1574 ;;		None
  1575 ;; Return value:  Size  Location     Type
  1576 ;;                  1    wreg      void 
  1577 ;; Registers used:
  1578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1579 ;; Tracked objects:
  1580 ;;		On entry : B00/0
  1581 ;;		On exit  : 0/0
  1582 ;;		Unchanged: 0/0
  1583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1584 ;;      Params:         0       0       0       0       0
  1585 ;;      Locals:         0       0       0       0       0
  1586 ;;      Temps:          0       0       4       0       0
  1587 ;;      Totals:         0       0       4       0       0
  1588 ;;Total ram usage:        4 bytes
  1589 ;; Hardware stack levels required when called:    4
  1590 ;; This function calls:
  1591 ;;		_I2C_Master_Read
  1592 ;;		_I2C_Master_Start
  1593 ;;		_I2C_Master_Stop
  1594 ;;		_I2C_Master_Write
  1595 ;;		___fladd
  1596 ;;		___fldiv
  1597 ;;		___flmul
  1598 ;;		___flneg
  1599 ;;		___fltol
  1600 ;;		___xxtofl
  1601 ;;		_setCursorLCD
  1602 ;;		_setup
  1603 ;;		_writeCharLCD
  1604 ;;		_writeFloat
  1605 ;;		_writeIntLCD
  1606 ;;		_writeStrLCD
  1607 ;; This function is called by:
  1608 ;;		Startup code after reset
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  1612                           	file	"mainM.c"
  1613                           	line	60
  1614                           global __pmaintext
  1615                           __pmaintext:	;psect for function _main
  1616  0C36                     psect	maintext
  1617                           	file	"mainM.c"
  1618                           	line	60
  1619                           	global	__size_of_main
  1620                           	__size_of_main	equ	__end_of_main-_main
  1621  01C1                     	
  1622                           _main:	
  1623  0C36                     ;incstack = 0
  1624                           	opt	stack 4
  1625                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1626                           	line	61
  1627                           	
  1628                           l2575:	
  1629  0C36                     ;mainM.c: 61:     setup();
  1630                           	fcall	_setup
  1631  0C36  120A  158A  2248  120A  158A  	goto	l2577
  1632  0C3B  2C3C               	line	62
  1633                           ;mainM.c: 62:     while(1){
  1634                           	
  1635                           l174:	
  1636  0C3C                     	line	66
  1637                           	
  1638                           l2577:	
  1639  0C3C                     ;mainM.c: 66:         I2C_Master_Start();
  1640                           	fcall	_I2C_Master_Start
  1641  0C3C  120A  158A  2033  120A  158A  	line	67
  1642                           	
  1643                           l2579:	
  1644  0C41                     ;mainM.c: 67:         I2C_Master_Write(0x69);
  1645                           	movlw	069h
  1646  0C41  3069               	movwf	(I2C_Master_Write@d)
  1647  0C42  00F0               	movlw	0
  1648  0C43  3000               	movwf	((I2C_Master_Write@d))+1
  1649  0C44  00F1               	fcall	_I2C_Master_Write
  1650  0C45  120A  158A  2045  120A  158A  	line	68
  1651                           	
  1652                           l2581:	
  1653  0C4A                     ;mainM.c: 68:         if(toggle%2){
  1654                           	bsf	status, 5	;RP0=1, select bank1
  1655  0C4A  1683               	bcf	status, 6	;RP1=0, select bank1
  1656  0C4B  1303               	btfss	(_toggle)^080h,(0)&7
  1657  0C4C  1C35               	goto	u3561
  1658  0C4D  2C4F               	goto	u3560
  1659  0C4E  2C50               u3561:
  1660  0C4F                     	goto	l2585
  1661  0C4F  2C5F               u3560:
  1662  0C50                     	line	69
  1663                           	
  1664                           l2583:	
  1665  0C50                     ;mainM.c: 69:             adc = I2C_Master_Read(0);
  1666                           	movlw	0
  1667  0C50  3000               	movwf	(I2C_Master_Read@a)
  1668  0C51  00F0               	movwf	(I2C_Master_Read@a+1)
  1669  0C52  00F1               	fcall	_I2C_Master_Read
  1670  0C53  120A  158A  20D7  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1671  0C58  0870               	bsf	status, 5	;RP0=1, select bank1
  1672  0C59  1683               	bcf	status, 6	;RP1=0, select bank1
  1673  0C5A  1303               	movwf	(??_main+0)^080h+0
  1674  0C5B  00BD               	movf	(??_main+0)^080h+0,w
  1675  0C5C  083D               	movwf	(_adc)^080h
  1676  0C5D  00BB               	line	70
  1677                           ;mainM.c: 70:         }else{
  1678                           	goto	l2587
  1679  0C5E  2C6E               	
  1680                           l175:	
  1681  0C5F                     	line	71
  1682                           	
  1683                           l2585:	
  1684  0C5F                     ;mainM.c: 71:             counter = I2C_Master_Read(0);
  1685                           	movlw	0
  1686  0C5F  3000               	movwf	(I2C_Master_Read@a)
  1687  0C60  00F0               	movwf	(I2C_Master_Read@a+1)
  1688  0C61  00F1               	fcall	_I2C_Master_Read
  1689  0C62  120A  158A  20D7  120A  158A  	movf	(0+(?_I2C_Master_Read)),w
  1690  0C67  0870               	bsf	status, 5	;RP0=1, select bank1
  1691  0C68  1683               	bcf	status, 6	;RP1=0, select bank1
  1692  0C69  1303               	movwf	(??_main+0)^080h+0
  1693  0C6A  00BD               	movf	(??_main+0)^080h+0,w
  1694  0C6B  083D               	movwf	(_counter)^080h
  1695  0C6C  00B8               	goto	l2587
  1696  0C6D  2C6E               	line	72
  1697                           ;mainM.c: 72:         }
  1698                           	
  1699                           l176:	
  1700  0C6E                     	line	73
  1701                           	
  1702                           l2587:	
  1703  0C6E                     ;mainM.c: 73:         toggle++;
  1704                           	movlw	low(01h)
  1705  0C6E  3001               	movwf	(??_main+0)^080h+0
  1706  0C6F  00BD               	movf	(??_main+0)^080h+0,w
  1707  0C70  083D               	addwf	(_toggle)^080h,f
  1708  0C71  07B5               	line	74
  1709                           	
  1710                           l2589:	
  1711  0C72                     ;mainM.c: 74:         I2C_Master_Stop();
  1712                           	fcall	_I2C_Master_Stop
  1713  0C72  120A  158A  203C  120A  158A  	line	75
  1714                           	
  1715                           l2591:	
  1716  0C77                     ;mainM.c: 75:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1717                           	opt asmopt_push
  1718                           opt asmopt_off
  1719                           movlw	13
  1720  0C77  300D               	bsf	status, 5	;RP0=1, select bank1
  1721  0C78  1683               	bcf	status, 6	;RP1=0, select bank1
  1722  0C79  1303               movwf	((??_main+0)^080h+0+1),f
  1723  0C7A  00BE               	movlw	251
  1724  0C7B  30FB               movwf	((??_main+0)^080h+0),f
  1725  0C7C  00BD               	u3577:
  1726  0C7D                     decfsz	((??_main+0)^080h+0),f
  1727  0C7D  0BBD               	goto	u3577
  1728  0C7E  2C7D               	decfsz	((??_main+0)^080h+0+1),f
  1729  0C7F  0BBE               	goto	u3577
  1730  0C80  2C7D               opt asmopt_pop
  1731                           
  1732                           	line	77
  1733                           	
  1734                           l2593:	
  1735  0C81                     ;mainM.c: 77:         I2C_Master_Start();
  1736                           	fcall	_I2C_Master_Start
  1737  0C81  120A  158A  2033  120A  158A  	line	78
  1738                           	
  1739                           l2595:	
  1740  0C86                     ;mainM.c: 78:         I2C_Master_Write(0x14);
  1741                           	movlw	014h
  1742  0C86  3014               	movwf	(I2C_Master_Write@d)
  1743  0C87  00F0               	movlw	0
  1744  0C88  3000               	movwf	((I2C_Master_Write@d))+1
  1745  0C89  00F1               	fcall	_I2C_Master_Write
  1746  0C8A  120A  158A  2045  120A  158A  	line	79
  1747                           	
  1748                           l2597:	
  1749  0C8F                     ;mainM.c: 79:         I2C_Master_Write(counter);
  1750                           	bsf	status, 5	;RP0=1, select bank1
  1751  0C8F  1683               	bcf	status, 6	;RP1=0, select bank1
  1752  0C90  1303               	movf	(_counter)^080h,w
  1753  0C91  0838               	movwf	(??_main+0)^080h+0
  1754  0C92  00BD               	clrf	(??_main+0)^080h+0+1
  1755  0C93  01BE               	movf	0+(??_main+0)^080h+0,w
  1756  0C94  083D               	movwf	(I2C_Master_Write@d)
  1757  0C95  00F0               	movf	1+(??_main+0)^080h+0,w
  1758  0C96  083E               	movwf	(I2C_Master_Write@d+1)
  1759  0C97  00F1               	fcall	_I2C_Master_Write
  1760  0C98  120A  158A  2045  120A  158A  	line	80
  1761                           	
  1762                           l2599:	
  1763  0C9D                     ;mainM.c: 80:         I2C_Master_Stop();
  1764                           	fcall	_I2C_Master_Stop
  1765  0C9D  120A  158A  203C  120A  158A  	line	81
  1766                           	
  1767                           l2601:	
  1768  0CA2                     ;mainM.c: 81:         _delay((unsigned long)((10)*(4000000/4000.0)));
  1769                           	opt asmopt_push
  1770                           opt asmopt_off
  1771                           movlw	13
  1772  0CA2  300D               	bsf	status, 5	;RP0=1, select bank1
  1773  0CA3  1683               	bcf	status, 6	;RP1=0, select bank1
  1774  0CA4  1303               movwf	((??_main+0)^080h+0+1),f
  1775  0CA5  00BE               	movlw	251
  1776  0CA6  30FB               movwf	((??_main+0)^080h+0),f
  1777  0CA7  00BD               	u3587:
  1778  0CA8                     decfsz	((??_main+0)^080h+0),f
  1779  0CA8  0BBD               	goto	u3587
  1780  0CA9  2CA8               	decfsz	((??_main+0)^080h+0+1),f
  1781  0CAA  0BBE               	goto	u3587
  1782  0CAB  2CA8               opt asmopt_pop
  1783                           
  1784                           	line	90
  1785                           	
  1786                           l2603:	
  1787  0CAC                     ;mainM.c: 90:         sensorF1 = (float) adc * 5/255;
  1788                           	movlw	0x43
  1789  0CAC  3043               	bcf	status, 5	;RP0=0, select bank0
  1790  0CAD  1283               	bcf	status, 6	;RP1=0, select bank0
  1791  0CAE  1303               	movwf	(___fldiv@a+3)
  1792  0CAF  00D9               	movlw	0x7f
  1793  0CB0  307F               	movwf	(___fldiv@a+2)
  1794  0CB1  00D8               	movlw	0x0
  1795  0CB2  3000               	movwf	(___fldiv@a+1)
  1796  0CB3  00D7               	movlw	0x0
  1797  0CB4  3000               	movwf	(___fldiv@a)
  1798  0CB5  00D6               
  1799                           	movlw	0x40
  1800  0CB6  3040               	movwf	(___flmul@b+3)
  1801  0CB7  00BF               	movlw	0xa0
  1802  0CB8  30A0               	movwf	(___flmul@b+2)
  1803  0CB9  00BE               	movlw	0x0
  1804  0CBA  3000               	movwf	(___flmul@b+1)
  1805  0CBB  00BD               	movlw	0x0
  1806  0CBC  3000               	movwf	(___flmul@b)
  1807  0CBD  00BC               
  1808                           	bsf	status, 5	;RP0=1, select bank1
  1809  0CBE  1683               	bcf	status, 6	;RP1=0, select bank1
  1810  0CBF  1303               	movf	(_adc)^080h,w
  1811  0CC0  083B               	movwf	(??_main+0)^080h+0
  1812  0CC1  00BD               	clrf	(??_main+0)^080h+0+1
  1813  0CC2  01BE               	clrf	(??_main+0)^080h+0+2
  1814  0CC3  01BF               	clrf	(??_main+0)^080h+0+3
  1815  0CC4  01C0               	movf	3+(??_main+0)^080h+0,w
  1816  0CC5  0840               	movwf	(___xxtofl@val+3)
  1817  0CC6  00F3               	movf	2+(??_main+0)^080h+0,w
  1818  0CC7  083F               	movwf	(___xxtofl@val+2)
  1819  0CC8  00F2               	movf	1+(??_main+0)^080h+0,w
  1820  0CC9  083E               	movwf	(___xxtofl@val+1)
  1821  0CCA  00F1               	movf	0+(??_main+0)^080h+0,w
  1822  0CCB  083D               	movwf	(___xxtofl@val)
  1823  0CCC  00F0               
  1824                           	movlw	low(0)
  1825  0CCD  3000               	fcall	___xxtofl
  1826  0CCE  120A  158A  2374  120A  158A  	movf	(3+(?___xxtofl)),w
  1827  0CD3  0873               	bcf	status, 5	;RP0=0, select bank0
  1828  0CD4  1283               	bcf	status, 6	;RP1=0, select bank0
  1829  0CD5  1303               	movwf	(___flmul@a+3)
  1830  0CD6  00C3               	movf	(2+(?___xxtofl)),w
  1831  0CD7  0872               	movwf	(___flmul@a+2)
  1832  0CD8  00C2               	movf	(1+(?___xxtofl)),w
  1833  0CD9  0871               	movwf	(___flmul@a+1)
  1834  0CDA  00C1               	movf	(0+(?___xxtofl)),w
  1835  0CDB  0870               	movwf	(___flmul@a)
  1836  0CDC  00C0               
  1837                           	fcall	___flmul
  1838  0CDD  120A  118A  247E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1839  0CE2  1283               	bcf	status, 6	;RP1=0, select bank0
  1840  0CE3  1303               	movf	(3+(?___flmul)),w
  1841  0CE4  083F               	movwf	(___fldiv@b+3)
  1842  0CE5  00DD               	movf	(2+(?___flmul)),w
  1843  0CE6  083E               	movwf	(___fldiv@b+2)
  1844  0CE7  00DC               	movf	(1+(?___flmul)),w
  1845  0CE8  083D               	movwf	(___fldiv@b+1)
  1846  0CE9  00DB               	movf	(0+(?___flmul)),w
  1847  0CEA  083C               	movwf	(___fldiv@b)
  1848  0CEB  00DA               
  1849                           	fcall	___fldiv
  1850  0CEC  120A  158A  25F7  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1851  0CF1  1283               	bcf	status, 6	;RP1=0, select bank0
  1852  0CF2  1303               	movf	(3+(?___fldiv)),w
  1853  0CF3  0859               	bsf	status, 5	;RP0=1, select bank1
  1854  0CF4  1683               	bcf	status, 6	;RP1=0, select bank1
  1855  0CF5  1303               	movwf	(_sensorF1+3)^080h
  1856  0CF6  00B3               	bcf	status, 5	;RP0=0, select bank0
  1857  0CF7  1283               	bcf	status, 6	;RP1=0, select bank0
  1858  0CF8  1303               	movf	(2+(?___fldiv)),w
  1859  0CF9  0858               	bsf	status, 5	;RP0=1, select bank1
  1860  0CFA  1683               	bcf	status, 6	;RP1=0, select bank1
  1861  0CFB  1303               	movwf	(_sensorF1+2)^080h
  1862  0CFC  00B2               	bcf	status, 5	;RP0=0, select bank0
  1863  0CFD  1283               	bcf	status, 6	;RP1=0, select bank0
  1864  0CFE  1303               	movf	(1+(?___fldiv)),w
  1865  0CFF  0857               	bsf	status, 5	;RP0=1, select bank1
  1866  0D00  1683               	bcf	status, 6	;RP1=0, select bank1
  1867  0D01  1303               	movwf	(_sensorF1+1)^080h
  1868  0D02  00B1               	bcf	status, 5	;RP0=0, select bank0
  1869  0D03  1283               	bcf	status, 6	;RP1=0, select bank0
  1870  0D04  1303               	movf	(0+(?___fldiv)),w
  1871  0D05  0856               	bsf	status, 5	;RP0=1, select bank1
  1872  0D06  1683               	bcf	status, 6	;RP1=0, select bank1
  1873  0D07  1303               	movwf	(_sensorF1)^080h
  1874  0D08  00B0               
  1875                           	line	91
  1876                           	
  1877                           l2605:	
  1878  0D09                     ;mainM.c: 91:         entero1 = (int) sensorF1;
  1879                           	movf	(_sensorF1+3)^080h,w
  1880  0D09  0833               	movwf	(___fltol@f1+3)
  1881  0D0A  00F3               	movf	(_sensorF1+2)^080h,w
  1882  0D0B  0832               	movwf	(___fltol@f1+2)
  1883  0D0C  00F2               	movf	(_sensorF1+1)^080h,w
  1884  0D0D  0831               	movwf	(___fltol@f1+1)
  1885  0D0E  00F1               	movf	(_sensorF1)^080h,w
  1886  0D0F  0830               	movwf	(___fltol@f1)
  1887  0D10  00F0               
  1888                           	fcall	___fltol
  1889  0D11  120A  118A  2028  120A  158A  	movf	(0+(?___fltol)),w
  1890  0D16  0870               	bsf	status, 5	;RP0=1, select bank1
  1891  0D17  1683               	bcf	status, 6	;RP1=0, select bank1
  1892  0D18  1303               	movwf	(??_main+0)^080h+0
  1893  0D19  00BD               	movf	(??_main+0)^080h+0,w
  1894  0D1A  083D               	movwf	(_entero1)^080h
  1895  0D1B  00BA               	line	92
  1896                           	
  1897                           l2607:	
  1898  0D1C                     ;mainM.c: 92:         float1 = (sensorF1 - entero1)*100;
  1899                           	movlw	0x42
  1900  0D1C  3042               	bcf	status, 5	;RP0=0, select bank0
  1901  0D1D  1283               	bcf	status, 6	;RP1=0, select bank0
  1902  0D1E  1303               	movwf	(___flmul@b+3)
  1903  0D1F  00BF               	movlw	0xc8
  1904  0D20  30C8               	movwf	(___flmul@b+2)
  1905  0D21  00BE               	movlw	0x0
  1906  0D22  3000               	movwf	(___flmul@b+1)
  1907  0D23  00BD               	movlw	0x0
  1908  0D24  3000               	movwf	(___flmul@b)
  1909  0D25  00BC               
  1910                           	bsf	status, 5	;RP0=1, select bank1
  1911  0D26  1683               	bcf	status, 6	;RP1=0, select bank1
  1912  0D27  1303               	movf	(_sensorF1+3)^080h,w
  1913  0D28  0833               	bcf	status, 5	;RP0=0, select bank0
  1914  0D29  1283               	bcf	status, 6	;RP1=0, select bank0
  1915  0D2A  1303               	movwf	(___fladd@b+3)
  1916  0D2B  00A7               	bsf	status, 5	;RP0=1, select bank1
  1917  0D2C  1683               	bcf	status, 6	;RP1=0, select bank1
  1918  0D2D  1303               	movf	(_sensorF1+2)^080h,w
  1919  0D2E  0832               	bcf	status, 5	;RP0=0, select bank0
  1920  0D2F  1283               	bcf	status, 6	;RP1=0, select bank0
  1921  0D30  1303               	movwf	(___fladd@b+2)
  1922  0D31  00A6               	bsf	status, 5	;RP0=1, select bank1
  1923  0D32  1683               	bcf	status, 6	;RP1=0, select bank1
  1924  0D33  1303               	movf	(_sensorF1+1)^080h,w
  1925  0D34  0831               	bcf	status, 5	;RP0=0, select bank0
  1926  0D35  1283               	bcf	status, 6	;RP1=0, select bank0
  1927  0D36  1303               	movwf	(___fladd@b+1)
  1928  0D37  00A5               	bsf	status, 5	;RP0=1, select bank1
  1929  0D38  1683               	bcf	status, 6	;RP1=0, select bank1
  1930  0D39  1303               	movf	(_sensorF1)^080h,w
  1931  0D3A  0830               	bcf	status, 5	;RP0=0, select bank0
  1932  0D3B  1283               	bcf	status, 6	;RP1=0, select bank0
  1933  0D3C  1303               	movwf	(___fladd@b)
  1934  0D3D  00A4               
  1935                           	bsf	status, 5	;RP0=1, select bank1
  1936  0D3E  1683               	bcf	status, 6	;RP1=0, select bank1
  1937  0D3F  1303               	movf	(_entero1)^080h,w
  1938  0D40  083A               	movwf	(??_main+0)^080h+0
  1939  0D41  00BD               	clrf	(??_main+0)^080h+0+1
  1940  0D42  01BE               	clrf	(??_main+0)^080h+0+2
  1941  0D43  01BF               	clrf	(??_main+0)^080h+0+3
  1942  0D44  01C0               	movf	3+(??_main+0)^080h+0,w
  1943  0D45  0840               	movwf	(___xxtofl@val+3)
  1944  0D46  00F3               	movf	2+(??_main+0)^080h+0,w
  1945  0D47  083F               	movwf	(___xxtofl@val+2)
  1946  0D48  00F2               	movf	1+(??_main+0)^080h+0,w
  1947  0D49  083E               	movwf	(___xxtofl@val+1)
  1948  0D4A  00F1               	movf	0+(??_main+0)^080h+0,w
  1949  0D4B  083D               	movwf	(___xxtofl@val)
  1950  0D4C  00F0               
  1951                           	movlw	low(01h)
  1952  0D4D  3001               	fcall	___xxtofl
  1953  0D4E  120A  158A  2374  120A  158A  	movf	(3+(?___xxtofl)),w
  1954  0D53  0873               	bcf	status, 5	;RP0=0, select bank0
  1955  0D54  1283               	bcf	status, 6	;RP1=0, select bank0
  1956  0D55  1303               	movwf	(___flneg@f1+3)
  1957  0D56  00A3               	movf	(2+(?___xxtofl)),w
  1958  0D57  0872               	movwf	(___flneg@f1+2)
  1959  0D58  00A2               	movf	(1+(?___xxtofl)),w
  1960  0D59  0871               	movwf	(___flneg@f1+1)
  1961  0D5A  00A1               	movf	(0+(?___xxtofl)),w
  1962  0D5B  0870               	movwf	(___flneg@f1)
  1963  0D5C  00A0               
  1964                           	fcall	___flneg
  1965  0D5D  120A  158A  205E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1966  0D62  1283               	bcf	status, 6	;RP1=0, select bank0
  1967  0D63  1303               	movf	(3+(?___flneg)),w
  1968  0D64  0823               	movwf	(___fladd@a+3)
  1969  0D65  00AB               	movf	(2+(?___flneg)),w
  1970  0D66  0822               	movwf	(___fladd@a+2)
  1971  0D67  00AA               	movf	(1+(?___flneg)),w
  1972  0D68  0821               	movwf	(___fladd@a+1)
  1973  0D69  00A9               	movf	(0+(?___flneg)),w
  1974  0D6A  0820               	movwf	(___fladd@a)
  1975  0D6B  00A8               
  1976                           	fcall	___fladd
  1977  0D6C  120A  118A  21C2  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1978  0D71  1283               	bcf	status, 6	;RP1=0, select bank0
  1979  0D72  1303               	movf	(3+(?___fladd)),w
  1980  0D73  0827               	movwf	(___flmul@a+3)
  1981  0D74  00C3               	movf	(2+(?___fladd)),w
  1982  0D75  0826               	movwf	(___flmul@a+2)
  1983  0D76  00C2               	movf	(1+(?___fladd)),w
  1984  0D77  0825               	movwf	(___flmul@a+1)
  1985  0D78  00C1               	movf	(0+(?___fladd)),w
  1986  0D79  0824               	movwf	(___flmul@a)
  1987  0D7A  00C0               
  1988                           	fcall	___flmul
  1989  0D7B  120A  118A  247E  120A  158A  	bcf	status, 5	;RP0=0, select bank0
  1990  0D80  1283               	bcf	status, 6	;RP1=0, select bank0
  1991  0D81  1303               	movf	(3+(?___flmul)),w
  1992  0D82  083F               	bsf	status, 5	;RP0=1, select bank1
  1993  0D83  1683               	bcf	status, 6	;RP1=0, select bank1
  1994  0D84  1303               	movwf	(_float1+3)^080h
  1995  0D85  00AF               	bcf	status, 5	;RP0=0, select bank0
  1996  0D86  1283               	bcf	status, 6	;RP1=0, select bank0
  1997  0D87  1303               	movf	(2+(?___flmul)),w
  1998  0D88  083E               	bsf	status, 5	;RP0=1, select bank1
  1999  0D89  1683               	bcf	status, 6	;RP1=0, select bank1
  2000  0D8A  1303               	movwf	(_float1+2)^080h
  2001  0D8B  00AE               	bcf	status, 5	;RP0=0, select bank0
  2002  0D8C  1283               	bcf	status, 6	;RP1=0, select bank0
  2003  0D8D  1303               	movf	(1+(?___flmul)),w
  2004  0D8E  083D               	bsf	status, 5	;RP0=1, select bank1
  2005  0D8F  1683               	bcf	status, 6	;RP1=0, select bank1
  2006  0D90  1303               	movwf	(_float1+1)^080h
  2007  0D91  00AD               	bcf	status, 5	;RP0=0, select bank0
  2008  0D92  1283               	bcf	status, 6	;RP1=0, select bank0
  2009  0D93  1303               	movf	(0+(?___flmul)),w
  2010  0D94  083C               	bsf	status, 5	;RP0=1, select bank1
  2011  0D95  1683               	bcf	status, 6	;RP1=0, select bank1
  2012  0D96  1303               	movwf	(_float1)^080h
  2013  0D97  00AC               
  2014                           	line	93
  2015                           	
  2016                           l2609:	
  2017  0D98                     ;mainM.c: 93:         dec1 = (int) float1;
  2018                           	movf	(_float1+3)^080h,w
  2019  0D98  082F               	movwf	(___fltol@f1+3)
  2020  0D99  00F3               	movf	(_float1+2)^080h,w
  2021  0D9A  082E               	movwf	(___fltol@f1+2)
  2022  0D9B  00F2               	movf	(_float1+1)^080h,w
  2023  0D9C  082D               	movwf	(___fltol@f1+1)
  2024  0D9D  00F1               	movf	(_float1)^080h,w
  2025  0D9E  082C               	movwf	(___fltol@f1)
  2026  0D9F  00F0               
  2027                           	fcall	___fltol
  2028  0DA0  120A  118A  2028  120A  158A  	movf	(0+(?___fltol)),w
  2029  0DA5  0870               	bsf	status, 5	;RP0=1, select bank1
  2030  0DA6  1683               	bcf	status, 6	;RP1=0, select bank1
  2031  0DA7  1303               	movwf	(??_main+0)^080h+0
  2032  0DA8  00BD               	movf	(??_main+0)^080h+0,w
  2033  0DA9  083D               	movwf	(_dec1)^080h
  2034  0DAA  00B9               	line	101
  2035                           	
  2036                           l2611:	
  2037  0DAB                     ;mainM.c: 101:         writeFloat(entero1, dec1, 1);
  2038                           	movf	(_dec1)^080h,w
  2039  0DAB  0839               	movwf	(??_main+0)^080h+0
  2040  0DAC  00BD               	movf	(??_main+0)^080h+0,w
  2041  0DAD  083D               	bcf	status, 5	;RP0=0, select bank0
  2042  0DAE  1283               	bcf	status, 6	;RP1=0, select bank0
  2043  0DAF  1303               	movwf	(writeFloat@decimal)
  2044  0DB0  00B5               	clrf	(writeFloat@initPos)
  2045  0DB1  01B6               	incf	(writeFloat@initPos),f
  2046  0DB2  0AB6               	bsf	status, 5	;RP0=1, select bank1
  2047  0DB3  1683               	bcf	status, 6	;RP1=0, select bank1
  2048  0DB4  1303               	movf	(_entero1)^080h,w
  2049  0DB5  083A               	fcall	_writeFloat
  2050  0DB6  120A  158A  22A7  120A  158A  	line	102
  2051                           	
  2052                           l2613:	
  2053  0DBB                     ;mainM.c: 102:         setCursorLCD(2, 7);
  2054                           	movlw	low(07h)
  2055  0DBB  3007               	bsf	status, 5	;RP0=1, select bank1
  2056  0DBC  1683               	bcf	status, 6	;RP1=0, select bank1
  2057  0DBD  1303               	movwf	(??_main+0)^080h+0
  2058  0DBE  00BD               	movf	(??_main+0)^080h+0,w
  2059  0DBF  083D               	movwf	(setCursorLCD@x)
  2060  0DC0  00F3               	movlw	low(02h)
  2061  0DC1  3002               	fcall	_setCursorLCD
  2062  0DC2  120A  158A  2090  120A  158A  	line	103
  2063                           	
  2064                           l2615:	
  2065  0DC7                     ;mainM.c: 103:         writeIntLCD(counter);
  2066                           	bsf	status, 5	;RP0=1, select bank1
  2067  0DC7  1683               	bcf	status, 6	;RP1=0, select bank1
  2068  0DC8  1303               	movf	(_counter)^080h,w
  2069  0DC9  0838               	fcall	_writeIntLCD
  2070  0DCA  120A  118A  200A  120A  158A  	line	104
  2071                           	
  2072                           l2617:	
  2073  0DCF                     ;mainM.c: 104:         writeCharLCD(' ');
  2074                           	movlw	low(020h)
  2075  0DCF  3020               	fcall	_writeCharLCD
  2076  0DD0  120A  158A  206D  120A  158A  	line	105
  2077                           	
  2078                           l2619:	
  2079  0DD5                     ;mainM.c: 105:         setCursorLCD(2, 13);
  2080                           	movlw	low(0Dh)
  2081  0DD5  300D               	bsf	status, 5	;RP0=1, select bank1
  2082  0DD6  1683               	bcf	status, 6	;RP1=0, select bank1
  2083  0DD7  1303               	movwf	(??_main+0)^080h+0
  2084  0DD8  00BD               	movf	(??_main+0)^080h+0,w
  2085  0DD9  083D               	movwf	(setCursorLCD@x)
  2086  0DDA  00F3               	movlw	low(02h)
  2087  0DDB  3002               	fcall	_setCursorLCD
  2088  0DDC  120A  158A  2090  120A  158A  	line	106
  2089                           	
  2090                           l2621:	
  2091  0DE1                     ;mainM.c: 106:         writeIntLCD(s3);
  2092                           	bsf	status, 5	;RP0=1, select bank1
  2093  0DE1  1683               	bcf	status, 6	;RP1=0, select bank1
  2094  0DE2  1303               	movf	(_s3)^080h,w
  2095  0DE3  0834               	fcall	_writeIntLCD
  2096  0DE4  120A  118A  200A  120A  158A  	line	108
  2097                           	
  2098                           l2623:	
  2099  0DE9                     ;mainM.c: 108:         writeStrLCD("  ");
  2100                           	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  2101  0DE9  300B               	movwf	(writeStrLCD@string)
  2102  0DEA  00F2               	movlw	80h
  2103  0DEB  3080               	movwf	(writeStrLCD@string+1)
  2104  0DEC  00F3               	fcall	_writeStrLCD
  2105  0DED  120A  158A  21B9  120A  158A  	goto	l2577
  2106  0DF2  2C3C               	line	109
  2107                           ;mainM.c: 109:     }
  2108                           	
  2109                           l177:	
  2110  0DF3                     	goto	l2577
  2111  0DF3  2C3C               	
  2112                           l178:	
  2113  0DF4                     	line	111
  2114                           ;mainM.c: 110:     return;
  2115                           	
  2116                           l179:	
  2117  0DF4                     	global	start
  2118                           	ljmp	start
  2119  0DF4  120A  118A  2800   	opt stack 0
  2120                           GLOBAL	__end_of_main
  2121                           	__end_of_main:
  2122  0DF7                     	signat	_main,89
  2123                           	global	_writeFloat
  2124                           
  2125 ;; *************** function _writeFloat *****************
  2126 ;; Defined at:
  2127 ;;		line 63 in file "LCD.c"
  2128 ;; Parameters:    Size  Location     Type
  2129 ;;  integer         1    wreg     unsigned char 
  2130 ;;  decimal         1   21[BANK0 ] unsigned char 
  2131 ;;  initPos         1   22[BANK0 ] unsigned char 
  2132 ;; Auto vars:     Size  Location     Type
  2133 ;;  integer         1   24[BANK0 ] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  1    wreg      void 
  2136 ;; Registers used:
  2137 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       2       0       0       0
  2144 ;;      Locals:         0       1       0       0       0
  2145 ;;      Temps:          0       1       0       0       0
  2146 ;;      Totals:         0       4       0       0       0
  2147 ;;Total ram usage:        4 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    3
  2150 ;; This function calls:
  2151 ;;		_setCursorLCD
  2152 ;;		_writeCharLCD
  2153 ;;		_writeIntLCD
  2154 ;; This function is called by:
  2155 ;;		_main
  2156 ;; This function uses a non-reentrant model
  2157 ;;
  2158                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  2159                           	file	"LCD.c"
  2160                           	line	63
  2161                           global __ptext1
  2162                           __ptext1:	;psect for function _writeFloat
  2163  0AA7                     psect	text1
  2164                           	file	"LCD.c"
  2165                           	line	63
  2166                           	global	__size_of_writeFloat
  2167                           	__size_of_writeFloat	equ	__end_of_writeFloat-_writeFloat
  2168  0060                     	
  2169                           _writeFloat:	
  2170  0AA7                     ;incstack = 0
  2171                           	opt	stack 4
  2172                           ; Regs used in _writeFloat: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2173                           ;writeFloat@integer stored from wreg
  2174                           	bcf	status, 5	;RP0=0, select bank0
  2175  0AA7  1283               	bcf	status, 6	;RP1=0, select bank0
  2176  0AA8  1303               	movwf	(writeFloat@integer)
  2177  0AA9  00B8               	line	66
  2178                           	
  2179                           l1967:	
  2180  0AAA                     ;LCD.c: 66:     setCursorLCD(2, initPos);
  2181                           	movf	(writeFloat@initPos),w
  2182  0AAA  0836               	movwf	(??_writeFloat+0)+0
  2183  0AAB  00B7               	movf	(??_writeFloat+0)+0,w
  2184  0AAC  0837               	movwf	(setCursorLCD@x)
  2185  0AAD  00F3               	movlw	low(02h)
  2186  0AAE  3002               	fcall	_setCursorLCD
  2187  0AAF  120A  158A  2090  120A  158A  	line	67
  2188                           	
  2189                           l1969:	
  2190  0AB4                     ;LCD.c: 67:     writeIntLCD(integer);
  2191                           	bcf	status, 5	;RP0=0, select bank0
  2192  0AB4  1283               	bcf	status, 6	;RP1=0, select bank0
  2193  0AB5  1303               	movf	(writeFloat@integer),w
  2194  0AB6  0838               	fcall	_writeIntLCD
  2195  0AB7  120A  118A  200A  120A  158A  	line	68
  2196                           	
  2197                           l1971:	
  2198  0ABC                     ;LCD.c: 68:     setCursorLCD(2, initPos + 1);
  2199                           	bcf	status, 5	;RP0=0, select bank0
  2200  0ABC  1283               	bcf	status, 6	;RP1=0, select bank0
  2201  0ABD  1303               	movf	(writeFloat@initPos),w
  2202  0ABE  0836               	addlw	01h
  2203  0ABF  3E01               	movwf	(??_writeFloat+0)+0
  2204  0AC0  00B7               	movf	(??_writeFloat+0)+0,w
  2205  0AC1  0837               	movwf	(setCursorLCD@x)
  2206  0AC2  00F3               	movlw	low(02h)
  2207  0AC3  3002               	fcall	_setCursorLCD
  2208  0AC4  120A  158A  2090  120A  158A  	line	69
  2209                           	
  2210                           l1973:	
  2211  0AC9                     ;LCD.c: 69:     writeCharLCD('.');
  2212                           	movlw	low(02Eh)
  2213  0AC9  302E               	fcall	_writeCharLCD
  2214  0ACA  120A  158A  206D  120A  158A  	line	70
  2215                           	
  2216                           l1975:	
  2217  0ACF                     ;LCD.c: 70:     setCursorLCD(2, initPos + 2);
  2218                           	bcf	status, 5	;RP0=0, select bank0
  2219  0ACF  1283               	bcf	status, 6	;RP1=0, select bank0
  2220  0AD0  1303               	movf	(writeFloat@initPos),w
  2221  0AD1  0836               	addlw	02h
  2222  0AD2  3E02               	movwf	(??_writeFloat+0)+0
  2223  0AD3  00B7               	movf	(??_writeFloat+0)+0,w
  2224  0AD4  0837               	movwf	(setCursorLCD@x)
  2225  0AD5  00F3               	movlw	low(02h)
  2226  0AD6  3002               	fcall	_setCursorLCD
  2227  0AD7  120A  158A  2090  120A  158A  	line	72
  2228                           	
  2229                           l1977:	
  2230  0ADC                     ;LCD.c: 72:     if(decimal < 10){
  2231                           	movlw	low(0Ah)
  2232  0ADC  300A               	bcf	status, 5	;RP0=0, select bank0
  2233  0ADD  1283               	bcf	status, 6	;RP1=0, select bank0
  2234  0ADE  1303               	subwf	(writeFloat@decimal),w
  2235  0ADF  0235               	skipnc
  2236  0AE0  1803               	goto	u2181
  2237  0AE1  2AE3               	goto	u2180
  2238  0AE2  2AE4               u2181:
  2239  0AE3                     	goto	l1981
  2240  0AE3  2AEB               u2180:
  2241  0AE4                     	line	73
  2242                           	
  2243                           l1979:	
  2244  0AE4                     ;LCD.c: 73:         writeCharLCD('0');
  2245                           	movlw	low(030h)
  2246  0AE4  3030               	fcall	_writeCharLCD
  2247  0AE5  120A  158A  206D  120A  158A  	goto	l1981
  2248  0AEA  2AEB               	line	74
  2249                           ;LCD.c: 74:     }
  2250                           	
  2251                           l100:	
  2252  0AEB                     	line	75
  2253                           	
  2254                           l1981:	
  2255  0AEB                     ;LCD.c: 75:     writeIntLCD(decimal);
  2256                           	bcf	status, 5	;RP0=0, select bank0
  2257  0AEB  1283               	bcf	status, 6	;RP1=0, select bank0
  2258  0AEC  1303               	movf	(writeFloat@decimal),w
  2259  0AED  0835               	fcall	_writeIntLCD
  2260  0AEE  120A  118A  200A  120A  158A  	line	77
  2261                           	
  2262                           l1983:	
  2263  0AF3                     ;LCD.c: 77:     setCursorLCD(2, initPos + 4);
  2264                           	bcf	status, 5	;RP0=0, select bank0
  2265  0AF3  1283               	bcf	status, 6	;RP1=0, select bank0
  2266  0AF4  1303               	movf	(writeFloat@initPos),w
  2267  0AF5  0836               	addlw	04h
  2268  0AF6  3E04               	movwf	(??_writeFloat+0)+0
  2269  0AF7  00B7               	movf	(??_writeFloat+0)+0,w
  2270  0AF8  0837               	movwf	(setCursorLCD@x)
  2271  0AF9  00F3               	movlw	low(02h)
  2272  0AFA  3002               	fcall	_setCursorLCD
  2273  0AFB  120A  158A  2090  120A  158A  	line	78
  2274                           	
  2275                           l1985:	
  2276  0B00                     ;LCD.c: 78:     writeCharLCD('V');
  2277                           	movlw	low(056h)
  2278  0B00  3056               	fcall	_writeCharLCD
  2279  0B01  120A  158A  206D  120A  158A  	line	79
  2280                           	
  2281                           l101:	
  2282  0B06                     	return
  2283  0B06  0008               	opt stack 0
  2284                           GLOBAL	__end_of_writeFloat
  2285                           	__end_of_writeFloat:
  2286  0B07                     	signat	_writeFloat,12409
  2287                           	global	_writeIntLCD
  2288                           
  2289 ;; *************** function _writeIntLCD *****************
  2290 ;; Defined at:
  2291 ;;		line 57 in file "LCD.c"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  numero          1    wreg     unsigned char 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  numero          1   20[BANK0 ] unsigned char 
  2296 ;;  buffer          4   16[BANK0 ] unsigned char [4]
  2297 ;; Return value:  Size  Location     Type
  2298 ;;                  1    wreg      void 
  2299 ;; Registers used:
  2300 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2301 ;; Tracked objects:
  2302 ;;		On entry : 0/0
  2303 ;;		On exit  : 0/0
  2304 ;;		Unchanged: 0/0
  2305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2306 ;;      Params:         0       0       0       0       0
  2307 ;;      Locals:         0       5       0       0       0
  2308 ;;      Temps:          0       3       0       0       0
  2309 ;;      Totals:         0       8       0       0       0
  2310 ;;Total ram usage:        8 bytes
  2311 ;; Hardware stack levels used:    1
  2312 ;; Hardware stack levels required when called:    2
  2313 ;; This function calls:
  2314 ;;		_sprintf
  2315 ;;		_writeStrLCD
  2316 ;; This function is called by:
  2317 ;;		_writeFloat
  2318 ;;		_main
  2319 ;; This function uses a non-reentrant model
  2320 ;;
  2321                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  2322                           	line	57
  2323                           global __ptext2
  2324                           __ptext2:	;psect for function _writeIntLCD
  2325  000A                     psect	text2
  2326                           	file	"LCD.c"
  2327                           	line	57
  2328                           	global	__size_of_writeIntLCD
  2329                           	__size_of_writeIntLCD	equ	__end_of_writeIntLCD-_writeIntLCD
  2330  001E                     	
  2331                           _writeIntLCD:	
  2332  000A                     ;incstack = 0
  2333                           	opt	stack 5
  2334                           ; Regs used in _writeIntLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2335                           ;writeIntLCD@numero stored from wreg
  2336                           	bcf	status, 5	;RP0=0, select bank0
  2337  000A  1283               	bcf	status, 6	;RP1=0, select bank0
  2338  000B  1303               	movwf	(writeIntLCD@numero)
  2339  000C  00B4               	line	59
  2340                           	
  2341                           l1923:	
  2342  000D                     ;LCD.c: 58:     char buffer [4];;LCD.c: 59:     sprintf (buffer, "%d", numero);
  2343                           	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  2344  000D  3017               	movwf	(??_writeIntLCD+0)+0
  2345  000E  00AD               	movf	(??_writeIntLCD+0)+0,w
  2346  000F  082D               	movwf	(sprintf@f)
  2347  0010  00A0               	movf	(writeIntLCD@numero),w
  2348  0011  0834               	movwf	(??_writeIntLCD+1)+0
  2349  0012  00AE               	clrf	(??_writeIntLCD+1)+0+1
  2350  0013  01AF               	movf	0+(??_writeIntLCD+1)+0,w
  2351  0014  082E               	movwf	0+(?_sprintf)+01h
  2352  0015  00A1               	movf	1+(??_writeIntLCD+1)+0,w
  2353  0016  082F               	movwf	1+(?_sprintf)+01h
  2354  0017  00A2               	movlw	(low(writeIntLCD@buffer|((0x0)<<8)))&0ffh
  2355  0018  3030               	fcall	_sprintf
  2356  0019  120A  118A  20C2  120A  118A  	line	60
  2357                           ;LCD.c: 60:     writeStrLCD(buffer);
  2358                           	movlw	(low(writeIntLCD@buffer|((0x0)<<8))&0ffh)
  2359  001E  3030               	movwf	(writeStrLCD@string)
  2360  001F  00F2               	movlw	(0x0)
  2361  0020  3000               	movwf	(writeStrLCD@string+1)
  2362  0021  00F3               	fcall	_writeStrLCD
  2363  0022  120A  158A  21B9  120A  118A  	line	61
  2364                           	
  2365                           l97:	
  2366  0027                     	return
  2367  0027  0008               	opt stack 0
  2368                           GLOBAL	__end_of_writeIntLCD
  2369                           	__end_of_writeIntLCD:
  2370  0028                     	signat	_writeIntLCD,4217
  2371                           	global	_sprintf
  2372                           
  2373 ;; *************** function _sprintf *****************
  2374 ;; Defined at:
  2375 ;;		line 500 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  sp              1    wreg     PTR unsigned char 
  2378 ;;		 -> writeIntLCD@buffer(4), 
  2379 ;;  f               1    0[BANK0 ] PTR const unsigned char 
  2380 ;;		 -> STR_1(3), 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  sp              1   11[BANK0 ] PTR unsigned char 
  2383 ;;		 -> writeIntLCD@buffer(4), 
  2384 ;;  tmpval          4    0        struct .
  2385 ;;  val             2    9[BANK0 ] unsigned int 
  2386 ;;  cp              2    0        PTR const unsigned char 
  2387 ;;  len             2    0        unsigned int 
  2388 ;;  c               1   12[BANK0 ] unsigned char 
  2389 ;;  prec            1    8[BANK0 ] char 
  2390 ;;  flag            1    7[BANK0 ] unsigned char 
  2391 ;;  ap              1    6[BANK0 ] PTR void [1]
  2392 ;;		 -> ?_sprintf(2), 
  2393 ;; Return value:  Size  Location     Type
  2394 ;;                  2    0[BANK0 ] int 
  2395 ;; Registers used:
  2396 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2397 ;; Tracked objects:
  2398 ;;		On entry : 0/0
  2399 ;;		On exit  : 0/0
  2400 ;;		Unchanged: 0/0
  2401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2402 ;;      Params:         0       3       0       0       0
  2403 ;;      Locals:         0       7       0       0       0
  2404 ;;      Temps:          0       3       0       0       0
  2405 ;;      Totals:         0      13       0       0       0
  2406 ;;Total ram usage:       13 bytes
  2407 ;; Hardware stack levels used:    1
  2408 ;; Hardware stack levels required when called:    1
  2409 ;; This function calls:
  2410 ;;		___lwdiv
  2411 ;;		___lwmod
  2412 ;; This function is called by:
  2413 ;;		_writeIntLCD
  2414 ;; This function uses a non-reentrant model
  2415 ;;
  2416                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  2417                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2418                           	line	500
  2419                           global __ptext3
  2420                           __ptext3:	;psect for function _sprintf
  2421  00C2                     psect	text3
  2422                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c"
  2423                           	line	500
  2424                           	global	__size_of_sprintf
  2425                           	__size_of_sprintf	equ	__end_of_sprintf-_sprintf
  2426  0100                     	
  2427                           _sprintf:	
  2428  00C2                     ;incstack = 0
  2429                           	opt	stack 5
  2430                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2431                           ;sprintf@sp stored from wreg
  2432                           	bcf	status, 5	;RP0=0, select bank0
  2433  00C2  1283               	bcf	status, 6	;RP1=0, select bank0
  2434  00C3  1303               	movwf	(sprintf@sp)
  2435  00C4  00AB               	line	545
  2436                           	
  2437                           l1793:	
  2438  00C5                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 500: sprint
                                 f(char * sp, const char * f, ...);C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources
                                 \c90\common\doprnt.c: 501: {;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\
                                 common\doprnt.c: 502:  va_list ap;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\source
                                 s\c90\common\doprnt.c: 507:  char c;;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sour
                                 ces\c90\common\doprnt.c: 516:  signed char prec;;C:\Program Files (x86)\Microchip\xc8\v2
                                 .00\pic\sources\c90\common\doprnt.c: 520:  unsigned char flag;
  2439                           	movlw	(low(?_sprintf|((0x0)<<8)+01h))&0ffh
  2440  00C5  3021               	movwf	(??_sprintf+0)+0
  2441  00C6  00A3               	movf	(??_sprintf+0)+0,w
  2442  00C7  0823               	movwf	(sprintf@ap)
  2443  00C8  00A6               	line	548
  2444                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2445                           	goto	l1845
  2446  00C9  29A8               	
  2447                           l274:	
  2448  00CA                     	line	550
  2449                           	
  2450                           l1795:	
  2451  00CA                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 550:   if(c
                                  != '%')
  2452                           		movlw	37
  2453  00CA  3025               	xorwf	((sprintf@c)),w
  2454  00CB  062C               	btfsc	status,2
  2455  00CC  1903               	goto	u1951
  2456  00CD  28CF               	goto	u1950
  2457  00CE  28D0               u1951:
  2458  00CF                     	goto	l1801
  2459  00CF  28DC               u1950:
  2460  00D0                     	line	553
  2461                           	
  2462                           l1797:	
  2463  00D0                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 552:   {;C:
                                 \Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 553:    ((*sp+
                                 + = (c)));
  2464                           	movf	(sprintf@c),w
  2465  00D0  082C               	movwf	(??_sprintf+0)+0
  2466  00D1  00A3               	movf	(sprintf@sp),w
  2467  00D2  082B               	movwf	fsr0
  2468  00D3  0084               	movf	(??_sprintf+0)+0,w
  2469  00D4  0823               	bcf	status, 7	;select IRP bank0
  2470  00D5  1383               	movwf	indf
  2471  00D6  0080               	
  2472                           l1799:	
  2473  00D7                     	movlw	low(01h)
  2474  00D7  3001               	movwf	(??_sprintf+0)+0
  2475  00D8  00A3               	movf	(??_sprintf+0)+0,w
  2476  00D9  0823               	addwf	(sprintf@sp),f
  2477  00DA  07AB               	line	554
  2478                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 554:    con
                                 tinue;
  2479                           	goto	l1845
  2480  00DB  29A8               	line	555
  2481                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 555:   }
  2482                           	
  2483                           l275:	
  2484  00DC                     	line	560
  2485                           	
  2486                           l1801:	
  2487  00DC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 560:   flag
                                  = 0;
  2488                           	clrf	(sprintf@flag)
  2489  00DC  01A7               	line	654
  2490                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 654:   swit
                                 ch(c = *f++) {
  2491                           	goto	l1805
  2492  00DD  28E3               	line	656
  2493                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 656:   case
                                  0:
  2494                           	
  2495                           l277:	
  2496  00DE                     	line	657
  2497                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 657:    got
                                 o alldone;
  2498                           	goto	l1847
  2499  00DE  29BC               	line	716
  2500                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 716:   case
                                  'd':
  2501                           	
  2502                           l279:	
  2503  00DF                     	goto	l1807
  2504  00DF  2900               	line	717
  2505                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 717:   case
                                  'i':
  2506                           	
  2507                           l280:	
  2508  00E0                     	line	718
  2509                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 718:    bre
                                 ak;
  2510                           	goto	l1807
  2511  00E0  2900               	line	821
  2512                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 821:   defa
                                 ult:
  2513                           	
  2514                           l282:	
  2515  00E1                     	line	832
  2516                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 832:    con
                                 tinue;
  2517                           	goto	l1845
  2518  00E1  29A8               	line	841
  2519                           	
  2520                           l1803:	
  2521  00E2                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 841:   }
  2522                           	goto	l1807
  2523  00E2  2900               	
  2524                           l276:	
  2525  00E3                     	
  2526                           l1805:	
  2527  00E3                     	movlw	01h
  2528  00E3  3001               	addwf	(sprintf@f),f
  2529  00E4  07A0               	movlw	-01h
  2530  00E5  30FF               	addwf	(sprintf@f),w
  2531  00E6  0720               	movwf	fsr0
  2532  00E7  0084               	fcall	stringdir
  2533  00E8  120A  158A  200A  120A  118A  	movwf	(sprintf@c)
  2534  00ED  00AC               	movwf	(??_sprintf+0)+0
  2535  00EE  00A3               	clrf	(??_sprintf+0)+0+1
  2536  00EF  01A4               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  2537                           ; Switch size 1, requested type "space"
  2538                           ; Number of cases is 1, Range of values is 0 to 0
  2539                           ; switch strategies available:
  2540                           ; Name         Instructions Cycles
  2541                           ; simple_byte            4     3 (average)
  2542                           ; direct_byte           11     8 (fixed)
  2543                           ; jumptable            260     6 (fixed)
  2544                           ;	Chosen strategy is simple_byte
  2545                           
  2546                           	movf 1+(??_sprintf+0)+0,w
  2547  00F0  0824               	opt asmopt_push
  2548                           	opt asmopt_off
  2549                           	xorlw	0^0	; case 0
  2550  00F1  3A00               	skipnz
  2551  00F2  1903               	goto	l2645
  2552  00F3  28F5               	goto	l1845
  2553  00F4  29A8               	opt asmopt_pop
  2554                           	
  2555                           l2645:	
  2556  00F5                     ; Switch size 1, requested type "space"
  2557                           ; Number of cases is 3, Range of values is 0 to 105
  2558                           ; switch strategies available:
  2559                           ; Name         Instructions Cycles
  2560                           ; simple_byte           10     6 (average)
  2561                           ; jumptable            260     6 (fixed)
  2562                           ;	Chosen strategy is simple_byte
  2563                           
  2564                           	movf 0+(??_sprintf+0)+0,w
  2565  00F5  0823               	opt asmopt_push
  2566                           	opt asmopt_off
  2567                           	xorlw	0^0	; case 0
  2568  00F6  3A00               	skipnz
  2569  00F7  1903               	goto	l1847
  2570  00F8  29BC               	xorlw	100^0	; case 100
  2571  00F9  3A64               	skipnz
  2572  00FA  1903               	goto	l1807
  2573  00FB  2900               	xorlw	105^100	; case 105
  2574  00FC  3A0D               	skipnz
  2575  00FD  1903               	goto	l1807
  2576  00FE  2900               	goto	l1845
  2577  00FF  29A8               	opt asmopt_pop
  2578                           
  2579                           	
  2580                           l281:	
  2581  0100                     	line	1278
  2582                           	
  2583                           l1807:	
  2584  0100                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1272:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1278:     val
                                  = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  2585                           	movf	(sprintf@ap),w
  2586  0100  0826               	movwf	fsr0
  2587  0101  0084               	bcf	status, 7	;select IRP bank0
  2588  0102  1383               	movf	indf,w
  2589  0103  0800               	movwf	(sprintf@val)
  2590  0104  00A9               	incf	fsr0,f
  2591  0105  0A84               	movf	indf,w
  2592  0106  0800               	movwf	(sprintf@val+1)
  2593  0107  00AA               	
  2594                           l1809:	
  2595  0108                     	movlw	low(02h)
  2596  0108  3002               	movwf	(??_sprintf+0)+0
  2597  0109  00A3               	movf	(??_sprintf+0)+0,w
  2598  010A  0823               	addwf	(sprintf@ap),f
  2599  010B  07A6               	line	1280
  2600                           	
  2601                           l1811:	
  2602  010C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1280:    if
                                 ((int)val < 0) {
  2603                           	btfss	(sprintf@val+1),7
  2604  010C  1FAA               	goto	u1961
  2605  010D  290F               	goto	u1960
  2606  010E  2910               u1961:
  2607  010F                     	goto	l1817
  2608  010F  291A               u1960:
  2609  0110                     	line	1281
  2610                           	
  2611                           l1813:	
  2612  0110                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1281:     f
                                 lag |= 0x03;
  2613                           	movlw	low(03h)
  2614  0110  3003               	movwf	(??_sprintf+0)+0
  2615  0111  00A3               	movf	(??_sprintf+0)+0,w
  2616  0112  0823               	iorwf	(sprintf@flag),f
  2617  0113  04A7               	line	1282
  2618                           	
  2619                           l1815:	
  2620  0114                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1282:     v
                                 al = -val;
  2621                           	comf	(sprintf@val),f
  2622  0114  09A9               	comf	(sprintf@val+1),f
  2623  0115  09AA               	incf	(sprintf@val),f
  2624  0116  0AA9               	skipnz
  2625  0117  1903               	incf	(sprintf@val+1),f
  2626  0118  0AAA               	goto	l1817
  2627  0119  291A               	line	1283
  2628                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1283:    }

  2629                           	
  2630                           l283:	
  2631  011A                     	line	1324
  2632                           	
  2633                           l1817:	
  2634  011A                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1285:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1324:    for(
                                 c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2635                           	clrf	(sprintf@c)
  2636  011A  01AC               	incf	(sprintf@c),f
  2637  011B  0AAC               	
  2638                           l1819:	
  2639  011C                     		movlw	5
  2640  011C  3005               	xorwf	((sprintf@c)),w
  2641  011D  062C               	btfss	status,2
  2642  011E  1D03               	goto	u1971
  2643  011F  2921               	goto	u1970
  2644  0120  2922               u1971:
  2645  0121                     	goto	l1823
  2646  0121  2924               u1970:
  2647  0122                     	goto	l1829
  2648  0122  294C               	
  2649                           l1821:	
  2650  0123                     	goto	l1829
  2651  0123  294C               	
  2652                           l284:	
  2653  0124                     	line	1325
  2654                           	
  2655                           l1823:	
  2656  0124                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1325:     i
                                 f(val < dpowers[c])
  2657                           	movf	(sprintf@c),w
  2658  0124  082C               	movwf	(??_sprintf+0)+0
  2659  0125  00A3               	addwf	(??_sprintf+0)+0,w
  2660  0126  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2661  0127  3E01               	movwf	fsr0
  2662  0128  0084               	fcall	stringdir
  2663  0129  120A  158A  200A  120A  118A  	movwf	(??_sprintf+1)+0
  2664  012E  00A4               	fcall	stringdir
  2665  012F  120A  158A  200A  120A  118A  	movwf	(??_sprintf+1)+0+1
  2666  0134  00A5               	movf	1+(??_sprintf+1)+0,w
  2667  0135  0825               	subwf	(sprintf@val+1),w
  2668  0136  022A               	skipz
  2669  0137  1D03               	goto	u1985
  2670  0138  293B               	movf	0+(??_sprintf+1)+0,w
  2671  0139  0824               	subwf	(sprintf@val),w
  2672  013A  0229               u1985:
  2673  013B                     	skipnc
  2674  013B  1803               	goto	u1981
  2675  013C  293E               	goto	u1980
  2676  013D  293F               u1981:
  2677  013E                     	goto	l1827
  2678  013E  2941               u1980:
  2679  013F                     	goto	l1829
  2680  013F  294C               	line	1326
  2681                           	
  2682                           l1825:	
  2683  0140                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1326:      
                                 break;
  2684                           	goto	l1829
  2685  0140  294C               	
  2686                           l286:	
  2687  0141                     	
  2688                           l1827:	
  2689  0141                     	movlw	low(01h)
  2690  0141  3001               	movwf	(??_sprintf+0)+0
  2691  0142  00A3               	movf	(??_sprintf+0)+0,w
  2692  0143  0823               	addwf	(sprintf@c),f
  2693  0144  07AC               		movlw	5
  2694  0145  3005               	xorwf	((sprintf@c)),w
  2695  0146  062C               	btfss	status,2
  2696  0147  1D03               	goto	u1991
  2697  0148  294A               	goto	u1990
  2698  0149  294B               u1991:
  2699  014A                     	goto	l1823
  2700  014A  2924               u1990:
  2701  014B                     	goto	l1829
  2702  014B  294C               	
  2703                           l285:	
  2704  014C                     	line	1457
  2705                           	
  2706                           l1829:	
  2707  014C                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1441:   {;C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1457:    if(f
                                 lag & 0x03)
  2708                           	movf	(sprintf@flag),w
  2709  014C  0827               	andlw	03h
  2710  014D  3903               	btfsc	status,2
  2711  014E  1903               	goto	u2001
  2712  014F  2951               	goto	u2000
  2713  0150  2952               u2001:
  2714  0151                     	goto	l1835
  2715  0151  295E               u2000:
  2716  0152                     	line	1458
  2717                           	
  2718                           l1831:	
  2719  0152                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1458:     (
                                 (*sp++ = ('-')));
  2720                           	movlw	low(02Dh)
  2721  0152  302D               	movwf	(??_sprintf+0)+0
  2722  0153  00A3               	movf	(sprintf@sp),w
  2723  0154  082B               	movwf	fsr0
  2724  0155  0084               	movf	(??_sprintf+0)+0,w
  2725  0156  0823               	bcf	status, 7	;select IRP bank0
  2726  0157  1383               	movwf	indf
  2727  0158  0080               	
  2728                           l1833:	
  2729  0159                     	movlw	low(01h)
  2730  0159  3001               	movwf	(??_sprintf+0)+0
  2731  015A  00A3               	movf	(??_sprintf+0)+0,w
  2732  015B  0823               	addwf	(sprintf@sp),f
  2733  015C  07AB               	goto	l1835
  2734  015D  295E               	
  2735                           l287:	
  2736  015E                     	line	1491
  2737                           	
  2738                           l1835:	
  2739  015E                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1488:   };C
                                 :\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1491:   prec 
                                 = c;
  2740                           	movf	(sprintf@c),w
  2741  015E  082C               	movwf	(??_sprintf+0)+0
  2742  015F  00A3               	movf	(??_sprintf+0)+0,w
  2743  0160  0823               	movwf	(sprintf@prec)
  2744  0161  00A8               	line	1493
  2745                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2746                           	goto	l1843
  2747  0162  299D               	
  2748                           l289:	
  2749  0163                     	line	1508
  2750                           	
  2751                           l1837:	
  2752  0163                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1497:    {;
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1508:     c 
                                 = (val / dpowers[prec]) % 10 + '0';
  2753                           	movlw	0Ah
  2754  0163  300A               	movwf	(___lwmod@divisor)
  2755  0164  00F8               	movlw	0
  2756  0165  3000               	movwf	((___lwmod@divisor))+1
  2757  0166  00F9               	movf	(sprintf@prec),w
  2758  0167  0828               	movwf	(??_sprintf+0)+0
  2759  0168  00A3               	addwf	(??_sprintf+0)+0,w
  2760  0169  0723               	addlw	low((((_dpowers)-__stringbase)|8000h))
  2761  016A  3E01               	movwf	fsr0
  2762  016B  0084               	fcall	stringdir
  2763  016C  120A  158A  200A  120A  118A  	movwf	(___lwdiv@divisor)
  2764  0171  00F0               	fcall	stringdir
  2765  0172  120A  158A  200A  120A  118A  	movwf	(___lwdiv@divisor+1)
  2766  0177  00F1               	movf	(sprintf@val+1),w
  2767  0178  082A               	movwf	(___lwdiv@dividend+1)
  2768  0179  00F3               	movf	(sprintf@val),w
  2769  017A  0829               	movwf	(___lwdiv@dividend)
  2770  017B  00F2               	fcall	___lwdiv
  2771  017C  120A  158A  21FD  120A  118A  	movf	(1+(?___lwdiv)),w
  2772  0181  0871               	movwf	(___lwmod@dividend+1)
  2773  0182  00FB               	movf	(0+(?___lwdiv)),w
  2774  0183  0870               	movwf	(___lwmod@dividend)
  2775  0184  00FA               	fcall	___lwmod
  2776  0185  120A  158A  2178  120A  118A  	movf	(0+(?___lwmod)),w
  2777  018A  0878               	addlw	030h
  2778  018B  3E30               	bcf	status, 5	;RP0=0, select bank0
  2779  018C  1283               	bcf	status, 6	;RP1=0, select bank0
  2780  018D  1303               	movwf	(??_sprintf+1)+0
  2781  018E  00A4               	movf	(??_sprintf+1)+0,w
  2782  018F  0824               	movwf	(sprintf@c)
  2783  0190  00AC               	line	1543
  2784                           	
  2785                           l1839:	
  2786  0191                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1542:    };
                                 C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1543:    ((*
                                 sp++ = (c)));
  2787                           	movf	(sprintf@c),w
  2788  0191  082C               	movwf	(??_sprintf+0)+0
  2789  0192  00A3               	movf	(sprintf@sp),w
  2790  0193  082B               	movwf	fsr0
  2791  0194  0084               	movf	(??_sprintf+0)+0,w
  2792  0195  0823               	bcf	status, 7	;select IRP bank0
  2793  0196  1383               	movwf	indf
  2794  0197  0080               	
  2795                           l1841:	
  2796  0198                     	movlw	low(01h)
  2797  0198  3001               	movwf	(??_sprintf+0)+0
  2798  0199  00A3               	movf	(??_sprintf+0)+0,w
  2799  019A  0823               	addwf	(sprintf@sp),f
  2800  019B  07AB               	goto	l1843
  2801  019C  299D               	line	1544
  2802                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1544:   }
  2803                           	
  2804                           l288:	
  2805  019D                     	line	1493
  2806                           	
  2807                           l1843:	
  2808  019D                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1493:   whi
                                 le(prec--) {
  2809                           	movlw	low(-1)
  2810  019D  30FF               	movwf	(??_sprintf+0)+0
  2811  019E  00A3               	movf	(??_sprintf+0)+0,w
  2812  019F  0823               	addwf	(sprintf@prec),f
  2813  01A0  07A8               		incf	(((sprintf@prec))),w
  2814  01A1  0A28               	btfss	status,2
  2815  01A2  1D03               	goto	u2011
  2816  01A3  29A5               	goto	u2010
  2817  01A4  29A6               u2011:
  2818  01A5                     	goto	l1837
  2819  01A5  2963               u2010:
  2820  01A6                     	goto	l1845
  2821  01A6  29A8               	
  2822                           l290:	
  2823  01A7                     	goto	l1845
  2824  01A7  29A8               	line	1552
  2825                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1552:  }
  2826                           	
  2827                           l273:	
  2828  01A8                     	line	548
  2829                           	
  2830                           l1845:	
  2831  01A8                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 548:  while
                                 ((c = *f++)) {
  2832                           	movlw	01h
  2833  01A8  3001               	addwf	(sprintf@f),f
  2834  01A9  07A0               	movlw	-01h
  2835  01AA  30FF               	addwf	(sprintf@f),w
  2836  01AB  0720               	movwf	fsr0
  2837  01AC  0084               	fcall	stringdir
  2838  01AD  120A  158A  200A  120A  118A  	movwf	(??_sprintf+0)+0
  2839  01B2  00A3               	movf	(??_sprintf+0)+0,w
  2840  01B3  0823               	movwf	(sprintf@c)
  2841  01B4  00AC               	movf	(((sprintf@c))),w
  2842  01B5  082C               	btfss	status,2
  2843  01B6  1D03               	goto	u2021
  2844  01B7  29B9               	goto	u2020
  2845  01B8  29BA               u2021:
  2846  01B9                     	goto	l1795
  2847  01B9  28CA               u2020:
  2848  01BA                     	goto	l1847
  2849  01BA  29BC               	
  2850                           l291:	
  2851  01BB                     	goto	l1847
  2852  01BB  29BC               	line	1554
  2853                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1554: alldo
                                 ne:
  2854                           	
  2855                           l278:	
  2856  01BC                     	line	1557
  2857                           	
  2858                           l1847:	
  2859  01BC                     ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1557:  *sp 
                                 = 0;
  2860                           	movf	(sprintf@sp),w
  2861  01BC  082B               	movwf	fsr0
  2862  01BD  0084               	bcf	status, 7	;select IRP bank0
  2863  01BE  1383               	clrf	indf
  2864  01BF  0180               	goto	l292
  2865  01C0  29C1               	line	1559
  2866                           	
  2867                           l1849:	
  2868  01C1                     	line	1560
  2869                           ;C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\doprnt.c: 1559:  retu
                                 rn 0;;	Return value of _sprintf is never used
  2870                           	
  2871                           l292:	
  2872  01C1                     	return
  2873  01C1  0008               	opt stack 0
  2874                           GLOBAL	__end_of_sprintf
  2875                           	__end_of_sprintf:
  2876  01C2                     	signat	_sprintf,4698
  2877                           	global	___lwmod
  2878                           
  2879 ;; *************** function ___lwmod *****************
  2880 ;; Defined at:
  2881 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  divisor         2    8[COMMON] unsigned int 
  2884 ;;  dividend        2   10[COMMON] unsigned int 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;  counter         1   13[COMMON] unsigned char 
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  2    8[COMMON] unsigned int 
  2889 ;; Registers used:
  2890 ;;		wreg, status,2, status,0
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2896 ;;      Params:         4       0       0       0       0
  2897 ;;      Locals:         1       0       0       0       0
  2898 ;;      Temps:          1       0       0       0       0
  2899 ;;      Totals:         6       0       0       0       0
  2900 ;;Total ram usage:        6 bytes
  2901 ;; Hardware stack levels used:    1
  2902 ;; This function calls:
  2903 ;;		Nothing
  2904 ;; This function is called by:
  2905 ;;		_sprintf
  2906 ;; This function uses a non-reentrant model
  2907 ;;
  2908                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  2909                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2910                           	line	5
  2911                           global __ptext4
  2912                           __ptext4:	;psect for function ___lwmod
  2913  0978                     psect	text4
  2914                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
  2915                           	line	5
  2916                           	global	__size_of___lwmod
  2917                           	__size_of___lwmod	equ	__end_of___lwmod-___lwmod
  2918  0041                     	
  2919                           ___lwmod:	
  2920  0978                     ;incstack = 0
  2921                           	opt	stack 5
  2922                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2923                           	line	12
  2924                           	
  2925                           l1755:	
  2926  0978                     	movf	((___lwmod@divisor)),w
  2927  0978  0878               iorwf	((___lwmod@divisor+1)),w
  2928  0979  0479               	btfsc	status,2
  2929  097A  1903               	goto	u1861
  2930  097B  297D               	goto	u1860
  2931  097C  297E               u1861:
  2932  097D                     	goto	l1773
  2933  097D  29B3               u1860:
  2934  097E                     	line	13
  2935                           	
  2936                           l1757:	
  2937  097E                     	clrf	(___lwmod@counter)
  2938  097E  01FD               	incf	(___lwmod@counter),f
  2939  097F  0AFD               	line	14
  2940                           	goto	l1763
  2941  0980  298D               	
  2942                           l573:	
  2943  0981                     	line	15
  2944                           	
  2945                           l1759:	
  2946  0981                     	movlw	01h
  2947  0981  3001               	
  2948                           u1875:
  2949  0982                     	clrc
  2950  0982  1003               	rlf	(___lwmod@divisor),f
  2951  0983  0DF8               	rlf	(___lwmod@divisor+1),f
  2952  0984  0DF9               	addlw	-1
  2953  0985  3EFF               	skipz
  2954  0986  1D03               	goto	u1875
  2955  0987  2982               	line	16
  2956                           	
  2957                           l1761:	
  2958  0988                     	movlw	low(01h)
  2959  0988  3001               	movwf	(??___lwmod+0)+0
  2960  0989  00FC               	movf	(??___lwmod+0)+0,w
  2961  098A  087C               	addwf	(___lwmod@counter),f
  2962  098B  07FD               	goto	l1763
  2963  098C  298D               	line	17
  2964                           	
  2965                           l572:	
  2966  098D                     	line	14
  2967                           	
  2968                           l1763:	
  2969  098D                     	btfss	(___lwmod@divisor+1),(15)&7
  2970  098D  1FF9               	goto	u1881
  2971  098E  2990               	goto	u1880
  2972  098F  2991               u1881:
  2973  0990                     	goto	l1759
  2974  0990  2981               u1880:
  2975  0991                     	goto	l1765
  2976  0991  2993               	
  2977                           l574:	
  2978  0992                     	goto	l1765
  2979  0992  2993               	line	18
  2980                           	
  2981                           l575:	
  2982  0993                     	line	19
  2983                           	
  2984                           l1765:	
  2985  0993                     	movf	(___lwmod@divisor+1),w
  2986  0993  0879               	subwf	(___lwmod@dividend+1),w
  2987  0994  027B               	skipz
  2988  0995  1D03               	goto	u1895
  2989  0996  2999               	movf	(___lwmod@divisor),w
  2990  0997  0878               	subwf	(___lwmod@dividend),w
  2991  0998  027A               u1895:
  2992  0999                     	skipc
  2993  0999  1C03               	goto	u1891
  2994  099A  299C               	goto	u1890
  2995  099B  299D               u1891:
  2996  099C                     	goto	l1769
  2997  099C  29A4               u1890:
  2998  099D                     	line	20
  2999                           	
  3000                           l1767:	
  3001  099D                     	movf	(___lwmod@divisor),w
  3002  099D  0878               	subwf	(___lwmod@dividend),f
  3003  099E  02FA               	movf	(___lwmod@divisor+1),w
  3004  099F  0879               	skipc
  3005  09A0  1C03               	decf	(___lwmod@dividend+1),f
  3006  09A1  03FB               	subwf	(___lwmod@dividend+1),f
  3007  09A2  02FB               	goto	l1769
  3008  09A3  29A4               	
  3009                           l576:	
  3010  09A4                     	line	21
  3011                           	
  3012                           l1769:	
  3013  09A4                     	movlw	01h
  3014  09A4  3001               	
  3015                           u1905:
  3016  09A5                     	clrc
  3017  09A5  1003               	rrf	(___lwmod@divisor+1),f
  3018  09A6  0CF9               	rrf	(___lwmod@divisor),f
  3019  09A7  0CF8               	addlw	-1
  3020  09A8  3EFF               	skipz
  3021  09A9  1D03               	goto	u1905
  3022  09AA  29A5               	line	22
  3023                           	
  3024                           l1771:	
  3025  09AB                     	movlw	01h
  3026  09AB  3001               	subwf	(___lwmod@counter),f
  3027  09AC  02FD               	btfss	status,2
  3028  09AD  1D03               	goto	u1911
  3029  09AE  29B0               	goto	u1910
  3030  09AF  29B1               u1911:
  3031  09B0                     	goto	l1765
  3032  09B0  2993               u1910:
  3033  09B1                     	goto	l1773
  3034  09B1  29B3               	
  3035                           l577:	
  3036  09B2                     	goto	l1773
  3037  09B2  29B3               	line	23
  3038                           	
  3039                           l571:	
  3040  09B3                     	line	24
  3041                           	
  3042                           l1773:	
  3043  09B3                     	movf	(___lwmod@dividend+1),w
  3044  09B3  087B               	movwf	(?___lwmod+1)
  3045  09B4  00F9               	movf	(___lwmod@dividend),w
  3046  09B5  087A               	movwf	(?___lwmod)
  3047  09B6  00F8               	goto	l578
  3048  09B7  29B8               	
  3049                           l1775:	
  3050  09B8                     	line	25
  3051                           	
  3052                           l578:	
  3053  09B8                     	return
  3054  09B8  0008               	opt stack 0
  3055                           GLOBAL	__end_of___lwmod
  3056                           	__end_of___lwmod:
  3057  09B9                     	signat	___lwmod,8314
  3058                           	global	___lwdiv
  3059                           
  3060 ;; *************** function ___lwdiv *****************
  3061 ;; Defined at:
  3062 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;  divisor         2    0[COMMON] unsigned int 
  3065 ;;  dividend        2    2[COMMON] unsigned int 
  3066 ;; Auto vars:     Size  Location     Type
  3067 ;;  quotient        2    5[COMMON] unsigned int 
  3068 ;;  counter         1    7[COMMON] unsigned char 
  3069 ;; Return value:  Size  Location     Type
  3070 ;;                  2    0[COMMON] unsigned int 
  3071 ;; Registers used:
  3072 ;;		wreg, status,2, status,0
  3073 ;; Tracked objects:
  3074 ;;		On entry : 0/0
  3075 ;;		On exit  : 0/0
  3076 ;;		Unchanged: 0/0
  3077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3078 ;;      Params:         4       0       0       0       0
  3079 ;;      Locals:         3       0       0       0       0
  3080 ;;      Temps:          1       0       0       0       0
  3081 ;;      Totals:         8       0       0       0       0
  3082 ;;Total ram usage:        8 bytes
  3083 ;; Hardware stack levels used:    1
  3084 ;; This function calls:
  3085 ;;		Nothing
  3086 ;; This function is called by:
  3087 ;;		_sprintf
  3088 ;; This function uses a non-reentrant model
  3089 ;;
  3090                           psect	text5,local,class=CODE,delta=2,merge=1,group=1
  3091                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3092                           	line	5
  3093                           global __ptext5
  3094                           __ptext5:	;psect for function ___lwdiv
  3095  09FD                     psect	text5
  3096                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
  3097                           	line	5
  3098                           	global	__size_of___lwdiv
  3099                           	__size_of___lwdiv	equ	__end_of___lwdiv-___lwdiv
  3100  004B                     	
  3101                           ___lwdiv:	
  3102  09FD                     ;incstack = 0
  3103                           	opt	stack 5
  3104                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  3105                           	line	13
  3106                           	
  3107                           l1729:	
  3108  09FD                     	clrf	(___lwdiv@quotient)
  3109  09FD  01F5               	clrf	(___lwdiv@quotient+1)
  3110  09FE  01F6               	line	14
  3111                           	
  3112                           l1731:	
  3113  09FF                     	movf	((___lwdiv@divisor)),w
  3114  09FF  0870               iorwf	((___lwdiv@divisor+1)),w
  3115  0A00  0471               	btfsc	status,2
  3116  0A01  1903               	goto	u1791
  3117  0A02  2A04               	goto	u1790
  3118  0A03  2A05               u1791:
  3119  0A04                     	goto	l1751
  3120  0A04  2A42               u1790:
  3121  0A05                     	line	15
  3122                           	
  3123                           l1733:	
  3124  0A05                     	clrf	(___lwdiv@counter)
  3125  0A05  01F7               	incf	(___lwdiv@counter),f
  3126  0A06  0AF7               	line	16
  3127                           	goto	l1739
  3128  0A07  2A14               	
  3129                           l563:	
  3130  0A08                     	line	17
  3131                           	
  3132                           l1735:	
  3133  0A08                     	movlw	01h
  3134  0A08  3001               	
  3135                           u1805:
  3136  0A09                     	clrc
  3137  0A09  1003               	rlf	(___lwdiv@divisor),f
  3138  0A0A  0DF0               	rlf	(___lwdiv@divisor+1),f
  3139  0A0B  0DF1               	addlw	-1
  3140  0A0C  3EFF               	skipz
  3141  0A0D  1D03               	goto	u1805
  3142  0A0E  2A09               	line	18
  3143                           	
  3144                           l1737:	
  3145  0A0F                     	movlw	low(01h)
  3146  0A0F  3001               	movwf	(??___lwdiv+0)+0
  3147  0A10  00F4               	movf	(??___lwdiv+0)+0,w
  3148  0A11  0874               	addwf	(___lwdiv@counter),f
  3149  0A12  07F7               	goto	l1739
  3150  0A13  2A14               	line	19
  3151                           	
  3152                           l562:	
  3153  0A14                     	line	16
  3154                           	
  3155                           l1739:	
  3156  0A14                     	btfss	(___lwdiv@divisor+1),(15)&7
  3157  0A14  1FF1               	goto	u1811
  3158  0A15  2A17               	goto	u1810
  3159  0A16  2A18               u1811:
  3160  0A17                     	goto	l1735
  3161  0A17  2A08               u1810:
  3162  0A18                     	goto	l1741
  3163  0A18  2A1A               	
  3164                           l564:	
  3165  0A19                     	goto	l1741
  3166  0A19  2A1A               	line	20
  3167                           	
  3168                           l565:	
  3169  0A1A                     	line	21
  3170                           	
  3171                           l1741:	
  3172  0A1A                     	movlw	01h
  3173  0A1A  3001               	
  3174                           u1825:
  3175  0A1B                     	clrc
  3176  0A1B  1003               	rlf	(___lwdiv@quotient),f
  3177  0A1C  0DF5               	rlf	(___lwdiv@quotient+1),f
  3178  0A1D  0DF6               	addlw	-1
  3179  0A1E  3EFF               	skipz
  3180  0A1F  1D03               	goto	u1825
  3181  0A20  2A1B               	line	22
  3182                           	movf	(___lwdiv@divisor+1),w
  3183  0A21  0871               	subwf	(___lwdiv@dividend+1),w
  3184  0A22  0273               	skipz
  3185  0A23  1D03               	goto	u1835
  3186  0A24  2A27               	movf	(___lwdiv@divisor),w
  3187  0A25  0870               	subwf	(___lwdiv@dividend),w
  3188  0A26  0272               u1835:
  3189  0A27                     	skipc
  3190  0A27  1C03               	goto	u1831
  3191  0A28  2A2A               	goto	u1830
  3192  0A29  2A2B               u1831:
  3193  0A2A                     	goto	l1747
  3194  0A2A  2A33               u1830:
  3195  0A2B                     	line	23
  3196                           	
  3197                           l1743:	
  3198  0A2B                     	movf	(___lwdiv@divisor),w
  3199  0A2B  0870               	subwf	(___lwdiv@dividend),f
  3200  0A2C  02F2               	movf	(___lwdiv@divisor+1),w
  3201  0A2D  0871               	skipc
  3202  0A2E  1C03               	decf	(___lwdiv@dividend+1),f
  3203  0A2F  03F3               	subwf	(___lwdiv@dividend+1),f
  3204  0A30  02F3               	line	24
  3205                           	
  3206                           l1745:	
  3207  0A31                     	bsf	(___lwdiv@quotient)+(0/8),(0)&7
  3208  0A31  1475               	goto	l1747
  3209  0A32  2A33               	line	25
  3210                           	
  3211                           l566:	
  3212  0A33                     	line	26
  3213                           	
  3214                           l1747:	
  3215  0A33                     	movlw	01h
  3216  0A33  3001               	
  3217                           u1845:
  3218  0A34                     	clrc
  3219  0A34  1003               	rrf	(___lwdiv@divisor+1),f
  3220  0A35  0CF1               	rrf	(___lwdiv@divisor),f
  3221  0A36  0CF0               	addlw	-1
  3222  0A37  3EFF               	skipz
  3223  0A38  1D03               	goto	u1845
  3224  0A39  2A34               	line	27
  3225                           	
  3226                           l1749:	
  3227  0A3A                     	movlw	01h
  3228  0A3A  3001               	subwf	(___lwdiv@counter),f
  3229  0A3B  02F7               	btfss	status,2
  3230  0A3C  1D03               	goto	u1851
  3231  0A3D  2A3F               	goto	u1850
  3232  0A3E  2A40               u1851:
  3233  0A3F                     	goto	l1741
  3234  0A3F  2A1A               u1850:
  3235  0A40                     	goto	l1751
  3236  0A40  2A42               	
  3237                           l567:	
  3238  0A41                     	goto	l1751
  3239  0A41  2A42               	line	28
  3240                           	
  3241                           l561:	
  3242  0A42                     	line	29
  3243                           	
  3244                           l1751:	
  3245  0A42                     	movf	(___lwdiv@quotient+1),w
  3246  0A42  0876               	movwf	(?___lwdiv+1)
  3247  0A43  00F1               	movf	(___lwdiv@quotient),w
  3248  0A44  0875               	movwf	(?___lwdiv)
  3249  0A45  00F0               	goto	l568
  3250  0A46  2A47               	
  3251                           l1753:	
  3252  0A47                     	line	30
  3253                           	
  3254                           l568:	
  3255  0A47                     	return
  3256  0A47  0008               	opt stack 0
  3257                           GLOBAL	__end_of___lwdiv
  3258                           	__end_of___lwdiv:
  3259  0A48                     	signat	___lwdiv,8314
  3260                           	global	_setup
  3261                           
  3262 ;; *************** function _setup *****************
  3263 ;; Defined at:
  3264 ;;		line 115 in file "mainM.c"
  3265 ;; Parameters:    Size  Location     Type
  3266 ;;		None
  3267 ;; Auto vars:     Size  Location     Type
  3268 ;;		None
  3269 ;; Return value:  Size  Location     Type
  3270 ;;                  1    wreg      void 
  3271 ;; Registers used:
  3272 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3273 ;; Tracked objects:
  3274 ;;		On entry : 0/0
  3275 ;;		On exit  : 0/0
  3276 ;;		Unchanged: 0/0
  3277 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3278 ;;      Params:         0       0       0       0       0
  3279 ;;      Locals:         0       0       0       0       0
  3280 ;;      Temps:          0       1       0       0       0
  3281 ;;      Totals:         0       1       0       0       0
  3282 ;;Total ram usage:        1 bytes
  3283 ;; Hardware stack levels used:    1
  3284 ;; Hardware stack levels required when called:    2
  3285 ;; This function calls:
  3286 ;;		_I2C_Master_Init
  3287 ;;		_clcLCD
  3288 ;;		_initLCD
  3289 ;;		_setCursorLCD
  3290 ;;		_writeStrLCD
  3291 ;; This function is called by:
  3292 ;;		_main
  3293 ;; This function uses a non-reentrant model
  3294 ;;
  3295                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  3296                           	file	"mainM.c"
  3297                           	line	115
  3298                           global __ptext6
  3299                           __ptext6:	;psect for function _setup
  3300  0A48                     psect	text6
  3301                           	file	"mainM.c"
  3302                           	line	115
  3303                           	global	__size_of_setup
  3304                           	__size_of_setup	equ	__end_of_setup-_setup
  3305  005F                     	
  3306                           _setup:	
  3307  0A48                     ;incstack = 0
  3308                           	opt	stack 5
  3309                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3310                           	line	117
  3311                           	
  3312                           l1987:	
  3313  0A48                     ;mainM.c: 117:     ANSEL = 0;
  3314                           	bsf	status, 5	;RP0=1, select bank3
  3315  0A48  1683               	bsf	status, 6	;RP1=1, select bank3
  3316  0A49  1703               	clrf	(392)^0180h	;volatile
  3317  0A4A  0188               	line	118
  3318                           ;mainM.c: 118:     ANSELH = 0;
  3319                           	clrf	(393)^0180h	;volatile
  3320  0A4B  0189               	line	119
  3321                           ;mainM.c: 119:     TRISB = 0;
  3322                           	bsf	status, 5	;RP0=1, select bank1
  3323  0A4C  1683               	bcf	status, 6	;RP1=0, select bank1
  3324  0A4D  1303               	clrf	(134)^080h	;volatile
  3325  0A4E  0186               	line	120
  3326                           ;mainM.c: 120:     TRISD = 0;
  3327                           	clrf	(136)^080h	;volatile
  3328  0A4F  0188               	line	121
  3329                           ;mainM.c: 121:     PORTB = 0;
  3330                           	bcf	status, 5	;RP0=0, select bank0
  3331  0A50  1283               	bcf	status, 6	;RP1=0, select bank0
  3332  0A51  1303               	clrf	(6)	;volatile
  3333  0A52  0186               	line	122
  3334                           ;mainM.c: 122:     PORTD = 0;
  3335                           	clrf	(8)	;volatile
  3336  0A53  0188               	line	123
  3337                           	
  3338                           l1989:	
  3339  0A54                     ;mainM.c: 123:     I2C_Master_Init(100000);
  3340                           	movlw	0
  3341  0A54  3000               	movwf	(I2C_Master_Init@c+3)
  3342  0A55  00A3               	movlw	01h
  3343  0A56  3001               	movwf	(I2C_Master_Init@c+2)
  3344  0A57  00A2               	movlw	086h
  3345  0A58  3086               	movwf	(I2C_Master_Init@c+1)
  3346  0A59  00A1               	movlw	0A0h
  3347  0A5A  30A0               	movwf	(I2C_Master_Init@c)
  3348  0A5B  00A0               
  3349                           	fcall	_I2C_Master_Init
  3350  0A5C  120A  158A  2106  120A  158A  	line	125
  3351                           	
  3352                           l1991:	
  3353  0A61                     ;mainM.c: 125:     initLCD();
  3354                           	fcall	_initLCD
  3355  0A61  120A  158A  213E  120A  158A  	line	126
  3356                           	
  3357                           l1993:	
  3358  0A66                     ;mainM.c: 126:     clcLCD();
  3359                           	fcall	_clcLCD
  3360  0A66  120A  118A  2003  120A  158A  	line	129
  3361                           	
  3362                           l1995:	
  3363  0A6B                     ;mainM.c: 129:     setCursorLCD(1, 1);
  3364                           	clrf	(setCursorLCD@x)
  3365  0A6B  01F3               	incf	(setCursorLCD@x),f
  3366  0A6C  0AF3               	movlw	low(01h)
  3367  0A6D  3001               	fcall	_setCursorLCD
  3368  0A6E  120A  158A  2090  120A  158A  	line	130
  3369                           	
  3370                           l1997:	
  3371  0A73                     ;mainM.c: 130:     writeStrLCD("S1");
  3372                           	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3373  0A73  300E               	movwf	(writeStrLCD@string)
  3374  0A74  00F2               	movlw	80h
  3375  0A75  3080               	movwf	(writeStrLCD@string+1)
  3376  0A76  00F3               	fcall	_writeStrLCD
  3377  0A77  120A  158A  21B9  120A  158A  	line	131
  3378                           	
  3379                           l1999:	
  3380  0A7C                     ;mainM.c: 131:     setCursorLCD(1, 7);
  3381                           	movlw	low(07h)
  3382  0A7C  3007               	bcf	status, 5	;RP0=0, select bank0
  3383  0A7D  1283               	bcf	status, 6	;RP1=0, select bank0
  3384  0A7E  1303               	movwf	(??_setup+0)+0
  3385  0A7F  00A8               	movf	(??_setup+0)+0,w
  3386  0A80  0828               	movwf	(setCursorLCD@x)
  3387  0A81  00F3               	movlw	low(01h)
  3388  0A82  3001               	fcall	_setCursorLCD
  3389  0A83  120A  158A  2090  120A  158A  	line	132
  3390                           	
  3391                           l2001:	
  3392  0A88                     ;mainM.c: 132:     writeStrLCD("S2");
  3393                           	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3394  0A88  3011               	movwf	(writeStrLCD@string)
  3395  0A89  00F2               	movlw	80h
  3396  0A8A  3080               	movwf	(writeStrLCD@string+1)
  3397  0A8B  00F3               	fcall	_writeStrLCD
  3398  0A8C  120A  158A  21B9  120A  158A  	line	133
  3399                           	
  3400                           l2003:	
  3401  0A91                     ;mainM.c: 133:     setCursorLCD(1, 13);
  3402                           	movlw	low(0Dh)
  3403  0A91  300D               	bcf	status, 5	;RP0=0, select bank0
  3404  0A92  1283               	bcf	status, 6	;RP1=0, select bank0
  3405  0A93  1303               	movwf	(??_setup+0)+0
  3406  0A94  00A8               	movf	(??_setup+0)+0,w
  3407  0A95  0828               	movwf	(setCursorLCD@x)
  3408  0A96  00F3               	movlw	low(01h)
  3409  0A97  3001               	fcall	_setCursorLCD
  3410  0A98  120A  158A  2090  120A  158A  	line	134
  3411                           	
  3412                           l2005:	
  3413  0A9D                     ;mainM.c: 134:     writeStrLCD("S3");
  3414                           	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3415  0A9D  3014               	movwf	(writeStrLCD@string)
  3416  0A9E  00F2               	movlw	80h
  3417  0A9F  3080               	movwf	(writeStrLCD@string+1)
  3418  0AA0  00F3               	fcall	_writeStrLCD
  3419  0AA1  120A  158A  21B9  120A  158A  	line	135
  3420                           	
  3421                           l182:	
  3422  0AA6                     	return
  3423  0AA6  0008               	opt stack 0
  3424                           GLOBAL	__end_of_setup
  3425                           	__end_of_setup:
  3426  0AA7                     	signat	_setup,89
  3427                           	global	_writeStrLCD
  3428                           
  3429 ;; *************** function _writeStrLCD *****************
  3430 ;; Defined at:
  3431 ;;		line 21 in file "LCD.c"
  3432 ;; Parameters:    Size  Location     Type
  3433 ;;  string          2    2[COMMON] PTR unsigned char 
  3434 ;;		 -> STR_5(3), STR_4(3), STR_3(3), STR_2(3), 
  3435 ;;		 -> writeIntLCD@buffer(4), 
  3436 ;; Auto vars:     Size  Location     Type
  3437 ;;  cont            2    7[COMMON] int 
  3438 ;; Return value:  Size  Location     Type
  3439 ;;                  1    wreg      void 
  3440 ;; Registers used:
  3441 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3442 ;; Tracked objects:
  3443 ;;		On entry : 0/0
  3444 ;;		On exit  : 0/0
  3445 ;;		Unchanged: 0/0
  3446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3447 ;;      Params:         2       0       0       0       0
  3448 ;;      Locals:         2       0       0       0       0
  3449 ;;      Temps:          3       0       0       0       0
  3450 ;;      Totals:         7       0       0       0       0
  3451 ;;Total ram usage:        7 bytes
  3452 ;; Hardware stack levels used:    1
  3453 ;; Hardware stack levels required when called:    1
  3454 ;; This function calls:
  3455 ;;		_writeCharLCD
  3456 ;; This function is called by:
  3457 ;;		_writeIntLCD
  3458 ;;		_main
  3459 ;;		_setup
  3460 ;; This function uses a non-reentrant model
  3461 ;;
  3462                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  3463                           	file	"LCD.c"
  3464                           	line	21
  3465                           global __ptext7
  3466                           __ptext7:	;psect for function _writeStrLCD
  3467  09B9                     psect	text7
  3468                           	file	"LCD.c"
  3469                           	line	21
  3470                           	global	__size_of_writeStrLCD
  3471                           	__size_of_writeStrLCD	equ	__end_of_writeStrLCD-_writeStrLCD
  3472  0044                     	
  3473                           _writeStrLCD:	
  3474  09B9                     ;incstack = 0
  3475                           	opt	stack 6
  3476                           ; Regs used in _writeStrLCD: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3477                           	line	23
  3478                           	
  3479                           l1785:	
  3480  09B9                     ;LCD.c: 22:  int cont;;LCD.c: 23:  for(cont=0;string[cont]!='\0';cont++){
  3481                           	clrf	(writeStrLCD@cont)
  3482  09B9  01F7               	clrf	(writeStrLCD@cont+1)
  3483  09BA  01F8               	goto	l1791
  3484  09BB  29DF               	
  3485                           l83:	
  3486  09BC                     	line	24
  3487                           	
  3488                           l1787:	
  3489  09BC                     ;LCD.c: 24:         writeCharLCD(string[cont]);
  3490                           	movf	(writeStrLCD@cont),w
  3491  09BC  0877               	addwf	(writeStrLCD@string),w
  3492  09BD  0772               	movwf	(??_writeStrLCD+1)+0
  3493  09BE  00F5               	movf	(writeStrLCD@string+1),w
  3494  09BF  0873               	movwf	(??_writeStrLCD+0)+0
  3495  09C0  00F4               	skipnc
  3496  09C1  1803               	incf	(??_writeStrLCD+0)+0,f
  3497  09C2  0AF4               	btfss	(writeStrLCD@cont),7
  3498  09C3  1FF7               	goto	u1920
  3499  09C4  29C6               	decf	(??_writeStrLCD+0)+0,f
  3500  09C5  03F4               u1920:
  3501  09C6                     	movf	(??_writeStrLCD+0)+0,w
  3502  09C6  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3503  09C7  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3504  09C8  0876               	bcf	status, 5	;RP0=0, select bank0
  3505  09C9  1283               	bcf	status, 6	;RP1=0, select bank0
  3506  09CA  1303               	movwf	btemp+1
  3507  09CB  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3508  09CC  0875               	movwf	fsr0
  3509  09CD  0084               	fcall	stringtab
  3510  09CE  120A  158A  2000  120A  158A  	fcall	_writeCharLCD
  3511  09D3  120A  158A  206D  120A  158A  	line	25
  3512                           	
  3513                           l1789:	
  3514  09D8                     ;LCD.c: 25:     }
  3515                           	movlw	01h
  3516  09D8  3001               	addwf	(writeStrLCD@cont),f
  3517  09D9  07F7               	skipnc
  3518  09DA  1803               	incf	(writeStrLCD@cont+1),f
  3519  09DB  0AF8               	movlw	0
  3520  09DC  3000               	addwf	(writeStrLCD@cont+1),f
  3521  09DD  07F8               	goto	l1791
  3522  09DE  29DF               	
  3523                           l82:	
  3524  09DF                     	
  3525                           l1791:	
  3526  09DF                     	movf	(writeStrLCD@cont),w
  3527  09DF  0877               	addwf	(writeStrLCD@string),w
  3528  09E0  0772               	movwf	(??_writeStrLCD+1)+0
  3529  09E1  00F5               	movf	(writeStrLCD@string+1),w
  3530  09E2  0873               	movwf	(??_writeStrLCD+0)+0
  3531  09E3  00F4               	skipnc
  3532  09E4  1803               	incf	(??_writeStrLCD+0)+0,f
  3533  09E5  0AF4               	btfss	(writeStrLCD@cont),7
  3534  09E6  1FF7               	goto	u1930
  3535  09E7  29E9               	decf	(??_writeStrLCD+0)+0,f
  3536  09E8  03F4               u1930:
  3537  09E9                     	movf	(??_writeStrLCD+0)+0,w
  3538  09E9  0874               	movwf	0+((??_writeStrLCD+1)+0)+1
  3539  09EA  00F6               	movf	1+(??_writeStrLCD+1)+0,w
  3540  09EB  0876               	bcf	status, 5	;RP0=0, select bank0
  3541  09EC  1283               	bcf	status, 6	;RP1=0, select bank0
  3542  09ED  1303               	movwf	btemp+1
  3543  09EE  00FF               	movf	0+(??_writeStrLCD+1)+0,w
  3544  09EF  0875               	movwf	fsr0
  3545  09F0  0084               	fcall	stringtab
  3546  09F1  120A  158A  2000  120A  158A  	xorlw	0
  3547  09F6  3A00               	skipz
  3548  09F7  1D03               	goto	u1941
  3549  09F8  29FA               	goto	u1940
  3550  09F9  29FB               u1941:
  3551  09FA                     	goto	l1787
  3552  09FA  29BC               u1940:
  3553  09FB                     	goto	l85
  3554  09FB  29FC               	
  3555                           l84:	
  3556  09FC                     	line	26
  3557                           	
  3558                           l85:	
  3559  09FC                     	return
  3560  09FC  0008               	opt stack 0
  3561                           GLOBAL	__end_of_writeStrLCD
  3562                           	__end_of_writeStrLCD:
  3563  09FD                     	signat	_writeStrLCD,4217
  3564                           	global	_writeCharLCD
  3565                           
  3566 ;; *************** function _writeCharLCD *****************
  3567 ;; Defined at:
  3568 ;;		line 28 in file "LCD.c"
  3569 ;; Parameters:    Size  Location     Type
  3570 ;;  character       1    wreg     unsigned char 
  3571 ;; Auto vars:     Size  Location     Type
  3572 ;;  character       1    1[COMMON] unsigned char 
  3573 ;; Return value:  Size  Location     Type
  3574 ;;                  1    wreg      void 
  3575 ;; Registers used:
  3576 ;;		wreg
  3577 ;; Tracked objects:
  3578 ;;		On entry : 0/0
  3579 ;;		On exit  : 0/0
  3580 ;;		Unchanged: 0/0
  3581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3582 ;;      Params:         0       0       0       0       0
  3583 ;;      Locals:         1       0       0       0       0
  3584 ;;      Temps:          1       0       0       0       0
  3585 ;;      Totals:         2       0       0       0       0
  3586 ;;Total ram usage:        2 bytes
  3587 ;; Hardware stack levels used:    1
  3588 ;; This function calls:
  3589 ;;		Nothing
  3590 ;; This function is called by:
  3591 ;;		_writeStrLCD
  3592 ;;		_writeFloat
  3593 ;;		_main
  3594 ;; This function uses a non-reentrant model
  3595 ;;
  3596                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  3597                           	line	28
  3598                           global __ptext8
  3599                           __ptext8:	;psect for function _writeCharLCD
  3600  086D                     psect	text8
  3601                           	file	"LCD.c"
  3602                           	line	28
  3603                           	global	__size_of_writeCharLCD
  3604                           	__size_of_writeCharLCD	equ	__end_of_writeCharLCD-_writeCharLCD
  3605  000F                     	
  3606                           _writeCharLCD:	
  3607  086D                     ;incstack = 0
  3608                           	opt	stack 6
  3609                           ; Regs used in _writeCharLCD: [wreg]
  3610                           ;writeCharLCD@character stored from wreg
  3611                           	movwf	(writeCharLCD@character)
  3612  086D  00F1               	line	29
  3613                           	
  3614                           l1721:	
  3615  086E                     ;LCD.c: 29:    RD0 = 1;
  3616                           	bcf	status, 5	;RP0=0, select bank0
  3617  086E  1283               	bcf	status, 6	;RP1=0, select bank0
  3618  086F  1303               	bsf	(64/8),(64)&7	;volatile
  3619  0870  1408               	line	30
  3620                           	
  3621                           l1723:	
  3622  0871                     ;LCD.c: 30:    PORTB = character;
  3623                           	movf	(writeCharLCD@character),w
  3624  0871  0871               	movwf	(6)	;volatile
  3625  0872  0086               	line	31
  3626                           	
  3627                           l1725:	
  3628  0873                     ;LCD.c: 31:    RD1 = 1;
  3629                           	bsf	(65/8),(65)&7	;volatile
  3630  0873  1488               	line	32
  3631                           ;LCD.c: 32:    _delay((unsigned long)((40)*(4000000/4000000.0)));
  3632                           	opt asmopt_push
  3633                           opt asmopt_off
  3634                           	movlw	13
  3635  0874  300D               movwf	((??_writeCharLCD+0)+0),f
  3636  0875  00F0               	u3597:
  3637  0876                     decfsz	(??_writeCharLCD+0)+0,f
  3638  0876  0BF0               	goto	u3597
  3639  0877  2876               opt asmopt_pop
  3640                           
  3641                           	line	33
  3642                           	
  3643                           l1727:	
  3644  0878                     ;LCD.c: 33:    RD1 = 0;
  3645                           	bcf	status, 5	;RP0=0, select bank0
  3646  0878  1283               	bcf	status, 6	;RP1=0, select bank0
  3647  0879  1303               	bcf	(65/8),(65)&7	;volatile
  3648  087A  1088               	line	34
  3649                           	
  3650                           l88:	
  3651  087B                     	return
  3652  087B  0008               	opt stack 0
  3653                           GLOBAL	__end_of_writeCharLCD
  3654                           	__end_of_writeCharLCD:
  3655  087C                     	signat	_writeCharLCD,4217
  3656                           	global	_setCursorLCD
  3657                           
  3658 ;; *************** function _setCursorLCD *****************
  3659 ;; Defined at:
  3660 ;;		line 8 in file "LCD.c"
  3661 ;; Parameters:    Size  Location     Type
  3662 ;;  y               1    wreg     unsigned char 
  3663 ;;  x               1    3[COMMON] unsigned char 
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;  y               1    5[COMMON] unsigned char 
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0, pclath, cstack
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3675 ;;      Params:         1       0       0       0       0
  3676 ;;      Locals:         1       0       0       0       0
  3677 ;;      Temps:          1       0       0       0       0
  3678 ;;      Totals:         3       0       0       0       0
  3679 ;;Total ram usage:        3 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; Hardware stack levels required when called:    1
  3682 ;; This function calls:
  3683 ;;		_cmdLCD
  3684 ;; This function is called by:
  3685 ;;		_writeFloat
  3686 ;;		_main
  3687 ;;		_setup
  3688 ;; This function uses a non-reentrant model
  3689 ;;
  3690                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  3691                           	line	8
  3692                           global __ptext9
  3693                           __ptext9:	;psect for function _setCursorLCD
  3694  0890                     psect	text9
  3695                           	file	"LCD.c"
  3696                           	line	8
  3697                           	global	__size_of_setCursorLCD
  3698                           	__size_of_setCursorLCD	equ	__end_of_setCursorLCD-_setCursorLCD
  3699  001D                     	
  3700                           _setCursorLCD:	
  3701  0890                     ;incstack = 0
  3702                           	opt	stack 5
  3703                           ; Regs used in _setCursorLCD: [wreg+status,2+status,0+pclath+cstack]
  3704                           ;setCursorLCD@y stored from wreg
  3705                           	movwf	(setCursorLCD@y)
  3706  0890  00F5               	line	9
  3707                           	
  3708                           l1895:	
  3709  0891                     ;LCD.c: 9:     if(y == 1){
  3710                           		decf	((setCursorLCD@y)),w
  3711  0891  0375               	btfss	status,2
  3712  0892  1D03               	goto	u2131
  3713  0893  2895               	goto	u2130
  3714  0894  2896               u2131:
  3715  0895                     	goto	l1899
  3716  0895  289E               u2130:
  3717  0896                     	line	10
  3718                           	
  3719                           l1897:	
  3720  0896                     ;LCD.c: 10:         cursor = 0x80 + x - 1;
  3721                           	movf	(setCursorLCD@x),w
  3722  0896  0873               	addlw	07Fh
  3723  0897  3E7F               	movwf	(??_setCursorLCD+0)+0
  3724  0898  00F4               	movf	(??_setCursorLCD+0)+0,w
  3725  0899  0874               	bsf	status, 5	;RP0=1, select bank1
  3726  089A  1683               	bcf	status, 6	;RP1=0, select bank1
  3727  089B  1303               	movwf	(_cursor)^080h
  3728  089C  00BC               	line	11
  3729                           ;LCD.c: 11:     }else{
  3730                           	goto	l1901
  3731  089D  28A6               	
  3732                           l74:	
  3733  089E                     	line	12
  3734                           	
  3735                           l1899:	
  3736  089E                     ;LCD.c: 12:         cursor = 0xC0 + x - 1;
  3737                           	movf	(setCursorLCD@x),w
  3738  089E  0873               	addlw	0BFh
  3739  089F  3EBF               	movwf	(??_setCursorLCD+0)+0
  3740  08A0  00F4               	movf	(??_setCursorLCD+0)+0,w
  3741  08A1  0874               	bsf	status, 5	;RP0=1, select bank1
  3742  08A2  1683               	bcf	status, 6	;RP1=0, select bank1
  3743  08A3  1303               	movwf	(_cursor)^080h
  3744  08A4  00BC               	goto	l1901
  3745  08A5  28A6               	line	13
  3746                           ;LCD.c: 13:     }
  3747                           	
  3748                           l75:	
  3749  08A6                     	line	14
  3750                           	
  3751                           l1901:	
  3752  08A6                     ;LCD.c: 14:     cmdLCD(cursor);
  3753                           	movf	(_cursor)^080h,w
  3754  08A6  083C               	fcall	_cmdLCD
  3755  08A7  120A  158A  207C  120A  158A  	line	15
  3756                           	
  3757                           l76:	
  3758  08AC                     	return
  3759  08AC  0008               	opt stack 0
  3760                           GLOBAL	__end_of_setCursorLCD
  3761                           	__end_of_setCursorLCD:
  3762  08AD                     	signat	_setCursorLCD,8313
  3763                           	global	_initLCD
  3764                           
  3765 ;; *************** function _initLCD *****************
  3766 ;; Defined at:
  3767 ;;		line 36 in file "LCD.c"
  3768 ;; Parameters:    Size  Location     Type
  3769 ;;		None
  3770 ;; Auto vars:     Size  Location     Type
  3771 ;;		None
  3772 ;; Return value:  Size  Location     Type
  3773 ;;                  1    wreg      void 
  3774 ;; Registers used:
  3775 ;;		wreg, status,2, status,0, pclath, cstack
  3776 ;; Tracked objects:
  3777 ;;		On entry : 0/0
  3778 ;;		On exit  : 0/0
  3779 ;;		Unchanged: 0/0
  3780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3781 ;;      Params:         0       0       0       0       0
  3782 ;;      Locals:         0       0       0       0       0
  3783 ;;      Temps:          2       0       0       0       0
  3784 ;;      Totals:         2       0       0       0       0
  3785 ;;Total ram usage:        2 bytes
  3786 ;; Hardware stack levels used:    1
  3787 ;; Hardware stack levels required when called:    1
  3788 ;; This function calls:
  3789 ;;		_cmdLCD
  3790 ;; This function is called by:
  3791 ;;		_setup
  3792 ;; This function uses a non-reentrant model
  3793 ;;
  3794                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  3795                           	line	36
  3796                           global __ptext10
  3797                           __ptext10:	;psect for function _initLCD
  3798  093E                     psect	text10
  3799                           	file	"LCD.c"
  3800                           	line	36
  3801                           	global	__size_of_initLCD
  3802                           	__size_of_initLCD	equ	__end_of_initLCD-_initLCD
  3803  003A                     	
  3804                           _initLCD:	
  3805  093E                     ;incstack = 0
  3806                           	opt	stack 5
  3807                           ; Regs used in _initLCD: [wreg+status,2+status,0+pclath+cstack]
  3808                           	line	37
  3809                           	
  3810                           l1905:	
  3811  093E                     ;LCD.c: 37:      _delay((unsigned long)((15)*(4000000/4000.0)));
  3812                           	opt asmopt_push
  3813                           opt asmopt_off
  3814                           movlw	20
  3815  093E  3014               movwf	((??_initLCD+0)+0+1),f
  3816  093F  00F4               	movlw	121
  3817  0940  3079               movwf	((??_initLCD+0)+0),f
  3818  0941  00F3               	u3607:
  3819  0942                     decfsz	((??_initLCD+0)+0),f
  3820  0942  0BF3               	goto	u3607
  3821  0943  2942               	decfsz	((??_initLCD+0)+0+1),f
  3822  0944  0BF4               	goto	u3607
  3823  0945  2942               	nop2
  3824  0946  2947               opt asmopt_pop
  3825                           
  3826                           	line	38
  3827                           	
  3828                           l1907:	
  3829  0947                     ;LCD.c: 38:     cmdLCD(0x030);
  3830                           	movlw	low(030h)
  3831  0947  3030               	fcall	_cmdLCD
  3832  0948  120A  158A  207C  120A  158A  	line	39
  3833                           	
  3834                           l1909:	
  3835  094D                     ;LCD.c: 39:     cmdLCD(0x030);
  3836                           	movlw	low(030h)
  3837  094D  3030               	fcall	_cmdLCD
  3838  094E  120A  158A  207C  120A  158A  	line	40
  3839                           	
  3840                           l1911:	
  3841  0953                     ;LCD.c: 40:     cmdLCD(0x030);
  3842                           	movlw	low(030h)
  3843  0953  3030               	fcall	_cmdLCD
  3844  0954  120A  158A  207C  120A  158A  	line	42
  3845                           	
  3846                           l1913:	
  3847  0959                     ;LCD.c: 42:     cmdLCD(0x38);
  3848                           	movlw	low(038h)
  3849  0959  3038               	fcall	_cmdLCD
  3850  095A  120A  158A  207C  120A  158A  	line	43
  3851                           	
  3852                           l1915:	
  3853  095F                     ;LCD.c: 43:     cmdLCD(0x10);
  3854                           	movlw	low(010h)
  3855  095F  3010               	fcall	_cmdLCD
  3856  0960  120A  158A  207C  120A  158A  	line	44
  3857                           	
  3858                           l1917:	
  3859  0965                     ;LCD.c: 44:     cmdLCD(0x01);
  3860                           	movlw	low(01h)
  3861  0965  3001               	fcall	_cmdLCD
  3862  0966  120A  158A  207C  120A  158A  	line	45
  3863                           	
  3864                           l1919:	
  3865  096B                     ;LCD.c: 45:     cmdLCD(0x06);
  3866                           	movlw	low(06h)
  3867  096B  3006               	fcall	_cmdLCD
  3868  096C  120A  158A  207C  120A  158A  	line	46
  3869                           	
  3870                           l1921:	
  3871  0971                     ;LCD.c: 46:     cmdLCD(0x0E);
  3872                           	movlw	low(0Eh)
  3873  0971  300E               	fcall	_cmdLCD
  3874  0972  120A  158A  207C  120A  158A  	line	47
  3875                           	
  3876                           l91:	
  3877  0977                     	return
  3878  0977  0008               	opt stack 0
  3879                           GLOBAL	__end_of_initLCD
  3880                           	__end_of_initLCD:
  3881  0978                     	signat	_initLCD,89
  3882                           	global	_clcLCD
  3883                           
  3884 ;; *************** function _clcLCD *****************
  3885 ;; Defined at:
  3886 ;;		line 17 in file "LCD.c"
  3887 ;; Parameters:    Size  Location     Type
  3888 ;;		None
  3889 ;; Auto vars:     Size  Location     Type
  3890 ;;		None
  3891 ;; Return value:  Size  Location     Type
  3892 ;;                  1    wreg      void 
  3893 ;; Registers used:
  3894 ;;		wreg, status,2, status,0, pclath, cstack
  3895 ;; Tracked objects:
  3896 ;;		On entry : 0/0
  3897 ;;		On exit  : 0/0
  3898 ;;		Unchanged: 0/0
  3899 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3900 ;;      Params:         0       0       0       0       0
  3901 ;;      Locals:         0       0       0       0       0
  3902 ;;      Temps:          0       0       0       0       0
  3903 ;;      Totals:         0       0       0       0       0
  3904 ;;Total ram usage:        0 bytes
  3905 ;; Hardware stack levels used:    1
  3906 ;; Hardware stack levels required when called:    1
  3907 ;; This function calls:
  3908 ;;		_cmdLCD
  3909 ;; This function is called by:
  3910 ;;		_setup
  3911 ;; This function uses a non-reentrant model
  3912 ;;
  3913                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  3914                           	line	17
  3915                           global __ptext11
  3916                           __ptext11:	;psect for function _clcLCD
  3917  0003                     psect	text11
  3918                           	file	"LCD.c"
  3919                           	line	17
  3920                           	global	__size_of_clcLCD
  3921                           	__size_of_clcLCD	equ	__end_of_clcLCD-_clcLCD
  3922  0007                     	
  3923                           _clcLCD:	
  3924  0003                     ;incstack = 0
  3925                           	opt	stack 5
  3926                           ; Regs used in _clcLCD: [wreg+status,2+status,0+pclath+cstack]
  3927                           	line	18
  3928                           	
  3929                           l1903:	
  3930  0003                     ;LCD.c: 18:     cmdLCD(0x01);
  3931                           	movlw	low(01h)
  3932  0003  3001               	fcall	_cmdLCD
  3933  0004  120A  158A  207C  120A  118A  	line	19
  3934                           	
  3935                           l79:	
  3936  0009                     	return
  3937  0009  0008               	opt stack 0
  3938                           GLOBAL	__end_of_clcLCD
  3939                           	__end_of_clcLCD:
  3940  000A                     	signat	_clcLCD,89
  3941                           	global	_cmdLCD
  3942                           
  3943 ;; *************** function _cmdLCD *****************
  3944 ;; Defined at:
  3945 ;;		line 49 in file "LCD.c"
  3946 ;; Parameters:    Size  Location     Type
  3947 ;;  cmd             1    wreg     unsigned char 
  3948 ;; Auto vars:     Size  Location     Type
  3949 ;;  cmd             1    2[COMMON] unsigned char 
  3950 ;; Return value:  Size  Location     Type
  3951 ;;                  1    wreg      void 
  3952 ;; Registers used:
  3953 ;;		wreg
  3954 ;; Tracked objects:
  3955 ;;		On entry : 0/0
  3956 ;;		On exit  : 0/0
  3957 ;;		Unchanged: 0/0
  3958 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3959 ;;      Params:         0       0       0       0       0
  3960 ;;      Locals:         1       0       0       0       0
  3961 ;;      Temps:          2       0       0       0       0
  3962 ;;      Totals:         3       0       0       0       0
  3963 ;;Total ram usage:        3 bytes
  3964 ;; Hardware stack levels used:    1
  3965 ;; This function calls:
  3966 ;;		Nothing
  3967 ;; This function is called by:
  3968 ;;		_setCursorLCD
  3969 ;;		_clcLCD
  3970 ;;		_initLCD
  3971 ;; This function uses a non-reentrant model
  3972 ;;
  3973                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  3974                           	line	49
  3975                           global __ptext12
  3976                           __ptext12:	;psect for function _cmdLCD
  3977  087C                     psect	text12
  3978                           	file	"LCD.c"
  3979                           	line	49
  3980                           	global	__size_of_cmdLCD
  3981                           	__size_of_cmdLCD	equ	__end_of_cmdLCD-_cmdLCD
  3982  0014                     	
  3983                           _cmdLCD:	
  3984  087C                     ;incstack = 0
  3985                           	opt	stack 5
  3986                           ; Regs used in _cmdLCD: [wreg]
  3987                           ;cmdLCD@cmd stored from wreg
  3988                           	movwf	(cmdLCD@cmd)
  3989  087C  00F2               	line	50
  3990                           	
  3991                           l1777:	
  3992  087D                     ;LCD.c: 50:     RD0 = 0;
  3993                           	bcf	status, 5	;RP0=0, select bank0
  3994  087D  1283               	bcf	status, 6	;RP1=0, select bank0
  3995  087E  1303               	bcf	(64/8),(64)&7	;volatile
  3996  087F  1008               	line	51
  3997                           	
  3998                           l1779:	
  3999  0880                     ;LCD.c: 51:  PORTB = cmd;
  4000                           	movf	(cmdLCD@cmd),w
  4001  0880  0872               	movwf	(6)	;volatile
  4002  0881  0086               	line	52
  4003                           	
  4004                           l1781:	
  4005  0882                     ;LCD.c: 52:  RD1 = 1;
  4006                           	bsf	(65/8),(65)&7	;volatile
  4007  0882  1488               	line	53
  4008                           ;LCD.c: 53:     _delay((unsigned long)((4)*(4000000/4000.0)));
  4009                           	opt asmopt_push
  4010                           opt asmopt_off
  4011                           movlw	6
  4012  0883  3006               movwf	((??_cmdLCD+0)+0+1),f
  4013  0884  00F1               	movlw	48
  4014  0885  3030               movwf	((??_cmdLCD+0)+0),f
  4015  0886  00F0               	u3617:
  4016  0887                     decfsz	((??_cmdLCD+0)+0),f
  4017  0887  0BF0               	goto	u3617
  4018  0888  2887               	decfsz	((??_cmdLCD+0)+0+1),f
  4019  0889  0BF1               	goto	u3617
  4020  088A  2887               	nop
  4021  088B  0000               opt asmopt_pop
  4022                           
  4023                           	line	54
  4024                           	
  4025                           l1783:	
  4026  088C                     ;LCD.c: 54:     RD1 = 0;
  4027                           	bcf	status, 5	;RP0=0, select bank0
  4028  088C  1283               	bcf	status, 6	;RP1=0, select bank0
  4029  088D  1303               	bcf	(65/8),(65)&7	;volatile
  4030  088E  1088               	line	55
  4031                           	
  4032                           l94:	
  4033  088F                     	return
  4034  088F  0008               	opt stack 0
  4035                           GLOBAL	__end_of_cmdLCD
  4036                           	__end_of_cmdLCD:
  4037  0890                     	signat	_cmdLCD,4217
  4038                           	global	_I2C_Master_Init
  4039                           
  4040 ;; *************** function _I2C_Master_Init *****************
  4041 ;; Defined at:
  4042 ;;		line 16 in file "I2C.c"
  4043 ;; Parameters:    Size  Location     Type
  4044 ;;  c               4    0[BANK0 ] const unsigned long 
  4045 ;; Auto vars:     Size  Location     Type
  4046 ;;		None
  4047 ;; Return value:  Size  Location     Type
  4048 ;;                  1    wreg      void 
  4049 ;; Registers used:
  4050 ;;		wreg, status,2, status,0, pclath, cstack
  4051 ;; Tracked objects:
  4052 ;;		On entry : 0/0
  4053 ;;		On exit  : 0/0
  4054 ;;		Unchanged: 0/0
  4055 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4056 ;;      Params:         0       4       0       0       0
  4057 ;;      Locals:         0       0       0       0       0
  4058 ;;      Temps:          0       4       0       0       0
  4059 ;;      Totals:         0       8       0       0       0
  4060 ;;Total ram usage:        8 bytes
  4061 ;; Hardware stack levels used:    1
  4062 ;; Hardware stack levels required when called:    1
  4063 ;; This function calls:
  4064 ;;		___lldiv
  4065 ;; This function is called by:
  4066 ;;		_setup
  4067 ;; This function uses a non-reentrant model
  4068 ;;
  4069                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  4070                           	file	"I2C.c"
  4071                           	line	16
  4072                           global __ptext13
  4073                           __ptext13:	;psect for function _I2C_Master_Init
  4074  0906                     psect	text13
  4075                           	file	"I2C.c"
  4076                           	line	16
  4077                           	global	__size_of_I2C_Master_Init
  4078                           	__size_of_I2C_Master_Init	equ	__end_of_I2C_Master_Init-_I2C_Master_Init
  4079  0038                     	
  4080                           _I2C_Master_Init:	
  4081  0906                     ;incstack = 0
  4082                           	opt	stack 5
  4083                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  4084                           	line	18
  4085                           	
  4086                           l1879:	
  4087  0906                     ;I2C.c: 16: void I2C_Master_Init(const unsigned long c);I2C.c: 17: {;I2C.c: 18:     SSPC
                                 ON = 0b00101000;
  4088                           	movlw	low(028h)
  4089  0906  3028               	bcf	status, 5	;RP0=0, select bank0
  4090  0907  1283               	bcf	status, 6	;RP1=0, select bank0
  4091  0908  1303               	movwf	(20)	;volatile
  4092  0909  0094               	line	19
  4093                           	
  4094                           l1881:	
  4095  090A                     ;I2C.c: 19:     SSPCON2 = 0;
  4096                           	bsf	status, 5	;RP0=1, select bank1
  4097  090A  1683               	bcf	status, 6	;RP1=0, select bank1
  4098  090B  1303               	clrf	(145)^080h	;volatile
  4099  090C  0191               	line	20
  4100                           	
  4101                           l1883:	
  4102  090D                     ;I2C.c: 20:     SSPADD = (4000000/(4*c))-1;
  4103                           	bcf	status, 5	;RP0=0, select bank0
  4104  090D  1283               	bcf	status, 6	;RP1=0, select bank0
  4105  090E  1303               	movf	(I2C_Master_Init@c),w
  4106  090F  0820               	movwf	(??_I2C_Master_Init+0)+0
  4107  0910  00A4               	movf	(I2C_Master_Init@c+1),w
  4108  0911  0821               	movwf	((??_I2C_Master_Init+0)+0+1)
  4109  0912  00A5               	movf	(I2C_Master_Init@c+2),w
  4110  0913  0822               	movwf	((??_I2C_Master_Init+0)+0+2)
  4111  0914  00A6               	movf	(I2C_Master_Init@c+3),w
  4112  0915  0823               	movwf	((??_I2C_Master_Init+0)+0+3)
  4113  0916  00A7               	movlw	02h
  4114  0917  3002               u2105:
  4115  0918                     	clrc
  4116  0918  1003               	rlf	(??_I2C_Master_Init+0)+0,f
  4117  0919  0DA4               	rlf	(??_I2C_Master_Init+0)+1,f
  4118  091A  0DA5               	rlf	(??_I2C_Master_Init+0)+2,f
  4119  091B  0DA6               	rlf	(??_I2C_Master_Init+0)+3,f
  4120  091C  0DA7               u2100:
  4121  091D                     	addlw	-1
  4122  091D  3EFF               	skipz
  4123  091E  1D03               	goto	u2105
  4124  091F  2918               	movf	3+(??_I2C_Master_Init+0)+0,w
  4125  0920  0827               	movwf	(___lldiv@divisor+3)
  4126  0921  00F3               	movf	2+(??_I2C_Master_Init+0)+0,w
  4127  0922  0826               	movwf	(___lldiv@divisor+2)
  4128  0923  00F2               	movf	1+(??_I2C_Master_Init+0)+0,w
  4129  0924  0825               	movwf	(___lldiv@divisor+1)
  4130  0925  00F1               	movf	0+(??_I2C_Master_Init+0)+0,w
  4131  0926  0824               	movwf	(___lldiv@divisor)
  4132  0927  00F0               
  4133                           	movlw	0
  4134  0928  3000               	movwf	(___lldiv@dividend+3)
  4135  0929  00F7               	movlw	03Dh
  4136  092A  303D               	movwf	(___lldiv@dividend+2)
  4137  092B  00F6               	movlw	09h
  4138  092C  3009               	movwf	(___lldiv@dividend+1)
  4139  092D  00F5               	movlw	0
  4140  092E  3000               	movwf	(___lldiv@dividend)
  4141  092F  00F4               
  4142                           	fcall	___lldiv
  4143  0930  120A  158A  2307  120A  158A  	movf	(0+(?___lldiv)),w
  4144  0935  0870               	addlw	0FFh
  4145  0936  3EFF               	bsf	status, 5	;RP0=1, select bank1
  4146  0937  1683               	bcf	status, 6	;RP1=0, select bank1
  4147  0938  1303               	movwf	(147)^080h	;volatile
  4148  0939  0093               	line	21
  4149                           	
  4150                           l1885:	
  4151  093A                     ;I2C.c: 21:     SSPSTAT = 0;
  4152                           	clrf	(148)^080h	;volatile
  4153  093A  0194               	line	22
  4154                           	
  4155                           l1887:	
  4156  093B                     ;I2C.c: 22:     TRISCbits.TRISC3 = 1;
  4157                           	bsf	(135)^080h,3	;volatile
  4158  093B  1587               	line	23
  4159                           	
  4160                           l1889:	
  4161  093C                     ;I2C.c: 23:     TRISCbits.TRISC4 = 1;
  4162                           	bsf	(135)^080h,4	;volatile
  4163  093C  1607               	line	24
  4164                           	
  4165                           l29:	
  4166  093D                     	return
  4167  093D  0008               	opt stack 0
  4168                           GLOBAL	__end_of_I2C_Master_Init
  4169                           	__end_of_I2C_Master_Init:
  4170  093E                     	signat	_I2C_Master_Init,4217
  4171                           	global	___lldiv
  4172                           
  4173 ;; *************** function ___lldiv *****************
  4174 ;; Defined at:
  4175 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4176 ;; Parameters:    Size  Location     Type
  4177 ;;  divisor         4    0[COMMON] unsigned long 
  4178 ;;  dividend        4    4[COMMON] unsigned long 
  4179 ;; Auto vars:     Size  Location     Type
  4180 ;;  quotient        4    9[COMMON] unsigned long 
  4181 ;;  counter         1   13[COMMON] unsigned char 
  4182 ;; Return value:  Size  Location     Type
  4183 ;;                  4    0[COMMON] unsigned long 
  4184 ;; Registers used:
  4185 ;;		wreg, status,2, status,0
  4186 ;; Tracked objects:
  4187 ;;		On entry : 0/0
  4188 ;;		On exit  : 0/0
  4189 ;;		Unchanged: 0/0
  4190 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4191 ;;      Params:         8       0       0       0       0
  4192 ;;      Locals:         5       0       0       0       0
  4193 ;;      Temps:          1       0       0       0       0
  4194 ;;      Totals:        14       0       0       0       0
  4195 ;;Total ram usage:       14 bytes
  4196 ;; Hardware stack levels used:    1
  4197 ;; This function calls:
  4198 ;;		Nothing
  4199 ;; This function is called by:
  4200 ;;		_I2C_Master_Init
  4201 ;; This function uses a non-reentrant model
  4202 ;;
  4203                           psect	text14,local,class=CODE,delta=2,merge=1,group=1
  4204                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4205                           	line	5
  4206                           global __ptext14
  4207                           __ptext14:	;psect for function ___lldiv
  4208  0B07                     psect	text14
  4209                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
  4210                           	line	5
  4211                           	global	__size_of___lldiv
  4212                           	__size_of___lldiv	equ	__end_of___lldiv-___lldiv
  4213  006D                     	
  4214                           ___lldiv:	
  4215  0B07                     ;incstack = 0
  4216                           	opt	stack 5
  4217                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  4218                           	line	13
  4219                           	
  4220                           l1855:	
  4221  0B07                     	movlw	high highword(0)
  4222  0B07  3000               	movwf	(___lldiv@quotient+3)
  4223  0B08  00FC               	movlw	low highword(0)
  4224  0B09  3000               	movwf	(___lldiv@quotient+2)
  4225  0B0A  00FB               	movlw	high(0)
  4226  0B0B  3000               	movwf	(___lldiv@quotient+1)
  4227  0B0C  00FA               	movlw	low(0)
  4228  0B0D  3000               	movwf	(___lldiv@quotient)
  4229  0B0E  00F9               
  4230                           	line	14
  4231                           	movf	(___lldiv@divisor+3),w
  4232  0B0F  0873               	iorwf	(___lldiv@divisor+2),w
  4233  0B10  0472               	iorwf	(___lldiv@divisor+1),w
  4234  0B11  0471               	iorwf	(___lldiv@divisor),w
  4235  0B12  0470               	skipnz
  4236  0B13  1903               	goto	u2031
  4237  0B14  2B16               	goto	u2030
  4238  0B15  2B17               u2031:
  4239  0B16                     	goto	l1875
  4240  0B16  2B6A               u2030:
  4241  0B17                     	line	15
  4242                           	
  4243                           l1857:	
  4244  0B17                     	clrf	(___lldiv@counter)
  4245  0B17  01FD               	incf	(___lldiv@counter),f
  4246  0B18  0AFD               	line	16
  4247                           	goto	l1861
  4248  0B19  2B28               	
  4249                           l327:	
  4250  0B1A                     	line	17
  4251                           	
  4252                           l1859:	
  4253  0B1A                     	movlw	01h
  4254  0B1A  3001               	movwf	(??___lldiv+0)+0
  4255  0B1B  00F8               u2045:
  4256  0B1C                     	clrc
  4257  0B1C  1003               	rlf	(___lldiv@divisor),f
  4258  0B1D  0DF0               	rlf	(___lldiv@divisor+1),f
  4259  0B1E  0DF1               	rlf	(___lldiv@divisor+2),f
  4260  0B1F  0DF2               	rlf	(___lldiv@divisor+3),f
  4261  0B20  0DF3               	decfsz	(??___lldiv+0)+0
  4262  0B21  0BF8               	goto	u2045
  4263  0B22  2B1C               	line	18
  4264                           	movlw	low(01h)
  4265  0B23  3001               	movwf	(??___lldiv+0)+0
  4266  0B24  00F8               	movf	(??___lldiv+0)+0,w
  4267  0B25  0878               	addwf	(___lldiv@counter),f
  4268  0B26  07FD               	goto	l1861
  4269  0B27  2B28               	line	19
  4270                           	
  4271                           l326:	
  4272  0B28                     	line	16
  4273                           	
  4274                           l1861:	
  4275  0B28                     	btfss	(___lldiv@divisor+3),(31)&7
  4276  0B28  1FF3               	goto	u2051
  4277  0B29  2B2B               	goto	u2050
  4278  0B2A  2B2C               u2051:
  4279  0B2B                     	goto	l1859
  4280  0B2B  2B1A               u2050:
  4281  0B2C                     	goto	l1863
  4282  0B2C  2B2E               	
  4283                           l328:	
  4284  0B2D                     	goto	l1863
  4285  0B2D  2B2E               	line	20
  4286                           	
  4287                           l329:	
  4288  0B2E                     	line	21
  4289                           	
  4290                           l1863:	
  4291  0B2E                     	movlw	01h
  4292  0B2E  3001               	movwf	(??___lldiv+0)+0
  4293  0B2F  00F8               u2065:
  4294  0B30                     	clrc
  4295  0B30  1003               	rlf	(___lldiv@quotient),f
  4296  0B31  0DF9               	rlf	(___lldiv@quotient+1),f
  4297  0B32  0DFA               	rlf	(___lldiv@quotient+2),f
  4298  0B33  0DFB               	rlf	(___lldiv@quotient+3),f
  4299  0B34  0DFC               	decfsz	(??___lldiv+0)+0
  4300  0B35  0BF8               	goto	u2065
  4301  0B36  2B30               	line	22
  4302                           	
  4303                           l1865:	
  4304  0B37                     	movf	(___lldiv@divisor+3),w
  4305  0B37  0873               	subwf	(___lldiv@dividend+3),w
  4306  0B38  0277               	skipz
  4307  0B39  1D03               	goto	u2075
  4308  0B3A  2B45               	movf	(___lldiv@divisor+2),w
  4309  0B3B  0872               	subwf	(___lldiv@dividend+2),w
  4310  0B3C  0276               	skipz
  4311  0B3D  1D03               	goto	u2075
  4312  0B3E  2B45               	movf	(___lldiv@divisor+1),w
  4313  0B3F  0871               	subwf	(___lldiv@dividend+1),w
  4314  0B40  0275               	skipz
  4315  0B41  1D03               	goto	u2075
  4316  0B42  2B45               	movf	(___lldiv@divisor),w
  4317  0B43  0870               	subwf	(___lldiv@dividend),w
  4318  0B44  0274               u2075:
  4319  0B45                     	skipc
  4320  0B45  1C03               	goto	u2071
  4321  0B46  2B48               	goto	u2070
  4322  0B47  2B49               u2071:
  4323  0B48                     	goto	l1871
  4324  0B48  2B59               u2070:
  4325  0B49                     	line	23
  4326                           	
  4327                           l1867:	
  4328  0B49                     	movf	(___lldiv@divisor),w
  4329  0B49  0870               	subwf	(___lldiv@dividend),f
  4330  0B4A  02F4               	movf	(___lldiv@divisor+1),w
  4331  0B4B  0871               	skipc
  4332  0B4C  1C03               	incfsz	(___lldiv@divisor+1),w
  4333  0B4D  0F71               	subwf	(___lldiv@dividend+1),f
  4334  0B4E  02F5               	movf	(___lldiv@divisor+2),w
  4335  0B4F  0872               	skipc
  4336  0B50  1C03               	incfsz	(___lldiv@divisor+2),w
  4337  0B51  0F72               	subwf	(___lldiv@dividend+2),f
  4338  0B52  02F6               	movf	(___lldiv@divisor+3),w
  4339  0B53  0873               	skipc
  4340  0B54  1C03               	incfsz	(___lldiv@divisor+3),w
  4341  0B55  0F73               	subwf	(___lldiv@dividend+3),f
  4342  0B56  02F7               	line	24
  4343                           	
  4344                           l1869:	
  4345  0B57                     	bsf	(___lldiv@quotient)+(0/8),(0)&7
  4346  0B57  1479               	goto	l1871
  4347  0B58  2B59               	line	25
  4348                           	
  4349                           l330:	
  4350  0B59                     	line	26
  4351                           	
  4352                           l1871:	
  4353  0B59                     	movlw	01h
  4354  0B59  3001               u2085:
  4355  0B5A                     	clrc
  4356  0B5A  1003               	rrf	(___lldiv@divisor+3),f
  4357  0B5B  0CF3               	rrf	(___lldiv@divisor+2),f
  4358  0B5C  0CF2               	rrf	(___lldiv@divisor+1),f
  4359  0B5D  0CF1               	rrf	(___lldiv@divisor),f
  4360  0B5E  0CF0               	addlw	-1
  4361  0B5F  3EFF               	skipz
  4362  0B60  1D03               	goto	u2085
  4363  0B61  2B5A               
  4364                           	line	27
  4365                           	
  4366                           l1873:	
  4367  0B62                     	movlw	01h
  4368  0B62  3001               	subwf	(___lldiv@counter),f
  4369  0B63  02FD               	btfss	status,2
  4370  0B64  1D03               	goto	u2091
  4371  0B65  2B67               	goto	u2090
  4372  0B66  2B68               u2091:
  4373  0B67                     	goto	l1863
  4374  0B67  2B2E               u2090:
  4375  0B68                     	goto	l1875
  4376  0B68  2B6A               	
  4377                           l331:	
  4378  0B69                     	goto	l1875
  4379  0B69  2B6A               	line	28
  4380                           	
  4381                           l325:	
  4382  0B6A                     	line	29
  4383                           	
  4384                           l1875:	
  4385  0B6A                     	movf	(___lldiv@quotient+3),w
  4386  0B6A  087C               	movwf	(?___lldiv+3)
  4387  0B6B  00F3               	movf	(___lldiv@quotient+2),w
  4388  0B6C  087B               	movwf	(?___lldiv+2)
  4389  0B6D  00F2               	movf	(___lldiv@quotient+1),w
  4390  0B6E  087A               	movwf	(?___lldiv+1)
  4391  0B6F  00F1               	movf	(___lldiv@quotient),w
  4392  0B70  0879               	movwf	(?___lldiv)
  4393  0B71  00F0               
  4394                           	goto	l332
  4395  0B72  2B73               	
  4396                           l1877:	
  4397  0B73                     	line	30
  4398                           	
  4399                           l332:	
  4400  0B73                     	return
  4401  0B73  0008               	opt stack 0
  4402                           GLOBAL	__end_of___lldiv
  4403                           	__end_of___lldiv:
  4404  0B74                     	signat	___lldiv,8316
  4405                           	global	___xxtofl
  4406                           
  4407 ;; *************** function ___xxtofl *****************
  4408 ;; Defined at:
  4409 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4410 ;; Parameters:    Size  Location     Type
  4411 ;;  sign            1    wreg     unsigned char 
  4412 ;;  val             4    0[COMMON] long 
  4413 ;; Auto vars:     Size  Location     Type
  4414 ;;  sign            1    8[COMMON] unsigned char 
  4415 ;;  arg             4   10[COMMON] unsigned long 
  4416 ;;  exp             1    9[COMMON] unsigned char 
  4417 ;; Return value:  Size  Location     Type
  4418 ;;                  4    0[COMMON] unsigned char 
  4419 ;; Registers used:
  4420 ;;		wreg, status,2, status,0
  4421 ;; Tracked objects:
  4422 ;;		On entry : 0/0
  4423 ;;		On exit  : 0/0
  4424 ;;		Unchanged: 0/0
  4425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4426 ;;      Params:         4       0       0       0       0
  4427 ;;      Locals:         6       0       0       0       0
  4428 ;;      Temps:          4       0       0       0       0
  4429 ;;      Totals:        14       0       0       0       0
  4430 ;;Total ram usage:       14 bytes
  4431 ;; Hardware stack levels used:    1
  4432 ;; This function calls:
  4433 ;;		Nothing
  4434 ;; This function is called by:
  4435 ;;		_main
  4436 ;; This function uses a non-reentrant model
  4437 ;;
  4438                           psect	text15,local,class=CODE,delta=2,merge=1,group=1
  4439                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4440                           	line	10
  4441                           global __ptext15
  4442                           __ptext15:	;psect for function ___xxtofl
  4443  0B74                     psect	text15
  4444                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\xxtofl.c"
  4445                           	line	10
  4446                           	global	__size_of___xxtofl
  4447                           	__size_of___xxtofl	equ	__end_of___xxtofl-___xxtofl
  4448  00C2                     	
  4449                           ___xxtofl:	
  4450  0B74                     ;incstack = 0
  4451                           	opt	stack 7
  4452                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  4453                           ;___xxtofl@sign stored from wreg
  4454                           	movwf	(___xxtofl@sign)
  4455  0B74  00F8               	line	15
  4456                           	
  4457                           l2527:	
  4458  0B75                     	movf	((___xxtofl@sign)),w
  4459  0B75  0878               	btfsc	status,2
  4460  0B76  1903               	goto	u3421
  4461  0B77  2B79               	goto	u3420
  4462  0B78  2B7A               u3421:
  4463  0B79                     	goto	l2533
  4464  0B79  2B8E               u3420:
  4465  0B7A                     	
  4466                           l2529:	
  4467  0B7A                     	btfss	(___xxtofl@val+3),7
  4468  0B7A  1FF3               	goto	u3431
  4469  0B7B  2B7D               	goto	u3430
  4470  0B7C  2B7E               u3431:
  4471  0B7D                     	goto	l2533
  4472  0B7D  2B8E               u3430:
  4473  0B7E                     	line	16
  4474                           	
  4475                           l2531:	
  4476  0B7E                     	comf	(___xxtofl@val)+0,w
  4477  0B7E  0970               	movwf	(___xxtofl@arg)
  4478  0B7F  00FA               	comf	(___xxtofl@val)+1,w
  4479  0B80  0971               	movwf	(___xxtofl@arg+1)
  4480  0B81  00FB               	comf	(___xxtofl@val)+2,w
  4481  0B82  0972               	movwf	(___xxtofl@arg+2)
  4482  0B83  00FC               	comf	(___xxtofl@val)+3,w
  4483  0B84  0973               	movwf	(___xxtofl@arg+3)
  4484  0B85  00FD               	incf	(___xxtofl@arg),f
  4485  0B86  0AFA               	skipnz
  4486  0B87  1903               	incf	(___xxtofl@arg+1),f
  4487  0B88  0AFB               	skipnz
  4488  0B89  1903               	incf	(___xxtofl@arg+2),f
  4489  0B8A  0AFC               	skipnz
  4490  0B8B  1903               	incf	(___xxtofl@arg+3),f
  4491  0B8C  0AFD               	line	17
  4492                           	goto	l704
  4493  0B8D  2B96               	line	18
  4494                           	
  4495                           l703:	
  4496  0B8E                     	line	19
  4497                           	
  4498                           l2533:	
  4499  0B8E                     	movf	(___xxtofl@val+3),w
  4500  0B8E  0873               	movwf	(___xxtofl@arg+3)
  4501  0B8F  00FD               	movf	(___xxtofl@val+2),w
  4502  0B90  0872               	movwf	(___xxtofl@arg+2)
  4503  0B91  00FC               	movf	(___xxtofl@val+1),w
  4504  0B92  0871               	movwf	(___xxtofl@arg+1)
  4505  0B93  00FB               	movf	(___xxtofl@val),w
  4506  0B94  0870               	movwf	(___xxtofl@arg)
  4507  0B95  00FA               
  4508                           	line	20
  4509                           	
  4510                           l704:	
  4511  0B96                     	line	21
  4512                           	movf	(___xxtofl@val+3),w
  4513  0B96  0873               	iorwf	(___xxtofl@val+2),w
  4514  0B97  0472               	iorwf	(___xxtofl@val+1),w
  4515  0B98  0471               	iorwf	(___xxtofl@val),w
  4516  0B99  0470               	skipz
  4517  0B9A  1D03               	goto	u3441
  4518  0B9B  2B9D               	goto	u3440
  4519  0B9C  2B9E               u3441:
  4520  0B9D                     	goto	l2539
  4521  0B9D  2BA8               u3440:
  4522  0B9E                     	line	22
  4523                           	
  4524                           l2535:	
  4525  0B9E                     	movlw	0x0
  4526  0B9E  3000               	movwf	(?___xxtofl+3)
  4527  0B9F  00F3               	movlw	0x0
  4528  0BA0  3000               	movwf	(?___xxtofl+2)
  4529  0BA1  00F2               	movlw	0x0
  4530  0BA2  3000               	movwf	(?___xxtofl+1)
  4531  0BA3  00F1               	movlw	0x0
  4532  0BA4  3000               	movwf	(?___xxtofl)
  4533  0BA5  00F0               
  4534                           	goto	l706
  4535  0BA6  2C35               	
  4536                           l2537:	
  4537  0BA7                     	goto	l706
  4538  0BA7  2C35               	
  4539                           l705:	
  4540  0BA8                     	line	23
  4541                           	
  4542                           l2539:	
  4543  0BA8                     	movlw	low(096h)
  4544  0BA8  3096               	movwf	(??___xxtofl+0)+0
  4545  0BA9  00F4               	movf	(??___xxtofl+0)+0,w
  4546  0BAA  0874               	movwf	(___xxtofl@exp)
  4547  0BAB  00F9               	line	24
  4548                           	goto	l2543
  4549  0BAC  2BBB               	
  4550                           l708:	
  4551  0BAD                     	line	25
  4552                           	
  4553                           l2541:	
  4554  0BAD                     	movlw	low(01h)
  4555  0BAD  3001               	movwf	(??___xxtofl+0)+0
  4556  0BAE  00F4               	movf	(??___xxtofl+0)+0,w
  4557  0BAF  0874               	addwf	(___xxtofl@exp),f
  4558  0BB0  07F9               	line	26
  4559                           	movlw	01h
  4560  0BB1  3001               u3455:
  4561  0BB2                     	clrc
  4562  0BB2  1003               	rrf	(___xxtofl@arg+3),f
  4563  0BB3  0CFD               	rrf	(___xxtofl@arg+2),f
  4564  0BB4  0CFC               	rrf	(___xxtofl@arg+1),f
  4565  0BB5  0CFB               	rrf	(___xxtofl@arg),f
  4566  0BB6  0CFA               	addlw	-1
  4567  0BB7  3EFF               	skipz
  4568  0BB8  1D03               	goto	u3455
  4569  0BB9  2BB2               
  4570                           	goto	l2543
  4571  0BBA  2BBB               	line	27
  4572                           	
  4573                           l707:	
  4574  0BBB                     	line	24
  4575                           	
  4576                           l2543:	
  4577  0BBB                     	movlw	high highword(0FE000000h)
  4578  0BBB  30FE               	andwf	(___xxtofl@arg+3),w
  4579  0BBC  057D               	btfss	status,2
  4580  0BBD  1D03               	goto	u3461
  4581  0BBE  2BC0               	goto	u3460
  4582  0BBF  2BC1               u3461:
  4583  0BC0                     	goto	l2541
  4584  0BC0  2BAD               u3460:
  4585  0BC1                     	goto	l710
  4586  0BC1  2BDE               	
  4587                           l709:	
  4588  0BC2                     	line	28
  4589                           	goto	l710
  4590  0BC2  2BDE               	
  4591                           l711:	
  4592  0BC3                     	line	29
  4593                           	
  4594                           l2545:	
  4595  0BC3                     	movlw	low(01h)
  4596  0BC3  3001               	movwf	(??___xxtofl+0)+0
  4597  0BC4  00F4               	movf	(??___xxtofl+0)+0,w
  4598  0BC5  0874               	addwf	(___xxtofl@exp),f
  4599  0BC6  07F9               	line	30
  4600                           	
  4601                           l2547:	
  4602  0BC7                     	movlw	01h
  4603  0BC7  3001               	addwf	(___xxtofl@arg),f
  4604  0BC8  07FA               	movlw	0
  4605  0BC9  3000               	skipnc
  4606  0BCA  1803               movlw 1
  4607  0BCB  3001               	addwf	(___xxtofl@arg+1),f
  4608  0BCC  07FB               	movlw	0
  4609  0BCD  3000               	skipnc
  4610  0BCE  1803               movlw 1
  4611  0BCF  3001               	addwf	(___xxtofl@arg+2),f
  4612  0BD0  07FC               	movlw	0
  4613  0BD1  3000               	skipnc
  4614  0BD2  1803               movlw 1
  4615  0BD3  3001               	addwf	(___xxtofl@arg+3),f
  4616  0BD4  07FD               	line	31
  4617                           	
  4618                           l2549:	
  4619  0BD5                     	movlw	01h
  4620  0BD5  3001               u3475:
  4621  0BD6                     	clrc
  4622  0BD6  1003               	rrf	(___xxtofl@arg+3),f
  4623  0BD7  0CFD               	rrf	(___xxtofl@arg+2),f
  4624  0BD8  0CFC               	rrf	(___xxtofl@arg+1),f
  4625  0BD9  0CFB               	rrf	(___xxtofl@arg),f
  4626  0BDA  0CFA               	addlw	-1
  4627  0BDB  3EFF               	skipz
  4628  0BDC  1D03               	goto	u3475
  4629  0BDD  2BD6               
  4630                           	line	32
  4631                           	
  4632                           l710:	
  4633  0BDE                     	line	28
  4634                           	movlw	high highword(0FF000000h)
  4635  0BDE  30FF               	andwf	(___xxtofl@arg+3),w
  4636  0BDF  057D               	btfss	status,2
  4637  0BE0  1D03               	goto	u3481
  4638  0BE1  2BE3               	goto	u3480
  4639  0BE2  2BE4               u3481:
  4640  0BE3                     	goto	l2545
  4641  0BE3  2BC3               u3480:
  4642  0BE4                     	goto	l2553
  4643  0BE4  2BF2               	
  4644                           l712:	
  4645  0BE5                     	line	33
  4646                           	goto	l2553
  4647  0BE5  2BF2               	
  4648                           l714:	
  4649  0BE6                     	line	34
  4650                           	
  4651                           l2551:	
  4652  0BE6                     	movlw	01h
  4653  0BE6  3001               	subwf	(___xxtofl@exp),f
  4654  0BE7  02F9               	line	35
  4655                           	movlw	01h
  4656  0BE8  3001               	movwf	(??___xxtofl+0)+0
  4657  0BE9  00F4               u3495:
  4658  0BEA                     	clrc
  4659  0BEA  1003               	rlf	(___xxtofl@arg),f
  4660  0BEB  0DFA               	rlf	(___xxtofl@arg+1),f
  4661  0BEC  0DFB               	rlf	(___xxtofl@arg+2),f
  4662  0BED  0DFC               	rlf	(___xxtofl@arg+3),f
  4663  0BEE  0DFD               	decfsz	(??___xxtofl+0)+0
  4664  0BEF  0BF4               	goto	u3495
  4665  0BF0  2BEA               	goto	l2553
  4666  0BF1  2BF2               	line	36
  4667                           	
  4668                           l713:	
  4669  0BF2                     	line	33
  4670                           	
  4671                           l2553:	
  4672  0BF2                     	btfsc	(___xxtofl@arg+2),(23)&7
  4673  0BF2  1BFC               	goto	u3501
  4674  0BF3  2BF5               	goto	u3500
  4675  0BF4  2BF6               u3501:
  4676  0BF5                     	goto	l717
  4677  0BF5  2BFD               u3500:
  4678  0BF6                     	
  4679                           l2555:	
  4680  0BF6                     	movlw	low(02h)
  4681  0BF6  3002               	subwf	(___xxtofl@exp),w
  4682  0BF7  0279               	skipnc
  4683  0BF8  1803               	goto	u3511
  4684  0BF9  2BFB               	goto	u3510
  4685  0BFA  2BFC               u3511:
  4686  0BFB                     	goto	l2551
  4687  0BFB  2BE6               u3510:
  4688  0BFC                     	goto	l717
  4689  0BFC  2BFD               	
  4690                           l716:	
  4691  0BFD                     	
  4692                           l717:	
  4693  0BFD                     	line	37
  4694                           	btfsc	(___xxtofl@exp),(0)&7
  4695  0BFD  1879               	goto	u3521
  4696  0BFE  2C00               	goto	u3520
  4697  0BFF  2C01               u3521:
  4698  0C00                     	goto	l718
  4699  0C00  2C09               u3520:
  4700  0C01                     	line	38
  4701                           	
  4702                           l2557:	
  4703  0C01                     	movlw	0FFh
  4704  0C01  30FF               	andwf	(___xxtofl@arg),f
  4705  0C02  05FA               	movlw	0FFh
  4706  0C03  30FF               	andwf	(___xxtofl@arg+1),f
  4707  0C04  05FB               	movlw	07Fh
  4708  0C05  307F               	andwf	(___xxtofl@arg+2),f
  4709  0C06  05FC               	movlw	0FFh
  4710  0C07  30FF               	andwf	(___xxtofl@arg+3),f
  4711  0C08  05FD               	
  4712                           l718:	
  4713  0C09                     	line	39
  4714                           	clrc
  4715  0C09  1003               	rrf	(___xxtofl@exp),f
  4716  0C0A  0CF9               
  4717                           	line	40
  4718                           	
  4719                           l2559:	
  4720  0C0B                     	movf	(___xxtofl@exp),w
  4721  0C0B  0879               	movwf	(??___xxtofl+0)+0
  4722  0C0C  00F4               	clrf	(??___xxtofl+0)+0+1
  4723  0C0D  01F5               	clrf	(??___xxtofl+0)+0+2
  4724  0C0E  01F6               	clrf	(??___xxtofl+0)+0+3
  4725  0C0F  01F7               	movlw	018h
  4726  0C10  3018               u3535:
  4727  0C11                     	clrc
  4728  0C11  1003               	rlf	(??___xxtofl+0)+0,f
  4729  0C12  0DF4               	rlf	(??___xxtofl+0)+1,f
  4730  0C13  0DF5               	rlf	(??___xxtofl+0)+2,f
  4731  0C14  0DF6               	rlf	(??___xxtofl+0)+3,f
  4732  0C15  0DF7               u3530:
  4733  0C16                     	addlw	-1
  4734  0C16  3EFF               	skipz
  4735  0C17  1D03               	goto	u3535
  4736  0C18  2C11               	movf	0+(??___xxtofl+0)+0,w
  4737  0C19  0874               	iorwf	(___xxtofl@arg),f
  4738  0C1A  04FA               	movf	1+(??___xxtofl+0)+0,w
  4739  0C1B  0875               	iorwf	(___xxtofl@arg+1),f
  4740  0C1C  04FB               	movf	2+(??___xxtofl+0)+0,w
  4741  0C1D  0876               	iorwf	(___xxtofl@arg+2),f
  4742  0C1E  04FC               	movf	3+(??___xxtofl+0)+0,w
  4743  0C1F  0877               	iorwf	(___xxtofl@arg+3),f
  4744  0C20  04FD               	line	41
  4745                           	
  4746                           l2561:	
  4747  0C21                     	movf	((___xxtofl@sign)),w
  4748  0C21  0878               	btfsc	status,2
  4749  0C22  1903               	goto	u3541
  4750  0C23  2C25               	goto	u3540
  4751  0C24  2C26               u3541:
  4752  0C25                     	goto	l2567
  4753  0C25  2C2C               u3540:
  4754  0C26                     	
  4755                           l2563:	
  4756  0C26                     	btfss	(___xxtofl@val+3),7
  4757  0C26  1FF3               	goto	u3551
  4758  0C27  2C29               	goto	u3550
  4759  0C28  2C2A               u3551:
  4760  0C29                     	goto	l2567
  4761  0C29  2C2C               u3550:
  4762  0C2A                     	line	42
  4763                           	
  4764                           l2565:	
  4765  0C2A                     	bsf	(___xxtofl@arg)+(31/8),(31)&7
  4766  0C2A  17FD               	goto	l2567
  4767  0C2B  2C2C               	
  4768                           l719:	
  4769  0C2C                     	line	43
  4770                           	
  4771                           l2567:	
  4772  0C2C                     	movf	(___xxtofl@arg+3),w
  4773  0C2C  087D               	movwf	(?___xxtofl+3)
  4774  0C2D  00F3               	movf	(___xxtofl@arg+2),w
  4775  0C2E  087C               	movwf	(?___xxtofl+2)
  4776  0C2F  00F2               	movf	(___xxtofl@arg+1),w
  4777  0C30  087B               	movwf	(?___xxtofl+1)
  4778  0C31  00F1               	movf	(___xxtofl@arg),w
  4779  0C32  087A               	movwf	(?___xxtofl)
  4780  0C33  00F0               
  4781                           	goto	l706
  4782  0C34  2C35               	
  4783                           l2569:	
  4784  0C35                     	line	44
  4785                           	
  4786                           l706:	
  4787  0C35                     	return
  4788  0C35  0008               	opt stack 0
  4789                           GLOBAL	__end_of___xxtofl
  4790                           	__end_of___xxtofl:
  4791  0C36                     	signat	___xxtofl,8316
  4792                           	global	___fltol
  4793                           
  4794 ;; *************** function ___fltol *****************
  4795 ;; Defined at:
  4796 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4797 ;; Parameters:    Size  Location     Type
  4798 ;;  f1              4    0[COMMON] unsigned char 
  4799 ;; Auto vars:     Size  Location     Type
  4800 ;;  exp1            1   10[COMMON] unsigned char 
  4801 ;;  sign1           1    9[COMMON] unsigned char 
  4802 ;; Return value:  Size  Location     Type
  4803 ;;                  4    0[COMMON] long 
  4804 ;; Registers used:
  4805 ;;		wreg, status,2, status,0
  4806 ;; Tracked objects:
  4807 ;;		On entry : 0/0
  4808 ;;		On exit  : 0/0
  4809 ;;		Unchanged: 0/0
  4810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4811 ;;      Params:         4       0       0       0       0
  4812 ;;      Locals:         2       0       0       0       0
  4813 ;;      Temps:          5       0       0       0       0
  4814 ;;      Totals:        11       0       0       0       0
  4815 ;;Total ram usage:       11 bytes
  4816 ;; Hardware stack levels used:    1
  4817 ;; This function calls:
  4818 ;;		Nothing
  4819 ;; This function is called by:
  4820 ;;		_main
  4821 ;; This function uses a non-reentrant model
  4822 ;;
  4823                           psect	text16,local,class=CODE,delta=2,merge=1,group=1
  4824                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4825                           	line	43
  4826                           global __ptext16
  4827                           __ptext16:	;psect for function ___fltol
  4828  0028                     psect	text16
  4829                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\fltol.c"
  4830                           	line	43
  4831                           	global	__size_of___fltol
  4832                           	__size_of___fltol	equ	__end_of___fltol-___fltol
  4833  009A                     	
  4834                           ___fltol:	
  4835  0028                     ;incstack = 0
  4836                           	opt	stack 7
  4837                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  4838                           	line	47
  4839                           	
  4840                           l2015:	
  4841  0028                     	movf	(___fltol@f1),w
  4842  0028  0870               	movwf	(??___fltol+0)+0
  4843  0029  00F4               	movf	(___fltol@f1+1),w
  4844  002A  0871               	movwf	((??___fltol+0)+0+1)
  4845  002B  00F5               	movf	(___fltol@f1+2),w
  4846  002C  0872               	movwf	((??___fltol+0)+0+2)
  4847  002D  00F6               	movf	(___fltol@f1+3),w
  4848  002E  0873               	movwf	((??___fltol+0)+0+3)
  4849  002F  00F7               	clrc
  4850  0030  1003               	rlf	(??___fltol+0)+2,w
  4851  0031  0D76               	rlf	(??___fltol+0)+3,w
  4852  0032  0D77               	movwf	(??___fltol+4)+0
  4853  0033  00F8               	movf	(??___fltol+4)+0,w
  4854  0034  0878               	movwf	(___fltol@exp1)
  4855  0035  00FA               	movf	(((___fltol@exp1))),w
  4856  0036  087A               	btfss	status,2
  4857  0037  1D03               	goto	u2201
  4858  0038  283A               	goto	u2200
  4859  0039  283B               u2201:
  4860  003A                     	goto	l2021
  4861  003A  2845               u2200:
  4862  003B                     	line	48
  4863                           	
  4864                           l2017:	
  4865  003B                     	movlw	high highword(0)
  4866  003B  3000               	movwf	(?___fltol+3)
  4867  003C  00F3               	movlw	low highword(0)
  4868  003D  3000               	movwf	(?___fltol+2)
  4869  003E  00F2               	movlw	high(0)
  4870  003F  3000               	movwf	(?___fltol+1)
  4871  0040  00F1               	movlw	low(0)
  4872  0041  3000               	movwf	(?___fltol)
  4873  0042  00F0               
  4874                           	goto	l482
  4875  0043  28C1               	
  4876                           l2019:	
  4877  0044                     	goto	l482
  4878  0044  28C1               	
  4879                           l481:	
  4880  0045                     	line	49
  4881                           	
  4882                           l2021:	
  4883  0045                     	movf	(___fltol@f1),w
  4884  0045  0870               	movwf	(??___fltol+0)+0
  4885  0046  00F4               	movf	(___fltol@f1+1),w
  4886  0047  0871               	movwf	((??___fltol+0)+0+1)
  4887  0048  00F5               	movf	(___fltol@f1+2),w
  4888  0049  0872               	movwf	((??___fltol+0)+0+2)
  4889  004A  00F6               	movf	(___fltol@f1+3),w
  4890  004B  0873               	movwf	((??___fltol+0)+0+3)
  4891  004C  00F7               	movlw	01Fh
  4892  004D  301F               u2215:
  4893  004E                     	clrc
  4894  004E  1003               	rrf	(??___fltol+0)+3,f
  4895  004F  0CF7               	rrf	(??___fltol+0)+2,f
  4896  0050  0CF6               	rrf	(??___fltol+0)+1,f
  4897  0051  0CF5               	rrf	(??___fltol+0)+0,f
  4898  0052  0CF4               u2210:
  4899  0053                     	addlw	-1
  4900  0053  3EFF               	skipz
  4901  0054  1D03               	goto	u2215
  4902  0055  284E               	movf	0+(??___fltol+0)+0,w
  4903  0056  0874               	movwf	(??___fltol+4)+0
  4904  0057  00F8               	movf	(??___fltol+4)+0,w
  4905  0058  0878               	movwf	(___fltol@sign1)
  4906  0059  00F9               	line	50
  4907                           	
  4908                           l2023:	
  4909  005A                     	bsf	(___fltol@f1)+(23/8),(23)&7
  4910  005A  17F2               	line	51
  4911                           	
  4912                           l2025:	
  4913  005B                     	movlw	0FFh
  4914  005B  30FF               	andwf	(___fltol@f1),f
  4915  005C  05F0               	movlw	0FFh
  4916  005D  30FF               	andwf	(___fltol@f1+1),f
  4917  005E  05F1               	movlw	0FFh
  4918  005F  30FF               	andwf	(___fltol@f1+2),f
  4919  0060  05F2               	movlw	0
  4920  0061  3000               	andwf	(___fltol@f1+3),f
  4921  0062  05F3               	line	52
  4922                           	
  4923                           l2027:	
  4924  0063                     	movlw	096h
  4925  0063  3096               	subwf	(___fltol@exp1),f
  4926  0064  02FA               	line	53
  4927                           	
  4928                           l2029:	
  4929  0065                     	btfss	(___fltol@exp1),7
  4930  0065  1FFA               	goto	u2221
  4931  0066  2868               	goto	u2220
  4932  0067  2869               u2221:
  4933  0068                     	goto	l2039
  4934  0068  288E               u2220:
  4935  0069                     	line	54
  4936                           	
  4937                           l2031:	
  4938  0069                     	movf	(___fltol@exp1),w
  4939  0069  087A               	xorlw	80h
  4940  006A  3A80               	addlw	-((-23)^80h)
  4941  006B  3E97               	skipnc
  4942  006C  1803               	goto	u2231
  4943  006D  286F               	goto	u2230
  4944  006E  2870               u2231:
  4945  006F                     	goto	l2037
  4946  006F  287B               u2230:
  4947  0070                     	line	55
  4948                           	
  4949                           l2033:	
  4950  0070                     	movlw	high highword(0)
  4951  0070  3000               	movwf	(?___fltol+3)
  4952  0071  00F3               	movlw	low highword(0)
  4953  0072  3000               	movwf	(?___fltol+2)
  4954  0073  00F2               	movlw	high(0)
  4955  0074  3000               	movwf	(?___fltol+1)
  4956  0075  00F1               	movlw	low(0)
  4957  0076  3000               	movwf	(?___fltol)
  4958  0077  00F0               
  4959                           	goto	l482
  4960  0078  28C1               	
  4961                           l2035:	
  4962  0079                     	goto	l482
  4963  0079  28C1               	
  4964                           l484:	
  4965  007A                     	goto	l2037
  4966  007A  287B               	line	56
  4967                           	
  4968                           l485:	
  4969  007B                     	line	57
  4970                           	
  4971                           l2037:	
  4972  007B                     	movlw	01h
  4973  007B  3001               u2245:
  4974  007C                     	clrc
  4975  007C  1003               	rrf	(___fltol@f1+3),f
  4976  007D  0CF3               	rrf	(___fltol@f1+2),f
  4977  007E  0CF2               	rrf	(___fltol@f1+1),f
  4978  007F  0CF1               	rrf	(___fltol@f1),f
  4979  0080  0CF0               	addlw	-1
  4980  0081  3EFF               	skipz
  4981  0082  1D03               	goto	u2245
  4982  0083  287C               
  4983                           	line	58
  4984                           	movlw	low(01h)
  4985  0084  3001               	movwf	(??___fltol+0)+0
  4986  0085  00F4               	movf	(??___fltol+0)+0,w
  4987  0086  0874               	addwf	(___fltol@exp1),f
  4988  0087  07FA               	btfss	status,2
  4989  0088  1D03               	goto	u2251
  4990  0089  288B               	goto	u2250
  4991  008A  288C               u2251:
  4992  008B                     	goto	l2037
  4993  008B  287B               u2250:
  4994  008C                     	goto	l2047
  4995  008C  28B1               	
  4996                           l486:	
  4997  008D                     	line	59
  4998                           	goto	l2047
  4999  008D  28B1               	
  5000                           l483:	
  5001  008E                     	line	60
  5002                           	
  5003                           l2039:	
  5004  008E                     	movlw	low(020h)
  5005  008E  3020               	subwf	(___fltol@exp1),w
  5006  008F  027A               	skipc
  5007  0090  1C03               	goto	u2261
  5008  0091  2893               	goto	u2260
  5009  0092  2894               u2261:
  5010  0093                     	goto	l489
  5011  0093  28AA               u2260:
  5012  0094                     	line	61
  5013                           	
  5014                           l2041:	
  5015  0094                     	movlw	high highword(0)
  5016  0094  3000               	movwf	(?___fltol+3)
  5017  0095  00F3               	movlw	low highword(0)
  5018  0096  3000               	movwf	(?___fltol+2)
  5019  0097  00F2               	movlw	high(0)
  5020  0098  3000               	movwf	(?___fltol+1)
  5021  0099  00F1               	movlw	low(0)
  5022  009A  3000               	movwf	(?___fltol)
  5023  009B  00F0               
  5024                           	goto	l482
  5025  009C  28C1               	
  5026                           l2043:	
  5027  009D                     	goto	l482
  5028  009D  28C1               	
  5029                           l488:	
  5030  009E                     	line	62
  5031                           	goto	l489
  5032  009E  28AA               	
  5033                           l490:	
  5034  009F                     	line	63
  5035                           	
  5036                           l2045:	
  5037  009F                     	movlw	01h
  5038  009F  3001               	movwf	(??___fltol+0)+0
  5039  00A0  00F4               u2275:
  5040  00A1                     	clrc
  5041  00A1  1003               	rlf	(___fltol@f1),f
  5042  00A2  0DF0               	rlf	(___fltol@f1+1),f
  5043  00A3  0DF1               	rlf	(___fltol@f1+2),f
  5044  00A4  0DF2               	rlf	(___fltol@f1+3),f
  5045  00A5  0DF3               	decfsz	(??___fltol+0)+0
  5046  00A6  0BF4               	goto	u2275
  5047  00A7  28A1               	line	64
  5048                           	movlw	01h
  5049  00A8  3001               	subwf	(___fltol@exp1),f
  5050  00A9  02FA               	line	65
  5051                           	
  5052                           l489:	
  5053  00AA                     	line	62
  5054                           	movf	((___fltol@exp1)),w
  5055  00AA  087A               	btfss	status,2
  5056  00AB  1D03               	goto	u2281
  5057  00AC  28AE               	goto	u2280
  5058  00AD  28AF               u2281:
  5059  00AE                     	goto	l2045
  5060  00AE  289F               u2280:
  5061  00AF                     	goto	l2047
  5062  00AF  28B1               	
  5063                           l491:	
  5064  00B0                     	goto	l2047
  5065  00B0  28B1               	line	66
  5066                           	
  5067                           l487:	
  5068  00B1                     	line	67
  5069                           	
  5070                           l2047:	
  5071  00B1                     	movf	((___fltol@sign1)),w
  5072  00B1  0879               	btfsc	status,2
  5073  00B2  1903               	goto	u2291
  5074  00B3  28B5               	goto	u2290
  5075  00B4  28B6               u2291:
  5076  00B5                     	goto	l492
  5077  00B5  28C1               u2290:
  5078  00B6                     	line	68
  5079                           	
  5080                           l2049:	
  5081  00B6                     	comf	(___fltol@f1),f
  5082  00B6  09F0               	comf	(___fltol@f1+1),f
  5083  00B7  09F1               	comf	(___fltol@f1+2),f
  5084  00B8  09F2               	comf	(___fltol@f1+3),f
  5085  00B9  09F3               	incf	(___fltol@f1),f
  5086  00BA  0AF0               	skipnz
  5087  00BB  1903               	incf	(___fltol@f1+1),f
  5088  00BC  0AF1               	skipnz
  5089  00BD  1903               	incf	(___fltol@f1+2),f
  5090  00BE  0AF2               	skipnz
  5091  00BF  1903               	incf	(___fltol@f1+3),f
  5092  00C0  0AF3               	
  5093                           l492:	
  5094  00C1                     	line	69
  5095                           	line	70
  5096                           	
  5097                           l482:	
  5098  00C1                     	return
  5099  00C1  0008               	opt stack 0
  5100                           GLOBAL	__end_of___fltol
  5101                           	__end_of___fltol:
  5102  00C2                     	signat	___fltol,4220
  5103                           	global	___flneg
  5104                           
  5105 ;; *************** function ___flneg *****************
  5106 ;; Defined at:
  5107 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5108 ;; Parameters:    Size  Location     Type
  5109 ;;  f1              4    0[BANK0 ] long 
  5110 ;; Auto vars:     Size  Location     Type
  5111 ;;		None
  5112 ;; Return value:  Size  Location     Type
  5113 ;;                  4    0[BANK0 ] long 
  5114 ;; Registers used:
  5115 ;;		wreg
  5116 ;; Tracked objects:
  5117 ;;		On entry : 0/0
  5118 ;;		On exit  : 0/0
  5119 ;;		Unchanged: 0/0
  5120 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5121 ;;      Params:         0       4       0       0       0
  5122 ;;      Locals:         0       0       0       0       0
  5123 ;;      Temps:          0       0       0       0       0
  5124 ;;      Totals:         0       4       0       0       0
  5125 ;;Total ram usage:        4 bytes
  5126 ;; Hardware stack levels used:    1
  5127 ;; This function calls:
  5128 ;;		Nothing
  5129 ;; This function is called by:
  5130 ;;		_main
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           psect	text17,local,class=CODE,delta=2,merge=1,group=1
  5134                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5135                           	line	15
  5136                           global __ptext17
  5137                           __ptext17:	;psect for function ___flneg
  5138  085E                     psect	text17
  5139                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\flneg.c"
  5140                           	line	15
  5141                           	global	__size_of___flneg
  5142                           	__size_of___flneg	equ	__end_of___flneg-___flneg
  5143  000F                     	
  5144                           ___flneg:	
  5145  085E                     ;incstack = 0
  5146                           	opt	stack 7
  5147                           ; Regs used in ___flneg: [wreg]
  5148                           	line	17
  5149                           	
  5150                           l2007:	
  5151  085E                     	bcf	status, 5	;RP0=0, select bank0
  5152  085E  1283               	bcf	status, 6	;RP1=0, select bank0
  5153  085F  1303               	movf	(___flneg@f1+3),w
  5154  0860  0823               	iorwf	(___flneg@f1+2),w
  5155  0861  0422               	iorwf	(___flneg@f1+1),w
  5156  0862  0421               	iorwf	(___flneg@f1),w
  5157  0863  0420               	skipnz
  5158  0864  1903               	goto	u2191
  5159  0865  2867               	goto	u2190
  5160  0866  2868               u2191:
  5161  0867                     	goto	l2011
  5162  0867  286B               u2190:
  5163  0868                     	line	18
  5164                           	
  5165                           l2009:	
  5166  0868                     	movlw	080h
  5167  0868  3080               	xorwf	(___flneg@f1+3),f
  5168  0869  06A3               	goto	l2011
  5169  086A  286B               	
  5170                           l477:	
  5171  086B                     	line	19
  5172                           	
  5173                           l2011:	
  5174  086B                     	goto	l478
  5175  086B  286C               	
  5176                           l2013:	
  5177  086C                     	line	20
  5178                           	
  5179                           l478:	
  5180  086C                     	return
  5181  086C  0008               	opt stack 0
  5182                           GLOBAL	__end_of___flneg
  5183                           	__end_of___flneg:
  5184  086D                     	signat	___flneg,4220
  5185                           	global	___flmul
  5186                           
  5187 ;; *************** function ___flmul *****************
  5188 ;; Defined at:
  5189 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5190 ;; Parameters:    Size  Location     Type
  5191 ;;  b               4   28[BANK0 ] long 
  5192 ;;  a               4   32[BANK0 ] long 
  5193 ;; Auto vars:     Size  Location     Type
  5194 ;;  prod            4   48[BANK0 ] struct .
  5195 ;;  grs             4   42[BANK0 ] unsigned long 
  5196 ;;  temp            2   52[BANK0 ] struct .
  5197 ;;  bexp            1   47[BANK0 ] unsigned char 
  5198 ;;  aexp            1   46[BANK0 ] unsigned char 
  5199 ;;  sign            1   41[BANK0 ] unsigned char 
  5200 ;; Return value:  Size  Location     Type
  5201 ;;                  4   28[BANK0 ] unsigned char 
  5202 ;; Registers used:
  5203 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5204 ;; Tracked objects:
  5205 ;;		On entry : 0/0
  5206 ;;		On exit  : 0/0
  5207 ;;		Unchanged: 0/0
  5208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5209 ;;      Params:         0       8       0       0       0
  5210 ;;      Locals:         0      13       0       0       0
  5211 ;;      Temps:          0       5       0       0       0
  5212 ;;      Totals:         0      26       0       0       0
  5213 ;;Total ram usage:       26 bytes
  5214 ;; Hardware stack levels used:    1
  5215 ;; Hardware stack levels required when called:    1
  5216 ;; This function calls:
  5217 ;;		__Umul8_16
  5218 ;; This function is called by:
  5219 ;;		_main
  5220 ;; This function uses a non-reentrant model
  5221 ;;
  5222                           psect	text18,local,class=CODE,delta=2,merge=1,group=1
  5223                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5224                           	line	8
  5225                           global __ptext18
  5226                           __ptext18:	;psect for function ___flmul
  5227  047E                     psect	text18
  5228                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcmul.c"
  5229                           	line	8
  5230                           	global	__size_of___flmul
  5231                           	__size_of___flmul	equ	__end_of___flmul-___flmul
  5232  0375                     	
  5233                           ___flmul:	
  5234  047E                     ;incstack = 0
  5235                           	opt	stack 6
  5236                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5237                           	line	17
  5238                           	
  5239                           l2387:	
  5240  047E                     	bcf	status, 5	;RP0=0, select bank0
  5241  047E  1283               	bcf	status, 6	;RP1=0, select bank0
  5242  047F  1303               	movf	0+(___flmul@b)+03h,w
  5243  0480  083F               	andlw	080h
  5244  0481  3980               	movwf	(??___flmul+0)+0
  5245  0482  00C4               	movf	(??___flmul+0)+0,w
  5246  0483  0844               	movwf	(___flmul@sign)
  5247  0484  00C9               	line	18
  5248                           	
  5249                           l2389:	
  5250  0485                     	movf	0+(___flmul@b)+03h,w
  5251  0485  083F               	movwf	(??___flmul+0)+0
  5252  0486  00C4               	addwf	(??___flmul+0)+0,w
  5253  0487  0744               	movwf	(??___flmul+1)+0
  5254  0488  00C5               	movf	(??___flmul+1)+0,w
  5255  0489  0845               	movwf	(___flmul@bexp)
  5256  048A  00CF               	line	19
  5257                           	
  5258                           l2391:	
  5259  048B                     	btfss	0+(___flmul@b)+02h,(7)&7
  5260  048B  1FBE               	goto	u3051
  5261  048C  2C8E               	goto	u3050
  5262  048D  2C8F               u3051:
  5263  048E                     	goto	l2395
  5264  048E  2C91               u3050:
  5265  048F                     	line	20
  5266                           	
  5267                           l2393:	
  5268  048F                     	bsf	(___flmul@bexp)+(0/8),(0)&7
  5269  048F  144F               	goto	l2395
  5270  0490  2C91               	line	21
  5271                           	
  5272                           l674:	
  5273  0491                     	line	24
  5274                           	
  5275                           l2395:	
  5276  0491                     	movf	((___flmul@bexp)),w
  5277  0491  084F               	btfsc	status,2
  5278  0492  1903               	goto	u3061
  5279  0493  2C95               	goto	u3060
  5280  0494  2C96               u3061:
  5281  0495                     	goto	l2403
  5282  0495  2CA6               u3060:
  5283  0496                     	line	26
  5284                           	
  5285                           l2397:	
  5286  0496                     		incf	((___flmul@bexp)),w
  5287  0496  0A4F               	btfss	status,2
  5288  0497  1D03               	goto	u3071
  5289  0498  2C9A               	goto	u3070
  5290  0499  2C9B               u3071:
  5291  049A                     	goto	l2401
  5292  049A  2CA4               u3070:
  5293  049B                     	line	28
  5294                           	
  5295                           l2399:	
  5296  049B                     	movlw	0x0
  5297  049B  3000               	movwf	(___flmul@b+3)
  5298  049C  00BF               	movlw	0x0
  5299  049D  3000               	movwf	(___flmul@b+2)
  5300  049E  00BE               	movlw	0x0
  5301  049F  3000               	movwf	(___flmul@b+1)
  5302  04A0  00BD               	movlw	0x0
  5303  04A1  3000               	movwf	(___flmul@b)
  5304  04A2  00BC               
  5305                           	goto	l2401
  5306  04A3  2CA4               	line	29
  5307                           	
  5308                           l676:	
  5309  04A4                     	line	31
  5310                           	
  5311                           l2401:	
  5312  04A4                     	bsf	(___flmul@b)+(23/8),(23)&7
  5313  04A4  17BE               	line	33
  5314                           	goto	l2405
  5315  04A5  2CAF               	line	34
  5316                           	
  5317                           l675:	
  5318  04A6                     	line	36
  5319                           	
  5320                           l2403:	
  5321  04A6                     	movlw	0x0
  5322  04A6  3000               	movwf	(___flmul@b+3)
  5323  04A7  00BF               	movlw	0x0
  5324  04A8  3000               	movwf	(___flmul@b+2)
  5325  04A9  00BE               	movlw	0x0
  5326  04AA  3000               	movwf	(___flmul@b+1)
  5327  04AB  00BD               	movlw	0x0
  5328  04AC  3000               	movwf	(___flmul@b)
  5329  04AD  00BC               
  5330                           	goto	l2405
  5331  04AE  2CAF               	line	37
  5332                           	
  5333                           l677:	
  5334  04AF                     	line	39
  5335                           	
  5336                           l2405:	
  5337  04AF                     	movf	0+(___flmul@a)+03h,w
  5338  04AF  0843               	andlw	080h
  5339  04B0  3980               	movwf	(??___flmul+0)+0
  5340  04B1  00C4               	movf	(??___flmul+0)+0,w
  5341  04B2  0844               	xorwf	(___flmul@sign),f
  5342  04B3  06C9               	line	40
  5343                           	
  5344                           l2407:	
  5345  04B4                     	movf	0+(___flmul@a)+03h,w
  5346  04B4  0843               	movwf	(??___flmul+0)+0
  5347  04B5  00C4               	addwf	(??___flmul+0)+0,w
  5348  04B6  0744               	movwf	(??___flmul+1)+0
  5349  04B7  00C5               	movf	(??___flmul+1)+0,w
  5350  04B8  0845               	movwf	(___flmul@aexp)
  5351  04B9  00CE               	line	41
  5352                           	
  5353                           l2409:	
  5354  04BA                     	btfss	0+(___flmul@a)+02h,(7)&7
  5355  04BA  1FC2               	goto	u3081
  5356  04BB  2CBD               	goto	u3080
  5357  04BC  2CBE               u3081:
  5358  04BD                     	goto	l2413
  5359  04BD  2CC0               u3080:
  5360  04BE                     	line	42
  5361                           	
  5362                           l2411:	
  5363  04BE                     	bsf	(___flmul@aexp)+(0/8),(0)&7
  5364  04BE  144E               	goto	l2413
  5365  04BF  2CC0               	line	43
  5366                           	
  5367                           l678:	
  5368  04C0                     	line	45
  5369                           	
  5370                           l2413:	
  5371  04C0                     	movf	((___flmul@aexp)),w
  5372  04C0  084E               	btfsc	status,2
  5373  04C1  1903               	goto	u3091
  5374  04C2  2CC4               	goto	u3090
  5375  04C3  2CC5               u3091:
  5376  04C4                     	goto	l2421
  5377  04C4  2CD5               u3090:
  5378  04C5                     	line	48
  5379                           	
  5380                           l2415:	
  5381  04C5                     		incf	((___flmul@aexp)),w
  5382  04C5  0A4E               	btfss	status,2
  5383  04C6  1D03               	goto	u3101
  5384  04C7  2CC9               	goto	u3100
  5385  04C8  2CCA               u3101:
  5386  04C9                     	goto	l2419
  5387  04C9  2CD3               u3100:
  5388  04CA                     	line	50
  5389                           	
  5390                           l2417:	
  5391  04CA                     	movlw	0x0
  5392  04CA  3000               	movwf	(___flmul@a+3)
  5393  04CB  00C3               	movlw	0x0
  5394  04CC  3000               	movwf	(___flmul@a+2)
  5395  04CD  00C2               	movlw	0x0
  5396  04CE  3000               	movwf	(___flmul@a+1)
  5397  04CF  00C1               	movlw	0x0
  5398  04D0  3000               	movwf	(___flmul@a)
  5399  04D1  00C0               
  5400                           	goto	l2419
  5401  04D2  2CD3               	line	51
  5402                           	
  5403                           l680:	
  5404  04D3                     	line	53
  5405                           	
  5406                           l2419:	
  5407  04D3                     	bsf	(___flmul@a)+(23/8),(23)&7
  5408  04D3  17C2               	line	54
  5409                           	goto	l2423
  5410  04D4  2CDE               	line	55
  5411                           	
  5412                           l679:	
  5413  04D5                     	line	57
  5414                           	
  5415                           l2421:	
  5416  04D5                     	movlw	0x0
  5417  04D5  3000               	movwf	(___flmul@a+3)
  5418  04D6  00C3               	movlw	0x0
  5419  04D7  3000               	movwf	(___flmul@a+2)
  5420  04D8  00C2               	movlw	0x0
  5421  04D9  3000               	movwf	(___flmul@a+1)
  5422  04DA  00C1               	movlw	0x0
  5423  04DB  3000               	movwf	(___flmul@a)
  5424  04DC  00C0               
  5425                           	goto	l2423
  5426  04DD  2CDE               	line	58
  5427                           	
  5428                           l681:	
  5429  04DE                     	line	65
  5430                           	
  5431                           l2423:	
  5432  04DE                     	movf	((___flmul@aexp)),w
  5433  04DE  084E               	btfsc	status,2
  5434  04DF  1903               	goto	u3111
  5435  04E0  2CE2               	goto	u3110
  5436  04E1  2CE3               u3111:
  5437  04E2                     	goto	l2427
  5438  04E2  2CE9               u3110:
  5439  04E3                     	
  5440                           l2425:	
  5441  04E3                     	movf	((___flmul@bexp)),w
  5442  04E3  084F               	btfss	status,2
  5443  04E4  1D03               	goto	u3121
  5444  04E5  2CE7               	goto	u3120
  5445  04E6  2CE8               u3121:
  5446  04E7                     	goto	l2431
  5447  04E7  2CF3               u3120:
  5448  04E8                     	goto	l2427
  5449  04E8  2CE9               	
  5450                           l684:	
  5451  04E9                     	line	66
  5452                           	
  5453                           l2427:	
  5454  04E9                     	movlw	0x0
  5455  04E9  3000               	movwf	(?___flmul+3)
  5456  04EA  00BF               	movlw	0x0
  5457  04EB  3000               	movwf	(?___flmul+2)
  5458  04EC  00BE               	movlw	0x0
  5459  04ED  3000               	movwf	(?___flmul+1)
  5460  04EE  00BD               	movlw	0x0
  5461  04EF  3000               	movwf	(?___flmul)
  5462  04F0  00BC               
  5463                           	goto	l685
  5464  04F1  2FF2               	
  5465                           l2429:	
  5466  04F2                     	goto	l685
  5467  04F2  2FF2               	line	67
  5468                           	
  5469                           l682:	
  5470  04F3                     	line	119
  5471                           	
  5472                           l2431:	
  5473  04F3                     	movf	(___flmul@b),w
  5474  04F3  083C               	movwf	(??___flmul+0)+0
  5475  04F4  00C4               	movf	(??___flmul+0)+0,w
  5476  04F5  0844               	movwf	(__Umul8_16@multiplicand)
  5477  04F6  00F0               	movf	0+(___flmul@a)+02h,w
  5478  04F7  0842               	fcall	__Umul8_16
  5479  04F8  120A  158A  20AD  120A  118A  	movf	(1+(?__Umul8_16)),w
  5480  04FD  0871               	bcf	status, 5	;RP0=0, select bank0
  5481  04FE  1283               	bcf	status, 6	;RP1=0, select bank0
  5482  04FF  1303               	movwf	(___flmul@temp+1)
  5483  0500  00D5               	movf	(0+(?__Umul8_16)),w
  5484  0501  0870               	movwf	(___flmul@temp)
  5485  0502  00D4               	line	120
  5486                           	
  5487                           l2433:	
  5488  0503                     	movf	(___flmul@temp),w
  5489  0503  0854               	movwf	(??___flmul+0)+0
  5490  0504  00C4               	clrf	(??___flmul+0)+0+1
  5491  0505  01C5               	clrf	(??___flmul+0)+0+2
  5492  0506  01C6               	clrf	(??___flmul+0)+0+3
  5493  0507  01C7               	movf	3+(??___flmul+0)+0,w
  5494  0508  0847               	movwf	(___flmul@grs+3)
  5495  0509  00CD               	movf	2+(??___flmul+0)+0,w
  5496  050A  0846               	movwf	(___flmul@grs+2)
  5497  050B  00CC               	movf	1+(??___flmul+0)+0,w
  5498  050C  0845               	movwf	(___flmul@grs+1)
  5499  050D  00CB               	movf	0+(??___flmul+0)+0,w
  5500  050E  0844               	movwf	(___flmul@grs)
  5501  050F  00CA               
  5502                           	line	121
  5503                           	
  5504                           l2435:	
  5505  0510                     	movf	0+(___flmul@temp)+01h,w
  5506  0510  0855               	movwf	(??___flmul+0)+0
  5507  0511  00C4               	clrf	(??___flmul+0)+0+1
  5508  0512  01C5               	clrf	(??___flmul+0)+0+2
  5509  0513  01C6               	clrf	(??___flmul+0)+0+3
  5510  0514  01C7               	movf	3+(??___flmul+0)+0,w
  5511  0515  0847               	movwf	(___flmul@prod+3)
  5512  0516  00D3               	movf	2+(??___flmul+0)+0,w
  5513  0517  0846               	movwf	(___flmul@prod+2)
  5514  0518  00D2               	movf	1+(??___flmul+0)+0,w
  5515  0519  0845               	movwf	(___flmul@prod+1)
  5516  051A  00D1               	movf	0+(??___flmul+0)+0,w
  5517  051B  0844               	movwf	(___flmul@prod)
  5518  051C  00D0               
  5519                           	line	122
  5520                           	movf	0+(___flmul@b)+01h,w
  5521  051D  083D               	movwf	(??___flmul+0)+0
  5522  051E  00C4               	movf	(??___flmul+0)+0,w
  5523  051F  0844               	movwf	(__Umul8_16@multiplicand)
  5524  0520  00F0               	movf	0+(___flmul@a)+01h,w
  5525  0521  0841               	fcall	__Umul8_16
  5526  0522  120A  158A  20AD  120A  118A  	movf	(1+(?__Umul8_16)),w
  5527  0527  0871               	bcf	status, 5	;RP0=0, select bank0
  5528  0528  1283               	bcf	status, 6	;RP1=0, select bank0
  5529  0529  1303               	movwf	(___flmul@temp+1)
  5530  052A  00D5               	movf	(0+(?__Umul8_16)),w
  5531  052B  0870               	movwf	(___flmul@temp)
  5532  052C  00D4               	line	123
  5533                           	
  5534                           l2437:	
  5535  052D                     	movf	(___flmul@temp),w
  5536  052D  0854               	movwf	(??___flmul+0)+0
  5537  052E  00C4               	clrf	(??___flmul+0)+0+1
  5538  052F  01C5               	clrf	(??___flmul+0)+0+2
  5539  0530  01C6               	clrf	(??___flmul+0)+0+3
  5540  0531  01C7               	movf	0+(??___flmul+0)+0,w
  5541  0532  0844               	addwf	(___flmul@grs),f
  5542  0533  07CA               	movf	1+(??___flmul+0)+0,w
  5543  0534  0845               	clrz
  5544  0535  1103               	skipnc
  5545  0536  1803               	addlw	1
  5546  0537  3E01               	skipnz
  5547  0538  1903               	goto	u3131
  5548  0539  2D3B               	addwf	(___flmul@grs+1),f
  5549  053A  07CB               u3131:
  5550  053B                     	movf	2+(??___flmul+0)+0,w
  5551  053B  0846               	clrz
  5552  053C  1103               	skipnc
  5553  053D  1803               	addlw	1
  5554  053E  3E01               	skipnz
  5555  053F  1903               	goto	u3132
  5556  0540  2D42               	addwf	(___flmul@grs+2),f
  5557  0541  07CC               u3132:
  5558  0542                     	movf	3+(??___flmul+0)+0,w
  5559  0542  0847               	clrz
  5560  0543  1103               	skipnc
  5561  0544  1803               	addlw	1
  5562  0545  3E01               	skipnz
  5563  0546  1903               	goto	u3133
  5564  0547  2D49               	addwf	(___flmul@grs+3),f
  5565  0548  07CD               u3133:
  5566  0549                     
  5567                           	line	124
  5568                           	
  5569                           l2439:	
  5570  0549                     	movf	0+(___flmul@temp)+01h,w
  5571  0549  0855               	movwf	(??___flmul+0)+0
  5572  054A  00C4               	clrf	(??___flmul+0)+0+1
  5573  054B  01C5               	clrf	(??___flmul+0)+0+2
  5574  054C  01C6               	clrf	(??___flmul+0)+0+3
  5575  054D  01C7               	movf	0+(??___flmul+0)+0,w
  5576  054E  0844               	addwf	(___flmul@prod),f
  5577  054F  07D0               	movf	1+(??___flmul+0)+0,w
  5578  0550  0845               	clrz
  5579  0551  1103               	skipnc
  5580  0552  1803               	addlw	1
  5581  0553  3E01               	skipnz
  5582  0554  1903               	goto	u3141
  5583  0555  2D57               	addwf	(___flmul@prod+1),f
  5584  0556  07D1               u3141:
  5585  0557                     	movf	2+(??___flmul+0)+0,w
  5586  0557  0846               	clrz
  5587  0558  1103               	skipnc
  5588  0559  1803               	addlw	1
  5589  055A  3E01               	skipnz
  5590  055B  1903               	goto	u3142
  5591  055C  2D5E               	addwf	(___flmul@prod+2),f
  5592  055D  07D2               u3142:
  5593  055E                     	movf	3+(??___flmul+0)+0,w
  5594  055E  0847               	clrz
  5595  055F  1103               	skipnc
  5596  0560  1803               	addlw	1
  5597  0561  3E01               	skipnz
  5598  0562  1903               	goto	u3143
  5599  0563  2D65               	addwf	(___flmul@prod+3),f
  5600  0564  07D3               u3143:
  5601  0565                     
  5602                           	line	125
  5603                           	movf	0+(___flmul@b)+02h,w
  5604  0565  083E               	movwf	(??___flmul+0)+0
  5605  0566  00C4               	movf	(??___flmul+0)+0,w
  5606  0567  0844               	movwf	(__Umul8_16@multiplicand)
  5607  0568  00F0               	movf	(___flmul@a),w
  5608  0569  0840               	fcall	__Umul8_16
  5609  056A  120A  158A  20AD  120A  118A  	movf	(1+(?__Umul8_16)),w
  5610  056F  0871               	bcf	status, 5	;RP0=0, select bank0
  5611  0570  1283               	bcf	status, 6	;RP1=0, select bank0
  5612  0571  1303               	movwf	(___flmul@temp+1)
  5613  0572  00D5               	movf	(0+(?__Umul8_16)),w
  5614  0573  0870               	movwf	(___flmul@temp)
  5615  0574  00D4               	line	126
  5616                           	
  5617                           l2441:	
  5618  0575                     	movf	(___flmul@temp),w
  5619  0575  0854               	movwf	(??___flmul+0)+0
  5620  0576  00C4               	clrf	(??___flmul+0)+0+1
  5621  0577  01C5               	clrf	(??___flmul+0)+0+2
  5622  0578  01C6               	clrf	(??___flmul+0)+0+3
  5623  0579  01C7               	movf	0+(??___flmul+0)+0,w
  5624  057A  0844               	addwf	(___flmul@grs),f
  5625  057B  07CA               	movf	1+(??___flmul+0)+0,w
  5626  057C  0845               	clrz
  5627  057D  1103               	skipnc
  5628  057E  1803               	addlw	1
  5629  057F  3E01               	skipnz
  5630  0580  1903               	goto	u3151
  5631  0581  2D83               	addwf	(___flmul@grs+1),f
  5632  0582  07CB               u3151:
  5633  0583                     	movf	2+(??___flmul+0)+0,w
  5634  0583  0846               	clrz
  5635  0584  1103               	skipnc
  5636  0585  1803               	addlw	1
  5637  0586  3E01               	skipnz
  5638  0587  1903               	goto	u3152
  5639  0588  2D8A               	addwf	(___flmul@grs+2),f
  5640  0589  07CC               u3152:
  5641  058A                     	movf	3+(??___flmul+0)+0,w
  5642  058A  0847               	clrz
  5643  058B  1103               	skipnc
  5644  058C  1803               	addlw	1
  5645  058D  3E01               	skipnz
  5646  058E  1903               	goto	u3153
  5647  058F  2D91               	addwf	(___flmul@grs+3),f
  5648  0590  07CD               u3153:
  5649  0591                     
  5650                           	line	127
  5651                           	
  5652                           l2443:	
  5653  0591                     	movf	0+(___flmul@temp)+01h,w
  5654  0591  0855               	movwf	(??___flmul+0)+0
  5655  0592  00C4               	clrf	(??___flmul+0)+0+1
  5656  0593  01C5               	clrf	(??___flmul+0)+0+2
  5657  0594  01C6               	clrf	(??___flmul+0)+0+3
  5658  0595  01C7               	movf	0+(??___flmul+0)+0,w
  5659  0596  0844               	addwf	(___flmul@prod),f
  5660  0597  07D0               	movf	1+(??___flmul+0)+0,w
  5661  0598  0845               	clrz
  5662  0599  1103               	skipnc
  5663  059A  1803               	addlw	1
  5664  059B  3E01               	skipnz
  5665  059C  1903               	goto	u3161
  5666  059D  2D9F               	addwf	(___flmul@prod+1),f
  5667  059E  07D1               u3161:
  5668  059F                     	movf	2+(??___flmul+0)+0,w
  5669  059F  0846               	clrz
  5670  05A0  1103               	skipnc
  5671  05A1  1803               	addlw	1
  5672  05A2  3E01               	skipnz
  5673  05A3  1903               	goto	u3162
  5674  05A4  2DA6               	addwf	(___flmul@prod+2),f
  5675  05A5  07D2               u3162:
  5676  05A6                     	movf	3+(??___flmul+0)+0,w
  5677  05A6  0847               	clrz
  5678  05A7  1103               	skipnc
  5679  05A8  1803               	addlw	1
  5680  05A9  3E01               	skipnz
  5681  05AA  1903               	goto	u3163
  5682  05AB  2DAD               	addwf	(___flmul@prod+3),f
  5683  05AC  07D3               u3163:
  5684  05AD                     
  5685                           	line	128
  5686                           	
  5687                           l2445:	
  5688  05AD                     	movlw	08h
  5689  05AD  3008               	movwf	(??___flmul+0)+0
  5690  05AE  00C4               u3175:
  5691  05AF                     	clrc
  5692  05AF  1003               	rlf	(___flmul@grs),f
  5693  05B0  0DCA               	rlf	(___flmul@grs+1),f
  5694  05B1  0DCB               	rlf	(___flmul@grs+2),f
  5695  05B2  0DCC               	rlf	(___flmul@grs+3),f
  5696  05B3  0DCD               	decfsz	(??___flmul+0)+0
  5697  05B4  0BC4               	goto	u3175
  5698  05B5  2DAF               	line	129
  5699                           	
  5700                           l2447:	
  5701  05B6                     	movf	0+(___flmul@b)+01h,w
  5702  05B6  083D               	movwf	(??___flmul+0)+0
  5703  05B7  00C4               	movf	(??___flmul+0)+0,w
  5704  05B8  0844               	movwf	(__Umul8_16@multiplicand)
  5705  05B9  00F0               	movf	(___flmul@a),w
  5706  05BA  0840               	fcall	__Umul8_16
  5707  05BB  120A  158A  20AD  120A  118A  	movf	(1+(?__Umul8_16)),w
  5708  05C0  0871               	bcf	status, 5	;RP0=0, select bank0
  5709  05C1  1283               	bcf	status, 6	;RP1=0, select bank0
  5710  05C2  1303               	movwf	(___flmul@temp+1)
  5711  05C3  00D5               	movf	(0+(?__Umul8_16)),w
  5712  05C4  0870               	movwf	(___flmul@temp)
  5713  05C5  00D4               	line	130
  5714                           	
  5715                           l2449:	
  5716  05C6                     	movf	(___flmul@temp),w
  5717  05C6  0854               	movwf	((??___flmul+0)+0)
  5718  05C7  00C4               	movf	(___flmul@temp+1),w
  5719  05C8  0855               	movwf	((??___flmul+0)+0+1)
  5720  05C9  00C5               	clrf	((??___flmul+0)+0+2)
  5721  05CA  01C6               	clrf	((??___flmul+0)+0+3)
  5722  05CB  01C7               	movf	0+(??___flmul+0)+0,w
  5723  05CC  0844               	addwf	(___flmul@grs),f
  5724  05CD  07CA               	movf	1+(??___flmul+0)+0,w
  5725  05CE  0845               	clrz
  5726  05CF  1103               	skipnc
  5727  05D0  1803               	addlw	1
  5728  05D1  3E01               	skipnz
  5729  05D2  1903               	goto	u3181
  5730  05D3  2DD5               	addwf	(___flmul@grs+1),f
  5731  05D4  07CB               u3181:
  5732  05D5                     	movf	2+(??___flmul+0)+0,w
  5733  05D5  0846               	clrz
  5734  05D6  1103               	skipnc
  5735  05D7  1803               	addlw	1
  5736  05D8  3E01               	skipnz
  5737  05D9  1903               	goto	u3182
  5738  05DA  2DDC               	addwf	(___flmul@grs+2),f
  5739  05DB  07CC               u3182:
  5740  05DC                     	movf	3+(??___flmul+0)+0,w
  5741  05DC  0847               	clrz
  5742  05DD  1103               	skipnc
  5743  05DE  1803               	addlw	1
  5744  05DF  3E01               	skipnz
  5745  05E0  1903               	goto	u3183
  5746  05E1  2DE3               	addwf	(___flmul@grs+3),f
  5747  05E2  07CD               u3183:
  5748  05E3                     
  5749                           	line	131
  5750                           	
  5751                           l2451:	
  5752  05E3                     	movf	(___flmul@b),w
  5753  05E3  083C               	movwf	(??___flmul+0)+0
  5754  05E4  00C4               	movf	(??___flmul+0)+0,w
  5755  05E5  0844               	movwf	(__Umul8_16@multiplicand)
  5756  05E6  00F0               	movf	0+(___flmul@a)+01h,w
  5757  05E7  0841               	fcall	__Umul8_16
  5758  05E8  120A  158A  20AD  120A  118A  	movf	(1+(?__Umul8_16)),w
  5759  05ED  0871               	bcf	status, 5	;RP0=0, select bank0
  5760  05EE  1283               	bcf	status, 6	;RP1=0, select bank0
  5761  05EF  1303               	movwf	(___flmul@temp+1)
  5762  05F0  00D5               	movf	(0+(?__Umul8_16)),w
  5763  05F1  0870               	movwf	(___flmul@temp)
  5764  05F2  00D4               	line	132
  5765                           	
  5766                           l2453:	
  5767  05F3                     	movf	(___flmul@temp),w
  5768  05F3  0854               	movwf	((??___flmul+0)+0)
  5769  05F4  00C4               	movf	(___flmul@temp+1),w
  5770  05F5  0855               	movwf	((??___flmul+0)+0+1)
  5771  05F6  00C5               	clrf	((??___flmul+0)+0+2)
  5772  05F7  01C6               	clrf	((??___flmul+0)+0+3)
  5773  05F8  01C7               	movf	0+(??___flmul+0)+0,w
  5774  05F9  0844               	addwf	(___flmul@grs),f
  5775  05FA  07CA               	movf	1+(??___flmul+0)+0,w
  5776  05FB  0845               	clrz
  5777  05FC  1103               	skipnc
  5778  05FD  1803               	addlw	1
  5779  05FE  3E01               	skipnz
  5780  05FF  1903               	goto	u3191
  5781  0600  2E02               	addwf	(___flmul@grs+1),f
  5782  0601  07CB               u3191:
  5783  0602                     	movf	2+(??___flmul+0)+0,w
  5784  0602  0846               	clrz
  5785  0603  1103               	skipnc
  5786  0604  1803               	addlw	1
  5787  0605  3E01               	skipnz
  5788  0606  1903               	goto	u3192
  5789  0607  2E09               	addwf	(___flmul@grs+2),f
  5790  0608  07CC               u3192:
  5791  0609                     	movf	3+(??___flmul+0)+0,w
  5792  0609  0847               	clrz
  5793  060A  1103               	skipnc
  5794  060B  1803               	addlw	1
  5795  060C  3E01               	skipnz
  5796  060D  1903               	goto	u3193
  5797  060E  2E10               	addwf	(___flmul@grs+3),f
  5798  060F  07CD               u3193:
  5799  0610                     
  5800                           	line	133
  5801                           	
  5802                           l2455:	
  5803  0610                     	movlw	08h
  5804  0610  3008               	movwf	(??___flmul+0)+0
  5805  0611  00C4               u3205:
  5806  0612                     	clrc
  5807  0612  1003               	rlf	(___flmul@grs),f
  5808  0613  0DCA               	rlf	(___flmul@grs+1),f
  5809  0614  0DCB               	rlf	(___flmul@grs+2),f
  5810  0615  0DCC               	rlf	(___flmul@grs+3),f
  5811  0616  0DCD               	decfsz	(??___flmul+0)+0
  5812  0617  0BC4               	goto	u3205
  5813  0618  2E12               	line	134
  5814                           	movf	(___flmul@b),w
  5815  0619  083C               	movwf	(??___flmul+0)+0
  5816  061A  00C4               	movf	(??___flmul+0)+0,w
  5817  061B  0844               	movwf	(__Umul8_16@multiplicand)
  5818  061C  00F0               	movf	(___flmul@a),w
  5819  061D  0840               	fcall	__Umul8_16
  5820  061E  120A  158A  20AD  120A  118A  	movf	(1+(?__Umul8_16)),w
  5821  0623  0871               	bcf	status, 5	;RP0=0, select bank0
  5822  0624  1283               	bcf	status, 6	;RP1=0, select bank0
  5823  0625  1303               	movwf	(___flmul@temp+1)
  5824  0626  00D5               	movf	(0+(?__Umul8_16)),w
  5825  0627  0870               	movwf	(___flmul@temp)
  5826  0628  00D4               	line	135
  5827                           	
  5828                           l2457:	
  5829  0629                     	movf	(___flmul@temp),w
  5830  0629  0854               	movwf	((??___flmul+0)+0)
  5831  062A  00C4               	movf	(___flmul@temp+1),w
  5832  062B  0855               	movwf	((??___flmul+0)+0+1)
  5833  062C  00C5               	clrf	((??___flmul+0)+0+2)
  5834  062D  01C6               	clrf	((??___flmul+0)+0+3)
  5835  062E  01C7               	movf	0+(??___flmul+0)+0,w
  5836  062F  0844               	addwf	(___flmul@grs),f
  5837  0630  07CA               	movf	1+(??___flmul+0)+0,w
  5838  0631  0845               	clrz
  5839  0632  1103               	skipnc
  5840  0633  1803               	addlw	1
  5841  0634  3E01               	skipnz
  5842  0635  1903               	goto	u3211
  5843  0636  2E38               	addwf	(___flmul@grs+1),f
  5844  0637  07CB               u3211:
  5845  0638                     	movf	2+(??___flmul+0)+0,w
  5846  0638  0846               	clrz
  5847  0639  1103               	skipnc
  5848  063A  1803               	addlw	1
  5849  063B  3E01               	skipnz
  5850  063C  1903               	goto	u3212
  5851  063D  2E3F               	addwf	(___flmul@grs+2),f
  5852  063E  07CC               u3212:
  5853  063F                     	movf	3+(??___flmul+0)+0,w
  5854  063F  0847               	clrz
  5855  0640  1103               	skipnc
  5856  0641  1803               	addlw	1
  5857  0642  3E01               	skipnz
  5858  0643  1903               	goto	u3213
  5859  0644  2E46               	addwf	(___flmul@grs+3),f
  5860  0645  07CD               u3213:
  5861  0646                     
  5862                           	line	136
  5863                           	
  5864                           l2459:	
  5865  0646                     	movf	0+(___flmul@b)+01h,w
  5866  0646  083D               	movwf	(??___flmul+0)+0
  5867  0647  00C4               	movf	(??___flmul+0)+0,w
  5868  0648  0844               	movwf	(__Umul8_16@multiplicand)
  5869  0649  00F0               	movf	0+(___flmul@a)+02h,w
  5870  064A  0842               	fcall	__Umul8_16
  5871  064B  120A  158A  20AD  120A  118A  	movf	(1+(?__Umul8_16)),w
  5872  0650  0871               	bcf	status, 5	;RP0=0, select bank0
  5873  0651  1283               	bcf	status, 6	;RP1=0, select bank0
  5874  0652  1303               	movwf	(___flmul@temp+1)
  5875  0653  00D5               	movf	(0+(?__Umul8_16)),w
  5876  0654  0870               	movwf	(___flmul@temp)
  5877  0655  00D4               	line	137
  5878                           	movf	(___flmul@temp),w
  5879  0656  0854               	movwf	((??___flmul+0)+0)
  5880  0657  00C4               	movf	(___flmul@temp+1),w
  5881  0658  0855               	movwf	((??___flmul+0)+0+1)
  5882  0659  00C5               	clrf	((??___flmul+0)+0+2)
  5883  065A  01C6               	clrf	((??___flmul+0)+0+3)
  5884  065B  01C7               	movf	0+(??___flmul+0)+0,w
  5885  065C  0844               	addwf	(___flmul@prod),f
  5886  065D  07D0               	movf	1+(??___flmul+0)+0,w
  5887  065E  0845               	clrz
  5888  065F  1103               	skipnc
  5889  0660  1803               	addlw	1
  5890  0661  3E01               	skipnz
  5891  0662  1903               	goto	u3221
  5892  0663  2E65               	addwf	(___flmul@prod+1),f
  5893  0664  07D1               u3221:
  5894  0665                     	movf	2+(??___flmul+0)+0,w
  5895  0665  0846               	clrz
  5896  0666  1103               	skipnc
  5897  0667  1803               	addlw	1
  5898  0668  3E01               	skipnz
  5899  0669  1903               	goto	u3222
  5900  066A  2E6C               	addwf	(___flmul@prod+2),f
  5901  066B  07D2               u3222:
  5902  066C                     	movf	3+(??___flmul+0)+0,w
  5903  066C  0847               	clrz
  5904  066D  1103               	skipnc
  5905  066E  1803               	addlw	1
  5906  066F  3E01               	skipnz
  5907  0670  1903               	goto	u3223
  5908  0671  2E73               	addwf	(___flmul@prod+3),f
  5909  0672  07D3               u3223:
  5910  0673                     
  5911                           	line	138
  5912                           	
  5913                           l2461:	
  5914  0673                     	movf	0+(___flmul@b)+02h,w
  5915  0673  083E               	movwf	(??___flmul+0)+0
  5916  0674  00C4               	movf	(??___flmul+0)+0,w
  5917  0675  0844               	movwf	(__Umul8_16@multiplicand)
  5918  0676  00F0               	movf	0+(___flmul@a)+01h,w
  5919  0677  0841               	fcall	__Umul8_16
  5920  0678  120A  158A  20AD  120A  118A  	movf	(1+(?__Umul8_16)),w
  5921  067D  0871               	bcf	status, 5	;RP0=0, select bank0
  5922  067E  1283               	bcf	status, 6	;RP1=0, select bank0
  5923  067F  1303               	movwf	(___flmul@temp+1)
  5924  0680  00D5               	movf	(0+(?__Umul8_16)),w
  5925  0681  0870               	movwf	(___flmul@temp)
  5926  0682  00D4               	line	139
  5927                           	
  5928                           l2463:	
  5929  0683                     	movf	(___flmul@temp),w
  5930  0683  0854               	movwf	((??___flmul+0)+0)
  5931  0684  00C4               	movf	(___flmul@temp+1),w
  5932  0685  0855               	movwf	((??___flmul+0)+0+1)
  5933  0686  00C5               	clrf	((??___flmul+0)+0+2)
  5934  0687  01C6               	clrf	((??___flmul+0)+0+3)
  5935  0688  01C7               	movf	0+(??___flmul+0)+0,w
  5936  0689  0844               	addwf	(___flmul@prod),f
  5937  068A  07D0               	movf	1+(??___flmul+0)+0,w
  5938  068B  0845               	clrz
  5939  068C  1103               	skipnc
  5940  068D  1803               	addlw	1
  5941  068E  3E01               	skipnz
  5942  068F  1903               	goto	u3231
  5943  0690  2E92               	addwf	(___flmul@prod+1),f
  5944  0691  07D1               u3231:
  5945  0692                     	movf	2+(??___flmul+0)+0,w
  5946  0692  0846               	clrz
  5947  0693  1103               	skipnc
  5948  0694  1803               	addlw	1
  5949  0695  3E01               	skipnz
  5950  0696  1903               	goto	u3232
  5951  0697  2E99               	addwf	(___flmul@prod+2),f
  5952  0698  07D2               u3232:
  5953  0699                     	movf	3+(??___flmul+0)+0,w
  5954  0699  0847               	clrz
  5955  069A  1103               	skipnc
  5956  069B  1803               	addlw	1
  5957  069C  3E01               	skipnz
  5958  069D  1903               	goto	u3233
  5959  069E  2EA0               	addwf	(___flmul@prod+3),f
  5960  069F  07D3               u3233:
  5961  06A0                     
  5962                           	line	140
  5963                           	movf	0+(___flmul@b)+02h,w
  5964  06A0  083E               	movwf	(??___flmul+0)+0
  5965  06A1  00C4               	movf	(??___flmul+0)+0,w
  5966  06A2  0844               	movwf	(__Umul8_16@multiplicand)
  5967  06A3  00F0               	movf	0+(___flmul@a)+02h,w
  5968  06A4  0842               	fcall	__Umul8_16
  5969  06A5  120A  158A  20AD  120A  118A  	movf	(1+(?__Umul8_16)),w
  5970  06AA  0871               	bcf	status, 5	;RP0=0, select bank0
  5971  06AB  1283               	bcf	status, 6	;RP1=0, select bank0
  5972  06AC  1303               	movwf	(___flmul@temp+1)
  5973  06AD  00D5               	movf	(0+(?__Umul8_16)),w
  5974  06AE  0870               	movwf	(___flmul@temp)
  5975  06AF  00D4               	line	141
  5976                           	
  5977                           l2465:	
  5978  06B0                     	movf	(___flmul@temp),w
  5979  06B0  0854               	movwf	((??___flmul+0)+0)
  5980  06B1  00C4               	movf	(___flmul@temp+1),w
  5981  06B2  0855               	movwf	((??___flmul+0)+0+1)
  5982  06B3  00C5               	clrf	((??___flmul+0)+0+2)
  5983  06B4  01C6               	clrf	((??___flmul+0)+0+3)
  5984  06B5  01C7               	movlw	08h
  5985  06B6  3008               u3245:
  5986  06B7                     	clrc
  5987  06B7  1003               	rlf	(??___flmul+0)+0,f
  5988  06B8  0DC4               	rlf	(??___flmul+0)+1,f
  5989  06B9  0DC5               	rlf	(??___flmul+0)+2,f
  5990  06BA  0DC6               	rlf	(??___flmul+0)+3,f
  5991  06BB  0DC7               u3240:
  5992  06BC                     	addlw	-1
  5993  06BC  3EFF               	skipz
  5994  06BD  1D03               	goto	u3245
  5995  06BE  2EB7               	movf	0+(??___flmul+0)+0,w
  5996  06BF  0844               	addwf	(___flmul@prod),f
  5997  06C0  07D0               	movf	1+(??___flmul+0)+0,w
  5998  06C1  0845               	clrz
  5999  06C2  1103               	skipnc
  6000  06C3  1803               	addlw	1
  6001  06C4  3E01               	skipnz
  6002  06C5  1903               	goto	u3251
  6003  06C6  2EC8               	addwf	(___flmul@prod+1),f
  6004  06C7  07D1               u3251:
  6005  06C8                     	movf	2+(??___flmul+0)+0,w
  6006  06C8  0846               	clrz
  6007  06C9  1103               	skipnc
  6008  06CA  1803               	addlw	1
  6009  06CB  3E01               	skipnz
  6010  06CC  1903               	goto	u3252
  6011  06CD  2ECF               	addwf	(___flmul@prod+2),f
  6012  06CE  07D2               u3252:
  6013  06CF                     	movf	3+(??___flmul+0)+0,w
  6014  06CF  0847               	clrz
  6015  06D0  1103               	skipnc
  6016  06D1  1803               	addlw	1
  6017  06D2  3E01               	skipnz
  6018  06D3  1903               	goto	u3253
  6019  06D4  2ED6               	addwf	(___flmul@prod+3),f
  6020  06D5  07D3               u3253:
  6021  06D6                     
  6022                           	line	145
  6023                           	
  6024                           l2467:	
  6025  06D6                     	movf	(___flmul@grs),w
  6026  06D6  084A               	movwf	(??___flmul+0)+0
  6027  06D7  00C4               	movf	(___flmul@grs+1),w
  6028  06D8  084B               	movwf	((??___flmul+0)+0+1)
  6029  06D9  00C5               	movf	(___flmul@grs+2),w
  6030  06DA  084C               	movwf	((??___flmul+0)+0+2)
  6031  06DB  00C6               	movf	(___flmul@grs+3),w
  6032  06DC  084D               	movwf	((??___flmul+0)+0+3)
  6033  06DD  00C7               	movlw	018h
  6034  06DE  3018               u3265:
  6035  06DF                     	clrc
  6036  06DF  1003               	rrf	(??___flmul+0)+3,f
  6037  06E0  0CC7               	rrf	(??___flmul+0)+2,f
  6038  06E1  0CC6               	rrf	(??___flmul+0)+1,f
  6039  06E2  0CC5               	rrf	(??___flmul+0)+0,f
  6040  06E3  0CC4               u3260:
  6041  06E4                     	addlw	-1
  6042  06E4  3EFF               	skipz
  6043  06E5  1D03               	goto	u3265
  6044  06E6  2EDF               	movf	0+(??___flmul+0)+0,w
  6045  06E7  0844               	addwf	(___flmul@prod),f
  6046  06E8  07D0               	movf	1+(??___flmul+0)+0,w
  6047  06E9  0845               	clrz
  6048  06EA  1103               	skipnc
  6049  06EB  1803               	addlw	1
  6050  06EC  3E01               	skipnz
  6051  06ED  1903               	goto	u3271
  6052  06EE  2EF0               	addwf	(___flmul@prod+1),f
  6053  06EF  07D1               u3271:
  6054  06F0                     	movf	2+(??___flmul+0)+0,w
  6055  06F0  0846               	clrz
  6056  06F1  1103               	skipnc
  6057  06F2  1803               	addlw	1
  6058  06F3  3E01               	skipnz
  6059  06F4  1903               	goto	u3272
  6060  06F5  2EF7               	addwf	(___flmul@prod+2),f
  6061  06F6  07D2               u3272:
  6062  06F7                     	movf	3+(??___flmul+0)+0,w
  6063  06F7  0847               	clrz
  6064  06F8  1103               	skipnc
  6065  06F9  1803               	addlw	1
  6066  06FA  3E01               	skipnz
  6067  06FB  1903               	goto	u3273
  6068  06FC  2EFE               	addwf	(___flmul@prod+3),f
  6069  06FD  07D3               u3273:
  6070  06FE                     
  6071                           	line	146
  6072                           	
  6073                           l2469:	
  6074  06FE                     	movlw	08h
  6075  06FE  3008               	movwf	(??___flmul+0)+0
  6076  06FF  00C4               u3285:
  6077  0700                     	clrc
  6078  0700  1003               	rlf	(___flmul@grs),f
  6079  0701  0DCA               	rlf	(___flmul@grs+1),f
  6080  0702  0DCB               	rlf	(___flmul@grs+2),f
  6081  0703  0DCC               	rlf	(___flmul@grs+3),f
  6082  0704  0DCD               	decfsz	(??___flmul+0)+0
  6083  0705  0BC4               	goto	u3285
  6084  0706  2F00               	line	149
  6085                           	
  6086                           l2471:	
  6087  0707                     	movf	(___flmul@bexp),w
  6088  0707  084F               	addwf	(___flmul@aexp),w
  6089  0708  074E               	movwf	(??___flmul+0)+0
  6090  0709  00C4               	clrf	(??___flmul+0)+0+1
  6091  070A  01C5               	rlf	1+(??___flmul+0)+0,f
  6092  070B  0DC5               	
  6093                           	movf	0+(??___flmul+0)+0,w
  6094  070C  0844               	addlw	low(-126)
  6095  070D  3E82               	movwf	(___flmul@temp)
  6096  070E  00D4               	movf	1+(??___flmul+0)+0,w
  6097  070F  0845               	skipnc
  6098  0710  1803               	addlw	1
  6099  0711  3E01               	addlw	high(-126)
  6100  0712  3EFF               	movwf	1+(___flmul@temp)
  6101  0713  00D5               	line	152
  6102                           	goto	l2483
  6103  0714  2F34               	
  6104                           l687:	
  6105  0715                     	line	153
  6106                           	
  6107                           l2473:	
  6108  0715                     	movlw	01h
  6109  0715  3001               	movwf	(??___flmul+0)+0
  6110  0716  00C4               u3295:
  6111  0717                     	clrc
  6112  0717  1003               	rlf	(___flmul@prod),f
  6113  0718  0DD0               	rlf	(___flmul@prod+1),f
  6114  0719  0DD1               	rlf	(___flmul@prod+2),f
  6115  071A  0DD2               	rlf	(___flmul@prod+3),f
  6116  071B  0DD3               	decfsz	(??___flmul+0)+0
  6117  071C  0BC4               	goto	u3295
  6118  071D  2F17               	line	154
  6119                           	
  6120                           l2475:	
  6121  071E                     	btfss	(___flmul@grs+3),(31)&7
  6122  071E  1FCD               	goto	u3301
  6123  071F  2F21               	goto	u3300
  6124  0720  2F22               u3301:
  6125  0721                     	goto	l2479
  6126  0721  2F24               u3300:
  6127  0722                     	line	155
  6128                           	
  6129                           l2477:	
  6130  0722                     	bsf	(___flmul@prod)+(0/8),(0)&7
  6131  0722  1450               	goto	l2479
  6132  0723  2F24               	line	156
  6133                           	
  6134                           l688:	
  6135  0724                     	line	157
  6136                           	
  6137                           l2479:	
  6138  0724                     	movlw	01h
  6139  0724  3001               	movwf	(??___flmul+0)+0
  6140  0725  00C4               u3315:
  6141  0726                     	clrc
  6142  0726  1003               	rlf	(___flmul@grs),f
  6143  0727  0DCA               	rlf	(___flmul@grs+1),f
  6144  0728  0DCB               	rlf	(___flmul@grs+2),f
  6145  0729  0DCC               	rlf	(___flmul@grs+3),f
  6146  072A  0DCD               	decfsz	(??___flmul+0)+0
  6147  072B  0BC4               	goto	u3315
  6148  072C  2F26               	line	158
  6149                           	
  6150                           l2481:	
  6151  072D                     	movlw	0FFh
  6152  072D  30FF               	addwf	(___flmul@temp),f
  6153  072E  07D4               	skipnc
  6154  072F  1803               	incf	(___flmul@temp+1),f
  6155  0730  0AD5               	movlw	0FFh
  6156  0731  30FF               	addwf	(___flmul@temp+1),f
  6157  0732  07D5               	goto	l2483
  6158  0733  2F34               	line	159
  6159                           	
  6160                           l686:	
  6161  0734                     	line	152
  6162                           	
  6163                           l2483:	
  6164  0734                     	btfss	(___flmul@prod+2),(23)&7
  6165  0734  1FD2               	goto	u3321
  6166  0735  2F37               	goto	u3320
  6167  0736  2F38               u3321:
  6168  0737                     	goto	l2473
  6169  0737  2F15               u3320:
  6170  0738                     	goto	l2485
  6171  0738  2F39               	
  6172                           l689:	
  6173  0739                     	line	163
  6174                           	
  6175                           l2485:	
  6176  0739                     	clrf	(___flmul@aexp)
  6177  0739  01CE               	line	164
  6178                           	
  6179                           l2487:	
  6180  073A                     	btfss	(___flmul@grs+3),(31)&7
  6181  073A  1FCD               	goto	u3331
  6182  073B  2F3D               	goto	u3330
  6183  073C  2F3E               u3331:
  6184  073D                     	goto	l2495
  6185  073D  2F5E               u3330:
  6186  073E                     	line	165
  6187                           	
  6188                           l2489:	
  6189  073E                     	movlw	0FFh
  6190  073E  30FF               	andwf	(___flmul@grs),w
  6191  073F  054A               	movwf	(??___flmul+0)+0
  6192  0740  00C4               	movlw	0FFh
  6193  0741  30FF               	andwf	(___flmul@grs+1),w
  6194  0742  054B               	movwf	((??___flmul+0)+0+1)
  6195  0743  00C5               	movlw	0FFh
  6196  0744  30FF               	andwf	(___flmul@grs+2),w
  6197  0745  054C               	movwf	((??___flmul+0)+0+2)
  6198  0746  00C6               	movlw	07Fh
  6199  0747  307F               	andwf	(___flmul@grs+3),w
  6200  0748  054D               	movwf	((??___flmul+0)+0+3)
  6201  0749  00C7               	movf	3+(??___flmul+0)+0,w
  6202  074A  0847               	iorwf	2+(??___flmul+0)+0,w
  6203  074B  0446               	iorwf	1+(??___flmul+0)+0,w
  6204  074C  0445               	iorwf	0+(??___flmul+0)+0,w
  6205  074D  0444               	skipnz
  6206  074E  1903               	goto	u3341
  6207  074F  2F51               	goto	u3340
  6208  0750  2F52               u3341:
  6209  0751                     	goto	l691
  6210  0751  2F55               u3340:
  6211  0752                     	line	166
  6212                           	
  6213                           l2491:	
  6214  0752                     	clrf	(___flmul@aexp)
  6215  0752  01CE               	incf	(___flmul@aexp),f
  6216  0753  0ACE               	line	167
  6217                           	goto	l2495
  6218  0754  2F5E               	line	168
  6219                           	
  6220                           l691:	
  6221  0755                     	line	169
  6222                           	btfss	(___flmul@prod),(0)&7
  6223  0755  1C50               	goto	u3351
  6224  0756  2F58               	goto	u3350
  6225  0757  2F59               u3351:
  6226  0758                     	goto	l2495
  6227  0758  2F5E               u3350:
  6228  0759                     	line	170
  6229                           	
  6230                           l2493:	
  6231  0759                     	clrf	(___flmul@aexp)
  6232  0759  01CE               	incf	(___flmul@aexp),f
  6233  075A  0ACE               	goto	l2495
  6234  075B  2F5E               	line	171
  6235                           	
  6236                           l693:	
  6237  075C                     	goto	l2495
  6238  075C  2F5E               	line	172
  6239                           	
  6240                           l692:	
  6241  075D                     	goto	l2495
  6242  075D  2F5E               	line	173
  6243                           	
  6244                           l690:	
  6245  075E                     	line	174
  6246                           	
  6247                           l2495:	
  6248  075E                     	movf	((___flmul@aexp)),w
  6249  075E  084E               	btfsc	status,2
  6250  075F  1903               	goto	u3361
  6251  0760  2F62               	goto	u3360
  6252  0761  2F63               u3361:
  6253  0762                     	goto	l2505
  6254  0762  2F96               u3360:
  6255  0763                     	line	175
  6256                           	
  6257                           l2497:	
  6258  0763                     	movlw	01h
  6259  0763  3001               	addwf	(___flmul@prod),f
  6260  0764  07D0               	movlw	0
  6261  0765  3000               	skipnc
  6262  0766  1803               movlw 1
  6263  0767  3001               	addwf	(___flmul@prod+1),f
  6264  0768  07D1               	movlw	0
  6265  0769  3000               	skipnc
  6266  076A  1803               movlw 1
  6267  076B  3001               	addwf	(___flmul@prod+2),f
  6268  076C  07D2               	movlw	0
  6269  076D  3000               	skipnc
  6270  076E  1803               movlw 1
  6271  076F  3001               	addwf	(___flmul@prod+3),f
  6272  0770  07D3               	line	176
  6273                           	
  6274                           l2499:	
  6275  0771                     	btfss	(___flmul@prod+3),(24)&7
  6276  0771  1C53               	goto	u3371
  6277  0772  2F74               	goto	u3370
  6278  0773  2F75               u3371:
  6279  0774                     	goto	l2505
  6280  0774  2F96               u3370:
  6281  0775                     	line	177
  6282                           	
  6283                           l2501:	
  6284  0775                     	movf	(___flmul@prod),w
  6285  0775  0850               	movwf	(??___flmul+0)+0
  6286  0776  00C4               	movf	(___flmul@prod+1),w
  6287  0777  0851               	movwf	((??___flmul+0)+0+1)
  6288  0778  00C5               	movf	(___flmul@prod+2),w
  6289  0779  0852               	movwf	((??___flmul+0)+0+2)
  6290  077A  00C6               	movf	(___flmul@prod+3),w
  6291  077B  0853               	movwf	((??___flmul+0)+0+3)
  6292  077C  00C7               	movlw	01h
  6293  077D  3001               	movwf	(??___flmul+4)+0
  6294  077E  00C8               u3385:
  6295  077F                     	rlf	(??___flmul+0)+3,w
  6296  077F  0D47               	rrf	(??___flmul+0)+3,f
  6297  0780  0CC7               	rrf	(??___flmul+0)+2,f
  6298  0781  0CC6               	rrf	(??___flmul+0)+1,f
  6299  0782  0CC5               	rrf	(??___flmul+0)+0,f
  6300  0783  0CC4               u3380:
  6301  0784                     	decfsz	(??___flmul+4)+0,f
  6302  0784  0BC8               	goto	u3385
  6303  0785  2F7F               	movf	3+(??___flmul+0)+0,w
  6304  0786  0847               	movwf	(___flmul@prod+3)
  6305  0787  00D3               	movf	2+(??___flmul+0)+0,w
  6306  0788  0846               	movwf	(___flmul@prod+2)
  6307  0789  00D2               	movf	1+(??___flmul+0)+0,w
  6308  078A  0845               	movwf	(___flmul@prod+1)
  6309  078B  00D1               	movf	0+(??___flmul+0)+0,w
  6310  078C  0844               	movwf	(___flmul@prod)
  6311  078D  00D0               
  6312                           	line	178
  6313                           	
  6314                           l2503:	
  6315  078E                     	movlw	01h
  6316  078E  3001               	addwf	(___flmul@temp),f
  6317  078F  07D4               	skipnc
  6318  0790  1803               	incf	(___flmul@temp+1),f
  6319  0791  0AD5               	movlw	0
  6320  0792  3000               	addwf	(___flmul@temp+1),f
  6321  0793  07D5               	goto	l2505
  6322  0794  2F96               	line	179
  6323                           	
  6324                           l695:	
  6325  0795                     	goto	l2505
  6326  0795  2F96               	line	180
  6327                           	
  6328                           l694:	
  6329  0796                     	line	183
  6330                           	
  6331                           l2505:	
  6332  0796                     	movf	(___flmul@temp+1),w
  6333  0796  0855               	xorlw	80h
  6334  0797  3A80               	movwf	btemp+1
  6335  0798  00FF               	movlw	(0)^80h
  6336  0799  3080               	subwf	btemp+1,w
  6337  079A  027F               	skipz
  6338  079B  1D03               	goto	u3395
  6339  079C  2F9F               	movlw	0FFh
  6340  079D  30FF               	subwf	(___flmul@temp),w
  6341  079E  0254               u3395:
  6342  079F                     
  6343                           	skipc
  6344  079F  1C03               	goto	u3391
  6345  07A0  2FA2               	goto	u3390
  6346  07A1  2FA3               u3391:
  6347  07A2                     	goto	l2509
  6348  07A2  2FAE               u3390:
  6349  07A3                     	line	184
  6350                           	
  6351                           l2507:	
  6352  07A3                     	movlw	07Fh
  6353  07A3  307F               	bcf	status, 5	;RP0=0, select bank0
  6354  07A4  1283               	bcf	status, 6	;RP1=0, select bank0
  6355  07A5  1303               	movwf	(___flmul@prod+3)
  6356  07A6  00D3               	movlw	080h
  6357  07A7  3080               	movwf	(___flmul@prod+2)
  6358  07A8  00D2               	movlw	0
  6359  07A9  3000               	movwf	(___flmul@prod+1)
  6360  07AA  00D1               	movlw	0
  6361  07AB  3000               	movwf	(___flmul@prod)
  6362  07AC  00D0               
  6363                           	line	185
  6364                           	goto	l697
  6365  07AD  2FE5               	line	187
  6366                           	
  6367                           l696:	
  6368  07AE                     	
  6369                           l2509:	
  6370  07AE                     	bcf	status, 5	;RP0=0, select bank0
  6371  07AE  1283               	bcf	status, 6	;RP1=0, select bank0
  6372  07AF  1303               	movf	(___flmul@temp+1),w
  6373  07B0  0855               	xorlw	80h
  6374  07B1  3A80               	movwf	btemp+1
  6375  07B2  00FF               	movlw	(0)^80h
  6376  07B3  3080               	subwf	btemp+1,w
  6377  07B4  027F               	skipz
  6378  07B5  1D03               	goto	u3405
  6379  07B6  2FB9               	movlw	01h
  6380  07B7  3001               	subwf	(___flmul@temp),w
  6381  07B8  0254               u3405:
  6382  07B9                     
  6383                           	skipnc
  6384  07B9  1803               	goto	u3401
  6385  07BA  2FBC               	goto	u3400
  6386  07BB  2FBD               u3401:
  6387  07BC                     	goto	l2515
  6388  07BC  2FC9               u3400:
  6389  07BD                     	line	188
  6390                           	
  6391                           l2511:	
  6392  07BD                     	movlw	high highword(0)
  6393  07BD  3000               	bcf	status, 5	;RP0=0, select bank0
  6394  07BE  1283               	bcf	status, 6	;RP1=0, select bank0
  6395  07BF  1303               	movwf	(___flmul@prod+3)
  6396  07C0  00D3               	movlw	low highword(0)
  6397  07C1  3000               	movwf	(___flmul@prod+2)
  6398  07C2  00D2               	movlw	high(0)
  6399  07C3  3000               	movwf	(___flmul@prod+1)
  6400  07C4  00D1               	movlw	low(0)
  6401  07C5  3000               	movwf	(___flmul@prod)
  6402  07C6  00D0               
  6403                           	line	190
  6404                           	
  6405                           l2513:	
  6406  07C7                     	clrf	(___flmul@sign)
  6407  07C7  01C9               	line	191
  6408                           	goto	l697
  6409  07C8  2FE5               	line	192
  6410                           	
  6411                           l698:	
  6412  07C9                     	line	194
  6413                           	
  6414                           l2515:	
  6415  07C9                     	bcf	status, 5	;RP0=0, select bank0
  6416  07C9  1283               	bcf	status, 6	;RP1=0, select bank0
  6417  07CA  1303               	movf	(___flmul@temp),w
  6418  07CB  0854               	movwf	(??___flmul+0)+0
  6419  07CC  00C4               	movf	(??___flmul+0)+0,w
  6420  07CD  0844               	movwf	(___flmul@bexp)
  6421  07CE  00CF               	line	195
  6422                           	movlw	0FFh
  6423  07CF  30FF               	andwf	(___flmul@prod),f
  6424  07D0  05D0               	movlw	0FFh
  6425  07D1  30FF               	andwf	(___flmul@prod+1),f
  6426  07D2  05D1               	movlw	07Fh
  6427  07D3  307F               	andwf	(___flmul@prod+2),f
  6428  07D4  05D2               	movlw	0
  6429  07D5  3000               	andwf	(___flmul@prod+3),f
  6430  07D6  05D3               	line	196
  6431                           	
  6432                           l2517:	
  6433  07D7                     	btfss	(___flmul@bexp),(0)&7
  6434  07D7  1C4F               	goto	u3411
  6435  07D8  2FDA               	goto	u3410
  6436  07D9  2FDB               u3411:
  6437  07DA                     	goto	l2521
  6438  07DA  2FDD               u3410:
  6439  07DB                     	line	197
  6440                           	
  6441                           l2519:	
  6442  07DB                     	bsf	0+(___flmul@prod)+02h+(7/8),(7)&7
  6443  07DB  17D2               	goto	l2521
  6444  07DC  2FDD               	line	198
  6445                           	
  6446                           l700:	
  6447  07DD                     	line	199
  6448                           	
  6449                           l2521:	
  6450  07DD                     	movf	(___flmul@bexp),w
  6451  07DD  084F               	movwf	(??___flmul+0)+0
  6452  07DE  00C4               	clrc
  6453  07DF  1003               	rrf	(??___flmul+0)+0,w
  6454  07E0  0C44               	movwf	(??___flmul+1)+0
  6455  07E1  00C5               	movf	(??___flmul+1)+0,w
  6456  07E2  0845               	movwf	0+(___flmul@prod)+03h
  6457  07E3  00D3               	goto	l697
  6458  07E4  2FE5               	line	200
  6459                           	
  6460                           l699:	
  6461  07E5                     	
  6462                           l697:	
  6463  07E5                     	line	201
  6464                           	movf	(___flmul@sign),w
  6465  07E5  0849               	movwf	(??___flmul+0)+0
  6466  07E6  00C4               	movf	(??___flmul+0)+0,w
  6467  07E7  0844               	iorwf	0+(___flmul@prod)+03h,f
  6468  07E8  04D3               	line	203
  6469                           	
  6470                           l2523:	
  6471  07E9                     	movf	(___flmul@prod+3),w
  6472  07E9  0853               	movwf	(?___flmul+3)
  6473  07EA  00BF               	movf	(___flmul@prod+2),w
  6474  07EB  0852               	movwf	(?___flmul+2)
  6475  07EC  00BE               	movf	(___flmul@prod+1),w
  6476  07ED  0851               	movwf	(?___flmul+1)
  6477  07EE  00BD               	movf	(___flmul@prod),w
  6478  07EF  0850               	movwf	(?___flmul)
  6479  07F0  00BC               
  6480                           	goto	l685
  6481  07F1  2FF2               	
  6482                           l2525:	
  6483  07F2                     	line	205
  6484                           	
  6485                           l685:	
  6486  07F2                     	return
  6487  07F2  0008               	opt stack 0
  6488                           GLOBAL	__end_of___flmul
  6489                           	__end_of___flmul:
  6490  07F3                     	signat	___flmul,8316
  6491                           	global	__Umul8_16
  6492                           
  6493 ;; *************** function __Umul8_16 *****************
  6494 ;; Defined at:
  6495 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6496 ;; Parameters:    Size  Location     Type
  6497 ;;  multiplier      1    wreg     unsigned char 
  6498 ;;  multiplicand    1    0[COMMON] unsigned char 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  multiplier      1    8[COMMON] unsigned char 
  6501 ;;  word_mpld       2    6[COMMON] unsigned int 
  6502 ;;  product         2    4[COMMON] unsigned int 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  2    0[COMMON] unsigned int 
  6505 ;; Registers used:
  6506 ;;		wreg, status,2, status,0
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6512 ;;      Params:         2       0       0       0       0
  6513 ;;      Locals:         5       0       0       0       0
  6514 ;;      Temps:          2       0       0       0       0
  6515 ;;      Totals:         9       0       0       0       0
  6516 ;;Total ram usage:        9 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; This function calls:
  6519 ;;		Nothing
  6520 ;; This function is called by:
  6521 ;;		___flmul
  6522 ;; This function uses a non-reentrant model
  6523 ;;
  6524                           psect	text19,local,class=CODE,delta=2,merge=1,group=1
  6525                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6526                           	line	4
  6527                           global __ptext19
  6528                           __ptext19:	;psect for function __Umul8_16
  6529  08AD                     psect	text19
  6530                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul8_16.c"
  6531                           	line	4
  6532                           	global	__size_of__Umul8_16
  6533                           	__size_of__Umul8_16	equ	__end_of__Umul8_16-__Umul8_16
  6534  002A                     	
  6535                           __Umul8_16:	
  6536  08AD                     ;incstack = 0
  6537                           	opt	stack 6
  6538                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6539                           ;__Umul8_16@multiplier stored from wreg
  6540                           	movwf	(__Umul8_16@multiplier)
  6541  08AD  00F8               	line	5
  6542                           	
  6543                           l1925:	
  6544  08AE                     	clrf	(__Umul8_16@product)
  6545  08AE  01F4               	clrf	(__Umul8_16@product+1)
  6546  08AF  01F5               	line	6
  6547                           	
  6548                           l1927:	
  6549  08B0                     	movf	(__Umul8_16@multiplicand),w
  6550  08B0  0870               	movwf	(??__Umul8_16+0)+0
  6551  08B1  00F2               	clrf	(??__Umul8_16+0)+0+1
  6552  08B2  01F3               	movf	0+(??__Umul8_16+0)+0,w
  6553  08B3  0872               	movwf	(__Umul8_16@word_mpld)
  6554  08B4  00F6               	movf	1+(??__Umul8_16+0)+0,w
  6555  08B5  0873               	movwf	(__Umul8_16@word_mpld+1)
  6556  08B6  00F7               	goto	l1929
  6557  08B7  28B8               	line	50
  6558                           	
  6559                           l722:	
  6560  08B8                     	line	51
  6561                           	
  6562                           l1929:	
  6563  08B8                     	btfss	(__Umul8_16@multiplier),(0)&7
  6564  08B8  1C78               	goto	u2141
  6565  08B9  28BB               	goto	u2140
  6566  08BA  28BC               u2141:
  6567  08BB                     	goto	l723
  6568  08BB  28C2               u2140:
  6569  08BC                     	line	52
  6570                           	
  6571                           l1931:	
  6572  08BC                     	movf	(__Umul8_16@word_mpld),w
  6573  08BC  0876               	addwf	(__Umul8_16@product),f
  6574  08BD  07F4               	skipnc
  6575  08BE  1803               	incf	(__Umul8_16@product+1),f
  6576  08BF  0AF5               	movf	(__Umul8_16@word_mpld+1),w
  6577  08C0  0877               	addwf	(__Umul8_16@product+1),f
  6578  08C1  07F5               	line	53
  6579                           	
  6580                           l723:	
  6581  08C2                     	line	54
  6582                           	movlw	01h
  6583  08C2  3001               	
  6584                           u2155:
  6585  08C3                     	clrc
  6586  08C3  1003               	rlf	(__Umul8_16@word_mpld),f
  6587  08C4  0DF6               	rlf	(__Umul8_16@word_mpld+1),f
  6588  08C5  0DF7               	addlw	-1
  6589  08C6  3EFF               	skipz
  6590  08C7  1D03               	goto	u2155
  6591  08C8  28C3               	line	55
  6592                           	clrc
  6593  08C9  1003               	rrf	(__Umul8_16@multiplier),f
  6594  08CA  0CF8               
  6595                           	line	56
  6596                           	
  6597                           l1933:	
  6598  08CB                     	movf	((__Umul8_16@multiplier)),w
  6599  08CB  0878               	btfss	status,2
  6600  08CC  1D03               	goto	u2161
  6601  08CD  28CF               	goto	u2160
  6602  08CE  28D0               u2161:
  6603  08CF                     	goto	l1929
  6604  08CF  28B8               u2160:
  6605  08D0                     	goto	l1935
  6606  08D0  28D1               	
  6607                           l724:	
  6608  08D1                     	line	59
  6609                           	
  6610                           l1935:	
  6611  08D1                     	movf	(__Umul8_16@product+1),w
  6612  08D1  0875               	movwf	(?__Umul8_16+1)
  6613  08D2  00F1               	movf	(__Umul8_16@product),w
  6614  08D3  0874               	movwf	(?__Umul8_16)
  6615  08D4  00F0               	goto	l725
  6616  08D5  28D6               	
  6617                           l1937:	
  6618  08D6                     	line	60
  6619                           	
  6620                           l725:	
  6621  08D6                     	return
  6622  08D6  0008               	opt stack 0
  6623                           GLOBAL	__end_of__Umul8_16
  6624                           	__end_of__Umul8_16:
  6625  08D7                     	signat	__Umul8_16,8314
  6626                           	global	___fldiv
  6627                           
  6628 ;; *************** function ___fldiv *****************
  6629 ;; Defined at:
  6630 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  6631 ;; Parameters:    Size  Location     Type
  6632 ;;  a               4   54[BANK0 ] unsigned int 
  6633 ;;  b               4   58[BANK0 ] unsigned int 
  6634 ;; Auto vars:     Size  Location     Type
  6635 ;;  grs             4   74[BANK0 ] unsigned long 
  6636 ;;  rem             4   67[BANK0 ] unsigned long 
  6637 ;;  new_exp         2   72[BANK0 ] int 
  6638 ;;  aexp            1   79[BANK0 ] unsigned char 
  6639 ;;  bexp            1   78[BANK0 ] unsigned char 
  6640 ;;  sign            1   71[BANK0 ] unsigned char 
  6641 ;; Return value:  Size  Location     Type
  6642 ;;                  4   54[BANK0 ] unsigned char 
  6643 ;; Registers used:
  6644 ;;		wreg, status,2, status,0, btemp+1
  6645 ;; Tracked objects:
  6646 ;;		On entry : 0/0
  6647 ;;		On exit  : 0/0
  6648 ;;		Unchanged: 0/0
  6649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6650 ;;      Params:         0       8       0       0       0
  6651 ;;      Locals:         0      13       0       0       0
  6652 ;;      Temps:          0       5       0       0       0
  6653 ;;      Totals:         0      26       0       0       0
  6654 ;;Total ram usage:       26 bytes
  6655 ;; Hardware stack levels used:    1
  6656 ;; This function calls:
  6657 ;;		Nothing
  6658 ;; This function is called by:
  6659 ;;		_main
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           psect	text20,local,class=CODE,delta=2,merge=1,group=1
  6663                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  6664                           	line	8
  6665                           global __ptext20
  6666                           __ptext20:	;psect for function ___fldiv
  6667  0DF7                     psect	text20
  6668                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcdiv.c"
  6669                           	line	8
  6670                           	global	__size_of___fldiv
  6671                           	__size_of___fldiv	equ	__end_of___fldiv-___fldiv
  6672  0209                     	
  6673                           ___fldiv:	
  6674  0DF7                     ;incstack = 0
  6675                           	opt	stack 7
  6676                           ; Regs used in ___fldiv: [wreg+status,2+status,0+btemp+1]
  6677                           	line	26
  6678                           	
  6679                           l2245:	
  6680  0DF7                     	bcf	status, 5	;RP0=0, select bank0
  6681  0DF7  1283               	bcf	status, 6	;RP1=0, select bank0
  6682  0DF8  1303               	movf	0+(___fldiv@b)+03h,w
  6683  0DF9  085D               	andlw	080h
  6684  0DFA  3980               	movwf	(??___fldiv+0)+0
  6685  0DFB  00DE               	movf	(??___fldiv+0)+0,w
  6686  0DFC  085E               	movwf	(___fldiv@sign)
  6687  0DFD  00E7               	line	27
  6688                           	
  6689                           l2247:	
  6690  0DFE                     	movf	0+(___fldiv@b)+03h,w
  6691  0DFE  085D               	movwf	(??___fldiv+0)+0
  6692  0DFF  00DE               	addwf	(??___fldiv+0)+0,w
  6693  0E00  075E               	movwf	(??___fldiv+1)+0
  6694  0E01  00DF               	movf	(??___fldiv+1)+0,w
  6695  0E02  085F               	movwf	(___fldiv@bexp)
  6696  0E03  00EE               	line	28
  6697                           	
  6698                           l2249:	
  6699  0E04                     	btfss	0+(___fldiv@b)+02h,(7)&7
  6700  0E04  1FDC               	goto	u2761
  6701  0E05  2E07               	goto	u2760
  6702  0E06  2E08               u2761:
  6703  0E07                     	goto	l2253
  6704  0E07  2E0A               u2760:
  6705  0E08                     	line	29
  6706                           	
  6707                           l2251:	
  6708  0E08                     	bsf	(___fldiv@bexp)+(0/8),(0)&7
  6709  0E08  146E               	goto	l2253
  6710  0E09  2E0A               	line	30
  6711                           	
  6712                           l638:	
  6713  0E0A                     	line	33
  6714                           	
  6715                           l2253:	
  6716  0E0A                     	movf	((___fldiv@bexp)),w
  6717  0E0A  086E               	btfsc	status,2
  6718  0E0B  1903               	goto	u2771
  6719  0E0C  2E0E               	goto	u2770
  6720  0E0D  2E0F               u2771:
  6721  0E0E                     	goto	l2263
  6722  0E0E  2E20               u2770:
  6723  0E0F                     	line	35
  6724                           	
  6725                           l2255:	
  6726  0E0F                     		incf	((___fldiv@bexp)),w
  6727  0E0F  0A6E               	btfss	status,2
  6728  0E10  1D03               	goto	u2781
  6729  0E11  2E13               	goto	u2780
  6730  0E12  2E14               u2781:
  6731  0E13                     	goto	l2259
  6732  0E13  2E1D               u2780:
  6733  0E14                     	line	37
  6734                           	
  6735                           l2257:	
  6736  0E14                     	movlw	0x0
  6737  0E14  3000               	movwf	(___fldiv@b+3)
  6738  0E15  00DD               	movlw	0x0
  6739  0E16  3000               	movwf	(___fldiv@b+2)
  6740  0E17  00DC               	movlw	0x0
  6741  0E18  3000               	movwf	(___fldiv@b+1)
  6742  0E19  00DB               	movlw	0x0
  6743  0E1A  3000               	movwf	(___fldiv@b)
  6744  0E1B  00DA               
  6745                           	goto	l2259
  6746  0E1C  2E1D               	line	38
  6747                           	
  6748                           l640:	
  6749  0E1D                     	line	40
  6750                           	
  6751                           l2259:	
  6752  0E1D                     	bsf	(___fldiv@b)+(23/8),(23)&7
  6753  0E1D  17DC               	line	42
  6754                           	
  6755                           l2261:	
  6756  0E1E                     	clrf	0+(___fldiv@b)+03h
  6757  0E1E  01DD               	line	43
  6758                           	goto	l2265
  6759  0E1F  2E29               	line	44
  6760                           	
  6761                           l639:	
  6762  0E20                     	line	46
  6763                           	
  6764                           l2263:	
  6765  0E20                     	movlw	0x0
  6766  0E20  3000               	movwf	(___fldiv@b+3)
  6767  0E21  00DD               	movlw	0x0
  6768  0E22  3000               	movwf	(___fldiv@b+2)
  6769  0E23  00DC               	movlw	0x0
  6770  0E24  3000               	movwf	(___fldiv@b+1)
  6771  0E25  00DB               	movlw	0x0
  6772  0E26  3000               	movwf	(___fldiv@b)
  6773  0E27  00DA               
  6774                           	goto	l2265
  6775  0E28  2E29               	line	47
  6776                           	
  6777                           l641:	
  6778  0E29                     	line	49
  6779                           	
  6780                           l2265:	
  6781  0E29                     	movf	0+(___fldiv@a)+03h,w
  6782  0E29  0859               	andlw	080h
  6783  0E2A  3980               	movwf	(??___fldiv+0)+0
  6784  0E2B  00DE               	movf	(??___fldiv+0)+0,w
  6785  0E2C  085E               	xorwf	(___fldiv@sign),f
  6786  0E2D  06E7               	line	50
  6787                           	
  6788                           l2267:	
  6789  0E2E                     	movf	0+(___fldiv@a)+03h,w
  6790  0E2E  0859               	movwf	(??___fldiv+0)+0
  6791  0E2F  00DE               	addwf	(??___fldiv+0)+0,w
  6792  0E30  075E               	movwf	(??___fldiv+1)+0
  6793  0E31  00DF               	movf	(??___fldiv+1)+0,w
  6794  0E32  085F               	movwf	(___fldiv@aexp)
  6795  0E33  00EF               	line	51
  6796                           	
  6797                           l2269:	
  6798  0E34                     	btfss	0+(___fldiv@a)+02h,(7)&7
  6799  0E34  1FD8               	goto	u2791
  6800  0E35  2E37               	goto	u2790
  6801  0E36  2E38               u2791:
  6802  0E37                     	goto	l2273
  6803  0E37  2E3A               u2790:
  6804  0E38                     	line	52
  6805                           	
  6806                           l2271:	
  6807  0E38                     	bsf	(___fldiv@aexp)+(0/8),(0)&7
  6808  0E38  146F               	goto	l2273
  6809  0E39  2E3A               	line	53
  6810                           	
  6811                           l642:	
  6812  0E3A                     	line	56
  6813                           	
  6814                           l2273:	
  6815  0E3A                     	movf	((___fldiv@aexp)),w
  6816  0E3A  086F               	btfsc	status,2
  6817  0E3B  1903               	goto	u2801
  6818  0E3C  2E3E               	goto	u2800
  6819  0E3D  2E3F               u2801:
  6820  0E3E                     	goto	l2283
  6821  0E3E  2E50               u2800:
  6822  0E3F                     	line	58
  6823                           	
  6824                           l2275:	
  6825  0E3F                     		incf	((___fldiv@aexp)),w
  6826  0E3F  0A6F               	btfss	status,2
  6827  0E40  1D03               	goto	u2811
  6828  0E41  2E43               	goto	u2810
  6829  0E42  2E44               u2811:
  6830  0E43                     	goto	l2279
  6831  0E43  2E4D               u2810:
  6832  0E44                     	line	60
  6833                           	
  6834                           l2277:	
  6835  0E44                     	movlw	0x0
  6836  0E44  3000               	movwf	(___fldiv@a+3)
  6837  0E45  00D9               	movlw	0x0
  6838  0E46  3000               	movwf	(___fldiv@a+2)
  6839  0E47  00D8               	movlw	0x0
  6840  0E48  3000               	movwf	(___fldiv@a+1)
  6841  0E49  00D7               	movlw	0x0
  6842  0E4A  3000               	movwf	(___fldiv@a)
  6843  0E4B  00D6               
  6844                           	goto	l2279
  6845  0E4C  2E4D               	line	61
  6846                           	
  6847                           l644:	
  6848  0E4D                     	line	63
  6849                           	
  6850                           l2279:	
  6851  0E4D                     	bsf	(___fldiv@a)+(23/8),(23)&7
  6852  0E4D  17D8               	line	65
  6853                           	
  6854                           l2281:	
  6855  0E4E                     	clrf	0+(___fldiv@a)+03h
  6856  0E4E  01D9               	line	66
  6857                           	goto	l645
  6858  0E4F  2E58               	line	67
  6859                           	
  6860                           l643:	
  6861  0E50                     	line	69
  6862                           	
  6863                           l2283:	
  6864  0E50                     	movlw	0x0
  6865  0E50  3000               	movwf	(___fldiv@a+3)
  6866  0E51  00D9               	movlw	0x0
  6867  0E52  3000               	movwf	(___fldiv@a+2)
  6868  0E53  00D8               	movlw	0x0
  6869  0E54  3000               	movwf	(___fldiv@a+1)
  6870  0E55  00D7               	movlw	0x0
  6871  0E56  3000               	movwf	(___fldiv@a)
  6872  0E57  00D6               
  6873                           	line	70
  6874                           	
  6875                           l645:	
  6876  0E58                     	line	75
  6877                           	movf	(___fldiv@a+3),w
  6878  0E58  0859               	iorwf	(___fldiv@a+2),w
  6879  0E59  0458               	iorwf	(___fldiv@a+1),w
  6880  0E5A  0457               	iorwf	(___fldiv@a),w
  6881  0E5B  0456               	skipz
  6882  0E5C  1D03               	goto	u2821
  6883  0E5D  2E5F               	goto	u2820
  6884  0E5E  2E60               u2821:
  6885  0E5F                     	goto	l2293
  6886  0E5F  2E7A               u2820:
  6887  0E60                     	line	76
  6888                           	
  6889                           l2285:	
  6890  0E60                     	movlw	high highword(0)
  6891  0E60  3000               	movwf	(___fldiv@b+3)
  6892  0E61  00DD               	movlw	low highword(0)
  6893  0E62  3000               	movwf	(___fldiv@b+2)
  6894  0E63  00DC               	movlw	high(0)
  6895  0E64  3000               	movwf	(___fldiv@b+1)
  6896  0E65  00DB               	movlw	low(0)
  6897  0E66  3000               	movwf	(___fldiv@b)
  6898  0E67  00DA               
  6899                           	line	77
  6900                           	movlw	080h
  6901  0E68  3080               	iorwf	0+(___fldiv@b)+02h,f
  6902  0E69  04DC               	movlw	07Fh
  6903  0E6A  307F               	iorwf	1+(___fldiv@b)+02h,f
  6904  0E6B  04DD               	line	78
  6905                           	
  6906                           l2287:	
  6907  0E6C                     	movf	(___fldiv@sign),w
  6908  0E6C  0867               	movwf	(??___fldiv+0)+0
  6909  0E6D  00DE               	movf	(??___fldiv+0)+0,w
  6910  0E6E  085E               	iorwf	0+(___fldiv@b)+03h,f
  6911  0E6F  04DD               	line	79
  6912                           	
  6913                           l2289:	
  6914  0E70                     	movf	(___fldiv@b+3),w
  6915  0E70  085D               	movwf	(?___fldiv+3)
  6916  0E71  00D9               	movf	(___fldiv@b+2),w
  6917  0E72  085C               	movwf	(?___fldiv+2)
  6918  0E73  00D8               	movf	(___fldiv@b+1),w
  6919  0E74  085B               	movwf	(?___fldiv+1)
  6920  0E75  00D7               	movf	(___fldiv@b),w
  6921  0E76  085A               	movwf	(?___fldiv)
  6922  0E77  00D6               
  6923                           	goto	l647
  6924  0E78  2FFF               	
  6925                           l2291:	
  6926  0E79                     	goto	l647
  6927  0E79  2FFF               	line	80
  6928                           	
  6929                           l646:	
  6930  0E7A                     	line	83
  6931                           	
  6932                           l2293:	
  6933  0E7A                     	movf	((___fldiv@bexp)),w
  6934  0E7A  086E               	btfss	status,2
  6935  0E7B  1D03               	goto	u2831
  6936  0E7C  2E7E               	goto	u2830
  6937  0E7D  2E7F               u2831:
  6938  0E7E                     	goto	l2299
  6939  0E7E  2E91               u2830:
  6940  0E7F                     	line	84
  6941                           	
  6942                           l2295:	
  6943  0E7F                     	movlw	high highword(0)
  6944  0E7F  3000               	movwf	(___fldiv@b+3)
  6945  0E80  00DD               	movlw	low highword(0)
  6946  0E81  3000               	movwf	(___fldiv@b+2)
  6947  0E82  00DC               	movlw	high(0)
  6948  0E83  3000               	movwf	(___fldiv@b+1)
  6949  0E84  00DB               	movlw	low(0)
  6950  0E85  3000               	movwf	(___fldiv@b)
  6951  0E86  00DA               
  6952                           	line	85
  6953                           	movf	(___fldiv@b+3),w
  6954  0E87  085D               	movwf	(?___fldiv+3)
  6955  0E88  00D9               	movf	(___fldiv@b+2),w
  6956  0E89  085C               	movwf	(?___fldiv+2)
  6957  0E8A  00D8               	movf	(___fldiv@b+1),w
  6958  0E8B  085B               	movwf	(?___fldiv+1)
  6959  0E8C  00D7               	movf	(___fldiv@b),w
  6960  0E8D  085A               	movwf	(?___fldiv)
  6961  0E8E  00D6               
  6962                           	goto	l647
  6963  0E8F  2FFF               	
  6964                           l2297:	
  6965  0E90                     	goto	l647
  6966  0E90  2FFF               	line	86
  6967                           	
  6968                           l648:	
  6969  0E91                     	line	89
  6970                           	
  6971                           l2299:	
  6972  0E91                     	movf	(___fldiv@aexp),w
  6973  0E91  086F               	movwf	(??___fldiv+0)+0
  6974  0E92  00DE               	clrf	(??___fldiv+0)+0+1
  6975  0E93  01DF               	comf	(??___fldiv+0)+0,f
  6976  0E94  09DE               	comf	(??___fldiv+0)+1,f
  6977  0E95  09DF               	incf	(??___fldiv+0)+0,f
  6978  0E96  0ADE               	skipnz
  6979  0E97  1903               	incf	(??___fldiv+0)+1,f
  6980  0E98  0ADF               	movf	(___fldiv@bexp),w
  6981  0E99  086E               	addwf	0+(??___fldiv+0)+0,w
  6982  0E9A  075E               	movwf	(??___fldiv+2)+0
  6983  0E9B  00E0               	movf	1+(??___fldiv+0)+0,w
  6984  0E9C  085F               	skipnc
  6985  0E9D  1803               	incf	1+(??___fldiv+0)+0,w
  6986  0E9E  0A5F               	movwf	((??___fldiv+2)+0)+1
  6987  0E9F  00E1               	movf	0+(??___fldiv+2)+0,w
  6988  0EA0  0860               	addlw	low(07Fh)
  6989  0EA1  3E7F               	movwf	(___fldiv@new_exp)
  6990  0EA2  00E8               	movf	1+(??___fldiv+2)+0,w
  6991  0EA3  0861               	skipnc
  6992  0EA4  1803               	addlw	1
  6993  0EA5  3E01               	addlw	high(07Fh)
  6994  0EA6  3E00               	movwf	1+(___fldiv@new_exp)
  6995  0EA7  00E9               	line	92
  6996                           	
  6997                           l2301:	
  6998  0EA8                     	movf	(___fldiv@b+3),w
  6999  0EA8  085D               	movwf	(___fldiv@rem+3)
  7000  0EA9  00E6               	movf	(___fldiv@b+2),w
  7001  0EAA  085C               	movwf	(___fldiv@rem+2)
  7002  0EAB  00E5               	movf	(___fldiv@b+1),w
  7003  0EAC  085B               	movwf	(___fldiv@rem+1)
  7004  0EAD  00E4               	movf	(___fldiv@b),w
  7005  0EAE  085A               	movwf	(___fldiv@rem)
  7006  0EAF  00E3               
  7007                           	line	93
  7008                           	
  7009                           l2303:	
  7010  0EB0                     	movlw	high highword(0)
  7011  0EB0  3000               	movwf	(___fldiv@b+3)
  7012  0EB1  00DD               	movlw	low highword(0)
  7013  0EB2  3000               	movwf	(___fldiv@b+2)
  7014  0EB3  00DC               	movlw	high(0)
  7015  0EB4  3000               	movwf	(___fldiv@b+1)
  7016  0EB5  00DB               	movlw	low(0)
  7017  0EB6  3000               	movwf	(___fldiv@b)
  7018  0EB7  00DA               
  7019                           	line	94
  7020                           	
  7021                           l2305:	
  7022  0EB8                     	movlw	high highword(0)
  7023  0EB8  3000               	movwf	(___fldiv@grs+3)
  7024  0EB9  00ED               	movlw	low highword(0)
  7025  0EBA  3000               	movwf	(___fldiv@grs+2)
  7026  0EBB  00EC               	movlw	high(0)
  7027  0EBC  3000               	movwf	(___fldiv@grs+1)
  7028  0EBD  00EB               	movlw	low(0)
  7029  0EBE  3000               	movwf	(___fldiv@grs)
  7030  0EBF  00EA               
  7031                           	line	96
  7032                           	
  7033                           l2307:	
  7034  0EC0                     	clrf	(___fldiv@aexp)
  7035  0EC0  01EF               	line	97
  7036                           	goto	l2327
  7037  0EC1  2F10               	
  7038                           l650:	
  7039  0EC2                     	line	100
  7040                           	
  7041                           l2309:	
  7042  0EC2                     	movf	((___fldiv@aexp)),w
  7043  0EC2  086F               	btfsc	status,2
  7044  0EC3  1903               	goto	u2841
  7045  0EC4  2EC6               	goto	u2840
  7046  0EC5  2EC7               u2841:
  7047  0EC6                     	goto	l2319
  7048  0EC6  2EE9               u2840:
  7049  0EC7                     	line	101
  7050                           	
  7051                           l2311:	
  7052  0EC7                     	movlw	01h
  7053  0EC7  3001               	movwf	(??___fldiv+0)+0
  7054  0EC8  00DE               u2855:
  7055  0EC9                     	clrc
  7056  0EC9  1003               	rlf	(___fldiv@rem),f
  7057  0ECA  0DE3               	rlf	(___fldiv@rem+1),f
  7058  0ECB  0DE4               	rlf	(___fldiv@rem+2),f
  7059  0ECC  0DE5               	rlf	(___fldiv@rem+3),f
  7060  0ECD  0DE6               	decfsz	(??___fldiv+0)+0
  7061  0ECE  0BDE               	goto	u2855
  7062  0ECF  2EC9               	line	102
  7063                           	movlw	01h
  7064  0ED0  3001               	movwf	(??___fldiv+0)+0
  7065  0ED1  00DE               u2865:
  7066  0ED2                     	clrc
  7067  0ED2  1003               	rlf	(___fldiv@b),f
  7068  0ED3  0DDA               	rlf	(___fldiv@b+1),f
  7069  0ED4  0DDB               	rlf	(___fldiv@b+2),f
  7070  0ED5  0DDC               	rlf	(___fldiv@b+3),f
  7071  0ED6  0DDD               	decfsz	(??___fldiv+0)+0
  7072  0ED7  0BDE               	goto	u2865
  7073  0ED8  2ED2               	line	103
  7074                           	
  7075                           l2313:	
  7076  0ED9                     	btfss	(___fldiv@grs+3),(31)&7
  7077  0ED9  1FED               	goto	u2871
  7078  0EDA  2EDC               	goto	u2870
  7079  0EDB  2EDD               u2871:
  7080  0EDC                     	goto	l2317
  7081  0EDC  2EDF               u2870:
  7082  0EDD                     	line	104
  7083                           	
  7084                           l2315:	
  7085  0EDD                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7086  0EDD  145A               	goto	l2317
  7087  0EDE  2EDF               	line	105
  7088                           	
  7089                           l652:	
  7090  0EDF                     	line	106
  7091                           	
  7092                           l2317:	
  7093  0EDF                     	movlw	01h
  7094  0EDF  3001               	movwf	(??___fldiv+0)+0
  7095  0EE0  00DE               u2885:
  7096  0EE1                     	clrc
  7097  0EE1  1003               	rlf	(___fldiv@grs),f
  7098  0EE2  0DEA               	rlf	(___fldiv@grs+1),f
  7099  0EE3  0DEB               	rlf	(___fldiv@grs+2),f
  7100  0EE4  0DEC               	rlf	(___fldiv@grs+3),f
  7101  0EE5  0DED               	decfsz	(??___fldiv+0)+0
  7102  0EE6  0BDE               	goto	u2885
  7103  0EE7  2EE1               	goto	l2319
  7104  0EE8  2EE9               	line	107
  7105                           	
  7106                           l651:	
  7107  0EE9                     	line	112
  7108                           	
  7109                           l2319:	
  7110  0EE9                     	movf	(___fldiv@a+3),w
  7111  0EE9  0859               	subwf	(___fldiv@rem+3),w
  7112  0EEA  0266               	skipz
  7113  0EEB  1D03               	goto	u2895
  7114  0EEC  2EF7               	movf	(___fldiv@a+2),w
  7115  0EED  0858               	subwf	(___fldiv@rem+2),w
  7116  0EEE  0265               	skipz
  7117  0EEF  1D03               	goto	u2895
  7118  0EF0  2EF7               	movf	(___fldiv@a+1),w
  7119  0EF1  0857               	subwf	(___fldiv@rem+1),w
  7120  0EF2  0264               	skipz
  7121  0EF3  1D03               	goto	u2895
  7122  0EF4  2EF7               	movf	(___fldiv@a),w
  7123  0EF5  0856               	subwf	(___fldiv@rem),w
  7124  0EF6  0263               u2895:
  7125  0EF7                     	skipc
  7126  0EF7  1C03               	goto	u2891
  7127  0EF8  2EFA               	goto	u2890
  7128  0EF9  2EFB               u2891:
  7129  0EFA                     	goto	l2325
  7130  0EFA  2F0B               u2890:
  7131  0EFB                     	line	115
  7132                           	
  7133                           l2321:	
  7134  0EFB                     	bsf	(___fldiv@grs)+(30/8),(30)&7
  7135  0EFB  176D               	line	116
  7136                           	
  7137                           l2323:	
  7138  0EFC                     	movf	(___fldiv@a),w
  7139  0EFC  0856               	subwf	(___fldiv@rem),f
  7140  0EFD  02E3               	movf	(___fldiv@a+1),w
  7141  0EFE  0857               	skipc
  7142  0EFF  1C03               	incfsz	(___fldiv@a+1),w
  7143  0F00  0F57               	subwf	(___fldiv@rem+1),f
  7144  0F01  02E4               	movf	(___fldiv@a+2),w
  7145  0F02  0858               	skipc
  7146  0F03  1C03               	incfsz	(___fldiv@a+2),w
  7147  0F04  0F58               	subwf	(___fldiv@rem+2),f
  7148  0F05  02E5               	movf	(___fldiv@a+3),w
  7149  0F06  0859               	skipc
  7150  0F07  1C03               	incfsz	(___fldiv@a+3),w
  7151  0F08  0F59               	subwf	(___fldiv@rem+3),f
  7152  0F09  02E6               	goto	l2325
  7153  0F0A  2F0B               	line	117
  7154                           	
  7155                           l653:	
  7156  0F0B                     	line	118
  7157                           	
  7158                           l2325:	
  7159  0F0B                     	movlw	low(01h)
  7160  0F0B  3001               	movwf	(??___fldiv+0)+0
  7161  0F0C  00DE               	movf	(??___fldiv+0)+0,w
  7162  0F0D  085E               	addwf	(___fldiv@aexp),f
  7163  0F0E  07EF               	goto	l2327
  7164  0F0F  2F10               	line	119
  7165                           	
  7166                           l649:	
  7167  0F10                     	line	97
  7168                           	
  7169                           l2327:	
  7170  0F10                     	movlw	low(01Ah)
  7171  0F10  301A               	subwf	(___fldiv@aexp),w
  7172  0F11  026F               	skipc
  7173  0F12  1C03               	goto	u2901
  7174  0F13  2F15               	goto	u2900
  7175  0F14  2F16               u2901:
  7176  0F15                     	goto	l2309
  7177  0F15  2EC2               u2900:
  7178  0F16                     	goto	l2329
  7179  0F16  2F17               	
  7180                           l654:	
  7181  0F17                     	line	122
  7182                           	
  7183                           l2329:	
  7184  0F17                     	movf	(___fldiv@rem+3),w
  7185  0F17  0866               	iorwf	(___fldiv@rem+2),w
  7186  0F18  0465               	iorwf	(___fldiv@rem+1),w
  7187  0F19  0464               	iorwf	(___fldiv@rem),w
  7188  0F1A  0463               	skipnz
  7189  0F1B  1903               	goto	u2911
  7190  0F1C  2F1E               	goto	u2910
  7191  0F1D  2F1F               u2911:
  7192  0F1E                     	goto	l2343
  7193  0F1E  2F41               u2910:
  7194  0F1F                     	line	123
  7195                           	
  7196                           l2331:	
  7197  0F1F                     	bsf	(___fldiv@grs)+(0/8),(0)&7
  7198  0F1F  146A               	goto	l2343
  7199  0F20  2F41               	line	124
  7200                           	
  7201                           l655:	
  7202  0F21                     	line	127
  7203                           	goto	l2343
  7204  0F21  2F41               	
  7205                           l657:	
  7206  0F22                     	line	128
  7207                           	
  7208                           l2333:	
  7209  0F22                     	movlw	01h
  7210  0F22  3001               	movwf	(??___fldiv+0)+0
  7211  0F23  00DE               u2925:
  7212  0F24                     	clrc
  7213  0F24  1003               	rlf	(___fldiv@b),f
  7214  0F25  0DDA               	rlf	(___fldiv@b+1),f
  7215  0F26  0DDB               	rlf	(___fldiv@b+2),f
  7216  0F27  0DDC               	rlf	(___fldiv@b+3),f
  7217  0F28  0DDD               	decfsz	(??___fldiv+0)+0
  7218  0F29  0BDE               	goto	u2925
  7219  0F2A  2F24               	line	129
  7220                           	
  7221                           l2335:	
  7222  0F2B                     	btfss	(___fldiv@grs+3),(31)&7
  7223  0F2B  1FED               	goto	u2931
  7224  0F2C  2F2E               	goto	u2930
  7225  0F2D  2F2F               u2931:
  7226  0F2E                     	goto	l2339
  7227  0F2E  2F31               u2930:
  7228  0F2F                     	line	130
  7229                           	
  7230                           l2337:	
  7231  0F2F                     	bsf	(___fldiv@b)+(0/8),(0)&7
  7232  0F2F  145A               	goto	l2339
  7233  0F30  2F31               	line	131
  7234                           	
  7235                           l658:	
  7236  0F31                     	line	132
  7237                           	
  7238                           l2339:	
  7239  0F31                     	movlw	01h
  7240  0F31  3001               	movwf	(??___fldiv+0)+0
  7241  0F32  00DE               u2945:
  7242  0F33                     	clrc
  7243  0F33  1003               	rlf	(___fldiv@grs),f
  7244  0F34  0DEA               	rlf	(___fldiv@grs+1),f
  7245  0F35  0DEB               	rlf	(___fldiv@grs+2),f
  7246  0F36  0DEC               	rlf	(___fldiv@grs+3),f
  7247  0F37  0DED               	decfsz	(??___fldiv+0)+0
  7248  0F38  0BDE               	goto	u2945
  7249  0F39  2F33               	line	133
  7250                           	
  7251                           l2341:	
  7252  0F3A                     	movlw	0FFh
  7253  0F3A  30FF               	addwf	(___fldiv@new_exp),f
  7254  0F3B  07E8               	skipnc
  7255  0F3C  1803               	incf	(___fldiv@new_exp+1),f
  7256  0F3D  0AE9               	movlw	0FFh
  7257  0F3E  30FF               	addwf	(___fldiv@new_exp+1),f
  7258  0F3F  07E9               	goto	l2343
  7259  0F40  2F41               	line	134
  7260                           	
  7261                           l656:	
  7262  0F41                     	line	127
  7263                           	
  7264                           l2343:	
  7265  0F41                     	btfss	(___fldiv@b+2),(23)&7
  7266  0F41  1FDC               	goto	u2951
  7267  0F42  2F44               	goto	u2950
  7268  0F43  2F45               u2951:
  7269  0F44                     	goto	l2333
  7270  0F44  2F22               u2950:
  7271  0F45                     	goto	l2345
  7272  0F45  2F46               	
  7273                           l659:	
  7274  0F46                     	line	139
  7275                           	
  7276                           l2345:	
  7277  0F46                     	clrf	(___fldiv@aexp)
  7278  0F46  01EF               	line	140
  7279                           	
  7280                           l2347:	
  7281  0F47                     	btfss	(___fldiv@grs+3),(31)&7
  7282  0F47  1FED               	goto	u2961
  7283  0F48  2F4A               	goto	u2960
  7284  0F49  2F4B               u2961:
  7285  0F4A                     	goto	l2355
  7286  0F4A  2F6B               u2960:
  7287  0F4B                     	line	141
  7288                           	
  7289                           l2349:	
  7290  0F4B                     	movlw	0FFh
  7291  0F4B  30FF               	andwf	(___fldiv@grs),w
  7292  0F4C  056A               	movwf	(??___fldiv+0)+0
  7293  0F4D  00DE               	movlw	0FFh
  7294  0F4E  30FF               	andwf	(___fldiv@grs+1),w
  7295  0F4F  056B               	movwf	((??___fldiv+0)+0+1)
  7296  0F50  00DF               	movlw	0FFh
  7297  0F51  30FF               	andwf	(___fldiv@grs+2),w
  7298  0F52  056C               	movwf	((??___fldiv+0)+0+2)
  7299  0F53  00E0               	movlw	07Fh
  7300  0F54  307F               	andwf	(___fldiv@grs+3),w
  7301  0F55  056D               	movwf	((??___fldiv+0)+0+3)
  7302  0F56  00E1               	movf	3+(??___fldiv+0)+0,w
  7303  0F57  0861               	iorwf	2+(??___fldiv+0)+0,w
  7304  0F58  0460               	iorwf	1+(??___fldiv+0)+0,w
  7305  0F59  045F               	iorwf	0+(??___fldiv+0)+0,w
  7306  0F5A  045E               	skipnz
  7307  0F5B  1903               	goto	u2971
  7308  0F5C  2F5E               	goto	u2970
  7309  0F5D  2F5F               u2971:
  7310  0F5E                     	goto	l661
  7311  0F5E  2F62               u2970:
  7312  0F5F                     	line	142
  7313                           	
  7314                           l2351:	
  7315  0F5F                     	clrf	(___fldiv@aexp)
  7316  0F5F  01EF               	incf	(___fldiv@aexp),f
  7317  0F60  0AEF               	line	143
  7318                           	goto	l2355
  7319  0F61  2F6B               	line	144
  7320                           	
  7321                           l661:	
  7322  0F62                     	line	145
  7323                           	btfss	(___fldiv@b),(0)&7
  7324  0F62  1C5A               	goto	u2981
  7325  0F63  2F65               	goto	u2980
  7326  0F64  2F66               u2981:
  7327  0F65                     	goto	l2355
  7328  0F65  2F6B               u2980:
  7329  0F66                     	line	146
  7330                           	
  7331                           l2353:	
  7332  0F66                     	clrf	(___fldiv@aexp)
  7333  0F66  01EF               	incf	(___fldiv@aexp),f
  7334  0F67  0AEF               	goto	l2355
  7335  0F68  2F6B               	line	147
  7336                           	
  7337                           l663:	
  7338  0F69                     	goto	l2355
  7339  0F69  2F6B               	line	148
  7340                           	
  7341                           l662:	
  7342  0F6A                     	goto	l2355
  7343  0F6A  2F6B               	line	149
  7344                           	
  7345                           l660:	
  7346  0F6B                     	line	150
  7347                           	
  7348                           l2355:	
  7349  0F6B                     	movf	((___fldiv@aexp)),w
  7350  0F6B  086F               	btfsc	status,2
  7351  0F6C  1903               	goto	u2991
  7352  0F6D  2F6F               	goto	u2990
  7353  0F6E  2F70               u2991:
  7354  0F6F                     	goto	l2365
  7355  0F6F  2FA3               u2990:
  7356  0F70                     	line	151
  7357                           	
  7358                           l2357:	
  7359  0F70                     	movlw	01h
  7360  0F70  3001               	addwf	(___fldiv@b),f
  7361  0F71  07DA               	movlw	0
  7362  0F72  3000               	skipnc
  7363  0F73  1803               movlw 1
  7364  0F74  3001               	addwf	(___fldiv@b+1),f
  7365  0F75  07DB               	movlw	0
  7366  0F76  3000               	skipnc
  7367  0F77  1803               movlw 1
  7368  0F78  3001               	addwf	(___fldiv@b+2),f
  7369  0F79  07DC               	movlw	0
  7370  0F7A  3000               	skipnc
  7371  0F7B  1803               movlw 1
  7372  0F7C  3001               	addwf	(___fldiv@b+3),f
  7373  0F7D  07DD               	line	152
  7374                           	
  7375                           l2359:	
  7376  0F7E                     	btfss	(___fldiv@b+3),(24)&7
  7377  0F7E  1C5D               	goto	u3001
  7378  0F7F  2F81               	goto	u3000
  7379  0F80  2F82               u3001:
  7380  0F81                     	goto	l2365
  7381  0F81  2FA3               u3000:
  7382  0F82                     	line	153
  7383                           	
  7384                           l2361:	
  7385  0F82                     	movf	(___fldiv@b),w
  7386  0F82  085A               	movwf	(??___fldiv+0)+0
  7387  0F83  00DE               	movf	(___fldiv@b+1),w
  7388  0F84  085B               	movwf	((??___fldiv+0)+0+1)
  7389  0F85  00DF               	movf	(___fldiv@b+2),w
  7390  0F86  085C               	movwf	((??___fldiv+0)+0+2)
  7391  0F87  00E0               	movf	(___fldiv@b+3),w
  7392  0F88  085D               	movwf	((??___fldiv+0)+0+3)
  7393  0F89  00E1               	movlw	01h
  7394  0F8A  3001               	movwf	(??___fldiv+4)+0
  7395  0F8B  00E2               u3015:
  7396  0F8C                     	rlf	(??___fldiv+0)+3,w
  7397  0F8C  0D61               	rrf	(??___fldiv+0)+3,f
  7398  0F8D  0CE1               	rrf	(??___fldiv+0)+2,f
  7399  0F8E  0CE0               	rrf	(??___fldiv+0)+1,f
  7400  0F8F  0CDF               	rrf	(??___fldiv+0)+0,f
  7401  0F90  0CDE               u3010:
  7402  0F91                     	decfsz	(??___fldiv+4)+0,f
  7403  0F91  0BE2               	goto	u3015
  7404  0F92  2F8C               	movf	3+(??___fldiv+0)+0,w
  7405  0F93  0861               	movwf	(___fldiv@b+3)
  7406  0F94  00DD               	movf	2+(??___fldiv+0)+0,w
  7407  0F95  0860               	movwf	(___fldiv@b+2)
  7408  0F96  00DC               	movf	1+(??___fldiv+0)+0,w
  7409  0F97  085F               	movwf	(___fldiv@b+1)
  7410  0F98  00DB               	movf	0+(??___fldiv+0)+0,w
  7411  0F99  085E               	movwf	(___fldiv@b)
  7412  0F9A  00DA               
  7413                           	line	154
  7414                           	
  7415                           l2363:	
  7416  0F9B                     	movlw	01h
  7417  0F9B  3001               	addwf	(___fldiv@new_exp),f
  7418  0F9C  07E8               	skipnc
  7419  0F9D  1803               	incf	(___fldiv@new_exp+1),f
  7420  0F9E  0AE9               	movlw	0
  7421  0F9F  3000               	addwf	(___fldiv@new_exp+1),f
  7422  0FA0  07E9               	goto	l2365
  7423  0FA1  2FA3               	line	155
  7424                           	
  7425                           l665:	
  7426  0FA2                     	goto	l2365
  7427  0FA2  2FA3               	line	156
  7428                           	
  7429                           l664:	
  7430  0FA3                     	line	159
  7431                           	
  7432                           l2365:	
  7433  0FA3                     	movf	(___fldiv@new_exp+1),w
  7434  0FA3  0869               	xorlw	80h
  7435  0FA4  3A80               	movwf	btemp+1
  7436  0FA5  00FF               	movlw	(0)^80h
  7437  0FA6  3080               	subwf	btemp+1,w
  7438  0FA7  027F               	skipz
  7439  0FA8  1D03               	goto	u3025
  7440  0FA9  2FAC               	movlw	0FFh
  7441  0FAA  30FF               	subwf	(___fldiv@new_exp),w
  7442  0FAB  0268               u3025:
  7443  0FAC                     
  7444                           	skipc
  7445  0FAC  1C03               	goto	u3021
  7446  0FAD  2FAF               	goto	u3020
  7447  0FAE  2FB0               u3021:
  7448  0FAF                     	goto	l2369
  7449  0FAF  2FBF               u3020:
  7450  0FB0                     	line	160
  7451                           	
  7452                           l2367:	
  7453  0FB0                     	movlw	0FFh
  7454  0FB0  30FF               	bcf	status, 5	;RP0=0, select bank0
  7455  0FB1  1283               	bcf	status, 6	;RP1=0, select bank0
  7456  0FB2  1303               	movwf	(___fldiv@new_exp)
  7457  0FB3  00E8               	movlw	0
  7458  0FB4  3000               	movwf	((___fldiv@new_exp))+1
  7459  0FB5  00E9               	line	161
  7460                           	movlw	high highword(0)
  7461  0FB6  3000               	movwf	(___fldiv@b+3)
  7462  0FB7  00DD               	movlw	low highword(0)
  7463  0FB8  3000               	movwf	(___fldiv@b+2)
  7464  0FB9  00DC               	movlw	high(0)
  7465  0FBA  3000               	movwf	(___fldiv@b+1)
  7466  0FBB  00DB               	movlw	low(0)
  7467  0FBC  3000               	movwf	(___fldiv@b)
  7468  0FBD  00DA               
  7469                           	goto	l2369
  7470  0FBE  2FBF               	line	162
  7471                           	
  7472                           l666:	
  7473  0FBF                     	line	165
  7474                           	
  7475                           l2369:	
  7476  0FBF                     	bcf	status, 5	;RP0=0, select bank0
  7477  0FBF  1283               	bcf	status, 6	;RP1=0, select bank0
  7478  0FC0  1303               	movf	(___fldiv@new_exp+1),w
  7479  0FC1  0869               	xorlw	80h
  7480  0FC2  3A80               	movwf	btemp+1
  7481  0FC3  00FF               	movlw	(0)^80h
  7482  0FC4  3080               	subwf	btemp+1,w
  7483  0FC5  027F               	skipz
  7484  0FC6  1D03               	goto	u3035
  7485  0FC7  2FCA               	movlw	01h
  7486  0FC8  3001               	subwf	(___fldiv@new_exp),w
  7487  0FC9  0268               u3035:
  7488  0FCA                     
  7489                           	skipnc
  7490  0FCA  1803               	goto	u3031
  7491  0FCB  2FCD               	goto	u3030
  7492  0FCC  2FCE               u3031:
  7493  0FCD                     	goto	l667
  7494  0FCD  2FDB               u3030:
  7495  0FCE                     	line	166
  7496                           	
  7497                           l2371:	
  7498  0FCE                     	bcf	status, 5	;RP0=0, select bank0
  7499  0FCE  1283               	bcf	status, 6	;RP1=0, select bank0
  7500  0FCF  1303               	clrf	(___fldiv@new_exp)
  7501  0FD0  01E8               	clrf	(___fldiv@new_exp+1)
  7502  0FD1  01E9               	line	167
  7503                           	
  7504                           l2373:	
  7505  0FD2                     	movlw	high highword(0)
  7506  0FD2  3000               	movwf	(___fldiv@b+3)
  7507  0FD3  00DD               	movlw	low highword(0)
  7508  0FD4  3000               	movwf	(___fldiv@b+2)
  7509  0FD5  00DC               	movlw	high(0)
  7510  0FD6  3000               	movwf	(___fldiv@b+1)
  7511  0FD7  00DB               	movlw	low(0)
  7512  0FD8  3000               	movwf	(___fldiv@b)
  7513  0FD9  00DA               
  7514                           	line	169
  7515                           	
  7516                           l2375:	
  7517  0FDA                     	clrf	(___fldiv@sign)
  7518  0FDA  01E7               	line	170
  7519                           	
  7520                           l667:	
  7521  0FDB                     	line	173
  7522                           	bcf	status, 5	;RP0=0, select bank0
  7523  0FDB  1283               	bcf	status, 6	;RP1=0, select bank0
  7524  0FDC  1303               	movf	(___fldiv@new_exp),w
  7525  0FDD  0868               	movwf	(??___fldiv+0)+0
  7526  0FDE  00DE               	movf	(??___fldiv+0)+0,w
  7527  0FDF  085E               	movwf	(___fldiv@bexp)
  7528  0FE0  00EE               	line	175
  7529                           	
  7530                           l2377:	
  7531  0FE1                     	btfss	(___fldiv@bexp),(0)&7
  7532  0FE1  1C6E               	goto	u3041
  7533  0FE2  2FE4               	goto	u3040
  7534  0FE3  2FE5               u3041:
  7535  0FE4                     	goto	l2381
  7536  0FE4  2FE7               u3040:
  7537  0FE5                     	line	176
  7538                           	
  7539                           l2379:	
  7540  0FE5                     	bsf	0+(___fldiv@b)+02h+(7/8),(7)&7
  7541  0FE5  17DC               	line	177
  7542                           	goto	l669
  7543  0FE6  2FEB               	line	179
  7544                           	
  7545                           l668:	
  7546  0FE7                     	line	180
  7547                           	
  7548                           l2381:	
  7549  0FE7                     	movlw	low(07Fh)
  7550  0FE7  307F               	movwf	(??___fldiv+0)+0
  7551  0FE8  00DE               	movf	(??___fldiv+0)+0,w
  7552  0FE9  085E               	andwf	0+(___fldiv@b)+02h,f
  7553  0FEA  05DC               	line	181
  7554                           	
  7555                           l669:	
  7556  0FEB                     	line	182
  7557                           	movf	(___fldiv@bexp),w
  7558  0FEB  086E               	movwf	(??___fldiv+0)+0
  7559  0FEC  00DE               	clrc
  7560  0FED  1003               	rrf	(??___fldiv+0)+0,w
  7561  0FEE  0C5E               	movwf	(??___fldiv+1)+0
  7562  0FEF  00DF               	movf	(??___fldiv+1)+0,w
  7563  0FF0  085F               	movwf	0+(___fldiv@b)+03h
  7564  0FF1  00DD               	line	183
  7565                           	movf	(___fldiv@sign),w
  7566  0FF2  0867               	movwf	(??___fldiv+0)+0
  7567  0FF3  00DE               	movf	(??___fldiv+0)+0,w
  7568  0FF4  085E               	iorwf	0+(___fldiv@b)+03h,f
  7569  0FF5  04DD               	line	184
  7570                           	
  7571                           l2383:	
  7572  0FF6                     	movf	(___fldiv@b+3),w
  7573  0FF6  085D               	movwf	(?___fldiv+3)
  7574  0FF7  00D9               	movf	(___fldiv@b+2),w
  7575  0FF8  085C               	movwf	(?___fldiv+2)
  7576  0FF9  00D8               	movf	(___fldiv@b+1),w
  7577  0FFA  085B               	movwf	(?___fldiv+1)
  7578  0FFB  00D7               	movf	(___fldiv@b),w
  7579  0FFC  085A               	movwf	(?___fldiv)
  7580  0FFD  00D6               
  7581                           	goto	l647
  7582  0FFE  2FFF               	
  7583                           l2385:	
  7584  0FFF                     	line	185
  7585                           	
  7586                           l647:	
  7587  0FFF                     	return
  7588  0FFF  0008               	opt stack 0
  7589                           GLOBAL	__end_of___fldiv
  7590                           	__end_of___fldiv:
  7591  1000                     	signat	___fldiv,8316
  7592                           	global	___fladd
  7593                           
  7594 ;; *************** function ___fladd *****************
  7595 ;; Defined at:
  7596 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7597 ;; Parameters:    Size  Location     Type
  7598 ;;  b               4    4[BANK0 ] unsigned char 
  7599 ;;  a               4    8[BANK0 ] unsigned char 
  7600 ;; Auto vars:     Size  Location     Type
  7601 ;;  grs             1   27[BANK0 ] unsigned char 
  7602 ;;  bexp            1   26[BANK0 ] unsigned char 
  7603 ;;  aexp            1   25[BANK0 ] unsigned char 
  7604 ;;  signs           1   24[BANK0 ] unsigned char 
  7605 ;; Return value:  Size  Location     Type
  7606 ;;                  4    4[BANK0 ] unsigned char 
  7607 ;; Registers used:
  7608 ;;		wreg, status,2, status,0, btemp+1
  7609 ;; Tracked objects:
  7610 ;;		On entry : 0/0
  7611 ;;		On exit  : 0/0
  7612 ;;		Unchanged: 0/0
  7613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7614 ;;      Params:         0       8       0       0       0
  7615 ;;      Locals:         0       4       0       0       0
  7616 ;;      Temps:          0      12       0       0       0
  7617 ;;      Totals:         0      24       0       0       0
  7618 ;;Total ram usage:       24 bytes
  7619 ;; Hardware stack levels used:    1
  7620 ;; This function calls:
  7621 ;;		Nothing
  7622 ;; This function is called by:
  7623 ;;		_main
  7624 ;; This function uses a non-reentrant model
  7625 ;;
  7626                           psect	text21,local,class=CODE,delta=2,merge=1,group=1
  7627                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7628                           	line	10
  7629                           global __ptext21
  7630                           __ptext21:	;psect for function ___fladd
  7631  01C2                     psect	text21
  7632                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\sprcadd.c"
  7633                           	line	10
  7634                           	global	__size_of___fladd
  7635                           	__size_of___fladd	equ	__end_of___fladd-___fladd
  7636  02BC                     	
  7637                           ___fladd:	
  7638  01C2                     ;incstack = 0
  7639                           	opt	stack 7
  7640                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7641                           	line	21
  7642                           	
  7643                           l2051:	
  7644  01C2                     	bcf	status, 5	;RP0=0, select bank0
  7645  01C2  1283               	bcf	status, 6	;RP1=0, select bank0
  7646  01C3  1303               	movf	0+(___fladd@b)+03h,w
  7647  01C4  0827               	andlw	080h
  7648  01C5  3980               	movwf	(??___fladd+0)+0
  7649  01C6  00AC               	movf	(??___fladd+0)+0,w
  7650  01C7  082C               	movwf	(___fladd@signs)
  7651  01C8  00B8               	line	22
  7652                           	
  7653                           l2053:	
  7654  01C9                     	movf	0+(___fladd@b)+03h,w
  7655  01C9  0827               	movwf	(??___fladd+0)+0
  7656  01CA  00AC               	addwf	(??___fladd+0)+0,w
  7657  01CB  072C               	movwf	(??___fladd+1)+0
  7658  01CC  00AD               	movf	(??___fladd+1)+0,w
  7659  01CD  082D               	movwf	(___fladd@bexp)
  7660  01CE  00BA               	line	23
  7661                           	
  7662                           l2055:	
  7663  01CF                     	btfss	0+(___fladd@b)+02h,(7)&7
  7664  01CF  1FA6               	goto	u2301
  7665  01D0  29D2               	goto	u2300
  7666  01D1  29D3               u2301:
  7667  01D2                     	goto	l2059
  7668  01D2  29D5               u2300:
  7669  01D3                     	line	24
  7670                           	
  7671                           l2057:	
  7672  01D3                     	bsf	(___fladd@bexp)+(0/8),(0)&7
  7673  01D3  143A               	goto	l2059
  7674  01D4  29D5               	line	25
  7675                           	
  7676                           l581:	
  7677  01D5                     	line	28
  7678                           	
  7679                           l2059:	
  7680  01D5                     	movf	((___fladd@bexp)),w
  7681  01D5  083A               	btfsc	status,2
  7682  01D6  1903               	goto	u2311
  7683  01D7  29D9               	goto	u2310
  7684  01D8  29DA               u2311:
  7685  01D9                     	goto	l2069
  7686  01D9  29EB               u2310:
  7687  01DA                     	line	30
  7688                           	
  7689                           l2061:	
  7690  01DA                     		incf	((___fladd@bexp)),w
  7691  01DA  0A3A               	btfss	status,2
  7692  01DB  1D03               	goto	u2321
  7693  01DC  29DE               	goto	u2320
  7694  01DD  29DF               u2321:
  7695  01DE                     	goto	l2065
  7696  01DE  29E8               u2320:
  7697  01DF                     	line	32
  7698                           	
  7699                           l2063:	
  7700  01DF                     	movlw	0x0
  7701  01DF  3000               	movwf	(___fladd@b+3)
  7702  01E0  00A7               	movlw	0x0
  7703  01E1  3000               	movwf	(___fladd@b+2)
  7704  01E2  00A6               	movlw	0x0
  7705  01E3  3000               	movwf	(___fladd@b+1)
  7706  01E4  00A5               	movlw	0x0
  7707  01E5  3000               	movwf	(___fladd@b)
  7708  01E6  00A4               
  7709                           	goto	l2065
  7710  01E7  29E8               	line	33
  7711                           	
  7712                           l583:	
  7713  01E8                     	line	35
  7714                           	
  7715                           l2065:	
  7716  01E8                     	bsf	(___fladd@b)+(23/8),(23)&7
  7717  01E8  17A6               	line	37
  7718                           	
  7719                           l2067:	
  7720  01E9                     	clrf	0+(___fladd@b)+03h
  7721  01E9  01A7               	line	38
  7722                           	goto	l2071
  7723  01EA  29F4               	line	39
  7724                           	
  7725                           l582:	
  7726  01EB                     	line	41
  7727                           	
  7728                           l2069:	
  7729  01EB                     	movlw	0x0
  7730  01EB  3000               	movwf	(___fladd@b+3)
  7731  01EC  00A7               	movlw	0x0
  7732  01ED  3000               	movwf	(___fladd@b+2)
  7733  01EE  00A6               	movlw	0x0
  7734  01EF  3000               	movwf	(___fladd@b+1)
  7735  01F0  00A5               	movlw	0x0
  7736  01F1  3000               	movwf	(___fladd@b)
  7737  01F2  00A4               
  7738                           	goto	l2071
  7739  01F3  29F4               	line	42
  7740                           	
  7741                           l584:	
  7742  01F4                     	line	44
  7743                           	
  7744                           l2071:	
  7745  01F4                     	movf	0+(___fladd@a)+03h,w
  7746  01F4  082B               	andlw	080h
  7747  01F5  3980               	movwf	(??___fladd+0)+0
  7748  01F6  00AC               	movf	(??___fladd+0)+0,w
  7749  01F7  082C               	movwf	(___fladd@aexp)
  7750  01F8  00B9               	line	46
  7751                           	
  7752                           l2073:	
  7753  01F9                     	movf	(___fladd@aexp),w
  7754  01F9  0839               	xorwf	(___fladd@signs),w
  7755  01FA  0638               	skipnz
  7756  01FB  1903               	goto	u2331
  7757  01FC  29FE               	goto	u2330
  7758  01FD  29FF               u2331:
  7759  01FE                     	goto	l2077
  7760  01FE  2A01               u2330:
  7761  01FF                     	line	47
  7762                           	
  7763                           l2075:	
  7764  01FF                     	bsf	(___fladd@signs)+(6/8),(6)&7
  7765  01FF  1738               	goto	l2077
  7766  0200  2A01               	line	48
  7767                           	
  7768                           l585:	
  7769  0201                     	line	49
  7770                           	
  7771                           l2077:	
  7772  0201                     	movf	0+(___fladd@a)+03h,w
  7773  0201  082B               	movwf	(??___fladd+0)+0
  7774  0202  00AC               	addwf	(??___fladd+0)+0,w
  7775  0203  072C               	movwf	(??___fladd+1)+0
  7776  0204  00AD               	movf	(??___fladd+1)+0,w
  7777  0205  082D               	movwf	(___fladd@aexp)
  7778  0206  00B9               	line	50
  7779                           	
  7780                           l2079:	
  7781  0207                     	btfss	0+(___fladd@a)+02h,(7)&7
  7782  0207  1FAA               	goto	u2341
  7783  0208  2A0A               	goto	u2340
  7784  0209  2A0B               u2341:
  7785  020A                     	goto	l2083
  7786  020A  2A0D               u2340:
  7787  020B                     	line	51
  7788                           	
  7789                           l2081:	
  7790  020B                     	bsf	(___fladd@aexp)+(0/8),(0)&7
  7791  020B  1439               	goto	l2083
  7792  020C  2A0D               	line	52
  7793                           	
  7794                           l586:	
  7795  020D                     	line	55
  7796                           	
  7797                           l2083:	
  7798  020D                     	movf	((___fladd@aexp)),w
  7799  020D  0839               	btfsc	status,2
  7800  020E  1903               	goto	u2351
  7801  020F  2A11               	goto	u2350
  7802  0210  2A12               u2351:
  7803  0211                     	goto	l2093
  7804  0211  2A23               u2350:
  7805  0212                     	line	57
  7806                           	
  7807                           l2085:	
  7808  0212                     		incf	((___fladd@aexp)),w
  7809  0212  0A39               	btfss	status,2
  7810  0213  1D03               	goto	u2361
  7811  0214  2A16               	goto	u2360
  7812  0215  2A17               u2361:
  7813  0216                     	goto	l2089
  7814  0216  2A20               u2360:
  7815  0217                     	line	59
  7816                           	
  7817                           l2087:	
  7818  0217                     	movlw	0x0
  7819  0217  3000               	movwf	(___fladd@a+3)
  7820  0218  00AB               	movlw	0x0
  7821  0219  3000               	movwf	(___fladd@a+2)
  7822  021A  00AA               	movlw	0x0
  7823  021B  3000               	movwf	(___fladd@a+1)
  7824  021C  00A9               	movlw	0x0
  7825  021D  3000               	movwf	(___fladd@a)
  7826  021E  00A8               
  7827                           	goto	l2089
  7828  021F  2A20               	line	60
  7829                           	
  7830                           l588:	
  7831  0220                     	line	62
  7832                           	
  7833                           l2089:	
  7834  0220                     	bsf	(___fladd@a)+(23/8),(23)&7
  7835  0220  17AA               	line	64
  7836                           	
  7837                           l2091:	
  7838  0221                     	clrf	0+(___fladd@a)+03h
  7839  0221  01AB               	line	65
  7840                           	goto	l589
  7841  0222  2A2B               	line	66
  7842                           	
  7843                           l587:	
  7844  0223                     	line	68
  7845                           	
  7846                           l2093:	
  7847  0223                     	movlw	0x0
  7848  0223  3000               	movwf	(___fladd@a+3)
  7849  0224  00AB               	movlw	0x0
  7850  0225  3000               	movwf	(___fladd@a+2)
  7851  0226  00AA               	movlw	0x0
  7852  0227  3000               	movwf	(___fladd@a+1)
  7853  0228  00A9               	movlw	0x0
  7854  0229  3000               	movwf	(___fladd@a)
  7855  022A  00A8               
  7856                           	line	69
  7857                           	
  7858                           l589:	
  7859  022B                     	line	75
  7860                           	movf	(___fladd@bexp),w
  7861  022B  083A               	subwf	(___fladd@aexp),w
  7862  022C  0239               	skipnc
  7863  022D  1803               	goto	u2371
  7864  022E  2A30               	goto	u2370
  7865  022F  2A31               u2371:
  7866  0230                     	goto	l2129
  7867  0230  2A77               u2370:
  7868  0231                     	line	77
  7869                           	
  7870                           l2095:	
  7871  0231                     	btfss	(___fladd@signs),(6)&7
  7872  0231  1F38               	goto	u2381
  7873  0232  2A34               	goto	u2380
  7874  0233  2A35               u2381:
  7875  0234                     	goto	l2099
  7876  0234  2A3A               u2380:
  7877  0235                     	line	78
  7878                           	
  7879                           l2097:	
  7880  0235                     	movlw	low(080h)
  7881  0235  3080               	movwf	(??___fladd+0)+0
  7882  0236  00AC               	movf	(??___fladd+0)+0,w
  7883  0237  082C               	xorwf	(___fladd@signs),f
  7884  0238  06B8               	goto	l2099
  7885  0239  2A3A               	line	79
  7886                           	
  7887                           l591:	
  7888  023A                     	line	81
  7889                           	
  7890                           l2099:	
  7891  023A                     	movf	(___fladd@bexp),w
  7892  023A  083A               	movwf	(??___fladd+0)+0
  7893  023B  00AC               	movf	(??___fladd+0)+0,w
  7894  023C  082C               	movwf	(___fladd@grs)
  7895  023D  00BB               	line	82
  7896                           	
  7897                           l2101:	
  7898  023E                     	movf	(___fladd@aexp),w
  7899  023E  0839               	movwf	(??___fladd+0)+0
  7900  023F  00AC               	movf	(??___fladd+0)+0,w
  7901  0240  082C               	movwf	(___fladd@bexp)
  7902  0241  00BA               	line	83
  7903                           	
  7904                           l2103:	
  7905  0242                     	movf	(___fladd@grs),w
  7906  0242  083B               	movwf	(??___fladd+0)+0
  7907  0243  00AC               	movf	(??___fladd+0)+0,w
  7908  0244  082C               	movwf	(___fladd@aexp)
  7909  0245  00B9               	line	84
  7910                           	
  7911                           l2105:	
  7912  0246                     	movf	(___fladd@b),w
  7913  0246  0824               	movwf	(??___fladd+0)+0
  7914  0247  00AC               	movf	(??___fladd+0)+0,w
  7915  0248  082C               	movwf	(___fladd@grs)
  7916  0249  00BB               	line	85
  7917                           	
  7918                           l2107:	
  7919  024A                     	movf	(___fladd@a),w
  7920  024A  0828               	movwf	(??___fladd+0)+0
  7921  024B  00AC               	movf	(??___fladd+0)+0,w
  7922  024C  082C               	movwf	(___fladd@b)
  7923  024D  00A4               	line	86
  7924                           	
  7925                           l2109:	
  7926  024E                     	movf	(___fladd@grs),w
  7927  024E  083B               	movwf	(??___fladd+0)+0
  7928  024F  00AC               	movf	(??___fladd+0)+0,w
  7929  0250  082C               	movwf	(___fladd@a)
  7930  0251  00A8               	line	87
  7931                           	
  7932                           l2111:	
  7933  0252                     	movf	0+(___fladd@b)+01h,w
  7934  0252  0825               	movwf	(??___fladd+0)+0
  7935  0253  00AC               	movf	(??___fladd+0)+0,w
  7936  0254  082C               	movwf	(___fladd@grs)
  7937  0255  00BB               	line	88
  7938                           	
  7939                           l2113:	
  7940  0256                     	movf	0+(___fladd@a)+01h,w
  7941  0256  0829               	movwf	(??___fladd+0)+0
  7942  0257  00AC               	movf	(??___fladd+0)+0,w
  7943  0258  082C               	movwf	0+(___fladd@b)+01h
  7944  0259  00A5               	line	89
  7945                           	
  7946                           l2115:	
  7947  025A                     	movf	(___fladd@grs),w
  7948  025A  083B               	movwf	(??___fladd+0)+0
  7949  025B  00AC               	movf	(??___fladd+0)+0,w
  7950  025C  082C               	movwf	0+(___fladd@a)+01h
  7951  025D  00A9               	line	90
  7952                           	
  7953                           l2117:	
  7954  025E                     	movf	0+(___fladd@b)+02h,w
  7955  025E  0826               	movwf	(??___fladd+0)+0
  7956  025F  00AC               	movf	(??___fladd+0)+0,w
  7957  0260  082C               	movwf	(___fladd@grs)
  7958  0261  00BB               	line	91
  7959                           	
  7960                           l2119:	
  7961  0262                     	movf	0+(___fladd@a)+02h,w
  7962  0262  082A               	movwf	(??___fladd+0)+0
  7963  0263  00AC               	movf	(??___fladd+0)+0,w
  7964  0264  082C               	movwf	0+(___fladd@b)+02h
  7965  0265  00A6               	line	92
  7966                           	
  7967                           l2121:	
  7968  0266                     	movf	(___fladd@grs),w
  7969  0266  083B               	movwf	(??___fladd+0)+0
  7970  0267  00AC               	movf	(??___fladd+0)+0,w
  7971  0268  082C               	movwf	0+(___fladd@a)+02h
  7972  0269  00AA               	line	93
  7973                           	
  7974                           l2123:	
  7975  026A                     	movf	0+(___fladd@b)+03h,w
  7976  026A  0827               	movwf	(??___fladd+0)+0
  7977  026B  00AC               	movf	(??___fladd+0)+0,w
  7978  026C  082C               	movwf	(___fladd@grs)
  7979  026D  00BB               	line	94
  7980                           	
  7981                           l2125:	
  7982  026E                     	movf	0+(___fladd@a)+03h,w
  7983  026E  082B               	movwf	(??___fladd+0)+0
  7984  026F  00AC               	movf	(??___fladd+0)+0,w
  7985  0270  082C               	movwf	0+(___fladd@b)+03h
  7986  0271  00A7               	line	95
  7987                           	
  7988                           l2127:	
  7989  0272                     	movf	(___fladd@grs),w
  7990  0272  083B               	movwf	(??___fladd+0)+0
  7991  0273  00AC               	movf	(??___fladd+0)+0,w
  7992  0274  082C               	movwf	0+(___fladd@a)+03h
  7993  0275  00AB               	goto	l2129
  7994  0276  2A77               	line	96
  7995                           	
  7996                           l590:	
  7997  0277                     	line	98
  7998                           	
  7999                           l2129:	
  8000  0277                     	clrf	(___fladd@grs)
  8001  0277  01BB               	line	100
  8002                           	
  8003                           l2131:	
  8004  0278                     	movf	(___fladd@bexp),w
  8005  0278  083A               	movwf	(??___fladd+0)+0
  8006  0279  00AC               	clrf	(??___fladd+0)+0+1
  8007  027A  01AD               	comf	(??___fladd+0)+0,f
  8008  027B  09AC               	comf	(??___fladd+0)+1,f
  8009  027C  09AD               	incf	(??___fladd+0)+0,f
  8010  027D  0AAC               	skipnz
  8011  027E  1903               	incf	(??___fladd+0)+1,f
  8012  027F  0AAD               	movf	(___fladd@aexp),w
  8013  0280  0839               	addwf	0+(??___fladd+0)+0,w
  8014  0281  072C               	movwf	(??___fladd+2)+0
  8015  0282  00AE               	movf	1+(??___fladd+0)+0,w
  8016  0283  082D               	skipnc
  8017  0284  1803               	incf	1+(??___fladd+0)+0,w
  8018  0285  0A2D               	movwf	((??___fladd+2)+0)+1
  8019  0286  00AF               	movf	1+(??___fladd+2)+0,w
  8020  0287  082F               	xorlw	80h
  8021  0288  3A80               	movwf	btemp+1
  8022  0289  00FF               	movlw	(0)^80h
  8023  028A  3080               	subwf	btemp+1,w
  8024  028B  027F               	skipz
  8025  028C  1D03               	goto	u2395
  8026  028D  2A90               	movlw	01Ah
  8027  028E  301A               	subwf	0+(??___fladd+2)+0,w
  8028  028F  022E               u2395:
  8029  0290                     
  8030                           	skipc
  8031  0290  1C03               	goto	u2391
  8032  0291  2A93               	goto	u2390
  8033  0292  2A94               u2391:
  8034  0293                     	goto	l2147
  8035  0293  2AD5               u2390:
  8036  0294                     	line	101
  8037                           	
  8038                           l2133:	
  8039  0294                     	bcf	status, 5	;RP0=0, select bank0
  8040  0294  1283               	bcf	status, 6	;RP1=0, select bank0
  8041  0295  1303               	movf	(___fladd@b+3),w
  8042  0296  0827               	iorwf	(___fladd@b+2),w
  8043  0297  0426               	iorwf	(___fladd@b+1),w
  8044  0298  0425               	iorwf	(___fladd@b),w
  8045  0299  0424               	skipz
  8046  029A  1D03               	goto	u2401
  8047  029B  2A9D               	goto	u2400
  8048  029C  2A9F               u2401:
  8049  029D                     	movlw	1
  8050  029D  3001               	goto	u2410
  8051  029E  2AA0               u2400:
  8052  029F                     	movlw	0
  8053  029F  3000               u2410:
  8054  02A0                     	movwf	(??___fladd+0)+0
  8055  02A0  00AC               	movf	(??___fladd+0)+0,w
  8056  02A1  082C               	movwf	(___fladd@grs)
  8057  02A2  00BB               	line	102
  8058                           	movlw	high highword(0)
  8059  02A3  3000               	movwf	(___fladd@b+3)
  8060  02A4  00A7               	movlw	low highword(0)
  8061  02A5  3000               	movwf	(___fladd@b+2)
  8062  02A6  00A6               	movlw	high(0)
  8063  02A7  3000               	movwf	(___fladd@b+1)
  8064  02A8  00A5               	movlw	low(0)
  8065  02A9  3000               	movwf	(___fladd@b)
  8066  02AA  00A4               
  8067                           	line	103
  8068                           	movf	(___fladd@aexp),w
  8069  02AB  0839               	movwf	(??___fladd+0)+0
  8070  02AC  00AC               	movf	(??___fladd+0)+0,w
  8071  02AD  082C               	movwf	(___fladd@bexp)
  8072  02AE  00BA               	line	104
  8073                           	goto	l593
  8074  02AF  2ADE               	line	105
  8075                           	
  8076                           l592:	
  8077  02B0                     	line	106
  8078                           	goto	l2147
  8079  02B0  2AD5               	
  8080                           l595:	
  8081  02B1                     	line	109
  8082                           	btfss	(___fladd@grs),(0)&7
  8083  02B1  1C3B               	goto	u2421
  8084  02B2  2AB4               	goto	u2420
  8085  02B3  2AB5               u2421:
  8086  02B4                     	goto	l2137
  8087  02B4  2ABE               u2420:
  8088  02B5                     	line	110
  8089                           	
  8090                           l2135:	
  8091  02B5                     	movf	(___fladd@grs),w
  8092  02B5  083B               	movwf	(??___fladd+0)+0
  8093  02B6  00AC               	clrc
  8094  02B7  1003               	rrf	(??___fladd+0)+0,w
  8095  02B8  0C2C               	iorlw	01h
  8096  02B9  3801               	movwf	(??___fladd+1)+0
  8097  02BA  00AD               	movf	(??___fladd+1)+0,w
  8098  02BB  082D               	movwf	(___fladd@grs)
  8099  02BC  00BB               	line	111
  8100                           	goto	l2139
  8101  02BD  2AC1               	line	112
  8102                           	
  8103                           l596:	
  8104  02BE                     	line	113
  8105                           	
  8106                           l2137:	
  8107  02BE                     	clrc
  8108  02BE  1003               	rrf	(___fladd@grs),f
  8109  02BF  0CBB               
  8110                           	goto	l2139
  8111  02C0  2AC1               	line	114
  8112                           	
  8113                           l597:	
  8114  02C1                     	line	115
  8115                           	
  8116                           l2139:	
  8117  02C1                     	btfss	(___fladd@b),(0)&7
  8118  02C1  1C24               	goto	u2431
  8119  02C2  2AC4               	goto	u2430
  8120  02C3  2AC5               u2431:
  8121  02C4                     	goto	l2143
  8122  02C4  2AC7               u2430:
  8123  02C5                     	line	116
  8124                           	
  8125                           l2141:	
  8126  02C5                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8127  02C5  17BB               	goto	l2143
  8128  02C6  2AC7               	line	117
  8129                           	
  8130                           l598:	
  8131  02C7                     	line	118
  8132                           	
  8133                           l2143:	
  8134  02C7                     	movlw	01h
  8135  02C7  3001               	movwf	(??___fladd+0)+0
  8136  02C8  00AC               u2445:
  8137  02C9                     	rlf	(___fladd@b+3),w
  8138  02C9  0D27               	rrf	(___fladd@b+3),f
  8139  02CA  0CA7               	rrf	(___fladd@b+2),f
  8140  02CB  0CA6               	rrf	(___fladd@b+1),f
  8141  02CC  0CA5               	rrf	(___fladd@b),f
  8142  02CD  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8143  02CE  0BAC               	goto	u2445
  8144  02CF  2AC9               
  8145                           	line	119
  8146                           	
  8147                           l2145:	
  8148  02D0                     	movlw	low(01h)
  8149  02D0  3001               	movwf	(??___fladd+0)+0
  8150  02D1  00AC               	movf	(??___fladd+0)+0,w
  8151  02D2  082C               	addwf	(___fladd@bexp),f
  8152  02D3  07BA               	goto	l2147
  8153  02D4  2AD5               	line	120
  8154                           	
  8155                           l594:	
  8156  02D5                     	line	106
  8157                           	
  8158                           l2147:	
  8159  02D5                     	bcf	status, 5	;RP0=0, select bank0
  8160  02D5  1283               	bcf	status, 6	;RP1=0, select bank0
  8161  02D6  1303               	movf	(___fladd@aexp),w
  8162  02D7  0839               	subwf	(___fladd@bexp),w
  8163  02D8  023A               	skipc
  8164  02D9  1C03               	goto	u2451
  8165  02DA  2ADC               	goto	u2450
  8166  02DB  2ADD               u2451:
  8167  02DC                     	goto	l595
  8168  02DC  2AB1               u2450:
  8169  02DD                     	goto	l593
  8170  02DD  2ADE               	
  8171                           l599:	
  8172  02DE                     	line	121
  8173                           	
  8174                           l593:	
  8175  02DE                     	line	124
  8176                           	btfsc	(___fladd@signs),(6)&7
  8177  02DE  1B38               	goto	u2461
  8178  02DF  2AE1               	goto	u2460
  8179  02E0  2AE2               u2461:
  8180  02E1                     	goto	l2173
  8181  02E1  2B31               u2460:
  8182  02E2                     	line	127
  8183                           	
  8184                           l2149:	
  8185  02E2                     	movf	((___fladd@bexp)),w
  8186  02E2  083A               	btfss	status,2
  8187  02E3  1D03               	goto	u2471
  8188  02E4  2AE6               	goto	u2470
  8189  02E5  2AE7               u2471:
  8190  02E6                     	goto	l2155
  8191  02E6  2AF1               u2470:
  8192  02E7                     	line	128
  8193                           	
  8194                           l2151:	
  8195  02E7                     	movlw	0x0
  8196  02E7  3000               	movwf	(?___fladd+3)
  8197  02E8  00A7               	movlw	0x0
  8198  02E9  3000               	movwf	(?___fladd+2)
  8199  02EA  00A6               	movlw	0x0
  8200  02EB  3000               	movwf	(?___fladd+1)
  8201  02EC  00A5               	movlw	0x0
  8202  02ED  3000               	movwf	(?___fladd)
  8203  02EE  00A4               
  8204                           	goto	l602
  8205  02EF  2C7D               	
  8206                           l2153:	
  8207  02F0                     	goto	l602
  8208  02F0  2C7D               	line	129
  8209                           	
  8210                           l601:	
  8211  02F1                     	line	132
  8212                           	
  8213                           l2155:	
  8214  02F1                     	movf	(___fladd@a),w
  8215  02F1  0828               	addwf	(___fladd@b),f
  8216  02F2  07A4               	movf	(___fladd@a+1),w
  8217  02F3  0829               	clrz
  8218  02F4  1103               	skipnc
  8219  02F5  1803               	addlw	1
  8220  02F6  3E01               	skipnz
  8221  02F7  1903               	goto	u2481
  8222  02F8  2AFA               	addwf	(___fladd@b+1),f
  8223  02F9  07A5               u2481:
  8224  02FA                     	movf	(___fladd@a+2),w
  8225  02FA  082A               	clrz
  8226  02FB  1103               	skipnc
  8227  02FC  1803               	addlw	1
  8228  02FD  3E01               	skipnz
  8229  02FE  1903               	goto	u2482
  8230  02FF  2B01               	addwf	(___fladd@b+2),f
  8231  0300  07A6               u2482:
  8232  0301                     	movf	(___fladd@a+3),w
  8233  0301  082B               	clrz
  8234  0302  1103               	skipnc
  8235  0303  1803               	addlw	1
  8236  0304  3E01               	skipnz
  8237  0305  1903               	goto	u2483
  8238  0306  2B08               	addwf	(___fladd@b+3),f
  8239  0307  07A7               u2483:
  8240  0308                     
  8241                           	line	134
  8242                           	
  8243                           l2157:	
  8244  0308                     	btfss	(___fladd@b+3),(24)&7
  8245  0308  1C27               	goto	u2491
  8246  0309  2B0B               	goto	u2490
  8247  030A  2B0C               u2491:
  8248  030B                     	goto	l2207
  8249  030B  2BFA               u2490:
  8250  030C                     	line	135
  8251                           	
  8252                           l2159:	
  8253  030C                     	btfss	(___fladd@grs),(0)&7
  8254  030C  1C3B               	goto	u2501
  8255  030D  2B0F               	goto	u2500
  8256  030E  2B10               u2501:
  8257  030F                     	goto	l2163
  8258  030F  2B19               u2500:
  8259  0310                     	line	136
  8260                           	
  8261                           l2161:	
  8262  0310                     	movf	(___fladd@grs),w
  8263  0310  083B               	movwf	(??___fladd+0)+0
  8264  0311  00AC               	clrc
  8265  0312  1003               	rrf	(??___fladd+0)+0,w
  8266  0313  0C2C               	iorlw	01h
  8267  0314  3801               	movwf	(??___fladd+1)+0
  8268  0315  00AD               	movf	(??___fladd+1)+0,w
  8269  0316  082D               	movwf	(___fladd@grs)
  8270  0317  00BB               	line	137
  8271                           	goto	l2165
  8272  0318  2B1C               	line	138
  8273                           	
  8274                           l604:	
  8275  0319                     	line	139
  8276                           	
  8277                           l2163:	
  8278  0319                     	clrc
  8279  0319  1003               	rrf	(___fladd@grs),f
  8280  031A  0CBB               
  8281                           	goto	l2165
  8282  031B  2B1C               	line	140
  8283                           	
  8284                           l605:	
  8285  031C                     	line	141
  8286                           	
  8287                           l2165:	
  8288  031C                     	btfss	(___fladd@b),(0)&7
  8289  031C  1C24               	goto	u2511
  8290  031D  2B1F               	goto	u2510
  8291  031E  2B20               u2511:
  8292  031F                     	goto	l2169
  8293  031F  2B22               u2510:
  8294  0320                     	line	142
  8295                           	
  8296                           l2167:	
  8297  0320                     	bsf	(___fladd@grs)+(7/8),(7)&7
  8298  0320  17BB               	goto	l2169
  8299  0321  2B22               	line	143
  8300                           	
  8301                           l606:	
  8302  0322                     	line	144
  8303                           	
  8304                           l2169:	
  8305  0322                     	movlw	01h
  8306  0322  3001               	movwf	(??___fladd+0)+0
  8307  0323  00AC               u2525:
  8308  0324                     	rlf	(___fladd@b+3),w
  8309  0324  0D27               	rrf	(___fladd@b+3),f
  8310  0325  0CA7               	rrf	(___fladd@b+2),f
  8311  0326  0CA6               	rrf	(___fladd@b+1),f
  8312  0327  0CA5               	rrf	(___fladd@b),f
  8313  0328  0CA4               	decfsz	(??___fladd+0)+0&07fh,f
  8314  0329  0BAC               	goto	u2525
  8315  032A  2B24               
  8316                           	line	145
  8317                           	
  8318                           l2171:	
  8319  032B                     	movlw	low(01h)
  8320  032B  3001               	movwf	(??___fladd+0)+0
  8321  032C  00AC               	movf	(??___fladd+0)+0,w
  8322  032D  082C               	addwf	(___fladd@bexp),f
  8323  032E  07BA               	goto	l2207
  8324  032F  2BFA               	line	146
  8325                           	
  8326                           l603:	
  8327  0330                     	line	148
  8328                           	goto	l2207
  8329  0330  2BFA               	line	149
  8330                           	
  8331                           l600:	
  8332  0331                     	line	153
  8333                           	
  8334                           l2173:	
  8335  0331                     	movf	(___fladd@b+3),w
  8336  0331  0827               	xorlw	80h
  8337  0332  3A80               	movwf	btemp+1
  8338  0333  00FF               	movf	(___fladd@a+3),w
  8339  0334  082B               	xorlw	80h
  8340  0335  3A80               	subwf	btemp+1,w
  8341  0336  027F               	
  8342                           	skipz
  8343  0337  1D03               	goto	u2533
  8344  0338  2B43               	movf	(___fladd@a+2),w
  8345  0339  082A               	subwf	(___fladd@b+2),w
  8346  033A  0226               	skipz
  8347  033B  1D03               	goto	u2533
  8348  033C  2B43               	movf	(___fladd@a+1),w
  8349  033D  0829               	subwf	(___fladd@b+1),w
  8350  033E  0225               	skipz
  8351  033F  1D03               	goto	u2533
  8352  0340  2B43               	movf	(___fladd@a),w
  8353  0341  0828               	subwf	(___fladd@b),w
  8354  0342  0224               u2533:
  8355  0343                     	skipnc
  8356  0343  1803               	goto	u2531
  8357  0344  2B46               	goto	u2530
  8358  0345  2B47               u2531:
  8359  0346                     	goto	l2183
  8360  0346  2BAD               u2530:
  8361  0347                     	line	154
  8362                           	
  8363                           l2175:	
  8364  0347                     	movlw	0FFh
  8365  0347  30FF               	movwf	((??___fladd+0)+0)
  8366  0348  00AC               	movlw	0FFh
  8367  0349  30FF               	movwf	((??___fladd+0)+0+1)
  8368  034A  00AD               	movlw	0FFh
  8369  034B  30FF               	movwf	((??___fladd+0)+0+2)
  8370  034C  00AE               	movlw	0FFh
  8371  034D  30FF               	movwf	((??___fladd+0)+0+3)
  8372  034E  00AF               	movf	(___fladd@a),w
  8373  034F  0828               	movwf	(??___fladd+4)+0
  8374  0350  00B0               	movf	(___fladd@a+1),w
  8375  0351  0829               	movwf	((??___fladd+4)+0+1)
  8376  0352  00B1               	movf	(___fladd@a+2),w
  8377  0353  082A               	movwf	((??___fladd+4)+0+2)
  8378  0354  00B2               	movf	(___fladd@a+3),w
  8379  0355  082B               	movwf	((??___fladd+4)+0+3)
  8380  0356  00B3               	comf	(___fladd@b),w
  8381  0357  0924               	movwf	(??___fladd+8)+0
  8382  0358  00B4               	comf	(___fladd@b+1),w
  8383  0359  0925               	movwf	((??___fladd+8)+0+1)
  8384  035A  00B5               	comf	(___fladd@b+2),w
  8385  035B  0926               	movwf	((??___fladd+8)+0+2)
  8386  035C  00B6               	comf	(___fladd@b+3),w
  8387  035D  0927               	movwf	((??___fladd+8)+0+3)
  8388  035E  00B7               	incf	(??___fladd+8)+0,f
  8389  035F  0AB4               	skipnz
  8390  0360  1903               	incf	((??___fladd+8)+0+1),f
  8391  0361  0AB5               	skipnz
  8392  0362  1903               	incf	((??___fladd+8)+0+2),f
  8393  0363  0AB6               	skipnz
  8394  0364  1903               	incf	((??___fladd+8)+0+3),f
  8395  0365  0AB7               	movf	0+(??___fladd+8)+0,w
  8396  0366  0834               	addwf	(??___fladd+4)+0,f
  8397  0367  07B0               	movf	1+(??___fladd+8)+0,w
  8398  0368  0835               	skipnc
  8399  0369  1803               	incfsz	1+(??___fladd+8)+0,w
  8400  036A  0F35               	goto	u2540
  8401  036B  2B6D               	goto	u2541
  8402  036C  2B6E               u2540:
  8403  036D                     	addwf	(??___fladd+4)+1,f
  8404  036D  07B1               u2541:
  8405  036E                     	movf	2+(??___fladd+8)+0,w
  8406  036E  0836               	skipnc
  8407  036F  1803               	incfsz	2+(??___fladd+8)+0,w
  8408  0370  0F36               	goto	u2542
  8409  0371  2B73               	goto	u2543
  8410  0372  2B74               u2542:
  8411  0373                     	addwf	(??___fladd+4)+2,f
  8412  0373  07B2               u2543:
  8413  0374                     	movf	3+(??___fladd+8)+0,w
  8414  0374  0837               	skipnc
  8415  0375  1803               	incf	3+(??___fladd+8)+0,w
  8416  0376  0A37               	addwf	(??___fladd+4)+3,f
  8417  0377  07B3               	movf	0+(??___fladd+4)+0,w
  8418  0378  0830               	addwf	(??___fladd+0)+0,f
  8419  0379  07AC               	movf	1+(??___fladd+4)+0,w
  8420  037A  0831               	skipnc
  8421  037B  1803               	incfsz	1+(??___fladd+4)+0,w
  8422  037C  0F31               	goto	u2550
  8423  037D  2B7F               	goto	u2551
  8424  037E  2B80               u2550:
  8425  037F                     	addwf	(??___fladd+0)+1,f
  8426  037F  07AD               u2551:
  8427  0380                     	movf	2+(??___fladd+4)+0,w
  8428  0380  0832               	skipnc
  8429  0381  1803               	incfsz	2+(??___fladd+4)+0,w
  8430  0382  0F32               	goto	u2552
  8431  0383  2B85               	goto	u2553
  8432  0384  2B86               u2552:
  8433  0385                     	addwf	(??___fladd+0)+2,f
  8434  0385  07AE               u2553:
  8435  0386                     	movf	3+(??___fladd+4)+0,w
  8436  0386  0833               	skipnc
  8437  0387  1803               	incf	3+(??___fladd+4)+0,w
  8438  0388  0A33               	addwf	(??___fladd+0)+3,f
  8439  0389  07AF               	movf	3+(??___fladd+0)+0,w
  8440  038A  082F               	movwf	(___fladd@b+3)
  8441  038B  00A7               	movf	2+(??___fladd+0)+0,w
  8442  038C  082E               	movwf	(___fladd@b+2)
  8443  038D  00A6               	movf	1+(??___fladd+0)+0,w
  8444  038E  082D               	movwf	(___fladd@b+1)
  8445  038F  00A5               	movf	0+(??___fladd+0)+0,w
  8446  0390  082C               	movwf	(___fladd@b)
  8447  0391  00A4               
  8448                           	line	155
  8449                           	movlw	low(080h)
  8450  0392  3080               	movwf	(??___fladd+0)+0
  8451  0393  00AC               	movf	(??___fladd+0)+0,w
  8452  0394  082C               	xorwf	(___fladd@signs),f
  8453  0395  06B8               	line	156
  8454                           	
  8455                           l2177:	
  8456  0396                     	comf	(___fladd@grs),f
  8457  0396  09BB               	incf	(___fladd@grs),f
  8458  0397  0ABB               	line	157
  8459                           	
  8460                           l2179:	
  8461  0398                     	movf	((___fladd@grs)),w
  8462  0398  083B               	btfss	status,2
  8463  0399  1D03               	goto	u2561
  8464  039A  2B9C               	goto	u2560
  8465  039B  2B9D               u2561:
  8466  039C                     	goto	l610
  8467  039C  2BBB               u2560:
  8468  039D                     	line	158
  8469                           	
  8470                           l2181:	
  8471  039D                     	movlw	01h
  8472  039D  3001               	addwf	(___fladd@b),f
  8473  039E  07A4               	movlw	0
  8474  039F  3000               	skipnc
  8475  03A0  1803               movlw 1
  8476  03A1  3001               	addwf	(___fladd@b+1),f
  8477  03A2  07A5               	movlw	0
  8478  03A3  3000               	skipnc
  8479  03A4  1803               movlw 1
  8480  03A5  3001               	addwf	(___fladd@b+2),f
  8481  03A6  07A6               	movlw	0
  8482  03A7  3000               	skipnc
  8483  03A8  1803               movlw 1
  8484  03A9  3001               	addwf	(___fladd@b+3),f
  8485  03AA  07A7               	goto	l610
  8486  03AB  2BBB               	line	159
  8487                           	
  8488                           l609:	
  8489  03AC                     	line	160
  8490                           	goto	l610
  8491  03AC  2BBB               	line	161
  8492                           	
  8493                           l608:	
  8494  03AD                     	line	162
  8495                           	
  8496                           l2183:	
  8497  03AD                     	movf	(___fladd@a),w
  8498  03AD  0828               	subwf	(___fladd@b),f
  8499  03AE  02A4               	movf	(___fladd@a+1),w
  8500  03AF  0829               	skipc
  8501  03B0  1C03               	incfsz	(___fladd@a+1),w
  8502  03B1  0F29               	subwf	(___fladd@b+1),f
  8503  03B2  02A5               	movf	(___fladd@a+2),w
  8504  03B3  082A               	skipc
  8505  03B4  1C03               	incfsz	(___fladd@a+2),w
  8506  03B5  0F2A               	subwf	(___fladd@b+2),f
  8507  03B6  02A6               	movf	(___fladd@a+3),w
  8508  03B7  082B               	skipc
  8509  03B8  1C03               	incfsz	(___fladd@a+3),w
  8510  03B9  0F2B               	subwf	(___fladd@b+3),f
  8511  03BA  02A7               	line	163
  8512                           	
  8513                           l610:	
  8514  03BB                     	line	166
  8515                           	movf	(___fladd@b+3),w
  8516  03BB  0827               	iorwf	(___fladd@b+2),w
  8517  03BC  0426               	iorwf	(___fladd@b+1),w
  8518  03BD  0425               	iorwf	(___fladd@b),w
  8519  03BE  0424               	skipz
  8520  03BF  1D03               	goto	u2571
  8521  03C0  2BC2               	goto	u2570
  8522  03C1  2BC3               u2571:
  8523  03C2                     	goto	l2205
  8524  03C2  2BF4               u2570:
  8525  03C3                     	
  8526                           l2185:	
  8527  03C3                     	movf	((___fladd@grs)),w
  8528  03C3  083B               	btfss	status,2
  8529  03C4  1D03               	goto	u2581
  8530  03C5  2BC7               	goto	u2580
  8531  03C6  2BC8               u2581:
  8532  03C7                     	goto	l2205
  8533  03C7  2BF4               u2580:
  8534  03C8                     	line	167
  8535                           	
  8536                           l2187:	
  8537  03C8                     	movlw	0x0
  8538  03C8  3000               	movwf	(?___fladd+3)
  8539  03C9  00A7               	movlw	0x0
  8540  03CA  3000               	movwf	(?___fladd+2)
  8541  03CB  00A6               	movlw	0x0
  8542  03CC  3000               	movwf	(?___fladd+1)
  8543  03CD  00A5               	movlw	0x0
  8544  03CE  3000               	movwf	(?___fladd)
  8545  03CF  00A4               
  8546                           	goto	l602
  8547  03D0  2C7D               	
  8548                           l2189:	
  8549  03D1                     	goto	l602
  8550  03D1  2C7D               	line	168
  8551                           	
  8552                           l611:	
  8553  03D2                     	line	171
  8554                           	goto	l2205
  8555  03D2  2BF4               	
  8556                           l613:	
  8557  03D3                     	line	172
  8558                           	
  8559                           l2191:	
  8560  03D3                     	movlw	01h
  8561  03D3  3001               	movwf	(??___fladd+0)+0
  8562  03D4  00AC               u2595:
  8563  03D5                     	clrc
  8564  03D5  1003               	rlf	(___fladd@b),f
  8565  03D6  0DA4               	rlf	(___fladd@b+1),f
  8566  03D7  0DA5               	rlf	(___fladd@b+2),f
  8567  03D8  0DA6               	rlf	(___fladd@b+3),f
  8568  03D9  0DA7               	decfsz	(??___fladd+0)+0
  8569  03DA  0BAC               	goto	u2595
  8570  03DB  2BD5               	line	173
  8571                           	
  8572                           l2193:	
  8573  03DC                     	btfss	(___fladd@grs),(7)&7
  8574  03DC  1FBB               	goto	u2601
  8575  03DD  2BDF               	goto	u2600
  8576  03DE  2BE0               u2601:
  8577  03DF                     	goto	l614
  8578  03DF  2BE1               u2600:
  8579  03E0                     	line	174
  8580                           	
  8581                           l2195:	
  8582  03E0                     	bsf	(___fladd@b)+(0/8),(0)&7
  8583  03E0  1424               	line	175
  8584                           	
  8585                           l614:	
  8586  03E1                     	line	176
  8587                           	btfss	(___fladd@grs),(0)&7
  8588  03E1  1C3B               	goto	u2611
  8589  03E2  2BE4               	goto	u2610
  8590  03E3  2BE5               u2611:
  8591  03E4                     	goto	l2199
  8592  03E4  2BE8               u2610:
  8593  03E5                     	line	177
  8594                           	
  8595                           l2197:	
  8596  03E5                     	setc
  8597  03E5  1403               	rlf	(___fladd@grs),f
  8598  03E6  0DBB               	line	178
  8599                           	goto	l2201
  8600  03E7  2BEB               	line	179
  8601                           	
  8602                           l615:	
  8603  03E8                     	line	180
  8604                           	
  8605                           l2199:	
  8606  03E8                     	clrc
  8607  03E8  1003               	rlf	(___fladd@grs),f
  8608  03E9  0DBB               
  8609                           	goto	l2201
  8610  03EA  2BEB               	line	181
  8611                           	
  8612                           l616:	
  8613  03EB                     	line	182
  8614                           	
  8615                           l2201:	
  8616  03EB                     	movf	((___fladd@bexp)),w
  8617  03EB  083A               	btfsc	status,2
  8618  03EC  1903               	goto	u2621
  8619  03ED  2BEF               	goto	u2620
  8620  03EE  2BF0               u2621:
  8621  03EF                     	goto	l2205
  8622  03EF  2BF4               u2620:
  8623  03F0                     	line	183
  8624                           	
  8625                           l2203:	
  8626  03F0                     	movlw	01h
  8627  03F0  3001               	subwf	(___fladd@bexp),f
  8628  03F1  02BA               	goto	l2205
  8629  03F2  2BF4               	line	184
  8630                           	
  8631                           l617:	
  8632  03F3                     	goto	l2205
  8633  03F3  2BF4               	line	185
  8634                           	
  8635                           l612:	
  8636  03F4                     	line	171
  8637                           	
  8638                           l2205:	
  8639  03F4                     	btfss	(___fladd@b+2),(23)&7
  8640  03F4  1FA6               	goto	u2631
  8641  03F5  2BF7               	goto	u2630
  8642  03F6  2BF8               u2631:
  8643  03F7                     	goto	l2191
  8644  03F7  2BD3               u2630:
  8645  03F8                     	goto	l2207
  8646  03F8  2BFA               	
  8647                           l618:	
  8648  03F9                     	goto	l2207
  8649  03F9  2BFA               	line	186
  8650                           	
  8651                           l607:	
  8652  03FA                     	line	192
  8653                           	
  8654                           l2207:	
  8655  03FA                     	clrf	(___fladd@aexp)
  8656  03FA  01B9               	line	193
  8657                           	
  8658                           l2209:	
  8659  03FB                     	btfss	(___fladd@grs),(7)&7
  8660  03FB  1FBB               	goto	u2641
  8661  03FC  2BFE               	goto	u2640
  8662  03FD  2BFF               u2641:
  8663  03FE                     	goto	l2217
  8664  03FE  2C11               u2640:
  8665  03FF                     	line	194
  8666                           	
  8667                           l2211:	
  8668  03FF                     	movf	(___fladd@grs),w
  8669  03FF  083B               	andlw	07Fh
  8670  0400  397F               	btfsc	status,2
  8671  0401  1903               	goto	u2651
  8672  0402  2C04               	goto	u2650
  8673  0403  2C05               u2651:
  8674  0404                     	goto	l620
  8675  0404  2C08               u2650:
  8676  0405                     	line	195
  8677                           	
  8678                           l2213:	
  8679  0405                     	clrf	(___fladd@aexp)
  8680  0405  01B9               	incf	(___fladd@aexp),f
  8681  0406  0AB9               	line	196
  8682                           	goto	l2217
  8683  0407  2C11               	line	197
  8684                           	
  8685                           l620:	
  8686  0408                     	line	198
  8687                           	btfss	(___fladd@b),(0)&7
  8688  0408  1C24               	goto	u2661
  8689  0409  2C0B               	goto	u2660
  8690  040A  2C0C               u2661:
  8691  040B                     	goto	l2217
  8692  040B  2C11               u2660:
  8693  040C                     	line	199
  8694                           	
  8695                           l2215:	
  8696  040C                     	clrf	(___fladd@aexp)
  8697  040C  01B9               	incf	(___fladd@aexp),f
  8698  040D  0AB9               	goto	l2217
  8699  040E  2C11               	line	200
  8700                           	
  8701                           l622:	
  8702  040F                     	goto	l2217
  8703  040F  2C11               	line	201
  8704                           	
  8705                           l621:	
  8706  0410                     	goto	l2217
  8707  0410  2C11               	line	202
  8708                           	
  8709                           l619:	
  8710  0411                     	line	203
  8711                           	
  8712                           l2217:	
  8713  0411                     	movf	((___fladd@aexp)),w
  8714  0411  0839               	btfsc	status,2
  8715  0412  1903               	goto	u2671
  8716  0413  2C15               	goto	u2670
  8717  0414  2C16               u2671:
  8718  0415                     	goto	l623
  8719  0415  2C4C               u2670:
  8720  0416                     	line	204
  8721                           	
  8722                           l2219:	
  8723  0416                     	movlw	01h
  8724  0416  3001               	addwf	(___fladd@b),f
  8725  0417  07A4               	movlw	0
  8726  0418  3000               	skipnc
  8727  0419  1803               movlw 1
  8728  041A  3001               	addwf	(___fladd@b+1),f
  8729  041B  07A5               	movlw	0
  8730  041C  3000               	skipnc
  8731  041D  1803               movlw 1
  8732  041E  3001               	addwf	(___fladd@b+2),f
  8733  041F  07A6               	movlw	0
  8734  0420  3000               	skipnc
  8735  0421  1803               movlw 1
  8736  0422  3001               	addwf	(___fladd@b+3),f
  8737  0423  07A7               	line	205
  8738                           	
  8739                           l2221:	
  8740  0424                     	btfss	(___fladd@b+3),(24)&7
  8741  0424  1C27               	goto	u2681
  8742  0425  2C27               	goto	u2680
  8743  0426  2C28               u2681:
  8744  0427                     	goto	l623
  8745  0427  2C4C               u2680:
  8746  0428                     	line	206
  8747                           	
  8748                           l2223:	
  8749  0428                     	movf	(___fladd@b),w
  8750  0428  0824               	movwf	(??___fladd+0)+0
  8751  0429  00AC               	movf	(___fladd@b+1),w
  8752  042A  0825               	movwf	((??___fladd+0)+0+1)
  8753  042B  00AD               	movf	(___fladd@b+2),w
  8754  042C  0826               	movwf	((??___fladd+0)+0+2)
  8755  042D  00AE               	movf	(___fladd@b+3),w
  8756  042E  0827               	movwf	((??___fladd+0)+0+3)
  8757  042F  00AF               	movlw	01h
  8758  0430  3001               	movwf	(??___fladd+4)+0
  8759  0431  00B0               u2695:
  8760  0432                     	rlf	(??___fladd+0)+3,w
  8761  0432  0D2F               	rrf	(??___fladd+0)+3,f
  8762  0433  0CAF               	rrf	(??___fladd+0)+2,f
  8763  0434  0CAE               	rrf	(??___fladd+0)+1,f
  8764  0435  0CAD               	rrf	(??___fladd+0)+0,f
  8765  0436  0CAC               u2690:
  8766  0437                     	decfsz	(??___fladd+4)+0,f
  8767  0437  0BB0               	goto	u2695
  8768  0438  2C32               	movf	3+(??___fladd+0)+0,w
  8769  0439  082F               	movwf	(___fladd@b+3)
  8770  043A  00A7               	movf	2+(??___fladd+0)+0,w
  8771  043B  082E               	movwf	(___fladd@b+2)
  8772  043C  00A6               	movf	1+(??___fladd+0)+0,w
  8773  043D  082D               	movwf	(___fladd@b+1)
  8774  043E  00A5               	movf	0+(??___fladd+0)+0,w
  8775  043F  082C               	movwf	(___fladd@b)
  8776  0440  00A4               
  8777                           	line	207
  8778                           		incf	((___fladd@bexp)),w
  8779  0441  0A3A               	btfsc	status,2
  8780  0442  1903               	goto	u2701
  8781  0443  2C45               	goto	u2700
  8782  0444  2C46               u2701:
  8783  0445                     	goto	l623
  8784  0445  2C4C               u2700:
  8785  0446                     	line	208
  8786                           	
  8787                           l2225:	
  8788  0446                     	movlw	low(01h)
  8789  0446  3001               	movwf	(??___fladd+0)+0
  8790  0447  00AC               	movf	(??___fladd+0)+0,w
  8791  0448  082C               	addwf	(___fladd@bexp),f
  8792  0449  07BA               	goto	l623
  8793  044A  2C4C               	line	209
  8794                           	
  8795                           l625:	
  8796  044B                     	goto	l623
  8797  044B  2C4C               	line	210
  8798                           	
  8799                           l624:	
  8800  044C                     	line	211
  8801                           	
  8802                           l623:	
  8803  044C                     	line	215
  8804                           		incf	((___fladd@bexp)),w
  8805  044C  0A3A               	btfsc	status,2
  8806  044D  1903               	goto	u2711
  8807  044E  2C50               	goto	u2710
  8808  044F  2C51               u2711:
  8809  0450                     	goto	l2229
  8810  0450  2C57               u2710:
  8811  0451                     	
  8812                           l2227:	
  8813  0451                     	movf	((___fladd@bexp)),w
  8814  0451  083A               	btfss	status,2
  8815  0452  1D03               	goto	u2721
  8816  0453  2C55               	goto	u2720
  8817  0454  2C56               u2721:
  8818  0455                     	goto	l2235
  8819  0455  2C67               u2720:
  8820  0456                     	goto	l2229
  8821  0456  2C57               	
  8822                           l628:	
  8823  0457                     	line	216
  8824                           	
  8825                           l2229:	
  8826  0457                     	movlw	high highword(0)
  8827  0457  3000               	movwf	(___fladd@b+3)
  8828  0458  00A7               	movlw	low highword(0)
  8829  0459  3000               	movwf	(___fladd@b+2)
  8830  045A  00A6               	movlw	high(0)
  8831  045B  3000               	movwf	(___fladd@b+1)
  8832  045C  00A5               	movlw	low(0)
  8833  045D  3000               	movwf	(___fladd@b)
  8834  045E  00A4               
  8835                           	line	218
  8836                           	
  8837                           l2231:	
  8838  045F                     	movf	((___fladd@bexp)),w
  8839  045F  083A               	btfss	status,2
  8840  0460  1D03               	goto	u2731
  8841  0461  2C63               	goto	u2730
  8842  0462  2C64               u2731:
  8843  0463                     	goto	l2235
  8844  0463  2C67               u2730:
  8845  0464                     	line	219
  8846                           	
  8847                           l2233:	
  8848  0464                     	clrf	(___fladd@signs)
  8849  0464  01B8               	goto	l2235
  8850  0465  2C67               	line	220
  8851                           	
  8852                           l629:	
  8853  0466                     	goto	l2235
  8854  0466  2C67               	line	221
  8855                           	
  8856                           l626:	
  8857  0467                     	line	225
  8858                           	
  8859                           l2235:	
  8860  0467                     	btfss	(___fladd@bexp),(0)&7
  8861  0467  1C3A               	goto	u2741
  8862  0468  2C6A               	goto	u2740
  8863  0469  2C6B               u2741:
  8864  046A                     	goto	l2239
  8865  046A  2C6D               u2740:
  8866  046B                     	line	226
  8867                           	
  8868                           l2237:	
  8869  046B                     	bsf	0+(___fladd@b)+02h+(7/8),(7)&7
  8870  046B  17A6               	line	227
  8871                           	goto	l631
  8872  046C  2C71               	line	229
  8873                           	
  8874                           l630:	
  8875  046D                     	line	230
  8876                           	
  8877                           l2239:	
  8878  046D                     	movlw	low(07Fh)
  8879  046D  307F               	movwf	(??___fladd+0)+0
  8880  046E  00AC               	movf	(??___fladd+0)+0,w
  8881  046F  082C               	andwf	0+(___fladd@b)+02h,f
  8882  0470  05A6               	line	231
  8883                           	
  8884                           l631:	
  8885  0471                     	line	232
  8886                           	movf	(___fladd@bexp),w
  8887  0471  083A               	movwf	(??___fladd+0)+0
  8888  0472  00AC               	clrc
  8889  0473  1003               	rrf	(??___fladd+0)+0,w
  8890  0474  0C2C               	movwf	(??___fladd+1)+0
  8891  0475  00AD               	movf	(??___fladd+1)+0,w
  8892  0476  082D               	movwf	0+(___fladd@b)+03h
  8893  0477  00A7               	line	233
  8894                           	
  8895                           l2241:	
  8896  0478                     	btfss	(___fladd@signs),(7)&7
  8897  0478  1FB8               	goto	u2751
  8898  0479  2C7B               	goto	u2750
  8899  047A  2C7C               u2751:
  8900  047B                     	goto	l632
  8901  047B  2C7D               u2750:
  8902  047C                     	line	234
  8903                           	
  8904                           l2243:	
  8905  047C                     	bsf	0+(___fladd@b)+03h+(7/8),(7)&7
  8906  047C  17A7               	line	235
  8907                           	
  8908                           l632:	
  8909  047D                     	line	236
  8910                           	line	237
  8911                           	
  8912                           l602:	
  8913  047D                     	return
  8914  047D  0008               	opt stack 0
  8915                           GLOBAL	__end_of___fladd
  8916                           	__end_of___fladd:
  8917  047E                     	signat	___fladd,8316
  8918                           	global	_I2C_Master_Write
  8919                           
  8920 ;; *************** function _I2C_Master_Write *****************
  8921 ;; Defined at:
  8922 ;;		line 65 in file "I2C.c"
  8923 ;; Parameters:    Size  Location     Type
  8924 ;;  d               2    0[COMMON] unsigned int 
  8925 ;; Auto vars:     Size  Location     Type
  8926 ;;		None
  8927 ;; Return value:  Size  Location     Type
  8928 ;;                  1    wreg      void 
  8929 ;; Registers used:
  8930 ;;		wreg, status,2, status,0, pclath, cstack
  8931 ;; Tracked objects:
  8932 ;;		On entry : 0/0
  8933 ;;		On exit  : 0/0
  8934 ;;		Unchanged: 0/0
  8935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8936 ;;      Params:         2       0       0       0       0
  8937 ;;      Locals:         0       0       0       0       0
  8938 ;;      Temps:          0       0       0       0       0
  8939 ;;      Totals:         2       0       0       0       0
  8940 ;;Total ram usage:        2 bytes
  8941 ;; Hardware stack levels used:    1
  8942 ;; Hardware stack levels required when called:    1
  8943 ;; This function calls:
  8944 ;;		_I2C_Master_Wait
  8945 ;; This function is called by:
  8946 ;;		_main
  8947 ;; This function uses a non-reentrant model
  8948 ;;
  8949                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  8950                           	file	"I2C.c"
  8951                           	line	65
  8952                           global __ptext22
  8953                           __ptext22:	;psect for function _I2C_Master_Write
  8954  0845                     psect	text22
  8955                           	file	"I2C.c"
  8956                           	line	65
  8957                           	global	__size_of_I2C_Master_Write
  8958                           	__size_of_I2C_Master_Write	equ	__end_of_I2C_Master_Write-_I2C_Master_Write
  8959  000A                     	
  8960                           _I2C_Master_Write:	
  8961  0845                     ;incstack = 0
  8962                           	opt	stack 6
  8963                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  8964                           	line	67
  8965                           	
  8966                           l1947:	
  8967  0845                     ;I2C.c: 65: void I2C_Master_Write(unsigned d);I2C.c: 66: {;I2C.c: 67:     I2C_Master_Wai
                                 t();
  8968                           	fcall	_I2C_Master_Wait
  8969  0845  120A  158A  204F  120A  158A  	line	68
  8970                           	
  8971                           l1949:	
  8972  084A                     ;I2C.c: 68:     SSPBUF = d;
  8973                           	movf	(I2C_Master_Write@d),w
  8974  084A  0870               	bcf	status, 5	;RP0=0, select bank0
  8975  084B  1283               	bcf	status, 6	;RP1=0, select bank0
  8976  084C  1303               	movwf	(19)	;volatile
  8977  084D  0093               	line	69
  8978                           	
  8979                           l47:	
  8980  084E                     	return
  8981  084E  0008               	opt stack 0
  8982                           GLOBAL	__end_of_I2C_Master_Write
  8983                           	__end_of_I2C_Master_Write:
  8984  084F                     	signat	_I2C_Master_Write,4217
  8985                           	global	_I2C_Master_Stop
  8986                           
  8987 ;; *************** function _I2C_Master_Stop *****************
  8988 ;; Defined at:
  8989 ;;		line 55 in file "I2C.c"
  8990 ;; Parameters:    Size  Location     Type
  8991 ;;		None
  8992 ;; Auto vars:     Size  Location     Type
  8993 ;;		None
  8994 ;; Return value:  Size  Location     Type
  8995 ;;                  1    wreg      void 
  8996 ;; Registers used:
  8997 ;;		wreg, status,2, status,0, pclath, cstack
  8998 ;; Tracked objects:
  8999 ;;		On entry : 0/0
  9000 ;;		On exit  : 0/0
  9001 ;;		Unchanged: 0/0
  9002 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9003 ;;      Params:         0       0       0       0       0
  9004 ;;      Locals:         0       0       0       0       0
  9005 ;;      Temps:          0       0       0       0       0
  9006 ;;      Totals:         0       0       0       0       0
  9007 ;;Total ram usage:        0 bytes
  9008 ;; Hardware stack levels used:    1
  9009 ;; Hardware stack levels required when called:    1
  9010 ;; This function calls:
  9011 ;;		_I2C_Master_Wait
  9012 ;; This function is called by:
  9013 ;;		_main
  9014 ;; This function uses a non-reentrant model
  9015 ;;
  9016                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  9017                           	line	55
  9018                           global __ptext23
  9019                           __ptext23:	;psect for function _I2C_Master_Stop
  9020  083C                     psect	text23
  9021                           	file	"I2C.c"
  9022                           	line	55
  9023                           	global	__size_of_I2C_Master_Stop
  9024                           	__size_of_I2C_Master_Stop	equ	__end_of_I2C_Master_Stop-_I2C_Master_Stop
  9025  0009                     	
  9026                           _I2C_Master_Stop:	
  9027  083C                     ;incstack = 0
  9028                           	opt	stack 6
  9029                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  9030                           	line	57
  9031                           	
  9032                           l1943:	
  9033  083C                     ;I2C.c: 57:     I2C_Master_Wait();
  9034                           	fcall	_I2C_Master_Wait
  9035  083C  120A  158A  204F  120A  158A  	line	58
  9036                           	
  9037                           l1945:	
  9038  0841                     ;I2C.c: 58:     SSPCON2bits.PEN = 1;
  9039                           	bsf	status, 5	;RP0=1, select bank1
  9040  0841  1683               	bcf	status, 6	;RP1=0, select bank1
  9041  0842  1303               	bsf	(145)^080h,2	;volatile
  9042  0843  1511               	line	59
  9043                           	
  9044                           l44:	
  9045  0844                     	return
  9046  0844  0008               	opt stack 0
  9047                           GLOBAL	__end_of_I2C_Master_Stop
  9048                           	__end_of_I2C_Master_Stop:
  9049  0845                     	signat	_I2C_Master_Stop,89
  9050                           	global	_I2C_Master_Start
  9051                           
  9052 ;; *************** function _I2C_Master_Start *****************
  9053 ;; Defined at:
  9054 ;;		line 39 in file "I2C.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;		None
  9057 ;; Auto vars:     Size  Location     Type
  9058 ;;		None
  9059 ;; Return value:  Size  Location     Type
  9060 ;;                  1    wreg      void 
  9061 ;; Registers used:
  9062 ;;		wreg, status,2, status,0, pclath, cstack
  9063 ;; Tracked objects:
  9064 ;;		On entry : 0/0
  9065 ;;		On exit  : 0/0
  9066 ;;		Unchanged: 0/0
  9067 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9068 ;;      Params:         0       0       0       0       0
  9069 ;;      Locals:         0       0       0       0       0
  9070 ;;      Temps:          0       0       0       0       0
  9071 ;;      Totals:         0       0       0       0       0
  9072 ;;Total ram usage:        0 bytes
  9073 ;; Hardware stack levels used:    1
  9074 ;; Hardware stack levels required when called:    1
  9075 ;; This function calls:
  9076 ;;		_I2C_Master_Wait
  9077 ;; This function is called by:
  9078 ;;		_main
  9079 ;; This function uses a non-reentrant model
  9080 ;;
  9081                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  9082                           	line	39
  9083                           global __ptext24
  9084                           __ptext24:	;psect for function _I2C_Master_Start
  9085  0833                     psect	text24
  9086                           	file	"I2C.c"
  9087                           	line	39
  9088                           	global	__size_of_I2C_Master_Start
  9089                           	__size_of_I2C_Master_Start	equ	__end_of_I2C_Master_Start-_I2C_Master_Start
  9090  0009                     	
  9091                           _I2C_Master_Start:	
  9092  0833                     ;incstack = 0
  9093                           	opt	stack 6
  9094                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  9095                           	line	41
  9096                           	
  9097                           l1939:	
  9098  0833                     ;I2C.c: 41:     I2C_Master_Wait();
  9099                           	fcall	_I2C_Master_Wait
  9100  0833  120A  158A  204F  120A  158A  	line	42
  9101                           	
  9102                           l1941:	
  9103  0838                     ;I2C.c: 42:     SSPCON2bits.SEN = 1;
  9104                           	bsf	status, 5	;RP0=1, select bank1
  9105  0838  1683               	bcf	status, 6	;RP1=0, select bank1
  9106  0839  1303               	bsf	(145)^080h,0	;volatile
  9107  083A  1411               	line	43
  9108                           	
  9109                           l38:	
  9110  083B                     	return
  9111  083B  0008               	opt stack 0
  9112                           GLOBAL	__end_of_I2C_Master_Start
  9113                           	__end_of_I2C_Master_Start:
  9114  083C                     	signat	_I2C_Master_Start,89
  9115                           	global	_I2C_Master_Read
  9116                           
  9117 ;; *************** function _I2C_Master_Read *****************
  9118 ;; Defined at:
  9119 ;;		line 74 in file "I2C.c"
  9120 ;; Parameters:    Size  Location     Type
  9121 ;;  a               2    0[COMMON] unsigned short 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  temp            2    4[COMMON] unsigned short 
  9124 ;; Return value:  Size  Location     Type
  9125 ;;                  2    0[COMMON] unsigned short 
  9126 ;; Registers used:
  9127 ;;		wreg, status,2, status,0, pclath, cstack
  9128 ;; Tracked objects:
  9129 ;;		On entry : 0/0
  9130 ;;		On exit  : 0/0
  9131 ;;		Unchanged: 0/0
  9132 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9133 ;;      Params:         2       0       0       0       0
  9134 ;;      Locals:         2       0       0       0       0
  9135 ;;      Temps:          2       0       0       0       0
  9136 ;;      Totals:         6       0       0       0       0
  9137 ;;Total ram usage:        6 bytes
  9138 ;; Hardware stack levels used:    1
  9139 ;; Hardware stack levels required when called:    1
  9140 ;; This function calls:
  9141 ;;		_I2C_Master_Wait
  9142 ;; This function is called by:
  9143 ;;		_main
  9144 ;; This function uses a non-reentrant model
  9145 ;;
  9146                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  9147                           	line	74
  9148                           global __ptext25
  9149                           __ptext25:	;psect for function _I2C_Master_Read
  9150  08D7                     psect	text25
  9151                           	file	"I2C.c"
  9152                           	line	74
  9153                           	global	__size_of_I2C_Master_Read
  9154                           	__size_of_I2C_Master_Read	equ	__end_of_I2C_Master_Read-_I2C_Master_Read
  9155  002F                     	
  9156                           _I2C_Master_Read:	
  9157  08D7                     ;incstack = 0
  9158                           	opt	stack 6
  9159                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  9160                           	line	77
  9161                           	
  9162                           l1951:	
  9163  08D7                     ;I2C.c: 74: unsigned short I2C_Master_Read(unsigned short a);I2C.c: 75: {;I2C.c: 76:    
                                  unsigned short temp;;I2C.c: 77:     I2C_Master_Wait();
  9164                           	fcall	_I2C_Master_Wait
  9165  08D7  120A  158A  204F  120A  158A  	line	78
  9166                           	
  9167                           l1953:	
  9168  08DC                     ;I2C.c: 78:     SSPCON2bits.RCEN = 1;
  9169                           	bsf	status, 5	;RP0=1, select bank1
  9170  08DC  1683               	bcf	status, 6	;RP1=0, select bank1
  9171  08DD  1303               	bsf	(145)^080h,3	;volatile
  9172  08DE  1591               	line	79
  9173                           ;I2C.c: 79:     I2C_Master_Wait();
  9174                           	fcall	_I2C_Master_Wait
  9175  08DF  120A  158A  204F  120A  158A  	line	80
  9176                           	
  9177                           l1955:	
  9178  08E4                     ;I2C.c: 80:     temp = SSPBUF;
  9179                           	bcf	status, 5	;RP0=0, select bank0
  9180  08E4  1283               	bcf	status, 6	;RP1=0, select bank0
  9181  08E5  1303               	movf	(19),w	;volatile
  9182  08E6  0813               	movwf	(??_I2C_Master_Read+0)+0
  9183  08E7  00F2               	clrf	(??_I2C_Master_Read+0)+0+1
  9184  08E8  01F3               	movf	0+(??_I2C_Master_Read+0)+0,w
  9185  08E9  0872               	movwf	(I2C_Master_Read@temp)
  9186  08EA  00F4               	movf	1+(??_I2C_Master_Read+0)+0,w
  9187  08EB  0873               	movwf	(I2C_Master_Read@temp+1)
  9188  08EC  00F5               	line	81
  9189                           	
  9190                           l1957:	
  9191  08ED                     ;I2C.c: 81:     I2C_Master_Wait();
  9192                           	fcall	_I2C_Master_Wait
  9193  08ED  120A  158A  204F  120A  158A  	line	82
  9194                           	
  9195                           l1959:	
  9196  08F2                     ;I2C.c: 82:     if(a == 1){
  9197                           		decf	((I2C_Master_Read@a)),w
  9198  08F2  0370               iorwf	((I2C_Master_Read@a+1)),w
  9199  08F3  0471               	btfss	status,2
  9200  08F4  1D03               	goto	u2171
  9201  08F5  28F7               	goto	u2170
  9202  08F6  28F8               u2171:
  9203  08F7                     	goto	l50
  9204  08F7  28FC               u2170:
  9205  08F8                     	line	83
  9206                           	
  9207                           l1961:	
  9208  08F8                     ;I2C.c: 83:         SSPCON2bits.ACKDT = 0;
  9209                           	bsf	status, 5	;RP0=1, select bank1
  9210  08F8  1683               	bcf	status, 6	;RP1=0, select bank1
  9211  08F9  1303               	bcf	(145)^080h,5	;volatile
  9212  08FA  1291               	line	84
  9213                           ;I2C.c: 84:     }else{
  9214                           	goto	l51
  9215  08FB  28FF               	
  9216                           l50:	
  9217  08FC                     	line	85
  9218                           ;I2C.c: 85:         SSPCON2bits.ACKDT = 1;
  9219                           	bsf	status, 5	;RP0=1, select bank1
  9220  08FC  1683               	bcf	status, 6	;RP1=0, select bank1
  9221  08FD  1303               	bsf	(145)^080h,5	;volatile
  9222  08FE  1691               	line	86
  9223                           ;I2C.c: 86:     }
  9224                           	
  9225                           l51:	
  9226  08FF                     	line	87
  9227                           ;I2C.c: 87:     SSPCON2bits.ACKEN = 1;
  9228                           	bsf	(145)^080h,4	;volatile
  9229  08FF  1611               	line	88
  9230                           	
  9231                           l1963:	
  9232  0900                     ;I2C.c: 88:     return temp;
  9233                           	movf	(I2C_Master_Read@temp+1),w
  9234  0900  0875               	movwf	(?_I2C_Master_Read+1)
  9235  0901  00F1               	movf	(I2C_Master_Read@temp),w
  9236  0902  0874               	movwf	(?_I2C_Master_Read)
  9237  0903  00F0               	goto	l52
  9238  0904  2905               	
  9239                           l1965:	
  9240  0905                     	line	89
  9241                           	
  9242                           l52:	
  9243  0905                     	return
  9244  0905  0008               	opt stack 0
  9245                           GLOBAL	__end_of_I2C_Master_Read
  9246                           	__end_of_I2C_Master_Read:
  9247  0906                     	signat	_I2C_Master_Read,4218
  9248                           	global	_I2C_Master_Wait
  9249                           
  9250 ;; *************** function _I2C_Master_Wait *****************
  9251 ;; Defined at:
  9252 ;;		line 32 in file "I2C.c"
  9253 ;; Parameters:    Size  Location     Type
  9254 ;;		None
  9255 ;; Auto vars:     Size  Location     Type
  9256 ;;		None
  9257 ;; Return value:  Size  Location     Type
  9258 ;;                  1    wreg      void 
  9259 ;; Registers used:
  9260 ;;		wreg, status,2
  9261 ;; Tracked objects:
  9262 ;;		On entry : 0/0
  9263 ;;		On exit  : 0/0
  9264 ;;		Unchanged: 0/0
  9265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9266 ;;      Params:         0       0       0       0       0
  9267 ;;      Locals:         0       0       0       0       0
  9268 ;;      Temps:          0       0       0       0       0
  9269 ;;      Totals:         0       0       0       0       0
  9270 ;;Total ram usage:        0 bytes
  9271 ;; Hardware stack levels used:    1
  9272 ;; This function calls:
  9273 ;;		Nothing
  9274 ;; This function is called by:
  9275 ;;		_I2C_Master_Start
  9276 ;;		_I2C_Master_Stop
  9277 ;;		_I2C_Master_Write
  9278 ;;		_I2C_Master_Read
  9279 ;;		_I2C_Master_RepeatedStart
  9280 ;; This function uses a non-reentrant model
  9281 ;;
  9282                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9283                           	line	32
  9284                           global __ptext26
  9285                           __ptext26:	;psect for function _I2C_Master_Wait
  9286  084F                     psect	text26
  9287                           	file	"I2C.c"
  9288                           	line	32
  9289                           	global	__size_of_I2C_Master_Wait
  9290                           	__size_of_I2C_Master_Wait	equ	__end_of_I2C_Master_Wait-_I2C_Master_Wait
  9291  000F                     	
  9292                           _I2C_Master_Wait:	
  9293  084F                     ;incstack = 0
  9294                           	opt	stack 6
  9295                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  9296                           	line	34
  9297                           	
  9298                           l1891:	
  9299  084F                     ;I2C.c: 34:     while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  9300                           	goto	l32
  9301  084F  2850               	
  9302                           l33:	
  9303  0850                     	
  9304                           l32:	
  9305  0850                     	bsf	status, 5	;RP0=1, select bank1
  9306  0850  1683               	bcf	status, 6	;RP1=0, select bank1
  9307  0851  1303               	btfsc	(148)^080h,(2)&7	;volatile
  9308  0852  1914               	goto	u2111
  9309  0853  2855               	goto	u2110
  9310  0854  2856               u2111:
  9311  0855                     	goto	l32
  9312  0855  2850               u2110:
  9313  0856                     	
  9314                           l1893:	
  9315  0856                     	movf	(145)^080h,w	;volatile
  9316  0856  0811               	andlw	01Fh
  9317  0857  391F               	btfss	status,2
  9318  0858  1D03               	goto	u2121
  9319  0859  285B               	goto	u2120
  9320  085A  285C               u2121:
  9321  085B                     	goto	l32
  9322  085B  2850               u2120:
  9323  085C                     	goto	l35
  9324  085C  285D               	
  9325                           l34:	
  9326  085D                     	line	35
  9327                           	
  9328                           l35:	
  9329  085D                     	return
  9330  085D  0008               	opt stack 0
  9331                           GLOBAL	__end_of_I2C_Master_Wait
  9332                           	__end_of_I2C_Master_Wait:
  9333  085E                     	signat	_I2C_Master_Wait,89
  9334                           global	___latbits
  9335                           ___latbits	equ	2
  9336  0002                     	global	btemp
  9337                           	btemp set 07Eh
  9338  007E                     
  9339                           	DABS	1,126,2	;btemp
  9340                           	global	wtemp0
  9341                           	wtemp0 set btemp+0
  9342  007E                     	end


Data Sizes:
    Strings     15
    Constant    10
    Data        0
    BSS         29
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80      4      33
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 3
		 -> STR_1(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 4
		 -> writeIntLCD@buffer(BANK0[4]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    writeStrLCD@string	PTR unsigned char  size(2) Largest target is 4
		 -> STR_5(CODE[3]), STR_4(CODE[3]), STR_3(CODE[3]), STR_2(CODE[3]), 
		 -> writeIntLCD@buffer(BANK0[4]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _writeStrLCD->_writeCharLCD
    _setCursorLCD->_cmdLCD
    _initLCD->_cmdLCD
    _clcLCD->_cmdLCD
    _I2C_Master_Init->___lldiv
    ___flneg->___xxtofl
    ___flmul->___xxtofl
    ___fldiv->___xxtofl
    ___fladd->___xxtofl

Critical Paths under _main in BANK0

    _main->___fldiv
    _writeFloat->_writeIntLCD
    _writeIntLCD->_sprintf
    _setup->_I2C_Master_Init
    ___flmul->___fladd
    ___fldiv->___flmul
    ___fladd->___flneg

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   15191
                                              0 BANK1      4     4      0
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___flneg
                            ___fltol
                           ___xxtofl
                       _setCursorLCD
                              _setup
                       _writeCharLCD
                         _writeFloat
                        _writeIntLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeFloat                                           4     2      2    2879
                                             21 BANK0      4     2      2
                       _setCursorLCD
                       _writeCharLCD
                        _writeIntLCD
 ---------------------------------------------------------------------------------
 (1) _writeIntLCD                                          8     8      0    1779
                                             13 BANK0      8     8      0
                            _sprintf
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (2) _sprintf                                             21    18      3    1211
                                              0 BANK0     13    10      3
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     311
                                              8 COMMON     6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     314
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _setup                                                1     1      0    1720
                                              8 BANK0      1     1      0
                    _I2C_Master_Init
                             _clcLCD
                            _initLCD
                       _setCursorLCD
                        _writeStrLCD
 ---------------------------------------------------------------------------------
 (1) _writeStrLCD                                          7     5      2     492
                                              2 COMMON     7     5      2
                       _writeCharLCD
 ---------------------------------------------------------------------------------
 (2) _writeCharLCD                                         2     2      0      22
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _setCursorLCD                                         3     2      1     772
                                              3 COMMON     3     2      1
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _initLCD                                              2     2      0      22
                                              3 COMMON     2     2      0
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (2) _clcLCD                                               0     0      0      22
                             _cmdLCD
 ---------------------------------------------------------------------------------
 (3) _cmdLCD                                               3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Init                                      8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (1) ___fltol                                             11     7      4     381
                                              0 COMMON    11     7      4
 ---------------------------------------------------------------------------------
 (1) ___flneg                                              4     0      4     121
                                              0 BANK0      4     0      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___flmul                                             26    18      8    2569
                                             28 BANK0     26    18      8
                          __Umul8_16
                            ___fladd (ARG)
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (1) ___fldiv                                             26    18      8    1273
                                             54 BANK0     26    18      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) ___fladd                                             24    16      8    2262
                                              4 BANK0     24    16      8
                            ___flneg (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     250
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     197
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   ___fladd
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___fldiv
     ___flmul (ARG)
       __Umul8_16
       ___fladd (ARG)
         ___flneg (ARG)
           ___xxtofl (ARG)
         ___xxtofl (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flmul
     __Umul8_16
     ___fladd (ARG)
       ___flneg (ARG)
         ___xxtofl (ARG)
       ___xxtofl (ARG)
     ___flneg (ARG)
       ___xxtofl (ARG)
     ___xxtofl (ARG)
   ___flneg
     ___xxtofl (ARG)
   ___fltol
   ___xxtofl
   _setCursorLCD
     _cmdLCD
   _setup
     _I2C_Master_Init
       ___lldiv
     _clcLCD
       _cmdLCD
     _initLCD
       _cmdLCD
     _setCursorLCD
       _cmdLCD
     _writeStrLCD
       _writeCharLCD
   _writeCharLCD
   _writeFloat
     _setCursorLCD
       _cmdLCD
     _writeCharLCD
     _writeIntLCD
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
       _writeStrLCD
         _writeCharLCD
   _writeIntLCD
     _sprintf
       ___lwdiv
       ___lwmod
         ___lwdiv (ARG)
     _writeStrLCD
       _writeCharLCD
   _writeStrLCD
     _writeCharLCD

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      7F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      4      21       7       41.3%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      7F      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Mar 04 17:52:10 2020

             ___fldiv@aexp 006F               ___fldiv@bexp 006E                          pc 0002  
             ___fldiv@sign 0067                __CFG_CP$OFF 0000            writeStrLCD@cont 0077  
                       l32 0850                         l33 0850                         l34 085D  
                       l50 08FC                         l35 085D                         l51 08FF  
                       l52 0905                         l44 0844                         l29 093D  
                       l38 083B                         l47 084E                         l74 089E  
                       l82 09DF                         l91 0977                         l75 08A6  
                       l83 09BC                         l76 08AC                         l84 09FC  
                       l85 09FC                         l94 088F                         l79 0009  
                       l88 087B                         l97 0027                         _s3 00B4  
                       fsr 0004        __Umul8_16@word_mpld 0076                        l100 0AEB  
                      l101 0B06                        l330 0B59                        l331 0B69  
                      l332 0B73                        l325 0B6A                        l326 0B28  
                      l182 0AA6                        l174 0C3C                        l327 0B1A  
                      l175 0C5F                        l600 0331                        l328 0B2D  
                      l280 00E0                        l176 0C6E                        l601 02F1  
                      l329 0B2E                        l273 01A8                        l281 0100  
                      l177 0DF3                        l610 03BB                        l602 047D  
                      l290 01A7                        l282 00E1                        l274 00CA  
                      l178 0DF4                        l611 03D2                        l603 0330  
                      l291 01BB                        l283 011A                        l275 00DC  
                      l179 0DF4                        l620 0408                        l612 03F4  
                      l604 0319                        l700 07DD                        l292 01C1  
                      l284 0124                        l276 00E3                        l621 0410  
                      l613 03D3                        l605 031C                        l285 014C  
                      l277 00DE                        l630 046D                        l622 040F  
                      l614 03E1                        l606 0322                        l710 0BDE  
                      l278 01BC                        l286 0141                        l631 0471  
                      l623 044C                        l607 03FA                        l615 03E8  
                      l711 0BC3                        l703 0B8E                        l287 015E  
                      l279 00DF                        l632 047D                        l624 044C  
                      l616 03EB                        l608 03AD                        l640 0E1D  
                      l712 0BE5                        l704 0B96                        l288 019D  
                      l625 044B                        l617 03F3                        l609 03AC  
                      l641 0E29                        l481 0045                        l713 0BF2  
                      l705 0BA8                        l561 0A42                        l289 0163  
                      l626 0467                        l618 03F9                        l650 0EC2  
                      l642 0E3A                        l722 08B8                        l490 009F  
                      l482 00C1                        l714 0BE6                        l706 0C35  
                      l562 0A14                        l619 0411                        l651 0EE9  
                      l643 0E50                        l723 08C2                        l491 00B0  
                      l483 008E                        l707 0BBB                        l563 0A08  
                      l571 09B3                        l628 0457                        l660 0F6B  
                      l652 0EDF                        l644 0E4D                        l724 08D1  
                      l492 00C1                        l484 007A                        l716 0BFD  
                      l708 0BAD                        l564 0A19                        l572 098D  
                      l629 0466                        l581 01D5                        l661 0F62  
                      l653 0F0B                        l645 0E58                        l725 08D6  
                      l477 086B                        l485 007B                        l717 0BFD  
                      l709 0BC2                        l565 0A1A                        l573 0981  
                      l590 0277                        l582 01EB                        l662 0F6A  
                      l654 0F17                        l646 0E7A                        l638 0E0A  
                      l478 086C                        l486 008D                        l718 0C09  
                      l566 0A33                        l574 0992                        l591 023A  
                      l583 01E8                        l663 0F69                        l655 0F21  
                      l647 0FFF                        l639 0E20                        l487 00B1  
                      l719 0C2C                        l567 0A41                        l575 0993  
                      l592 02B0                        l584 01F4                        l664 0FA3  
                      l656 0F41                        l648 0E91                        l680 04D3  
                      l488 009E                        l568 0A47                        l576 09A4  
                      l593 02DE                        l585 0201                        l665 0FA2  
                      l657 0F22                        l649 0F10                        l681 04DE  
                      l489 00AA                        l577 09B2                        l594 02D5  
                      l586 020D                        l666 0FBF                        l658 0F31  
                      l690 075E                        l682 04F3                        l674 0491  
                      l578 09B8                        l595 02B1                        l587 0223  
                      l667 0FDB                        l659 0F46                        l691 0755  
                      l675 04A6                        l596 02BE                        l588 0220  
                      l668 0FE7                        l692 075D                        l684 04E9  
                      l676 04A4                        l597 02C1                        l589 022B  
                      l669 0FEB                        l693 075C                        l685 07F2  
                      l677 04AF                        l598 02C7                        l694 0796  
                      l686 0734                        l678 04C0                        l599 02DE  
                      l695 0795                        l687 0715                        l679 04D5  
                      l696 07AE                        l688 0724                        l697 07E5  
                      l689 0739                        l698 07C9                        l699 07E5  
                      _GIE 005F                        _RD0 0040                        _RD1 0041  
             __CFG_CPD$OFF 0000                        _adc 00BB                        _lux 00A0  
                      fsr0 0004                        indf 0000               ___flmul@aexp 004E  
             ___flmul@bexp 004F               ___flmul@sign 0049               ___flmul@temp 0054  
             ___flmul@prod 0050               __CFG_LVP$OFF 0000               ___fltol@exp1 007A  
                     l2001 0A88                       l2011 086B                       l2003 0A91  
                     l2101 023E                       l2013 086C                       l2021 0045  
                     l2005 0A9D                       l2111 0252                       l2103 0242  
                     l2007 085E                       l2031 0069                       l2023 005A  
                     l2015 0028                       l2201 03EB                       l2121 0266  
                     l2113 0256                       l2105 0246                       l2009 0868  
                     l2041 0094                       l2033 0070                       l2025 005B  
                     l2017 003B                       l2211 03FF                       l2203 03F0  
                     l2131 0278                       l2123 026A                       l2115 025A  
                     l2107 024A                       l2051 01C2                       l2043 009D  
                     l2035 0079                       l2027 0063                       l2019 0044  
                     l2221 0424                       l2213 0405                       l2205 03F4  
                     l2141 02C5                       l2133 0294                       l2125 026E  
                     l2117 025E                       l2109 024E                       l2061 01DA  
                     l2053 01C9                       l2301 0EA8                       l2045 009F  
                     l2037 007B                       l2029 0065                       l2231 045F  
                     l2223 0428                       l2215 040C                       l2207 03FA  
                     l2151 02E7                       l2143 02C7                       l2135 02B5  
                     l2127 0272                       l2119 0262                       l2071 01F4  
                     l2063 01DF                       l2055 01CF                       l2311 0EC7  
                     l2303 0EB0                       l2047 00B1                       l2039 008E  
                     l2241 0478                       l2233 0464                       l2225 0446  
                     l2217 0411                       l2209 03FB                       l2161 0310  
                     l2153 02F0                       l2145 02D0                       l2137 02BE  
                     l2129 0277                       l2081 020B                       l2073 01F9  
                     l2065 01E8                       l2057 01D3                       l2321 0EFB  
                     l2313 0ED9                       l2305 0EB8                       l2401 04A4  
                     l2049 00B6                       l2243 047C                       l2235 0467  
                     l2227 0451                       l2219 0416                       l2171 032B  
                     l2163 0319                       l2155 02F1                       l2139 02C1  
                     l2147 02D5                       l2091 0221                       l2083 020D  
                     l2075 01FF                       l2067 01E9                       l2059 01D5  
                     l2331 0F1F                       l2323 0EFC                       l2315 0EDD  
                     l2307 0EC0                       l2251 0E08                       l2411 04BE  
                     l2403 04A6                       l2237 046B                       l2229 0457  
                     l2181 039D                       l2165 031C                       l2157 0308  
                     l2149 02E2                       l2173 0331                       l2085 0212  
                     l2093 0223                       l2077 0201                       l2069 01EB  
                     l2341 0F3A                       l2333 0F22                       l2325 0F0B  
                     l2317 0EDF                       l2309 0EC2                       l2261 0E1E  
                     l2253 0E0A                       l2245 0DF7                       l2501 0775  
                     l2421 04D5                       l2413 04C0                       l2405 04AF  
                     l2239 046D                       l2191 03D3                       l2175 0347  
                     l2183 03AD                       l2167 0320                       l2159 030C  
                     l2095 0231                       l2087 0217                       l2079 0207  
                     l2351 0F5F                       l2335 0F2B                       l2343 0F41  
                     l2319 0EE9                       l2327 0F10                       l2271 0E38  
                     l2255 0E0F                       l2263 0E20                       l2247 0DFE  
                     l2511 07BD                       l2503 078E                       l2431 04F3  
                     l2423 04DE                       l2415 04C5                       l2407 04B4  
                     l2193 03DC                       l2185 03C3                       l2177 0396  
                     l2169 0322                       l2097 0235                       l2089 0220  
                     l2361 0F82                       l2353 0F66                       l2345 0F46  
                     l2337 0F2F                       l2329 0F17                       l2281 0E4E  
                     l2273 0E3A                       l2265 0E29                       l2257 0E14  
                     l2249 0E04                       l2521 07DD                       l2513 07C7  
                     l2505 0796                       l2441 0575                       l2433 0503  
                     l2425 04E3                       l2417 04CA                       l2409 04BA  
                     l1721 086E                       l1801 00DC                       l2601 0CA2  
                     l2195 03E0                       l2187 03C8                       l2179 0398  
                     l2099 023A                       l2371 0FCE                       l2363 0F9B  
                     l2355 0F6B                       l2347 0F47                       l2339 0F31  
                     l2291 0E79                       l2275 0E3F                       l2283 0E50  
                     l2267 0E2E                       l2259 0E1D                       l2523 07E9  
                     l2515 07C9                       l2507 07A3                       l2451 05E3  
                     l2443 0591                       l2435 0510                       l2427 04E9  
                     l2419 04D3                       l2531 0B7E                       l1723 0871  
                     l1731 09FF                       l1811 010C                       l1803 00E2  
                     l2611 0DAB                       l2603 0CAC                       l2197 03E5  
                     l2189 03D1                       l2381 0FE7                       l2373 0FD2  
                     l2357 0F70                       l2365 0FA3                       l2349 0F4B  
                     l2285 0E60                       l2293 0E7A                       l2277 0E44  
                     l2269 0E34                       l2525 07F2                       l2517 07D7  
                     l2509 07AE                       l2461 0673                       l2453 05F3  
                     l2445 05AD                       l2437 052D                       l2429 04F2  
                     l2541 0BAD                       l2533 0B8E                       l1901 08A6  
                     l1725 0873                       l1741 0A1A                       l1733 0A05  
                     l1821 0123                       l1813 0110                       l1805 00E3  
                     l2621 0DE1                       l2613 0DBB                       l2605 0D09  
                     l2199 03E8                       l2383 0FF6                       l2375 0FDA  
                     l2367 0FB0                       l2359 0F7E                       l2295 0E7F  
                     l2287 0E6C                       l2279 0E4D                       l2519 07DB  
                     l2471 0707                       l2463 0683                       l2455 0610  
                     l2447 05B6                       l2439 0549                       l2391 048B  
                     l2551 0BE6                       l2543 0BBB                       l2535 0B9E  
                     l2527 0B75                       l1903 0003                       l1911 0953  
                     l1727 0878                       l1743 0A2B                       l1735 0A08  
                     l1751 0A42                       l1831 0152                       l1823 0124  
                     l1815 0114                       l1807 0100                       l2623 0DE9  
                     l2615 0DC7                       l2607 0D1C                       l2385 0FFF  
                     l2377 0FE1                       l2369 0FBF                       l2297 0E90  
                     l2289 0E70                       l2481 072D                       l2473 0715  
                     l2465 06B0                       l2457 0629                       l2449 05C6  
                     l2393 048F                       l2561 0C21                       l2553 0BF2  
                     l2545 0BC3                       l2537 0BA7                       l2529 0B7A  
                     l1921 0971                       l1913 0959                       l1905 093E  
                     l1753 0A47                       l1745 0A31                       l1737 0A0F  
                     l1729 09FD                       l1761 0988                       l1841 0198  
                     l1833 0159                       l1825 0140                       l1817 011A  
                     l1809 0108                       l2617 0DCF                       l2609 0D98  
                     l2379 0FE5                       l2299 0E91                       l1931 08BC  
                     l2491 0752                       l2475 071E                       l2483 0734  
                     l2467 06D6                       l2459 0646                       l2395 0491  
                     l2387 047E                       l2563 0C26                       l2555 0BF6  
                     l2547 0BC7                       l2539 0BA8                       l1915 095F  
                     l1907 0947                       l1747 0A33                       l1739 0A14  
                     l1771 09AB                       l1763 098D                       l1755 0978  
                     l1843 019D                       l1835 015E                       l1827 0141  
                     l1819 011C                       l1923 000D                       l2619 0DD5  
                     l1941 0838                       l1933 08CB                       l1925 08AE  
                     l2493 0759                       l2485 0739                       l2477 0722  
                     l2469 06FE                       l2397 0496                       l2389 0485  
                     l2565 0C2A                       l2557 0C01                       l2549 0BD5  
                     l1861 0B28                       l1781 0882                       l1917 0965  
                     l1909 094D                       l1749 0A3A                       l1765 0993  
                     l1757 097E                       l1773 09B3                       l1837 0163  
                     l1829 014C                       l2645 00F5                       l1845 01A8  
                     l2581 0C4A                       l1951 08D7                       l1943 083C  
                     l1935 08D1                       l1927 08B0                       l2495 075E  
                     l2487 073A                       l2479 0724                       l2399 049B  
                     l2567 0C2C                       l2559 0C0B                       l1871 0B59  
                     l1863 0B2E                       l1855 0B07                       l1783 088C  
                     l1919 096B                       l1791 09DF                       l1775 09B8  
                     l1767 099D                       l1759 0981                       l1839 0191  
                     l1847 01BC                       l2591 0C77                       l2583 0C50  
                     l2575 0C36                       l1961 08F8                       l1953 08DC  
                     l1945 0841                       l1937 08D6                       l1929 08B8  
                     l2497 0763                       l2489 073E                       l2569 0C35  
                     l1873 0B62                       l1865 0B37                       l1857 0B17  
                     l1881 090A                       l1777 087D                       l1785 09B9  
                     l1769 09A4                       l1849 01C1                       l1793 00C5  
                     l2593 0C81                       l2585 0C5F                       l2577 0C3C  
                     l1891 084F                       l1963 0900                       l1955 08E4  
                     l1939 0833                       l1947 0845                       l2499 0771  
                     l1867 0B49                       l1859 0B1A                       l1875 0B6A  
                     l1883 090D                       l1779 0880                       l1787 09BC  
                     l1795 00CA                       l1971 0ABC                       l2595 0C86  
                     l2587 0C6E                       l2579 0C41                       l1893 0856  
                     l1965 0905                       l1957 08ED                       l1949 084A  
                     l1877 0B73                       l1869 0B57                       l1885 093A  
                     l1789 09D8                       l1797 00D0                       l1981 0AEB  
                     l1973 0AC9                       l2597 0C8F                       l2589 0C72  
                     l1959 08F2                       l1887 093B                       l1879 0906  
                     l1895 0891                       l1991 0A61                       l1799 00D7  
                     l1983 0AF3                       l1975 0ACF                       l1967 0AAA  
                     l2599 0C9D                       l1889 093C                       l1897 0896  
                     l1993 0A66                       l1985 0B00                       l1977 0ADC  
                     l1969 0AB4                       l1899 089E                       l1995 0A6B  
                     l1987 0A48                       l1979 0AE4                       l1997 0A73  
                     l1989 0A54                       l1999 0A7C                       STR_1 0826  
                     STR_2 081A                       STR_3 081D                       STR_4 0820  
                     STR_5 0823                       u2000 0152                       u2001 0151  
                     u2010 01A6                       u2011 01A5                       u2100 091D  
                     u2020 01BA                       u2021 01B9                       u2110 0856  
                     u2030 0B17                       u2111 0855                       u2031 0B16  
                     u2120 085C                       u3000 0F82                       u2200 003B  
                     u2121 085B                       u3001 0F81                       u2201 003A  
                     u2105 0918                       u3010 0F91                       u2210 0053  
                     u2050 0B2C                       u2130 0896                       u2051 0B2B  
                     u2131 0895                       u2300 01D3                       u3020 0FB0  
                     u2140 08BC                       u3100 04CA                       u2220 0069  
                     u2301 01D2                       u3021 0FAF                       u2141 08BB  
                     u3101 04C9                       u2221 0068                       u2045 0B1C  
                     u2310 01DA                       u3030 0FCE                       u3110 04E3  
                     u2230 0070                       u2070 0B49                       u2311 01D9  
                     u3031 0FCD                       u3015 0F8C                       u3111 04E2  
                     u2231 006F                       u2215 004E                       u2071 0B48  
                     u2400 029F                       u2320 01DF                       u3040 0FE5  
                     u2160 08D0                       u3120 04E8                       u2401 029D  
                     u2321 01DE                       u3041 0FE4                       u3025 0FAC  
                     u2161 08CF                       u3121 04E7                       u2065 0B30  
                     u2170 08F8                       u2410 02A0                       u2330 01FF  
                     u3050 048F                       u2250 008C                       u2090 0B68  
                     u2171 08F7                       u2331 01FE                       u3035 0FCA  
                     u2155 08C3                       u3211 0638                       u3131 053B  
                     u3051 048E                       u2251 008B                       u2091 0B67  
                     u2075 0B45                       u2500 0310                       u2420 02B5  
                     u2340 020B                       u3300 0722                       u3212 063F  
                     u3132 0542                       u3060 0496                       u2260 0094  
                     u2180 0AE4                       u2501 030F                       u2421 02B4  
                     u2341 020A                       u3301 0721                       u3221 0665  
                     u3213 0646                       u3205 0612                       u3141 0557  
                     u3133 0549                       u3061 0495                       u2261 0093  
                     u2245 007C                       u2085 0B5A                       u2181 0AE3  
                     u2510 0320                       u2430 02C5                       u2350 0212  
                     u3222 066C                       u3142 055E                       u3070 049B  
                     u2190 0868                       u2511 031F                       u2431 02C4  
                     u2351 0211                       u3231 0692                       u3223 0673  
                     u3151 0583                       u3143 0565                       u3071 049A  
                     u2191 0867                       u2600 03E0                       u2360 0217  
                     u3400 07BD                       u3320 0738                       u3240 06BC  
                     u3232 0699                       u3152 058A                       u3080 04BE  
                     u2280 00AF                       u2601 03DF                       u2361 0216  
                     u3401 07BC                       u3321 0737                       u3233 06A0  
                     u3161 059F                       u3153 0591                       u3081 04BD  
                     u2281 00AE                       u2610 03E5                       u2530 0347  
                     u2450 02DD                       u2370 0231                       u3410 07DB  
                     u3330 073E                       u3162 05A6                       u3090 04C5  
                     u2290 00B6                       u1810 0A18                       u2611 03E4  
                     u2531 0346                       u2451 02DC                       u2371 0230  
                     u3411 07DA                       u3331 073D                       u3315 0726  
                     u3251 06C8                       u3163 05AD                       u3091 04C4  
                     u2291 00B5                       u2275 00A1                       u1811 0A17  
                     u2700 0446                       u2620 03F0                       u2540 036D  
                     u2460 02E2                       u2380 0235                       u3340 0752  
                     u3260 06E4                       u3252 06CF                       u3500 0BF6  
                     u3420 0B7A                       u2701 0445                       u2621 03EF  
                     u2541 036E                       u2533 0343                       u2525 0324  
                     u2461 02E1                       u2445 02C9                       u2381 0234  
                     u3405 07B9                       u3341 0751                       u3253 06D6  
                     u3245 06B7                       u3181 05D5                       u3501 0BF5  
                     u3421 0B79                       u1805 0A09                       u2710 0451  
                     u2630 03F8                       u2550 037F                       u2542 0373  
                     u2470 02E7                       u2390 0294                       u3350 0759  
                     u3182 05DC                       u3510 0BFC                       u3430 0B7E  
                     u1830 0A2B                       u1910 09B1                       u2711 0450  
                     u2631 03F7                       u2551 0380                       u2543 0374  
                     u2471 02E6                       u2391 0293                       u3351 0758  
                     u3271 06F0                       u3191 0602                       u3183 05E3  
                     u3175 05AF                       u3511 0BFB                       u3431 0B7D  
                     u1831 0A2A                       u1911 09B0                       u2720 0456  
                     u2640 03FF                       u2560 039D                       u2552 0385  
                     u2800 0E3F                       u3360 0763                       u3272 06F7  
                     u3192 0609                       u3520 0C01                       u3440 0B9E  
                     u1920 09C6                       u2721 0455                       u2641 03FE  
                     u2561 039C                       u2553 0386                       u2481 02FA  
                     u2801 0E3E                       u3361 0762                       u3273 06FE  
                     u3265 06DF                       u3193 0610                       u3521 0C00  
                     u3441 0B9D                       u1825 0A1B                       u1905 09A5  
                     u2730 0464                       u2650 0405                       u2570 03C3  
                     u2490 030C                       u2482 0301                       u2810 0E44  
                     u3370 0775                       u3530 0C16                       u1930 09E9  
                     u1850 0A40                       u2731 0463                       u2651 0404  
                     u2571 03C2                       u2491 030B                       u2483 0308  
                     u2395 0290                       u2811 0E43                       u3371 0774  
                     u1851 0A3F                       u1835 0A27                       u2740 046B  
                     u2660 040C                       u2580 03C8                       u2900 0F16  
                     u2820 0E60                       u3380 0784                       u3540 0C26  
                     u3460 0BC1                       u1940 09FB                       u1860 097E  
                     u2741 046A                       u2661 040B                       u2581 03C7  
                     u2901 0F15                       u2821 0E5F                       u3285 0700  
                     u3541 0C25                       u3461 0BC0                       u1941 09FA  
                     u1845 0A34                       u1861 097D                       u2750 047C  
                     u2670 0416                       u2910 0F1F                       u2830 0E7F  
                     u3390 07A3                       u3550 0C2A                       u1790 0A05  
                     u1950 00D0                       u2751 047B                       u2671 0415  
                     u2911 0F1E                       u2831 0E7E                       u3391 07A2  
                     u3295 0717                       u3551 0C29                       u3535 0C11  
                     u3455 0BB2                       u3607 0942                       u1791 0A04  
                     u1951 00CF                       u2680 0428                       u2840 0EC7  
                     u2760 0E08                       u3480 0BE4                       u1880 0991  
                     u1960 0110                       u3560 0C50                       u2681 0427  
                     u2841 0EC6                       u2761 0E07                       u3385 077F  
                     u3481 0BE3                       u3617 0887                       u1881 0990  
                     u1961 010F                       u3561 0C4F                       u2690 0437  
                     u2930 0F2F                       u2770 0E0F                       u1890 099D  
                     u1970 0122                       u2595 03D5                       u2931 0F2E  
                     u2771 0E0E                       u3395 079F                       u3475 0BD6  
                     u1891 099C                       u1875 0982                       u1971 0121  
                     _PEIE 005E                       u2780 0E14                       u1980 013F  
                     u2925 0F24                       u2781 0E13                       u1981 013E  
                     u2950 0F45                       u2870 0EDD                       u2790 0E38  
                     u1990 014B                       u2695 0432                       u2951 0F44  
                     u2871 0EDC                       u2855 0EC9                       u2791 0E37  
                     u3495 0BEA                       u1895 0999                       u1991 014A  
                     u2960 0F4B                       u2961 0F4A                       u2945 0F33  
                     u2865 0ED2                       u1985 013B                       u3577 0C7D  
                     u2970 0F5F                       u2890 0EFB                       u2971 0F5E  
                     u2891 0EFA                       u3587 0CA8                       u2980 0F66  
                     u2981 0F65                       u2885 0EE1                       u3597 0876  
                     u2990 0F70                       u2991 0F6F                       u2895 0EF7  
             __CFG_WRT$OFF 0000                       _dec1 00B9                       _dec2 00B6  
        writeStrLCD@string 0072                       _main 0C36                       btemp 007E  
                     start 0000              __CFG_IESO$OFF 0000            ___fldiv@new_exp 0068  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                _writeIntLCD 000A              ___fltol@sign1 0079  
          __end_of___fladd 047E                      ?_main 0070            __end_of___fldiv 1000  
          __end_of___flneg 086D              __CFG_WDTE$OFF 0000            __end_of___flmul 07F3  
          __end_of___fltol 00C2                      _ANSEL 0188            __end_of___lldiv 0B74  
          __end_of___lwdiv 0A48            __end_of___lwmod 09B9                _writeStrLCD 09B9  
                    _PORTB 0006                      _PORTD 0008                      _TRISB 0086  
                    _TRISD 0088                      _SSPIE 0463                      _SSPIF 0063  
           __CFG_FCMEN$OFF 0000            __end_of_initLCD 0978            __end_of_dpowers 081A  
                    _setup 0A48      __size_of_writeCharLCD 000F             __CFG_BOREN$OFF 0000  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 01C2             __CFG_MCLRE$OFF 0000            __initialization 07F3  
             __end_of_main 0DF7                     ??_main 00BD               _writeCharLCD 086D  
        ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070         ??_I2C_Master_Start 0070  
       ??_I2C_Master_Write 0072                     ?_setup 0070                     _ANSELH 0189  
                   _SSPADD 0093                     _TRISC3 043B                     _TRISC4 043C  
                   _SSPCON 0014                     _SSPBUF 0013           __end_of___xxtofl 0C36  
           __CFG_PWRTE$OFF 0000          writeIntLCD@buffer 0030          writeIntLCD@numero 0034  
                   _clcLCD 0003                     _cmdLCD 087C                  ??___fladd 002C  
                ??___fldiv 005E                  ??___flneg 007E                  ??___flmul 0044  
                ??___fltol 0074                  ??___lldiv 0078                  ??___lwdiv 0074  
                ??___lwmod 007C                     _float1 00AC                     _float2 00A4  
                   _cursor 00BC                     _toggle 00B5                  ??_initLCD 0073  
       __size_of__Umul8_16 002A                  ??_sprintf 0023               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070    __end_of__initialization 07FC  
        writeFloat@decimal 0035                 ___flneg@f1 0020                 ___fltol@f1 0070  
        writeFloat@initPos 0036          writeFloat@integer 0038             __pcstackCOMMON 0070  
            __end_of_setup 0AA7                    ??_setup 0028                 __pbssBANK1 00A0  
            ?_setCursorLCD 0073          __end_of__Umul8_16 08D7                 __pmaintext 0C36  
                  ?_clcLCD 0070                    ?_cmdLCD 0070               ?_writeIntLCD 0070  
             ?_writeStrLCD 0072                  ?___xxtofl 0070                    _SSPCON2 0091  
                  _SSPSTAT 0094                 __stringtab 0800             ??_setCursorLCD 0074  
                  ___fladd 01C2              setCursorLCD@x 0073              setCursorLCD@y 0075  
                  ___fldiv 0DF7            __size_of_clcLCD 0007                    ___flneg 085E  
          __size_of_cmdLCD 0014                    ___flmul 047E                    ___fltol 0028  
                  ___lldiv 0B07                    ___lwdiv 09FD                    ___lwmod 0978  
                  __ptext1 0AA7                    __ptext2 000A                    __ptext3 00C2  
                  __ptext4 0978                    __ptext5 09FD                    __ptext6 0A48  
                  __ptext7 09B9                    __ptext8 086D                    __ptext9 0890  
                  _initLCD 093E                    _entero1 00BA                    _entero2 00B7  
                  _counter 00B8                    _dpowers 0810                 ??___xxtofl 0074  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002F   __size_of_I2C_Master_Wait 000F  
 __size_of_I2C_Master_Stop 0009                    _sprintf 00C2                    clrloop0 082C  
     end_of_initialization 07FC  __size_of_I2C_Master_Start 0009  __size_of_I2C_Master_Write 000A  
          ___lldiv@divisor 0070            ___lldiv@counter 007D           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070                ___fladd@grs 003B              ___xxtofl@sign 0078  
                _TRISCbits 0087                ___fldiv@grs 006A                ___fldiv@rem 0063  
              ___flmul@grs 004A                 _writeFloat 0AA7             __end_of_clcLCD 000A  
           __end_of_cmdLCD 0890       __end_of_setCursorLCD 08AD       __size_of_writeIntLCD 001E  
      start_initialization 07F3       __size_of_writeStrLCD 0044          ??_I2C_Master_Init 0024  
        ??_I2C_Master_Read 0072          ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070  
 __CFG_FOSC$INTRC_NOCLKOUT 0000                   ??_clcLCD 0073                   ??_cmdLCD 0070  
                __Umul8_16 08AD                  ___fladd@a 0028                  ___fladd@b 0024  
                ___fldiv@a 0056                  ___fldiv@b 005A                  ___flmul@a 0040  
                ___flmul@b 003C                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00BD          __size_of___xxtofl 00C2      writeCharLCD@character 0071  
              sprintf@flag 0027                sprintf@prec 0028           _I2C_Master_Start 0833  
         _I2C_Master_Write 0845           ___lwdiv@dividend 0072                  cmdLCD@cmd 0072  
                 ?___fladd 0024                   ?___fldiv 0056                   ?___flneg 0020  
                 ?___flmul 003C                   ?___fltol 0070                   ?___lldiv 0070  
              ?_writeFloat 0035                 ?__Umul8_16 0070                   ?___lwdiv 0070  
                 ?___lwmod 0078                  __pstrings 0800                   ?_initLCD 0070  
            ?_writeCharLCD 0070           ___lwdiv@quotient 0075                   ?_sprintf 0020  
           __size_of_setup 005F                  clear_ram0 082B      __size_of_setCursorLCD 001D  
              __stringbase 080F             ??_writeCharLCD 0070        I2C_Master_Read@temp 0074  
      __size_of_writeFloat 0060               _setCursorLCD 0890                ??__Umul8_16 0072  
         __size_of___fladd 02BC           __size_of___fldiv 0209           __size_of___flneg 000F  
         __size_of___flmul 0375           __size_of___fltol 009A           __size_of___lldiv 006D  
         __size_of___lwdiv 004B           __size_of___lwmod 0041         __end_of__stringtab 0810  
               sprintf@val 0029            _I2C_Master_Init 0906            _I2C_Master_Read 08D7  
         __size_of_initLCD 003A                   ___xxtofl 0B74            _I2C_Master_Wait 084F  
          _I2C_Master_Stop 083C            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 093E                   __ptext11 0003                   __ptext20 0DF7  
                 __ptext12 087C                   __ptext21 01C2                   __ptext13 0906  
                 __ptext22 0845                   __ptext14 0B07                   __ptext23 083C  
                 __ptext15 0B74                   __ptext24 0833                   __ptext16 0028  
                 __ptext25 08D7                   __ptext17 085E                   __ptext26 084F  
                 __ptext18 047E                   __ptext19 08AD          __CFG_BOR4V$BOR40V 0000  
         __size_of_sprintf 0100              __size_of_main 01C1                   _sensorF1 00B0  
                 _sensorF2 00A8              ??_writeIntLCD 002D              ??_writeStrLCD 0074  
 __end_of_I2C_Master_Start 083C   __end_of_I2C_Master_Write 084F                  sprintf@ap 0026  
                sprintf@sp 002B           ___lwmod@dividend 007A           ___lldiv@dividend 0074  
     __end_of_writeCharLCD 087C                  stringcode 080A               ??_writeFloat 0037  
  __end_of_I2C_Master_Init 093E    __end_of_I2C_Master_Read 0906    __end_of_I2C_Master_Wait 085E  
  __end_of_I2C_Master_Stop 0845     __Umul8_16@multiplicand 0070                   sprintf@c 002C  
                 sprintf@f 0020           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0078            ___lwmod@counter 007D                   stringdir 080A  
                 stringtab 0800        __end_of_writeIntLCD 0028                _SSPCON2bits 0091  
      __end_of_writeStrLCD 09FD              ___fladd@signs 0038         __end_of_writeFloat 0B07  
             ___fladd@aexp 0039               ___fladd@bexp 003A       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
