

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Feb 28 16:03:49 2020

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     	FNCALL	_main,_setWidth
   400                           	FNCALL	_main,_setup
   401                           	FNCALL	_setup,_configPWM
   402                           	FNCALL	_configPWM,_setWidth
   403                           	FNCALL	_setWidth,___awdiv
   404                           	FNROOT	_main
   405                           	global	_CCPR2L
   406                           _CCPR2L	set	0x1B
   407  001B                     	global	_T2CONbits
   408                           _T2CONbits	set	0x12
   409  0012                     	global	_PIR1bits
   410                           _PIR1bits	set	0xC
   411  000C                     	global	_CCP2CONbits
   412                           _CCP2CONbits	set	0x1D
   413  001D                     	global	_PORTD
   414                           _PORTD	set	0x8
   415  0008                     	global	_PORTB
   416                           _PORTB	set	0x6
   417  0006                     	global	_PORTAbits
   418                           _PORTAbits	set	0x5
   419  0005                     	global	_PR2
   420                           _PR2	set	0x92
   421  0092                     	global	_TRISCbits
   422                           _TRISCbits	set	0x87
   423  0087                     	global	_TRISAbits
   424                           _TRISAbits	set	0x85
   425  0085                     	global	_OSCCONbits
   426                           _OSCCONbits	set	0x8F
   427  008F                     	global	_TRISD
   428                           _TRISD	set	0x88
   429  0088                     	global	_TRISB
   430                           _TRISB	set	0x86
   431  0086                     	global	_ANSELH
   432                           _ANSELH	set	0x189
   433  0189                     	global	_ANSEL
   434                           _ANSEL	set	0x188
   435  0188                     ; #config settings
   436                           global __CFG_FOSC$INTRC_NOCLKOUT
   437                           __CFG_FOSC$INTRC_NOCLKOUT equ 0x0
   438  0000                     global __CFG_WDTE$OFF
   439                           __CFG_WDTE$OFF equ 0x0
   440  0000                     global __CFG_PWRTE$OFF
   441                           __CFG_PWRTE$OFF equ 0x0
   442  0000                     global __CFG_MCLRE$OFF
   443                           __CFG_MCLRE$OFF equ 0x0
   444  0000                     global __CFG_CP$OFF
   445                           __CFG_CP$OFF equ 0x0
   446  0000                     global __CFG_CPD$OFF
   447                           __CFG_CPD$OFF equ 0x0
   448  0000                     global __CFG_BOREN$OFF
   449                           __CFG_BOREN$OFF equ 0x0
   450  0000                     global __CFG_IESO$OFF
   451                           __CFG_IESO$OFF equ 0x0
   452  0000                     global __CFG_FCMEN$OFF
   453                           __CFG_FCMEN$OFF equ 0x0
   454  0000                     global __CFG_LVP$OFF
   455                           __CFG_LVP$OFF equ 0x0
   456  0000                     global __CFG_BOR4V$BOR40V
   457                           __CFG_BOR4V$BOR40V equ 0x0
   458  0000                     global __CFG_WRT$OFF
   459                           __CFG_WRT$OFF equ 0x0
   460  0000                     	file	"C:\Users\JIRS0129\AppData\Local\Temp\scko."
   461                           	line	#
   462                           psect cinit,class=CODE,delta=2
   463                           global start_initialization
   464                           start_initialization:
   465  07FC                     
   466                           global __initialization
   467                           __initialization:
   468  07FC                     psect cinit,class=CODE,delta=2,merge=1
   469                           global end_of_initialization,__end_of__initialization
   470                           
   471                           ;End of C runtime variable initialization code
   472                           
   473                           end_of_initialization:
   474  07FC                     __end_of__initialization:
   475  07FC                     clrf status
   476  07FC  0183               ljmp _main	;jump to C main() function
   477  07FD  120A  118A  2F1A   psect	cstackCOMMON,class=COMMON,space=1,noexec
   478                           global __pcstackCOMMON
   479                           __pcstackCOMMON:
   480  0070                     ?_setup:	; 1 bytes @ 0x0
   481  0070                     ?_setWidth:	; 1 bytes @ 0x0
   482  0070                     ?_configPWM:	; 1 bytes @ 0x0
   483  0070                     ?_main:	; 1 bytes @ 0x0
   484  0070                     	global	?___awdiv
   485                           ?___awdiv:	; 2 bytes @ 0x0
   486  0070                     	global	___awdiv@divisor
   487                           ___awdiv@divisor:	; 2 bytes @ 0x0
   488  0070                     	ds	2
   489  0070                     	global	___awdiv@dividend
   490                           ___awdiv@dividend:	; 2 bytes @ 0x2
   491  0072                     	ds	2
   492  0072                     ??___awdiv:	; 1 bytes @ 0x4
   493  0074                     	ds	1
   494  0074                     	global	___awdiv@counter
   495                           ___awdiv@counter:	; 1 bytes @ 0x5
   496  0075                     	ds	1
   497  0075                     	global	___awdiv@sign
   498                           ___awdiv@sign:	; 1 bytes @ 0x6
   499  0076                     	ds	1
   500  0076                     	global	___awdiv@quotient
   501                           ___awdiv@quotient:	; 2 bytes @ 0x7
   502  0077                     	ds	2
   503  0077                     ??_setWidth:	; 1 bytes @ 0x9
   504  0079                     	ds	3
   505  0079                     	global	setWidth@time
   506                           setWidth@time:	; 1 bytes @ 0xC
   507  007C                     	ds	1
   508  007C                     ??_setup:	; 1 bytes @ 0xD
   509  007D                     ??_configPWM:	; 1 bytes @ 0xD
   510  007D                     ??_main:	; 1 bytes @ 0xD
   511  007D                     ;!
   512                           ;!Data Sizes:
   513                           ;!    Strings     0
   514                           ;!    Constant    0
   515                           ;!    Data        0
   516                           ;!    BSS         0
   517                           ;!    Persistent  0
   518                           ;!    Stack       0
   519                           ;!
   520                           ;!Auto Spaces:
   521                           ;!    Space          Size  Autos    Used
   522                           ;!    COMMON           14     13      13
   523                           ;!    BANK0            80      0       0
   524                           ;!    BANK1            80      0       0
   525                           ;!    BANK3            96      0       0
   526                           ;!    BANK2            96      0       0
   527                           
   528                           ;!
   529                           ;!Pointer List with Targets:
   530                           ;!
   531                           ;!    None.
   532                           
   533                           
   534                           ;!
   535                           ;!Critical Paths under _main in COMMON
   536                           ;!
   537                           ;!    _main->_setWidth
   538                           ;!    _configPWM->_setWidth
   539                           ;!    _setWidth->___awdiv
   540                           ;!
   541                           ;!Critical Paths under _main in BANK0
   542                           ;!
   543                           ;!    None.
   544                           ;!
   545                           ;!Critical Paths under _main in BANK1
   546                           ;!
   547                           ;!    None.
   548                           ;!
   549                           ;!Critical Paths under _main in BANK3
   550                           ;!
   551                           ;!    None.
   552                           ;!
   553                           ;!Critical Paths under _main in BANK2
   554                           ;!
   555                           ;!    None.
   556                           
   557 ;;
   558 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   559 ;;
   560                           
   561                           ;!
   562                           ;!Call Graph Tables:
   563                           ;!
   564                           ;! ---------------------------------------------------------------------------------
   565                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   566                           ;! ---------------------------------------------------------------------------------
   567                           ;! (0) _main                                                 0     0      0    1128
   568                           ;!                           _setWidth
   569                           ;!                              _setup
   570                           ;! ---------------------------------------------------------------------------------
   571                           ;! (1) _setup                                                0     0      0     564
   572                           ;!                          _configPWM
   573                           ;! ---------------------------------------------------------------------------------
   574                           ;! (2) _configPWM                                            0     0      0     564
   575                           ;!                           _setWidth
   576                           ;! ---------------------------------------------------------------------------------
   577                           ;! (3) _setWidth                                             4     4      0     564
   578                           ;!                                              9 COMMON     4     4      0
   579                           ;!                            ___awdiv
   580                           ;! ---------------------------------------------------------------------------------
   581                           ;! (4) ___awdiv                                              9     5      4     452
   582                           ;!                                              0 COMMON     9     5      4
   583                           ;! ---------------------------------------------------------------------------------
   584                           ;! Estimated maximum stack depth 4
   585                           ;! ---------------------------------------------------------------------------------
   586                           ;!
   587                           ;! Call Graph Graphs:
   588                           ;!
   589                           ;! _main (ROOT)
   590                           ;!   _setWidth
   591                           ;!     ___awdiv
   592                           ;!   _setup
   593                           ;!     _configPWM
   594                           ;!       _setWidth
   595                           ;!         ___awdiv
   596                           ;!
   597                           
   598                           ;! Address spaces:
   599                           
   600                           ;!Name               Size   Autos  Total    Cost      Usage
   601                           ;!BITCOMMON            E      0       0       0        0.0%
   602                           ;!EEDATA             100      0       0       0        0.0%
   603                           ;!NULL                 0      0       0       0        0.0%
   604                           ;!CODE                 0      0       0       0        0.0%
   605                           ;!COMMON               E      D       D       1       92.9%
   606                           ;!BITSFR0              0      0       0       1        0.0%
   607                           ;!SFR0                 0      0       0       1        0.0%
   608                           ;!BITSFR1              0      0       0       2        0.0%
   609                           ;!SFR1                 0      0       0       2        0.0%
   610                           ;!STACK                0      0       0       2        0.0%
   611                           ;!ABS                  0      0       0       3        0.0%
   612                           ;!BITBANK0            50      0       0       4        0.0%
   613                           ;!BITSFR3              0      0       0       4        0.0%
   614                           ;!SFR3                 0      0       0       4        0.0%
   615                           ;!BANK0               50      0       0       5        0.0%
   616                           ;!BITSFR2              0      0       0       5        0.0%
   617                           ;!SFR2                 0      0       0       5        0.0%
   618                           ;!BITBANK1            50      0       0       6        0.0%
   619                           ;!BANK1               50      0       0       7        0.0%
   620                           ;!BITBANK3            60      0       0       8        0.0%
   621                           ;!BANK3               60      0       0       9        0.0%
   622                           ;!BITBANK2            60      0       0      10        0.0%
   623                           ;!BANK2               60      0       0      11        0.0%
   624                           ;!DATA                 0      0       0      12        0.0%
   625                           
   626                           	global	_main
   627                           
   628 ;; *************** function _main *****************
   629 ;; Defined at:
   630 ;;		line 49 in file "mainMaster.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;                  1    wreg      void 
   637 ;; Registers used:
   638 ;;		wreg, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : B00/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels required when called:    4
   650 ;; This function calls:
   651 ;;		_setWidth
   652 ;;		_setup
   653 ;; This function is called by:
   654 ;;		Startup code after reset
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
   658                           	file	"mainMaster.c"
   659                           	line	49
   660                           global __pmaintext
   661                           __pmaintext:	;psect for function _main
   662  071A                     psect	maintext
   663                           	file	"mainMaster.c"
   664                           	line	49
   665                           	global	__size_of_main
   666                           	__size_of_main	equ	__end_of_main-_main
   667  001F                     	
   668                           _main:	
   669  071A                     ;incstack = 0
   670                           	opt	stack 4
   671                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   672                           	line	50
   673                           	
   674                           l799:	
   675  071A                     ;mainMaster.c: 50:     setup();
   676                           	fcall	_setup
   677  071A  120A  118A  26FF  120A  118A  	goto	l801
   678  071F  2F20               	line	51
   679                           ;mainMaster.c: 51:     while(1){
   680                           	
   681                           l41:	
   682  0720                     	line	52
   683                           	
   684                           l801:	
   685  0720                     ;mainMaster.c: 52:         if(PORTAbits.RA0){
   686                           	bcf	status, 5	;RP0=0, select bank0
   687  0720  1283               	bcf	status, 6	;RP1=0, select bank0
   688  0721  1303               	btfss	(5),0	;volatile
   689  0722  1C05               	goto	u281
   690  0723  2F25               	goto	u280
   691  0724  2F26               u281:
   692  0725                     	goto	l805
   693  0725  2F2D               u280:
   694  0726                     	line	53
   695                           	
   696                           l803:	
   697  0726                     ;mainMaster.c: 53:             setWidth(63);
   698                           	movlw	low(03Fh)
   699  0726  303F               	fcall	_setWidth
   700  0727  120A  118A  2759  120A  118A  	line	54
   701                           ;mainMaster.c: 54:         }else{
   702                           	goto	l801
   703  072C  2F20               	
   704                           l42:	
   705  072D                     	line	55
   706                           	
   707                           l805:	
   708  072D                     ;mainMaster.c: 55:             setWidth(32);
   709                           	movlw	low(020h)
   710  072D  3020               	fcall	_setWidth
   711  072E  120A  118A  2759  120A  118A  	goto	l801
   712  0733  2F20               	line	56
   713                           ;mainMaster.c: 56:         }
   714                           	
   715                           l43:	
   716  0734                     	goto	l801
   717  0734  2F20               	line	57
   718                           ;mainMaster.c: 57:     }
   719                           	
   720                           l44:	
   721  0735                     	goto	l801
   722  0735  2F20               	
   723                           l45:	
   724  0736                     	line	59
   725                           ;mainMaster.c: 58:     return;
   726                           	
   727                           l46:	
   728  0736                     	global	start
   729                           	ljmp	start
   730  0736  120A  118A  2800   	opt stack 0
   731                           GLOBAL	__end_of_main
   732                           	__end_of_main:
   733  0739                     	signat	_main,89
   734                           	global	_setup
   735                           
   736 ;; *************** function _setup *****************
   737 ;; Defined at:
   738 ;;		line 63 in file "mainMaster.c"
   739 ;; Parameters:    Size  Location     Type
   740 ;;		None
   741 ;; Auto vars:     Size  Location     Type
   742 ;;		None
   743 ;; Return value:  Size  Location     Type
   744 ;;                  1    wreg      void 
   745 ;; Registers used:
   746 ;;		wreg, status,2, status,0, pclath, cstack
   747 ;; Tracked objects:
   748 ;;		On entry : 0/0
   749 ;;		On exit  : 0/0
   750 ;;		Unchanged: 0/0
   751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   752 ;;      Params:         0       0       0       0       0
   753 ;;      Locals:         0       0       0       0       0
   754 ;;      Temps:          0       0       0       0       0
   755 ;;      Totals:         0       0       0       0       0
   756 ;;Total ram usage:        0 bytes
   757 ;; Hardware stack levels used:    1
   758 ;; Hardware stack levels required when called:    3
   759 ;; This function calls:
   760 ;;		_configPWM
   761 ;; This function is called by:
   762 ;;		_main
   763 ;; This function uses a non-reentrant model
   764 ;;
   765                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
   766                           	line	63
   767                           global __ptext1
   768                           __ptext1:	;psect for function _setup
   769  06FF                     psect	text1
   770                           	file	"mainMaster.c"
   771                           	line	63
   772                           	global	__size_of_setup
   773                           	__size_of_setup	equ	__end_of_setup-_setup
   774  001B                     	
   775                           _setup:	
   776  06FF                     ;incstack = 0
   777                           	opt	stack 4
   778                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   779                           	line	65
   780                           	
   781                           l791:	
   782  06FF                     ;mainMaster.c: 65:     ANSEL = 0;
   783                           	bsf	status, 5	;RP0=1, select bank3
   784  06FF  1683               	bsf	status, 6	;RP1=1, select bank3
   785  0700  1703               	clrf	(392)^0180h	;volatile
   786  0701  0188               	line	66
   787                           ;mainMaster.c: 66:     ANSELH = 0;
   788                           	clrf	(393)^0180h	;volatile
   789  0702  0189               	line	67
   790                           ;mainMaster.c: 67:     TRISB = 0;
   791                           	bsf	status, 5	;RP0=1, select bank1
   792  0703  1683               	bcf	status, 6	;RP1=0, select bank1
   793  0704  1303               	clrf	(134)^080h	;volatile
   794  0705  0186               	line	68
   795                           ;mainMaster.c: 68:     TRISD = 0;
   796                           	clrf	(136)^080h	;volatile
   797  0706  0188               	line	69
   798                           ;mainMaster.c: 69:     PORTB = 0;
   799                           	bcf	status, 5	;RP0=0, select bank0
   800  0707  1283               	bcf	status, 6	;RP1=0, select bank0
   801  0708  1303               	clrf	(6)	;volatile
   802  0709  0186               	line	70
   803                           ;mainMaster.c: 70:     PORTD = 0;
   804                           	clrf	(8)	;volatile
   805  070A  0188               	line	72
   806                           	
   807                           l793:	
   808  070B                     ;mainMaster.c: 72:     OSCCONbits.IRCF = 3;
   809                           	bsf	status, 5	;RP0=1, select bank1
   810  070B  1683               	bcf	status, 6	;RP1=0, select bank1
   811  070C  1303               	movf	(143)^080h,w	;volatile
   812  070D  080F               	andlw	not (((1<<3)-1)<<4)
   813  070E  398F               	iorlw	(03h & ((1<<3)-1))<<4
   814  070F  3830               	movwf	(143)^080h	;volatile
   815  0710  008F               	line	73
   816                           	
   817                           l795:	
   818  0711                     ;mainMaster.c: 73:     configPWM();
   819                           	fcall	_configPWM
   820  0711  120A  118A  2739  120A  118A  	line	74
   821                           	
   822                           l797:	
   823  0716                     ;mainMaster.c: 74:     TRISAbits.TRISA0 = 1;
   824                           	bsf	status, 5	;RP0=1, select bank1
   825  0716  1683               	bcf	status, 6	;RP1=0, select bank1
   826  0717  1303               	bsf	(133)^080h,0	;volatile
   827  0718  1405               	line	75
   828                           	
   829                           l49:	
   830  0719                     	return
   831  0719  0008               	opt stack 0
   832                           GLOBAL	__end_of_setup
   833                           	__end_of_setup:
   834  071A                     	signat	_setup,89
   835                           	global	_configPWM
   836                           
   837 ;; *************** function _configPWM *****************
   838 ;; Defined at:
   839 ;;		line 77 in file "mainMaster.c"
   840 ;; Parameters:    Size  Location     Type
   841 ;;		None
   842 ;; Auto vars:     Size  Location     Type
   843 ;;		None
   844 ;; Return value:  Size  Location     Type
   845 ;;                  1    wreg      void 
   846 ;; Registers used:
   847 ;;		wreg, status,2, status,0, pclath, cstack
   848 ;; Tracked objects:
   849 ;;		On entry : 0/0
   850 ;;		On exit  : 0/0
   851 ;;		Unchanged: 0/0
   852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   853 ;;      Params:         0       0       0       0       0
   854 ;;      Locals:         0       0       0       0       0
   855 ;;      Temps:          0       0       0       0       0
   856 ;;      Totals:         0       0       0       0       0
   857 ;;Total ram usage:        0 bytes
   858 ;; Hardware stack levels used:    1
   859 ;; Hardware stack levels required when called:    2
   860 ;; This function calls:
   861 ;;		_setWidth
   862 ;; This function is called by:
   863 ;;		_setup
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
   867                           	line	77
   868                           global __ptext2
   869                           __ptext2:	;psect for function _configPWM
   870  0739                     psect	text2
   871                           	file	"mainMaster.c"
   872                           	line	77
   873                           	global	__size_of_configPWM
   874                           	__size_of_configPWM	equ	__end_of_configPWM-_configPWM
   875  0020                     	
   876                           _configPWM:	
   877  0739                     ;incstack = 0
   878                           	opt	stack 4
   879                           ; Regs used in _configPWM: [wreg+status,2+status,0+pclath+cstack]
   880                           	line	79
   881                           	
   882                           l777:	
   883  0739                     ;mainMaster.c: 79:     TRISCbits.TRISC1 = 1;
   884                           	bsf	status, 5	;RP0=1, select bank1
   885  0739  1683               	bcf	status, 6	;RP1=0, select bank1
   886  073A  1303               	bsf	(135)^080h,1	;volatile
   887  073B  1487               	line	80
   888                           	
   889                           l779:	
   890  073C                     ;mainMaster.c: 80:     PR2 = 156;
   891                           	movlw	low(09Ch)
   892  073C  309C               	movwf	(146)^080h	;volatile
   893  073D  0092               	line	81
   894                           	
   895                           l781:	
   896  073E                     ;mainMaster.c: 81:     CCP2CONbits.CCP2M = 12;
   897                           	bcf	status, 5	;RP0=0, select bank0
   898  073E  1283               	bcf	status, 6	;RP1=0, select bank0
   899  073F  1303               	movf	(29),w	;volatile
   900  0740  081D               	andlw	not (((1<<4)-1)<<0)
   901  0741  39F0               	iorlw	(0Ch & ((1<<4)-1))<<0
   902  0742  380C               	movwf	(29)	;volatile
   903  0743  009D               	line	82
   904                           	
   905                           l783:	
   906  0744                     ;mainMaster.c: 82:     setWidth(63);
   907                           	movlw	low(03Fh)
   908  0744  303F               	fcall	_setWidth
   909  0745  120A  118A  2759  120A  118A  	line	83
   910                           	
   911                           l785:	
   912  074A                     ;mainMaster.c: 83:     PIR1bits.TMR2IF = 0;
   913                           	bcf	status, 5	;RP0=0, select bank0
   914  074A  1283               	bcf	status, 6	;RP1=0, select bank0
   915  074B  1303               	bcf	(12),1	;volatile
   916  074C  108C               	line	84
   917                           	
   918                           l787:	
   919  074D                     ;mainMaster.c: 84:     T2CONbits.T2CKPS = 3;
   920                           	movlw	(03h & ((1<<2)-1))<<0
   921  074D  3003               	iorwf	(18),f	;volatile
   922  074E  0492               	line	85
   923                           	
   924                           l789:	
   925  074F                     ;mainMaster.c: 85:     T2CONbits.TMR2ON = 1;
   926                           	bsf	(18),2	;volatile
   927  074F  1512               	line	86
   928                           ;mainMaster.c: 86:     while(!PIR1bits.TMR2IF){}
   929                           	goto	l52
   930  0750  2F51               	
   931                           l53:	
   932  0751                     	
   933                           l52:	
   934  0751                     	btfss	(12),1	;volatile
   935  0751  1C8C               	goto	u271
   936  0752  2F54               	goto	u270
   937  0753  2F55               u271:
   938  0754                     	goto	l52
   939  0754  2F51               u270:
   940  0755                     	
   941                           l54:	
   942  0755                     	line	87
   943                           ;mainMaster.c: 87:     TRISCbits.TRISC1 = 0;
   944                           	bsf	status, 5	;RP0=1, select bank1
   945  0755  1683               	bcf	status, 6	;RP1=0, select bank1
   946  0756  1303               	bcf	(135)^080h,1	;volatile
   947  0757  1087               	line	88
   948                           	
   949                           l55:	
   950  0758                     	return
   951  0758  0008               	opt stack 0
   952                           GLOBAL	__end_of_configPWM
   953                           	__end_of_configPWM:
   954  0759                     	signat	_configPWM,89
   955                           	global	_setWidth
   956                           
   957 ;; *************** function _setWidth *****************
   958 ;; Defined at:
   959 ;;		line 90 in file "mainMaster.c"
   960 ;; Parameters:    Size  Location     Type
   961 ;;  time            1    wreg     unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  time            1   12[COMMON] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;                  1    wreg      void 
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0, pclath, cstack
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   973 ;;      Params:         0       0       0       0       0
   974 ;;      Locals:         1       0       0       0       0
   975 ;;      Temps:          3       0       0       0       0
   976 ;;      Totals:         4       0       0       0       0
   977 ;;Total ram usage:        4 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    1
   980 ;; This function calls:
   981 ;;		___awdiv
   982 ;; This function is called by:
   983 ;;		_main
   984 ;;		_configPWM
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
   988                           	line	90
   989                           global __ptext3
   990                           __ptext3:	;psect for function _setWidth
   991  0759                     psect	text3
   992                           	file	"mainMaster.c"
   993                           	line	90
   994                           	global	__size_of_setWidth
   995                           	__size_of_setWidth	equ	__end_of_setWidth-_setWidth
   996  0032                     	
   997                           _setWidth:	
   998  0759                     ;incstack = 0
   999                           	opt	stack 4
  1000                           ; Regs used in _setWidth: [wreg+status,2+status,0+pclath+cstack]
  1001                           ;setWidth@time stored from wreg
  1002                           	movwf	(setWidth@time)
  1003  0759  00FC               	line	91
  1004                           	
  1005                           l765:	
  1006  075A                     ;mainMaster.c: 91:     if(time & 0b00000001){
  1007                           	btfss	(setWidth@time),(0)&7
  1008  075A  1C7C               	goto	u251
  1009  075B  2F5D               	goto	u250
  1010  075C  2F5E               u251:
  1011  075D                     	goto	l58
  1012  075D  2F62               u250:
  1013  075E                     	line	92
  1014                           	
  1015                           l767:	
  1016  075E                     ;mainMaster.c: 92:         CCP2CONbits.DC2B0 = 1;
  1017                           	bcf	status, 5	;RP0=0, select bank0
  1018  075E  1283               	bcf	status, 6	;RP1=0, select bank0
  1019  075F  1303               	bsf	(29),4	;volatile
  1020  0760  161D               	line	93
  1021                           ;mainMaster.c: 93:     }else{
  1022                           	goto	l59
  1023  0761  2F65               	
  1024                           l58:	
  1025  0762                     	line	94
  1026                           ;mainMaster.c: 94:         CCP2CONbits.DC2B0 = 0;
  1027                           	bcf	status, 5	;RP0=0, select bank0
  1028  0762  1283               	bcf	status, 6	;RP1=0, select bank0
  1029  0763  1303               	bcf	(29),4	;volatile
  1030  0764  121D               	line	95
  1031                           ;mainMaster.c: 95:     }
  1032                           	
  1033                           l59:	
  1034  0765                     	line	96
  1035                           ;mainMaster.c: 96:     if(time & 0b00000010){
  1036                           	btfss	(setWidth@time),(1)&7
  1037  0765  1CFC               	goto	u261
  1038  0766  2F68               	goto	u260
  1039  0767  2F69               u261:
  1040  0768                     	goto	l60
  1041  0768  2F6B               u260:
  1042  0769                     	line	97
  1043                           	
  1044                           l769:	
  1045  0769                     ;mainMaster.c: 97:         CCP2CONbits.DC2B1 = 1;
  1046                           	bsf	(29),5	;volatile
  1047  0769  169D               	line	98
  1048                           ;mainMaster.c: 98:     }else{
  1049                           	goto	l771
  1050  076A  2F6D               	
  1051                           l60:	
  1052  076B                     	line	99
  1053                           ;mainMaster.c: 99:         CCP2CONbits.DC2B1 = 0;
  1054                           	bcf	(29),5	;volatile
  1055  076B  129D               	goto	l771
  1056  076C  2F6D               	line	100
  1057                           ;mainMaster.c: 100:     }
  1058                           	
  1059                           l61:	
  1060  076D                     	line	101
  1061                           	
  1062                           l771:	
  1063  076D                     ;mainMaster.c: 101:     time = time & 0b11111100;
  1064                           	movf	(setWidth@time),w
  1065  076D  087C               	andlw	0FCh
  1066  076E  39FC               	movwf	(??_setWidth+0)+0
  1067  076F  00F9               	movf	(??_setWidth+0)+0,w
  1068  0770  0879               	movwf	(setWidth@time)
  1069  0771  00FC               	line	102
  1070                           	
  1071                           l773:	
  1072  0772                     ;mainMaster.c: 102:     time = time/4;
  1073                           	movlw	04h
  1074  0772  3004               	movwf	(___awdiv@divisor)
  1075  0773  00F0               	movlw	0
  1076  0774  3000               	movwf	((___awdiv@divisor))+1
  1077  0775  00F1               	movf	(setWidth@time),w
  1078  0776  087C               	movwf	(??_setWidth+0)+0
  1079  0777  00F9               	clrf	(??_setWidth+0)+0+1
  1080  0778  01FA               	movf	0+(??_setWidth+0)+0,w
  1081  0779  0879               	movwf	(___awdiv@dividend)
  1082  077A  00F2               	movf	1+(??_setWidth+0)+0,w
  1083  077B  087A               	movwf	(___awdiv@dividend+1)
  1084  077C  00F3               	fcall	___awdiv
  1085  077D  120A  118A  278B  120A  118A  	movf	(0+(?___awdiv)),w
  1086  0782  0870               	movwf	(??_setWidth+2)+0
  1087  0783  00FB               	movf	(??_setWidth+2)+0,w
  1088  0784  087B               	movwf	(setWidth@time)
  1089  0785  00FC               	line	103
  1090                           	
  1091                           l775:	
  1092  0786                     ;mainMaster.c: 103:     CCPR2L = time;
  1093                           	movf	(setWidth@time),w
  1094  0786  087C               	bcf	status, 5	;RP0=0, select bank0
  1095  0787  1283               	bcf	status, 6	;RP1=0, select bank0
  1096  0788  1303               	movwf	(27)	;volatile
  1097  0789  009B               	line	104
  1098                           	
  1099                           l62:	
  1100  078A                     	return
  1101  078A  0008               	opt stack 0
  1102                           GLOBAL	__end_of_setWidth
  1103                           	__end_of_setWidth:
  1104  078B                     	signat	_setWidth,4217
  1105                           	global	___awdiv
  1106                           
  1107 ;; *************** function ___awdiv *****************
  1108 ;; Defined at:
  1109 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;  divisor         2    0[COMMON] int 
  1112 ;;  dividend        2    2[COMMON] int 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  quotient        2    7[COMMON] int 
  1115 ;;  sign            1    6[COMMON] unsigned char 
  1116 ;;  counter         1    5[COMMON] unsigned char 
  1117 ;; Return value:  Size  Location     Type
  1118 ;;                  2    0[COMMON] int 
  1119 ;; Registers used:
  1120 ;;		wreg, status,2, status,0
  1121 ;; Tracked objects:
  1122 ;;		On entry : 0/0
  1123 ;;		On exit  : 0/0
  1124 ;;		Unchanged: 0/0
  1125 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1126 ;;      Params:         4       0       0       0       0
  1127 ;;      Locals:         4       0       0       0       0
  1128 ;;      Temps:          1       0       0       0       0
  1129 ;;      Totals:         9       0       0       0       0
  1130 ;;Total ram usage:        9 bytes
  1131 ;; Hardware stack levels used:    1
  1132 ;; This function calls:
  1133 ;;		Nothing
  1134 ;; This function is called by:
  1135 ;;		_setWidth
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           psect	text4,local,class=CODE,delta=2,merge=1,group=1
  1139                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  1140                           	line	5
  1141                           global __ptext4
  1142                           __ptext4:	;psect for function ___awdiv
  1143  078B                     psect	text4
  1144                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\awdiv.c"
  1145                           	line	5
  1146                           	global	__size_of___awdiv
  1147                           	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1148  0071                     	
  1149                           ___awdiv:	
  1150  078B                     ;incstack = 0
  1151                           	opt	stack 4
  1152                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1153                           	line	13
  1154                           	
  1155                           l721:	
  1156  078B                     	clrf	(___awdiv@sign)
  1157  078B  01F6               	line	14
  1158                           	
  1159                           l723:	
  1160  078C                     	btfss	(___awdiv@divisor+1),7
  1161  078C  1FF1               	goto	u151
  1162  078D  2F8F               	goto	u150
  1163  078E  2F90               u151:
  1164  078F                     	goto	l729
  1165  078F  2F98               u150:
  1166  0790                     	line	15
  1167                           	
  1168                           l725:	
  1169  0790                     	comf	(___awdiv@divisor),f
  1170  0790  09F0               	comf	(___awdiv@divisor+1),f
  1171  0791  09F1               	incf	(___awdiv@divisor),f
  1172  0792  0AF0               	skipnz
  1173  0793  1903               	incf	(___awdiv@divisor+1),f
  1174  0794  0AF1               	line	16
  1175                           	
  1176                           l727:	
  1177  0795                     	clrf	(___awdiv@sign)
  1178  0795  01F6               	incf	(___awdiv@sign),f
  1179  0796  0AF6               	goto	l729
  1180  0797  2F98               	line	17
  1181                           	
  1182                           l291:	
  1183  0798                     	line	18
  1184                           	
  1185                           l729:	
  1186  0798                     	btfss	(___awdiv@dividend+1),7
  1187  0798  1FF3               	goto	u161
  1188  0799  2F9B               	goto	u160
  1189  079A  2F9C               u161:
  1190  079B                     	goto	l735
  1191  079B  2FA6               u160:
  1192  079C                     	line	19
  1193                           	
  1194                           l731:	
  1195  079C                     	comf	(___awdiv@dividend),f
  1196  079C  09F2               	comf	(___awdiv@dividend+1),f
  1197  079D  09F3               	incf	(___awdiv@dividend),f
  1198  079E  0AF2               	skipnz
  1199  079F  1903               	incf	(___awdiv@dividend+1),f
  1200  07A0  0AF3               	line	20
  1201                           	
  1202                           l733:	
  1203  07A1                     	movlw	low(01h)
  1204  07A1  3001               	movwf	(??___awdiv+0)+0
  1205  07A2  00F4               	movf	(??___awdiv+0)+0,w
  1206  07A3  0874               	xorwf	(___awdiv@sign),f
  1207  07A4  06F6               	goto	l735
  1208  07A5  2FA6               	line	21
  1209                           	
  1210                           l292:	
  1211  07A6                     	line	22
  1212                           	
  1213                           l735:	
  1214  07A6                     	clrf	(___awdiv@quotient)
  1215  07A6  01F7               	clrf	(___awdiv@quotient+1)
  1216  07A7  01F8               	line	23
  1217                           	
  1218                           l737:	
  1219  07A8                     	movf	((___awdiv@divisor)),w
  1220  07A8  0870               iorwf	((___awdiv@divisor+1)),w
  1221  07A9  0471               	btfsc	status,2
  1222  07AA  1903               	goto	u171
  1223  07AB  2FAD               	goto	u170
  1224  07AC  2FAE               u171:
  1225  07AD                     	goto	l757
  1226  07AD  2FEB               u170:
  1227  07AE                     	line	24
  1228                           	
  1229                           l739:	
  1230  07AE                     	clrf	(___awdiv@counter)
  1231  07AE  01F5               	incf	(___awdiv@counter),f
  1232  07AF  0AF5               	line	25
  1233                           	goto	l745
  1234  07B0  2FBD               	
  1235                           l295:	
  1236  07B1                     	line	26
  1237                           	
  1238                           l741:	
  1239  07B1                     	movlw	01h
  1240  07B1  3001               	
  1241                           u185:
  1242  07B2                     	clrc
  1243  07B2  1003               	rlf	(___awdiv@divisor),f
  1244  07B3  0DF0               	rlf	(___awdiv@divisor+1),f
  1245  07B4  0DF1               	addlw	-1
  1246  07B5  3EFF               	skipz
  1247  07B6  1D03               	goto	u185
  1248  07B7  2FB2               	line	27
  1249                           	
  1250                           l743:	
  1251  07B8                     	movlw	low(01h)
  1252  07B8  3001               	movwf	(??___awdiv+0)+0
  1253  07B9  00F4               	movf	(??___awdiv+0)+0,w
  1254  07BA  0874               	addwf	(___awdiv@counter),f
  1255  07BB  07F5               	goto	l745
  1256  07BC  2FBD               	line	28
  1257                           	
  1258                           l294:	
  1259  07BD                     	line	25
  1260                           	
  1261                           l745:	
  1262  07BD                     	btfss	(___awdiv@divisor+1),(15)&7
  1263  07BD  1FF1               	goto	u191
  1264  07BE  2FC0               	goto	u190
  1265  07BF  2FC1               u191:
  1266  07C0                     	goto	l741
  1267  07C0  2FB1               u190:
  1268  07C1                     	goto	l747
  1269  07C1  2FC3               	
  1270                           l296:	
  1271  07C2                     	goto	l747
  1272  07C2  2FC3               	line	29
  1273                           	
  1274                           l297:	
  1275  07C3                     	line	30
  1276                           	
  1277                           l747:	
  1278  07C3                     	movlw	01h
  1279  07C3  3001               	
  1280                           u205:
  1281  07C4                     	clrc
  1282  07C4  1003               	rlf	(___awdiv@quotient),f
  1283  07C5  0DF7               	rlf	(___awdiv@quotient+1),f
  1284  07C6  0DF8               	addlw	-1
  1285  07C7  3EFF               	skipz
  1286  07C8  1D03               	goto	u205
  1287  07C9  2FC4               	line	31
  1288                           	movf	(___awdiv@divisor+1),w
  1289  07CA  0871               	subwf	(___awdiv@dividend+1),w
  1290  07CB  0273               	skipz
  1291  07CC  1D03               	goto	u215
  1292  07CD  2FD0               	movf	(___awdiv@divisor),w
  1293  07CE  0870               	subwf	(___awdiv@dividend),w
  1294  07CF  0272               u215:
  1295  07D0                     	skipc
  1296  07D0  1C03               	goto	u211
  1297  07D1  2FD3               	goto	u210
  1298  07D2  2FD4               u211:
  1299  07D3                     	goto	l753
  1300  07D3  2FDC               u210:
  1301  07D4                     	line	32
  1302                           	
  1303                           l749:	
  1304  07D4                     	movf	(___awdiv@divisor),w
  1305  07D4  0870               	subwf	(___awdiv@dividend),f
  1306  07D5  02F2               	movf	(___awdiv@divisor+1),w
  1307  07D6  0871               	skipc
  1308  07D7  1C03               	decf	(___awdiv@dividend+1),f
  1309  07D8  03F3               	subwf	(___awdiv@dividend+1),f
  1310  07D9  02F3               	line	33
  1311                           	
  1312                           l751:	
  1313  07DA                     	bsf	(___awdiv@quotient)+(0/8),(0)&7
  1314  07DA  1477               	goto	l753
  1315  07DB  2FDC               	line	34
  1316                           	
  1317                           l298:	
  1318  07DC                     	line	35
  1319                           	
  1320                           l753:	
  1321  07DC                     	movlw	01h
  1322  07DC  3001               	
  1323                           u225:
  1324  07DD                     	clrc
  1325  07DD  1003               	rrf	(___awdiv@divisor+1),f
  1326  07DE  0CF1               	rrf	(___awdiv@divisor),f
  1327  07DF  0CF0               	addlw	-1
  1328  07E0  3EFF               	skipz
  1329  07E1  1D03               	goto	u225
  1330  07E2  2FDD               	line	36
  1331                           	
  1332                           l755:	
  1333  07E3                     	movlw	01h
  1334  07E3  3001               	subwf	(___awdiv@counter),f
  1335  07E4  02F5               	btfss	status,2
  1336  07E5  1D03               	goto	u231
  1337  07E6  2FE8               	goto	u230
  1338  07E7  2FE9               u231:
  1339  07E8                     	goto	l747
  1340  07E8  2FC3               u230:
  1341  07E9                     	goto	l757
  1342  07E9  2FEB               	
  1343                           l299:	
  1344  07EA                     	goto	l757
  1345  07EA  2FEB               	line	37
  1346                           	
  1347                           l293:	
  1348  07EB                     	line	38
  1349                           	
  1350                           l757:	
  1351  07EB                     	movf	((___awdiv@sign)),w
  1352  07EB  0876               	btfsc	status,2
  1353  07EC  1903               	goto	u241
  1354  07ED  2FEF               	goto	u240
  1355  07EE  2FF0               u241:
  1356  07EF                     	goto	l761
  1357  07EF  2FF6               u240:
  1358  07F0                     	line	39
  1359                           	
  1360                           l759:	
  1361  07F0                     	comf	(___awdiv@quotient),f
  1362  07F0  09F7               	comf	(___awdiv@quotient+1),f
  1363  07F1  09F8               	incf	(___awdiv@quotient),f
  1364  07F2  0AF7               	skipnz
  1365  07F3  1903               	incf	(___awdiv@quotient+1),f
  1366  07F4  0AF8               	goto	l761
  1367  07F5  2FF6               	
  1368                           l300:	
  1369  07F6                     	line	40
  1370                           	
  1371                           l761:	
  1372  07F6                     	movf	(___awdiv@quotient+1),w
  1373  07F6  0878               	movwf	(?___awdiv+1)
  1374  07F7  00F1               	movf	(___awdiv@quotient),w
  1375  07F8  0877               	movwf	(?___awdiv)
  1376  07F9  00F0               	goto	l301
  1377  07FA  2FFB               	
  1378                           l763:	
  1379  07FB                     	line	41
  1380                           	
  1381                           l301:	
  1382  07FB                     	return
  1383  07FB  0008               	opt stack 0
  1384                           GLOBAL	__end_of___awdiv
  1385                           	__end_of___awdiv:
  1386  07FC                     	signat	___awdiv,8314
  1387                           global	___latbits
  1388                           ___latbits	equ	2
  1389  0002                     	global	btemp
  1390                           	btemp set 07Eh
  1391  007E                     
  1392                           	DABS	1,126,2	;btemp
  1393                           	global	wtemp0
  1394                           	wtemp0 set btemp+0
  1395  007E                     	end


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setWidth
    _configPWM->_setWidth
    _setWidth->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1128
                           _setWidth
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     564
                          _configPWM
 ---------------------------------------------------------------------------------
 (2) _configPWM                                            0     0      0     564
                           _setWidth
 ---------------------------------------------------------------------------------
 (3) _setWidth                                             4     4      0     564
                                              9 COMMON     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setWidth
     ___awdiv
   _setup
     _configPWM
       _setWidth
         ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Feb 28 16:03:49 2020

             __CFG_CP$OFF 0000                        l41 0720                        l42 072D  
                      l43 0734                        l60 076B                        l52 0751  
                      l44 0735                        l61 076D                        l53 0751  
                      l45 0736                        l62 078A                        l54 0755  
                      l46 0736                        l55 0758                        l49 0719  
                      l58 0762                        l59 0765              ___awdiv@sign 0076  
                     l300 07F6                       l301 07FB                       l291 0798  
                     l292 07A6                       l293 07EB                       l294 07BD  
                     l295 07B1                       l296 07C2                       l297 07C3  
                     l721 078B                       l801 0720                       l298 07DC  
                     l299 07EA                       l731 079C                       l723 078C  
                     l803 0726                       l741 07B1                       l733 07A1  
                     l725 0790                       l805 072D                       l751 07DA  
                     l743 07B8                       l735 07A6                       l727 0795  
                     l761 07F6                       l753 07DC                       l745 07BD  
                     l737 07A8                       l729 0798                       l763 07FB  
                     l755 07E3                       l747 07C3                       l739 07AE  
                     l771 076D                       l749 07D4                       l757 07EB  
                     l773 0772                       l765 075A                       l781 073E  
                     l759 07F0                       l775 0786                       l767 075E  
                     l783 0744                       l791 06FF                       l769 0769  
                     l785 074A                       l777 0739                       l793 070B  
                     l787 074D                       l779 073C                       l795 0711  
                     l789 074F                       l797 0716                       l799 071A  
                     u210 07D4                       u211 07D3                       u205 07C4  
                     u230 07E9                       u150 0790                       u231 07E8  
                     u215 07D0                       u151 078F                       u240 07F0  
                     u160 079C                       u241 07EF                       u225 07DD  
                     u161 079B                       u170 07AE                       u250 075E  
                     u171 07AD                       u251 075D                       u260 0769  
                     u261 0768                       u190 07C1                       u270 0755  
                     _PR2 0092                       u191 07C0                       u271 0754  
                     u280 0726                       u185 07B2                       u281 0725  
            __CFG_CPD$OFF 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 071A                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0070           __end_of___awdiv 07FC  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188           ___awdiv@divisor 0070  
         ___awdiv@counter 0075                     _PORTB 0006                     _PORTD 0008  
                   _TRISB 0086                     _TRISD 0088            __CFG_FCMEN$OFF 0000  
                   _setup 06FF            __CFG_BOREN$OFF 0000                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07FC  
            __end_of_main 0739                    ??_main 007D                    _CCPR2L 001B  
        ___awdiv@dividend 0072                    ?_setup 0070                    _ANSELH 0189  
          __CFG_PWRTE$OFF 0000                 ??___awdiv 0074          ___awdiv@quotient 0077  
        __end_of_setWidth 078B   __end_of__initialization 07FC            __pcstackCOMMON 0070  
           __end_of_setup 071A        __size_of_configPWM 0020                   ??_setup 007D  
              __pmaintext 071A                 ?_setWidth 0070         __end_of_configPWM 0759  
                 ___awdiv 078B                   __ptext1 06FF                   __ptext2 0739  
                 __ptext3 0759                   __ptext4 078B                 _T2CONbits 0012  
    end_of_initialization 07FC                ??_setWidth 0079                 _PORTAbits 0005  
               _TRISAbits 0085                 _TRISCbits 0087               _CCP2CONbits 001D  
     start_initialization 07FC  __CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002  
                ?___awdiv 0070         __size_of_setWidth 0032                 _configPWM 0739  
          __size_of_setup 001B                  _PIR1bits 000C                ?_configPWM 0070  
            setWidth@time 007C          __size_of___awdiv 0071         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 001F                  _setWidth 0759               ??_configPWM 007D  
              _OSCCONbits 008F  
