

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Feb 29 23:25:38 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203  0000                     	;# 
   204  0001                     	;# 
   205  0002                     	;# 
   206  0003                     	;# 
   207  0004                     	;# 
   208  0005                     	;# 
   209  0006                     	;# 
   210  0007                     	;# 
   211  0008                     	;# 
   212  0009                     	;# 
   213  000A                     	;# 
   214  000B                     	;# 
   215  000C                     	;# 
   216  000D                     	;# 
   217  000E                     	;# 
   218  000E                     	;# 
   219  000F                     	;# 
   220  0010                     	;# 
   221  0011                     	;# 
   222  0012                     	;# 
   223  0013                     	;# 
   224  0014                     	;# 
   225  0015                     	;# 
   226  0015                     	;# 
   227  0016                     	;# 
   228  0017                     	;# 
   229  0018                     	;# 
   230  0019                     	;# 
   231  001A                     	;# 
   232  001B                     	;# 
   233  001B                     	;# 
   234  001C                     	;# 
   235  001D                     	;# 
   236  001E                     	;# 
   237  001F                     	;# 
   238  0081                     	;# 
   239  0085                     	;# 
   240  0086                     	;# 
   241  0087                     	;# 
   242  0088                     	;# 
   243  0089                     	;# 
   244  008C                     	;# 
   245  008D                     	;# 
   246  008E                     	;# 
   247  008F                     	;# 
   248  0090                     	;# 
   249  0091                     	;# 
   250  0092                     	;# 
   251  0093                     	;# 
   252  0093                     	;# 
   253  0093                     	;# 
   254  0094                     	;# 
   255  0095                     	;# 
   256  0096                     	;# 
   257  0097                     	;# 
   258  0098                     	;# 
   259  0099                     	;# 
   260  009A                     	;# 
   261  009B                     	;# 
   262  009C                     	;# 
   263  009D                     	;# 
   264  009E                     	;# 
   265  009F                     	;# 
   266  0105                     	;# 
   267  0107                     	;# 
   268  0108                     	;# 
   269  0109                     	;# 
   270  010C                     	;# 
   271  010C                     	;# 
   272  010D                     	;# 
   273  010E                     	;# 
   274  010F                     	;# 
   275  0185                     	;# 
   276  0187                     	;# 
   277  0188                     	;# 
   278  0189                     	;# 
   279  018C                     	;# 
   280  018D                     	;# 
   281  001B                     _CCPR2L	set	27
   282  0012                     _T2CONbits	set	18
   283  000C                     _PIR1bits	set	12
   284  001D                     _CCP2CONbits	set	29
   285  0008                     _PORTD	set	8
   286  0006                     _PORTB	set	6
   287  0005                     _PORTAbits	set	5
   288  0092                     _PR2	set	146
   289  0087                     _TRISCbits	set	135
   290  0085                     _TRISAbits	set	133
   291  008F                     _OSCCONbits	set	143
   292  0088                     _TRISD	set	136
   293  0086                     _TRISB	set	134
   294  0189                     _ANSELH	set	393
   295  0188                     _ANSEL	set	392
   296                           
   297                           ; #config settings
   298  0000                     
   299                           	psect	cinit
   300  07FC                     start_initialization:	
   301  07FC                     __initialization:	
   302  07FC                     end_of_initialization:	
   303                           ;End of C runtime variable initialization code
   304                           
   305  07FC                     __end_of__initialization:	
   306  07FC  0183               	clrf	3
   307  07FD  120A  118A  2F29   	ljmp	_main	;jump to C main() function
   308                           
   309                           	psect	cstackCOMMON
   310  0070                     __pcstackCOMMON:	
   311  0070                     ?_setup:	
   312  0070                     ?_setWidth:	
   313                           ; 1 bytes @ 0x0
   314                           
   315  0070                     ?_configPWM:	
   316                           ; 1 bytes @ 0x0
   317                           
   318  0070                     ?_main:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?___awdiv:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ___awdiv@divisor:	
   325                           ; 2 bytes @ 0x0
   326                           
   327                           
   328                           ; 2 bytes @ 0x0
   329  0070                     	ds	2
   330  0072                     ___awdiv@dividend:	
   331                           
   332                           ; 2 bytes @ 0x2
   333  0072                     	ds	2
   334  0074                     ??___awdiv:	
   335                           
   336                           ; 1 bytes @ 0x4
   337  0074                     	ds	1
   338  0075                     ___awdiv@counter:	
   339                           
   340                           ; 1 bytes @ 0x5
   341  0075                     	ds	1
   342  0076                     ___awdiv@sign:	
   343                           
   344                           ; 1 bytes @ 0x6
   345  0076                     	ds	1
   346  0077                     ___awdiv@quotient:	
   347                           
   348                           ; 2 bytes @ 0x7
   349  0077                     	ds	2
   350  0079                     ??_setWidth:	
   351                           
   352                           ; 1 bytes @ 0x9
   353  0079                     	ds	3
   354  007C                     setWidth@time:	
   355                           
   356                           ; 1 bytes @ 0xC
   357  007C                     	ds	1
   358  007D                     ??_setup:	
   359  007D                     ??_configPWM:	
   360                           ; 1 bytes @ 0xD
   361                           
   362  007D                     ??_main:	
   363                           ; 1 bytes @ 0xD
   364                           
   365                           
   366                           	psect	maintext
   367  0729                     __pmaintext:	
   368                           ; 1 bytes @ 0xD
   369 ;;
   370 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   371 ;;
   372 ;; *************** function _main *****************
   373 ;; Defined at:
   374 ;;		line 49 in file "mainMaster.c"
   375 ;; Parameters:    Size  Location     Type
   376 ;;		None
   377 ;; Auto vars:     Size  Location     Type
   378 ;;		None
   379 ;; Return value:  Size  Location     Type
   380 ;;                  1    wreg      void 
   381 ;; Registers used:
   382 ;;		wreg, status,2, status,0, pclath, cstack
   383 ;; Tracked objects:
   384 ;;		On entry : B00/0
   385 ;;		On exit  : 0/0
   386 ;;		Unchanged: 0/0
   387 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   388 ;;      Params:         0       0       0       0       0
   389 ;;      Locals:         0       0       0       0       0
   390 ;;      Temps:          0       0       0       0       0
   391 ;;      Totals:         0       0       0       0       0
   392 ;;Total ram usage:        0 bytes
   393 ;; Hardware stack levels required when called:    4
   394 ;; This function calls:
   395 ;;		_setWidth
   396 ;;		_setup
   397 ;; This function is called by:
   398 ;;		Startup code after reset
   399 ;; This function uses a non-reentrant model
   400 ;;
   401                           
   402                           
   403                           ;psect for function _main
   404  0729                     _main:	
   405  0729                     l820:	
   406                           ;incstack = 0
   407                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   408                           
   409                           
   410                           ;mainMaster.c: 50:     setup();
   411  0729  120A  118A  270E  120A  118A  	fcall	_setup
   412  072E                     l822:	
   413                           
   414                           ;mainMaster.c: 52:         if(PORTAbits.RA0){
   415  072E  1283               	bcf	3,5	;RP0=0, select bank0
   416  072F  1303               	bcf	3,6	;RP1=0, select bank0
   417  0730  1C05               	btfss	5,0	;volatile
   418  0731  2F33               	goto	u281
   419  0732  2F34               	goto	u280
   420  0733                     u281:	
   421  0733  2F3B               	goto	l826
   422  0734                     u280:	
   423  0734                     l824:	
   424                           
   425                           ;mainMaster.c: 53:             setWidth(63);
   426  0734  303F               	movlw	63
   427  0735  120A  118A  2764  120A  118A  	fcall	_setWidth
   428                           
   429                           ;mainMaster.c: 54:         }else{
   430  073A  2F2E               	goto	l822
   431  073B                     l826:	
   432                           
   433                           ;mainMaster.c: 55:             setWidth(32);
   434  073B  3020               	movlw	32
   435  073C  120A  118A  2764  120A  118A  	fcall	_setWidth
   436  0741  2F2E               	goto	l822
   437  0742  120A  118A  2800   	ljmp	start
   438  0745                     __end_of_main:	
   439                           
   440                           	psect	text1
   441  070E                     __ptext1:	
   442 ;; *************** function _setup *****************
   443 ;; Defined at:
   444 ;;		line 63 in file "mainMaster.c"
   445 ;; Parameters:    Size  Location     Type
   446 ;;		None
   447 ;; Auto vars:     Size  Location     Type
   448 ;;		None
   449 ;; Return value:  Size  Location     Type
   450 ;;                  1    wreg      void 
   451 ;; Registers used:
   452 ;;		wreg, status,2, status,0, pclath, cstack
   453 ;; Tracked objects:
   454 ;;		On entry : 0/0
   455 ;;		On exit  : 0/0
   456 ;;		Unchanged: 0/0
   457 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   458 ;;      Params:         0       0       0       0       0
   459 ;;      Locals:         0       0       0       0       0
   460 ;;      Temps:          0       0       0       0       0
   461 ;;      Totals:         0       0       0       0       0
   462 ;;Total ram usage:        0 bytes
   463 ;; Hardware stack levels used:    1
   464 ;; Hardware stack levels required when called:    3
   465 ;; This function calls:
   466 ;;		_configPWM
   467 ;; This function is called by:
   468 ;;		_main
   469 ;; This function uses a non-reentrant model
   470 ;;
   471                           
   472                           
   473                           ;psect for function _setup
   474  070E                     _setup:	
   475  070E                     l812:	
   476                           ;incstack = 0
   477                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   478                           
   479                           
   480                           ;mainMaster.c: 65:     ANSEL = 0;
   481  070E  1683               	bsf	3,5	;RP0=1, select bank3
   482  070F  1703               	bsf	3,6	;RP1=1, select bank3
   483  0710  0188               	clrf	8	;volatile
   484                           
   485                           ;mainMaster.c: 66:     ANSELH = 0;
   486  0711  0189               	clrf	9	;volatile
   487                           
   488                           ;mainMaster.c: 67:     TRISB = 0;
   489  0712  1683               	bsf	3,5	;RP0=1, select bank1
   490  0713  1303               	bcf	3,6	;RP1=0, select bank1
   491  0714  0186               	clrf	6	;volatile
   492                           
   493                           ;mainMaster.c: 68:     TRISD = 0;
   494  0715  0188               	clrf	8	;volatile
   495                           
   496                           ;mainMaster.c: 69:     PORTB = 0;
   497  0716  1283               	bcf	3,5	;RP0=0, select bank0
   498  0717  1303               	bcf	3,6	;RP1=0, select bank0
   499  0718  0186               	clrf	6	;volatile
   500                           
   501                           ;mainMaster.c: 70:     PORTD = 0;
   502  0719  0188               	clrf	8	;volatile
   503  071A                     l814:	
   504                           
   505                           ;mainMaster.c: 72:     OSCCONbits.IRCF = 3;
   506  071A  1683               	bsf	3,5	;RP0=1, select bank1
   507  071B  1303               	bcf	3,6	;RP1=0, select bank1
   508  071C  080F               	movf	15,w	;volatile
   509  071D  398F               	andlw	-113
   510  071E  3830               	iorlw	48
   511  071F  008F               	movwf	15	;volatile
   512  0720                     l816:	
   513                           
   514                           ;mainMaster.c: 73:     configPWM();
   515  0720  120A  118A  2745  120A  118A  	fcall	_configPWM
   516  0725                     l818:	
   517                           
   518                           ;mainMaster.c: 74:     TRISAbits.TRISA0 = 1;
   519  0725  1683               	bsf	3,5	;RP0=1, select bank1
   520  0726  1303               	bcf	3,6	;RP1=0, select bank1
   521  0727  1405               	bsf	5,0	;volatile
   522  0728                     l37:	
   523  0728  0008               	return
   524  0729                     __end_of_setup:	
   525                           
   526                           	psect	text2
   527  0745                     __ptext2:	
   528 ;; *************** function _configPWM *****************
   529 ;; Defined at:
   530 ;;		line 8 in file "PWM.c"
   531 ;; Parameters:    Size  Location     Type
   532 ;;		None
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, status,2, status,0, pclath, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         0       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         0       0       0       0       0
   548 ;;Total ram usage:        0 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; Hardware stack levels required when called:    2
   551 ;; This function calls:
   552 ;;		_setWidth
   553 ;; This function is called by:
   554 ;;		_setup
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           
   559                           ;psect for function _configPWM
   560  0745                     _configPWM:	
   561  0745                     l798:	
   562                           ;incstack = 0
   563                           ; Regs used in _configPWM: [wreg+status,2+status,0+pclath+cstack]
   564                           
   565                           
   566                           ;PWM.c: 10:     TRISCbits.TRISC1 = 1;
   567  0745  1683               	bsf	3,5	;RP0=1, select bank1
   568  0746  1303               	bcf	3,6	;RP1=0, select bank1
   569  0747  1487               	bsf	7,1	;volatile
   570  0748                     l800:	
   571                           
   572                           ;PWM.c: 11:     PR2 = 156;
   573  0748  309C               	movlw	156
   574  0749  0092               	movwf	18	;volatile
   575  074A                     l802:	
   576                           
   577                           ;PWM.c: 12:     CCP2CONbits.CCP2M = 12;
   578  074A  1283               	bcf	3,5	;RP0=0, select bank0
   579  074B  1303               	bcf	3,6	;RP1=0, select bank0
   580  074C  081D               	movf	29,w	;volatile
   581  074D  39F0               	andlw	-16
   582  074E  380C               	iorlw	12
   583  074F  009D               	movwf	29	;volatile
   584  0750                     l804:	
   585                           
   586                           ;PWM.c: 13:     setWidth(63);
   587  0750  303F               	movlw	63
   588  0751  120A  118A  2764  120A  118A  	fcall	_setWidth
   589  0756                     l806:	
   590                           
   591                           ;PWM.c: 14:     PIR1bits.TMR2IF = 0;
   592  0756  1283               	bcf	3,5	;RP0=0, select bank0
   593  0757  1303               	bcf	3,6	;RP1=0, select bank0
   594  0758  108C               	bcf	12,1	;volatile
   595  0759                     l808:	
   596                           
   597                           ;PWM.c: 15:     T2CONbits.T2CKPS = 3;
   598  0759  3003               	movlw	3
   599  075A  0492               	iorwf	18,f	;volatile
   600  075B                     l810:	
   601                           
   602                           ;PWM.c: 16:     T2CONbits.TMR2ON = 1;
   603  075B  1512               	bsf	18,2	;volatile
   604  075C                     l54:	
   605                           ;PWM.c: 17:     while(!PIR1bits.TMR2IF){}
   606                           
   607  075C  1C8C               	btfss	12,1	;volatile
   608  075D  2F5F               	goto	u271
   609  075E  2F60               	goto	u270
   610  075F                     u271:	
   611  075F  2F5C               	goto	l54
   612  0760                     u270:	
   613  0760                     l56:	
   614                           
   615                           ;PWM.c: 18:     TRISCbits.TRISC1 = 0;
   616  0760  1683               	bsf	3,5	;RP0=1, select bank1
   617  0761  1303               	bcf	3,6	;RP1=0, select bank1
   618  0762  1087               	bcf	7,1	;volatile
   619  0763                     l57:	
   620  0763  0008               	return
   621  0764                     __end_of_configPWM:	
   622                           
   623                           	psect	text3
   624  0764                     __ptext3:	
   625 ;; *************** function _setWidth *****************
   626 ;; Defined at:
   627 ;;		line 21 in file "PWM.c"
   628 ;; Parameters:    Size  Location     Type
   629 ;;  time            1    wreg     unsigned char 
   630 ;; Auto vars:     Size  Location     Type
   631 ;;  time            1   12[COMMON] unsigned char 
   632 ;; Return value:  Size  Location     Type
   633 ;;                  1    wreg      void 
   634 ;; Registers used:
   635 ;;		wreg, status,2, status,0, pclath, cstack
   636 ;; Tracked objects:
   637 ;;		On entry : 0/0
   638 ;;		On exit  : 0/0
   639 ;;		Unchanged: 0/0
   640 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   641 ;;      Params:         0       0       0       0       0
   642 ;;      Locals:         1       0       0       0       0
   643 ;;      Temps:          3       0       0       0       0
   644 ;;      Totals:         4       0       0       0       0
   645 ;;Total ram usage:        4 bytes
   646 ;; Hardware stack levels used:    1
   647 ;; Hardware stack levels required when called:    1
   648 ;; This function calls:
   649 ;;		___awdiv
   650 ;; This function is called by:
   651 ;;		_main
   652 ;;		_configPWM
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656                           
   657                           ;psect for function _setWidth
   658  0764                     _setWidth:	
   659                           
   660                           ;incstack = 0
   661                           ; Regs used in _setWidth: [wreg+status,2+status,0+pclath+cstack]
   662                           ;setWidth@time stored from wreg
   663  0764  00FC               	movwf	setWidth@time
   664  0765                     l786:	
   665                           
   666                           ;PWM.c: 22:     if(time & 0b00000001){
   667  0765  1C7C               	btfss	setWidth@time,0
   668  0766  2F68               	goto	u251
   669  0767  2F69               	goto	u250
   670  0768                     u251:	
   671  0768  2F6D               	goto	l60
   672  0769                     u250:	
   673  0769                     l788:	
   674                           
   675                           ;PWM.c: 23:         CCP2CONbits.DC2B0 = 1;
   676  0769  1283               	bcf	3,5	;RP0=0, select bank0
   677  076A  1303               	bcf	3,6	;RP1=0, select bank0
   678  076B  161D               	bsf	29,4	;volatile
   679                           
   680                           ;PWM.c: 24:     }else{
   681  076C  2F70               	goto	l61
   682  076D                     l60:	
   683                           
   684                           ;PWM.c: 25:         CCP2CONbits.DC2B0 = 0;
   685  076D  1283               	bcf	3,5	;RP0=0, select bank0
   686  076E  1303               	bcf	3,6	;RP1=0, select bank0
   687  076F  121D               	bcf	29,4	;volatile
   688  0770                     l61:	
   689                           ;PWM.c: 26:     }
   690                           
   691                           
   692                           ;PWM.c: 27:     if(time & 0b00000010){
   693  0770  1CFC               	btfss	setWidth@time,1
   694  0771  2F73               	goto	u261
   695  0772  2F74               	goto	u260
   696  0773                     u261:	
   697  0773  2F76               	goto	l62
   698  0774                     u260:	
   699  0774                     l790:	
   700                           
   701                           ;PWM.c: 28:         CCP2CONbits.DC2B1 = 1;
   702  0774  169D               	bsf	29,5	;volatile
   703                           
   704                           ;PWM.c: 29:     }else{
   705  0775  2F77               	goto	l792
   706  0776                     l62:	
   707                           
   708                           ;PWM.c: 30:         CCP2CONbits.DC2B1 = 0;
   709  0776  129D               	bcf	29,5	;volatile
   710  0777                     l792:	
   711                           
   712                           ;PWM.c: 32:     time = time & 0b11111100;
   713  0777  087C               	movf	setWidth@time,w
   714  0778  39FC               	andlw	252
   715  0779  00F9               	movwf	??_setWidth
   716  077A  0879               	movf	??_setWidth,w
   717  077B  00FC               	movwf	setWidth@time
   718  077C                     l794:	
   719                           
   720                           ;PWM.c: 33:     time = time/4;
   721  077C  3004               	movlw	4
   722  077D  00F0               	movwf	___awdiv@divisor
   723  077E  3000               	movlw	0
   724  077F  00F1               	movwf	___awdiv@divisor+1
   725  0780  087C               	movf	setWidth@time,w
   726  0781  00F9               	movwf	??_setWidth
   727  0782  01FA               	clrf	??_setWidth+1
   728  0783  0879               	movf	??_setWidth,w
   729  0784  00F2               	movwf	___awdiv@dividend
   730  0785  087A               	movf	??_setWidth+1,w
   731  0786  00F3               	movwf	___awdiv@dividend+1
   732  0787  120A  118A  2795  120A  118A  	fcall	___awdiv
   733  078C  0870               	movf	?___awdiv,w
   734  078D  00FB               	movwf	??_setWidth+2
   735  078E  087B               	movf	??_setWidth+2,w
   736  078F  00FC               	movwf	setWidth@time
   737  0790                     l796:	
   738                           
   739                           ;PWM.c: 34:     CCPR2L = time;
   740  0790  087C               	movf	setWidth@time,w
   741  0791  1283               	bcf	3,5	;RP0=0, select bank0
   742  0792  1303               	bcf	3,6	;RP1=0, select bank0
   743  0793  009B               	movwf	27	;volatile
   744  0794                     l64:	
   745  0794  0008               	return
   746  0795                     __end_of_setWidth:	
   747                           
   748                           	psect	text4
   749  0795                     __ptext4:	
   750 ;; *************** function ___awdiv *****************
   751 ;; Defined at:
   752 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\awdiv.c"
   753 ;; Parameters:    Size  Location     Type
   754 ;;  divisor         2    0[COMMON] int 
   755 ;;  dividend        2    2[COMMON] int 
   756 ;; Auto vars:     Size  Location     Type
   757 ;;  quotient        2    7[COMMON] int 
   758 ;;  sign            1    6[COMMON] unsigned char 
   759 ;;  counter         1    5[COMMON] unsigned char 
   760 ;; Return value:  Size  Location     Type
   761 ;;                  2    0[COMMON] int 
   762 ;; Registers used:
   763 ;;		wreg, status,2, status,0
   764 ;; Tracked objects:
   765 ;;		On entry : 0/0
   766 ;;		On exit  : 0/0
   767 ;;		Unchanged: 0/0
   768 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   769 ;;      Params:         4       0       0       0       0
   770 ;;      Locals:         4       0       0       0       0
   771 ;;      Temps:          1       0       0       0       0
   772 ;;      Totals:         9       0       0       0       0
   773 ;;Total ram usage:        9 bytes
   774 ;; Hardware stack levels used:    1
   775 ;; This function calls:
   776 ;;		Nothing
   777 ;; This function is called by:
   778 ;;		_setWidth
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function ___awdiv
   784  0795                     ___awdiv:	
   785  0795                     l742:	
   786                           ;incstack = 0
   787                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   788                           
   789  0795  01F6               	clrf	___awdiv@sign
   790  0796                     l744:	
   791  0796  1FF1               	btfss	___awdiv@divisor+1,7
   792  0797  2F99               	goto	u151
   793  0798  2F9A               	goto	u150
   794  0799                     u151:	
   795  0799  2FA1               	goto	l750
   796  079A                     u150:	
   797  079A                     l746:	
   798  079A  09F0               	comf	___awdiv@divisor,f
   799  079B  09F1               	comf	___awdiv@divisor+1,f
   800  079C  0AF0               	incf	___awdiv@divisor,f
   801  079D  1903               	skipnz
   802  079E  0AF1               	incf	___awdiv@divisor+1,f
   803  079F                     l748:	
   804  079F  01F6               	clrf	___awdiv@sign
   805  07A0  0AF6               	incf	___awdiv@sign,f
   806  07A1                     l750:	
   807  07A1  1FF3               	btfss	___awdiv@dividend+1,7
   808  07A2  2FA4               	goto	u161
   809  07A3  2FA5               	goto	u160
   810  07A4                     u161:	
   811  07A4  2FAE               	goto	l756
   812  07A5                     u160:	
   813  07A5                     l752:	
   814  07A5  09F2               	comf	___awdiv@dividend,f
   815  07A6  09F3               	comf	___awdiv@dividend+1,f
   816  07A7  0AF2               	incf	___awdiv@dividend,f
   817  07A8  1903               	skipnz
   818  07A9  0AF3               	incf	___awdiv@dividend+1,f
   819  07AA                     l754:	
   820  07AA  3001               	movlw	1
   821  07AB  00F4               	movwf	??___awdiv
   822  07AC  0874               	movf	??___awdiv,w
   823  07AD  06F6               	xorwf	___awdiv@sign,f
   824  07AE                     l756:	
   825  07AE  01F7               	clrf	___awdiv@quotient
   826  07AF  01F8               	clrf	___awdiv@quotient+1
   827  07B0                     l758:	
   828  07B0  0870               	movf	___awdiv@divisor,w
   829  07B1  0471               	iorwf	___awdiv@divisor+1,w
   830  07B2  1903               	btfsc	3,2
   831  07B3  2FB5               	goto	u171
   832  07B4  2FB6               	goto	u170
   833  07B5                     u171:	
   834  07B5  2FED               	goto	l778
   835  07B6                     u170:	
   836  07B6                     l760:	
   837  07B6  01F5               	clrf	___awdiv@counter
   838  07B7  0AF5               	incf	___awdiv@counter,f
   839  07B8  2FC4               	goto	l766
   840  07B9                     l762:	
   841  07B9  3001               	movlw	1
   842  07BA                     u185:	
   843  07BA  1003               	clrc
   844  07BB  0DF0               	rlf	___awdiv@divisor,f
   845  07BC  0DF1               	rlf	___awdiv@divisor+1,f
   846  07BD  3EFF               	addlw	-1
   847  07BE  1D03               	skipz
   848  07BF  2FBA               	goto	u185
   849  07C0                     l764:	
   850  07C0  3001               	movlw	1
   851  07C1  00F4               	movwf	??___awdiv
   852  07C2  0874               	movf	??___awdiv,w
   853  07C3  07F5               	addwf	___awdiv@counter,f
   854  07C4                     l766:	
   855  07C4  1FF1               	btfss	___awdiv@divisor+1,7
   856  07C5  2FC7               	goto	u191
   857  07C6  2FC8               	goto	u190
   858  07C7                     u191:	
   859  07C7  2FB9               	goto	l762
   860  07C8                     u190:	
   861  07C8                     l768:	
   862  07C8  3001               	movlw	1
   863  07C9                     u205:	
   864  07C9  1003               	clrc
   865  07CA  0DF7               	rlf	___awdiv@quotient,f
   866  07CB  0DF8               	rlf	___awdiv@quotient+1,f
   867  07CC  3EFF               	addlw	-1
   868  07CD  1D03               	skipz
   869  07CE  2FC9               	goto	u205
   870  07CF  0871               	movf	___awdiv@divisor+1,w
   871  07D0  0273               	subwf	___awdiv@dividend+1,w
   872  07D1  1D03               	skipz
   873  07D2  2FD5               	goto	u215
   874  07D3  0870               	movf	___awdiv@divisor,w
   875  07D4  0272               	subwf	___awdiv@dividend,w
   876  07D5                     u215:	
   877  07D5  1C03               	skipc
   878  07D6  2FD8               	goto	u211
   879  07D7  2FD9               	goto	u210
   880  07D8                     u211:	
   881  07D8  2FE0               	goto	l774
   882  07D9                     u210:	
   883  07D9                     l770:	
   884  07D9  0870               	movf	___awdiv@divisor,w
   885  07DA  02F2               	subwf	___awdiv@dividend,f
   886  07DB  0871               	movf	___awdiv@divisor+1,w
   887  07DC  1C03               	skipc
   888  07DD  03F3               	decf	___awdiv@dividend+1,f
   889  07DE  02F3               	subwf	___awdiv@dividend+1,f
   890  07DF                     l772:	
   891  07DF  1477               	bsf	___awdiv@quotient,0
   892  07E0                     l774:	
   893  07E0  3001               	movlw	1
   894  07E1                     u225:	
   895  07E1  1003               	clrc
   896  07E2  0CF1               	rrf	___awdiv@divisor+1,f
   897  07E3  0CF0               	rrf	___awdiv@divisor,f
   898  07E4  3EFF               	addlw	-1
   899  07E5  1D03               	skipz
   900  07E6  2FE1               	goto	u225
   901  07E7                     l776:	
   902  07E7  3001               	movlw	1
   903  07E8  02F5               	subwf	___awdiv@counter,f
   904  07E9  1D03               	btfss	3,2
   905  07EA  2FEC               	goto	u231
   906  07EB  2FED               	goto	u230
   907  07EC                     u231:	
   908  07EC  2FC8               	goto	l768
   909  07ED                     u230:	
   910  07ED                     l778:	
   911  07ED  0876               	movf	___awdiv@sign,w
   912  07EE  1903               	btfsc	3,2
   913  07EF  2FF1               	goto	u241
   914  07F0  2FF2               	goto	u240
   915  07F1                     u241:	
   916  07F1  2FF7               	goto	l782
   917  07F2                     u240:	
   918  07F2                     l780:	
   919  07F2  09F7               	comf	___awdiv@quotient,f
   920  07F3  09F8               	comf	___awdiv@quotient+1,f
   921  07F4  0AF7               	incf	___awdiv@quotient,f
   922  07F5  1903               	skipnz
   923  07F6  0AF8               	incf	___awdiv@quotient+1,f
   924  07F7                     l782:	
   925  07F7  0878               	movf	___awdiv@quotient+1,w
   926  07F8  00F1               	movwf	?___awdiv+1
   927  07F9  0877               	movf	___awdiv@quotient,w
   928  07FA  00F0               	movwf	?___awdiv
   929  07FB                     l303:	
   930  07FB  0008               	return
   931  07FC                     __end_of___awdiv:	
   932  007E                     btemp	set	126	;btemp
   933  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_setWidth
    _configPWM->_setWidth
    _setWidth->___awdiv

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1128
                           _setWidth
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     564
                          _configPWM
 ---------------------------------------------------------------------------------
 (2) _configPWM                                            0     0      0     564
                           _setWidth
 ---------------------------------------------------------------------------------
 (3) _setWidth                                             4     4      0     564
                                              9 COMMON     4     4      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     452
                                              0 COMMON     9     5      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setWidth
     ___awdiv
   _setup
     _configPWM
       _setWidth
         ___awdiv

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Feb 29 23:25:38 2020

             __CFG_CP$OFF 0000                        l60 076D                        l61 0770  
                      l37 0728                        l62 0776                        l54 075C  
                      l64 0794                        l56 0760                        l57 0763  
            ___awdiv@sign 0076                       l303 07FB                       l800 0748  
                     l810 075B                       l802 074A                       l804 0750  
                     l812 070E                       l820 0729                       l750 07A1  
                     l742 0795                       l806 0756                       l814 071A  
                     l822 072E                       l760 07B6                       l752 07A5  
                     l744 0796                       l808 0759                       l816 0720  
                     l824 0734                       l770 07D9                       l762 07B9  
                     l754 07AA                       l746 079A                       l818 0725  
                     l826 073B                       l780 07F2                       l772 07DF  
                     l764 07C0                       l756 07AE                       l748 079F  
                     l782 07F7                       l774 07E0                       l766 07C4  
                     l758 07B0                       l790 0774                       l776 07E7  
                     l768 07C8                       l792 0777                       l778 07ED  
                     l794 077C                       l786 0765                       l796 0790  
                     l788 0769                       l798 0745                       u210 07D9  
                     u211 07D8                       u205 07C9                       u230 07ED  
                     u150 079A                       u231 07EC                       u215 07D5  
                     u151 0799                       u240 07F2                       u160 07A5  
                     u241 07F1                       u225 07E1                       u161 07A4  
                     u170 07B6                       u250 0769                       u171 07B5  
                     u251 0768                       u260 0774                       u261 0773  
                     u190 07C8                       u270 0760                       _PR2 0092  
                     u191 07C7                       u271 075F                       u280 0734  
                     u185 07BA                       u281 0733              __CFG_CPD$OFF 0000  
            __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000                      _main 0729  
                    btemp 007E                      start 0000             __CFG_IESO$OFF 0000  
                   ?_main 0070           __end_of___awdiv 07FC             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188           ___awdiv@divisor 0070           ___awdiv@counter 0075  
                   _PORTB 0006                     _PORTD 0008                     _TRISB 0086  
                   _TRISD 0088            __CFG_FCMEN$OFF 0000                     _setup 070E  
          __CFG_BOREN$OFF 0000                     status 0003                     wtemp0 007E  
          __CFG_MCLRE$OFF 0000           __initialization 07FC              __end_of_main 0745  
                  ??_main 007D                    _CCPR2L 001B          ___awdiv@dividend 0072  
                  ?_setup 0070                    _ANSELH 0189            __CFG_PWRTE$OFF 0000  
               ??___awdiv 0074          ___awdiv@quotient 0077          __end_of_setWidth 0795  
 __end_of__initialization 07FC            __pcstackCOMMON 0070             __end_of_setup 0729  
      __size_of_configPWM 001F                   ??_setup 007D                __pmaintext 0729  
               ?_setWidth 0070         __end_of_configPWM 0764                   ___awdiv 0795  
                 __ptext1 070E                   __ptext2 0745                   __ptext3 0764  
                 __ptext4 0795                 _T2CONbits 0012      end_of_initialization 07FC  
              ??_setWidth 0079                 _PORTAbits 0005                 _TRISAbits 0085  
               _TRISCbits 0087               _CCP2CONbits 001D       start_initialization 07FC  
__CFG_FOSC$INTRC_NOCLKOUT 0000                 ___latbits 0002                  ?___awdiv 0070  
       __size_of_setWidth 0031                 _configPWM 0745            __size_of_setup 001B  
                _PIR1bits 000C                ?_configPWM 0070              setWidth@time 007C  
        __size_of___awdiv 0067         __CFG_BOR4V$BOR40V 0000             __size_of_main 001C  
                _setWidth 0764               ??_configPWM 007D                _OSCCONbits 008F  
